/*! For license information please see bundle.js.LICENSE.txt */
!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.bs_dt_demo=e():t.bs_dt_demo=e()}(self,(function(){return(()=>{var t={661:t=>{self,t.exports=(()=>{var t={661:()=>{String.prototype.toCamalCase=function(){return this.replace(/(?:^\w|[A-Z]|\b\w)/g,(function(t,e){return 0===e?t.toLowerCase():t.toUpperCase()})).replace(/\s+/g,"")},String.prototype.toPascalCase=function(){return this.replace(/(?:^\w|[A-Z]|\b\w)/g,(function(t,e){return 0===e?t.toUpperCase():t.toLowerCase()})).replace(/\s+/g,"")},String.prototype.toPascalCaseJson=function(){return this.replace(/(?:^\w|[A-Z]|\b\w)/g,(function(t,e){return 0===e?t.toUpperCase():t})).replace(/\s+/g,"")},String.prototype.format||(String.prototype.format=function(){var t=arguments;return this.replace(/{(\d+)}/g,(function(e,n){return void 0!==t[n]?t[n]:e}))})}},e={};function n(o){var i=e[o];if(void 0!==i)return i.exports;var r=e[o]={exports:{}};return t[o](r,r.exports,n),r.exports}n.d=(t,e)=>{for(var o in e)n.o(e,o)&&!n.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var o={};return(()=>{"use strict";n.r(o),n.d(o,{BSDataTable:()=>Bi,BSDataTableActions:()=>Di,BSDataTableBase:()=>Wo,BSDataTableBody:()=>Li,BSDataTableButton:()=>ri,BSDataTableCell:()=>pi,BSDataTableCheckBox:()=>Qo,BSDataTableHeader:()=>Ri,BSDataTableHttpClient:()=>mi,BSDataTableInfiniteScroll:()=>Ei,BSDataTableInput:()=>Xo,BSDataTableMarker:()=>Ai,BSDataTablePagination:()=>bi,BSDataTablePagingMetaData:()=>hi,BSDataTableRow:()=>Si,BSDataTableRowCollection:()=>xi,BSDataTableSelect:()=>ei,BSDataTableSelectOption:()=>Zo,BSDataTableSelector:()=>li,BSDataTableSelectorWindow:()=>ai,BSDataTableSelectorWindowCollection:()=>Hi,BSDataTableTextInput:()=>oi,BSDataTableTextInputExt:()=>Wi,BSFluentBuilder:()=>Gi,CookieHelper:()=>Uo,SessionStorageService:()=>Vo,appActions:()=>Fo,appDataEvents:()=>zo,bsDataTableDiscoveryService:()=>$o,dataEventsService:()=>qo});var t={};n.r(t),n.d(t,{afterMain:()=>w,afterRead:()=>b,afterWrite:()=>D,applyStyles:()=>I,arrow:()=>Y,auto:()=>a,basePlacements:()=>c,beforeMain:()=>y,beforeRead:()=>_,beforeWrite:()=>A,bottom:()=>i,clippingParents:()=>u,computeStyles:()=>tt,createPopper:()=>xt,createPopperBase:()=>Tt,createPopperLite:()=>Nt,detectOverflow:()=>mt,end:()=>d,eventListeners:()=>nt,flip:()=>gt,hide:()=>bt,left:()=>s,main:()=>E,modifierPhases:()=>O,offset:()=>yt,placements:()=>g,popper:()=>h,popperGenerator:()=>St,popperOffsets:()=>Et,preventOverflow:()=>wt,read:()=>v,reference:()=>f,right:()=>r,start:()=>l,top:()=>e,variationPlacements:()=>m,viewport:()=>p,write:()=>C});var e="top",i="bottom",r="right",s="left",a="auto",c=[e,i,r,s],l="start",d="end",u="clippingParents",p="viewport",h="popper",f="reference",m=c.reduce((function(t,e){return t.concat([e+"-"+l,e+"-"+d])}),[]),g=[].concat(c,[a]).reduce((function(t,e){return t.concat([e,e+"-"+l,e+"-"+d])}),[]),_="beforeRead",v="read",b="afterRead",y="beforeMain",E="main",w="afterMain",A="beforeWrite",C="write",D="afterWrite",O=[_,v,b,y,E,w,A,C,D];function S(t){return t?(t.nodeName||"").toLowerCase():null}function T(t){if(null==t)return window;if("[object Window]"!==t.toString()){var e=t.ownerDocument;return e&&e.defaultView||window}return t}function x(t){return t instanceof T(t).Element||t instanceof Element}function N(t){return t instanceof T(t).HTMLElement||t instanceof HTMLElement}function R(t){return"undefined"!=typeof ShadowRoot&&(t instanceof T(t).ShadowRoot||t instanceof ShadowRoot)}const I={name:"applyStyles",enabled:!0,phase:"write",fn:function(t){var e=t.state;Object.keys(e.elements).forEach((function(t){var n=e.styles[t]||{},o=e.attributes[t]||{},i=e.elements[t];N(i)&&S(i)&&(Object.assign(i.style,n),Object.keys(o).forEach((function(t){var e=o[t];!1===e?i.removeAttribute(t):i.setAttribute(t,!0===e?"":e)})))}))},effect:function(t){var e=t.state,n={popper:{position:e.options.strategy,left:"0",top:"0",margin:"0"},arrow:{position:"absolute"},reference:{}};return Object.assign(e.elements.popper.style,n.popper),e.styles=n,e.elements.arrow&&Object.assign(e.elements.arrow.style,n.arrow),function(){Object.keys(e.elements).forEach((function(t){var o=e.elements[t],i=e.attributes[t]||{},r=Object.keys(e.styles.hasOwnProperty(t)?e.styles[t]:n[t]).reduce((function(t,e){return t[e]="",t}),{});N(o)&&S(o)&&(Object.assign(o.style,r),Object.keys(i).forEach((function(t){o.removeAttribute(t)})))}))}},requires:["computeStyles"]};function L(t){return t.split("-")[0]}var k=Math.max,P=Math.min,B=Math.round;function j(t,e){void 0===e&&(e=!1);var n=t.getBoundingClientRect(),o=1,i=1;if(N(t)&&e){var r=t.offsetHeight,s=t.offsetWidth;s>0&&(o=B(n.width)/s||1),r>0&&(i=B(n.height)/r||1)}return{width:n.width/o,height:n.height/i,top:n.top/i,right:n.right/o,bottom:n.bottom/i,left:n.left/o,x:n.left/o,y:n.top/i}}function H(t){var e=j(t),n=t.offsetWidth,o=t.offsetHeight;return Math.abs(e.width-n)<=1&&(n=e.width),Math.abs(e.height-o)<=1&&(o=e.height),{x:t.offsetLeft,y:t.offsetTop,width:n,height:o}}function M(t,e){var n=e.getRootNode&&e.getRootNode();if(t.contains(e))return!0;if(n&&R(n)){var o=e;do{if(o&&t.isSameNode(o))return!0;o=o.parentNode||o.host}while(o)}return!1}function W(t){return T(t).getComputedStyle(t)}function G(t){return["table","td","th"].indexOf(S(t))>=0}function U(t){return((x(t)?t.ownerDocument:t.document)||window.document).documentElement}function F(t){return"html"===S(t)?t:t.assignedSlot||t.parentNode||(R(t)?t.host:null)||U(t)}function z(t){return N(t)&&"fixed"!==W(t).position?t.offsetParent:null}function q(t){for(var e=T(t),n=z(t);n&&G(n)&&"static"===W(n).position;)n=z(n);return n&&("html"===S(n)||"body"===S(n)&&"static"===W(n).position)?e:n||function(t){var e=-1!==navigator.userAgent.toLowerCase().indexOf("firefox");if(-1!==navigator.userAgent.indexOf("Trident")&&N(t)&&"fixed"===W(t).position)return null;for(var n=F(t);N(n)&&["html","body"].indexOf(S(n))<0;){var o=W(n);if("none"!==o.transform||"none"!==o.perspective||"paint"===o.contain||-1!==["transform","perspective"].indexOf(o.willChange)||e&&"filter"===o.willChange||e&&o.filter&&"none"!==o.filter)return n;n=n.parentNode}return null}(t)||e}function V(t){return["top","bottom"].indexOf(t)>=0?"x":"y"}function $(t,e,n){return k(t,P(e,n))}function K(t){return Object.assign({},{top:0,right:0,bottom:0,left:0},t)}function X(t,e){return e.reduce((function(e,n){return e[n]=t,e}),{})}const Y={name:"arrow",enabled:!0,phase:"main",fn:function(t){var n,o=t.state,a=t.name,l=t.options,d=o.elements.arrow,u=o.modifiersData.popperOffsets,p=L(o.placement),h=V(p),f=[s,r].indexOf(p)>=0?"height":"width";if(d&&u){var m=function(t,e){return K("number"!=typeof(t="function"==typeof t?t(Object.assign({},e.rects,{placement:e.placement})):t)?t:X(t,c))}(l.padding,o),g=H(d),_="y"===h?e:s,v="y"===h?i:r,b=o.rects.reference[f]+o.rects.reference[h]-u[h]-o.rects.popper[f],y=u[h]-o.rects.reference[h],E=q(d),w=E?"y"===h?E.clientHeight||0:E.clientWidth||0:0,A=b/2-y/2,C=m[_],D=w-g[f]-m[v],O=w/2-g[f]/2+A,S=$(C,O,D),T=h;o.modifiersData[a]=((n={})[T]=S,n.centerOffset=S-O,n)}},effect:function(t){var e=t.state,n=t.options.element,o=void 0===n?"[data-popper-arrow]":n;null!=o&&("string"!=typeof o||(o=e.elements.popper.querySelector(o)))&&M(e.elements.popper,o)&&(e.elements.arrow=o)},requires:["popperOffsets"],requiresIfExists:["preventOverflow"]};function Q(t){return t.split("-")[1]}var J={top:"auto",right:"auto",bottom:"auto",left:"auto"};function Z(t){var n,o=t.popper,a=t.popperRect,c=t.placement,l=t.variation,u=t.offsets,p=t.position,h=t.gpuAcceleration,f=t.adaptive,m=t.roundOffsets,g=t.isFixed,_=u.x,v=void 0===_?0:_,b=u.y,y=void 0===b?0:b,E="function"==typeof m?m({x:v,y}):{x:v,y};v=E.x,y=E.y;var w=u.hasOwnProperty("x"),A=u.hasOwnProperty("y"),C=s,D=e,O=window;if(f){var S=q(o),x="clientHeight",N="clientWidth";S===T(o)&&"static"!==W(S=U(o)).position&&"absolute"===p&&(x="scrollHeight",N="scrollWidth"),S=S,(c===e||(c===s||c===r)&&l===d)&&(D=i,y-=(g&&O.visualViewport?O.visualViewport.height:S[x])-a.height,y*=h?1:-1),c!==s&&(c!==e&&c!==i||l!==d)||(C=r,v-=(g&&O.visualViewport?O.visualViewport.width:S[N])-a.width,v*=h?1:-1)}var R,I=Object.assign({position:p},f&&J),L=!0===m?function(t){var e=t.x,n=t.y,o=window.devicePixelRatio||1;return{x:B(e*o)/o||0,y:B(n*o)/o||0}}({x:v,y}):{x:v,y};return v=L.x,y=L.y,h?Object.assign({},I,((R={})[D]=A?"0":"",R[C]=w?"0":"",R.transform=(O.devicePixelRatio||1)<=1?"translate("+v+"px, "+y+"px)":"translate3d("+v+"px, "+y+"px, 0)",R)):Object.assign({},I,((n={})[D]=A?y+"px":"",n[C]=w?v+"px":"",n.transform="",n))}const tt={name:"computeStyles",enabled:!0,phase:"beforeWrite",fn:function(t){var e=t.state,n=t.options,o=n.gpuAcceleration,i=void 0===o||o,r=n.adaptive,s=void 0===r||r,a=n.roundOffsets,c=void 0===a||a,l={placement:L(e.placement),variation:Q(e.placement),popper:e.elements.popper,popperRect:e.rects.popper,gpuAcceleration:i,isFixed:"fixed"===e.options.strategy};null!=e.modifiersData.popperOffsets&&(e.styles.popper=Object.assign({},e.styles.popper,Z(Object.assign({},l,{offsets:e.modifiersData.popperOffsets,position:e.options.strategy,adaptive:s,roundOffsets:c})))),null!=e.modifiersData.arrow&&(e.styles.arrow=Object.assign({},e.styles.arrow,Z(Object.assign({},l,{offsets:e.modifiersData.arrow,position:"absolute",adaptive:!1,roundOffsets:c})))),e.attributes.popper=Object.assign({},e.attributes.popper,{"data-popper-placement":e.placement})},data:{}};var et={passive:!0};const nt={name:"eventListeners",enabled:!0,phase:"write",fn:function(){},effect:function(t){var e=t.state,n=t.instance,o=t.options,i=o.scroll,r=void 0===i||i,s=o.resize,a=void 0===s||s,c=T(e.elements.popper),l=[].concat(e.scrollParents.reference,e.scrollParents.popper);return r&&l.forEach((function(t){t.addEventListener("scroll",n.update,et)})),a&&c.addEventListener("resize",n.update,et),function(){r&&l.forEach((function(t){t.removeEventListener("scroll",n.update,et)})),a&&c.removeEventListener("resize",n.update,et)}},data:{}};var ot={left:"right",right:"left",bottom:"top",top:"bottom"};function it(t){return t.replace(/left|right|bottom|top/g,(function(t){return ot[t]}))}var rt={start:"end",end:"start"};function st(t){return t.replace(/start|end/g,(function(t){return rt[t]}))}function at(t){var e=T(t);return{scrollLeft:e.pageXOffset,scrollTop:e.pageYOffset}}function ct(t){return j(U(t)).left+at(t).scrollLeft}function lt(t){var e=W(t),n=e.overflow,o=e.overflowX,i=e.overflowY;return/auto|scroll|overlay|hidden/.test(n+i+o)}function dt(t){return["html","body","#document"].indexOf(S(t))>=0?t.ownerDocument.body:N(t)&&lt(t)?t:dt(F(t))}function ut(t,e){var n;void 0===e&&(e=[]);var o=dt(t),i=o===(null==(n=t.ownerDocument)?void 0:n.body),r=T(o),s=i?[r].concat(r.visualViewport||[],lt(o)?o:[]):o,a=e.concat(s);return i?a:a.concat(ut(F(s)))}function pt(t){return Object.assign({},t,{left:t.x,top:t.y,right:t.x+t.width,bottom:t.y+t.height})}function ht(t,e){return e===p?pt(function(t){var e=T(t),n=U(t),o=e.visualViewport,i=n.clientWidth,r=n.clientHeight,s=0,a=0;return o&&(i=o.width,r=o.height,/^((?!chrome|android).)*safari/i.test(navigator.userAgent)||(s=o.offsetLeft,a=o.offsetTop)),{width:i,height:r,x:s+ct(t),y:a}}(t)):x(e)?function(t){var e=j(t);return e.top=e.top+t.clientTop,e.left=e.left+t.clientLeft,e.bottom=e.top+t.clientHeight,e.right=e.left+t.clientWidth,e.width=t.clientWidth,e.height=t.clientHeight,e.x=e.left,e.y=e.top,e}(e):pt(function(t){var e,n=U(t),o=at(t),i=null==(e=t.ownerDocument)?void 0:e.body,r=k(n.scrollWidth,n.clientWidth,i?i.scrollWidth:0,i?i.clientWidth:0),s=k(n.scrollHeight,n.clientHeight,i?i.scrollHeight:0,i?i.clientHeight:0),a=-o.scrollLeft+ct(t),c=-o.scrollTop;return"rtl"===W(i||n).direction&&(a+=k(n.clientWidth,i?i.clientWidth:0)-r),{width:r,height:s,x:a,y:c}}(U(t)))}function ft(t){var n,o=t.reference,a=t.element,c=t.placement,u=c?L(c):null,p=c?Q(c):null,h=o.x+o.width/2-a.width/2,f=o.y+o.height/2-a.height/2;switch(u){case e:n={x:h,y:o.y-a.height};break;case i:n={x:h,y:o.y+o.height};break;case r:n={x:o.x+o.width,y:f};break;case s:n={x:o.x-a.width,y:f};break;default:n={x:o.x,y:o.y}}var m=u?V(u):null;if(null!=m){var g="y"===m?"height":"width";switch(p){case l:n[m]=n[m]-(o[g]/2-a[g]/2);break;case d:n[m]=n[m]+(o[g]/2-a[g]/2)}}return n}function mt(t,n){void 0===n&&(n={});var o=n,s=o.placement,a=void 0===s?t.placement:s,l=o.boundary,d=void 0===l?u:l,m=o.rootBoundary,g=void 0===m?p:m,_=o.elementContext,v=void 0===_?h:_,b=o.altBoundary,y=void 0!==b&&b,E=o.padding,w=void 0===E?0:E,A=K("number"!=typeof w?w:X(w,c)),C=v===h?f:h,D=t.rects.popper,O=t.elements[y?C:v],T=function(t,e,n){var o="clippingParents"===e?function(t){var e=ut(F(t)),n=["absolute","fixed"].indexOf(W(t).position)>=0&&N(t)?q(t):t;return x(n)?e.filter((function(t){return x(t)&&M(t,n)&&"body"!==S(t)})):[]}(t):[].concat(e),i=[].concat(o,[n]),r=i[0],s=i.reduce((function(e,n){var o=ht(t,n);return e.top=k(o.top,e.top),e.right=P(o.right,e.right),e.bottom=P(o.bottom,e.bottom),e.left=k(o.left,e.left),e}),ht(t,r));return s.width=s.right-s.left,s.height=s.bottom-s.top,s.x=s.left,s.y=s.top,s}(x(O)?O:O.contextElement||U(t.elements.popper),d,g),R=j(t.elements.reference),I=ft({reference:R,element:D,strategy:"absolute",placement:a}),L=pt(Object.assign({},D,I)),B=v===h?L:R,H={top:T.top-B.top+A.top,bottom:B.bottom-T.bottom+A.bottom,left:T.left-B.left+A.left,right:B.right-T.right+A.right},G=t.modifiersData.offset;if(v===h&&G){var z=G[a];Object.keys(H).forEach((function(t){var n=[r,i].indexOf(t)>=0?1:-1,o=[e,i].indexOf(t)>=0?"y":"x";H[t]+=z[o]*n}))}return H}const gt={name:"flip",enabled:!0,phase:"main",fn:function(t){var n=t.state,o=t.options,d=t.name;if(!n.modifiersData[d]._skip){for(var u=o.mainAxis,p=void 0===u||u,h=o.altAxis,f=void 0===h||h,_=o.fallbackPlacements,v=o.padding,b=o.boundary,y=o.rootBoundary,E=o.altBoundary,w=o.flipVariations,A=void 0===w||w,C=o.allowedAutoPlacements,D=n.options.placement,O=L(D),S=_||(O!==D&&A?function(t){if(L(t)===a)return[];var e=it(t);return[st(t),e,st(e)]}(D):[it(D)]),T=[D].concat(S).reduce((function(t,e){return t.concat(L(e)===a?function(t,e){void 0===e&&(e={});var n=e,o=n.placement,i=n.boundary,r=n.rootBoundary,s=n.padding,a=n.flipVariations,l=n.allowedAutoPlacements,d=void 0===l?g:l,u=Q(o),p=u?a?m:m.filter((function(t){return Q(t)===u})):c,h=p.filter((function(t){return d.indexOf(t)>=0}));0===h.length&&(h=p);var f=h.reduce((function(e,n){return e[n]=mt(t,{placement:n,boundary:i,rootBoundary:r,padding:s})[L(n)],e}),{});return Object.keys(f).sort((function(t,e){return f[t]-f[e]}))}(n,{placement:e,boundary:b,rootBoundary:y,padding:v,flipVariations:A,allowedAutoPlacements:C}):e)}),[]),x=n.rects.reference,N=n.rects.popper,R=new Map,I=!0,k=T[0],P=0;P<T.length;P++){var B=T[P],j=L(B),H=Q(B)===l,M=[e,i].indexOf(j)>=0,W=M?"width":"height",G=mt(n,{placement:B,boundary:b,rootBoundary:y,altBoundary:E,padding:v}),U=M?H?r:s:H?i:e;x[W]>N[W]&&(U=it(U));var F=it(U),z=[];if(p&&z.push(G[j]<=0),f&&z.push(G[U]<=0,G[F]<=0),z.every((function(t){return t}))){k=B,I=!1;break}R.set(B,z)}if(I)for(var q=function(t){var e=T.find((function(e){var n=R.get(e);if(n)return n.slice(0,t).every((function(t){return t}))}));if(e)return k=e,"break"},V=A?3:1;V>0&&"break"!==q(V);V--);n.placement!==k&&(n.modifiersData[d]._skip=!0,n.placement=k,n.reset=!0)}},requiresIfExists:["offset"],data:{_skip:!1}};function _t(t,e,n){return void 0===n&&(n={x:0,y:0}),{top:t.top-e.height-n.y,right:t.right-e.width+n.x,bottom:t.bottom-e.height+n.y,left:t.left-e.width-n.x}}function vt(t){return[e,r,i,s].some((function(e){return t[e]>=0}))}const bt={name:"hide",enabled:!0,phase:"main",requiresIfExists:["preventOverflow"],fn:function(t){var e=t.state,n=t.name,o=e.rects.reference,i=e.rects.popper,r=e.modifiersData.preventOverflow,s=mt(e,{elementContext:"reference"}),a=mt(e,{altBoundary:!0}),c=_t(s,o),l=_t(a,i,r),d=vt(c),u=vt(l);e.modifiersData[n]={referenceClippingOffsets:c,popperEscapeOffsets:l,isReferenceHidden:d,hasPopperEscaped:u},e.attributes.popper=Object.assign({},e.attributes.popper,{"data-popper-reference-hidden":d,"data-popper-escaped":u})}},yt={name:"offset",enabled:!0,phase:"main",requires:["popperOffsets"],fn:function(t){var n=t.state,o=t.options,i=t.name,a=o.offset,c=void 0===a?[0,0]:a,l=g.reduce((function(t,o){return t[o]=function(t,n,o){var i=L(t),a=[s,e].indexOf(i)>=0?-1:1,c="function"==typeof o?o(Object.assign({},n,{placement:t})):o,l=c[0],d=c[1];return l=l||0,d=(d||0)*a,[s,r].indexOf(i)>=0?{x:d,y:l}:{x:l,y:d}}(o,n.rects,c),t}),{}),d=l[n.placement],u=d.x,p=d.y;null!=n.modifiersData.popperOffsets&&(n.modifiersData.popperOffsets.x+=u,n.modifiersData.popperOffsets.y+=p),n.modifiersData[i]=l}},Et={name:"popperOffsets",enabled:!0,phase:"read",fn:function(t){var e=t.state,n=t.name;e.modifiersData[n]=ft({reference:e.rects.reference,element:e.rects.popper,strategy:"absolute",placement:e.placement})},data:{}},wt={name:"preventOverflow",enabled:!0,phase:"main",fn:function(t){var n=t.state,o=t.options,a=t.name,c=o.mainAxis,d=void 0===c||c,u=o.altAxis,p=void 0!==u&&u,h=o.boundary,f=o.rootBoundary,m=o.altBoundary,g=o.padding,_=o.tether,v=void 0===_||_,b=o.tetherOffset,y=void 0===b?0:b,E=mt(n,{boundary:h,rootBoundary:f,padding:g,altBoundary:m}),w=L(n.placement),A=Q(n.placement),C=!A,D=V(w),O="x"===D?"y":"x",S=n.modifiersData.popperOffsets,T=n.rects.reference,x=n.rects.popper,N="function"==typeof y?y(Object.assign({},n.rects,{placement:n.placement})):y,R="number"==typeof N?{mainAxis:N,altAxis:N}:Object.assign({mainAxis:0,altAxis:0},N),I=n.modifiersData.offset?n.modifiersData.offset[n.placement]:null,B={x:0,y:0};if(S){if(d){var j,M="y"===D?e:s,W="y"===D?i:r,G="y"===D?"height":"width",U=S[D],F=U+E[M],z=U-E[W],K=v?-x[G]/2:0,X=A===l?T[G]:x[G],Y=A===l?-x[G]:-T[G],J=n.elements.arrow,Z=v&&J?H(J):{width:0,height:0},tt=n.modifiersData["arrow#persistent"]?n.modifiersData["arrow#persistent"].padding:{top:0,right:0,bottom:0,left:0},et=tt[M],nt=tt[W],ot=$(0,T[G],Z[G]),it=C?T[G]/2-K-ot-et-R.mainAxis:X-ot-et-R.mainAxis,rt=C?-T[G]/2+K+ot+nt+R.mainAxis:Y+ot+nt+R.mainAxis,st=n.elements.arrow&&q(n.elements.arrow),at=st?"y"===D?st.clientTop||0:st.clientLeft||0:0,ct=null!=(j=null==I?void 0:I[D])?j:0,lt=U+rt-ct,dt=$(v?P(F,U+it-ct-at):F,U,v?k(z,lt):z);S[D]=dt,B[D]=dt-U}if(p){var ut,pt="x"===D?e:s,ht="x"===D?i:r,ft=S[O],gt="y"===O?"height":"width",_t=ft+E[pt],vt=ft-E[ht],bt=-1!==[e,s].indexOf(w),yt=null!=(ut=null==I?void 0:I[O])?ut:0,Et=bt?_t:ft-T[gt]-x[gt]-yt+R.altAxis,wt=bt?ft+T[gt]+x[gt]-yt-R.altAxis:vt,At=v&&bt?function(t,e,n){var o=$(t,e,n);return o>n?n:o}(Et,ft,wt):$(v?Et:_t,ft,v?wt:vt);S[O]=At,B[O]=At-ft}n.modifiersData[a]=B}},requiresIfExists:["offset"]};function At(t,e,n){void 0===n&&(n=!1);var o,i,r=N(e),s=N(e)&&function(t){var e=t.getBoundingClientRect(),n=B(e.width)/t.offsetWidth||1,o=B(e.height)/t.offsetHeight||1;return 1!==n||1!==o}(e),a=U(e),c=j(t,s),l={scrollLeft:0,scrollTop:0},d={x:0,y:0};return(r||!r&&!n)&&(("body"!==S(e)||lt(a))&&(l=(o=e)!==T(o)&&N(o)?{scrollLeft:(i=o).scrollLeft,scrollTop:i.scrollTop}:at(o)),N(e)?((d=j(e,!0)).x+=e.clientLeft,d.y+=e.clientTop):a&&(d.x=ct(a))),{x:c.left+l.scrollLeft-d.x,y:c.top+l.scrollTop-d.y,width:c.width,height:c.height}}function Ct(t){var e=new Map,n=new Set,o=[];function i(t){n.add(t.name),[].concat(t.requires||[],t.requiresIfExists||[]).forEach((function(t){if(!n.has(t)){var o=e.get(t);o&&i(o)}})),o.push(t)}return t.forEach((function(t){e.set(t.name,t)})),t.forEach((function(t){n.has(t.name)||i(t)})),o}var Dt={placement:"bottom",modifiers:[],strategy:"absolute"};function Ot(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];return!e.some((function(t){return!(t&&"function"==typeof t.getBoundingClientRect)}))}function St(t){void 0===t&&(t={});var e=t,n=e.defaultModifiers,o=void 0===n?[]:n,i=e.defaultOptions,r=void 0===i?Dt:i;return function(t,e,n){void 0===n&&(n=r);var i,s,a={placement:"bottom",orderedModifiers:[],options:Object.assign({},Dt,r),modifiersData:{},elements:{reference:t,popper:e},attributes:{},styles:{}},c=[],l=!1,d={state:a,setOptions:function(n){var i="function"==typeof n?n(a.options):n;u(),a.options=Object.assign({},r,a.options,i),a.scrollParents={reference:x(t)?ut(t):t.contextElement?ut(t.contextElement):[],popper:ut(e)};var s,l,p=function(t){var e=Ct(t);return O.reduce((function(t,n){return t.concat(e.filter((function(t){return t.phase===n})))}),[])}((s=[].concat(o,a.options.modifiers),l=s.reduce((function(t,e){var n=t[e.name];return t[e.name]=n?Object.assign({},n,e,{options:Object.assign({},n.options,e.options),data:Object.assign({},n.data,e.data)}):e,t}),{}),Object.keys(l).map((function(t){return l[t]}))));return a.orderedModifiers=p.filter((function(t){return t.enabled})),a.orderedModifiers.forEach((function(t){var e=t.name,n=t.options,o=void 0===n?{}:n,i=t.effect;if("function"==typeof i){var r=i({state:a,name:e,instance:d,options:o});c.push(r||function(){})}})),d.update()},forceUpdate:function(){if(!l){var t=a.elements,e=t.reference,n=t.popper;if(Ot(e,n)){a.rects={reference:At(e,q(n),"fixed"===a.options.strategy),popper:H(n)},a.reset=!1,a.placement=a.options.placement,a.orderedModifiers.forEach((function(t){return a.modifiersData[t.name]=Object.assign({},t.data)}));for(var o=0;o<a.orderedModifiers.length;o++)if(!0!==a.reset){var i=a.orderedModifiers[o],r=i.fn,s=i.options,c=void 0===s?{}:s,u=i.name;"function"==typeof r&&(a=r({state:a,options:c,name:u,instance:d})||a)}else a.reset=!1,o=-1}}},update:(i=function(){return new Promise((function(t){d.forceUpdate(),t(a)}))},function(){return s||(s=new Promise((function(t){Promise.resolve().then((function(){s=void 0,t(i())}))}))),s}),destroy:function(){u(),l=!0}};if(!Ot(t,e))return d;function u(){c.forEach((function(t){return t()})),c=[]}return d.setOptions(n).then((function(t){!l&&n.onFirstUpdate&&n.onFirstUpdate(t)})),d}}var Tt=St(),xt=St({defaultModifiers:[nt,Et,tt,I,yt,gt,wt,Y,bt]}),Nt=St({defaultModifiers:[nt,Et,tt,I]});const Rt="transitionend",It=t=>{let e=t.getAttribute("data-bs-target");if(!e||"#"===e){let n=t.getAttribute("href");if(!n||!n.includes("#")&&!n.startsWith("."))return null;n.includes("#")&&!n.startsWith("#")&&(n=`#${n.split("#")[1]}`),e=n&&"#"!==n?n.trim():null}return e},Lt=t=>{const e=It(t);return e&&document.querySelector(e)?e:null},kt=t=>{const e=It(t);return e?document.querySelector(e):null},Pt=t=>{t.dispatchEvent(new Event(Rt))},Bt=t=>!(!t||"object"!=typeof t)&&(void 0!==t.jquery&&(t=t[0]),void 0!==t.nodeType),jt=t=>Bt(t)?t.jquery?t[0]:t:"string"==typeof t&&t.length>0?document.querySelector(t):null,Ht=(t,e,n)=>{Object.keys(n).forEach((o=>{const i=n[o],r=e[o],s=r&&Bt(r)?"element":null==(a=r)?`${a}`:{}.toString.call(a).match(/\s([a-z]+)/i)[1].toLowerCase();var a;if(!new RegExp(i).test(s))throw new TypeError(`${t.toUpperCase()}: Option "${o}" provided type "${s}" but expected type "${i}".`)}))},Mt=t=>!(!Bt(t)||0===t.getClientRects().length)&&"visible"===getComputedStyle(t).getPropertyValue("visibility"),Wt=t=>!t||t.nodeType!==Node.ELEMENT_NODE||!!t.classList.contains("disabled")||(void 0!==t.disabled?t.disabled:t.hasAttribute("disabled")&&"false"!==t.getAttribute("disabled")),Gt=t=>{if(!document.documentElement.attachShadow)return null;if("function"==typeof t.getRootNode){const e=t.getRootNode();return e instanceof ShadowRoot?e:null}return t instanceof ShadowRoot?t:t.parentNode?Gt(t.parentNode):null},Ut=()=>{},Ft=t=>{t.offsetHeight},zt=()=>{const{jQuery:t}=window;return t&&!document.body.hasAttribute("data-bs-no-jquery")?t:null},qt=[],Vt=()=>"rtl"===document.documentElement.dir,$t=t=>{var e;e=()=>{const e=zt();if(e){const n=t.NAME,o=e.fn[n];e.fn[n]=t.jQueryInterface,e.fn[n].Constructor=t,e.fn[n].noConflict=()=>(e.fn[n]=o,t.jQueryInterface)}},"loading"===document.readyState?(qt.length||document.addEventListener("DOMContentLoaded",(()=>{qt.forEach((t=>t()))})),qt.push(e)):e()},Kt=t=>{"function"==typeof t&&t()},Xt=(t,e,n=!0)=>{if(!n)return void Kt(t);const o=(t=>{if(!t)return 0;let{transitionDuration:e,transitionDelay:n}=window.getComputedStyle(t);const o=Number.parseFloat(e),i=Number.parseFloat(n);return o||i?(e=e.split(",")[0],n=n.split(",")[0],1e3*(Number.parseFloat(e)+Number.parseFloat(n))):0})(e)+5;let i=!1;const r=({target:n})=>{n===e&&(i=!0,e.removeEventListener(Rt,r),Kt(t))};e.addEventListener(Rt,r),setTimeout((()=>{i||Pt(e)}),o)},Yt=(t,e,n,o)=>{let i=t.indexOf(e);if(-1===i)return t[!n&&o?t.length-1:0];const r=t.length;return i+=n?1:-1,o&&(i=(i+r)%r),t[Math.max(0,Math.min(i,r-1))]},Qt=/[^.]*(?=\..*)\.|.*/,Jt=/\..*/,Zt=/::\d+$/,te={};let ee=1;const ne={mouseenter:"mouseover",mouseleave:"mouseout"},oe=/^(mouseenter|mouseleave)/i,ie=new Set(["click","dblclick","mouseup","mousedown","contextmenu","mousewheel","DOMMouseScroll","mouseover","mouseout","mousemove","selectstart","selectend","keydown","keypress","keyup","orientationchange","touchstart","touchmove","touchend","touchcancel","pointerdown","pointermove","pointerup","pointerleave","pointercancel","gesturestart","gesturechange","gestureend","focus","blur","change","reset","select","submit","focusin","focusout","load","unload","beforeunload","resize","move","DOMContentLoaded","readystatechange","error","abort","scroll"]);function re(t,e){return e&&`${e}::${ee++}`||t.uidEvent||ee++}function se(t){const e=re(t);return t.uidEvent=e,te[e]=te[e]||{},te[e]}function ae(t,e,n=null){const o=Object.keys(t);for(let i=0,r=o.length;i<r;i++){const r=t[o[i]];if(r.originalHandler===e&&r.delegationSelector===n)return r}return null}function ce(t,e,n){const o="string"==typeof e,i=o?n:e;let r=ue(t);return ie.has(r)||(r=t),[o,i,r]}function le(t,e,n,o,i){if("string"!=typeof e||!t)return;if(n||(n=o,o=null),oe.test(e)){const t=t=>function(e){if(!e.relatedTarget||e.relatedTarget!==e.delegateTarget&&!e.delegateTarget.contains(e.relatedTarget))return t.call(this,e)};o?o=t(o):n=t(n)}const[r,s,a]=ce(e,n,o),c=se(t),l=c[a]||(c[a]={}),d=ae(l,s,r?n:null);if(d)return void(d.oneOff=d.oneOff&&i);const u=re(s,e.replace(Qt,"")),p=r?function(t,e,n){return function o(i){const r=t.querySelectorAll(e);for(let{target:s}=i;s&&s!==this;s=s.parentNode)for(let a=r.length;a--;)if(r[a]===s)return i.delegateTarget=s,o.oneOff&&pe.off(t,i.type,e,n),n.apply(s,[i]);return null}}(t,n,o):function(t,e){return function n(o){return o.delegateTarget=t,n.oneOff&&pe.off(t,o.type,e),e.apply(t,[o])}}(t,n);p.delegationSelector=r?n:null,p.originalHandler=s,p.oneOff=i,p.uidEvent=u,l[u]=p,t.addEventListener(a,p,r)}function de(t,e,n,o,i){const r=ae(e[n],o,i);r&&(t.removeEventListener(n,r,Boolean(i)),delete e[n][r.uidEvent])}function ue(t){return t=t.replace(Jt,""),ne[t]||t}const pe={on(t,e,n,o){le(t,e,n,o,!1)},one(t,e,n,o){le(t,e,n,o,!0)},off(t,e,n,o){if("string"!=typeof e||!t)return;const[i,r,s]=ce(e,n,o),a=s!==e,c=se(t),l=e.startsWith(".");if(void 0!==r){if(!c||!c[s])return;return void de(t,c,s,r,i?n:null)}l&&Object.keys(c).forEach((n=>{!function(t,e,n,o){const i=e[n]||{};Object.keys(i).forEach((r=>{if(r.includes(o)){const o=i[r];de(t,e,n,o.originalHandler,o.delegationSelector)}}))}(t,c,n,e.slice(1))}));const d=c[s]||{};Object.keys(d).forEach((n=>{const o=n.replace(Zt,"");if(!a||e.includes(o)){const e=d[n];de(t,c,s,e.originalHandler,e.delegationSelector)}}))},trigger(t,e,n){if("string"!=typeof e||!t)return null;const o=zt(),i=ue(e),r=e!==i,s=ie.has(i);let a,c=!0,l=!0,d=!1,u=null;return r&&o&&(a=o.Event(e,n),o(t).trigger(a),c=!a.isPropagationStopped(),l=!a.isImmediatePropagationStopped(),d=a.isDefaultPrevented()),s?(u=document.createEvent("HTMLEvents"),u.initEvent(i,c,!0)):u=new CustomEvent(e,{bubbles:c,cancelable:!0}),void 0!==n&&Object.keys(n).forEach((t=>{Object.defineProperty(u,t,{get:()=>n[t]})})),d&&u.preventDefault(),l&&t.dispatchEvent(u),u.defaultPrevented&&void 0!==a&&a.preventDefault(),u}},he=new Map,fe={set(t,e,n){he.has(t)||he.set(t,new Map);const o=he.get(t);o.has(e)||0===o.size?o.set(e,n):console.error(`Bootstrap doesn't allow more than one instance per element. Bound instance: ${Array.from(o.keys())[0]}.`)},get:(t,e)=>he.has(t)&&he.get(t).get(e)||null,remove(t,e){if(!he.has(t))return;const n=he.get(t);n.delete(e),0===n.size&&he.delete(t)}};class me{constructor(t){(t=jt(t))&&(this._element=t,fe.set(this._element,this.constructor.DATA_KEY,this))}dispose(){fe.remove(this._element,this.constructor.DATA_KEY),pe.off(this._element,this.constructor.EVENT_KEY),Object.getOwnPropertyNames(this).forEach((t=>{this[t]=null}))}_queueCallback(t,e,n=!0){Xt(t,e,n)}static getInstance(t){return fe.get(jt(t),this.DATA_KEY)}static getOrCreateInstance(t,e={}){return this.getInstance(t)||new this(t,"object"==typeof e?e:null)}static get VERSION(){return"5.1.3"}static get NAME(){throw new Error('You have to implement the static method "NAME", for each component!')}static get DATA_KEY(){return`bs.${this.NAME}`}static get EVENT_KEY(){return`.${this.DATA_KEY}`}}const ge=(t,e="hide")=>{const n=`click.dismiss${t.EVENT_KEY}`,o=t.NAME;pe.on(document,n,`[data-bs-dismiss="${o}"]`,(function(n){if(["A","AREA"].includes(this.tagName)&&n.preventDefault(),Wt(this))return;const i=kt(this)||this.closest(`.${o}`);t.getOrCreateInstance(i)[e]()}))};class _e extends me{static get NAME(){return"alert"}close(){if(pe.trigger(this._element,"close.bs.alert").defaultPrevented)return;this._element.classList.remove("show");const t=this._element.classList.contains("fade");this._queueCallback((()=>this._destroyElement()),this._element,t)}_destroyElement(){this._element.remove(),pe.trigger(this._element,"closed.bs.alert"),this.dispose()}static jQueryInterface(t){return this.each((function(){const e=_e.getOrCreateInstance(this);if("string"==typeof t){if(void 0===e[t]||t.startsWith("_")||"constructor"===t)throw new TypeError(`No method named "${t}"`);e[t](this)}}))}}ge(_e,"close"),$t(_e);const ve='[data-bs-toggle="button"]';class be extends me{static get NAME(){return"button"}toggle(){this._element.setAttribute("aria-pressed",this._element.classList.toggle("active"))}static jQueryInterface(t){return this.each((function(){const e=be.getOrCreateInstance(this);"toggle"===t&&e[t]()}))}}function ye(t){return"true"===t||"false"!==t&&(t===Number(t).toString()?Number(t):""===t||"null"===t?null:t)}function Ee(t){return t.replace(/[A-Z]/g,(t=>`-${t.toLowerCase()}`))}pe.on(document,"click.bs.button.data-api",ve,(t=>{t.preventDefault();const e=t.target.closest(ve);be.getOrCreateInstance(e).toggle()})),$t(be);const we={setDataAttribute(t,e,n){t.setAttribute(`data-bs-${Ee(e)}`,n)},removeDataAttribute(t,e){t.removeAttribute(`data-bs-${Ee(e)}`)},getDataAttributes(t){if(!t)return{};const e={};return Object.keys(t.dataset).filter((t=>t.startsWith("bs"))).forEach((n=>{let o=n.replace(/^bs/,"");o=o.charAt(0).toLowerCase()+o.slice(1,o.length),e[o]=ye(t.dataset[n])})),e},getDataAttribute:(t,e)=>ye(t.getAttribute(`data-bs-${Ee(e)}`)),offset(t){const e=t.getBoundingClientRect();return{top:e.top+window.pageYOffset,left:e.left+window.pageXOffset}},position:t=>({top:t.offsetTop,left:t.offsetLeft})},Ae={find:(t,e=document.documentElement)=>[].concat(...Element.prototype.querySelectorAll.call(e,t)),findOne:(t,e=document.documentElement)=>Element.prototype.querySelector.call(e,t),children:(t,e)=>[].concat(...t.children).filter((t=>t.matches(e))),parents(t,e){const n=[];let o=t.parentNode;for(;o&&o.nodeType===Node.ELEMENT_NODE&&3!==o.nodeType;)o.matches(e)&&n.push(o),o=o.parentNode;return n},prev(t,e){let n=t.previousElementSibling;for(;n;){if(n.matches(e))return[n];n=n.previousElementSibling}return[]},next(t,e){let n=t.nextElementSibling;for(;n;){if(n.matches(e))return[n];n=n.nextElementSibling}return[]},focusableChildren(t){const e=["a","button","input","textarea","select","details","[tabindex]",'[contenteditable="true"]'].map((t=>`${t}:not([tabindex^="-"])`)).join(", ");return this.find(e,t).filter((t=>!Wt(t)&&Mt(t)))}},Ce="carousel",De={interval:5e3,keyboard:!0,slide:!1,pause:"hover",wrap:!0,touch:!0},Oe={interval:"(number|boolean)",keyboard:"boolean",slide:"(boolean|string)",pause:"(string|boolean)",wrap:"boolean",touch:"boolean"},Se="next",Te="prev",xe="left",Ne="right",Re={ArrowLeft:Ne,ArrowRight:xe},Ie="slid.bs.carousel",Le="active",ke=".active.carousel-item";class Pe extends me{constructor(t,e){super(t),this._items=null,this._interval=null,this._activeElement=null,this._isPaused=!1,this._isSliding=!1,this.touchTimeout=null,this.touchStartX=0,this.touchDeltaX=0,this._config=this._getConfig(e),this._indicatorsElement=Ae.findOne(".carousel-indicators",this._element),this._touchSupported="ontouchstart"in document.documentElement||navigator.maxTouchPoints>0,this._pointerEvent=Boolean(window.PointerEvent),this._addEventListeners()}static get Default(){return De}static get NAME(){return Ce}next(){this._slide(Se)}nextWhenVisible(){!document.hidden&&Mt(this._element)&&this.next()}prev(){this._slide(Te)}pause(t){t||(this._isPaused=!0),Ae.findOne(".carousel-item-next, .carousel-item-prev",this._element)&&(Pt(this._element),this.cycle(!0)),clearInterval(this._interval),this._interval=null}cycle(t){t||(this._isPaused=!1),this._interval&&(clearInterval(this._interval),this._interval=null),this._config&&this._config.interval&&!this._isPaused&&(this._updateInterval(),this._interval=setInterval((document.visibilityState?this.nextWhenVisible:this.next).bind(this),this._config.interval))}to(t){this._activeElement=Ae.findOne(ke,this._element);const e=this._getItemIndex(this._activeElement);if(t>this._items.length-1||t<0)return;if(this._isSliding)return void pe.one(this._element,Ie,(()=>this.to(t)));if(e===t)return this.pause(),void this.cycle();const n=t>e?Se:Te;this._slide(n,this._items[t])}_getConfig(t){return t={...De,...we.getDataAttributes(this._element),..."object"==typeof t?t:{}},Ht(Ce,t,Oe),t}_handleSwipe(){const t=Math.abs(this.touchDeltaX);if(t<=40)return;const e=t/this.touchDeltaX;this.touchDeltaX=0,e&&this._slide(e>0?Ne:xe)}_addEventListeners(){this._config.keyboard&&pe.on(this._element,"keydown.bs.carousel",(t=>this._keydown(t))),"hover"===this._config.pause&&(pe.on(this._element,"mouseenter.bs.carousel",(t=>this.pause(t))),pe.on(this._element,"mouseleave.bs.carousel",(t=>this.cycle(t)))),this._config.touch&&this._touchSupported&&this._addTouchEventListeners()}_addTouchEventListeners(){const t=t=>this._pointerEvent&&("pen"===t.pointerType||"touch"===t.pointerType),e=e=>{t(e)?this.touchStartX=e.clientX:this._pointerEvent||(this.touchStartX=e.touches[0].clientX)},n=t=>{this.touchDeltaX=t.touches&&t.touches.length>1?0:t.touches[0].clientX-this.touchStartX},o=e=>{t(e)&&(this.touchDeltaX=e.clientX-this.touchStartX),this._handleSwipe(),"hover"===this._config.pause&&(this.pause(),this.touchTimeout&&clearTimeout(this.touchTimeout),this.touchTimeout=setTimeout((t=>this.cycle(t)),500+this._config.interval))};Ae.find(".carousel-item img",this._element).forEach((t=>{pe.on(t,"dragstart.bs.carousel",(t=>t.preventDefault()))})),this._pointerEvent?(pe.on(this._element,"pointerdown.bs.carousel",(t=>e(t))),pe.on(this._element,"pointerup.bs.carousel",(t=>o(t))),this._element.classList.add("pointer-event")):(pe.on(this._element,"touchstart.bs.carousel",(t=>e(t))),pe.on(this._element,"touchmove.bs.carousel",(t=>n(t))),pe.on(this._element,"touchend.bs.carousel",(t=>o(t))))}_keydown(t){if(/input|textarea/i.test(t.target.tagName))return;const e=Re[t.key];e&&(t.preventDefault(),this._slide(e))}_getItemIndex(t){return this._items=t&&t.parentNode?Ae.find(".carousel-item",t.parentNode):[],this._items.indexOf(t)}_getItemByOrder(t,e){const n=t===Se;return Yt(this._items,e,n,this._config.wrap)}_triggerSlideEvent(t,e){const n=this._getItemIndex(t),o=this._getItemIndex(Ae.findOne(ke,this._element));return pe.trigger(this._element,"slide.bs.carousel",{relatedTarget:t,direction:e,from:o,to:n})}_setActiveIndicatorElement(t){if(this._indicatorsElement){const e=Ae.findOne(".active",this._indicatorsElement);e.classList.remove(Le),e.removeAttribute("aria-current");const n=Ae.find("[data-bs-target]",this._indicatorsElement);for(let e=0;e<n.length;e++)if(Number.parseInt(n[e].getAttribute("data-bs-slide-to"),10)===this._getItemIndex(t)){n[e].classList.add(Le),n[e].setAttribute("aria-current","true");break}}}_updateInterval(){const t=this._activeElement||Ae.findOne(ke,this._element);if(!t)return;const e=Number.parseInt(t.getAttribute("data-bs-interval"),10);e?(this._config.defaultInterval=this._config.defaultInterval||this._config.interval,this._config.interval=e):this._config.interval=this._config.defaultInterval||this._config.interval}_slide(t,e){const n=this._directionToOrder(t),o=Ae.findOne(ke,this._element),i=this._getItemIndex(o),r=e||this._getItemByOrder(n,o),s=this._getItemIndex(r),a=Boolean(this._interval),c=n===Se,l=c?"carousel-item-start":"carousel-item-end",d=c?"carousel-item-next":"carousel-item-prev",u=this._orderToDirection(n);if(r&&r.classList.contains(Le))return void(this._isSliding=!1);if(this._isSliding)return;if(this._triggerSlideEvent(r,u).defaultPrevented)return;if(!o||!r)return;this._isSliding=!0,a&&this.pause(),this._setActiveIndicatorElement(r),this._activeElement=r;const p=()=>{pe.trigger(this._element,Ie,{relatedTarget:r,direction:u,from:i,to:s})};if(this._element.classList.contains("slide")){r.classList.add(d),Ft(r),o.classList.add(l),r.classList.add(l);const t=()=>{r.classList.remove(l,d),r.classList.add(Le),o.classList.remove(Le,d,l),this._isSliding=!1,setTimeout(p,0)};this._queueCallback(t,o,!0)}else o.classList.remove(Le),r.classList.add(Le),this._isSliding=!1,p();a&&this.cycle()}_directionToOrder(t){return[Ne,xe].includes(t)?Vt()?t===xe?Te:Se:t===xe?Se:Te:t}_orderToDirection(t){return[Se,Te].includes(t)?Vt()?t===Te?xe:Ne:t===Te?Ne:xe:t}static carouselInterface(t,e){const n=Pe.getOrCreateInstance(t,e);let{_config:o}=n;"object"==typeof e&&(o={...o,...e});const i="string"==typeof e?e:o.slide;if("number"==typeof e)n.to(e);else if("string"==typeof i){if(void 0===n[i])throw new TypeError(`No method named "${i}"`);n[i]()}else o.interval&&o.ride&&(n.pause(),n.cycle())}static jQueryInterface(t){return this.each((function(){Pe.carouselInterface(this,t)}))}static dataApiClickHandler(t){const e=kt(this);if(!e||!e.classList.contains("carousel"))return;const n={...we.getDataAttributes(e),...we.getDataAttributes(this)},o=this.getAttribute("data-bs-slide-to");o&&(n.interval=!1),Pe.carouselInterface(e,n),o&&Pe.getInstance(e).to(o),t.preventDefault()}}pe.on(document,"click.bs.carousel.data-api","[data-bs-slide], [data-bs-slide-to]",Pe.dataApiClickHandler),pe.on(window,"load.bs.carousel.data-api",(()=>{const t=Ae.find('[data-bs-ride="carousel"]');for(let e=0,n=t.length;e<n;e++)Pe.carouselInterface(t[e],Pe.getInstance(t[e]))})),$t(Pe);const Be="collapse",je={toggle:!0,parent:null},He={toggle:"boolean",parent:"(null|element)"},Me="show",We="collapse",Ge="collapsing",Ue="collapsed",Fe=":scope .collapse .collapse",ze='[data-bs-toggle="collapse"]';class qe extends me{constructor(t,e){super(t),this._isTransitioning=!1,this._config=this._getConfig(e),this._triggerArray=[];const n=Ae.find(ze);for(let t=0,e=n.length;t<e;t++){const e=n[t],o=Lt(e),i=Ae.find(o).filter((t=>t===this._element));null!==o&&i.length&&(this._selector=o,this._triggerArray.push(e))}this._initializeChildren(),this._config.parent||this._addAriaAndCollapsedClass(this._triggerArray,this._isShown()),this._config.toggle&&this.toggle()}static get Default(){return je}static get NAME(){return Be}toggle(){this._isShown()?this.hide():this.show()}show(){if(this._isTransitioning||this._isShown())return;let t,e=[];if(this._config.parent){const t=Ae.find(Fe,this._config.parent);e=Ae.find(".collapse.show, .collapse.collapsing",this._config.parent).filter((e=>!t.includes(e)))}const n=Ae.findOne(this._selector);if(e.length){const o=e.find((t=>n!==t));if(t=o?qe.getInstance(o):null,t&&t._isTransitioning)return}if(pe.trigger(this._element,"show.bs.collapse").defaultPrevented)return;e.forEach((e=>{n!==e&&qe.getOrCreateInstance(e,{toggle:!1}).hide(),t||fe.set(e,"bs.collapse",null)}));const o=this._getDimension();this._element.classList.remove(We),this._element.classList.add(Ge),this._element.style[o]=0,this._addAriaAndCollapsedClass(this._triggerArray,!0),this._isTransitioning=!0;const i=`scroll${o[0].toUpperCase()+o.slice(1)}`;this._queueCallback((()=>{this._isTransitioning=!1,this._element.classList.remove(Ge),this._element.classList.add(We,Me),this._element.style[o]="",pe.trigger(this._element,"shown.bs.collapse")}),this._element,!0),this._element.style[o]=`${this._element[i]}px`}hide(){if(this._isTransitioning||!this._isShown())return;if(pe.trigger(this._element,"hide.bs.collapse").defaultPrevented)return;const t=this._getDimension();this._element.style[t]=`${this._element.getBoundingClientRect()[t]}px`,Ft(this._element),this._element.classList.add(Ge),this._element.classList.remove(We,Me);const e=this._triggerArray.length;for(let t=0;t<e;t++){const e=this._triggerArray[t],n=kt(e);n&&!this._isShown(n)&&this._addAriaAndCollapsedClass([e],!1)}this._isTransitioning=!0,this._element.style[t]="",this._queueCallback((()=>{this._isTransitioning=!1,this._element.classList.remove(Ge),this._element.classList.add(We),pe.trigger(this._element,"hidden.bs.collapse")}),this._element,!0)}_isShown(t=this._element){return t.classList.contains(Me)}_getConfig(t){return(t={...je,...we.getDataAttributes(this._element),...t}).toggle=Boolean(t.toggle),t.parent=jt(t.parent),Ht(Be,t,He),t}_getDimension(){return this._element.classList.contains("collapse-horizontal")?"width":"height"}_initializeChildren(){if(!this._config.parent)return;const t=Ae.find(Fe,this._config.parent);Ae.find(ze,this._config.parent).filter((e=>!t.includes(e))).forEach((t=>{const e=kt(t);e&&this._addAriaAndCollapsedClass([t],this._isShown(e))}))}_addAriaAndCollapsedClass(t,e){t.length&&t.forEach((t=>{e?t.classList.remove(Ue):t.classList.add(Ue),t.setAttribute("aria-expanded",e)}))}static jQueryInterface(t){return this.each((function(){const e={};"string"==typeof t&&/show|hide/.test(t)&&(e.toggle=!1);const n=qe.getOrCreateInstance(this,e);if("string"==typeof t){if(void 0===n[t])throw new TypeError(`No method named "${t}"`);n[t]()}}))}}pe.on(document,"click.bs.collapse.data-api",ze,(function(t){("A"===t.target.tagName||t.delegateTarget&&"A"===t.delegateTarget.tagName)&&t.preventDefault();const e=Lt(this);Ae.find(e).forEach((t=>{qe.getOrCreateInstance(t,{toggle:!1}).toggle()}))})),$t(qe);const Ve="dropdown",$e="Escape",Ke="Space",Xe="ArrowUp",Ye="ArrowDown",Qe=new RegExp("ArrowUp|ArrowDown|Escape"),Je="click.bs.dropdown.data-api",Ze="keydown.bs.dropdown.data-api",tn="show",en='[data-bs-toggle="dropdown"]',nn=".dropdown-menu",on=Vt()?"top-end":"top-start",rn=Vt()?"top-start":"top-end",sn=Vt()?"bottom-end":"bottom-start",an=Vt()?"bottom-start":"bottom-end",cn=Vt()?"left-start":"right-start",ln=Vt()?"right-start":"left-start",dn={offset:[0,2],boundary:"clippingParents",reference:"toggle",display:"dynamic",popperConfig:null,autoClose:!0},un={offset:"(array|string|function)",boundary:"(string|element)",reference:"(string|element|object)",display:"string",popperConfig:"(null|object|function)",autoClose:"(boolean|string)"};class pn extends me{constructor(t,e){super(t),this._popper=null,this._config=this._getConfig(e),this._menu=this._getMenuElement(),this._inNavbar=this._detectNavbar()}static get Default(){return dn}static get DefaultType(){return un}static get NAME(){return Ve}toggle(){return this._isShown()?this.hide():this.show()}show(){if(Wt(this._element)||this._isShown(this._menu))return;const t={relatedTarget:this._element};if(pe.trigger(this._element,"show.bs.dropdown",t).defaultPrevented)return;const e=pn.getParentFromElement(this._element);this._inNavbar?we.setDataAttribute(this._menu,"popper","none"):this._createPopper(e),"ontouchstart"in document.documentElement&&!e.closest(".navbar-nav")&&[].concat(...document.body.children).forEach((t=>pe.on(t,"mouseover",Ut))),this._element.focus(),this._element.setAttribute("aria-expanded",!0),this._menu.classList.add(tn),this._element.classList.add(tn),pe.trigger(this._element,"shown.bs.dropdown",t)}hide(){if(Wt(this._element)||!this._isShown(this._menu))return;const t={relatedTarget:this._element};this._completeHide(t)}dispose(){this._popper&&this._popper.destroy(),super.dispose()}update(){this._inNavbar=this._detectNavbar(),this._popper&&this._popper.update()}_completeHide(t){pe.trigger(this._element,"hide.bs.dropdown",t).defaultPrevented||("ontouchstart"in document.documentElement&&[].concat(...document.body.children).forEach((t=>pe.off(t,"mouseover",Ut))),this._popper&&this._popper.destroy(),this._menu.classList.remove(tn),this._element.classList.remove(tn),this._element.setAttribute("aria-expanded","false"),we.removeDataAttribute(this._menu,"popper"),pe.trigger(this._element,"hidden.bs.dropdown",t))}_getConfig(t){if(t={...this.constructor.Default,...we.getDataAttributes(this._element),...t},Ht(Ve,t,this.constructor.DefaultType),"object"==typeof t.reference&&!Bt(t.reference)&&"function"!=typeof t.reference.getBoundingClientRect)throw new TypeError(`${Ve.toUpperCase()}: Option "reference" provided type "object" without a required "getBoundingClientRect" method.`);return t}_createPopper(e){if(void 0===t)throw new TypeError("Bootstrap's dropdowns require Popper (https://popper.js.org)");let n=this._element;"parent"===this._config.reference?n=e:Bt(this._config.reference)?n=jt(this._config.reference):"object"==typeof this._config.reference&&(n=this._config.reference);const o=this._getPopperConfig(),i=o.modifiers.find((t=>"applyStyles"===t.name&&!1===t.enabled));this._popper=xt(n,this._menu,o),i&&we.setDataAttribute(this._menu,"popper","static")}_isShown(t=this._element){return t.classList.contains(tn)}_getMenuElement(){return Ae.next(this._element,nn)[0]}_getPlacement(){const t=this._element.parentNode;if(t.classList.contains("dropend"))return cn;if(t.classList.contains("dropstart"))return ln;const e="end"===getComputedStyle(this._menu).getPropertyValue("--bs-position").trim();return t.classList.contains("dropup")?e?rn:on:e?an:sn}_detectNavbar(){return null!==this._element.closest(".navbar")}_getOffset(){const{offset:t}=this._config;return"string"==typeof t?t.split(",").map((t=>Number.parseInt(t,10))):"function"==typeof t?e=>t(e,this._element):t}_getPopperConfig(){const t={placement:this._getPlacement(),modifiers:[{name:"preventOverflow",options:{boundary:this._config.boundary}},{name:"offset",options:{offset:this._getOffset()}}]};return"static"===this._config.display&&(t.modifiers=[{name:"applyStyles",enabled:!1}]),{...t,..."function"==typeof this._config.popperConfig?this._config.popperConfig(t):this._config.popperConfig}}_selectMenuItem({key:t,target:e}){const n=Ae.find(".dropdown-menu .dropdown-item:not(.disabled):not(:disabled)",this._menu).filter(Mt);n.length&&Yt(n,e,t===Ye,!n.includes(e)).focus()}static jQueryInterface(t){return this.each((function(){const e=pn.getOrCreateInstance(this,t);if("string"==typeof t){if(void 0===e[t])throw new TypeError(`No method named "${t}"`);e[t]()}}))}static clearMenus(t){if(t&&(2===t.button||"keyup"===t.type&&"Tab"!==t.key))return;const e=Ae.find(en);for(let n=0,o=e.length;n<o;n++){const o=pn.getInstance(e[n]);if(!o||!1===o._config.autoClose)continue;if(!o._isShown())continue;const i={relatedTarget:o._element};if(t){const e=t.composedPath(),n=e.includes(o._menu);if(e.includes(o._element)||"inside"===o._config.autoClose&&!n||"outside"===o._config.autoClose&&n)continue;if(o._menu.contains(t.target)&&("keyup"===t.type&&"Tab"===t.key||/input|select|option|textarea|form/i.test(t.target.tagName)))continue;"click"===t.type&&(i.clickEvent=t)}o._completeHide(i)}}static getParentFromElement(t){return kt(t)||t.parentNode}static dataApiKeydownHandler(t){if(/input|textarea/i.test(t.target.tagName)?t.key===Ke||t.key!==$e&&(t.key!==Ye&&t.key!==Xe||t.target.closest(nn)):!Qe.test(t.key))return;const e=this.classList.contains(tn);if(!e&&t.key===$e)return;if(t.preventDefault(),t.stopPropagation(),Wt(this))return;const n=this.matches(en)?this:Ae.prev(this,en)[0],o=pn.getOrCreateInstance(n);if(t.key!==$e)return t.key===Xe||t.key===Ye?(e||o.show(),void o._selectMenuItem(t)):void(e&&t.key!==Ke||pn.clearMenus());o.hide()}}pe.on(document,Ze,en,pn.dataApiKeydownHandler),pe.on(document,Ze,nn,pn.dataApiKeydownHandler),pe.on(document,Je,pn.clearMenus),pe.on(document,"keyup.bs.dropdown.data-api",pn.clearMenus),pe.on(document,Je,en,(function(t){t.preventDefault(),pn.getOrCreateInstance(this).toggle()})),$t(pn);const hn=".fixed-top, .fixed-bottom, .is-fixed, .sticky-top",fn=".sticky-top";class mn{constructor(){this._element=document.body}getWidth(){const t=document.documentElement.clientWidth;return Math.abs(window.innerWidth-t)}hide(){const t=this.getWidth();this._disableOverFlow(),this._setElementAttributes(this._element,"paddingRight",(e=>e+t)),this._setElementAttributes(hn,"paddingRight",(e=>e+t)),this._setElementAttributes(fn,"marginRight",(e=>e-t))}_disableOverFlow(){this._saveInitialAttribute(this._element,"overflow"),this._element.style.overflow="hidden"}_setElementAttributes(t,e,n){const o=this.getWidth();this._applyManipulationCallback(t,(t=>{if(t!==this._element&&window.innerWidth>t.clientWidth+o)return;this._saveInitialAttribute(t,e);const i=window.getComputedStyle(t)[e];t.style[e]=`${n(Number.parseFloat(i))}px`}))}reset(){this._resetElementAttributes(this._element,"overflow"),this._resetElementAttributes(this._element,"paddingRight"),this._resetElementAttributes(hn,"paddingRight"),this._resetElementAttributes(fn,"marginRight")}_saveInitialAttribute(t,e){const n=t.style[e];n&&we.setDataAttribute(t,e,n)}_resetElementAttributes(t,e){this._applyManipulationCallback(t,(t=>{const n=we.getDataAttribute(t,e);void 0===n?t.style.removeProperty(e):(we.removeDataAttribute(t,e),t.style[e]=n)}))}_applyManipulationCallback(t,e){Bt(t)?e(t):Ae.find(t,this._element).forEach(e)}isOverflowing(){return this.getWidth()>0}}const gn={className:"modal-backdrop",isVisible:!0,isAnimated:!1,rootElement:"body",clickCallback:null},_n={className:"string",isVisible:"boolean",isAnimated:"boolean",rootElement:"(element|string)",clickCallback:"(function|null)"},vn="show",bn="mousedown.bs.backdrop";class yn{constructor(t){this._config=this._getConfig(t),this._isAppended=!1,this._element=null}show(t){this._config.isVisible?(this._append(),this._config.isAnimated&&Ft(this._getElement()),this._getElement().classList.add(vn),this._emulateAnimation((()=>{Kt(t)}))):Kt(t)}hide(t){this._config.isVisible?(this._getElement().classList.remove(vn),this._emulateAnimation((()=>{this.dispose(),Kt(t)}))):Kt(t)}_getElement(){if(!this._element){const t=document.createElement("div");t.className=this._config.className,this._config.isAnimated&&t.classList.add("fade"),this._element=t}return this._element}_getConfig(t){return(t={...gn,..."object"==typeof t?t:{}}).rootElement=jt(t.rootElement),Ht("backdrop",t,_n),t}_append(){this._isAppended||(this._config.rootElement.append(this._getElement()),pe.on(this._getElement(),bn,(()=>{Kt(this._config.clickCallback)})),this._isAppended=!0)}dispose(){this._isAppended&&(pe.off(this._element,bn),this._element.remove(),this._isAppended=!1)}_emulateAnimation(t){Xt(t,this._getElement(),this._config.isAnimated)}}const En={trapElement:null,autofocus:!0},wn={trapElement:"element",autofocus:"boolean"},An=".bs.focustrap",Cn="backward";class Dn{constructor(t){this._config=this._getConfig(t),this._isActive=!1,this._lastTabNavDirection=null}activate(){const{trapElement:t,autofocus:e}=this._config;this._isActive||(e&&t.focus(),pe.off(document,An),pe.on(document,"focusin.bs.focustrap",(t=>this._handleFocusin(t))),pe.on(document,"keydown.tab.bs.focustrap",(t=>this._handleKeydown(t))),this._isActive=!0)}deactivate(){this._isActive&&(this._isActive=!1,pe.off(document,An))}_handleFocusin(t){const{target:e}=t,{trapElement:n}=this._config;if(e===document||e===n||n.contains(e))return;const o=Ae.focusableChildren(n);0===o.length?n.focus():this._lastTabNavDirection===Cn?o[o.length-1].focus():o[0].focus()}_handleKeydown(t){"Tab"===t.key&&(this._lastTabNavDirection=t.shiftKey?Cn:"forward")}_getConfig(t){return t={...En,..."object"==typeof t?t:{}},Ht("focustrap",t,wn),t}}const On="modal",Sn="Escape",Tn={backdrop:!0,keyboard:!0,focus:!0},xn={backdrop:"(boolean|string)",keyboard:"boolean",focus:"boolean"},Nn="hidden.bs.modal",Rn="show.bs.modal",In="resize.bs.modal",Ln="click.dismiss.bs.modal",kn="keydown.dismiss.bs.modal",Pn="mousedown.dismiss.bs.modal",Bn="modal-open",jn="show",Hn="modal-static";class Mn extends me{constructor(t,e){super(t),this._config=this._getConfig(e),this._dialog=Ae.findOne(".modal-dialog",this._element),this._backdrop=this._initializeBackDrop(),this._focustrap=this._initializeFocusTrap(),this._isShown=!1,this._ignoreBackdropClick=!1,this._isTransitioning=!1,this._scrollBar=new mn}static get Default(){return Tn}static get NAME(){return On}toggle(t){return this._isShown?this.hide():this.show(t)}show(t){this._isShown||this._isTransitioning||pe.trigger(this._element,Rn,{relatedTarget:t}).defaultPrevented||(this._isShown=!0,this._isAnimated()&&(this._isTransitioning=!0),this._scrollBar.hide(),document.body.classList.add(Bn),this._adjustDialog(),this._setEscapeEvent(),this._setResizeEvent(),pe.on(this._dialog,Pn,(()=>{pe.one(this._element,"mouseup.dismiss.bs.modal",(t=>{t.target===this._element&&(this._ignoreBackdropClick=!0)}))})),this._showBackdrop((()=>this._showElement(t))))}hide(){if(!this._isShown||this._isTransitioning)return;if(pe.trigger(this._element,"hide.bs.modal").defaultPrevented)return;this._isShown=!1;const t=this._isAnimated();t&&(this._isTransitioning=!0),this._setEscapeEvent(),this._setResizeEvent(),this._focustrap.deactivate(),this._element.classList.remove(jn),pe.off(this._element,Ln),pe.off(this._dialog,Pn),this._queueCallback((()=>this._hideModal()),this._element,t)}dispose(){[window,this._dialog].forEach((t=>pe.off(t,".bs.modal"))),this._backdrop.dispose(),this._focustrap.deactivate(),super.dispose()}handleUpdate(){this._adjustDialog()}_initializeBackDrop(){return new yn({isVisible:Boolean(this._config.backdrop),isAnimated:this._isAnimated()})}_initializeFocusTrap(){return new Dn({trapElement:this._element})}_getConfig(t){return t={...Tn,...we.getDataAttributes(this._element),..."object"==typeof t?t:{}},Ht(On,t,xn),t}_showElement(t){const e=this._isAnimated(),n=Ae.findOne(".modal-body",this._dialog);this._element.parentNode&&this._element.parentNode.nodeType===Node.ELEMENT_NODE||document.body.append(this._element),this._element.style.display="block",this._element.removeAttribute("aria-hidden"),this._element.setAttribute("aria-modal",!0),this._element.setAttribute("role","dialog"),this._element.scrollTop=0,n&&(n.scrollTop=0),e&&Ft(this._element),this._element.classList.add(jn),this._queueCallback((()=>{this._config.focus&&this._focustrap.activate(),this._isTransitioning=!1,pe.trigger(this._element,"shown.bs.modal",{relatedTarget:t})}),this._dialog,e)}_setEscapeEvent(){this._isShown?pe.on(this._element,kn,(t=>{this._config.keyboard&&t.key===Sn?(t.preventDefault(),this.hide()):this._config.keyboard||t.key!==Sn||this._triggerBackdropTransition()})):pe.off(this._element,kn)}_setResizeEvent(){this._isShown?pe.on(window,In,(()=>this._adjustDialog())):pe.off(window,In)}_hideModal(){this._element.style.display="none",this._element.setAttribute("aria-hidden",!0),this._element.removeAttribute("aria-modal"),this._element.removeAttribute("role"),this._isTransitioning=!1,this._backdrop.hide((()=>{document.body.classList.remove(Bn),this._resetAdjustments(),this._scrollBar.reset(),pe.trigger(this._element,Nn)}))}_showBackdrop(t){pe.on(this._element,Ln,(t=>{this._ignoreBackdropClick?this._ignoreBackdropClick=!1:t.target===t.currentTarget&&(!0===this._config.backdrop?this.hide():"static"===this._config.backdrop&&this._triggerBackdropTransition())})),this._backdrop.show(t)}_isAnimated(){return this._element.classList.contains("fade")}_triggerBackdropTransition(){if(pe.trigger(this._element,"hidePrevented.bs.modal").defaultPrevented)return;const{classList:t,scrollHeight:e,style:n}=this._element,o=e>document.documentElement.clientHeight;!o&&"hidden"===n.overflowY||t.contains(Hn)||(o||(n.overflowY="hidden"),t.add(Hn),this._queueCallback((()=>{t.remove(Hn),o||this._queueCallback((()=>{n.overflowY=""}),this._dialog)}),this._dialog),this._element.focus())}_adjustDialog(){const t=this._element.scrollHeight>document.documentElement.clientHeight,e=this._scrollBar.getWidth(),n=e>0;(!n&&t&&!Vt()||n&&!t&&Vt())&&(this._element.style.paddingLeft=`${e}px`),(n&&!t&&!Vt()||!n&&t&&Vt())&&(this._element.style.paddingRight=`${e}px`)}_resetAdjustments(){this._element.style.paddingLeft="",this._element.style.paddingRight=""}static jQueryInterface(t,e){return this.each((function(){const n=Mn.getOrCreateInstance(this,t);if("string"==typeof t){if(void 0===n[t])throw new TypeError(`No method named "${t}"`);n[t](e)}}))}}pe.on(document,"click.bs.modal.data-api",'[data-bs-toggle="modal"]',(function(t){const e=kt(this);["A","AREA"].includes(this.tagName)&&t.preventDefault(),pe.one(e,Rn,(t=>{t.defaultPrevented||pe.one(e,Nn,(()=>{Mt(this)&&this.focus()}))}));const n=Ae.findOne(".modal.show");n&&Mn.getInstance(n).hide(),Mn.getOrCreateInstance(e).toggle(this)})),ge(Mn),$t(Mn);const Wn="offcanvas",Gn={backdrop:!0,keyboard:!0,scroll:!1},Un={backdrop:"boolean",keyboard:"boolean",scroll:"boolean"},Fn="show",zn=".offcanvas.show",qn="hidden.bs.offcanvas";class Vn extends me{constructor(t,e){super(t),this._config=this._getConfig(e),this._isShown=!1,this._backdrop=this._initializeBackDrop(),this._focustrap=this._initializeFocusTrap(),this._addEventListeners()}static get NAME(){return Wn}static get Default(){return Gn}toggle(t){return this._isShown?this.hide():this.show(t)}show(t){this._isShown||pe.trigger(this._element,"show.bs.offcanvas",{relatedTarget:t}).defaultPrevented||(this._isShown=!0,this._element.style.visibility="visible",this._backdrop.show(),this._config.scroll||(new mn).hide(),this._element.removeAttribute("aria-hidden"),this._element.setAttribute("aria-modal",!0),this._element.setAttribute("role","dialog"),this._element.classList.add(Fn),this._queueCallback((()=>{this._config.scroll||this._focustrap.activate(),pe.trigger(this._element,"shown.bs.offcanvas",{relatedTarget:t})}),this._element,!0))}hide(){this._isShown&&(pe.trigger(this._element,"hide.bs.offcanvas").defaultPrevented||(this._focustrap.deactivate(),this._element.blur(),this._isShown=!1,this._element.classList.remove(Fn),this._backdrop.hide(),this._queueCallback((()=>{this._element.setAttribute("aria-hidden",!0),this._element.removeAttribute("aria-modal"),this._element.removeAttribute("role"),this._element.style.visibility="hidden",this._config.scroll||(new mn).reset(),pe.trigger(this._element,qn)}),this._element,!0)))}dispose(){this._backdrop.dispose(),this._focustrap.deactivate(),super.dispose()}_getConfig(t){return t={...Gn,...we.getDataAttributes(this._element),..."object"==typeof t?t:{}},Ht(Wn,t,Un),t}_initializeBackDrop(){return new yn({className:"offcanvas-backdrop",isVisible:this._config.backdrop,isAnimated:!0,rootElement:this._element.parentNode,clickCallback:()=>this.hide()})}_initializeFocusTrap(){return new Dn({trapElement:this._element})}_addEventListeners(){pe.on(this._element,"keydown.dismiss.bs.offcanvas",(t=>{this._config.keyboard&&"Escape"===t.key&&this.hide()}))}static jQueryInterface(t){return this.each((function(){const e=Vn.getOrCreateInstance(this,t);if("string"==typeof t){if(void 0===e[t]||t.startsWith("_")||"constructor"===t)throw new TypeError(`No method named "${t}"`);e[t](this)}}))}}pe.on(document,"click.bs.offcanvas.data-api",'[data-bs-toggle="offcanvas"]',(function(t){const e=kt(this);if(["A","AREA"].includes(this.tagName)&&t.preventDefault(),Wt(this))return;pe.one(e,qn,(()=>{Mt(this)&&this.focus()}));const n=Ae.findOne(zn);n&&n!==e&&Vn.getInstance(n).hide(),Vn.getOrCreateInstance(e).toggle(this)})),pe.on(window,"load.bs.offcanvas.data-api",(()=>Ae.find(zn).forEach((t=>Vn.getOrCreateInstance(t).show())))),ge(Vn),$t(Vn);const $n=new Set(["background","cite","href","itemtype","longdesc","poster","src","xlink:href"]),Kn=/^(?:(?:https?|mailto|ftp|tel|file|sms):|[^#&/:?]*(?:[#/?]|$))/i,Xn=/^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[\d+/a-z]+=*$/i,Yn=(t,e)=>{const n=t.nodeName.toLowerCase();if(e.includes(n))return!$n.has(n)||Boolean(Kn.test(t.nodeValue)||Xn.test(t.nodeValue));const o=e.filter((t=>t instanceof RegExp));for(let t=0,e=o.length;t<e;t++)if(o[t].test(n))return!0;return!1};function Qn(t,e,n){if(!t.length)return t;if(n&&"function"==typeof n)return n(t);const o=(new window.DOMParser).parseFromString(t,"text/html"),i=[].concat(...o.body.querySelectorAll("*"));for(let t=0,n=i.length;t<n;t++){const n=i[t],o=n.nodeName.toLowerCase();if(!Object.keys(e).includes(o)){n.remove();continue}const r=[].concat(...n.attributes),s=[].concat(e["*"]||[],e[o]||[]);r.forEach((t=>{Yn(t,s)||n.removeAttribute(t.nodeName)}))}return o.body.innerHTML}const Jn="tooltip",Zn=new Set(["sanitize","allowList","sanitizeFn"]),to={animation:"boolean",template:"string",title:"(string|element|function)",trigger:"string",delay:"(number|object)",html:"boolean",selector:"(string|boolean)",placement:"(string|function)",offset:"(array|string|function)",container:"(string|element|boolean)",fallbackPlacements:"array",boundary:"(string|element)",customClass:"(string|function)",sanitize:"boolean",sanitizeFn:"(null|function)",allowList:"object",popperConfig:"(null|object|function)"},eo={AUTO:"auto",TOP:"top",RIGHT:Vt()?"left":"right",BOTTOM:"bottom",LEFT:Vt()?"right":"left"},no={animation:!0,template:'<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover focus",title:"",delay:0,html:!1,selector:!1,placement:"top",offset:[0,0],container:!1,fallbackPlacements:["top","right","bottom","left"],boundary:"clippingParents",customClass:"",sanitize:!0,sanitizeFn:null,allowList:{"*":["class","dir","id","lang","role",/^aria-[\w-]*$/i],a:["target","href","title","rel"],area:[],b:[],br:[],col:[],code:[],div:[],em:[],hr:[],h1:[],h2:[],h3:[],h4:[],h5:[],h6:[],i:[],img:["src","srcset","alt","title","width","height"],li:[],ol:[],p:[],pre:[],s:[],small:[],span:[],sub:[],sup:[],strong:[],u:[],ul:[]},popperConfig:null},oo={HIDE:"hide.bs.tooltip",HIDDEN:"hidden.bs.tooltip",SHOW:"show.bs.tooltip",SHOWN:"shown.bs.tooltip",INSERTED:"inserted.bs.tooltip",CLICK:"click.bs.tooltip",FOCUSIN:"focusin.bs.tooltip",FOCUSOUT:"focusout.bs.tooltip",MOUSEENTER:"mouseenter.bs.tooltip",MOUSELEAVE:"mouseleave.bs.tooltip"},io="fade",ro="show",so="show",ao="out",co=".tooltip-inner",lo=".modal",uo="hide.bs.modal",po="hover",ho="focus";class fo extends me{constructor(e,n){if(void 0===t)throw new TypeError("Bootstrap's tooltips require Popper (https://popper.js.org)");super(e),this._isEnabled=!0,this._timeout=0,this._hoverState="",this._activeTrigger={},this._popper=null,this._config=this._getConfig(n),this.tip=null,this._setListeners()}static get Default(){return no}static get NAME(){return Jn}static get Event(){return oo}static get DefaultType(){return to}enable(){this._isEnabled=!0}disable(){this._isEnabled=!1}toggleEnabled(){this._isEnabled=!this._isEnabled}toggle(t){if(this._isEnabled)if(t){const e=this._initializeOnDelegatedTarget(t);e._activeTrigger.click=!e._activeTrigger.click,e._isWithActiveTrigger()?e._enter(null,e):e._leave(null,e)}else{if(this.getTipElement().classList.contains(ro))return void this._leave(null,this);this._enter(null,this)}}dispose(){clearTimeout(this._timeout),pe.off(this._element.closest(lo),uo,this._hideModalHandler),this.tip&&this.tip.remove(),this._disposePopper(),super.dispose()}show(){if("none"===this._element.style.display)throw new Error("Please use show on visible elements");if(!this.isWithContent()||!this._isEnabled)return;const t=pe.trigger(this._element,this.constructor.Event.SHOW),e=Gt(this._element),n=null===e?this._element.ownerDocument.documentElement.contains(this._element):e.contains(this._element);if(t.defaultPrevented||!n)return;"tooltip"===this.constructor.NAME&&this.tip&&this.getTitle()!==this.tip.querySelector(co).innerHTML&&(this._disposePopper(),this.tip.remove(),this.tip=null);const o=this.getTipElement(),i=(t=>{do{t+=Math.floor(1e6*Math.random())}while(document.getElementById(t));return t})(this.constructor.NAME);o.setAttribute("id",i),this._element.setAttribute("aria-describedby",i),this._config.animation&&o.classList.add(io);const r="function"==typeof this._config.placement?this._config.placement.call(this,o,this._element):this._config.placement,s=this._getAttachment(r);this._addAttachmentClass(s);const{container:a}=this._config;fe.set(o,this.constructor.DATA_KEY,this),this._element.ownerDocument.documentElement.contains(this.tip)||(a.append(o),pe.trigger(this._element,this.constructor.Event.INSERTED)),this._popper?this._popper.update():this._popper=xt(this._element,o,this._getPopperConfig(s)),o.classList.add(ro);const c=this._resolvePossibleFunction(this._config.customClass);c&&o.classList.add(...c.split(" ")),"ontouchstart"in document.documentElement&&[].concat(...document.body.children).forEach((t=>{pe.on(t,"mouseover",Ut)}));const l=this.tip.classList.contains(io);this._queueCallback((()=>{const t=this._hoverState;this._hoverState=null,pe.trigger(this._element,this.constructor.Event.SHOWN),t===ao&&this._leave(null,this)}),this.tip,l)}hide(){if(!this._popper)return;const t=this.getTipElement();if(pe.trigger(this._element,this.constructor.Event.HIDE).defaultPrevented)return;t.classList.remove(ro),"ontouchstart"in document.documentElement&&[].concat(...document.body.children).forEach((t=>pe.off(t,"mouseover",Ut))),this._activeTrigger.click=!1,this._activeTrigger.focus=!1,this._activeTrigger.hover=!1;const e=this.tip.classList.contains(io);this._queueCallback((()=>{this._isWithActiveTrigger()||(this._hoverState!==so&&t.remove(),this._cleanTipClass(),this._element.removeAttribute("aria-describedby"),pe.trigger(this._element,this.constructor.Event.HIDDEN),this._disposePopper())}),this.tip,e),this._hoverState=""}update(){null!==this._popper&&this._popper.update()}isWithContent(){return Boolean(this.getTitle())}getTipElement(){if(this.tip)return this.tip;const t=document.createElement("div");t.innerHTML=this._config.template;const e=t.children[0];return this.setContent(e),e.classList.remove(io,ro),this.tip=e,this.tip}setContent(t){this._sanitizeAndSetContent(t,this.getTitle(),co)}_sanitizeAndSetContent(t,e,n){const o=Ae.findOne(n,t);e||!o?this.setElementContent(o,e):o.remove()}setElementContent(t,e){if(null!==t)return Bt(e)?(e=jt(e),void(this._config.html?e.parentNode!==t&&(t.innerHTML="",t.append(e)):t.textContent=e.textContent)):void(this._config.html?(this._config.sanitize&&(e=Qn(e,this._config.allowList,this._config.sanitizeFn)),t.innerHTML=e):t.textContent=e)}getTitle(){const t=this._element.getAttribute("data-bs-original-title")||this._config.title;return this._resolvePossibleFunction(t)}updateAttachment(t){return"right"===t?"end":"left"===t?"start":t}_initializeOnDelegatedTarget(t,e){return e||this.constructor.getOrCreateInstance(t.delegateTarget,this._getDelegateConfig())}_getOffset(){const{offset:t}=this._config;return"string"==typeof t?t.split(",").map((t=>Number.parseInt(t,10))):"function"==typeof t?e=>t(e,this._element):t}_resolvePossibleFunction(t){return"function"==typeof t?t.call(this._element):t}_getPopperConfig(t){const e={placement:t,modifiers:[{name:"flip",options:{fallbackPlacements:this._config.fallbackPlacements}},{name:"offset",options:{offset:this._getOffset()}},{name:"preventOverflow",options:{boundary:this._config.boundary}},{name:"arrow",options:{element:`.${this.constructor.NAME}-arrow`}},{name:"onChange",enabled:!0,phase:"afterWrite",fn:t=>this._handlePopperPlacementChange(t)}],onFirstUpdate:t=>{t.options.placement!==t.placement&&this._handlePopperPlacementChange(t)}};return{...e,..."function"==typeof this._config.popperConfig?this._config.popperConfig(e):this._config.popperConfig}}_addAttachmentClass(t){this.getTipElement().classList.add(`${this._getBasicClassPrefix()}-${this.updateAttachment(t)}`)}_getAttachment(t){return eo[t.toUpperCase()]}_setListeners(){this._config.trigger.split(" ").forEach((t=>{if("click"===t)pe.on(this._element,this.constructor.Event.CLICK,this._config.selector,(t=>this.toggle(t)));else if("manual"!==t){const e=t===po?this.constructor.Event.MOUSEENTER:this.constructor.Event.FOCUSIN,n=t===po?this.constructor.Event.MOUSELEAVE:this.constructor.Event.FOCUSOUT;pe.on(this._element,e,this._config.selector,(t=>this._enter(t))),pe.on(this._element,n,this._config.selector,(t=>this._leave(t)))}})),this._hideModalHandler=()=>{this._element&&this.hide()},pe.on(this._element.closest(lo),uo,this._hideModalHandler),this._config.selector?this._config={...this._config,trigger:"manual",selector:""}:this._fixTitle()}_fixTitle(){const t=this._element.getAttribute("title"),e=typeof this._element.getAttribute("data-bs-original-title");(t||"string"!==e)&&(this._element.setAttribute("data-bs-original-title",t||""),!t||this._element.getAttribute("aria-label")||this._element.textContent||this._element.setAttribute("aria-label",t),this._element.setAttribute("title",""))}_enter(t,e){e=this._initializeOnDelegatedTarget(t,e),t&&(e._activeTrigger["focusin"===t.type?ho:po]=!0),e.getTipElement().classList.contains(ro)||e._hoverState===so?e._hoverState=so:(clearTimeout(e._timeout),e._hoverState=so,e._config.delay&&e._config.delay.show?e._timeout=setTimeout((()=>{e._hoverState===so&&e.show()}),e._config.delay.show):e.show())}_leave(t,e){e=this._initializeOnDelegatedTarget(t,e),t&&(e._activeTrigger["focusout"===t.type?ho:po]=e._element.contains(t.relatedTarget)),e._isWithActiveTrigger()||(clearTimeout(e._timeout),e._hoverState=ao,e._config.delay&&e._config.delay.hide?e._timeout=setTimeout((()=>{e._hoverState===ao&&e.hide()}),e._config.delay.hide):e.hide())}_isWithActiveTrigger(){for(const t in this._activeTrigger)if(this._activeTrigger[t])return!0;return!1}_getConfig(t){const e=we.getDataAttributes(this._element);return Object.keys(e).forEach((t=>{Zn.has(t)&&delete e[t]})),(t={...this.constructor.Default,...e,..."object"==typeof t&&t?t:{}}).container=!1===t.container?document.body:jt(t.container),"number"==typeof t.delay&&(t.delay={show:t.delay,hide:t.delay}),"number"==typeof t.title&&(t.title=t.title.toString()),"number"==typeof t.content&&(t.content=t.content.toString()),Ht(Jn,t,this.constructor.DefaultType),t.sanitize&&(t.template=Qn(t.template,t.allowList,t.sanitizeFn)),t}_getDelegateConfig(){const t={};for(const e in this._config)this.constructor.Default[e]!==this._config[e]&&(t[e]=this._config[e]);return t}_cleanTipClass(){const t=this.getTipElement(),e=new RegExp(`(^|\\s)${this._getBasicClassPrefix()}\\S+`,"g"),n=t.getAttribute("class").match(e);null!==n&&n.length>0&&n.map((t=>t.trim())).forEach((e=>t.classList.remove(e)))}_getBasicClassPrefix(){return"bs-tooltip"}_handlePopperPlacementChange(t){const{state:e}=t;e&&(this.tip=e.elements.popper,this._cleanTipClass(),this._addAttachmentClass(this._getAttachment(e.placement)))}_disposePopper(){this._popper&&(this._popper.destroy(),this._popper=null)}static jQueryInterface(t){return this.each((function(){const e=fo.getOrCreateInstance(this,t);if("string"==typeof t){if(void 0===e[t])throw new TypeError(`No method named "${t}"`);e[t]()}}))}}$t(fo);const mo={...fo.Default,placement:"right",offset:[0,8],trigger:"click",content:"",template:'<div class="popover" role="tooltip"><div class="popover-arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>'},go={...fo.DefaultType,content:"(string|element|function)"},_o={HIDE:"hide.bs.popover",HIDDEN:"hidden.bs.popover",SHOW:"show.bs.popover",SHOWN:"shown.bs.popover",INSERTED:"inserted.bs.popover",CLICK:"click.bs.popover",FOCUSIN:"focusin.bs.popover",FOCUSOUT:"focusout.bs.popover",MOUSEENTER:"mouseenter.bs.popover",MOUSELEAVE:"mouseleave.bs.popover"};class vo extends fo{static get Default(){return mo}static get NAME(){return"popover"}static get Event(){return _o}static get DefaultType(){return go}isWithContent(){return this.getTitle()||this._getContent()}setContent(t){this._sanitizeAndSetContent(t,this.getTitle(),".popover-header"),this._sanitizeAndSetContent(t,this._getContent(),".popover-body")}_getContent(){return this._resolvePossibleFunction(this._config.content)}_getBasicClassPrefix(){return"bs-popover"}static jQueryInterface(t){return this.each((function(){const e=vo.getOrCreateInstance(this,t);if("string"==typeof t){if(void 0===e[t])throw new TypeError(`No method named "${t}"`);e[t]()}}))}}$t(vo);const bo="scrollspy",yo={offset:10,method:"auto",target:""},Eo={offset:"number",method:"string",target:"(string|element)"},wo="active",Ao=".nav-link, .list-group-item, .dropdown-item",Co="position";class Do extends me{constructor(t,e){super(t),this._scrollElement="BODY"===this._element.tagName?window:this._element,this._config=this._getConfig(e),this._offsets=[],this._targets=[],this._activeTarget=null,this._scrollHeight=0,pe.on(this._scrollElement,"scroll.bs.scrollspy",(()=>this._process())),this.refresh(),this._process()}static get Default(){return yo}static get NAME(){return bo}refresh(){const t=this._scrollElement===this._scrollElement.window?"offset":Co,e="auto"===this._config.method?t:this._config.method,n=e===Co?this._getScrollTop():0;this._offsets=[],this._targets=[],this._scrollHeight=this._getScrollHeight(),Ae.find(Ao,this._config.target).map((t=>{const o=Lt(t),i=o?Ae.findOne(o):null;if(i){const t=i.getBoundingClientRect();if(t.width||t.height)return[we[e](i).top+n,o]}return null})).filter((t=>t)).sort(((t,e)=>t[0]-e[0])).forEach((t=>{this._offsets.push(t[0]),this._targets.push(t[1])}))}dispose(){pe.off(this._scrollElement,".bs.scrollspy"),super.dispose()}_getConfig(t){return(t={...yo,...we.getDataAttributes(this._element),..."object"==typeof t&&t?t:{}}).target=jt(t.target)||document.documentElement,Ht(bo,t,Eo),t}_getScrollTop(){return this._scrollElement===window?this._scrollElement.pageYOffset:this._scrollElement.scrollTop}_getScrollHeight(){return this._scrollElement.scrollHeight||Math.max(document.body.scrollHeight,document.documentElement.scrollHeight)}_getOffsetHeight(){return this._scrollElement===window?window.innerHeight:this._scrollElement.getBoundingClientRect().height}_process(){const t=this._getScrollTop()+this._config.offset,e=this._getScrollHeight(),n=this._config.offset+e-this._getOffsetHeight();if(this._scrollHeight!==e&&this.refresh(),t>=n){const t=this._targets[this._targets.length-1];this._activeTarget!==t&&this._activate(t)}else{if(this._activeTarget&&t<this._offsets[0]&&this._offsets[0]>0)return this._activeTarget=null,void this._clear();for(let e=this._offsets.length;e--;)this._activeTarget!==this._targets[e]&&t>=this._offsets[e]&&(void 0===this._offsets[e+1]||t<this._offsets[e+1])&&this._activate(this._targets[e])}}_activate(t){this._activeTarget=t,this._clear();const e=Ao.split(",").map((e=>`${e}[data-bs-target="${t}"],${e}[href="${t}"]`)),n=Ae.findOne(e.join(","),this._config.target);n.classList.add(wo),n.classList.contains("dropdown-item")?Ae.findOne(".dropdown-toggle",n.closest(".dropdown")).classList.add(wo):Ae.parents(n,".nav, .list-group").forEach((t=>{Ae.prev(t,".nav-link, .list-group-item").forEach((t=>t.classList.add(wo))),Ae.prev(t,".nav-item").forEach((t=>{Ae.children(t,".nav-link").forEach((t=>t.classList.add(wo)))}))})),pe.trigger(this._scrollElement,"activate.bs.scrollspy",{relatedTarget:t})}_clear(){Ae.find(Ao,this._config.target).filter((t=>t.classList.contains(wo))).forEach((t=>t.classList.remove(wo)))}static jQueryInterface(t){return this.each((function(){const e=Do.getOrCreateInstance(this,t);if("string"==typeof t){if(void 0===e[t])throw new TypeError(`No method named "${t}"`);e[t]()}}))}}pe.on(window,"load.bs.scrollspy.data-api",(()=>{Ae.find('[data-bs-spy="scroll"]').forEach((t=>new Do(t)))})),$t(Do);const Oo="active",So="fade",To="show",xo=".active",No=":scope > li > .active";class Ro extends me{static get NAME(){return"tab"}show(){if(this._element.parentNode&&this._element.parentNode.nodeType===Node.ELEMENT_NODE&&this._element.classList.contains(Oo))return;let t;const e=kt(this._element),n=this._element.closest(".nav, .list-group");if(n){const e="UL"===n.nodeName||"OL"===n.nodeName?No:xo;t=Ae.find(e,n),t=t[t.length-1]}const o=t?pe.trigger(t,"hide.bs.tab",{relatedTarget:this._element}):null;if(pe.trigger(this._element,"show.bs.tab",{relatedTarget:t}).defaultPrevented||null!==o&&o.defaultPrevented)return;this._activate(this._element,n);const i=()=>{pe.trigger(t,"hidden.bs.tab",{relatedTarget:this._element}),pe.trigger(this._element,"shown.bs.tab",{relatedTarget:t})};e?this._activate(e,e.parentNode,i):i()}_activate(t,e,n){const o=(!e||"UL"!==e.nodeName&&"OL"!==e.nodeName?Ae.children(e,xo):Ae.find(No,e))[0],i=n&&o&&o.classList.contains(So),r=()=>this._transitionComplete(t,o,n);o&&i?(o.classList.remove(To),this._queueCallback(r,t,!0)):r()}_transitionComplete(t,e,n){if(e){e.classList.remove(Oo);const t=Ae.findOne(":scope > .dropdown-menu .active",e.parentNode);t&&t.classList.remove(Oo),"tab"===e.getAttribute("role")&&e.setAttribute("aria-selected",!1)}t.classList.add(Oo),"tab"===t.getAttribute("role")&&t.setAttribute("aria-selected",!0),Ft(t),t.classList.contains(So)&&t.classList.add(To);let o=t.parentNode;if(o&&"LI"===o.nodeName&&(o=o.parentNode),o&&o.classList.contains("dropdown-menu")){const e=t.closest(".dropdown");e&&Ae.find(".dropdown-toggle",e).forEach((t=>t.classList.add(Oo))),t.setAttribute("aria-expanded",!0)}n&&n()}static jQueryInterface(t){return this.each((function(){const e=Ro.getOrCreateInstance(this);if("string"==typeof t){if(void 0===e[t])throw new TypeError(`No method named "${t}"`);e[t]()}}))}}pe.on(document,"click.bs.tab.data-api",'[data-bs-toggle="tab"], [data-bs-toggle="pill"], [data-bs-toggle="list"]',(function(t){["A","AREA"].includes(this.tagName)&&t.preventDefault(),Wt(this)||Ro.getOrCreateInstance(this).show()})),$t(Ro);const Io="toast",Lo="hide",ko="show",Po="showing",Bo={animation:"boolean",autohide:"boolean",delay:"number"},jo={animation:!0,autohide:!0,delay:5e3};class Ho extends me{constructor(t,e){super(t),this._config=this._getConfig(e),this._timeout=null,this._hasMouseInteraction=!1,this._hasKeyboardInteraction=!1,this._setListeners()}static get DefaultType(){return Bo}static get Default(){return jo}static get NAME(){return Io}show(){pe.trigger(this._element,"show.bs.toast").defaultPrevented||(this._clearTimeout(),this._config.animation&&this._element.classList.add("fade"),this._element.classList.remove(Lo),Ft(this._element),this._element.classList.add(ko),this._element.classList.add(Po),this._queueCallback((()=>{this._element.classList.remove(Po),pe.trigger(this._element,"shown.bs.toast"),this._maybeScheduleHide()}),this._element,this._config.animation))}hide(){this._element.classList.contains(ko)&&(pe.trigger(this._element,"hide.bs.toast").defaultPrevented||(this._element.classList.add(Po),this._queueCallback((()=>{this._element.classList.add(Lo),this._element.classList.remove(Po),this._element.classList.remove(ko),pe.trigger(this._element,"hidden.bs.toast")}),this._element,this._config.animation)))}dispose(){this._clearTimeout(),this._element.classList.contains(ko)&&this._element.classList.remove(ko),super.dispose()}_getConfig(t){return t={...jo,...we.getDataAttributes(this._element),..."object"==typeof t&&t?t:{}},Ht(Io,t,this.constructor.DefaultType),t}_maybeScheduleHide(){this._config.autohide&&(this._hasMouseInteraction||this._hasKeyboardInteraction||(this._timeout=setTimeout((()=>{this.hide()}),this._config.delay)))}_onInteraction(t,e){switch(t.type){case"mouseover":case"mouseout":this._hasMouseInteraction=e;break;case"focusin":case"focusout":this._hasKeyboardInteraction=e}if(e)return void this._clearTimeout();const n=t.relatedTarget;this._element===n||this._element.contains(n)||this._maybeScheduleHide()}_setListeners(){pe.on(this._element,"mouseover.bs.toast",(t=>this._onInteraction(t,!0))),pe.on(this._element,"mouseout.bs.toast",(t=>this._onInteraction(t,!1))),pe.on(this._element,"focusin.bs.toast",(t=>this._onInteraction(t,!0))),pe.on(this._element,"focusout.bs.toast",(t=>this._onInteraction(t,!1)))}_clearTimeout(){clearTimeout(this._timeout),this._timeout=null}static jQueryInterface(t){return this.each((function(){const e=Ho.getOrCreateInstance(this,t);if("string"==typeof t){if(void 0===e[t])throw new TypeError(`No method named "${t}"`);e[t](this)}}))}}ge(Ho),$t(Ho);var Mo,Wo=function(){function t(){this.children=[]}return t.prototype.addEventHandler=function(t,e){this.element.addEventListener(t,e)},Object.defineProperty(t.prototype,"title",{get:function(){return this.element.title},set:function(t){this.element.title=t},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"dataSourceName",{get:function(){return this._dataSourceName},set:function(t){this._dataSourceName=t},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"isReadOnly",{get:function(){return this._isReadOnly},set:function(t){this._isReadOnly=t},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"width",{get:function(){return this.element.style.width},set:function(t){this.element.style.width=t},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"visible",{get:function(){return!0!==this.element.hidden},set:function(t){this.element.hidden=!0!==t},enumerable:!1,configurable:!0}),t.prototype.getCss=function(t){return this.element.style[t]},t.prototype.setCss=function(t,e){this.element.style[t]=e},Object.defineProperty(t.prototype,"css",{set:function(t){var e=this;"object"==typeof t&&null!==t&&!0!==this.isEmptyObj(t)&&Object.keys(t).forEach((function(n){e.element.style[n]=t[n]}))},enumerable:!1,configurable:!0}),t.prototype.props=function(t){var e=this;t.forEach((function(t){return e.prop(t.key,t.value)}))},t.prototype.prop=function(t,e){return this.element.setAttribute(t,e),this.element},t.prototype.getProp=function(t){return this.element.getAttribute(t)},t.prototype.findElements=function(t){return this.element.querySelectorAll(t)},t.prototype.findById=function(t){return document.getElementById(t)},t.prototype.removeElement=function(t){t.parentElement.removeChild(t)},t.prototype.addClass=function(t){var e,n=t.split(" ");return(e=this.element.classList).add.apply(e,n),this},t.prototype.removeClass=function(t){return this.element.classList.remove(t),this},t.prototype.hasClass=function(t){return this.element.classList.contains(t)},t.prototype.hasClasses=function(t){var e=this;return void 0===t.split(" ").find((function(t){return!1===e.element.classList.contains(t)}))},t.prototype.setText=function(t){return this.element.textContent=t,this},t.prototype.getText=function(){return this.element.textContent},t.prototype.append=function(t,e){return void 0===e&&(e=!0),e&&this.children.push(t),this.element.appendChild(t.element),this},t.prototype.focus=function(){this.element.focus()},t.prototype.isEmptyObj=function(t){return 0===Object.keys(t).length},Object.defineProperty(t.prototype,"id",{get:function(){return this.getProp("id")},set:function(t){this.prop("id",t)},enumerable:!1,configurable:!0}),t.prototype.clone=function(){var e=new t,n=this.element.cloneNode();if(n instanceof HTMLElement&&(e.element=n),this.children.length>0){var o=this.children.map((function(t){var n=t.clone();return e.element.append(n.element),n}));e.children=o}return e},t.prototype.shClone=function(t){return t?Object.assign(Object.create(Object.getPrototypeOf(t)),t):t},t.prototype.childrenNodes=function(){return this.element.children},t.prototype.appendChild=function(t){this.element.appendChild(t)},t.prototype.wrap=function(t,e){var n=t.cloneNode();if(e instanceof Element){var o=e.parentElement;n.appendChild(e),o.appendChild(n)}else{if(e.length<=0)return;o=e[0].parentElement;for(var i=0;i<e.length;i++){var r=e[i];n.appendChild(r)}o.appendChild(n)}},t.prototype.addDragHandlers=function(t,e){e&&!this.isEmptyObj(e)&&(e.dragStart&&t.addEventListener("dragstart",e.dragStart),e.dragLeave&&t.addEventListener("dragleave",e.dragLeave),e.dragEnter&&t.addEventListener("dragenter",e.dragEnter),e.dragOver&&t.addEventListener("dragover",e.dragOver),e.dragEnd&&t.addEventListener("dragend",e.dragEnd),e.drop&&t.addEventListener("drop",e.drop))},t.prototype.matches=function(t,e){return!(!t||1!==t.nodeType)&&(!e||t.matches(e))},t.prototype.siblings=function(t){var e=this,n=[];return this.element.parentNode?(this.element.parentNode.childNodes.forEach((function(o){o!==e.element&&e.matches(o,t)&&n.push(o)})),n):n},t}(),Go=(n(661),function(){return Go=Object.assign||function(t){for(var e,n=1,o=arguments.length;n<o;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},Go.apply(this,arguments)}),Uo=new(function(){function t(){}return t.prototype.get=function(t){var e=document.cookie.match("(?:(?:^|.*; *)".concat(t," *= *([^;]*).*$)|^.*$"))[1];if(e)return decodeURIComponent(e)},t.prototype.set=function(t,e,n){void 0===n&&(n={}),n.days&&(n["max-age"]=60*n.days*60*24,delete n.days),n=Object.entries(n).reduce((function(t,e){var n=e[0],o=e[1];return"".concat(t,"; ").concat(n,"=").concat(o)}),""),document.cookie=t+"="+encodeURIComponent(e)+n},t.prototype.delete=function(t,e){this.set(t,"",Go({"max-age":-1},e))},t.prototype.getJSON=function(t){var e=this.get(t);return e?JSON.parse(e):""},t.prototype.setJSON=function(t,e,n){this.set(t,JSON.stringify(e),n)},t}()),Fo=function(){function t(){}return t.COL_SORTING="COL_SORTING",t.COL_RESIZED="COL_RESIZED",t.COL_SHOW_HIDE="COL_SHOW_HIDE",t.COL_REORDER="COL_REORDER",t}(),zo=function(){function t(){}return t.GRID_DATA="GRID_DATA",t.ON_NEXT_RECORD="ON_NEXT_RECORD",t.ON_PREV_RECORD="ON_PREV_RECORD",t.ON_SAVE_RECORD="ON_SAVE_RECORD",t.ON_DELETE_RECORD="ON_DELETE_RECORD",t.ON_LAST_RECORD="ON_LAST_RECORD",t.ON_FIRST_RECORD="ON_FIRST_RECORD",t.ON_ADD_RECORD="ON_ADD_RECORD",t.ON_FETCH_RECORD="ON_FETCH_RECORD",t.ON_FETCH_RECORD_ERROR="ON_FETCH_RECORD_ERROR",t.ON_FETCH_GRID_RECORD="ON_FETCH_GRID_RECORD",t.ON_FETCH_GRID_RECORD_ERROR="ON_FETCH_GRID_RECORD_ERROR",t.ON_NAVIGATING_RECORD="ON_NAVIGATING_RECORD",t.ON_GRID_UPDATED="ON_GRID_UPDATED",t.ON_SAVE_ERROR="ON_SAVE_ERROR",t.ON_SORTING_REQUESTED="ON_SORTING_REQUESTED",t.ON_COLS_REORDERED="ON_COLS_REORDERED",t.ON_GRID_DATA_BOUND="ON_GRID_DATA_BOUND",t.ON_GRID_CONFIG_UPDATED="ON_GRID_CONFIG_UPDATED",t.ON_PAGE_READY="ON_PAGE_READY",t.ON_ROW_UPDATED="ON_ROW_UPDATED",t.ON_FIELD_UPDATED="ON_FIELD_UPDATED",t.ON_ROW_DOUBLE_CLICKED="ON_ROW_DOUBLE_CLICKED",t}(),qo=new(function(){function t(){this.callbacks=[],this.registerWinPopState()}return t.prototype.registerWinPopState=function(){var t=this;window.onpopstate=function(e){if(e.state&&e.state.eventData){console.log(e.state);var n={EventData:e.state.eventData,SkipPush:!0,DataSourceName:""};t.Emit(zo.ON_FETCH_RECORD,window,n)}}},t.prototype.Emit=function(t,e,n){if(t)try{this.callbacks.forEach((function(o){o.EventName!==t||o.DataSourceName!==n.DataSourceName&&!0===o.VerifyDataSourceName||o.Callback(e,n)}))}catch(t){console.error(t)}},t.prototype.Unsubscribe=function(t){var e=this.callbacks.filter((function(e){return 0==(e.Key===t.Key&&e.EventName===t.EventName&&e.DataSourceName===t.DataSourceName)}));this.callbacks=e},t.prototype.Subscribe=function(t){t.EventName&&this.callbacks.push(t)},t}()),Vo=function(){function t(){}return t.prototype.addItem=function(t,e,n){var o={value:e,type:"prem",expiry:n.getTime()};"object"==typeof e&&void 0!==e&&(o.type="object"),sessionStorage.setItem(t,JSON.stringify(o))},t.prototype.appendItem=function(t,e){try{var n=this.getItemRaw(t);if(n){var o=e(n.value);this.addItem(t,o,new Date(n.expiry))}}catch(t){console.error(t)}},t.prototype.createExpiryKey=function(t){return t+"-expiry"},t.prototype.getItemRaw=function(t){var e=sessionStorage.getItem(t);if(e){var n=JSON.parse(e);return Date.now()>n.expiry?(this.removeItem(t),void console.log("entry expired, will be removed",n)):n}return null},t.prototype.getItem=function(t){var e=this.getItemRaw(t);return e?e.value:null},t.prototype.removeItem=function(t){sessionStorage.removeItem(t)},t.prototype.removeAll=function(t){if(t){var e=sessionStorage.length;if(!(e<=0)){for(var n=[],o=0;o<e;o++)(i=sessionStorage.key(o)).startsWith(t)&&n.push(i);for(o=0;o<n.length;o++){var i=n[o];sessionStorage.removeItem(i)}}}else sessionStorage.removeAll()},t}(),$o=new(function(){function t(){this.DataTables=[]}return t.prototype.Add=function(t){this.DataTables.push(t)},t.prototype.GetAll=function(){var t=[];return this.DataTables.forEach((function(e){if(!e.isReadOnly){var n={DataSourceName:e.dataSourceName,Data:e.dirtyRecords};t.push(n)}})),t},t.prototype.GetByDSName=function(t){var e=this.DataTables.find((function(e){return e.dataSourceName===t}));if(e)return{DataSourceName:e.dataSourceName,Data:e.dirtyRecords}},t}()),Ko=(Mo=function(t,e){return Mo=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},Mo(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function n(){this.constructor=t}Mo(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),Xo=function(t){function e(e){var n=t.call(this)||this;return n.options=e,n.dataSourceName=e.DataSourceName,n}return Ko(e,t),e.prototype.notifyListeners=function(t,e){qo.Emit(t,this,e)},e.prototype.render=function(){var t,e;if("select"===this.options.InputType)this.element=document.createElement("select");else if("button"===this.options.InputType){var n=document.createElement("button");n.type=this.options.InputType,this.element=n}else{var o=document.createElement("input");o.type=this.options.InputType,this.element=o}this.element.id=null!==(t=this.options.ElementId)&&void 0!==t?t:this.options.InputType+"_"+this.options.DataSourceName+"_"+this.options.ModelName,this.title=null!==(e=this.options.Title)&&void 0!==e?e:""},Object.defineProperty(e.prototype,"val",{get:function(){if(this.element)return this.element instanceof HTMLInputElement?"checkbox"===this.options.InputType?this.element.checked:"number"===this.options.InputType?this.element.valueAsNumber:this.element.value:this.element.value},set:function(t){this.element&&("checkbox"===this.options.InputType?this.element.checked=t:this.element.value=t,"select"===this.options.InputType&&this.change())},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"valExt",{set:function(t){this.val=t,this.change()},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"readonly",{get:function(){return this.element instanceof HTMLInputElement&&this.element.readOnly},set:function(t){this.element instanceof HTMLInputElement&&(this.element.readOnly=t)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"disabled",{get:function(){return this.element instanceof HTMLInputElement||this.element instanceof HTMLSelectElement?this.element.disabled:"true"===this.getProp("disabled")},set:function(t){if(this.element instanceof HTMLInputElement||this.element instanceof HTMLSelectElement)this.element.disabled=t;else{var e=!0===t?"true":"false";this.prop("disabled",e)}},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"isKey",{get:function(){return"true"===this.getProp("data-keycolumn")},set:function(t){this.prop("data-keycolumn",t)},enumerable:!1,configurable:!0}),e.prototype.addDoubleClickEvent=function(){var t=this;this.element.addEventListener("dblclick",(function(e){t.notifyListeners(zo.ON_ROW_DOUBLE_CLICKED,{EventData:{Event:e},DataSourceName:t.options.DataSourceName})}))},e.prototype.change=function(){this.element.dispatchEvent(new Event("change"))},e.prototype.clone=function(){return t.prototype.clone.call(this)},e}(Wo),Yo=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),Qo=function(t){function e(e){var n=this;return e.InputType="checkbox",(n=t.call(this,e)||this).render(),n}return Yo(e,t),e.prototype.clone=function(){var n=t.prototype.clone.call(this),o=new e(this.shClone(this.options));return o.element=n.element,o.children=n.children,this.addDoubleClickEvent(),o},e}(Xo),Jo=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),Zo=function(t){function e(e){var n=t.call(this)||this;return n.options=e,n.render(),n}return Jo(e,t),e.prototype.render=function(){var t=document.createElement("option");t.value=this.options.value,t.text=this.options.text,this.options.isSelected&&(t.selected=!0),this.element=t},e.prototype.clone=function(){var e=t.prototype.clone.call(this);return e.setText(this.options.text),e},e}(Wo),ti=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),ei=function(t){function e(e){var n=this;return e.InputType="select",(n=t.call(this,e)||this).render(),n}return ti(e,t),e.prototype.render=function(){var e=this;t.prototype.render.call(this),this.options.SelectOptions.forEach((function(t){return e.append(new Zo(t))})),this.addClass("form-select form-select-sm")},e.prototype.clone=function(){var n=t.prototype.clone.call(this),o=new e(this.shClone(this.options));return o.element=n.element,o.children=n.children,this.addDoubleClickEvent(),o},e}(Xo),ni=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),oi=function(t){function e(e){var n,o=this;return e.InputType=null!==(n=e.InputType)&&void 0!==n?n:"text",(o=t.call(this,e)||this).render(),o}return ni(e,t),e.prototype.render=function(){var e,n;t.prototype.render.call(this),this.addClass(null!==(e=this.options.Classes)&&void 0!==e?e:"form-control form-control-sm"),this.placeHolder=null!==(n=this.options.PlaceHolder)&&void 0!==n?n:this.options.ModelName},Object.defineProperty(e.prototype,"placeHolder",{set:function(t){t&&this.element instanceof HTMLInputElement&&(this.element.placeholder=t)},enumerable:!1,configurable:!0}),e.prototype.clone=function(){var n=t.prototype.clone.call(this),o=new e(this.shClone(this.options));return o.element=n.element,o.children=n.children,o.addDoubleClickEvent(),o},e}(Xo),ii=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),ri=function(t){function e(e){var n=this;return e.InputType="button",(n=t.call(this,e)||this).options=e,n.render(),n}return ii(e,t),e.prototype.render=function(){var e;if(t.prototype.render.call(this),this.addClass(null!==(e=this.options.Classes)&&void 0!==e?e:"btn btn-outline-primary"),this.options.Icon){var n=document.createElement("i");n.classList.add("bi","bi-".concat(this.options.Icon)),this.element.appendChild(n)}this.options.Handler&&this.addClickHandler(this.options.Handler)},e.prototype.addClickHandler=function(t){this.element.addEventListener("click",(function(e){return t(e)}))},e.prototype.clone=function(){var n=t.prototype.clone.call(this),o=new e(this.shClone(this.options));return o.children=n.children,o},e}(Xo),si=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),ai=function(t){function e(e){var n=t.call(this)||this;return n.options=e,n.parentContainerId=n.options.ContainerId,n.modalId="".concat(n.parentContainerId,"_bs_").concat(n.options.ModelName),n.modalTitleId="".concat(n.parentContainerId,"_lbs_").concat(n.options.ModelName),n.containerId="".concat(n.parentContainerId,"_cbs_").concat(n.options.ModelName),n.gridId="".concat(n.parentContainerId,"_g_").concat(n.options.ModelName),n.render(),n.grid=n.renderGrid(),n.onItemSelected=function(t,e){console.log()},n}return si(e,t),e.prototype.render=function(){var t=this,e=document.getElementById(this.modalId);if(e)this.element=e,this.selectorModal=Mn.getOrCreateInstance(e);else{this.element=document.createElement("div"),this.element.id=this.modalId,this.element.classList.add("modal"),this.element.innerHTML='<div class="modal-dialog modal-dialog-scrollable">\n                                    <div class="modal-content">\n                                        <div class="modal-header">\n                                            <h5 class="modal-title" id="'.concat(this.modalTitleId,'">Select a value</h5>\n                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>\n                                        </div>\n                                        <div class="modal-body">\n                                            <div id="').concat(this.containerId,'">\n\n                                            </div>\n                                        </div>\n                                        <div class="modal-footer">\n                                            <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Ok</button>\n                                        </div>\n                                    </div>\n                                </div>');var n=document.getElementById(this.parentContainerId);n&&n.appendChild(this.element),this.selectorModal=new Mn(this.element),this.element.addEventListener("shown.bs.modal",(function(e){t.grid.clearGrid(),t.grid.infiniteScroller.currentPage=1,t.grid.fetchGridPage(1),t.onWindowShown&&t.onWindowShown(t)}))}},e.prototype.show=function(){this.selectorModal.show()},e.prototype.renderGrid=function(){if(!this.findById(this.gridId)){var t={name:this.options.DataSourceName+"_"+this.options.ModelName,isRemote:!0,url:this.options.UrlCb},e={gridId:this.gridId,containerId:this.containerId,colDefinition:this.options.GridCols,dataSource:t,isReadonly:!0,enableInfiniteScroll:!0},n=new Bi(e);return n.RegisterCallbacks(),n.removeHandler(zo.GRID_DATA),n.removeHandler(zo.ON_ADD_RECORD),n.removeHandler(zo.ON_FETCH_RECORD),n.removeHandler(zo.ON_SAVE_RECORD),n.removeHandler(zo.ON_SAVE_ERROR),n.Render(),n.gridActions.visible=!1,n}},e}(Wo),ci=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),li=function(t){function e(e,n){var o=t.call(this,e)||this;return o.options=e,o.selectorWindow=n,o.render(),o}return ci(e,t),e.prototype.onItemSelected=function(t,e){var n=t.grid.body.getSelectedRow().getInputs().find((function(t){return t.isKey}));n&&(this.txtElement.val=n.val,this.txtElement.change()),t.selectorModal.hide()},e.prototype.render=function(){var t=this;if(!this.selectorWindow){var e=new ai(this.options);this.selectorWindow=e}this.txtElement=new oi(this.options),this.btnElement=new ri({DataSourceName:this.options.DataSourceName,Icon:"search",Handler:function(e){return n=t,t.selectorWindow.grid.removeHandler(zo.ON_ROW_DOUBLE_CLICKED),t.selectorWindow.grid.addHandler(zo.ON_ROW_DOUBLE_CLICKED,(function(e,o){return n.onItemSelected(t.selectorWindow,o)})),void t.selectorWindow.show();var n}});var n=document.createElement("div");n.classList.add("input-group","input-group-sm"),n.appendChild(this.txtElement.element),n.appendChild(this.btnElement.element),this.element=n},e.prototype.clone=function(){var n=t.prototype.clone.call(this),o=this.shClone(this.options);o.cloneContext=!0;var i=new e(o,this.selectorWindow);return i.children=n.children,i},e}(Xo),di=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),ui=function(){return ui=Object.assign||function(t){for(var e,n=1,o=arguments.length;n<o;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},ui.apply(this,arguments)},pi=function(t){function e(e,n){void 0===n&&(n=!1);var o=t.call(this)||this;return o.options=e||{},o.isHeader=n,o.render(),o}return di(e,t),e.prototype.render=function(){var t=this.options?this.options.RowSpan:void 0,e=this.options?this.options.ColSpan:void 0;this.element=!0===this.isHeader?document.createElement("th"):document.createElement("td"),this.isHeader&&(this.element.classList.add("sorting","ds-col"),this.options.DisplayName&&this.setText(this.options.DisplayName)),t&&this.prop("rowSpan",t),e&&this.prop("colSpan",e),this.addInputControl()},e.prototype.addInputControl=function(){var t=this.options;if(!this.isHeader&&t.DisplayName&&t.PropName){var e=null,n={DataSourceName:t.DataSourceName,ModelName:t.PropName,PlaceHolder:t.DisplayName,Title:t.DisplayName,InputType:t.DataType};if("select"===t.DataType){var o=ui(ui({},n),{SelectOptions:t.SelectList});e=new ei(o)}else if("checkbox"===t.DataType)e=new Qo(n);else if("selector"===t.DataType){var i=ui(ui({},n),{ContainerId:t.ContainerId,UrlCb:t.SelectorDataCB,GridCols:t.SelectorCols});e=new li(i)}else e=new oi(n);!0===t.IsKey&&(e.readonly=!0,e.isKey=!0),!0===t.IsReadOnly&&(e.readonly=!0,e.setCss("cursor","pointer"),e.setCss("user-select","none")),this.append(e)}},e.prototype.getInputControls=function(){if(!0===this.isHeader)return[];var t=[],e=this.children;return e.length>0&&e.forEach((function(e,n){e instanceof li?t.push(e.txtElement):e instanceof Xo&&t.push(e)})),t},e.prototype.getCellText=function(){if(this.isHeader)return this.getText();var t=this.children[0];if(!t)return"";if(t.element instanceof HTMLInputElement){if(t instanceof Qo)return t.element.checked+"";if(t instanceof Xo)return t.val}return t.getText()},e.prototype.clone=function(){var n=t.prototype.clone.call(this),o=new e(this.shClone(this.options),this.isHeader),i=o.getText();return o.children=n.children,o.element=n.element,this.isHeader&&o.setText(i),o},e}(Wo),hi=function(t,e,n){void 0===t&&(t=1),void 0===e&&(e=10),void 0===n&&(n=10),this.pageIndex=t,this.pageSize=!e||e<=0?10:e,this.totalRecords=n,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)},fi=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),mi=function(t){function e(e,n){void 0===n&&(n=!1);var o=t.call(this)||this;return o.sessionStorage=new Vo,o.dataSourceName=e,o.enableCaching=n,o}return fi(e,t),e.prototype.notifyListeners=function(t,e){qo.Emit(t,this,e)},e.prototype.get=function(t){var e,n=this,o=n.enableCaching;if(!0===o){var i=JSON.stringify(t),r=this.sessionStorage.getItem(i);if(r)return n.notifyResponse(r,t),Promise.resolve()}var s={method:null!==(e=t.method)&&void 0!==e?e:"GET",headers:t.headers?t.headers:{}};return fetch(t.url,s).then((function(t){return t.json()})).then((function(e){!0===o&&n.sessionStorage.addItem(i,e,new Date(Date.now()+6e5)),n.notifyResponse(e,t)})).catch((function(e){n.notifyError(e,t)}))},e.prototype.notifyResponse=function(t,e){try{var n={DataSourceName:this.dataSourceName,EventData:{Data:t.items,MetaData:new hi(t.metaData.pageIndex,t.metaData.pageSize,t.metaData.totalRecords)}}}catch(t){return void this.notifyError("invalid response. Make sure response have fields: items{array[object]}, metaData {pageIndex, pageSize, totalRecords}",e)}this.notifyListeners(zo.ON_FETCH_GRID_RECORD,n)},e.prototype.notifyError=function(t,e){var n={DataSourceName:this.dataSourceName,EventData:{Event:t,RecordId:e.recordId}};this.notifyListeners(zo.ON_FETCH_GRID_RECORD_ERROR,n)},e}(Wo),gi=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),_i=function(t){function e(e){var n=t.call(this)||this;return n.options=e,n.render(),n}return gi(e,t),e.prototype.render=function(){var t=document.createElement("a");this.options.text&&(t.text=this.options.text),this.options.href&&(t.href=this.options.href),this.element=t,this.options.classes&&this.addClass(this.options.classes),this.options.clickHandler&&this.element.addEventListener("click",this.options.clickHandler)},e}(Wo),vi=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),bi=function(t){function e(e){var n=t.call(this)||this;return n.pageLinks=[],n.options=e,n.listId="pg_list_".concat(n.options.dataSourceName),n.containerId="pg_container_".concat(n.options.dataSourceName),n}return vi(e,t),e.prototype.render=function(){var t,e=this,n=null!==(t=this.options.metaData.pageIndex)&&void 0!==t?t:1;this.element&&this.element.remove(),this.pageLinks=[],this.element=document.createElement("div"),this.element.id=this.containerId,this.addClass("bs-pagination");var o=document.createElement("nav");o.setAttribute("aria-label","Page navigation"),this.element.appendChild(o);var i=document.createElement("ul");i.id=this.listId,i.classList.add("pagination","justify-content-end");for(var r=1;r<=this.options.metaData.totalPages&&r<=5;r++){var s=document.createElement("li");s.classList.add("page-item"),n===r&&s.classList.add("active");var a=new _i({dataSourceName:this.options.dataSourceName,classes:"page-link",href:"#",text:"".concat(r),clickHandler:function(t){if(t.preventDefault(),t.target instanceof HTMLElement&&e.options.nextPageCallback){var n=t.target.getAttribute("data-p-index");e.options.nextPageCallback(parseInt(n)),e.focusPageIndex(n)}}});a.prop("data-p-index","".concat(r)),this.pageLinks.push(a),s.appendChild(a.element),i.appendChild(s)}o.appendChild(i)},e.prototype.focusPageIndex=function(t){this.pageLinks.forEach((function(e){var n=e.element.closest(".page-item");n&&(e.getProp("data-p-index")===t?!0!==n.classList.contains("active")&&n.classList.add("active"):n.classList.remove("active"))}))},e.prototype.clear=function(){var t=this.element.querySelector("#"+this.listId);this.pageLinks=[],t.replaceChildren()},e}(Wo),yi=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),Ei=function(t){function e(e){var n=t.call(this)||this;return n.gridElement=e.gridElement,n.httpClient=e.httpClient,n.s_area=null,n.observer=null,n.target=null,n.currentPage=1,n.initData=null,n.initMetaData=null,n.nextPageCallback=null,n}return yi(e,t),e.prototype.observerCB=function(t,e){!0===t[0].isIntersecting&&this.currentPage<this.initMetaData.totalPages&&(console.log("Infinite scroll: fetching next page#: ",this.currentPage+1),this.currentPage++,this.nextPageCallback(this.currentPage))},e.prototype.observe=function(t){this.target=t,this.observer.observe(t)},e.prototype.unobserve=function(){this.observer.unobserve(this.target)},e.prototype.enable=function(){var t=this;this.s_area="scroll_area_"+this.gridElement.id;var e=document.createElement("div");e.id=this.s_area,e.classList.add("row","bs-scroll"),this.wrap(e,this.gridElement);var n={root:document.getElementById(this.s_area),rootMargin:"0px",threshold:.3,trackVisibility:!1};this.observer=new IntersectionObserver((function(e,n){return t.observerCB(e,n)}),n);var o=this.gridElement.querySelectorAll("tr"),i=o[o.length-1];this.observe(i)},e}(Wo),wi=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),Ai=function(t){function e(){var e=t.call(this)||this;return e.render(),e}return wi(e,t),e.prototype.render=function(){this.element=document.createElement("i"),this.element.classList.add("bi","bi-caret-right","row-marker")},e.prototype.clone=function(){return t.prototype.clone.call(this)},e}(Wo),Ci=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),Di=function(t){function e(){var e=t.call(this)||this;return e.render(),e}return Ci(e,t),e.prototype.render=function(){this.element=document.createElement("div"),this.addClass("row actions-container")},e.prototype.addAction=function(t,e,n,o,i){void 0===i&&(i="");var r=this.getButton(t,e,n,i);return r.addClickHandler(o),this.append(r,!0),this},e.prototype.addDeleteAction=function(t){return this.addAction("btnDeleteRow","danger","trash",t,"Delete")},e.prototype.addNewRecordAction=function(t){return this.addAction("btnAddRow","primary","plus-circle",t,"Add")},e.prototype.addGridSettingsAction=function(){var t=this.getButton("btnSettings","primary","gear","Settings");return t.prop("data-bs-toggle","modal"),t.prop("data-bs-target","#staticBackdrop_".concat(this.dataSourceName)),this.append(t,!0),this},e.prototype.getButton=function(t,e,n,o){return new ri({DataSourceName:this.dataSourceName,Classes:"btn btn-sm btn-outline-".concat(e," grid-toolbar-action"),ElementId:"".concat(t,"_").concat(this.dataSourceName),Icon:n,Title:o})},e}(Wo),Oi=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),Si=function(t){function e(e){var n=t.call(this)||this;return n.cells=[],n.options=e,n.render(),n}return Oi(e,t),e.prototype.render=function(){this.element||(this.element=document.createElement("tr")),!0===this.options.gridHeader?this.addClass("draggable").addClass("grid-cols"):this.addClass("grid-row"),!0===this.options.isTemplateRow&&(this.css={display:"none"},this.visible=!1)},Object.defineProperty(e.prototype,"rowCategory",{get:function(){return this.getProp("data-rowcategory")},set:function(t){this.prop("data-rowcategory",t)},enumerable:!1,configurable:!0}),e.prototype.addCell=function(t){this.element.append(t.element),this.cells.push(t)},e.prototype.addCells=function(t){var e=this;t.forEach((function(t){return e.addCell(t)}))},e.prototype.focusRow=function(){this.removeClass("table-active").addClass("table-active")},e.prototype.getInputs=function(){if(!0===this.options.gridHeader)return[];var t=[];return this.cells.forEach((function(e,n){var o=e.getInputControls();t=t.concat(o)})),t},e.prototype.createInputFor=function(t,e){return t.DataSourceName=this.options.dataSourceName,t.IsReadOnly=e,t.ContainerId=this.options.containerId,new pi(t,!1)},e.prototype.createHeaderFor=function(t){return new pi(t,!0)},e.prototype.getVisibleInputs=function(){return this.getInputs().filter((function(t){return!0===t.visible}))},e.prototype.getRowDataExt=function(){var t=this.getInputs(),e={};return t.forEach((function(t,n){var o=t.options.ModelName;e[o]=t})),e},Object.defineProperty(e.prototype,"rType",{get:function(){return!0===this.options.gridHeader?"head":"data"},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"rowIndex",{get:function(){var t=this.getProp(this.rType+"-rowindex");return parseInt(t)},set:function(t){this.prop(this.rType+"-rowindex",t)},enumerable:!1,configurable:!0}),e.prototype.getRowData=function(){var t=this.getInputs(),e={},n=this.rowCategory;return e.rowCategory=n,t.forEach((function(t,n){var o=t.options.ModelName;e[o]=t.val})),e.clientRowNumber=this.rowIndex,e},Object.defineProperty(e.prototype,"isRowDirty",{get:function(){return"true"===this.getProp("data-isdirty")},set:function(t){this.prop("data-isdirty",!0===t?"true":"false")},enumerable:!1,configurable:!0}),e.prototype.clone=function(){var n=t.prototype.clone.call(this),o=this.shClone(this.options);o.isTemplateRow=!1;var i=new e(o);return i.element=n.element,i.children=n.children,i.cells=this.cells.map((function(t){var e=t.clone();return i.element.append(e.element),e})),i},e}(Wo),Ti=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),xi=function(t){function e(){var e=t.call(this)||this;return e.rows=[],e}return Ti(e,t),e.prototype.addRow=function(t){this.append(t);var e=this.getNextRowIndex();t.rowIndex=e;var n=!0===t.options.gridHeader?"head":"data";return t.id="".concat(t.options.gridId,"_").concat(n,"_").concat(e),this.rows.push(t),this},e.prototype.getVisibleRows=function(){return this.rows.filter((function(t){return!0===t.visible}))},e.prototype.getNextRowIndex=function(){return this.rows.length+1},e.prototype.getGridTitlesRow=function(){return this.rows.find((function(t){return!0===t.options.gridHeader}))},e}(Wo),Ni=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),Ri=function(t){function e(){var e=t.call(this)||this;return e.render(),e}return Ni(e,t),e.prototype.render=function(){this.element=document.createElement("thead"),this.addClass("table-light")},e}(xi),Ii=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),Li=function(t){function e(){var e=t.call(this)||this;return e.render(),e}return Ii(e,t),e.prototype.render=function(){this.element=document.createElement("tbody")},e.prototype.notifyListeners=function(t,e){qo.Emit(t,this,e)},e.prototype.rowSiblings=function(t){return this.rows.filter((function(e,n){if(e!==t)return e}))},e.prototype.focusRow=function(t){t.focusRow(),this.rowSiblings(t).forEach((function(t,e){return t.removeClass("table-active")}))},e.prototype.getTemplateRow=function(){return this.rows.find((function(t){return!0===t.options.isTemplateRow}))},e.prototype.getDirtyRows=function(){return this.rows.filter((function(t){return!0===t.isRowDirty}))},e.prototype.getDirtyRecords=function(){var t=this.getDirtyRows();if(0===t.length)return[];var e=[];return t.forEach((function(t,n){e.push(t.getRowData())})),e},e.prototype.getAllRecords=function(){var t=this.rows.filter((function(t){return!0!==t.options.isTemplateRow})),e=[];return t.forEach((function(t){e.push(t.getRowData())})),e},e.prototype.getSelectedRow=function(){return this.rows.find((function(t,e){return!0===t.hasClass("table-active")}))},e.prototype.markDeleted=function(){var t=this.getSelectedRow();if(t){var e=this.rowSiblings(t),n=e[e.length-1];t.removeClass("table-active"),t.isRowDirty=!0,t.css={display:"none"},t.visible=!1;var o=t.rowCategory;t.rowCategory="ADDED"===o?"ADDED_DELETED":"DELETED",this.notifyListeners(zo.ON_GRID_UPDATED,{DataSourceName:t.options.dataSourceName,EventData:{Event:t}}),this.focusRow(n)}},e.prototype.removeRow=function(t){t.element.remove();var e=this.rows.indexOf(t);e>-1&&this.rows.splice(e,1)},e}(xi),ki=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),Pi=function(t,e,n){if(n||2===arguments.length)for(var o,i=0,r=e.length;i<r;i++)!o&&i in e||(o||(o=Array.prototype.slice.call(e,0,i)),o[i]=e[i]);return t.concat(o||Array.prototype.slice.call(e))},Bi=function(t){function e(e){var n=t.call(this)||this;return n.options=e,n.head=new Ri,n.body=new Li,n.paginator=new bi({dataSourceName:n.options.dataSource.name,nextPageCallback:function(t){return n.paginatorCallback(t)}}),n.httpClient=new mi(n.options.dataSource.name,n.options.cacheResponses),n.infiniteScroller=null,n.gridActions=null,n.discoverable=!0,n.containerElement=document.getElementById(n.options.containerId),n}return ki(e,t),e.Create=function(t){},e.prototype.notifyListeners=function(t,e){qo.Emit(t,this,e)},e.prototype.setDiscoverable=function(){$o.Add(this)},Object.defineProperty(e.prototype,"dataSourceName",{get:function(){return this.options.dataSource.name},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"isReadOnly",{get:function(){return this.options.isReadonly},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"dirtyRecords",{get:function(){return this.body.getDirtyRecords()},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"allRecords",{get:function(){return this.body.getAllRecords()},enumerable:!1,configurable:!0}),e.prototype.paginatorCallback=function(t){this.fetchGridPage(t)},e.prototype.appendHeader=function(){this.element.append(this.head.element)},e.prototype.appendBody=function(){this.element.append(this.body.element)},e.prototype.getGridSettings=function(t){try{return Uo.getJSON(t)}catch(t){return void console.log(t)}},e.prototype.Render=function(){var t=this;this.element=document.createElement("table"),this.element.classList.add("table","table-bordered","table-hover","table-sm","resizable","navTable","nowrap","bs-table"),this.id=this.options.gridId,this.prop("data-datasource",this.options.dataSource.name);var e=this.getGridSettings(this.options.gridId)||{};this.css={width:"inherit"};var n=new Si({dataSourceName:this.options.dataSource.name,gridId:this.options.gridId,gridHeader:!0}),o=new Si({isTemplateRow:!0,dataSourceName:this.options.dataSource.name,gridId:this.options.gridId,containerId:this.options.containerId}),i=this.applyColOrdering(e),r=new pi({},!0),s=new Ai,a=new pi;if(a.append(s),n.addCell(r),o.addCell(a),i.forEach((function(i){if(i.PropName){var r=e[i.PropName],s=n.createHeaderFor(i),a=o.createInputFor(i,t.isReadOnly);t.addSorting(s),t.applyColSettings(s,r),t.applyColSettings(a,r),n.addCell(s),o.addCell(a)}})),this.head.addRow(n),this.body.addRow(o),this.appendActions(),this.appendHeader(),this.appendBody(),this.containerElement.appendChild(this.element),this.addInfiniteScroll(),this.options.dataSource.data){var c=this.options.dataSource.data.initData,l=this.options.dataSource.data.metaData,d={DataSourceName:this.options.dataSource.name,EventData:{Data:c,MetaData:l}};this.notifyListeners(zo.ON_FETCH_GRID_RECORD,d)}return this.notifyListeners(zo.ON_GRID_DATA_BOUND,{DataSourceName:this.options.dataSource.name,EventData:{}}),!0===this.discoverable&&this.setDiscoverable(),this},e.prototype.addInfiniteScroll=function(){var t=this;!0===this.options.enableInfiniteScroll&&(this.infiniteScroller=new Ei({gridElement:this.element,httpClient:this.httpClient}),this.infiniteScroller.nextPageCallback=function(e){return t.paginatorCallback(e)},this.infiniteScroller.enable())},e.prototype.appendActions=function(){var t=this;this.gridActions=new Di,this.gridActions.dataSourceName=this.options.dataSource.name,this.gridActions.addNewRecordAction((function(e){return t.addEmptyRow()})).addDeleteAction((function(e){return t.body.markDeleted()})).addGridSettingsAction(),this.containerElement.appendChild(this.gridActions.element)},e.prototype.addSorting=function(t){var e=this;t.addEventHandler("click",(function(n){var o=!0;t.hasClass("sorting_asc")?(t.removeClass("sorting_asc").addClass("sorting_desc"),o=!1):t.removeClass("sorting_desc").addClass("sorting_asc"),t.siblings("th").forEach((function(t){t.classList.remove("sorting_asc","sorting_desc")}));var i={EventData:{Event:n,PropName:t.options.PropName,Asc:o},DataSourceName:e.options.dataSource.name};e.notifyListeners(zo.ON_SORTING_REQUESTED,i)}))},e.prototype.clearGrid=function(){var t=this;this.findElements(".grid-row").forEach((function(e){return t.removeElement(e)}));var e=this.body.getTemplateRow();this.body.rows=[e]},e.prototype.applyColSettings=function(t,e){e&&!this.isEmptyObj(e)&&(!0!==e.Visible&&(t.visible=!1),e.Width&&(t.css={position:"relative",width:e.Width}))},e.prototype.applyColOrdering=function(t){if(!t||this.isEmptyObj(t))return this.options.colDefinition;var e=[];return this.options.colDefinition.forEach((function(n,o){var i=t[n.PropName];i&&(e[i.Position]=n)})),e.length!==this.options.colDefinition.length?this.options.colDefinition:e},e.prototype.bindDataSource=function(t,e){var n=this;if(t&&!(t.length<=0)){var o=t;!0!==this.options.dataSource.isRemote&&(o=this.options.dataSource.getPageOfflineCB(e.pageIndex,this.options.dataSource.data.initData,e));var i=null;o.forEach((function(t,e){var o=n.addNewRow(t,!0);o.rowCategory="PRESTINE",i=o})),!0!==this.options.enableInfiniteScroll?this.bindPaginator(e):(this.infiniteScroller.initMetaData=e,this.infiniteScroller.initData=o,i&&(this.infiniteScroller.unobserve(),this.infiniteScroller.observe(i.element)))}},e.prototype.bindPaginator=function(t){void 0===t&&(t=new hi),this.paginator.element&&this.paginator.options.metaData.totalRecords===t.totalRecords||(this.paginator.options.metaData=t,this.paginator.render(),this.containerElement.appendChild(this.paginator.element))},e.prototype.addNewRow=function(t,e){var n=this,o=this.body.getNextRowIndex(),i=this.body.getTemplateRow().clone();i.options.isTemplateRow=!1,i.css={display:"table-row"},i.visible=!0;var r=this;i.getInputs().forEach((function(n,s){var a=n,c=a.id;a.id=c+"_"+o;var l=a.options.ModelName,d=t[l];if("date"===a.options.InputType&&d){var u=new Date(d);a.val=r.toDateDisplayFormat(u)}else a instanceof Qo&&("true"===d||"True"===d||!0===d)?a.val=!0:void 0!==d&&(a.val=d);!0!==e&&(a.disabled=!1,a.readonly=!1),a.element.addEventListener("change",(function(t){i.isRowDirty=!0,"ADDED"!==i.rowCategory&&(i.rowCategory="UPDATED"),a.removeClass("is-invalid").prop("title","");var e=fo.getInstance(t.target);e&&e.dispose();var n=i.getRowDataExt(),o=r.options.dataSource.name,s={EventData:{Event:t,Grid:r},DataSourceName:o},c={EventData:{Event:t,Row:n},DataSourceName:o},l={EventData:{Event:t,Row:n,Field:a},DataSourceName:o};r.notifyListeners(zo.ON_GRID_UPDATED,s),r.notifyListeners(zo.ON_FIELD_UPDATED,l),r.notifyListeners(zo.ON_ROW_UPDATED,c)})),a.element.addEventListener("focus",(function(t){r.body.focusRow(i)}))})),i.element.addEventListener("click",(function(t){r.body.focusRow(i)})),this.body.addRow(i);var s=i.getVisibleInputs();return s.length>0&&s[s.length-1].element.addEventListener("keydown",(function(t){return n.onInputKeyDown})),i},e.prototype.toDateDisplayFormat=function(t){var e=t.getDate(),n=t.getMonth()+1;return t.getFullYear()+"-"+(n<10?"0":"")+n+"-"+(e<10?"0":"")+e},e.prototype.toTimeDisplayFormat=function(t){var e=t.getHours(),n=t.getMinutes();return(e<10?"0":"")+e+":"+(n<10?"0":"")+n},e.prototype.onInputKeyDown=function(t){if(9===t.which&&!0!==t.shiftKey){var e=this.body.getVisibleRows();if(!(e.length<=0)){var n=e[e.length-1].rowIndex,o=t.target.closest("tr");o&&n===parseInt(o.getAttribute("data-rowindex"))&&this.addEmptyRow()}}},e.prototype.addEmptyRow=function(){var t=this.addNewRow(this.createEmptyRowData(),!1),e=t.getVisibleInputs();e.length>0&&e[0].focus(),t.rowCategory="ADDED",t.isRowDirty=!0;var n={EventData:{Grid:this,Event:t},DataSourceName:this.options.dataSource.name};return this.notifyListeners(zo.ON_GRID_UPDATED,n),!0===this.options.enableInfiniteScroll&&(this.infiniteScroller.unobserve(),this.infiniteScroller.observe(t.element)),t},e.prototype.createEmptyRowData=function(){var t={};return this.options.colDefinition.forEach((function(e,n){t[e.PropName]=void 0})),t},e.prototype.onHeaderNext=function(t,e){t&&t.EventData&&(this.resetSorting(),this.clearGrid(),this.paginator.clear(),!0===e&&(this.fetchGridPage(1),!0===this.options.enableInfiniteScroll&&(this.infiniteScroller.currentPage=1)))},e.prototype.fetchGridPage=function(t){if(!0===this.options.dataSource.isRemote){var e=this.options.dataSource.url(t);if(!e)return;this.httpClient.get({url:e})}else{var n=this.options.dataSource.data.initData,o=this.options.dataSource.data.metaData,i={DataSourceName:this.options.dataSource.name,EventData:{Data:n,MetaData:new hi(t,o.pageSize,o.totalRecords)}};this.notifyListeners(zo.ON_FETCH_GRID_RECORD,i)}},e.prototype.onSaveRecord=function(t){var e=this;this.body.rows.filter((function(t){return"DELETED"===t.rowCategory||"ADDED_DELETED"===t.rowCategory})).forEach((function(t){return e.body.removeRow(t)})),this.body.rows.forEach((function(t){t.rowCategory="PRESTINE",t.getInputs().filter((function(t){return t.isKey})).forEach((function(t){t.disabled=!0}))}))},e.prototype.onSaveError=function(t){if(t&&t.EventData&&t.EventData.Event.responseJSON)for(var e=t.EventData.Event.responseJSON,n=this.options.dataSource.name,o=this.body.getDirtyRows(),i=0;i<o.length;i++){var r=e[n+"["+i+"]"];if(r&&r.length>0){var s=r[0],a=i,c=this.getRowByIndex(parseInt(s));if(!c)continue;this.options.colDefinition.forEach((function(t,o){var i=t.PropName.toPascalCaseJson(),r=e[n+"["+a+"]."+i];if(r&&r.length>0){var s=c.getInputs().find((function(e){return e.options.ModelName===t.PropName}));if(s){s.addClass("is-invalid");var l="";Array.from(r).forEach((function(t){l+=t+" "})),s.prop("title",l),new fo(s[0],{customClass:"tooltip-error"})}}}))}}},e.prototype.getRowByIndex=function(t){return this.body.rows.find((function(e,n){return e.rowIndex===t}))},e.prototype.sortTable=function(t,e){var n,o,i=this,r=function(t,e){return t.cells[e].getCellText()},s=this.options.dataSource.name;this.body.rows.sort((n=this.head.getGridTitlesRow().cells.indexOf(t),o=e=!e,function(t,e){return i=r(o?t:e,n),s=r(o?e:t,n),i.toString().localeCompare(s.toString());var i,s})).forEach((function(t){return i.body.append(t,!1)}));var a={EventData:{CurrentCol:t,Action:Fo.COL_SORTING},DataSourceName:s},c={EventData:{CurrentCol:t,Asc:e},DataSourceName:s};this.notifyListeners(zo.ON_COLS_REORDERED,c),this.notifyListeners(zo.ON_GRID_CONFIG_UPDATED,a)},e.prototype.onSortingRequest=function(t){var e=t.EventData.Event.target;if("th"!==e.tagName.toLowerCase()){var n=e.closest("th");if(!n)return;e=n}var o=this.head.getGridTitlesRow().cells.find((function(t,n){return t.element===e}));o&&this.sortTable(o,t.EventData.Asc)},e.prototype.resetSorting=function(){this.head.rows.forEach((function(t,e){(t.hasClass("sorting_desc")||t.hasClass("sorting_asc"))&&t.removeClass("sorting_asc").removeClass("sorting_desc")}))},e.prototype.onColsReordered=function(t){var e=this;this.body.rows.forEach((function(t,n){t.getInputs().forEach((function(t){t.element.removeEventListener("keydown",e.onInputKeyDown)}));var o=t.getVisibleInputs();o.length<=0||o[o.length-1].element.addEventListener("keydown",e.onInputKeyDown)}))},e.prototype.addHandler=function(t,e,n){void 0===n&&(n=!1);var o={Key:this.options.gridId,EventName:t,Callback:e,DataSourceName:this.options.dataSource.name,VerifyDataSourceName:n};qo.Subscribe(o)},e.prototype.removeHandler=function(t){var e={Key:this.options.gridId,EventName:t,DataSourceName:this.options.dataSource.name};qo.Unsubscribe(e)},e.prototype.onFetchData=function(t){!0!==this.options.enableInfiniteScroll&&this.clearGrid();var e=t.EventData.MetaData;e&&this.bindDataSource(t.EventData.Data,new hi(e.pageIndex,e.pageSize,e.totalRecords))},e.prototype.onFetchDataError=function(t){},e.prototype.RegisterCallbacks=function(t){var e=this;return void 0===t&&(t=!0),this.options.gridId,this.options.dataSource.name,this.addHandler(zo.GRID_DATA,(function(t,n){return e.body.getDirtyRecords()})),this.addHandler(zo.ON_ADD_RECORD,(function(t,n){return e.onHeaderNext(n,!1)})),this.addHandler(zo.ON_FETCH_RECORD,(function(t,n){return e.onHeaderNext(n,!0)})),this.addHandler(zo.ON_SAVE_RECORD,(function(t,n){return e.onSaveRecord(n)})),this.addHandler(zo.ON_SAVE_ERROR,(function(t,n){return e.onSaveError(n)})),this.addHandler(zo.ON_SORTING_REQUESTED,(function(t,n){return e.onSortingRequest(n)}),t),this.addHandler(zo.ON_COLS_REORDERED,(function(t,n){return e.onColsReordered(n)}),t),this.addHandler(zo.ON_GRID_CONFIG_UPDATED,(function(t,n){return e.onGridConfigurationChanged(n)}),t),this.addHandler(zo.ON_GRID_DATA_BOUND,(function(t,n){return e.onGridDataBound(n)}),t),this.addHandler(zo.ON_FETCH_GRID_RECORD,(function(t,n){return e.onFetchData(n)}),t),this.addHandler(zo.ON_FETCH_GRID_RECORD_ERROR,(function(t,n){return e.onFetchDataError(n)}),t),this},e.prototype.configurableGrid=function(){var t=this,e=this.head.getGridTitlesRow().cells,n=this.options.dataSource.name,o='\n            <div class="modal fade" id="staticBackdrop_'.concat(n,'" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"\n            aria-labelledby="staticBackdropLabel" aria-hidden="true">\n                <div class="modal-dialog modal-dialog-scrollable">\n                    <div class="modal-content">\n                        <div class="modal-header">\n                            <h5 class="modal-title" id="staticBackdropLabel_').concat(n,'">Configure columns</h5>\n                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>\n                        </div>\n                        <div class="modal-body">\n                            <ul class="list-group grid-config-cols">\n\n                            </ul>\n                        </div>\n                        <div class="modal-footer">\n                            <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Ok</button>\n                        </div>\n                    </div>\n                </div>\n            </div>'),i=document.createElement("div");i.classList.add("settings-menu","grid-config-template"),i.innerHTML=o,this.containerElement.append(i);var r=i.querySelector(".grid-config-cols");e.forEach((function(e,o){var i=e.options.PropName;if(i){var s=document.createElement("li");s.classList.add("list-group-item");var a=document.createElement("input");a.type="checkbox",a.value="",a.classList.add("form-check-input","me-1");var c="col_config_chk_"+i;a.setAttribute("id",c),a.setAttribute("data-config-propname",i),!0===e.visible&&(a.checked=!0);var l=document.createElement("label");l.setAttribute("for",c),l.textContent=e.getText(),s.appendChild(a),s.appendChild(l),r.appendChild(s),a.addEventListener("click",(function(e){var o=e.target,i=o.getAttribute("data-config-propname");if(i){var r=t.head.getGridTitlesRow(),s=r.cells.find((function(t){return t.options.PropName===i}));if(s){var a=t.body.rows,c=Pi(Pi([],a,!0),[r],!1),l=r.cells.indexOf(s);if(!(l<0)){c.forEach((function(t){var e=t.cells[l];e&&(o.checked?e.visible=!0:e.visible=!1)})),t.notifyListeners(zo.ON_COLS_REORDERED,{DataSourceName:n,EventData:{Event:e}});var d={EventData:{Event:e,Action:Fo.COL_SHOW_HIDE},DataSourceName:n};t.notifyListeners(zo.ON_GRID_CONFIG_UPDATED,d)}}}}))}}))},e.prototype.resizableGrid=function(){var t=this.options.dataSource.name,e=this.head.getGridTitlesRow().cells;this.css={},this.setCss("overflow","hidden");for(var n=this.element.offsetHeight,o=0;o<e.length;o++){var i=s(n);e[o].element.append(i),e[o].setCss("position","relative"),r(i,e[o],this)}function r(e,n,o){var i,r,s,c;e.addEventListener("mousedown",(function(t){c=o.element.offsetWidth,r=n.element,i=t.pageX;var e=function(t){if("border-box"==a(t,"box-sizing"))return 0;var e=a(t,"padding-left"),n=a(t,"padding-right");return parseInt(e)+parseInt(n)}(r);s=r.offsetWidth-e})),e.addEventListener("mouseover",(function(t){this.style.borderRight="2px solid #0000ff"})),e.addEventListener("mouseout",(function(t){this.style.borderRight=""})),document.addEventListener("mousemove",(function(t){if(r){var e=t.pageX-i;r.style.width=s+e+"px",o.element.style.width=c+e+"px"}})),document.addEventListener("mouseup",(function(e){if(r){var n={EventData:{Event:e,CurrentCol:r,Action:Fo.COL_RESIZED},DataSourceName:t};o.notifyListeners(zo.ON_GRID_CONFIG_UPDATED,n)}r=void 0,i=void 0,s=void 0}))}function s(t){var e=document.createElement("div");return e.style.top="0",e.style.right="0",e.style.width="5px",e.style.position="absolute",e.style.cursor="col-resize",e.style.userSelect="none",e.style.height=t+"px",e}function a(t,e){return window.getComputedStyle(t,null).getPropertyValue(e)}},e.prototype.enableColumnReordering=function(){var t=this,e=this.options.dataSource.name,n=this,o=document.createElement("div");o.draggable=!0,o.classList.add("grid-header");var i,r=n.head.getGridTitlesRow(),s=r.cells;s.forEach((function(e){var n=e.childrenNodes();if(0===n.length){var i=e.getText();e.setText("");var r=document.createElement("div");r.textContent=i,e.appendChild(r),t.wrap(o,r)}else t.wrap(o,n)})),this.findElements(".grid-header").forEach((function(o){t.addDragHandlers(o,{dragStart:function(t){this.classList.contains("grid-header")?(i=this,this.style.opacity="0.5"):i=void 0},dragLeave:function(t){t.preventDefault(),i&&this.classList.contains("grid-header")&&this.classList.remove("over")},dragEnter:function(t){t.preventDefault(),i&&this.classList.contains("grid-header")&&this.classList.add("over")},dragOver:function(t){t.preventDefault(),i&&this.classList.contains("grid-header")&&this.classList.add("over")},dragEnd:function(t){t.preventDefault(),i&&(this.style.opacity="1")},drop:function(t){if(t.preventDefault(),i&&(this.classList.remove("over"),this.classList.contains("grid-header")&&i!==this)){var o=this.closest("th");if(o){var c=s.find((function(t){return t.element===o}));if(c){var l=s.indexOf(c),d=i.closest("th");if(d){var u=s.find((function(t){return t.element===d}));if(c){var p=s.indexOf(u);if(l!=p){a(r,s,p,l);var h=n.body.rows;setTimeout((function(){for(var o=0;o<h.length;o++){var i=h[o],r=i.cells;if(l==p)return;a(i,r,p,l)}n.notifyListeners(zo.ON_COLS_REORDERED,{DataSourceName:e,EventData:{Event:t}});var s={EventData:{Event:t,Action:Fo.COL_REORDER},DataSourceName:e};n.notifyListeners(zo.ON_GRID_CONFIG_UPDATED,s)}),500)}}}}}}}})}));var a=function(t,e,n,o){if(n!=o){var i=u.ltr;n>o&&(i=u.rtl),i===u.rtl?c(e,n,o):l(e,n,o),t.cells=[],t.addCells(e)}},c=function(t,e,n){for(var o=e;o>n;o--)d(t,o,o-1)},l=function(t,e,n){for(var o=e;o<n;o++)d(t,o,o+1)},d=function(t,e,n){var o=t[e];t[e]=t[n],t[n]=o},u={rtl:"RIGHT-TO-LEFT",ltr:"LEFT-TO-RIGHT"}},e.prototype.onGridConfigurationChanged=function(t){t.EventData.Action;var e=this.options.gridId,n=this.head.getGridTitlesRow().cells,o={};n.forEach((function(t,e){var n=t.options.PropName;if(n){var i=!0;t.hasClass("sorting_desc")&&(i=!1);var r={Width:t.getCss("width"),Visible:t.visible,Ascending:i,Position:e};o[n]=r}})),Uo.delete(e),setTimeout((function(){Uo.setJSON(e,o,{days:30,secure:!0,SameSite:"strict"})}),500)},e.prototype.onGridDataBound=function(t){this.configurableGrid(),this.enableColumnReordering(),this.resizableGrid()},e}(Wo),ji=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),Hi=function(t){function e(){var e=t.call(this)||this;return e.items=[],e}return ji(e,t),e.prototype.add=function(t){this.findItem(t.options.ModelName)||this.items.push(t)},e.prototype.findItem=function(t){return this.items.find((function(e){return e.options.ModelName===t}))},e}(Wo),Mi=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),Wi=function(t){function e(e){var n=t.call(this,e)||this;return n.options=e,n.render(),n}return Mi(e,t),e.prototype.render=function(){this.element=document.getElementById(this.options.ElementId)},e}(Xo),Gi=function(){function t(t){this.options=null!=t?t:{enableInfiniteScroll:!0,cacheResponses:!1,gridId:"bsDataTable",containerId:"bsContainer",isReadonly:!1,colDefinition:[]},this.options.dataSource||(this.options.dataSource={name:"bsDataSource",data:{initData:[],metaData:new hi},isRemote:!0,getPageOfflineCB:function(t,e,n){for(var o=Math.max(0,(t-1)*n.pageSize),i=Math.min(o+n.pageSize,e.length),r=[],s=o;s<i;s++){var a=e[s];r.push(a)}return r}})}return t.CreateBuilder=function(e){return new t(e)},t.prototype.Build=function(){return new Bi(this.options)},t.prototype.SetId=function(t){return this.options.gridId=t,this},t.prototype.SetContainerId=function(t){return this.options.containerId=t,this},t.prototype.SetDataSourceName=function(t){return this.options.dataSource.name=t,this},t.prototype.IsRemote=function(t){return void 0===t&&(t=!0),this.options.dataSource.isRemote=t,this},t.prototype.IsReadonly=function(t){return void 0===t&&(t=!1),this.options.isReadonly=t,this},t.prototype.CacheResponses=function(t){return void 0===t&&(t=!1),this.options.cacheResponses=t,this},t.prototype.EnableInfiniteScroll=function(t){return void 0===t&&(t=!0),this.options.enableInfiniteScroll=t,this},t.prototype.NextPageUrlCallback=function(t){return this.options.dataSource.url=t,this},t.prototype.GetNextPageOfflineCallback=function(t){return this.options.dataSource.getPageOfflineCB=t,this},t.prototype.AddColumn=function(t){if("function"==typeof t){var e={DataSourceName:this.options.dataSource.name,Width:"90px",ContainerId:this.options.containerId,IsKey:!1,DataType:"text"};t(e),this.options.colDefinition.push(e)}else this.options.colDefinition.push(t);return this},t.prototype.AddInitData=function(t){return t(this.options.dataSource.data),this},t}()})(),o})()},943:(t,e,n)=>{"use strict";n.d(e,{Z:()=>g});var o=n(537),i=n.n(o),r=n(645),s=n.n(r),a=n(667),c=n.n(a),l=new URL(n(225),n.b),d=new URL(n(138),n.b),u=new URL(n(127),n.b),p=s()(i()),h=c()(l),f=c()(d),m=c()(u);p.push([t.id,"html {\r\n  font-size: 14px;\r\n}\r\n\r\n@media (min-width: 768px) {\r\n  html {\r\n    font-size: 16px;\r\n  }\r\n}\r\n\r\nhtml {\r\n  position: relative;\r\n  min-height: 100%;\r\n}\r\n\r\nbody {\r\n  margin-bottom: 60px;\r\n}\r\n\r\n\r\n.tooltip-error .tooltip-inner {\r\n  max-width: 200px;\r\n  padding: .25rem .5rem;\r\n  color: red;\r\n  text-align: center;\r\n  background-color: white;\r\n  border-radius: .25rem;\r\n  border: 1px solid red;\r\n}\r\n\r\n.tooltip-error .tooltip-arrow::before {\r\n  border-top-color: red;\r\n}\r\n\r\ntable.navTable.nowrap th, table.navTable.nowrap td {\r\n  white-space: nowrap;\r\n}\r\n\r\ntable.navTable thead .sorting_desc {\r\n  background-image: url("+h+") !important;\r\n}\r\n\r\ntable.navTable thead .sorting_asc {\r\n  background-image: url("+f+") !important;\r\n}\r\n\r\ntable.navTable thead .sorting {\r\n  background-image: url("+m+");\r\n}\r\n\r\ntable.navTable thead .sorting, table.navTable thead .sorting_asc, table.navTable thead .sorting_desc, table.navTable thead .sorting_asc_disabled, table.navTable thead .sorting_desc_disabled {\r\n  cursor: pointer;\r\n  background-repeat: no-repeat;\r\n  background-position: center right;\r\n}\r\n\r\ntable.navTable thead th, table.navTable thead td {\r\n  padding: 10px 18px;\r\n  /* border-bottom: 1px solid #111; */\r\n}\r\n\r\ntable.navTable thead th, table.navTable tfoot th {\r\n  font-weight: bold;\r\n}\r\n\r\ntable.navTable th, table.navTable td {\r\n  box-sizing: content-box;\r\n}\r\n\r\ncaption, th {\r\n  text-align: left;\r\n}\r\n\r\ntable.navTable .form-control {\r\n  border: 0px;\r\n}\r\n\r\n.over {\r\n  border: 2px dashed #000;\r\n}\r\n\r\n.grid-header {\r\n  /* padding: 5px;\r\n    display: block;\r\n    border: 3px solid red;\r\n    height: 20px;\r\n    width: 120px; */\r\n  position: relative;\r\n  cursor: pointer;\r\n  user-select: none;\r\n}\r\n\r\n#dummy-data-container {\r\n  max-height: 70%;\r\n  width: 65%;\r\n  margin:auto;\r\n}\r\n\r\n.grid-toolbar-action {\r\n  margin: 2px;\r\n  line-height: 20px;\r\n  width: 30px;\r\n}\r\n\r\n.grid-toolbar {\r\n  padding: 2px !important;\r\n}\r\n\r\n.booking-summary li {\r\n  padding: 0;\r\n}\r\n\r\n.booking-summary .card-footer {\r\n  padding-top: 0;\r\n}\r\n\r\ninput:hover, select:hover {\r\n  /* background: rgba(121, 169, 241, 0.534);\r\n    color: whitesmoke; */\r\n\r\n  color: #0d6efd;\r\n  border-color: #0d6efd;\r\n  border: 1px solid #0d6efd !important;\r\n}\r\n\r\n.sum-value {\r\n  text-align: right;\r\n}\r\n\r\n.actions-container {\r\n  margin: 5px 0px;\r\n}\r\n\r\n.table-hover>tbody>tr:hover {\r\n  --bs-table-accent-bg: rgb(13 110 253 / 7%);\r\n  color: #c1d7ec;\r\n}\r\n\r\n.table-active {\r\n  --bs-table-accent-bg: rgb(13 110 253 / 17%);\r\n  color: #c1d7ec;\r\n}\r\n\r\n.table-active:hover {\r\n  --bs-table-accent-bg: rgb(13 110 253 / 27%) !important;\r\n  color: #c1d7ec !important;\r\n}\r\n\r\n.table-active .row-marker {\r\n  margin: 5px 0px;\r\n  color: blue;\r\n  vertical-align: middle;\r\n  float: right;\r\n  display: initial;\r\n}\r\n\r\n.row-marker {\r\n  display: none;\r\n}\r\n\r\n.table td {\r\n  padding: 2px 0px;\r\n}\r\n\r\n\r\n.bs-scroll {\r\n  max-height: 350px !important;\r\n  /* max-height: 200px;  */\r\n  overflow-y: auto\r\n\r\n}\r\n\r\n.bs-table{\r\n\r\n}\r\n\r\n.bs-pagination{\r\n\r\n}","",{version:3,sources:["webpack://./app-client/css/site.css"],names:[],mappings:"AAAA;EACE,eAAe;AACjB;;AAEA;EACE;IACE,eAAe;EACjB;AACF;;AAEA;EACE,kBAAkB;EAClB,gBAAgB;AAClB;;AAEA;EACE,mBAAmB;AACrB;;;AAGA;EACE,gBAAgB;EAChB,qBAAqB;EACrB,UAAU;EACV,kBAAkB;EAClB,uBAAuB;EACvB,qBAAqB;EACrB,qBAAqB;AACvB;;AAEA;EACE,qBAAqB;AACvB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,oEAAyD;AAC3D;;AAEA;EACE,oEAAwD;AAC1D;;AAEA;EACE,yDAA8C;AAChD;;AAEA;EACE,eAAe;EACf,4BAA4B;EAC5B,iCAAiC;AACnC;;AAEA;EACE,kBAAkB;EAClB,mCAAmC;AACrC;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE;;;;mBAIiB;EACjB,kBAAkB;EAClB,eAAe;EACf,iBAAiB;AACnB;;AAEA;EACE,eAAe;EACf,UAAU;EACV,WAAW;AACb;;AAEA;EACE,WAAW;EACX,iBAAiB;EACjB,WAAW;AACb;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE;wBACsB;;EAEtB,cAAc;EACd,qBAAqB;EACrB,oCAAoC;AACtC;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,0CAA0C;EAC1C,cAAc;AAChB;;AAEA;EACE,2CAA2C;EAC3C,cAAc;AAChB;;AAEA;EACE,sDAAsD;EACtD,yBAAyB;AAC3B;;AAEA;EACE,eAAe;EACf,WAAW;EACX,sBAAsB;EACtB,YAAY;EACZ,gBAAgB;AAClB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,gBAAgB;AAClB;;;AAGA;EACE,4BAA4B;EAC5B,wBAAwB;EACxB;;AAEF;;AAEA;;AAEA;;AAEA;;AAEA",sourcesContent:["html {\r\n  font-size: 14px;\r\n}\r\n\r\n@media (min-width: 768px) {\r\n  html {\r\n    font-size: 16px;\r\n  }\r\n}\r\n\r\nhtml {\r\n  position: relative;\r\n  min-height: 100%;\r\n}\r\n\r\nbody {\r\n  margin-bottom: 60px;\r\n}\r\n\r\n\r\n.tooltip-error .tooltip-inner {\r\n  max-width: 200px;\r\n  padding: .25rem .5rem;\r\n  color: red;\r\n  text-align: center;\r\n  background-color: white;\r\n  border-radius: .25rem;\r\n  border: 1px solid red;\r\n}\r\n\r\n.tooltip-error .tooltip-arrow::before {\r\n  border-top-color: red;\r\n}\r\n\r\ntable.navTable.nowrap th, table.navTable.nowrap td {\r\n  white-space: nowrap;\r\n}\r\n\r\ntable.navTable thead .sorting_desc {\r\n  background-image: url(../images/sort_desc.png) !important;\r\n}\r\n\r\ntable.navTable thead .sorting_asc {\r\n  background-image: url(../images/sort_asc.png) !important;\r\n}\r\n\r\ntable.navTable thead .sorting {\r\n  background-image: url(../images/sort_both.png);\r\n}\r\n\r\ntable.navTable thead .sorting, table.navTable thead .sorting_asc, table.navTable thead .sorting_desc, table.navTable thead .sorting_asc_disabled, table.navTable thead .sorting_desc_disabled {\r\n  cursor: pointer;\r\n  background-repeat: no-repeat;\r\n  background-position: center right;\r\n}\r\n\r\ntable.navTable thead th, table.navTable thead td {\r\n  padding: 10px 18px;\r\n  /* border-bottom: 1px solid #111; */\r\n}\r\n\r\ntable.navTable thead th, table.navTable tfoot th {\r\n  font-weight: bold;\r\n}\r\n\r\ntable.navTable th, table.navTable td {\r\n  box-sizing: content-box;\r\n}\r\n\r\ncaption, th {\r\n  text-align: left;\r\n}\r\n\r\ntable.navTable .form-control {\r\n  border: 0px;\r\n}\r\n\r\n.over {\r\n  border: 2px dashed #000;\r\n}\r\n\r\n.grid-header {\r\n  /* padding: 5px;\r\n    display: block;\r\n    border: 3px solid red;\r\n    height: 20px;\r\n    width: 120px; */\r\n  position: relative;\r\n  cursor: pointer;\r\n  user-select: none;\r\n}\r\n\r\n#dummy-data-container {\r\n  max-height: 70%;\r\n  width: 65%;\r\n  margin:auto;\r\n}\r\n\r\n.grid-toolbar-action {\r\n  margin: 2px;\r\n  line-height: 20px;\r\n  width: 30px;\r\n}\r\n\r\n.grid-toolbar {\r\n  padding: 2px !important;\r\n}\r\n\r\n.booking-summary li {\r\n  padding: 0;\r\n}\r\n\r\n.booking-summary .card-footer {\r\n  padding-top: 0;\r\n}\r\n\r\ninput:hover, select:hover {\r\n  /* background: rgba(121, 169, 241, 0.534);\r\n    color: whitesmoke; */\r\n\r\n  color: #0d6efd;\r\n  border-color: #0d6efd;\r\n  border: 1px solid #0d6efd !important;\r\n}\r\n\r\n.sum-value {\r\n  text-align: right;\r\n}\r\n\r\n.actions-container {\r\n  margin: 5px 0px;\r\n}\r\n\r\n.table-hover>tbody>tr:hover {\r\n  --bs-table-accent-bg: rgb(13 110 253 / 7%);\r\n  color: #c1d7ec;\r\n}\r\n\r\n.table-active {\r\n  --bs-table-accent-bg: rgb(13 110 253 / 17%);\r\n  color: #c1d7ec;\r\n}\r\n\r\n.table-active:hover {\r\n  --bs-table-accent-bg: rgb(13 110 253 / 27%) !important;\r\n  color: #c1d7ec !important;\r\n}\r\n\r\n.table-active .row-marker {\r\n  margin: 5px 0px;\r\n  color: blue;\r\n  vertical-align: middle;\r\n  float: right;\r\n  display: initial;\r\n}\r\n\r\n.row-marker {\r\n  display: none;\r\n}\r\n\r\n.table td {\r\n  padding: 2px 0px;\r\n}\r\n\r\n\r\n.bs-scroll {\r\n  max-height: 350px !important;\r\n  /* max-height: 200px;  */\r\n  overflow-y: auto\r\n\r\n}\r\n\r\n.bs-table{\r\n\r\n}\r\n\r\n.bs-pagination{\r\n\r\n}"],sourceRoot:""}]);const g=p},645:t=>{"use strict";t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",o=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),o&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),o&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,o,i,r){"string"==typeof t&&(t=[[null,t,void 0]]);var s={};if(o)for(var a=0;a<this.length;a++){var c=this[a][0];null!=c&&(s[c]=!0)}for(var l=0;l<t.length;l++){var d=[].concat(t[l]);o&&s[d[0]]||(void 0!==r&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=r),n&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=n):d[2]=n),i&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=i):d[4]="".concat(i)),e.push(d))}},e}},667:t=>{"use strict";t.exports=function(t,e){return e||(e={}),t?(t=String(t.__esModule?t.default:t),/^['"].*['"]$/.test(t)&&(t=t.slice(1,-1)),e.hash&&(t+=e.hash),/["'() \t\n]|(%20)/.test(t)||e.needQuotes?'"'.concat(t.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):t):t}},537:t=>{"use strict";t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(i," */"),s=n.sources.map((function(t){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(t," */")}));return[e].concat(s).concat([r]).join("\n")}return[e].join("\n")}},379:t=>{"use strict";var e=[];function n(t){for(var n=-1,o=0;o<e.length;o++)if(e[o].identifier===t){n=o;break}return n}function o(t,o){for(var r={},s=[],a=0;a<t.length;a++){var c=t[a],l=o.base?c[0]+o.base:c[0],d=r[l]||0,u="".concat(l," ").concat(d);r[l]=d+1;var p=n(u),h={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(h);else{var f=i(h,o);o.byIndex=a,e.splice(a,0,{identifier:u,updater:f,references:1})}s.push(u)}return s}function i(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,i){var r=o(t=t||[],i=i||{});return function(t){t=t||[];for(var s=0;s<r.length;s++){var a=n(r[s]);e[a].references--}for(var c=o(t,i),l=0;l<r.length;l++){var d=n(r[l]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}r=c}}},569:t=>{"use strict";var e={};t.exports=function(t,n){var o=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:t=>{"use strict";t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,n)=>{"use strict";t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},795:t=>{"use strict";t.exports=function(t){var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var i=void 0!==n.layer;i&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,i&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var r=n.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(o,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{"use strict";t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}},138:(t,e,n)=>{"use strict";t.exports=n.p+"4bba59196d7ce2619696.png"},127:(t,e,n)=>{"use strict";t.exports=n.p+"8b117faa9d4dd934d6bb.png"},225:(t,e,n)=>{"use strict";t.exports=n.p+"c4196d3286cc33244c83.png"}},e={};function n(o){var i=e[o];if(void 0!==i)return i.exports;var r=e[o]={id:o,exports:{}};return t[o](r,r.exports,n),r.exports}n.m=t,n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var o in e)n.o(e,o)&&!n.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.p="/",n.b=document.baseURI||self.location.href;var o={};return(()=>{"use strict";n.r(o),n.d(o,{BSDataTableDemos:()=>b});var t=n(379),e=n.n(t),i=n(795),r=n.n(i),s=n(569),a=n.n(s),c=n(565),l=n.n(c),d=n(216),u=n.n(d),p=n(589),h=n.n(p),f=n(943),m={};m.styleTagTransform=h(),m.setAttributes=l(),m.insert=a().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=u(),e()(f.Z,m),f.Z&&f.Z.locals&&f.Z.locals;var g=n(661),_=function(){function t(){}return t.run=function(t,e){console.log("running dynamic demo");var n=g.BSFluentBuilder.CreateBuilder().SetDataSourceName("booking_lines").SetId("booking_lines").SetContainerId(t).IsRemote(!0).NextPageUrlCallback((function(t){return"http://localhost:3000/api/bookinglines?page="+t})).EnableInfiniteScroll(!0).IsReadonly(!1).CacheResponses(!1).AddInitData((function(t){t.initData=e.data,t.metaData=e.metaData})).AddColumn((function(t){t.DisplayName="Line nbr",t.PropName="lineNbr",t.Width="80px",t.DataType="number",t.IsKey=!0})).AddColumn((function(t){t.DisplayName="Stock item",t.PropName="inventoryId",t.Width="60px",t.DataType="selector",t.SelectorDataCB=function(t){return"http://localhost:3000/api/stockitems?page=".concat(t)},t.SelectorCols=[{DisplayName:"Stock item",DataType:"text",Width:"60px",PropName:"id",IsKey:!0},{DisplayName:"Description",DataType:"text",Width:"220px",PropName:"name"}]})).AddColumn((function(t){t.DisplayName="Description",t.PropName="desc",t.Width="220px",t.DataType="text"})).AddColumn((function(t){t.DisplayName="Unit of measure",t.PropName="uom",t.Width="120px",t.DataType="select",t.SelectList=[{text:"Kilo",value:"KG"},{text:"Litre",value:"LI"},{text:"Piece",value:"PCS"}]})).AddColumn((function(t){t.DisplayName="Quantity",t.PropName="qty",t.Width="80px",t.DataType="number"})).AddColumn((function(t){t.DisplayName="Unit cost",t.PropName="cost",t.Width="120px",t.DataType="number"})).AddColumn((function(t){t.DisplayName="Cost",t.PropName="extCost",t.Width="120px",t.DataType="number"})).Build();n.RegisterCallbacks(),n.addHandler(g.appDataEvents.ON_FIELD_UPDATED,(function(t,e){var n=e;if(n){var o=n.EventData.Field;if(o){var i=o.options.ModelName,r=n.EventData.Row;"qty"!==i&&"cost"!==i||(r.extCost.val=r.qty.val*r.cost.val)}}})),n.Render(),n.gridActions.addAction("btnSave","primary","save",(function(t){console.log("save button is called");var e=n.allRecords;console.log("All records:"),console.table(e),console.log("Dirty rows:"),console.table(n.dirtyRecords)}))},t}(),v=function(){function t(){}return t.run=function(){for(var t=g.BSFluentBuilder.CreateBuilder().SetDataSourceName("Customers").SetId("grid").SetContainerId("customers_container").IsReadonly(!1).IsRemote(!1).EnableInfiniteScroll(!0).CacheResponses(!1),e=function(e){t.AddColumn((function(t){t.DisplayName="COL-"+e,t.PropName="col-"+e,t.Width="180px",t.DataType="text"}))},n=0;n<5;n++)e(n);t.AddInitData((function(t){for(var e=0;e<60;e++){for(var n={},o=0;o<5;o++)n["col-"+o]="DATA-"+e+"-"+o;t.initData.push(n)}t.metaData=new g.BSDataTablePagingMetaData(1,10,60)}));var o=t.Build().RegisterCallbacks().Render();o.gridActions.addAction("btnSave","primary","save",(function(t){console.log("save button is called");var e=o.allRecords;console.log("All records:"),console.table(e),console.log("Dirty rows:"),console.table(o.dirtyRecords)}))},t}(),b=function(){function t(){}return t.runStaticDemo=function(){v.run()},t.runDynamicDemo=function(t,e){_.run(t,e)},t}()})(),o})()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLmpzIiwibWFwcGluZ3MiOiI7Q0FBQSxTQUEyQ0EsRUFBTUMsR0FDMUIsaUJBQVpDLFNBQTBDLGlCQUFYQyxPQUN4Q0EsT0FBT0QsUUFBVUQsSUFDUSxtQkFBWEcsUUFBeUJBLE9BQU9DLElBQzlDRCxPQUFPLEdBQUlILEdBQ2UsaUJBQVpDLFFBQ2RBLFFBQW9CLFdBQUlELElBRXhCRCxFQUFpQixXQUFJQyxJQVJ2QixDQVNHSyxNQUFNLFdBQ1QsMkJDVDJNQSxLQUExSUgsRUFBT0QsUUFBMEosTUFBTSxJQUFJSyxFQUFFLENBQUMsSUFBSSxLQUFLQyxPQUFPQyxVQUFVQyxZQUFZLFdBQVcsT0FBT0MsS0FBS0MsUUFBUSx1QkFBc0IsU0FBVUwsRUFBRU0sR0FBRyxPQUFPLElBQUlBLEVBQUVOLEVBQUVPLGNBQWNQLEVBQUVRLGlCQUFpQkgsUUFBUSxPQUFPLEtBQUtKLE9BQU9DLFVBQVVPLGFBQWEsV0FBVyxPQUFPTCxLQUFLQyxRQUFRLHVCQUFzQixTQUFVTCxFQUFFTSxHQUFHLE9BQU8sSUFBSUEsRUFBRU4sRUFBRVEsY0FBY1IsRUFBRU8saUJBQWlCRixRQUFRLE9BQU8sS0FBS0osT0FBT0MsVUFBVVEsaUJBQWlCLFdBQVcsT0FBT04sS0FBS0MsUUFBUSx1QkFBc0IsU0FBVUwsRUFBRU0sR0FBRyxPQUFPLElBQUlBLEVBQUVOLEVBQUVRLGNBQWNSLEtBQUtLLFFBQVEsT0FBTyxLQUFLSixPQUFPQyxVQUFVUyxTQUFTVixPQUFPQyxVQUFVUyxPQUFPLFdBQVcsSUFBSVgsRUFBRVksVUFBVSxPQUFPUixLQUFLQyxRQUFRLFlBQVcsU0FBVUMsRUFBRU8sR0FBRyxZQUFPLElBQVNiLEVBQUVhLEdBQUdiLEVBQUVhLEdBQUdQLFNBQVNBLEVBQUUsR0FBRyxTQUFTTyxFQUFFQyxHQUFHLElBQUlDLEVBQUVULEVBQUVRLEdBQUcsUUFBRyxJQUFTQyxFQUFFLE9BQU9BLEVBQUVwQixRQUFRLElBQUlxQixFQUFFVixFQUFFUSxHQUFHLENBQUNuQixRQUFRLElBQUksT0FBT0ssRUFBRWMsR0FBR0UsRUFBRUEsRUFBRXJCLFFBQVFrQixHQUFHRyxFQUFFckIsUUFBUWtCLEVBQUVJLEVBQUUsQ0FBQ2pCLEVBQUVNLEtBQUssSUFBSSxJQUFJUSxLQUFLUixFQUFFTyxFQUFFQyxFQUFFUixFQUFFUSxLQUFLRCxFQUFFQyxFQUFFZCxFQUFFYyxJQUFJSSxPQUFPQyxlQUFlbkIsRUFBRWMsRUFBRSxDQUFDTSxZQUFXLEVBQUdDLElBQUlmLEVBQUVRLE1BQU1ELEVBQUVDLEVBQUUsQ0FBQ2QsRUFBRU0sSUFBSVksT0FBT2hCLFVBQVVvQixlQUFlQyxLQUFLdkIsRUFBRU0sR0FBR08sRUFBRUcsRUFBRWhCLElBQUksb0JBQW9Cd0IsUUFBUUEsT0FBT0MsYUFBYVAsT0FBT0MsZUFBZW5CLEVBQUV3QixPQUFPQyxZQUFZLENBQUNDLE1BQU0sV0FBV1IsT0FBT0MsZUFBZW5CLEVBQUUsYUFBYSxDQUFDMEIsT0FBTSxLQUFNLElBQUlaLEVBQUUsR0FBRyxNQUFNLE1BQU0sYUFBYUQsRUFBRUcsRUFBRUYsR0FBR0QsRUFBRUksRUFBRUgsRUFBRSxDQUFDYSxZQUFZLElBQUlDLEdBQUdDLG1CQUFtQixJQUFJQyxHQUFHQyxnQkFBZ0IsSUFBSUMsR0FBR0MsZ0JBQWdCLElBQUlDLEdBQUdDLGtCQUFrQixJQUFJQyxHQUFHQyxnQkFBZ0IsSUFBSUMsR0FBR0Msb0JBQW9CLElBQUlDLEdBQUdDLGtCQUFrQixJQUFJQyxHQUFHQyxzQkFBc0IsSUFBSUMsR0FBR0MsMEJBQTBCLElBQUlDLEdBQUdDLGlCQUFpQixJQUFJQyxHQUFHQyxrQkFBa0IsSUFBSUMsR0FBR0Msc0JBQXNCLElBQUlDLEdBQUdDLDBCQUEwQixJQUFJQyxHQUFHQyxlQUFlLElBQUlDLEdBQUdDLHlCQUF5QixJQUFJQyxHQUFHQyxrQkFBa0IsSUFBSUMsR0FBR0Msd0JBQXdCLElBQUlDLEdBQUdDLG9CQUFvQixJQUFJQyxHQUFHQywwQkFBMEIsSUFBSUMsR0FBR0Msb0NBQW9DLElBQUlDLEdBQUdDLHFCQUFxQixJQUFJQyxHQUFHQyx3QkFBd0IsSUFBSUMsR0FBR0MsZ0JBQWdCLElBQUlDLEdBQUdDLGFBQWEsSUFBSUMsR0FBR0Msc0JBQXNCLElBQUlDLEdBQUdDLFdBQVcsSUFBSUMsR0FBR0MsY0FBYyxJQUFJQyxHQUFHQyw0QkFBNEIsSUFBSUMsR0FBR0Msa0JBQWtCLElBQUlDLEtBQUssSUFBSXRGLEVBQUUsR0FBR2EsRUFBRUcsRUFBRWhCLEdBQUdhLEVBQUVJLEVBQUVqQixFQUFFLENBQUN1RixVQUFVLElBQUlDLEVBQUVDLFVBQVUsSUFBSUMsRUFBRUMsV0FBVyxJQUFJQyxFQUFFQyxZQUFZLElBQUlDLEVBQUVDLE1BQU0sSUFBSUMsRUFBRUMsS0FBSyxJQUFJQyxFQUFFQyxlQUFlLElBQUlDLEVBQUVDLFdBQVcsSUFBSUMsRUFBRUMsV0FBVyxJQUFJQyxFQUFFQyxZQUFZLElBQUlDLEVBQUVDLE9BQU8sSUFBSTVGLEVBQUU2RixnQkFBZ0IsSUFBSTNGLEVBQUU0RixjQUFjLElBQUlDLEdBQUdDLGFBQWEsSUFBSUMsR0FBR0MsaUJBQWlCLElBQUlDLEdBQUdDLGlCQUFpQixJQUFJQyxHQUFHQyxlQUFlLElBQUlDLEdBQUdDLElBQUksSUFBSUMsRUFBRUMsZUFBZSxJQUFJQyxHQUFHQyxLQUFLLElBQUlDLEdBQUdDLEtBQUssSUFBSUMsR0FBR0MsS0FBSyxJQUFJQyxFQUFFQyxLQUFLLElBQUlDLEVBQUVDLGVBQWUsSUFBSUMsRUFBRUMsT0FBTyxJQUFJQyxHQUFHQyxXQUFXLElBQUlDLEVBQUVDLE9BQU8sSUFBSUMsRUFBRUMsZ0JBQWdCLElBQUlDLEdBQUdDLGNBQWMsSUFBSUMsR0FBR0MsZ0JBQWdCLElBQUlDLEdBQUdDLEtBQUssSUFBSUMsRUFBRUMsVUFBVSxJQUFJQyxFQUFFQyxNQUFNLElBQUlySSxFQUFFc0ksTUFBTSxJQUFJQyxFQUFFQyxJQUFJLElBQUlsSixFQUFFbUosb0JBQW9CLElBQUlDLEVBQUVDLFNBQVMsSUFBSUMsRUFBRUMsTUFBTSxJQUFJQyxJQUFJLElBQUl4SixFQUFFLE1BQU1TLEVBQUUsU0FBU0MsRUFBRSxRQUFRZ0gsRUFBRSxPQUFPOUIsRUFBRSxPQUFPRSxFQUFFLENBQUM5RixFQUFFUyxFQUFFQyxFQUFFZ0gsR0FBR3VCLEVBQUUsUUFBUS9CLEVBQUUsTUFBTXZHLEVBQUUsa0JBQWtCMkksRUFBRSxXQUFXbEIsRUFBRSxTQUFTVSxFQUFFLFlBQVlNLEVBQUV0RCxFQUFFMkQsUUFBTyxTQUFVL0osRUFBRU0sR0FBRyxPQUFPTixFQUFFZ0ssT0FBTyxDQUFDMUosRUFBRSxJQUFJaUosRUFBRWpKLEVBQUUsSUFBSWtILE1BQU0sSUFBSWdCLEVBQUUsR0FBR3dCLE9BQU81RCxFQUFFLENBQUNGLElBQUk2RCxRQUFPLFNBQVUvSixFQUFFTSxHQUFHLE9BQU9OLEVBQUVnSyxPQUFPLENBQUMxSixFQUFFQSxFQUFFLElBQUlpSixFQUFFakosRUFBRSxJQUFJa0gsTUFBTSxJQUFJaEIsRUFBRSxhQUFhMEMsRUFBRSxPQUFPeEQsRUFBRSxZQUFZWSxFQUFFLGFBQWE0QixFQUFFLE9BQU8xQyxFQUFFLFlBQVlrQixFQUFFLGNBQWNvRCxFQUFFLFFBQVFsRSxFQUFFLGFBQWF3QyxFQUFFLENBQUM1QixFQUFFMEMsRUFBRXhELEVBQUVZLEVBQUU0QixFQUFFMUMsRUFBRWtCLEVBQUVvRCxFQUFFbEUsR0FBRyxTQUFTcUUsRUFBRWpLLEdBQUcsT0FBT0EsR0FBR0EsRUFBRWtLLFVBQVUsSUFBSTNKLGNBQWMsS0FBSyxTQUFTNEosRUFBRW5LLEdBQUcsR0FBRyxNQUFNQSxFQUFFLE9BQU9vSyxPQUFPLEdBQUcsb0JBQW9CcEssRUFBRXFLLFdBQVcsQ0FBQyxJQUFJL0osRUFBRU4sRUFBRXNLLGNBQWMsT0FBT2hLLEdBQUdBLEVBQUVpSyxhQUFhSCxPQUFPLE9BQU9wSyxFQUFFLFNBQVN3SyxFQUFFeEssR0FBRyxPQUFPQSxhQUFhbUssRUFBRW5LLEdBQUd5SyxTQUFTekssYUFBYXlLLFFBQVEsU0FBU0MsRUFBRTFLLEdBQUcsT0FBT0EsYUFBYW1LLEVBQUVuSyxHQUFHMkssYUFBYTNLLGFBQWEySyxZQUFZLFNBQVNDLEVBQUU1SyxHQUFHLE1BQU0sb0JBQW9CNkssYUFBYTdLLGFBQWFtSyxFQUFFbkssR0FBRzZLLFlBQVk3SyxhQUFhNkssWUFBWSxNQUFNL0UsRUFBRSxDQUFDZ0YsS0FBSyxjQUFjQyxTQUFRLEVBQUdDLE1BQU0sUUFBUUMsR0FBRyxTQUFTakwsR0FBRyxJQUFJTSxFQUFFTixFQUFFa0wsTUFBTWhLLE9BQU9pSyxLQUFLN0ssRUFBRThLLFVBQVVDLFNBQVEsU0FBVXJMLEdBQUcsSUFBSWEsRUFBRVAsRUFBRWdMLE9BQU90TCxJQUFJLEdBQUdjLEVBQUVSLEVBQUVpTCxXQUFXdkwsSUFBSSxHQUFHZSxFQUFFVCxFQUFFOEssU0FBU3BMLEdBQUcwSyxFQUFFM0osSUFBSWtKLEVBQUVsSixLQUFLRyxPQUFPc0ssT0FBT3pLLEVBQUUwSyxNQUFNNUssR0FBR0ssT0FBT2lLLEtBQUtySyxHQUFHdUssU0FBUSxTQUFVckwsR0FBRyxJQUFJTSxFQUFFUSxFQUFFZCxJQUFHLElBQUtNLEVBQUVTLEVBQUUySyxnQkFBZ0IxTCxHQUFHZSxFQUFFNEssYUFBYTNMLEdBQUUsSUFBS00sRUFBRSxHQUFHQSxXQUFXc0wsT0FBTyxTQUFTNUwsR0FBRyxJQUFJTSxFQUFFTixFQUFFa0wsTUFBTXJLLEVBQUUsQ0FBQzRILE9BQU8sQ0FBQ29ELFNBQVN2TCxFQUFFd0wsUUFBUUMsU0FBU2hFLEtBQUssSUFBSXlCLElBQUksSUFBSXdDLE9BQU8sS0FBS2pHLE1BQU0sQ0FBQzhGLFNBQVMsWUFBWTFDLFVBQVUsSUFBSSxPQUFPakksT0FBT3NLLE9BQU9sTCxFQUFFOEssU0FBUzNDLE9BQU9nRCxNQUFNNUssRUFBRTRILFFBQVFuSSxFQUFFZ0wsT0FBT3pLLEVBQUVQLEVBQUU4SyxTQUFTckYsT0FBTzdFLE9BQU9zSyxPQUFPbEwsRUFBRThLLFNBQVNyRixNQUFNMEYsTUFBTTVLLEVBQUVrRixPQUFPLFdBQVc3RSxPQUFPaUssS0FBSzdLLEVBQUU4SyxVQUFVQyxTQUFRLFNBQVVyTCxHQUFHLElBQUljLEVBQUVSLEVBQUU4SyxTQUFTcEwsR0FBR2UsRUFBRVQsRUFBRWlMLFdBQVd2TCxJQUFJLEdBQUdnQixFQUFFRSxPQUFPaUssS0FBSzdLLEVBQUVnTCxPQUFPaEssZUFBZXRCLEdBQUdNLEVBQUVnTCxPQUFPdEwsR0FBR2EsRUFBRWIsSUFBSStKLFFBQU8sU0FBVS9KLEVBQUVNLEdBQUcsT0FBT04sRUFBRU0sR0FBRyxHQUFHTixJQUFJLElBQUkwSyxFQUFFNUosSUFBSW1KLEVBQUVuSixLQUFLSSxPQUFPc0ssT0FBTzFLLEVBQUUySyxNQUFNekssR0FBR0UsT0FBT2lLLEtBQUtwSyxHQUFHc0ssU0FBUSxTQUFVckwsR0FBR2MsRUFBRTRLLGdCQUFnQjFMLFlBQVlpTSxTQUFTLENBQUMsa0JBQWtCLFNBQVNDLEVBQUVsTSxHQUFHLE9BQU9BLEVBQUVtTSxNQUFNLEtBQUssR0FBRyxJQUFJQyxFQUFFQyxLQUFLQyxJQUFJQyxFQUFFRixLQUFLRyxJQUFJQyxFQUFFSixLQUFLSyxNQUFNLFNBQVNDLEVBQUUzTSxFQUFFTSxRQUFHLElBQVNBLElBQUlBLEdBQUUsR0FBSSxJQUFJTyxFQUFFYixFQUFFNE0sd0JBQXdCOUwsRUFBRSxFQUFFQyxFQUFFLEVBQUUsR0FBRzJKLEVBQUUxSyxJQUFJTSxFQUFFLENBQUMsSUFBSVUsRUFBRWhCLEVBQUU2TSxhQUFhN0UsRUFBRWhJLEVBQUU4TSxZQUFZOUUsRUFBRSxJQUFJbEgsRUFBRTJMLEVBQUU1TCxFQUFFa00sT0FBTy9FLEdBQUcsR0FBR2hILEVBQUUsSUFBSUQsRUFBRTBMLEVBQUU1TCxFQUFFbU0sUUFBUWhNLEdBQUcsR0FBRyxNQUFNLENBQUMrTCxNQUFNbE0sRUFBRWtNLE1BQU1qTSxFQUFFa00sT0FBT25NLEVBQUVtTSxPQUFPak0sRUFBRXlJLElBQUkzSSxFQUFFMkksSUFBSXpJLEVBQUVzSSxNQUFNeEksRUFBRXdJLE1BQU12SSxFQUFFNkYsT0FBTzlGLEVBQUU4RixPQUFPNUYsRUFBRWdILEtBQUtsSCxFQUFFa0gsS0FBS2pILEVBQUVnRixFQUFFakYsRUFBRWtILEtBQUtqSCxFQUFFNEUsRUFBRTdFLEVBQUUySSxJQUFJekksR0FBRyxTQUFTa00sRUFBRWpOLEdBQUcsSUFBSU0sRUFBRXFNLEVBQUUzTSxHQUFHYSxFQUFFYixFQUFFOE0sWUFBWWhNLEVBQUVkLEVBQUU2TSxhQUFhLE9BQU9SLEtBQUthLElBQUk1TSxFQUFFeU0sTUFBTWxNLElBQUksSUFBSUEsRUFBRVAsRUFBRXlNLE9BQU9WLEtBQUthLElBQUk1TSxFQUFFME0sT0FBT2xNLElBQUksSUFBSUEsRUFBRVIsRUFBRTBNLFFBQVEsQ0FBQ2xILEVBQUU5RixFQUFFbU4sV0FBV3pILEVBQUUxRixFQUFFb04sVUFBVUwsTUFBTWxNLEVBQUVtTSxPQUFPbE0sR0FBRyxTQUFTdU0sRUFBRXJOLEVBQUVNLEdBQUcsSUFBSU8sRUFBRVAsRUFBRWdOLGFBQWFoTixFQUFFZ04sY0FBYyxHQUFHdE4sRUFBRXVOLFNBQVNqTixHQUFHLE9BQU0sRUFBRyxHQUFHTyxHQUFHK0osRUFBRS9KLEdBQUcsQ0FBQyxJQUFJQyxFQUFFUixFQUFFLEVBQUUsQ0FBQyxHQUFHUSxHQUFHZCxFQUFFd04sV0FBVzFNLEdBQUcsT0FBTSxFQUFHQSxFQUFFQSxFQUFFMk0sWUFBWTNNLEVBQUU0TSxXQUFXNU0sR0FBRyxPQUFNLEVBQUcsU0FBUzZNLEVBQUUzTixHQUFHLE9BQU9tSyxFQUFFbkssR0FBRzROLGlCQUFpQjVOLEdBQUcsU0FBUzZOLEVBQUU3TixHQUFHLE1BQU0sQ0FBQyxRQUFRLEtBQUssTUFBTThOLFFBQVE3RCxFQUFFakssS0FBSyxFQUFFLFNBQVMrTixFQUFFL04sR0FBRyxRQUFRd0ssRUFBRXhLLEdBQUdBLEVBQUVzSyxjQUFjdEssRUFBRWdPLFdBQVc1RCxPQUFPNEQsVUFBVUMsZ0JBQWdCLFNBQVNDLEVBQUVsTyxHQUFHLE1BQU0sU0FBU2lLLEVBQUVqSyxHQUFHQSxFQUFFQSxFQUFFbU8sY0FBY25PLEVBQUV5TixhQUFhN0MsRUFBRTVLLEdBQUdBLEVBQUUwTixLQUFLLE9BQU9LLEVBQUUvTixHQUFHLFNBQVNvTyxFQUFFcE8sR0FBRyxPQUFPMEssRUFBRTFLLElBQUksVUFBVTJOLEVBQUUzTixHQUFHNkwsU0FBUzdMLEVBQUVxTyxhQUFhLEtBQUssU0FBU0MsRUFBRXRPLEdBQUcsSUFBSSxJQUFJTSxFQUFFNkosRUFBRW5LLEdBQUdhLEVBQUV1TixFQUFFcE8sR0FBR2EsR0FBR2dOLEVBQUVoTixJQUFJLFdBQVc4TSxFQUFFOU0sR0FBR2dMLFVBQVVoTCxFQUFFdU4sRUFBRXZOLEdBQUcsT0FBT0EsSUFBSSxTQUFTb0osRUFBRXBKLElBQUksU0FBU29KLEVBQUVwSixJQUFJLFdBQVc4TSxFQUFFOU0sR0FBR2dMLFVBQVV2TCxFQUFFTyxHQUFHLFNBQVNiLEdBQUcsSUFBSU0sR0FBRyxJQUFJaU8sVUFBVUMsVUFBVWpPLGNBQWN1TixRQUFRLFdBQVcsSUFBSSxJQUFJUyxVQUFVQyxVQUFVVixRQUFRLFlBQVlwRCxFQUFFMUssSUFBSSxVQUFVMk4sRUFBRTNOLEdBQUc2TCxTQUFTLE9BQU8sS0FBSyxJQUFJLElBQUloTCxFQUFFcU4sRUFBRWxPLEdBQUcwSyxFQUFFN0osSUFBSSxDQUFDLE9BQU8sUUFBUWlOLFFBQVE3RCxFQUFFcEosSUFBSSxHQUFHLENBQUMsSUFBSUMsRUFBRTZNLEVBQUU5TSxHQUFHLEdBQUcsU0FBU0MsRUFBRTJOLFdBQVcsU0FBUzNOLEVBQUU0TixhQUFhLFVBQVU1TixFQUFFNk4sVUFBVSxJQUFJLENBQUMsWUFBWSxlQUFlYixRQUFRaE4sRUFBRThOLGFBQWF0TyxHQUFHLFdBQVdRLEVBQUU4TixZQUFZdE8sR0FBR1EsRUFBRStOLFFBQVEsU0FBUy9OLEVBQUUrTixPQUFPLE9BQU9oTyxFQUFFQSxFQUFFQSxFQUFFNE0sV0FBVyxPQUFPLEtBQWhjLENBQXNjek4sSUFBSU0sRUFBRSxTQUFTd08sRUFBRTlPLEdBQUcsTUFBTSxDQUFDLE1BQU0sVUFBVThOLFFBQVE5TixJQUFJLEVBQUUsSUFBSSxJQUFJLFNBQVMrTyxFQUFFL08sRUFBRU0sRUFBRU8sR0FBRyxPQUFPdUwsRUFBRXBNLEVBQUV1TSxFQUFFak0sRUFBRU8sSUFBSSxTQUFTbU8sRUFBRWhQLEdBQUcsT0FBT2tCLE9BQU9zSyxPQUFPLEdBQUcsQ0FBQ2hDLElBQUksRUFBRUgsTUFBTSxFQUFFMUMsT0FBTyxFQUFFb0IsS0FBSyxHQUFHL0gsR0FBRyxTQUFTaVAsRUFBRWpQLEVBQUVNLEdBQUcsT0FBT0EsRUFBRXlKLFFBQU8sU0FBVXpKLEVBQUVPLEdBQUcsT0FBT1AsRUFBRU8sR0FBR2IsRUFBRU0sSUFBSSxJQUFJLE1BQU0wRixFQUFFLENBQUM4RSxLQUFLLFFBQVFDLFNBQVEsRUFBR0MsTUFBTSxPQUFPQyxHQUFHLFNBQVNqTCxHQUFHLElBQUlhLEVBQUVDLEVBQUVkLEVBQUVrTCxNQUFNaEYsRUFBRWxHLEVBQUU4SyxLQUFLdkIsRUFBRXZKLEVBQUU4TCxRQUFRdEUsRUFBRTFHLEVBQUVzSyxTQUFTckYsTUFBTTlFLEVBQUVILEVBQUVvTyxjQUFjckcsY0FBY2UsRUFBRXNDLEVBQUVwTCxFQUFFcU8sV0FBV3pHLEVBQUVvRyxFQUFFbEYsR0FBR1IsRUFBRSxDQUFDcEIsRUFBRWhILEdBQUc4TSxRQUFRbEUsSUFBSSxFQUFFLFNBQVMsUUFBUSxHQUFHcEMsR0FBR3ZHLEVBQUUsQ0FBQyxJQUFJeUksRUFBRSxTQUFTMUosRUFBRU0sR0FBRyxPQUFPME8sRUFBRSxpQkFBaUJoUCxFQUFFLG1CQUFtQkEsRUFBRUEsRUFBRWtCLE9BQU9zSyxPQUFPLEdBQUdsTCxFQUFFOE8sTUFBTSxDQUFDRCxVQUFVN08sRUFBRTZPLGFBQWFuUCxHQUFHQSxFQUFFaVAsRUFBRWpQLEVBQUVvRyxJQUE3SCxDQUFrSW1ELEVBQUU4RixRQUFRdk8sR0FBRzBILEVBQUV5RSxFQUFFekYsR0FBR2hCLEVBQUUsTUFBTWtDLEVBQUVwSSxFQUFFMEgsRUFBRWtCLEVBQUUsTUFBTVIsRUFBRTNILEVBQUVDLEVBQUUwRSxFQUFFNUUsRUFBRXNPLE1BQU1qRyxVQUFVQyxHQUFHdEksRUFBRXNPLE1BQU1qRyxVQUFVVCxHQUFHekgsRUFBRXlILEdBQUc1SCxFQUFFc08sTUFBTTNHLE9BQU9XLEdBQUc5QyxFQUFFckYsRUFBRXlILEdBQUc1SCxFQUFFc08sTUFBTWpHLFVBQVVULEdBQUdSLEVBQUVvRyxFQUFFOUcsR0FBR2hDLEVBQUUwQyxFQUFFLE1BQU1RLEVBQUVSLEVBQUVvSCxjQUFjLEVBQUVwSCxFQUFFcUgsYUFBYSxFQUFFLEVBQUU3SSxFQUFFaEIsRUFBRSxFQUFFWSxFQUFFLEVBQUV3RCxFQUFFSixFQUFFbEQsR0FBR1osRUFBRUosRUFBRWdELEVBQUVZLEdBQUdNLEVBQUVSLEdBQUdkLEVBQUU1QyxFQUFFLEVBQUVnRCxFQUFFWSxHQUFHLEVBQUUxQyxFQUFFdUQsRUFBRThFLEVBQUVqRixFQUFFMUIsRUFBRXhDLEdBQUd1RSxFQUFFekIsRUFBRTVILEVBQUVvTyxjQUFjaEosS0FBS3JGLEVBQUUsSUFBSXNKLEdBQUdGLEVBQUVwSixFQUFFMk8sYUFBYXZGLEVBQUU3QixFQUFFdkgsS0FBSytLLE9BQU8sU0FBUzVMLEdBQUcsSUFBSU0sRUFBRU4sRUFBRWtMLE1BQU1ySyxFQUFFYixFQUFFOEwsUUFBUTJELFFBQVEzTyxPQUFFLElBQVNELEVBQUUsc0JBQXNCQSxFQUFFLE1BQU1DLElBQUksaUJBQWlCQSxJQUFJQSxFQUFFUixFQUFFOEssU0FBUzNDLE9BQU9pSCxjQUFjNU8sTUFBTXVNLEVBQUUvTSxFQUFFOEssU0FBUzNDLE9BQU8zSCxLQUFLUixFQUFFOEssU0FBU3JGLE1BQU1qRixJQUFJbUwsU0FBUyxDQUFDLGlCQUFpQjBELGlCQUFpQixDQUFDLG9CQUFvQixTQUFTQyxFQUFFNVAsR0FBRyxPQUFPQSxFQUFFbU0sTUFBTSxLQUFLLEdBQUcsSUFBSTBELEVBQUUsQ0FBQ3JHLElBQUksT0FBT0gsTUFBTSxPQUFPMUMsT0FBTyxPQUFPb0IsS0FBSyxRQUFRLFNBQVMrSCxFQUFFOVAsR0FBRyxJQUFJYSxFQUFFQyxFQUFFZCxFQUFFeUksT0FBT3ZDLEVBQUVsRyxFQUFFK1AsV0FBVzNKLEVBQUVwRyxFQUFFbVAsVUFBVTVGLEVBQUV2SixFQUFFZ1EsVUFBVS9PLEVBQUVqQixFQUFFaVEsUUFBUXJHLEVBQUU1SixFQUFFNkwsU0FBU25ELEVBQUUxSSxFQUFFa1EsZ0JBQWdCOUcsRUFBRXBKLEVBQUVtUSxTQUFTekcsRUFBRTFKLEVBQUVvUSxhQUFhNUgsRUFBRXhJLEVBQUVxUSxRQUFRN0osRUFBRXZGLEVBQUU2RSxFQUFFb0QsT0FBRSxJQUFTMUMsRUFBRSxFQUFFQSxFQUFFZCxFQUFFekUsRUFBRXlFLEVBQUVZLE9BQUUsSUFBU1osRUFBRSxFQUFFQSxFQUFFd0MsRUFBRSxtQkFBbUJ3QixFQUFFQSxFQUFFLENBQUM1RCxFQUFFb0QsRUFBRXhELElBQU0sQ0FBQ0ksRUFBRW9ELEVBQUV4RCxHQUFLd0QsRUFBRWhCLEVBQUVwQyxFQUFFUSxFQUFFNEIsRUFBRXhDLEVBQUUsSUFBSUYsRUFBRXZFLEVBQUVLLGVBQWUsS0FBS29GLEVBQUV6RixFQUFFSyxlQUFlLEtBQUt3SSxFQUFFOUIsRUFBRXBDLEVBQUV0RixFQUFFOEgsRUFBRWdDLE9BQU8sR0FBR2hCLEVBQUUsQ0FBQyxJQUFJYSxFQUFFcUUsRUFBRXhOLEdBQUcwSixFQUFFLGVBQWVFLEVBQUUsY0FBY1QsSUFBSUUsRUFBRXJKLElBQUksV0FBVzZNLEVBQUUxRCxFQUFFOEQsRUFBRWpOLElBQUkrSyxVQUFVLGFBQWFqQyxJQUFJWSxFQUFFLGVBQWVFLEVBQUUsZUFBZVQsRUFBRUEsR0FBRzdELElBQUk5RixJQUFJOEYsSUFBSTRCLEdBQUc1QixJQUFJcEYsSUFBSXVJLElBQUkvQixLQUFLNUIsRUFBRTdFLEVBQUV1RixJQUFJa0MsR0FBR0osRUFBRWtJLGVBQWVsSSxFQUFFa0ksZUFBZXRELE9BQU8vQyxFQUFFTyxJQUFJdEUsRUFBRThHLE9BQU8xRyxHQUFHb0MsRUFBRSxHQUFHLEdBQUd0QyxJQUFJNEIsSUFBSTVCLElBQUk5RixHQUFHOEYsSUFBSXJGLEdBQUd3SSxJQUFJL0IsS0FBS3NDLEVBQUU5SSxFQUFFa0ksSUFBSVYsR0FBR0osRUFBRWtJLGVBQWVsSSxFQUFFa0ksZUFBZXZELE1BQU05QyxFQUFFUyxJQUFJeEUsRUFBRTZHLE1BQU03RCxHQUFHUixFQUFFLEdBQUcsR0FBRyxJQUFJa0MsRUFBRTlFLEVBQUU1RSxPQUFPc0ssT0FBTyxDQUFDSyxTQUFTakMsR0FBR1IsR0FBR3lHLEdBQUczRCxHQUFFLElBQUt4QyxFQUFFLFNBQVMxSixHQUFHLElBQUlNLEVBQUVOLEVBQUU4RixFQUFFakYsRUFBRWIsRUFBRTBGLEVBQUU1RSxFQUFFc0osT0FBT21HLGtCQUFrQixFQUFFLE1BQU0sQ0FBQ3pLLEVBQUUyRyxFQUFFbk0sRUFBRVEsR0FBR0EsR0FBRyxFQUFFNEUsRUFBRStHLEVBQUU1TCxFQUFFQyxHQUFHQSxHQUFHLEdBQTFGLENBQThGLENBQUNnRixFQUFFb0QsRUFBRXhELElBQU0sQ0FBQ0ksRUFBRW9ELEVBQUV4RCxHQUFLLE9BQU93RCxFQUFFZ0QsRUFBRXBHLEVBQUVRLEVBQUU0RixFQUFFeEcsRUFBRWdELEVBQUV4SCxPQUFPc0ssT0FBTyxHQUFHMUYsSUFBSThFLEVBQUUsSUFBSWhGLEdBQUdjLEVBQUUsSUFBSSxHQUFHa0UsRUFBRWQsR0FBR3RFLEVBQUUsSUFBSSxHQUFHb0YsRUFBRTZELFdBQVdyRyxFQUFFbUksa0JBQWtCLElBQUksRUFBRSxhQUFhckgsRUFBRSxPQUFPNUMsRUFBRSxNQUFNLGVBQWU0QyxFQUFFLE9BQU81QyxFQUFFLFNBQVNzRSxJQUFJMUosT0FBT3NLLE9BQU8sR0FBRzFGLElBQUlqRixFQUFFLElBQUkrRSxHQUFHYyxFQUFFSixFQUFFLEtBQUssR0FBR3pGLEVBQUVpSixHQUFHdEUsRUFBRTBELEVBQUUsS0FBSyxHQUFHckksRUFBRTROLFVBQVUsR0FBRzVOLElBQUksTUFBTWlHLEdBQUcsQ0FBQ2dFLEtBQUssZ0JBQWdCQyxTQUFRLEVBQUdDLE1BQU0sY0FBY0MsR0FBRyxTQUFTakwsR0FBRyxJQUFJTSxFQUFFTixFQUFFa0wsTUFBTXJLLEVBQUViLEVBQUU4TCxRQUFRaEwsRUFBRUQsRUFBRXFQLGdCQUFnQm5QLE9BQUUsSUFBU0QsR0FBR0EsRUFBRUUsRUFBRUgsRUFBRXNQLFNBQVNuSSxPQUFFLElBQVNoSCxHQUFHQSxFQUFFa0YsRUFBRXJGLEVBQUV1UCxhQUFhaEssT0FBRSxJQUFTRixHQUFHQSxFQUFFcUQsRUFBRSxDQUFDNEYsVUFBVWpELEVBQUU1TCxFQUFFNk8sV0FBV2EsVUFBVUosRUFBRXRQLEVBQUU2TyxXQUFXMUcsT0FBT25JLEVBQUU4SyxTQUFTM0MsT0FBT3NILFdBQVd6UCxFQUFFOE8sTUFBTTNHLE9BQU95SCxnQkFBZ0JuUCxFQUFFc1AsUUFBUSxVQUFVL1AsRUFBRXdMLFFBQVFDLFVBQVUsTUFBTXpMLEVBQUU0TyxjQUFjckcsZ0JBQWdCdkksRUFBRWdMLE9BQU83QyxPQUFPdkgsT0FBT3NLLE9BQU8sR0FBR2xMLEVBQUVnTCxPQUFPN0MsT0FBT3FILEVBQUU1TyxPQUFPc0ssT0FBTyxHQUFHakMsRUFBRSxDQUFDMEcsUUFBUTNQLEVBQUU0TyxjQUFjckcsY0FBY2dELFNBQVN2TCxFQUFFd0wsUUFBUUMsU0FBU29FLFNBQVNuSSxFQUFFb0ksYUFBYWhLLE9BQU8sTUFBTTlGLEVBQUU0TyxjQUFjbkosUUFBUXpGLEVBQUVnTCxPQUFPdkYsTUFBTTdFLE9BQU9zSyxPQUFPLEdBQUdsTCxFQUFFZ0wsT0FBT3ZGLE1BQU0rSixFQUFFNU8sT0FBT3NLLE9BQU8sR0FBR2pDLEVBQUUsQ0FBQzBHLFFBQVEzUCxFQUFFNE8sY0FBY25KLE1BQU04RixTQUFTLFdBQVdzRSxVQUFTLEVBQUdDLGFBQWFoSyxPQUFPOUYsRUFBRWlMLFdBQVc5QyxPQUFPdkgsT0FBT3NLLE9BQU8sR0FBR2xMLEVBQUVpTCxXQUFXOUMsT0FBTyxDQUFDLHdCQUF3Qm5JLEVBQUU2TyxhQUFhcUIsS0FBSyxJQUFJLElBQUlDLEdBQUcsQ0FBQ0MsU0FBUSxHQUFJLE1BQU1oSixHQUFHLENBQUNvRCxLQUFLLGlCQUFpQkMsU0FBUSxFQUFHQyxNQUFNLFFBQVFDLEdBQUcsYUFBYVcsT0FBTyxTQUFTNUwsR0FBRyxJQUFJTSxFQUFFTixFQUFFa0wsTUFBTXJLLEVBQUViLEVBQUUyUSxTQUFTN1AsRUFBRWQsRUFBRThMLFFBQVEvSyxFQUFFRCxFQUFFOFAsT0FBTzVQLE9BQUUsSUFBU0QsR0FBR0EsRUFBRWlILEVBQUVsSCxFQUFFK1AsT0FBTzNLLE9BQUUsSUFBUzhCLEdBQUdBLEVBQUU1QixFQUFFK0QsRUFBRTdKLEVBQUU4SyxTQUFTM0MsUUFBUWMsRUFBRSxHQUFHUyxPQUFPMUosRUFBRXdRLGNBQWMzSCxVQUFVN0ksRUFBRXdRLGNBQWNySSxRQUFRLE9BQU96SCxHQUFHdUksRUFBRThCLFNBQVEsU0FBVXJMLEdBQUdBLEVBQUUrUSxpQkFBaUIsU0FBU2xRLEVBQUVtUSxPQUFPUCxPQUFPdkssR0FBR0UsRUFBRTJLLGlCQUFpQixTQUFTbFEsRUFBRW1RLE9BQU9QLElBQUksV0FBV3pQLEdBQUd1SSxFQUFFOEIsU0FBUSxTQUFVckwsR0FBR0EsRUFBRWlSLG9CQUFvQixTQUFTcFEsRUFBRW1RLE9BQU9QLE9BQU92SyxHQUFHRSxFQUFFNkssb0JBQW9CLFNBQVNwUSxFQUFFbVEsT0FBT1AsTUFBTUQsS0FBSyxJQUFJLElBQUlVLEdBQUcsQ0FBQ25KLEtBQUssUUFBUXNCLE1BQU0sT0FBTzFDLE9BQU8sTUFBTTZDLElBQUksVUFBVSxTQUFTMkgsR0FBR25SLEdBQUcsT0FBT0EsRUFBRUssUUFBUSwwQkFBeUIsU0FBVUwsR0FBRyxPQUFPa1IsR0FBR2xSLE1BQU0sSUFBSW9SLEdBQUcsQ0FBQzlILE1BQU0sTUFBTS9CLElBQUksU0FBUyxTQUFTOEosR0FBR3JSLEdBQUcsT0FBT0EsRUFBRUssUUFBUSxjQUFhLFNBQVVMLEdBQUcsT0FBT29SLEdBQUdwUixNQUFNLFNBQVNzUixHQUFHdFIsR0FBRyxJQUFJTSxFQUFFNkosRUFBRW5LLEdBQUcsTUFBTSxDQUFDdVIsV0FBV2pSLEVBQUVrUixZQUFZQyxVQUFVblIsRUFBRW9SLGFBQWEsU0FBU0MsR0FBRzNSLEdBQUcsT0FBTzJNLEVBQUVvQixFQUFFL04sSUFBSStILEtBQUt1SixHQUFHdFIsR0FBR3VSLFdBQVcsU0FBU0ssR0FBRzVSLEdBQUcsSUFBSU0sRUFBRXFOLEVBQUUzTixHQUFHYSxFQUFFUCxFQUFFdVIsU0FBUy9RLEVBQUVSLEVBQUV3UixVQUFVL1EsRUFBRVQsRUFBRXlSLFVBQVUsTUFBTSw2QkFBNkJDLEtBQUtuUixFQUFFRSxFQUFFRCxHQUFHLFNBQVNtUixHQUFHalMsR0FBRyxNQUFNLENBQUMsT0FBTyxPQUFPLGFBQWE4TixRQUFRN0QsRUFBRWpLLEtBQUssRUFBRUEsRUFBRXNLLGNBQWM0SCxLQUFLeEgsRUFBRTFLLElBQUk0UixHQUFHNVIsR0FBR0EsRUFBRWlTLEdBQUcvRCxFQUFFbE8sSUFBSSxTQUFTbVMsR0FBR25TLEVBQUVNLEdBQUcsSUFBSU8sT0FBRSxJQUFTUCxJQUFJQSxFQUFFLElBQUksSUFBSVEsRUFBRW1SLEdBQUdqUyxHQUFHZSxFQUFFRCxLQUFLLE9BQU9ELEVBQUViLEVBQUVzSyxvQkFBZSxFQUFPekosRUFBRXFSLE1BQU1sUixFQUFFbUosRUFBRXJKLEdBQUdrSCxFQUFFakgsRUFBRSxDQUFDQyxHQUFHZ0osT0FBT2hKLEVBQUVzUCxnQkFBZ0IsR0FBR3NCLEdBQUc5USxHQUFHQSxFQUFFLElBQUlBLEVBQUVvRixFQUFFNUYsRUFBRTBKLE9BQU9oQyxHQUFHLE9BQU9qSCxFQUFFbUYsRUFBRUEsRUFBRThELE9BQU9tSSxHQUFHakUsRUFBRWxHLEtBQUssU0FBU29LLEdBQUdwUyxHQUFHLE9BQU9rQixPQUFPc0ssT0FBTyxHQUFHeEwsRUFBRSxDQUFDK0gsS0FBSy9ILEVBQUU4RixFQUFFMEQsSUFBSXhKLEVBQUUwRixFQUFFMkQsTUFBTXJKLEVBQUU4RixFQUFFOUYsRUFBRStNLE1BQU1wRyxPQUFPM0csRUFBRTBGLEVBQUUxRixFQUFFZ04sU0FBUyxTQUFTcUYsR0FBR3JTLEVBQUVNLEdBQUcsT0FBT0EsSUFBSXNKLEVBQUV3SSxHQUFHLFNBQVNwUyxHQUFHLElBQUlNLEVBQUU2SixFQUFFbkssR0FBR2EsRUFBRWtOLEVBQUUvTixHQUFHYyxFQUFFUixFQUFFZ1EsZUFBZXZQLEVBQUVGLEVBQUUwTyxZQUFZdk8sRUFBRUgsRUFBRXlPLGFBQWF0SCxFQUFFLEVBQUU5QixFQUFFLEVBQUUsT0FBT3BGLElBQUlDLEVBQUVELEVBQUVpTSxNQUFNL0wsRUFBRUYsRUFBRWtNLE9BQU8saUNBQWlDZ0YsS0FBS3pELFVBQVVDLGFBQWF4RyxFQUFFbEgsRUFBRXFNLFdBQVdqSCxFQUFFcEYsRUFBRXNNLFlBQVksQ0FBQ0wsTUFBTWhNLEVBQUVpTSxPQUFPaE0sRUFBRThFLEVBQUVrQyxFQUFFMkosR0FBRzNSLEdBQUcwRixFQUFFUSxHQUFwUCxDQUF3UGxHLElBQUl3SyxFQUFFbEssR0FBRyxTQUFTTixHQUFHLElBQUlNLEVBQUVxTSxFQUFFM00sR0FBRyxPQUFPTSxFQUFFa0osSUFBSWxKLEVBQUVrSixJQUFJeEosRUFBRXNTLFVBQVVoUyxFQUFFeUgsS0FBS3pILEVBQUV5SCxLQUFLL0gsRUFBRXVTLFdBQVdqUyxFQUFFcUcsT0FBT3JHLEVBQUVrSixJQUFJeEosRUFBRXNQLGFBQWFoUCxFQUFFK0ksTUFBTS9JLEVBQUV5SCxLQUFLL0gsRUFBRXVQLFlBQVlqUCxFQUFFeU0sTUFBTS9NLEVBQUV1UCxZQUFZalAsRUFBRTBNLE9BQU9oTixFQUFFc1AsYUFBYWhQLEVBQUV3RixFQUFFeEYsRUFBRXlILEtBQUt6SCxFQUFFb0YsRUFBRXBGLEVBQUVrSixJQUFJbEosRUFBL00sQ0FBa05BLEdBQUc4UixHQUFHLFNBQVNwUyxHQUFHLElBQUlNLEVBQUVPLEVBQUVrTixFQUFFL04sR0FBR2MsRUFBRXdRLEdBQUd0UixHQUFHZSxFQUFFLE9BQU9ULEVBQUVOLEVBQUVzSyxvQkFBZSxFQUFPaEssRUFBRTRSLEtBQUtsUixFQUFFb0wsRUFBRXZMLEVBQUUyUixZQUFZM1IsRUFBRTBPLFlBQVl4TyxFQUFFQSxFQUFFeVIsWUFBWSxFQUFFelIsRUFBRUEsRUFBRXdPLFlBQVksR0FBR3ZILEVBQUVvRSxFQUFFdkwsRUFBRTRSLGFBQWE1UixFQUFFeU8sYUFBYXZPLEVBQUVBLEVBQUUwUixhQUFhLEVBQUUxUixFQUFFQSxFQUFFdU8sYUFBYSxHQUFHcEosR0FBR3BGLEVBQUV5USxXQUFXSSxHQUFHM1IsR0FBR29HLEdBQUd0RixFQUFFMlEsVUFBVSxNQUFNLFFBQVE5RCxFQUFFNU0sR0FBR0YsR0FBRzZSLFlBQVl4TSxHQUFHa0csRUFBRXZMLEVBQUUwTyxZQUFZeE8sRUFBRUEsRUFBRXdPLFlBQVksR0FBR3ZPLEdBQUcsQ0FBQytMLE1BQU0vTCxFQUFFZ00sT0FBT2hGLEVBQUVsQyxFQUFFSSxFQUFFUixFQUFFVSxHQUFqVyxDQUFxVzJILEVBQUUvTixLQUFLLFNBQVMyUyxHQUFHM1MsR0FBRyxJQUFJYSxFQUFFQyxFQUFFZCxFQUFFbUosVUFBVWpELEVBQUVsRyxFQUFFeVAsUUFBUXJKLEVBQUVwRyxFQUFFbVAsVUFBVWxPLEVBQUVtRixFQUFFOEYsRUFBRTlGLEdBQUcsS0FBS3dELEVBQUV4RCxFQUFFd0osRUFBRXhKLEdBQUcsS0FBS3NDLEVBQUU1SCxFQUFFZ0YsRUFBRWhGLEVBQUVpTSxNQUFNLEVBQUU3RyxFQUFFNkcsTUFBTSxFQUFFM0QsRUFBRXRJLEVBQUU0RSxFQUFFNUUsRUFBRWtNLE9BQU8sRUFBRTlHLEVBQUU4RyxPQUFPLEVBQUUsT0FBTy9MLEdBQUcsS0FBS1gsRUFBRU8sRUFBRSxDQUFDaUYsRUFBRTRDLEVBQUVoRCxFQUFFNUUsRUFBRTRFLEVBQUVRLEVBQUU4RyxRQUFRLE1BQU0sS0FBS2pNLEVBQUVGLEVBQUUsQ0FBQ2lGLEVBQUU0QyxFQUFFaEQsRUFBRTVFLEVBQUU0RSxFQUFFNUUsRUFBRWtNLFFBQVEsTUFBTSxLQUFLaE0sRUFBRUgsRUFBRSxDQUFDaUYsRUFBRWhGLEVBQUVnRixFQUFFaEYsRUFBRWlNLE1BQU1ySCxFQUFFMEQsR0FBRyxNQUFNLEtBQUtwQixFQUFFbkgsRUFBRSxDQUFDaUYsRUFBRWhGLEVBQUVnRixFQUFFSSxFQUFFNkcsTUFBTXJILEVBQUUwRCxHQUFHLE1BQU0sUUFBUXZJLEVBQUUsQ0FBQ2lGLEVBQUVoRixFQUFFZ0YsRUFBRUosRUFBRTVFLEVBQUU0RSxHQUFHLElBQUlnRSxFQUFFekksRUFBRTZOLEVBQUU3TixHQUFHLEtBQUssR0FBRyxNQUFNeUksRUFBRSxDQUFDLElBQUlsQixFQUFFLE1BQU1rQixFQUFFLFNBQVMsUUFBUSxPQUFPRSxHQUFHLEtBQUtMLEVBQUUxSSxFQUFFNkksR0FBRzdJLEVBQUU2SSxJQUFJNUksRUFBRTBILEdBQUcsRUFBRXRDLEVBQUVzQyxHQUFHLEdBQUcsTUFBTSxLQUFLaEIsRUFBRTNHLEVBQUU2SSxHQUFHN0ksRUFBRTZJLElBQUk1SSxFQUFFMEgsR0FBRyxFQUFFdEMsRUFBRXNDLEdBQUcsSUFBSSxPQUFPM0gsRUFBRSxTQUFTeUcsR0FBR3RILEVBQUVhLFFBQUcsSUFBU0EsSUFBSUEsRUFBRSxJQUFJLElBQUlDLEVBQUVELEVBQUVtSCxFQUFFbEgsRUFBRXFPLFVBQVVqSixPQUFFLElBQVM4QixFQUFFaEksRUFBRW1QLFVBQVVuSCxFQUFFdUIsRUFBRXpJLEVBQUU4UixTQUFTcEwsT0FBRSxJQUFTK0IsRUFBRXRJLEVBQUVzSSxFQUFFRyxFQUFFNUksRUFBRStSLGFBQWFySyxPQUFFLElBQVNrQixFQUFFRSxFQUFFRixFQUFFbEQsRUFBRTFGLEVBQUVnUyxlQUFlNUosT0FBRSxJQUFTMUMsRUFBRWtDLEVBQUVsQyxFQUFFZCxFQUFFNUUsRUFBRWlTLFlBQVl6TSxPQUFFLElBQVNaLEdBQUdBLEVBQUV3QyxFQUFFcEgsRUFBRXVPLFFBQVE3SixPQUFFLElBQVMwQyxFQUFFLEVBQUVBLEVBQUV4QixFQUFFc0ksRUFBRSxpQkFBaUJ4SixFQUFFQSxFQUFFeUosRUFBRXpKLEVBQUVZLElBQUkwRCxFQUFFWixJQUFJUixFQUFFVSxFQUFFVixFQUFFOUMsRUFBRTVGLEVBQUVvUCxNQUFNM0csT0FBT0wsRUFBRXBJLEVBQUVvTCxTQUFTOUUsRUFBRXdELEVBQUVaLEdBQUdpQixFQUFFLFNBQVNuSyxFQUFFTSxFQUFFTyxHQUFHLElBQUlDLEVBQUUsb0JBQW9CUixFQUFFLFNBQVNOLEdBQUcsSUFBSU0sRUFBRTZSLEdBQUdqRSxFQUFFbE8sSUFBSWEsRUFBRSxDQUFDLFdBQVcsU0FBU2lOLFFBQVFILEVBQUUzTixHQUFHNkwsV0FBVyxHQUFHbkIsRUFBRTFLLEdBQUdzTyxFQUFFdE8sR0FBR0EsRUFBRSxPQUFPd0ssRUFBRTNKLEdBQUdQLEVBQUV1TyxRQUFPLFNBQVU3TyxHQUFHLE9BQU93SyxFQUFFeEssSUFBSXFOLEVBQUVyTixFQUFFYSxJQUFJLFNBQVNvSixFQUFFakssTUFBTSxHQUFqSyxDQUFxS0EsR0FBRyxHQUFHZ0ssT0FBTzFKLEdBQUdTLEVBQUUsR0FBR2lKLE9BQU9sSixFQUFFLENBQUNELElBQUlHLEVBQUVELEVBQUUsR0FBR2lILEVBQUVqSCxFQUFFZ0osUUFBTyxTQUFVekosRUFBRU8sR0FBRyxJQUFJQyxFQUFFdVIsR0FBR3JTLEVBQUVhLEdBQUcsT0FBT1AsRUFBRWtKLElBQUk0QyxFQUFFdEwsRUFBRTBJLElBQUlsSixFQUFFa0osS0FBS2xKLEVBQUUrSSxNQUFNa0QsRUFBRXpMLEVBQUV1SSxNQUFNL0ksRUFBRStJLE9BQU8vSSxFQUFFcUcsT0FBTzRGLEVBQUV6TCxFQUFFNkYsT0FBT3JHLEVBQUVxRyxRQUFRckcsRUFBRXlILEtBQUtxRSxFQUFFdEwsRUFBRWlILEtBQUt6SCxFQUFFeUgsTUFBTXpILElBQUkrUixHQUFHclMsRUFBRWdCLElBQUksT0FBT2dILEVBQUUrRSxNQUFNL0UsRUFBRXFCLE1BQU1yQixFQUFFRCxLQUFLQyxFQUFFZ0YsT0FBT2hGLEVBQUVyQixPQUFPcUIsRUFBRXdCLElBQUl4QixFQUFFbEMsRUFBRWtDLEVBQUVELEtBQUtDLEVBQUV0QyxFQUFFc0MsRUFBRXdCLElBQUl4QixFQUF4ZSxDQUEyZXdDLEVBQUVwQyxHQUFHQSxFQUFFQSxFQUFFNEssZ0JBQWdCakYsRUFBRS9OLEVBQUVvTCxTQUFTM0MsUUFBUWpCLEVBQUVnQixHQUFHb0MsRUFBRStCLEVBQUUzTSxFQUFFb0wsU0FBU2pDLFdBQVdyRCxFQUFFNk0sR0FBRyxDQUFDeEosVUFBVXlCLEVBQUU2RSxRQUFRN0osRUFBRW1HLFNBQVMsV0FBV29ELFVBQVVqSixJQUFJZ0csRUFBRWtHLEdBQUdsUixPQUFPc0ssT0FBTyxHQUFHNUYsRUFBRUUsSUFBSTJHLEVBQUV2RCxJQUFJUixFQUFFd0QsRUFBRXRCLEVBQUVxQyxFQUFFLENBQUN6RCxJQUFJVyxFQUFFWCxJQUFJaUQsRUFBRWpELElBQUk5QyxFQUFFOEMsSUFBSTdDLE9BQU84RixFQUFFOUYsT0FBT3dELEVBQUV4RCxPQUFPRCxFQUFFQyxPQUFPb0IsS0FBS29DLEVBQUVwQyxLQUFLMEUsRUFBRTFFLEtBQUtyQixFQUFFcUIsS0FBS3NCLE1BQU1vRCxFQUFFcEQsTUFBTWMsRUFBRWQsTUFBTTNDLEVBQUUyQyxPQUFPd0UsRUFBRTdOLEVBQUVrUCxjQUFjN0csT0FBTyxHQUFHYSxJQUFJUixHQUFHbUYsRUFBRSxDQUFDLElBQUlPLEVBQUVQLEVBQUUzSCxHQUFHaEYsT0FBT2lLLEtBQUs4QixHQUFHNUIsU0FBUSxTQUFVckwsR0FBRyxJQUFJYSxFQUFFLENBQUNHLEVBQUVELEdBQUcrTSxRQUFROU4sSUFBSSxFQUFFLEdBQUcsRUFBRWMsRUFBRSxDQUFDUixFQUFFUyxHQUFHK00sUUFBUTlOLElBQUksRUFBRSxJQUFJLElBQUlpTixFQUFFak4sSUFBSW9PLEVBQUV0TixHQUFHRCxLQUFLLE9BQU9vTSxFQUFFLE1BQU1yRixHQUFHLENBQUNrRCxLQUFLLE9BQU9DLFNBQVEsRUFBR0MsTUFBTSxPQUFPQyxHQUFHLFNBQVNqTCxHQUFHLElBQUlhLEVBQUViLEVBQUVrTCxNQUFNcEssRUFBRWQsRUFBRThMLFFBQVF0RSxFQUFFeEgsRUFBRThLLEtBQUssSUFBSWpLLEVBQUVxTyxjQUFjMUgsR0FBR3lMLE1BQU0sQ0FBQyxJQUFJLElBQUloUyxFQUFFSCxFQUFFb1MsU0FBU3RKLE9BQUUsSUFBUzNJLEdBQUdBLEVBQUV5SCxFQUFFNUgsRUFBRXFTLFFBQVEvSixPQUFFLElBQVNWLEdBQUdBLEVBQUVsQyxFQUFFMUYsRUFBRXNTLG1CQUFtQmxLLEVBQUVwSSxFQUFFdU8sUUFBUTNKLEVBQUU1RSxFQUFFOFIsU0FBU3RNLEVBQUV4RixFQUFFK1IsYUFBYTNLLEVBQUVwSCxFQUFFaVMsWUFBWXZOLEVBQUUxRSxFQUFFdVMsZUFBZTNNLE9BQUUsSUFBU2xCLEdBQUdBLEVBQUVzRSxFQUFFaEosRUFBRXdTLHNCQUFzQjFOLEVBQUUvRSxFQUFFaUwsUUFBUXFELFVBQVUvRyxFQUFFOEQsRUFBRXRHLEdBQUdxRSxFQUFFekQsSUFBSTRCLElBQUl4QyxHQUFHYyxFQUFFLFNBQVMxRyxHQUFHLEdBQUdrTSxFQUFFbE0sS0FBS2tHLEVBQUUsTUFBTSxHQUFHLElBQUk1RixFQUFFNlEsR0FBR25SLEdBQUcsTUFBTSxDQUFDcVIsR0FBR3JSLEdBQUdNLEVBQUUrUSxHQUFHL1EsSUFBL0QsQ0FBb0VzRixHQUFHLENBQUN1TCxHQUFHdkwsS0FBS3VFLEVBQUUsQ0FBQ3ZFLEdBQUdvRSxPQUFPQyxHQUFHRixRQUFPLFNBQVUvSixFQUFFTSxHQUFHLE9BQU9OLEVBQUVnSyxPQUFPa0MsRUFBRTVMLEtBQUs0RixFQUFFLFNBQVNsRyxFQUFFTSxRQUFHLElBQVNBLElBQUlBLEVBQUUsSUFBSSxJQUFJTyxFQUFFUCxFQUFFUSxFQUFFRCxFQUFFc08sVUFBVXBPLEVBQUVGLEVBQUUrUixTQUFTNVIsRUFBRUgsRUFBRWdTLGFBQWE3SyxFQUFFbkgsRUFBRXdPLFFBQVFuSixFQUFFckYsRUFBRXdTLGVBQWU5SixFQUFFMUksRUFBRXlTLHNCQUFzQjlMLE9BQUUsSUFBUytCLEVBQUVmLEVBQUVlLEVBQUV0SSxFQUFFMk8sRUFBRTlPLEdBQUc4SSxFQUFFM0ksRUFBRWlGLEVBQUV3RCxFQUFFQSxFQUFFbUYsUUFBTyxTQUFVN08sR0FBRyxPQUFPNFAsRUFBRTVQLEtBQUtpQixLQUFLbUYsRUFBRXNDLEVBQUVrQixFQUFFaUYsUUFBTyxTQUFVN08sR0FBRyxPQUFPd0gsRUFBRXNHLFFBQVE5TixJQUFJLEtBQUssSUFBSTBJLEVBQUU2SyxTQUFTN0ssRUFBRWtCLEdBQUcsSUFBSVIsRUFBRVYsRUFBRXFCLFFBQU8sU0FBVXpKLEVBQUVPLEdBQUcsT0FBT1AsRUFBRU8sR0FBR3lHLEdBQUd0SCxFQUFFLENBQUNtUCxVQUFVdE8sRUFBRStSLFNBQVM3UixFQUFFOFIsYUFBYTdSLEVBQUVxTyxRQUFRckgsSUFBSWtFLEVBQUVyTCxJQUFJUCxJQUFJLElBQUksT0FBT1ksT0FBT2lLLEtBQUsvQixHQUFHb0ssTUFBSyxTQUFVeFQsRUFBRU0sR0FBRyxPQUFPOEksRUFBRXBKLEdBQUdvSixFQUFFOUksTUFBdmMsQ0FBOGNPLEVBQUUsQ0FBQ3NPLFVBQVU3TyxFQUFFc1MsU0FBU2xOLEVBQUVtTixhQUFhdk0sRUFBRStJLFFBQVFuRyxFQUFFbUssZUFBZTNNLEVBQUU0TSxzQkFBc0J4SixJQUFJeEosS0FBSyxJQUFJa0ssRUFBRTNKLEVBQUV1TyxNQUFNakcsVUFBVXVCLEVBQUU3SixFQUFFdU8sTUFBTTNHLE9BQU9tQyxFQUFFLElBQUk2SSxJQUFJM04sR0FBRSxFQUFHc0csRUFBRWpDLEVBQUUsR0FBR29DLEVBQUUsRUFBRUEsRUFBRXBDLEVBQUVvSixPQUFPaEgsSUFBSSxDQUFDLElBQUlFLEVBQUV0QyxFQUFFb0MsR0FBR0ksRUFBRVQsRUFBRU8sR0FBR1EsRUFBRTJDLEVBQUVuRCxLQUFLbEQsRUFBRThELEVBQUUsQ0FBQy9NLEVBQUVTLEdBQUcrTSxRQUFRbkIsSUFBSSxFQUFFZ0IsRUFBRU4sRUFBRSxRQUFRLFNBQVNRLEVBQUV2RyxHQUFHekcsRUFBRSxDQUFDc08sVUFBVTFDLEVBQUVtRyxTQUFTbE4sRUFBRW1OLGFBQWF2TSxFQUFFeU0sWUFBWTdLLEVBQUVtSCxRQUFRbkcsSUFBSTZFLEVBQUVWLEVBQUVKLEVBQUVqTSxFQUFFZ0gsRUFBRWlGLEVBQUVsTSxFQUFFVCxFQUFFa0ssRUFBRW1ELEdBQUdqRCxFQUFFaUQsS0FBS0ksRUFBRW9ELEdBQUdwRCxJQUFJLElBQUlHLEVBQUVpRCxHQUFHcEQsR0FBR0ssRUFBRSxHQUFHLEdBQUd4RSxHQUFHd0UsRUFBRXNGLEtBQUs3RixFQUFFbEIsSUFBSSxHQUFHdkQsR0FBR2dGLEVBQUVzRixLQUFLN0YsRUFBRUUsSUFBSSxFQUFFRixFQUFFSyxJQUFJLEdBQUdFLEVBQUV1RixPQUFNLFNBQVUzVCxHQUFHLE9BQU9BLEtBQUssQ0FBQ29NLEVBQUVLLEVBQUUzRyxHQUFFLEVBQUcsTUFBTThFLEVBQUVnSixJQUFJbkgsRUFBRTJCLEdBQUcsR0FBR3RJLEVBQUUsSUFBSSxJQUFJd0ksRUFBRSxTQUFTdE8sR0FBRyxJQUFJTSxFQUFFNkosRUFBRTBKLE1BQUssU0FBVXZULEdBQUcsSUFBSU8sRUFBRStKLEVBQUV2SixJQUFJZixHQUFHLEdBQUdPLEVBQUUsT0FBT0EsRUFBRWlULE1BQU0sRUFBRTlULEdBQUcyVCxPQUFNLFNBQVUzVCxHQUFHLE9BQU9BLFFBQVEsR0FBR00sRUFBRSxPQUFPOEwsRUFBRTlMLEVBQUUsU0FBU3dPLEVBQUVwSSxFQUFFLEVBQUUsRUFBRW9JLEVBQUUsR0FBRyxVQUFVUixFQUFFUSxHQUFHQSxLQUFLak8sRUFBRXNPLFlBQVkvQyxJQUFJdkwsRUFBRXFPLGNBQWMxSCxHQUFHeUwsT0FBTSxFQUFHcFMsRUFBRXNPLFVBQVUvQyxFQUFFdkwsRUFBRWtULE9BQU0sS0FBTXBFLGlCQUFpQixDQUFDLFVBQVVhLEtBQUssQ0FBQ3lDLE9BQU0sSUFBSyxTQUFTZSxHQUFHaFUsRUFBRU0sRUFBRU8sR0FBRyxZQUFPLElBQVNBLElBQUlBLEVBQUUsQ0FBQ2lGLEVBQUUsRUFBRUosRUFBRSxJQUFJLENBQUM4RCxJQUFJeEosRUFBRXdKLElBQUlsSixFQUFFME0sT0FBT25NLEVBQUU2RSxFQUFFMkQsTUFBTXJKLEVBQUVxSixNQUFNL0ksRUFBRXlNLE1BQU1sTSxFQUFFaUYsRUFBRWEsT0FBTzNHLEVBQUUyRyxPQUFPckcsRUFBRTBNLE9BQU9uTSxFQUFFNkUsRUFBRXFDLEtBQUsvSCxFQUFFK0gsS0FBS3pILEVBQUV5TSxNQUFNbE0sRUFBRWlGLEdBQUcsU0FBU21PLEdBQUdqVSxHQUFHLE1BQU0sQ0FBQ00sRUFBRVUsRUFBRUQsRUFBRWlILEdBQUdrTSxNQUFLLFNBQVU1VCxHQUFHLE9BQU9OLEVBQUVNLElBQUksS0FBSyxNQUFNd0gsR0FBRyxDQUFDZ0QsS0FBSyxPQUFPQyxTQUFRLEVBQUdDLE1BQU0sT0FBTzJFLGlCQUFpQixDQUFDLG1CQUFtQjFFLEdBQUcsU0FBU2pMLEdBQUcsSUFBSU0sRUFBRU4sRUFBRWtMLE1BQU1ySyxFQUFFYixFQUFFOEssS0FBS2hLLEVBQUVSLEVBQUU4TyxNQUFNakcsVUFBVXBJLEVBQUVULEVBQUU4TyxNQUFNM0csT0FBT3pILEVBQUVWLEVBQUU0TyxjQUFjbkcsZ0JBQWdCZixFQUFFVixHQUFHaEgsRUFBRSxDQUFDd1MsZUFBZSxjQUFjNU0sRUFBRW9CLEdBQUdoSCxFQUFFLENBQUN5UyxhQUFZLElBQUszTSxFQUFFNE4sR0FBR2hNLEVBQUVsSCxHQUFHeUksRUFBRXlLLEdBQUc5TixFQUFFbkYsRUFBRUMsR0FBR3dHLEVBQUV5TSxHQUFHN04sR0FBR25GLEVBQUVnVCxHQUFHMUssR0FBR2pKLEVBQUU0TyxjQUFjck8sR0FBRyxDQUFDc1QseUJBQXlCL04sRUFBRWdPLG9CQUFvQjdLLEVBQUU4SyxrQkFBa0I3TSxFQUFFOE0saUJBQWlCclQsR0FBR1gsRUFBRWlMLFdBQVc5QyxPQUFPdkgsT0FBT3NLLE9BQU8sR0FBR2xMLEVBQUVpTCxXQUFXOUMsT0FBTyxDQUFDLCtCQUErQmpCLEVBQUUsc0JBQXNCdkcsTUFBTXFILEdBQUcsQ0FBQ3dDLEtBQUssU0FBU0MsU0FBUSxFQUFHQyxNQUFNLE9BQU9pQixTQUFTLENBQUMsaUJBQWlCaEIsR0FBRyxTQUFTakwsR0FBRyxJQUFJYSxFQUFFYixFQUFFa0wsTUFBTXBLLEVBQUVkLEVBQUU4TCxRQUFRL0ssRUFBRWYsRUFBRThLLEtBQUs1RSxFQUFFcEYsRUFBRXVILE9BQU9qQyxPQUFFLElBQVNGLEVBQUUsQ0FBQyxFQUFFLEdBQUdBLEVBQUVxRCxFQUFFZixFQUFFdUIsUUFBTyxTQUFVL0osRUFBRWMsR0FBRyxPQUFPZCxFQUFFYyxHQUFHLFNBQVNkLEVBQUVhLEVBQUVDLEdBQUcsSUFBSUMsRUFBRW1MLEVBQUVsTSxHQUFHa0csRUFBRSxDQUFDOEIsRUFBRTFILEdBQUd3TixRQUFRL00sSUFBSSxHQUFHLEVBQUUsRUFBRXFGLEVBQUUsbUJBQW1CdEYsRUFBRUEsRUFBRUksT0FBT3NLLE9BQU8sR0FBRzNLLEVBQUUsQ0FBQ3NPLFVBQVVuUCxLQUFLYyxFQUFFeUksRUFBRW5ELEVBQUUsR0FBR29CLEVBQUVwQixFQUFFLEdBQUcsT0FBT21ELEVBQUVBLEdBQUcsRUFBRS9CLEdBQUdBLEdBQUcsR0FBR3RCLEVBQUUsQ0FBQzhCLEVBQUVoSCxHQUFHOE0sUUFBUS9NLElBQUksRUFBRSxDQUFDK0UsRUFBRTBCLEVBQUU5QixFQUFFNkQsR0FBRyxDQUFDekQsRUFBRXlELEVBQUU3RCxFQUFFOEIsR0FBaE0sQ0FBb00xRyxFQUFFRCxFQUFFdU8sTUFBTWhKLEdBQUdwRyxJQUFJLElBQUl3SCxFQUFFK0IsRUFBRTFJLEVBQUVzTyxXQUFXbE8sRUFBRXVHLEVBQUUxQixFQUFFOEQsRUFBRXBDLEVBQUU5QixFQUFFLE1BQU03RSxFQUFFcU8sY0FBY3JHLGdCQUFnQmhJLEVBQUVxTyxjQUFjckcsY0FBYy9DLEdBQUc3RSxFQUFFSixFQUFFcU8sY0FBY3JHLGNBQWNuRCxHQUFHa0UsR0FBRy9JLEVBQUVxTyxjQUFjbk8sR0FBR3dJLElBQUlULEdBQUcsQ0FBQ2dDLEtBQUssZ0JBQWdCQyxTQUFRLEVBQUdDLE1BQU0sT0FBT0MsR0FBRyxTQUFTakwsR0FBRyxJQUFJTSxFQUFFTixFQUFFa0wsTUFBTXJLLEVBQUViLEVBQUU4SyxLQUFLeEssRUFBRTRPLGNBQWNyTyxHQUFHOFIsR0FBRyxDQUFDeEosVUFBVTdJLEVBQUU4TyxNQUFNakcsVUFBVXNHLFFBQVFuUCxFQUFFOE8sTUFBTTNHLE9BQU9zRCxTQUFTLFdBQVdvRCxVQUFVN08sRUFBRTZPLGFBQWFxQixLQUFLLElBQUl4SCxHQUFHLENBQUM4QixLQUFLLGtCQUFrQkMsU0FBUSxFQUFHQyxNQUFNLE9BQU9DLEdBQUcsU0FBU2pMLEdBQUcsSUFBSWEsRUFBRWIsRUFBRWtMLE1BQU1wSyxFQUFFZCxFQUFFOEwsUUFBUTVGLEVBQUVsRyxFQUFFOEssS0FBSzFFLEVBQUV0RixFQUFFb1MsU0FBUzFMLE9BQUUsSUFBU3BCLEdBQUdBLEVBQUVuRixFQUFFSCxFQUFFcVMsUUFBUXZKLE9BQUUsSUFBUzNJLEdBQUdBLEVBQUV5SCxFQUFFNUgsRUFBRThSLFNBQVN4SixFQUFFdEksRUFBRStSLGFBQWFuSixFQUFFNUksRUFBRWlTLFlBQVl2SyxFQUFFMUgsRUFBRXVPLFFBQVE3SSxFQUFFMUYsRUFBRXlULE9BQU9yTCxPQUFFLElBQVMxQyxHQUFHQSxFQUFFZCxFQUFFNUUsRUFBRTBULGFBQWFsTyxPQUFFLElBQVNaLEVBQUUsRUFBRUEsRUFBRXdDLEVBQUVaLEdBQUd6RyxFQUFFLENBQUMrUixTQUFTbEssRUFBRW1LLGFBQWF6SixFQUFFaUcsUUFBUTdHLEVBQUV1SyxZQUFZckosSUFBSWxFLEVBQUUwRyxFQUFFckwsRUFBRXNPLFdBQVd6SSxFQUFFa0osRUFBRS9PLEVBQUVzTyxXQUFXckYsR0FBR3BELEVBQUVkLEVBQUVrSixFQUFFdEosR0FBRzRDLEVBQUUsTUFBTXhDLEVBQUUsSUFBSSxJQUFJcUUsRUFBRXBKLEVBQUVxTyxjQUFjckcsY0FBY3NCLEVBQUV0SixFQUFFdU8sTUFBTWpHLFVBQVVxQixFQUFFM0osRUFBRXVPLE1BQU0zRyxPQUFPaUMsRUFBRSxtQkFBbUJwRSxFQUFFQSxFQUFFcEYsT0FBT3NLLE9BQU8sR0FBRzNLLEVBQUV1TyxNQUFNLENBQUNELFVBQVV0TyxFQUFFc08sYUFBYTdJLEVBQUVzRSxFQUFFLGlCQUFpQkYsRUFBRSxDQUFDd0ksU0FBU3hJLEVBQUV5SSxRQUFRekksR0FBR3hKLE9BQU9zSyxPQUFPLENBQUMwSCxTQUFTLEVBQUVDLFFBQVEsR0FBR3pJLEdBQUc1RSxFQUFFakYsRUFBRXFPLGNBQWM3RyxPQUFPeEgsRUFBRXFPLGNBQWM3RyxPQUFPeEgsRUFBRXNPLFdBQVcsS0FBSzFDLEVBQUUsQ0FBQzNHLEVBQUUsRUFBRUosRUFBRSxHQUFHLEdBQUd1RSxFQUFFLENBQUMsR0FBR3pDLEVBQUUsQ0FBQyxJQUFJbUYsRUFBRVUsRUFBRSxNQUFNekgsRUFBRXRGLEVBQUUwSCxFQUFFMkYsRUFBRSxNQUFNL0gsRUFBRTdFLEVBQUVDLEVBQUU2TSxFQUFFLE1BQU1qSSxFQUFFLFNBQVMsUUFBUW1JLEVBQUU5RCxFQUFFckUsR0FBR3NJLEVBQUVILEVBQUU3RixFQUFFbUYsR0FBR2UsRUFBRUwsRUFBRTdGLEVBQUV5RixHQUFHcUIsRUFBRTlGLEdBQUdzQixFQUFFcUQsR0FBRyxFQUFFLEVBQUVvQixFQUFFdkksSUFBSTZDLEVBQUVZLEVBQUUwRCxHQUFHckQsRUFBRXFELEdBQUc3SCxFQUFFVSxJQUFJNkMsR0FBR2lCLEVBQUVxRCxJQUFJMUQsRUFBRTBELEdBQUdnQyxFQUFFaFAsRUFBRXVLLFNBQVNyRixNQUFNK0osRUFBRTVHLEdBQUcyRyxFQUFFNUMsRUFBRTRDLEdBQUcsQ0FBQzlDLE1BQU0sRUFBRUMsT0FBTyxHQUFHbEcsR0FBR2pHLEVBQUVxTyxjQUFjLG9CQUFvQnJPLEVBQUVxTyxjQUFjLG9CQUFvQkcsUUFBUSxDQUFDN0YsSUFBSSxFQUFFSCxNQUFNLEVBQUUxQyxPQUFPLEVBQUVvQixLQUFLLEdBQUcwSSxHQUFHM0osR0FBR3VHLEdBQUczRixHQUFHWixHQUFHNkcsR0FBR3VELEdBQUduQyxFQUFFLEVBQUU1RSxFQUFFMEQsR0FBR2lDLEVBQUVqQyxJQUFJc0QsR0FBR3JILEVBQUVLLEVBQUUwRCxHQUFHLEVBQUVtQixFQUFFa0MsR0FBR1QsR0FBRzdGLEVBQUVzSSxTQUFTakUsRUFBRWlDLEdBQUdULEdBQUc3RixFQUFFc0ksU0FBUzlCLEdBQUd0SCxHQUFHSyxFQUFFMEQsR0FBRyxFQUFFbUIsRUFBRWtDLEdBQUd4SixHQUFHa0QsRUFBRXNJLFNBQVNsTixFQUFFa0wsR0FBR3hKLEdBQUdrRCxFQUFFc0ksU0FBUzdCLEdBQUd4USxFQUFFdUssU0FBU3JGLE9BQU91SSxFQUFFek4sRUFBRXVLLFNBQVNyRixPQUFPdUwsR0FBR0QsR0FBRyxNQUFNekwsRUFBRXlMLEdBQUdpQixXQUFXLEVBQUVqQixHQUFHa0IsWUFBWSxFQUFFLEVBQUVaLEdBQUcsT0FBT2hGLEVBQUUsTUFBTTdHLE9BQUUsRUFBT0EsRUFBRUYsSUFBSStHLEVBQUUsRUFBRWlGLEdBQUc3RCxFQUFFcUQsR0FBR08sR0FBR00sR0FBR2xELEVBQUU3RixFQUFFcUQsRUFBRTJCLEVBQUVILEVBQUVvRCxHQUFHUSxHQUFHTCxJQUFJcEQsRUFBRUgsRUFBRTdFLEVBQUVrRCxFQUFFZ0MsRUFBRXdELElBQUl4RCxHQUFHbkUsRUFBRXJFLEdBQUdxTSxHQUFHeEYsRUFBRTdHLEdBQUdxTSxHQUFHbEUsRUFBRSxHQUFHbkUsRUFBRSxDQUFDLElBQUl1SSxHQUFHQyxHQUFHLE1BQU14TSxFQUFFdEYsRUFBRTBILEVBQUVxSyxHQUFHLE1BQU16TSxFQUFFN0UsRUFBRUMsRUFBRTJSLEdBQUcxSSxFQUFFN0IsR0FBR1IsR0FBRyxNQUFNUSxFQUFFLFNBQVMsUUFBUTRMLEdBQUdyQixHQUFHekssRUFBRWtLLElBQUk2QixHQUFHdEIsR0FBR3pLLEVBQUVtSyxJQUFJdkssSUFBSSxJQUFJLENBQUN4SCxFQUFFMEgsR0FBRzhGLFFBQVF0SSxHQUFHOEMsR0FBRyxPQUFPNkosR0FBRyxNQUFNck0sT0FBRSxFQUFPQSxFQUFFc0MsSUFBSStKLEdBQUcsRUFBRXJKLEdBQUdoQixHQUFHa00sR0FBR3JCLEdBQUd4SSxFQUFFdkMsSUFBSTRDLEVBQUU1QyxJQUFJVSxHQUFHc0MsRUFBRXVJLFFBQVFuSyxHQUFHbEIsR0FBRzZLLEdBQUd4SSxFQUFFdkMsSUFBSTRDLEVBQUU1QyxJQUFJVSxHQUFHc0MsRUFBRXVJLFFBQVFjLEdBQUdRLEdBQUd2TCxHQUFHcEIsR0FBRyxTQUFTOUgsRUFBRU0sRUFBRU8sR0FBRyxJQUFJQyxFQUFFaU8sRUFBRS9PLEVBQUVNLEVBQUVPLEdBQUcsT0FBT0MsRUFBRUQsRUFBRUEsRUFBRUMsRUFBNUMsQ0FBK0NnSSxHQUFHNkosR0FBRzNKLElBQUkrRixFQUFFN0YsRUFBRUosR0FBR2tMLEdBQUdyQixHQUFHekosRUFBRUYsR0FBR2lMLElBQUloSyxFQUFFN0IsR0FBR3FNLEdBQUdoSSxFQUFFckUsR0FBR3FNLEdBQUc5QixHQUFHOVIsRUFBRXFPLGNBQWNoSixHQUFHdUcsSUFBSWtELGlCQUFpQixDQUFDLFdBQVcsU0FBUzhFLEdBQUd6VSxFQUFFTSxFQUFFTyxRQUFHLElBQVNBLElBQUlBLEdBQUUsR0FBSSxJQUFJQyxFQUFFQyxFQUFFQyxFQUFFMEosRUFBRXBLLEdBQUcwSCxFQUFFMEMsRUFBRXBLLElBQUksU0FBU04sR0FBRyxJQUFJTSxFQUFFTixFQUFFNE0sd0JBQXdCL0wsRUFBRTRMLEVBQUVuTSxFQUFFeU0sT0FBTy9NLEVBQUU4TSxhQUFhLEVBQUVoTSxFQUFFMkwsRUFBRW5NLEVBQUUwTSxRQUFRaE4sRUFBRTZNLGNBQWMsRUFBRSxPQUFPLElBQUloTSxHQUFHLElBQUlDLEVBQTVILENBQStIUixHQUFHNEYsRUFBRTZILEVBQUV6TixHQUFHOEYsRUFBRXVHLEVBQUUzTSxFQUFFZ0ksR0FBR3VCLEVBQUUsQ0FBQ2dJLFdBQVcsRUFBRUUsVUFBVSxHQUFHakssRUFBRSxDQUFDMUIsRUFBRSxFQUFFSixFQUFFLEdBQUcsT0FBTzFFLElBQUlBLElBQUlILE1BQU0sU0FBU29KLEVBQUUzSixJQUFJc1IsR0FBRzFMLE1BQU1xRCxHQUFHekksRUFBRVIsS0FBSzZKLEVBQUVySixJQUFJNEosRUFBRTVKLEdBQUcsQ0FBQ3lRLFlBQVl4USxFQUFFRCxHQUFHeVEsV0FBV0UsVUFBVTFRLEVBQUUwUSxXQUFXSCxHQUFHeFEsSUFBSTRKLEVBQUVwSyxLQUFLa0gsRUFBRW1GLEVBQUVyTSxHQUFFLElBQUt3RixHQUFHeEYsRUFBRWlTLFdBQVcvSyxFQUFFOUIsR0FBR3BGLEVBQUVnUyxXQUFXcE0sSUFBSXNCLEVBQUUxQixFQUFFNkwsR0FBR3pMLEtBQUssQ0FBQ0osRUFBRU0sRUFBRTJCLEtBQUt3QixFQUFFZ0ksV0FBVy9KLEVBQUUxQixFQUFFSixFQUFFVSxFQUFFb0QsSUFBSUQsRUFBRWtJLFVBQVVqSyxFQUFFOUIsRUFBRXFILE1BQU0zRyxFQUFFMkcsTUFBTUMsT0FBTzVHLEVBQUU0RyxRQUFRLFNBQVMwSCxHQUFHMVUsR0FBRyxJQUFJTSxFQUFFLElBQUltVCxJQUFJNVMsRUFBRSxJQUFJOFQsSUFBSTdULEVBQUUsR0FBRyxTQUFTQyxFQUFFZixHQUFHYSxFQUFFK1QsSUFBSTVVLEVBQUU4SyxNQUFNLEdBQUdkLE9BQU9oSyxFQUFFaU0sVUFBVSxHQUFHak0sRUFBRTJQLGtCQUFrQixJQUFJdEUsU0FBUSxTQUFVckwsR0FBRyxJQUFJYSxFQUFFZ1UsSUFBSTdVLEdBQUcsQ0FBQyxJQUFJYyxFQUFFUixFQUFFZSxJQUFJckIsR0FBR2MsR0FBR0MsRUFBRUQsT0FBT0EsRUFBRTRTLEtBQUsxVCxHQUFHLE9BQU9BLEVBQUVxTCxTQUFRLFNBQVVyTCxHQUFHTSxFQUFFc1QsSUFBSTVULEVBQUU4SyxLQUFLOUssTUFBTUEsRUFBRXFMLFNBQVEsU0FBVXJMLEdBQUdhLEVBQUVnVSxJQUFJN1UsRUFBRThLLE9BQU8vSixFQUFFZixNQUFNYyxFQUFFLElBQUlnVSxHQUFHLENBQUMzRixVQUFVLFNBQVM0RixVQUFVLEdBQUdoSixTQUFTLFlBQVksU0FBU2lKLEtBQUssSUFBSSxJQUFJaFYsRUFBRVksVUFBVTJTLE9BQU9qVCxFQUFFLElBQUkyVSxNQUFNalYsR0FBR2EsRUFBRSxFQUFFQSxFQUFFYixFQUFFYSxJQUFJUCxFQUFFTyxHQUFHRCxVQUFVQyxHQUFHLE9BQU9QLEVBQUU0VCxNQUFLLFNBQVVsVSxHQUFHLFFBQVFBLEdBQUcsbUJBQW1CQSxFQUFFNE0sMEJBQTBCLFNBQVNoRSxHQUFHNUksUUFBRyxJQUFTQSxJQUFJQSxFQUFFLElBQUksSUFBSU0sRUFBRU4sRUFBRWEsRUFBRVAsRUFBRTRVLGlCQUFpQnBVLE9BQUUsSUFBU0QsRUFBRSxHQUFHQSxFQUFFRSxFQUFFVCxFQUFFNlUsZUFBZW5VLE9BQUUsSUFBU0QsRUFBRStULEdBQUcvVCxFQUFFLE9BQU8sU0FBU2YsRUFBRU0sRUFBRU8sUUFBRyxJQUFTQSxJQUFJQSxFQUFFRyxHQUFHLElBQUlELEVBQUVpSCxFQUFFOUIsRUFBRSxDQUFDaUosVUFBVSxTQUFTaUcsaUJBQWlCLEdBQUd0SixRQUFRNUssT0FBT3NLLE9BQU8sR0FBR3NKLEdBQUc5VCxHQUFHa08sY0FBYyxHQUFHOUQsU0FBUyxDQUFDakMsVUFBVW5KLEVBQUV5SSxPQUFPbkksR0FBR2lMLFdBQVcsR0FBR0QsT0FBTyxJQUFJbEYsRUFBRSxHQUFHbUQsR0FBRSxFQUFHL0IsRUFBRSxDQUFDMEQsTUFBTWhGLEVBQUVtUCxXQUFXLFNBQVN4VSxHQUFHLElBQUlFLEVBQUUsbUJBQW1CRixFQUFFQSxFQUFFcUYsRUFBRTRGLFNBQVNqTCxFQUFFSSxJQUFJaUYsRUFBRTRGLFFBQVE1SyxPQUFPc0ssT0FBTyxHQUFHeEssRUFBRWtGLEVBQUU0RixRQUFRL0ssR0FBR21GLEVBQUU0SyxjQUFjLENBQUMzSCxVQUFVcUIsRUFBRXhLLEdBQUdtUyxHQUFHblMsR0FBR0EsRUFBRWdULGVBQWViLEdBQUduUyxFQUFFZ1QsZ0JBQWdCLEdBQUd2SyxPQUFPMEosR0FBRzdSLElBQUksSUFBSTBILEVBQUV1QixFQUFFSyxFQUFFLFNBQVM1SixHQUFHLElBQUlNLEVBQUVvVSxHQUFHMVUsR0FBRyxPQUFPb0ksRUFBRTJCLFFBQU8sU0FBVS9KLEVBQUVhLEdBQUcsT0FBT2IsRUFBRWdLLE9BQU8xSixFQUFFdU8sUUFBTyxTQUFVN08sR0FBRyxPQUFPQSxFQUFFZ0wsUUFBUW5LLFFBQVEsSUFBdEgsRUFBNEhtSCxFQUFFLEdBQUdnQyxPQUFPbEosRUFBRW9GLEVBQUU0RixRQUFRaUosV0FBV3hMLEVBQUV2QixFQUFFK0IsUUFBTyxTQUFVL0osRUFBRU0sR0FBRyxJQUFJTyxFQUFFYixFQUFFTSxFQUFFd0ssTUFBTSxPQUFPOUssRUFBRU0sRUFBRXdLLE1BQU1qSyxFQUFFSyxPQUFPc0ssT0FBTyxHQUFHM0ssRUFBRVAsRUFBRSxDQUFDd0wsUUFBUTVLLE9BQU9zSyxPQUFPLEdBQUczSyxFQUFFaUwsUUFBUXhMLEVBQUV3TCxTQUFTMEUsS0FBS3RQLE9BQU9zSyxPQUFPLEdBQUczSyxFQUFFMlAsS0FBS2xRLEVBQUVrUSxRQUFRbFEsRUFBRU4sSUFBSSxJQUFJa0IsT0FBT2lLLEtBQUs1QixHQUFHK0wsS0FBSSxTQUFVdFYsR0FBRyxPQUFPdUosRUFBRXZKLFFBQVEsT0FBT2tHLEVBQUVrUCxpQkFBaUJ4TCxFQUFFaUYsUUFBTyxTQUFVN08sR0FBRyxPQUFPQSxFQUFFK0ssV0FBVzdFLEVBQUVrUCxpQkFBaUIvSixTQUFRLFNBQVVyTCxHQUFHLElBQUlNLEVBQUVOLEVBQUU4SyxLQUFLakssRUFBRWIsRUFBRThMLFFBQVFoTCxPQUFFLElBQVNELEVBQUUsR0FBR0EsRUFBRUUsRUFBRWYsRUFBRTRMLE9BQU8sR0FBRyxtQkFBbUI3SyxFQUFFLENBQUMsSUFBSUMsRUFBRUQsRUFBRSxDQUFDbUssTUFBTWhGLEVBQUU0RSxLQUFLeEssRUFBRXFRLFNBQVNuSixFQUFFc0UsUUFBUWhMLElBQUlzRixFQUFFc04sS0FBSzFTLEdBQUcsa0JBQWtCd0csRUFBRXdKLFVBQVV1RSxZQUFZLFdBQVcsSUFBSWhNLEVBQUUsQ0FBQyxJQUFJdkosRUFBRWtHLEVBQUVrRixTQUFTOUssRUFBRU4sRUFBRW1KLFVBQVV0SSxFQUFFYixFQUFFeUksT0FBTyxHQUFHdU0sR0FBRzFVLEVBQUVPLEdBQUcsQ0FBQ3FGLEVBQUVrSixNQUFNLENBQUNqRyxVQUFVc0wsR0FBR25VLEVBQUVnTyxFQUFFek4sR0FBRyxVQUFVcUYsRUFBRTRGLFFBQVFDLFVBQVV0RCxPQUFPd0UsRUFBRXBNLElBQUlxRixFQUFFNk4sT0FBTSxFQUFHN04sRUFBRWlKLFVBQVVqSixFQUFFNEYsUUFBUXFELFVBQVVqSixFQUFFa1AsaUJBQWlCL0osU0FBUSxTQUFVckwsR0FBRyxPQUFPa0csRUFBRWdKLGNBQWNsUCxFQUFFOEssTUFBTTVKLE9BQU9zSyxPQUFPLEdBQUd4TCxFQUFFd1EsU0FBUyxJQUFJLElBQUkxUCxFQUFFLEVBQUVBLEVBQUVvRixFQUFFa1AsaUJBQWlCN0IsT0FBT3pTLElBQUksSUFBRyxJQUFLb0YsRUFBRTZOLE1BQU0sQ0FBQyxJQUFJaFQsRUFBRW1GLEVBQUVrUCxpQkFBaUJ0VSxHQUFHRSxFQUFFRCxFQUFFa0ssR0FBR2pELEVBQUVqSCxFQUFFK0ssUUFBUTFGLE9BQUUsSUFBUzRCLEVBQUUsR0FBR0EsRUFBRS9HLEVBQUVGLEVBQUUrSixLQUFLLG1CQUFtQjlKLElBQUlrRixFQUFFbEYsRUFBRSxDQUFDa0ssTUFBTWhGLEVBQUU0RixRQUFRMUYsRUFBRTBFLEtBQUs3SixFQUFFMFAsU0FBU25KLEtBQUt0QixRQUFRQSxFQUFFNk4sT0FBTSxFQUFHalQsR0FBRyxLQUFLa1EsUUFBUWpRLEVBQUUsV0FBVyxPQUFPLElBQUl5VSxTQUFRLFNBQVV4VixHQUFHd0gsRUFBRStOLGNBQWN2VixFQUFFa0csT0FBTyxXQUFXLE9BQU84QixJQUFJQSxFQUFFLElBQUl3TixTQUFRLFNBQVV4VixHQUFHd1YsUUFBUUMsVUFBVUMsTUFBSyxXQUFZMU4sT0FBRSxFQUFPaEksRUFBRWUsWUFBWWlILElBQUkyTixRQUFRLFdBQVcxVSxJQUFJc0ksR0FBRSxJQUFLLElBQUl5TCxHQUFHaFYsRUFBRU0sR0FBRyxPQUFPa0gsRUFBRSxTQUFTdkcsSUFBSW1GLEVBQUVpRixTQUFRLFNBQVVyTCxHQUFHLE9BQU9BLE9BQU9vRyxFQUFFLEdBQUcsT0FBT29CLEVBQUU2TixXQUFXeFUsR0FBRzZVLE1BQUssU0FBVTFWLElBQUl1SixHQUFHMUksRUFBRStVLGVBQWUvVSxFQUFFK1UsY0FBYzVWLE1BQU13SCxHQUFHLElBQUlOLEdBQUcwQixLQUFLNUIsR0FBRzRCLEdBQUcsQ0FBQ3NNLGlCQUFpQixDQUFDeE4sR0FBR29CLEdBQUdoQyxHQUFHaEIsRUFBRXdDLEdBQUdWLEdBQUdvQixHQUFHaEQsRUFBRThCLE1BQU1WLEdBQUd3QixHQUFHLENBQUNzTSxpQkFBaUIsQ0FBQ3hOLEdBQUdvQixHQUFHaEMsR0FBR2hCLEtBQUssTUFBTStQLEdBQUcsZ0JBQWdCQyxHQUFHOVYsSUFBSSxJQUFJTSxFQUFFTixFQUFFK1YsYUFBYSxrQkFBa0IsSUFBSXpWLEdBQUcsTUFBTUEsRUFBRSxDQUFDLElBQUlPLEVBQUViLEVBQUUrVixhQUFhLFFBQVEsSUFBSWxWLElBQUlBLEVBQUVtVixTQUFTLE9BQU9uVixFQUFFb1YsV0FBVyxLQUFLLE9BQU8sS0FBS3BWLEVBQUVtVixTQUFTLE9BQU9uVixFQUFFb1YsV0FBVyxPQUFPcFYsRUFBRSxJQUFJQSxFQUFFc0wsTUFBTSxLQUFLLE1BQU03TCxFQUFFTyxHQUFHLE1BQU1BLEVBQUVBLEVBQUVxVixPQUFPLEtBQUssT0FBTzVWLEdBQUc2VixHQUFHblcsSUFBSSxNQUFNTSxFQUFFd1YsR0FBRzlWLEdBQUcsT0FBT00sR0FBRzBOLFNBQVMwQixjQUFjcFAsR0FBR0EsRUFBRSxNQUFNOFYsR0FBR3BXLElBQUksTUFBTU0sRUFBRXdWLEdBQUc5VixHQUFHLE9BQU9NLEVBQUUwTixTQUFTMEIsY0FBY3BQLEdBQUcsTUFBTStWLEdBQUdyVyxJQUFJQSxFQUFFc1csY0FBYyxJQUFJQyxNQUFNVixNQUFNVyxHQUFHeFcsTUFBTUEsR0FBRyxpQkFBaUJBLFVBQUssSUFBU0EsRUFBRXlXLFNBQVN6VyxFQUFFQSxFQUFFLFNBQUksSUFBU0EsRUFBRTBXLFVBQVVDLEdBQUczVyxHQUFHd1csR0FBR3hXLEdBQUdBLEVBQUV5VyxPQUFPelcsRUFBRSxHQUFHQSxFQUFFLGlCQUFpQkEsR0FBR0EsRUFBRXVULE9BQU8sRUFBRXZGLFNBQVMwQixjQUFjMVAsR0FBRyxLQUFLNFcsR0FBRyxDQUFDNVcsRUFBRU0sRUFBRU8sS0FBS0ssT0FBT2lLLEtBQUt0SyxHQUFHd0ssU0FBU3ZLLElBQUksTUFBTUMsRUFBRUYsRUFBRUMsR0FBR0UsRUFBRVYsRUFBRVEsR0FBR2tILEVBQUVoSCxHQUFHd1YsR0FBR3hWLEdBQUcsVUFBVSxPQUFPa0YsRUFBRWxGLEdBQUcsR0FBR2tGLElBQUksR0FBR21FLFNBQVM5SSxLQUFLMkUsR0FBRzJRLE1BQU0sZUFBZSxHQUFHdFcsY0FBYyxJQUFJMkYsRUFBRSxJQUFJLElBQUk0USxPQUFPL1YsR0FBR2lSLEtBQUtoSyxHQUFHLE1BQU0sSUFBSStPLFVBQVUsR0FBRy9XLEVBQUVRLDBCQUEwQk0scUJBQXFCa0gseUJBQXlCakgsV0FBV2lXLEdBQUdoWCxNQUFNd1csR0FBR3hXLElBQUksSUFBSUEsRUFBRWlYLGlCQUFpQjFELFNBQVMsWUFBWTNGLGlCQUFpQjVOLEdBQUdrWCxpQkFBaUIsY0FBY0MsR0FBR25YLElBQUlBLEdBQUdBLEVBQUUwVyxXQUFXVSxLQUFLQyxnQkFBZ0JyWCxFQUFFc1gsVUFBVS9KLFNBQVMsbUJBQWMsSUFBU3ZOLEVBQUV1WCxTQUFTdlgsRUFBRXVYLFNBQVN2WCxFQUFFd1gsYUFBYSxhQUFhLFVBQVV4WCxFQUFFK1YsYUFBYSxhQUFhMEIsR0FBR3pYLElBQUksSUFBSWdPLFNBQVNDLGdCQUFnQnlKLGFBQWEsT0FBTyxLQUFLLEdBQUcsbUJBQW1CMVgsRUFBRXNOLFlBQVksQ0FBQyxNQUFNaE4sRUFBRU4sRUFBRXNOLGNBQWMsT0FBT2hOLGFBQWF1SyxXQUFXdkssRUFBRSxLQUFLLE9BQU9OLGFBQWE2SyxXQUFXN0ssRUFBRUEsRUFBRXlOLFdBQVdnSyxHQUFHelgsRUFBRXlOLFlBQVksTUFBTWtLLEdBQUcsT0FBT0MsR0FBRzVYLElBQUlBLEVBQUU2TSxjQUFjZ0wsR0FBRyxLQUFLLE1BQU1DLE9BQU85WCxHQUFHb0ssT0FBTyxPQUFPcEssSUFBSWdPLFNBQVNrRSxLQUFLc0YsYUFBYSxxQkFBcUJ4WCxFQUFFLE1BQU0rWCxHQUFHLEdBQUdDLEdBQUcsSUFBSSxRQUFRaEssU0FBU0MsZ0JBQWdCZ0ssSUFBSUMsR0FBR2xZLElBQUksSUFBSU0sRUFBRUEsRUFBRSxLQUFLLE1BQU1BLEVBQUV1WCxLQUFLLEdBQUd2WCxFQUFFLENBQUMsTUFBTU8sRUFBRWIsRUFBRW1ZLEtBQUtyWCxFQUFFUixFQUFFMkssR0FBR3BLLEdBQUdQLEVBQUUySyxHQUFHcEssR0FBR2IsRUFBRW9ZLGdCQUFnQjlYLEVBQUUySyxHQUFHcEssR0FBR3dYLFlBQVlyWSxFQUFFTSxFQUFFMkssR0FBR3BLLEdBQUd5WCxXQUFXLEtBQUtoWSxFQUFFMkssR0FBR3BLLEdBQUdDLEVBQUVkLEVBQUVvWSxtQkFBbUIsWUFBWXBLLFNBQVN1SyxZQUFZUixHQUFHeEUsUUFBUXZGLFNBQVMrQyxpQkFBaUIsb0JBQW1CLEtBQU1nSCxHQUFHMU0sU0FBU3JMLEdBQUdBLFNBQVMrWCxHQUFHckUsS0FBS3BULElBQUlBLEtBQUtrWSxHQUFHeFksSUFBSSxtQkFBbUJBLEdBQUdBLEtBQUt5WSxHQUFHLENBQUN6WSxFQUFFTSxFQUFFTyxHQUFFLEtBQU0sSUFBSUEsRUFBRSxZQUFZMlgsR0FBR3hZLEdBQUcsTUFBTWMsRUFBRSxDQUFDZCxJQUFJLElBQUlBLEVBQUUsT0FBTyxFQUFFLElBQUkwWSxtQkFBbUJwWSxFQUFFcVksZ0JBQWdCOVgsR0FBR3VKLE9BQU93RCxpQkFBaUI1TixHQUFHLE1BQU1jLEVBQUU4WCxPQUFPQyxXQUFXdlksR0FBR1MsRUFBRTZYLE9BQU9DLFdBQVdoWSxHQUFHLE9BQU9DLEdBQUdDLEdBQUdULEVBQUVBLEVBQUU2TCxNQUFNLEtBQUssR0FBR3RMLEVBQUVBLEVBQUVzTCxNQUFNLEtBQUssR0FBRyxLQUFLeU0sT0FBT0MsV0FBV3ZZLEdBQUdzWSxPQUFPQyxXQUFXaFksS0FBSyxHQUFqUCxDQUFxUFAsR0FBRyxFQUFFLElBQUlTLEdBQUUsRUFBRyxNQUFNQyxFQUFFLEVBQUU4WCxPQUFPalksTUFBTUEsSUFBSVAsSUFBSVMsR0FBRSxFQUFHVCxFQUFFMlEsb0JBQW9CNEUsR0FBRzdVLEdBQUd3WCxHQUFHeFksS0FBS00sRUFBRXlRLGlCQUFpQjhFLEdBQUc3VSxHQUFHK1gsWUFBVyxLQUFNaFksR0FBR3NWLEdBQUcvVixLQUFLUSxJQUFJa1ksR0FBRyxDQUFDaFosRUFBRU0sRUFBRU8sRUFBRUMsS0FBSyxJQUFJQyxFQUFFZixFQUFFOE4sUUFBUXhOLEdBQUcsSUFBSSxJQUFJUyxFQUFFLE9BQU9mLEdBQUdhLEdBQUdDLEVBQUVkLEVBQUV1VCxPQUFPLEVBQUUsR0FBRyxNQUFNdlMsRUFBRWhCLEVBQUV1VCxPQUFPLE9BQU94UyxHQUFHRixFQUFFLEdBQUcsRUFBRUMsSUFBSUMsR0FBR0EsRUFBRUMsR0FBR0EsR0FBR2hCLEVBQUVxTSxLQUFLQyxJQUFJLEVBQUVELEtBQUtHLElBQUl6TCxFQUFFQyxFQUFFLE1BQU1pWSxHQUFHLHFCQUFxQkMsR0FBRyxPQUFPQyxHQUFHLFNBQVNDLEdBQUcsR0FBRyxJQUFJQyxHQUFHLEVBQUUsTUFBTUMsR0FBRyxDQUFDQyxXQUFXLFlBQVlDLFdBQVcsWUFBWUMsR0FBRyw0QkFBNEJDLEdBQUcsSUFBSS9FLElBQUksQ0FBQyxRQUFRLFdBQVcsVUFBVSxZQUFZLGNBQWMsYUFBYSxpQkFBaUIsWUFBWSxXQUFXLFlBQVksY0FBYyxZQUFZLFVBQVUsV0FBVyxRQUFRLG9CQUFvQixhQUFhLFlBQVksV0FBVyxjQUFjLGNBQWMsY0FBYyxZQUFZLGVBQWUsZ0JBQWdCLGVBQWUsZ0JBQWdCLGFBQWEsUUFBUSxPQUFPLFNBQVMsUUFBUSxTQUFTLFNBQVMsVUFBVSxXQUFXLE9BQU8sU0FBUyxlQUFlLFNBQVMsT0FBTyxtQkFBbUIsbUJBQW1CLFFBQVEsUUFBUSxXQUFXLFNBQVNnRixHQUFHM1osRUFBRU0sR0FBRyxPQUFPQSxHQUFHLEdBQUdBLE1BQU0rWSxRQUFRclosRUFBRTRaLFVBQVVQLEtBQUssU0FBU1EsR0FBRzdaLEdBQUcsTUFBTU0sRUFBRXFaLEdBQUczWixHQUFHLE9BQU9BLEVBQUU0WixTQUFTdFosRUFBRThZLEdBQUc5WSxHQUFHOFksR0FBRzlZLElBQUksR0FBRzhZLEdBQUc5WSxHQUFHLFNBQVN3WixHQUFHOVosRUFBRU0sRUFBRU8sRUFBRSxNQUFNLE1BQU1DLEVBQUVJLE9BQU9pSyxLQUFLbkwsR0FBRyxJQUFJLElBQUllLEVBQUUsRUFBRUMsRUFBRUYsRUFBRXlTLE9BQU94UyxFQUFFQyxFQUFFRCxJQUFJLENBQUMsTUFBTUMsRUFBRWhCLEVBQUVjLEVBQUVDLElBQUksR0FBR0MsRUFBRStZLGtCQUFrQnpaLEdBQUdVLEVBQUVnWixxQkFBcUJuWixFQUFFLE9BQU9HLEVBQUUsT0FBTyxLQUFLLFNBQVNpWixHQUFHamEsRUFBRU0sRUFBRU8sR0FBRyxNQUFNQyxFQUFFLGlCQUFpQlIsRUFBRVMsRUFBRUQsRUFBRUQsRUFBRVAsRUFBRSxJQUFJVSxFQUFFa1osR0FBR2xhLEdBQUcsT0FBTzBaLEdBQUc3RSxJQUFJN1QsS0FBS0EsRUFBRWhCLEdBQUcsQ0FBQ2MsRUFBRUMsRUFBRUMsR0FBRyxTQUFTbVosR0FBR25hLEVBQUVNLEVBQUVPLEVBQUVDLEVBQUVDLEdBQUcsR0FBRyxpQkFBaUJULElBQUlOLEVBQUUsT0FBTyxHQUFHYSxJQUFJQSxFQUFFQyxFQUFFQSxFQUFFLE1BQU0yWSxHQUFHekgsS0FBSzFSLEdBQUcsQ0FBQyxNQUFNTixFQUFFQSxHQUFHLFNBQVNNLEdBQUcsSUFBSUEsRUFBRThaLGVBQWU5WixFQUFFOFosZ0JBQWdCOVosRUFBRStaLGlCQUFpQi9aLEVBQUUrWixlQUFlOU0sU0FBU2pOLEVBQUU4WixlQUFlLE9BQU9wYSxFQUFFdUIsS0FBS25CLEtBQUtFLElBQUlRLEVBQUVBLEVBQUVkLEVBQUVjLEdBQUdELEVBQUViLEVBQUVhLEdBQUcsTUFBTUcsRUFBRWdILEVBQUU5QixHQUFHK1QsR0FBRzNaLEVBQUVPLEVBQUVDLEdBQUdzRixFQUFFeVQsR0FBRzdaLEdBQUd1SixFQUFFbkQsRUFBRUYsS0FBS0UsRUFBRUYsR0FBRyxJQUFJc0IsRUFBRXNTLEdBQUd2USxFQUFFdkIsRUFBRWhILEVBQUVILEVBQUUsTUFBTSxHQUFHMkcsRUFBRSxZQUFZQSxFQUFFOFMsT0FBTzlTLEVBQUU4UyxRQUFRdlosR0FBRyxNQUFNRSxFQUFFMFksR0FBRzNSLEVBQUUxSCxFQUFFRCxRQUFRNFksR0FBRyxLQUFLclAsRUFBRTVJLEVBQUUsU0FBU2hCLEVBQUVNLEVBQUVPLEdBQUcsT0FBTyxTQUFTQyxFQUFFQyxHQUFHLE1BQU1DLEVBQUVoQixFQUFFdWEsaUJBQWlCamEsR0FBRyxJQUFJLElBQUl3WSxPQUFPOVEsR0FBR2pILEVBQUVpSCxHQUFHQSxJQUFJNUgsS0FBSzRILEVBQUVBLEVBQUV5RixXQUFXLElBQUksSUFBSXZILEVBQUVsRixFQUFFdVMsT0FBT3JOLEtBQUssR0FBR2xGLEVBQUVrRixLQUFLOEIsRUFBRSxPQUFPakgsRUFBRXNaLGVBQWVyUyxFQUFFbEgsRUFBRXdaLFFBQVFFLEdBQUdDLElBQUl6YSxFQUFFZSxFQUFFMlosS0FBS3BhLEVBQUVPLEdBQUdBLEVBQUU4WixNQUFNM1MsRUFBRSxDQUFDakgsSUFBSSxPQUFPLE1BQXJPLENBQTRPZixFQUFFYSxFQUFFQyxHQUFHLFNBQVNkLEVBQUVNLEdBQUcsT0FBTyxTQUFTTyxFQUFFQyxHQUFHLE9BQU9BLEVBQUV1WixlQUFlcmEsRUFBRWEsRUFBRXlaLFFBQVFFLEdBQUdDLElBQUl6YSxFQUFFYyxFQUFFNFosS0FBS3BhLEdBQUdBLEVBQUVxYSxNQUFNM2EsRUFBRSxDQUFDYyxLQUFyRyxDQUEyR2QsRUFBRWEsR0FBRytJLEVBQUVvUSxtQkFBbUJoWixFQUFFSCxFQUFFLEtBQUsrSSxFQUFFbVEsZ0JBQWdCL1IsRUFBRTRCLEVBQUUwUSxPQUFPdlosRUFBRTZJLEVBQUVnUSxTQUFTM1ksRUFBRXNJLEVBQUV0SSxHQUFHMkksRUFBRTVKLEVBQUUrUSxpQkFBaUI3SyxFQUFFMEQsRUFBRTVJLEdBQUcsU0FBUzRaLEdBQUc1YSxFQUFFTSxFQUFFTyxFQUFFQyxFQUFFQyxHQUFHLE1BQU1DLEVBQUU4WSxHQUFHeFosRUFBRU8sR0FBR0MsRUFBRUMsR0FBR0MsSUFBSWhCLEVBQUVpUixvQkFBb0JwUSxFQUFFRyxFQUFFNlosUUFBUTlaLFdBQVdULEVBQUVPLEdBQUdHLEVBQUU0WSxXQUFXLFNBQVNNLEdBQUdsYSxHQUFHLE9BQU9BLEVBQUVBLEVBQUVLLFFBQVE2WSxHQUFHLElBQUlJLEdBQUd0WixJQUFJQSxFQUFFLE1BQU13YSxHQUFHLENBQUNNLEdBQUc5YSxFQUFFTSxFQUFFTyxFQUFFQyxHQUFHcVosR0FBR25hLEVBQUVNLEVBQUVPLEVBQUVDLEdBQUUsSUFBS2lhLElBQUkvYSxFQUFFTSxFQUFFTyxFQUFFQyxHQUFHcVosR0FBR25hLEVBQUVNLEVBQUVPLEVBQUVDLEdBQUUsSUFBSzJaLElBQUl6YSxFQUFFTSxFQUFFTyxFQUFFQyxHQUFHLEdBQUcsaUJBQWlCUixJQUFJTixFQUFFLE9BQU8sTUFBTWUsRUFBRUMsRUFBRWdILEdBQUdpUyxHQUFHM1osRUFBRU8sRUFBRUMsR0FBR29GLEVBQUU4QixJQUFJMUgsRUFBRThGLEVBQUV5VCxHQUFHN1osR0FBR3VKLEVBQUVqSixFQUFFMlYsV0FBVyxLQUFLLFFBQUcsSUFBU2pWLEVBQUUsQ0FBQyxJQUFJb0YsSUFBSUEsRUFBRTRCLEdBQUcsT0FBTyxZQUFZNFMsR0FBRzVhLEVBQUVvRyxFQUFFNEIsRUFBRWhILEVBQUVELEVBQUVGLEVBQUUsTUFBTTBJLEdBQUdySSxPQUFPaUssS0FBSy9FLEdBQUdpRixTQUFTeEssS0FBSyxTQUFTYixFQUFFTSxFQUFFTyxFQUFFQyxHQUFHLE1BQU1DLEVBQUVULEVBQUVPLElBQUksR0FBR0ssT0FBT2lLLEtBQUtwSyxHQUFHc0ssU0FBU3JLLElBQUksR0FBR0EsRUFBRWdWLFNBQVNsVixHQUFHLENBQUMsTUFBTUEsRUFBRUMsRUFBRUMsR0FBRzRaLEdBQUc1YSxFQUFFTSxFQUFFTyxFQUFFQyxFQUFFaVosZ0JBQWdCalosRUFBRWtaLHdCQUEzSCxDQUFvSmhhLEVBQUVvRyxFQUFFdkYsRUFBRVAsRUFBRXdULE1BQU0sT0FBTyxNQUFNdE0sRUFBRXBCLEVBQUU0QixJQUFJLEdBQUc5RyxPQUFPaUssS0FBSzNELEdBQUc2RCxTQUFTeEssSUFBSSxNQUFNQyxFQUFFRCxFQUFFUixRQUFROFksR0FBRyxJQUFJLElBQUlqVCxHQUFHNUYsRUFBRTBWLFNBQVNsVixHQUFHLENBQUMsTUFBTVIsRUFBRWtILEVBQUUzRyxHQUFHK1osR0FBRzVhLEVBQUVvRyxFQUFFNEIsRUFBRTFILEVBQUV5WixnQkFBZ0J6WixFQUFFMFoseUJBQXlCZ0IsUUFBUWhiLEVBQUVNLEVBQUVPLEdBQUcsR0FBRyxpQkFBaUJQLElBQUlOLEVBQUUsT0FBTyxLQUFLLE1BQU1jLEVBQUUrVyxLQUFLOVcsRUFBRW1aLEdBQUc1WixHQUFHVSxFQUFFVixJQUFJUyxFQUFFaUgsRUFBRTBSLEdBQUc3RSxJQUFJOVQsR0FBRyxJQUFJbUYsRUFBRUUsR0FBRSxFQUFHbUQsR0FBRSxFQUFHL0IsR0FBRSxFQUFHdkcsRUFBRSxLQUFLLE9BQU9ELEdBQUdGLElBQUlvRixFQUFFcEYsRUFBRXlWLE1BQU1qVyxFQUFFTyxHQUFHQyxFQUFFZCxHQUFHZ2IsUUFBUTlVLEdBQUdFLEdBQUdGLEVBQUUrVSx1QkFBdUIxUixHQUFHckQsRUFBRWdWLGdDQUFnQzFULEVBQUV0QixFQUFFaVYsc0JBQXNCblQsR0FBRy9HLEVBQUUrTSxTQUFTb04sWUFBWSxjQUFjbmEsRUFBRW9hLFVBQVV0YSxFQUFFcUYsR0FBRSxJQUFLbkYsRUFBRSxJQUFJcWEsWUFBWWhiLEVBQUUsQ0FBQ2liLFFBQVFuVixFQUFFb1YsWUFBVyxTQUFLLElBQVMzYSxHQUFHSyxPQUFPaUssS0FBS3RLLEdBQUd3SyxTQUFTckwsSUFBSWtCLE9BQU9DLGVBQWVGLEVBQUVqQixFQUFFLENBQUNxQixJQUFJLElBQUlSLEVBQUViLFFBQVF3SCxHQUFHdkcsRUFBRXdhLGlCQUFpQmxTLEdBQUd2SixFQUFFc1csY0FBY3JWLEdBQUdBLEVBQUV5YSx1QkFBa0IsSUFBU3hWLEdBQUdBLEVBQUV1VixpQkFBaUJ4YSxJQUFJMGEsR0FBRyxJQUFJbEksSUFBSW1JLEdBQUcsQ0FBQ2hJLElBQUk1VCxFQUFFTSxFQUFFTyxHQUFHOGEsR0FBRzlHLElBQUk3VSxJQUFJMmIsR0FBRy9ILElBQUk1VCxFQUFFLElBQUl5VCxLQUFLLE1BQU0zUyxFQUFFNmEsR0FBR3RhLElBQUlyQixHQUFHYyxFQUFFK1QsSUFBSXZVLElBQUksSUFBSVEsRUFBRSthLEtBQUsvYSxFQUFFOFMsSUFBSXRULEVBQUVPLEdBQUdpYixRQUFRQyxNQUFNLCtFQUErRTlHLE1BQU0rRyxLQUFLbGIsRUFBRXFLLFFBQVEsUUFBUTlKLElBQUksQ0FBQ3JCLEVBQUVNLElBQUlxYixHQUFHOUcsSUFBSTdVLElBQUkyYixHQUFHdGEsSUFBSXJCLEdBQUdxQixJQUFJZixJQUFJLEtBQUsyYixPQUFPamMsRUFBRU0sR0FBRyxJQUFJcWIsR0FBRzlHLElBQUk3VSxHQUFHLE9BQU8sTUFBTWEsRUFBRThhLEdBQUd0YSxJQUFJckIsR0FBR2EsRUFBRXFiLE9BQU81YixHQUFHLElBQUlPLEVBQUVnYixNQUFNRixHQUFHTyxPQUFPbGMsS0FBSyxNQUFNbWMsR0FBR0MsWUFBWXBjLElBQUlBLEVBQUUyVyxHQUFHM1csTUFBTUksS0FBS2ljLFNBQVNyYyxFQUFFNGIsR0FBR2hJLElBQUl4VCxLQUFLaWMsU0FBU2pjLEtBQUtnYyxZQUFZRSxTQUFTbGMsT0FBT21jLFVBQVVYLEdBQUdLLE9BQU83YixLQUFLaWMsU0FBU2pjLEtBQUtnYyxZQUFZRSxVQUFVOUIsR0FBR0MsSUFBSXJhLEtBQUtpYyxTQUFTamMsS0FBS2djLFlBQVlJLFdBQVd0YixPQUFPdWIsb0JBQW9CcmMsTUFBTWlMLFNBQVNyTCxJQUFJSSxLQUFLSixHQUFHLFFBQVEwYyxlQUFlMWMsRUFBRU0sRUFBRU8sR0FBRSxHQUFJNFgsR0FBR3pZLEVBQUVNLEVBQUVPLEdBQUc4YixtQkFBbUIzYyxHQUFHLE9BQU80YixHQUFHdmEsSUFBSXNWLEdBQUczVyxHQUFHSSxLQUFLa2MsVUFBVUssMkJBQTJCM2MsRUFBRU0sRUFBRSxJQUFJLE9BQU9GLEtBQUt3YyxZQUFZNWMsSUFBSSxJQUFJSSxLQUFLSixFQUFFLGlCQUFpQk0sRUFBRUEsRUFBRSxNQUFpQnVjLHFCQUFVLE1BQU0sUUFBbUIxRSxrQkFBTyxNQUFNLElBQUkyRSxNQUFNLHVFQUFrRlIsc0JBQVcsTUFBTSxNQUFNbGMsS0FBSytYLE9BQWtCcUUsdUJBQVksTUFBTSxJQUFJcGMsS0FBS2tjLFlBQVksTUFBTVMsR0FBRyxDQUFDL2MsRUFBRU0sRUFBRSxVQUFVLE1BQU1PLEVBQUUsZ0JBQWdCYixFQUFFd2MsWUFBWTFiLEVBQUVkLEVBQUVtWSxLQUFLcUMsR0FBR00sR0FBRzlNLFNBQVNuTixFQUFFLHFCQUFxQkMsT0FBTSxTQUFVRCxHQUFHLEdBQUcsQ0FBQyxJQUFJLFFBQVFtVixTQUFTNVYsS0FBSzRjLFVBQVVuYyxFQUFFNGEsaUJBQWlCdEUsR0FBRy9XLE1BQU0sT0FBTyxNQUFNVyxFQUFFcVYsR0FBR2hXLE9BQU9BLEtBQUs2YyxRQUFRLElBQUluYyxLQUFLZCxFQUFFa2Qsb0JBQW9CbmMsR0FBR1QsU0FBUyxNQUFNNmMsV0FBV2hCLEdBQWNoRSxrQkFBTyxNQUFNLFFBQVFpRixRQUFRLEdBQUc1QyxHQUFHUSxRQUFRNWEsS0FBS2ljLFNBQVMsa0JBQWtCWCxpQkFBaUIsT0FBT3RiLEtBQUtpYyxTQUFTL0UsVUFBVTJFLE9BQU8sUUFBUSxNQUFNamMsRUFBRUksS0FBS2ljLFNBQVMvRSxVQUFVL0osU0FBUyxRQUFRbk4sS0FBS3NjLGdCQUFlLElBQUt0YyxLQUFLaWQsbUJBQW1CamQsS0FBS2ljLFNBQVNyYyxHQUFHcWQsa0JBQWtCamQsS0FBS2ljLFNBQVNKLFNBQVN6QixHQUFHUSxRQUFRNWEsS0FBS2ljLFNBQVMsbUJBQW1CamMsS0FBS21jLFVBQVVJLHVCQUF1QjNjLEdBQUcsT0FBT0ksS0FBS2tkLE1BQUssV0FBWSxNQUFNaGQsRUFBRTZjLEdBQUdELG9CQUFvQjljLE1BQU0sR0FBRyxpQkFBaUJKLEVBQUUsQ0FBQyxRQUFHLElBQVNNLEVBQUVOLElBQUlBLEVBQUVpVyxXQUFXLE1BQU0sZ0JBQWdCalcsRUFBRSxNQUFNLElBQUkrVyxVQUFVLG9CQUFvQi9XLE1BQU1NLEVBQUVOLEdBQUdJLFdBQVcyYyxHQUFHSSxHQUFHLFNBQVNqRixHQUFHaUYsSUFBSSxNQUFNSSxHQUFHLDRCQUE0QixNQUFNQyxXQUFXckIsR0FBY2hFLGtCQUFPLE1BQU0sU0FBU3NGLFNBQVNyZCxLQUFLaWMsU0FBUzFRLGFBQWEsZUFBZXZMLEtBQUtpYyxTQUFTL0UsVUFBVW1HLE9BQU8sV0FBV2QsdUJBQXVCM2MsR0FBRyxPQUFPSSxLQUFLa2QsTUFBSyxXQUFZLE1BQU1oZCxFQUFFa2QsR0FBR04sb0JBQW9COWMsTUFBTSxXQUFXSixHQUFHTSxFQUFFTixTQUFTLFNBQVMwZCxHQUFHMWQsR0FBRyxNQUFNLFNBQVNBLEdBQUcsVUFBVUEsSUFBSUEsSUFBSTRZLE9BQU81WSxHQUFHcUssV0FBV3VPLE9BQU81WSxHQUFHLEtBQUtBLEdBQUcsU0FBU0EsRUFBRSxLQUFLQSxHQUFHLFNBQVMyZCxHQUFHM2QsR0FBRyxPQUFPQSxFQUFFSyxRQUFRLFVBQVVMLEdBQUcsSUFBSUEsRUFBRU8sa0JBQWtCaWEsR0FBR00sR0FBRzlNLFNBQVMsMkJBQTJCdVAsSUFBSXZkLElBQUlBLEVBQUV5YixpQkFBaUIsTUFBTW5iLEVBQUVOLEVBQUU4WSxPQUFPbUUsUUFBUU0sSUFBSUMsR0FBR04sb0JBQW9CNWMsR0FBR21kLFlBQVl2RixHQUFHc0YsSUFBSSxNQUFNSSxHQUFHLENBQUNDLGlCQUFpQjdkLEVBQUVNLEVBQUVPLEdBQUdiLEVBQUUyTCxhQUFhLFdBQVdnUyxHQUFHcmQsS0FBS08sSUFBSWlkLG9CQUFvQjlkLEVBQUVNLEdBQUdOLEVBQUUwTCxnQkFBZ0IsV0FBV2lTLEdBQUdyZCxPQUFPeWQsa0JBQWtCL2QsR0FBRyxJQUFJQSxFQUFFLE1BQU0sR0FBRyxNQUFNTSxFQUFFLEdBQUcsT0FBT1ksT0FBT2lLLEtBQUtuTCxFQUFFZ2UsU0FBU25QLFFBQVE3TyxHQUFHQSxFQUFFaVcsV0FBVyxRQUFRNUssU0FBU3hLLElBQUksSUFBSUMsRUFBRUQsRUFBRVIsUUFBUSxNQUFNLElBQUlTLEVBQUVBLEVBQUVtZCxPQUFPLEdBQUcxZCxjQUFjTyxFQUFFZ1QsTUFBTSxFQUFFaFQsRUFBRXlTLFFBQVFqVCxFQUFFUSxHQUFHNGMsR0FBRzFkLEVBQUVnZSxRQUFRbmQsT0FBT1AsR0FBRzRkLGlCQUFpQixDQUFDbGUsRUFBRU0sSUFBSW9kLEdBQUcxZCxFQUFFK1YsYUFBYSxXQUFXNEgsR0FBR3JkLE9BQU8rSCxPQUFPckksR0FBRyxNQUFNTSxFQUFFTixFQUFFNE0sd0JBQXdCLE1BQU0sQ0FBQ3BELElBQUlsSixFQUFFa0osSUFBSVksT0FBT3NILFlBQVkzSixLQUFLekgsRUFBRXlILEtBQUtxQyxPQUFPb0gsY0FBYzNGLFNBQVM3TCxJQUFHLENBQUV3SixJQUFJeEosRUFBRW9OLFVBQVVyRixLQUFLL0gsRUFBRW1OLGNBQWNnUixHQUFHLENBQUN0SyxLQUFLLENBQUM3VCxFQUFFTSxFQUFFME4sU0FBU0Msa0JBQWtCLEdBQUdqRSxVQUFVUyxRQUFRdkssVUFBVXFhLGlCQUFpQmhaLEtBQUtqQixFQUFFTixJQUFJb2UsUUFBUSxDQUFDcGUsRUFBRU0sRUFBRTBOLFNBQVNDLGtCQUFrQnhELFFBQVF2SyxVQUFVd1AsY0FBY25PLEtBQUtqQixFQUFFTixHQUFHcWUsU0FBUyxDQUFDcmUsRUFBRU0sSUFBSSxHQUFHMEosVUFBVWhLLEVBQUVxZSxVQUFVeFAsUUFBUTdPLEdBQUdBLEVBQUVzZSxRQUFRaGUsS0FBS2llLFFBQVF2ZSxFQUFFTSxHQUFHLE1BQU1PLEVBQUUsR0FBRyxJQUFJQyxFQUFFZCxFQUFFeU4sV0FBVyxLQUFLM00sR0FBR0EsRUFBRTRWLFdBQVdVLEtBQUtDLGNBQWMsSUFBSXZXLEVBQUU0VixVQUFVNVYsRUFBRXdkLFFBQVFoZSxJQUFJTyxFQUFFNlMsS0FBSzVTLEdBQUdBLEVBQUVBLEVBQUUyTSxXQUFXLE9BQU81TSxHQUFHMmQsS0FBS3hlLEVBQUVNLEdBQUcsSUFBSU8sRUFBRWIsRUFBRXllLHVCQUF1QixLQUFLNWQsR0FBRyxDQUFDLEdBQUdBLEVBQUV5ZCxRQUFRaGUsR0FBRyxNQUFNLENBQUNPLEdBQUdBLEVBQUVBLEVBQUU0ZCx1QkFBdUIsTUFBTSxJQUFJQyxLQUFLMWUsRUFBRU0sR0FBRyxJQUFJTyxFQUFFYixFQUFFMmUsbUJBQW1CLEtBQUs5ZCxHQUFHLENBQUMsR0FBR0EsRUFBRXlkLFFBQVFoZSxHQUFHLE1BQU0sQ0FBQ08sR0FBR0EsRUFBRUEsRUFBRThkLG1CQUFtQixNQUFNLElBQUlDLGtCQUFrQjVlLEdBQUcsTUFBTU0sRUFBRSxDQUFDLElBQUksU0FBUyxRQUFRLFdBQVcsU0FBUyxVQUFVLGFBQWEsNEJBQTRCZ1YsS0FBS3RWLEdBQUcsR0FBR0EsMkJBQTJCNmUsS0FBSyxNQUFNLE9BQU96ZSxLQUFLeVQsS0FBS3ZULEVBQUVOLEdBQUc2TyxRQUFRN08sSUFBSW1YLEdBQUduWCxJQUFJZ1gsR0FBR2hYLE9BQU84ZSxHQUFHLFdBQVdDLEdBQUcsQ0FBQ0MsU0FBUyxJQUFJQyxVQUFTLEVBQUdDLE9BQU0sRUFBR0MsTUFBTSxRQUFRQyxNQUFLLEVBQUdDLE9BQU0sR0FBSUMsR0FBRyxDQUFDTixTQUFTLG1CQUFtQkMsU0FBUyxVQUFVQyxNQUFNLG1CQUFtQkMsTUFBTSxtQkFBbUJDLEtBQUssVUFBVUMsTUFBTSxXQUFXRSxHQUFHLE9BQU9DLEdBQUcsT0FBT0MsR0FBRyxPQUFPQyxHQUFHLFFBQVFDLEdBQUcsQ0FBQ0MsVUFBVUYsR0FBR0csV0FBV0osSUFBSUssR0FBRyxtQkFBbUJDLEdBQUcsU0FBU0MsR0FBRyx3QkFBd0IsTUFBTUMsV0FBVzlELEdBQUdDLFlBQVlwYyxFQUFFTSxHQUFHNGYsTUFBTWxnQixHQUFHSSxLQUFLK2YsT0FBTyxLQUFLL2YsS0FBS2dnQixVQUFVLEtBQUtoZ0IsS0FBS2lnQixlQUFlLEtBQUtqZ0IsS0FBS2tnQixXQUFVLEVBQUdsZ0IsS0FBS21nQixZQUFXLEVBQUduZ0IsS0FBS29nQixhQUFhLEtBQUtwZ0IsS0FBS3FnQixZQUFZLEVBQUVyZ0IsS0FBS3NnQixZQUFZLEVBQUV0Z0IsS0FBS3VnQixRQUFRdmdCLEtBQUt3Z0IsV0FBV3RnQixHQUFHRixLQUFLeWdCLG1CQUFtQjFDLEdBQUdDLFFBQVEsdUJBQXVCaGUsS0FBS2ljLFVBQVVqYyxLQUFLMGdCLGdCQUFnQixpQkFBaUI5UyxTQUFTQyxpQkFBaUJNLFVBQVV3UyxlQUFlLEVBQUUzZ0IsS0FBSzRnQixjQUFjbkcsUUFBUXpRLE9BQU82VyxjQUFjN2dCLEtBQUs4Z0IscUJBQWdDQyxxQkFBVSxPQUFPcEMsR0FBYzVHLGtCQUFPLE9BQU8yRyxHQUFHSixPQUFPdGUsS0FBS2doQixPQUFPN0IsSUFBSThCLG1CQUFtQnJULFNBQVNzVCxRQUFRdEssR0FBRzVXLEtBQUtpYyxXQUFXamMsS0FBS3NlLE9BQU9GLE9BQU9wZSxLQUFLZ2hCLE9BQU81QixJQUFJTCxNQUFNbmYsR0FBR0EsSUFBSUksS0FBS2tnQixXQUFVLEdBQUluQyxHQUFHQyxRQUFRLDJDQUEyQ2hlLEtBQUtpYyxZQUFZaEcsR0FBR2pXLEtBQUtpYyxVQUFVamMsS0FBS21oQixPQUFNLElBQUtDLGNBQWNwaEIsS0FBS2dnQixXQUFXaGdCLEtBQUtnZ0IsVUFBVSxLQUFLbUIsTUFBTXZoQixHQUFHQSxJQUFJSSxLQUFLa2dCLFdBQVUsR0FBSWxnQixLQUFLZ2dCLFlBQVlvQixjQUFjcGhCLEtBQUtnZ0IsV0FBV2hnQixLQUFLZ2dCLFVBQVUsTUFBTWhnQixLQUFLdWdCLFNBQVN2Z0IsS0FBS3VnQixRQUFRM0IsV0FBVzVlLEtBQUtrZ0IsWUFBWWxnQixLQUFLcWhCLGtCQUFrQnJoQixLQUFLZ2dCLFVBQVVzQixhQUFhMVQsU0FBUzJULGdCQUFnQnZoQixLQUFLaWhCLGdCQUFnQmpoQixLQUFLc2UsTUFBTWtELEtBQUt4aEIsTUFBTUEsS0FBS3VnQixRQUFRM0IsV0FBVzZDLEdBQUc3aEIsR0FBR0ksS0FBS2lnQixlQUFlbEMsR0FBR0MsUUFBUTRCLEdBQUc1ZixLQUFLaWMsVUFBVSxNQUFNL2IsRUFBRUYsS0FBSzBoQixjQUFjMWhCLEtBQUtpZ0IsZ0JBQWdCLEdBQUdyZ0IsRUFBRUksS0FBSytmLE9BQU81TSxPQUFPLEdBQUd2VCxFQUFFLEVBQUUsT0FBTyxHQUFHSSxLQUFLbWdCLFdBQVcsWUFBWS9GLEdBQUdPLElBQUkzYSxLQUFLaWMsU0FBU3lELElBQUcsSUFBSzFmLEtBQUt5aEIsR0FBRzdoQixLQUFLLEdBQUdNLElBQUlOLEVBQUUsT0FBT0ksS0FBSytlLGFBQWEvZSxLQUFLbWhCLFFBQVEsTUFBTTFnQixFQUFFYixFQUFFTSxFQUFFaWYsR0FBR0MsR0FBR3BmLEtBQUtnaEIsT0FBT3ZnQixFQUFFVCxLQUFLK2YsT0FBT25nQixJQUFJNGdCLFdBQVc1Z0IsR0FBRyxPQUFPQSxFQUFFLElBQUkrZSxNQUFNbkIsR0FBR0csa0JBQWtCM2QsS0FBS2ljLGFBQWEsaUJBQWlCcmMsRUFBRUEsRUFBRSxJQUFJNFcsR0FBR2tJLEdBQUc5ZSxFQUFFc2YsSUFBSXRmLEVBQUUraEIsZUFBZSxNQUFNL2hCLEVBQUVxTSxLQUFLYSxJQUFJOU0sS0FBS3NnQixhQUFhLEdBQUcxZ0IsR0FBRyxHQUFHLE9BQU8sTUFBTU0sRUFBRU4sRUFBRUksS0FBS3NnQixZQUFZdGdCLEtBQUtzZ0IsWUFBWSxFQUFFcGdCLEdBQUdGLEtBQUtnaEIsT0FBTzlnQixFQUFFLEVBQUVvZixHQUFHRCxJQUFJeUIscUJBQXFCOWdCLEtBQUt1Z0IsUUFBUTFCLFVBQVV6RSxHQUFHTSxHQUFHMWEsS0FBS2ljLFNBQVMsdUJBQXVCcmMsR0FBR0ksS0FBSzRoQixTQUFTaGlCLEtBQUssVUFBVUksS0FBS3VnQixRQUFReEIsUUFBUTNFLEdBQUdNLEdBQUcxYSxLQUFLaWMsU0FBUywwQkFBMEJyYyxHQUFHSSxLQUFLK2UsTUFBTW5mLEtBQUt3YSxHQUFHTSxHQUFHMWEsS0FBS2ljLFNBQVMsMEJBQTBCcmMsR0FBR0ksS0FBS21oQixNQUFNdmhCLE1BQU1JLEtBQUt1Z0IsUUFBUXRCLE9BQU9qZixLQUFLMGdCLGlCQUFpQjFnQixLQUFLNmhCLDBCQUEwQkEsMEJBQTBCLE1BQU1qaUIsRUFBRUEsR0FBR0ksS0FBSzRnQixnQkFBZ0IsUUFBUWhoQixFQUFFa2lCLGFBQWEsVUFBVWxpQixFQUFFa2lCLGFBQWE1aEIsRUFBRUEsSUFBSU4sRUFBRU0sR0FBR0YsS0FBS3FnQixZQUFZbmdCLEVBQUU2aEIsUUFBUS9oQixLQUFLNGdCLGdCQUFnQjVnQixLQUFLcWdCLFlBQVluZ0IsRUFBRThoQixRQUFRLEdBQUdELFVBQVV0aEIsRUFBRWIsSUFBSUksS0FBS3NnQixZQUFZMWdCLEVBQUVvaUIsU0FBU3BpQixFQUFFb2lCLFFBQVE3TyxPQUFPLEVBQUUsRUFBRXZULEVBQUVvaUIsUUFBUSxHQUFHRCxRQUFRL2hCLEtBQUtxZ0IsYUFBYTNmLEVBQUVSLElBQUlOLEVBQUVNLEtBQUtGLEtBQUtzZ0IsWUFBWXBnQixFQUFFNmhCLFFBQVEvaEIsS0FBS3FnQixhQUFhcmdCLEtBQUsyaEIsZUFBZSxVQUFVM2hCLEtBQUt1Z0IsUUFBUXhCLFFBQVEvZSxLQUFLK2UsUUFBUS9lLEtBQUtvZ0IsY0FBYzZCLGFBQWFqaUIsS0FBS29nQixjQUFjcGdCLEtBQUtvZ0IsYUFBYXpILFlBQVkvWSxHQUFHSSxLQUFLbWhCLE1BQU12aEIsSUFBSSxJQUFJSSxLQUFLdWdCLFFBQVEzQixZQUFZYixHQUFHdEssS0FBSyxxQkFBcUJ6VCxLQUFLaWMsVUFBVWhSLFNBQVNyTCxJQUFJd2EsR0FBR00sR0FBRzlhLEVBQUUseUJBQXlCQSxHQUFHQSxFQUFFeWIsc0JBQXNCcmIsS0FBSzRnQixlQUFleEcsR0FBR00sR0FBRzFhLEtBQUtpYyxTQUFTLDJCQUEyQnJjLEdBQUdNLEVBQUVOLEtBQUt3YSxHQUFHTSxHQUFHMWEsS0FBS2ljLFNBQVMseUJBQXlCcmMsR0FBR2MsRUFBRWQsS0FBS0ksS0FBS2ljLFNBQVMvRSxVQUFVMUMsSUFBSSxtQkFBbUI0RixHQUFHTSxHQUFHMWEsS0FBS2ljLFNBQVMsMEJBQTBCcmMsR0FBR00sRUFBRU4sS0FBS3dhLEdBQUdNLEdBQUcxYSxLQUFLaWMsU0FBUyx5QkFBeUJyYyxHQUFHYSxFQUFFYixLQUFLd2EsR0FBR00sR0FBRzFhLEtBQUtpYyxTQUFTLHdCQUF3QnJjLEdBQUdjLEVBQUVkLE1BQU1naUIsU0FBU2hpQixHQUFHLEdBQUcsa0JBQWtCZ1MsS0FBS2hTLEVBQUU4WSxPQUFPa0UsU0FBUyxPQUFPLE1BQU0xYyxFQUFFcWYsR0FBRzNmLEVBQUVzaUIsS0FBS2hpQixJQUFJTixFQUFFeWIsaUJBQWlCcmIsS0FBS2doQixPQUFPOWdCLElBQUl3aEIsY0FBYzloQixHQUFHLE9BQU9JLEtBQUsrZixPQUFPbmdCLEdBQUdBLEVBQUV5TixXQUFXMFEsR0FBR3RLLEtBQUssaUJBQWlCN1QsRUFBRXlOLFlBQVksR0FBR3JOLEtBQUsrZixPQUFPclMsUUFBUTlOLEdBQUd1aUIsZ0JBQWdCdmlCLEVBQUVNLEdBQUcsTUFBTU8sRUFBRWIsSUFBSXVmLEdBQUcsT0FBT3ZHLEdBQUc1WSxLQUFLK2YsT0FBTzdmLEVBQUVPLEVBQUVULEtBQUt1Z0IsUUFBUXZCLE1BQU1vRCxtQkFBbUJ4aUIsRUFBRU0sR0FBRyxNQUFNTyxFQUFFVCxLQUFLMGhCLGNBQWM5aEIsR0FBR2MsRUFBRVYsS0FBSzBoQixjQUFjM0QsR0FBR0MsUUFBUTRCLEdBQUc1ZixLQUFLaWMsV0FBVyxPQUFPN0IsR0FBR1EsUUFBUTVhLEtBQUtpYyxTQUFTLG9CQUFvQixDQUFDakMsY0FBY3BhLEVBQUUwUyxVQUFVcFMsRUFBRTBiLEtBQUtsYixFQUFFK2dCLEdBQUdoaEIsSUFBSTRoQiwyQkFBMkJ6aUIsR0FBRyxHQUFHSSxLQUFLeWdCLG1CQUFtQixDQUFDLE1BQU12Z0IsRUFBRTZkLEdBQUdDLFFBQVEsVUFBVWhlLEtBQUt5Z0Isb0JBQW9CdmdCLEVBQUVnWCxVQUFVMkUsT0FBTzhELElBQUl6ZixFQUFFb0wsZ0JBQWdCLGdCQUFnQixNQUFNN0ssRUFBRXNkLEdBQUd0SyxLQUFLLG1CQUFtQnpULEtBQUt5Z0Isb0JBQW9CLElBQUksSUFBSXZnQixFQUFFLEVBQUVBLEVBQUVPLEVBQUUwUyxPQUFPalQsSUFBSSxHQUFHc1ksT0FBTzhKLFNBQVM3aEIsRUFBRVAsR0FBR3lWLGFBQWEsb0JBQW9CLE1BQU0zVixLQUFLMGhCLGNBQWM5aEIsR0FBRyxDQUFDYSxFQUFFUCxHQUFHZ1gsVUFBVTFDLElBQUltTCxJQUFJbGYsRUFBRVAsR0FBR3FMLGFBQWEsZUFBZSxRQUFRLFFBQVE4VixrQkFBa0IsTUFBTXpoQixFQUFFSSxLQUFLaWdCLGdCQUFnQmxDLEdBQUdDLFFBQVE0QixHQUFHNWYsS0FBS2ljLFVBQVUsSUFBSXJjLEVBQUUsT0FBTyxNQUFNTSxFQUFFc1ksT0FBTzhKLFNBQVMxaUIsRUFBRStWLGFBQWEsb0JBQW9CLElBQUl6VixHQUFHRixLQUFLdWdCLFFBQVFnQyxnQkFBZ0J2aUIsS0FBS3VnQixRQUFRZ0MsaUJBQWlCdmlCLEtBQUt1Z0IsUUFBUTNCLFNBQVM1ZSxLQUFLdWdCLFFBQVEzQixTQUFTMWUsR0FBR0YsS0FBS3VnQixRQUFRM0IsU0FBUzVlLEtBQUt1Z0IsUUFBUWdDLGlCQUFpQnZpQixLQUFLdWdCLFFBQVEzQixTQUFTb0MsT0FBT3BoQixFQUFFTSxHQUFHLE1BQU1PLEVBQUVULEtBQUt3aUIsa0JBQWtCNWlCLEdBQUdjLEVBQUVxZCxHQUFHQyxRQUFRNEIsR0FBRzVmLEtBQUtpYyxVQUFVdGIsRUFBRVgsS0FBSzBoQixjQUFjaGhCLEdBQUdFLEVBQUVWLEdBQUdGLEtBQUttaUIsZ0JBQWdCMWhCLEVBQUVDLEdBQUdrSCxFQUFFNUgsS0FBSzBoQixjQUFjOWdCLEdBQUdrRixFQUFFMlUsUUFBUXphLEtBQUtnZ0IsV0FBV2hhLEVBQUV2RixJQUFJMGUsR0FBR2hXLEVBQUVuRCxFQUFFLHNCQUFzQixvQkFBb0JvQixFQUFFcEIsRUFBRSxxQkFBcUIscUJBQXFCbkYsRUFBRWIsS0FBS3lpQixrQkFBa0JoaUIsR0FBRyxHQUFHRyxHQUFHQSxFQUFFc1csVUFBVS9KLFNBQVN3UyxJQUFJLFlBQVkzZixLQUFLbWdCLFlBQVcsR0FBSSxHQUFHbmdCLEtBQUttZ0IsV0FBVyxPQUFPLEdBQUduZ0IsS0FBS29pQixtQkFBbUJ4aEIsRUFBRUMsR0FBR3lhLGlCQUFpQixPQUFPLElBQUk1YSxJQUFJRSxFQUFFLE9BQU9aLEtBQUttZ0IsWUFBVyxFQUFHcmEsR0FBRzlGLEtBQUsrZSxRQUFRL2UsS0FBS3FpQiwyQkFBMkJ6aEIsR0FBR1osS0FBS2lnQixlQUFlcmYsRUFBRSxNQUFNNEksRUFBRSxLQUFLNFEsR0FBR1EsUUFBUTVhLEtBQUtpYyxTQUFTeUQsR0FBRyxDQUFDMUYsY0FBY3BaLEVBQUUwUixVQUFVelIsRUFBRSthLEtBQUtqYixFQUFFOGdCLEdBQUc3WixLQUFLLEdBQUc1SCxLQUFLaWMsU0FBUy9FLFVBQVUvSixTQUFTLFNBQVMsQ0FBQ3ZNLEVBQUVzVyxVQUFVMUMsSUFBSXBOLEdBQUdvUSxHQUFHNVcsR0FBR0YsRUFBRXdXLFVBQVUxQyxJQUFJckwsR0FBR3ZJLEVBQUVzVyxVQUFVMUMsSUFBSXJMLEdBQUcsTUFBTXZKLEVBQUUsS0FBS2dCLEVBQUVzVyxVQUFVMkUsT0FBTzFTLEVBQUUvQixHQUFHeEcsRUFBRXNXLFVBQVUxQyxJQUFJbUwsSUFBSWpmLEVBQUV3VyxVQUFVMkUsT0FBTzhELEdBQUd2WSxFQUFFK0IsR0FBR25KLEtBQUttZ0IsWUFBVyxFQUFHeEgsV0FBV25QLEVBQUUsSUFBSXhKLEtBQUtzYyxlQUFlMWMsRUFBRWMsR0FBRSxRQUFTQSxFQUFFd1csVUFBVTJFLE9BQU84RCxJQUFJL2UsRUFBRXNXLFVBQVUxQyxJQUFJbUwsSUFBSTNmLEtBQUttZ0IsWUFBVyxFQUFHM1csSUFBSTFELEdBQUc5RixLQUFLbWhCLFFBQVFxQixrQkFBa0I1aUIsR0FBRyxNQUFNLENBQUMwZixHQUFHRCxJQUFJekosU0FBU2hXLEdBQUdnWSxLQUFLaFksSUFBSXlmLEdBQUdELEdBQUdELEdBQUd2ZixJQUFJeWYsR0FBR0YsR0FBR0MsR0FBR3hmLEVBQUU2aUIsa0JBQWtCN2lCLEdBQUcsTUFBTSxDQUFDdWYsR0FBR0MsSUFBSXhKLFNBQVNoVyxHQUFHZ1ksS0FBS2hZLElBQUl3ZixHQUFHQyxHQUFHQyxHQUFHMWYsSUFBSXdmLEdBQUdFLEdBQUdELEdBQUd6ZixFQUFFMmMseUJBQXlCM2MsRUFBRU0sR0FBRyxNQUFNTyxFQUFFb2YsR0FBRy9DLG9CQUFvQmxkLEVBQUVNLEdBQUcsSUFBSXFnQixRQUFRN2YsR0FBR0QsRUFBRSxpQkFBaUJQLElBQUlRLEVBQUUsSUFBSUEsS0FBS1IsSUFBSSxNQUFNUyxFQUFFLGlCQUFpQlQsRUFBRUEsRUFBRVEsRUFBRW9lLE1BQU0sR0FBRyxpQkFBaUI1ZSxFQUFFTyxFQUFFZ2hCLEdBQUd2aEIsUUFBUSxHQUFHLGlCQUFpQlMsRUFBRSxDQUFDLFFBQUcsSUFBU0YsRUFBRUUsR0FBRyxNQUFNLElBQUlnVyxVQUFVLG9CQUFvQmhXLE1BQU1GLEVBQUVFLFVBQVVELEVBQUVrZSxVQUFVbGUsRUFBRWdpQixPQUFPamlCLEVBQUVzZSxRQUFRdGUsRUFBRTBnQixTQUFTNUUsdUJBQXVCM2MsR0FBRyxPQUFPSSxLQUFLa2QsTUFBSyxXQUFZMkMsR0FBRzhDLGtCQUFrQjNpQixLQUFLSixNQUFNMmMsMkJBQTJCM2MsR0FBRyxNQUFNTSxFQUFFOFYsR0FBR2hXLE1BQU0sSUFBSUUsSUFBSUEsRUFBRWdYLFVBQVUvSixTQUFTLFlBQVksT0FBTyxNQUFNMU0sRUFBRSxJQUFJK2MsR0FBR0csa0JBQWtCemQsTUFBTXNkLEdBQUdHLGtCQUFrQjNkLE9BQU9VLEVBQUVWLEtBQUsyVixhQUFhLG9CQUFvQmpWLElBQUlELEVBQUVtZSxVQUFTLEdBQUlpQixHQUFHOEMsa0JBQWtCemlCLEVBQUVPLEdBQUdDLEdBQUdtZixHQUFHckQsWUFBWXRjLEdBQUd1aEIsR0FBRy9nQixHQUFHZCxFQUFFeWIsa0JBQWtCakIsR0FBR00sR0FBRzlNLFNBQVMsNkJBQTZCLHNDQUFzQ2lTLEdBQUcrQyxxQkFBcUJ4SSxHQUFHTSxHQUFHMVEsT0FBTyw2QkFBNEIsS0FBTSxNQUFNcEssRUFBRW1lLEdBQUd0SyxLQUFLLDZCQUE2QixJQUFJLElBQUl2VCxFQUFFLEVBQUVPLEVBQUViLEVBQUV1VCxPQUFPalQsRUFBRU8sRUFBRVAsSUFBSTJmLEdBQUc4QyxrQkFBa0IvaUIsRUFBRU0sR0FBRzJmLEdBQUdyRCxZQUFZNWMsRUFBRU0sUUFBUTRYLEdBQUcrSCxJQUFJLE1BQU1nRCxHQUFHLFdBQVdDLEdBQUcsQ0FBQ3pGLFFBQU8sRUFBRzBGLE9BQU8sTUFBTUMsR0FBRyxDQUFDM0YsT0FBTyxVQUFVMEYsT0FBTyxrQkFBa0JFLEdBQUcsT0FBT0MsR0FBRyxXQUFXQyxHQUFHLGFBQWFDLEdBQUcsWUFBWUMsR0FBRyw2QkFBNkJDLEdBQUcsOEJBQThCLE1BQU1DLFdBQVd4SCxHQUFHQyxZQUFZcGMsRUFBRU0sR0FBRzRmLE1BQU1sZ0IsR0FBR0ksS0FBS3dqQixrQkFBaUIsRUFBR3hqQixLQUFLdWdCLFFBQVF2Z0IsS0FBS3dnQixXQUFXdGdCLEdBQUdGLEtBQUt5akIsY0FBYyxHQUFHLE1BQU1oakIsRUFBRXNkLEdBQUd0SyxLQUFLNlAsSUFBSSxJQUFJLElBQUkxakIsRUFBRSxFQUFFTSxFQUFFTyxFQUFFMFMsT0FBT3ZULEVBQUVNLEVBQUVOLElBQUksQ0FBQyxNQUFNTSxFQUFFTyxFQUFFYixHQUFHYyxFQUFFcVYsR0FBRzdWLEdBQUdTLEVBQUVvZCxHQUFHdEssS0FBSy9TLEdBQUcrTixRQUFRN08sR0FBR0EsSUFBSUksS0FBS2ljLFdBQVcsT0FBT3ZiLEdBQUdDLEVBQUV3UyxTQUFTblQsS0FBSzBqQixVQUFVaGpCLEVBQUVWLEtBQUt5akIsY0FBY25RLEtBQUtwVCxJQUFJRixLQUFLMmpCLHNCQUFzQjNqQixLQUFLdWdCLFFBQVF3QyxRQUFRL2lCLEtBQUs0akIsMEJBQTBCNWpCLEtBQUt5akIsY0FBY3pqQixLQUFLNmpCLFlBQVk3akIsS0FBS3VnQixRQUFRbEQsUUFBUXJkLEtBQUtxZCxTQUFvQjBELHFCQUFVLE9BQU8rQixHQUFjL0ssa0JBQU8sT0FBTzhLLEdBQUd4RixTQUFTcmQsS0FBSzZqQixXQUFXN2pCLEtBQUt5SCxPQUFPekgsS0FBSzhqQixPQUFPQSxPQUFPLEdBQUc5akIsS0FBS3dqQixrQkFBa0J4akIsS0FBSzZqQixXQUFXLE9BQU8sSUFBSWprQixFQUFFTSxFQUFFLEdBQUcsR0FBR0YsS0FBS3VnQixRQUFRd0MsT0FBTyxDQUFDLE1BQU1uakIsRUFBRW1lLEdBQUd0SyxLQUFLNFAsR0FBR3JqQixLQUFLdWdCLFFBQVF3QyxRQUFRN2lCLEVBQUU2ZCxHQUFHdEssS0FBSyx1Q0FBdUN6VCxLQUFLdWdCLFFBQVF3QyxRQUFRdFUsUUFBUXZPLElBQUlOLEVBQUVnVyxTQUFTMVYsS0FBSyxNQUFNTyxFQUFFc2QsR0FBR0MsUUFBUWhlLEtBQUswakIsV0FBVyxHQUFHeGpCLEVBQUVpVCxPQUFPLENBQUMsTUFBTXpTLEVBQUVSLEVBQUV1VCxNQUFNN1QsR0FBR2EsSUFBSWIsSUFBSSxHQUFHQSxFQUFFYyxFQUFFNmlCLEdBQUcvRyxZQUFZOWIsR0FBRyxLQUFLZCxHQUFHQSxFQUFFNGpCLGlCQUFpQixPQUFPLEdBQUdwSixHQUFHUSxRQUFRNWEsS0FBS2ljLFNBQVMsb0JBQW9CWCxpQkFBaUIsT0FBT3BiLEVBQUUrSyxTQUFTL0ssSUFBSU8sSUFBSVAsR0FBR3FqQixHQUFHekcsb0JBQW9CNWMsRUFBRSxDQUFDbWQsUUFBTyxJQUFLNVYsT0FBTzdILEdBQUc0YixHQUFHaEksSUFBSXRULEVBQUUsY0FBYyxTQUFTLE1BQU1RLEVBQUVWLEtBQUsrakIsZ0JBQWdCL2pCLEtBQUtpYyxTQUFTL0UsVUFBVTJFLE9BQU9xSCxJQUFJbGpCLEtBQUtpYyxTQUFTL0UsVUFBVTFDLElBQUkyTyxJQUFJbmpCLEtBQUtpYyxTQUFTNVEsTUFBTTNLLEdBQUcsRUFBRVYsS0FBSzRqQiwwQkFBMEI1akIsS0FBS3lqQixlQUFjLEdBQUl6akIsS0FBS3dqQixrQkFBaUIsRUFBRyxNQUFNN2lCLEVBQUUsU0FBU0QsRUFBRSxHQUFHTixjQUFjTSxFQUFFZ1QsTUFBTSxLQUFLMVQsS0FBS3NjLGdCQUFlLEtBQU10YyxLQUFLd2pCLGtCQUFpQixFQUFHeGpCLEtBQUtpYyxTQUFTL0UsVUFBVTJFLE9BQU9zSCxJQUFJbmpCLEtBQUtpYyxTQUFTL0UsVUFBVTFDLElBQUkwTyxHQUFHRCxJQUFJampCLEtBQUtpYyxTQUFTNVEsTUFBTTNLLEdBQUcsR0FBRzBaLEdBQUdRLFFBQVE1YSxLQUFLaWMsU0FBUyx1QkFBdUJqYyxLQUFLaWMsVUFBUyxHQUFJamMsS0FBS2ljLFNBQVM1USxNQUFNM0ssR0FBRyxHQUFHVixLQUFLaWMsU0FBU3RiLE9BQU84RyxPQUFPLEdBQUd6SCxLQUFLd2pCLG1CQUFtQnhqQixLQUFLNmpCLFdBQVcsT0FBTyxHQUFHekosR0FBR1EsUUFBUTVhLEtBQUtpYyxTQUFTLG9CQUFvQlgsaUJBQWlCLE9BQU8sTUFBTTFiLEVBQUVJLEtBQUsrakIsZ0JBQWdCL2pCLEtBQUtpYyxTQUFTNVEsTUFBTXpMLEdBQUcsR0FBR0ksS0FBS2ljLFNBQVN6UCx3QkFBd0I1TSxPQUFPNFgsR0FBR3hYLEtBQUtpYyxVQUFVamMsS0FBS2ljLFNBQVMvRSxVQUFVMUMsSUFBSTJPLElBQUluakIsS0FBS2ljLFNBQVMvRSxVQUFVMkUsT0FBT3FILEdBQUdELElBQUksTUFBTS9pQixFQUFFRixLQUFLeWpCLGNBQWN0USxPQUFPLElBQUksSUFBSXZULEVBQUUsRUFBRUEsRUFBRU0sRUFBRU4sSUFBSSxDQUFDLE1BQU1NLEVBQUVGLEtBQUt5akIsY0FBYzdqQixHQUFHYSxFQUFFdVYsR0FBRzlWLEdBQUdPLElBQUlULEtBQUs2akIsU0FBU3BqQixJQUFJVCxLQUFLNGpCLDBCQUEwQixDQUFDMWpCLElBQUcsR0FBSUYsS0FBS3dqQixrQkFBaUIsRUFBR3hqQixLQUFLaWMsU0FBUzVRLE1BQU16TCxHQUFHLEdBQUdJLEtBQUtzYyxnQkFBZSxLQUFNdGMsS0FBS3dqQixrQkFBaUIsRUFBR3hqQixLQUFLaWMsU0FBUy9FLFVBQVUyRSxPQUFPc0gsSUFBSW5qQixLQUFLaWMsU0FBUy9FLFVBQVUxQyxJQUFJME8sSUFBSTlJLEdBQUdRLFFBQVE1YSxLQUFLaWMsU0FBUyx3QkFBd0JqYyxLQUFLaWMsVUFBUyxHQUFJNEgsU0FBU2prQixFQUFFSSxLQUFLaWMsVUFBVSxPQUFPcmMsRUFBRXNYLFVBQVUvSixTQUFTOFYsSUFBSXpDLFdBQVc1Z0IsR0FBRyxPQUFPQSxFQUFFLElBQUlrakIsTUFBTXRGLEdBQUdHLGtCQUFrQjNkLEtBQUtpYyxhQUFhcmMsSUFBSXlkLE9BQU81QyxRQUFRN2EsRUFBRXlkLFFBQVF6ZCxFQUFFbWpCLE9BQU94TSxHQUFHM1csRUFBRW1qQixRQUFRdk0sR0FBR3FNLEdBQUdqakIsRUFBRW9qQixJQUFJcGpCLEVBQUVta0IsZ0JBQWdCLE9BQU8vakIsS0FBS2ljLFNBQVMvRSxVQUFVL0osU0FBUyx1QkFBdUIsUUFBUSxTQUFTd1csc0JBQXNCLElBQUkzakIsS0FBS3VnQixRQUFRd0MsT0FBTyxPQUFPLE1BQU1uakIsRUFBRW1lLEdBQUd0SyxLQUFLNFAsR0FBR3JqQixLQUFLdWdCLFFBQVF3QyxRQUFRaEYsR0FBR3RLLEtBQUs2UCxHQUFHdGpCLEtBQUt1Z0IsUUFBUXdDLFFBQVF0VSxRQUFRdk8sSUFBSU4sRUFBRWdXLFNBQVMxVixLQUFLK0ssU0FBU3JMLElBQUksTUFBTU0sRUFBRThWLEdBQUdwVyxHQUFHTSxHQUFHRixLQUFLNGpCLDBCQUEwQixDQUFDaGtCLEdBQUdJLEtBQUs2akIsU0FBUzNqQixPQUFPMGpCLDBCQUEwQmhrQixFQUFFTSxHQUFHTixFQUFFdVQsUUFBUXZULEVBQUVxTCxTQUFTckwsSUFBSU0sRUFBRU4sRUFBRXNYLFVBQVUyRSxPQUFPdUgsSUFBSXhqQixFQUFFc1gsVUFBVTFDLElBQUk0TyxJQUFJeGpCLEVBQUUyTCxhQUFhLGdCQUFnQnJMLE1BQU1xYyx1QkFBdUIzYyxHQUFHLE9BQU9JLEtBQUtrZCxNQUFLLFdBQVksTUFBTWhkLEVBQUUsR0FBRyxpQkFBaUJOLEdBQUcsWUFBWWdTLEtBQUtoUyxLQUFLTSxFQUFFbWQsUUFBTyxHQUFJLE1BQU01YyxFQUFFOGlCLEdBQUd6RyxvQkFBb0I5YyxLQUFLRSxHQUFHLEdBQUcsaUJBQWlCTixFQUFFLENBQUMsUUFBRyxJQUFTYSxFQUFFYixHQUFHLE1BQU0sSUFBSStXLFVBQVUsb0JBQW9CL1csTUFBTWEsRUFBRWIsVUFBVXdhLEdBQUdNLEdBQUc5TSxTQUFTLDZCQUE2QjBWLElBQUcsU0FBVTFqQixJQUFJLE1BQU1BLEVBQUU4WSxPQUFPa0UsU0FBU2hkLEVBQUVxYSxnQkFBZ0IsTUFBTXJhLEVBQUVxYSxlQUFlMkMsVUFBVWhkLEVBQUV5YixpQkFBaUIsTUFBTW5iLEVBQUU2VixHQUFHL1YsTUFBTStkLEdBQUd0SyxLQUFLdlQsR0FBRytLLFNBQVNyTCxJQUFJMmpCLEdBQUd6RyxvQkFBb0JsZCxFQUFFLENBQUN5ZCxRQUFPLElBQUtBLGVBQWV2RixHQUFHeUwsSUFBSSxNQUFNUyxHQUFHLFdBQVdDLEdBQUcsU0FBU0MsR0FBRyxRQUFRQyxHQUFHLFVBQVVDLEdBQUcsWUFBWUMsR0FBRyxJQUFJM04sT0FBTyw0QkFBNEI0TixHQUFHLDZCQUE2QkMsR0FBRywrQkFBK0JDLEdBQUcsT0FBT0MsR0FBRyw4QkFBOEJDLEdBQUcsaUJBQWlCaEssR0FBRzlDLEtBQUssVUFBVSxZQUFZK00sR0FBRy9NLEtBQUssWUFBWSxVQUFVZ04sR0FBR2hOLEtBQUssYUFBYSxlQUFlaU4sR0FBR2pOLEtBQUssZUFBZSxhQUFha04sR0FBR2xOLEtBQUssYUFBYSxjQUFjbU4sR0FBR25OLEtBQUssY0FBYyxhQUFhb04sR0FBRyxDQUFDL2MsT0FBTyxDQUFDLEVBQUUsR0FBR3VLLFNBQVMsa0JBQWtCekosVUFBVSxTQUFTa2MsUUFBUSxVQUFVQyxhQUFhLEtBQUtDLFdBQVUsR0FBSUMsR0FBRyxDQUFDbmQsT0FBTywwQkFBMEJ1SyxTQUFTLG1CQUFtQnpKLFVBQVUsMEJBQTBCa2MsUUFBUSxTQUFTQyxhQUFhLHlCQUF5QkMsVUFBVSxvQkFBb0IsTUFBTUUsV0FBV3RKLEdBQUdDLFlBQVlwYyxFQUFFTSxHQUFHNGYsTUFBTWxnQixHQUFHSSxLQUFLc2xCLFFBQVEsS0FBS3RsQixLQUFLdWdCLFFBQVF2Z0IsS0FBS3dnQixXQUFXdGdCLEdBQUdGLEtBQUt1bEIsTUFBTXZsQixLQUFLd2xCLGtCQUFrQnhsQixLQUFLeWxCLFVBQVV6bEIsS0FBSzBsQixnQkFBMkIzRSxxQkFBVSxPQUFPaUUsR0FBY1cseUJBQWMsT0FBT1AsR0FBY3JOLGtCQUFPLE9BQU9pTSxHQUFHM0csU0FBUyxPQUFPcmQsS0FBSzZqQixXQUFXN2pCLEtBQUt5SCxPQUFPekgsS0FBSzhqQixPQUFPQSxPQUFPLEdBQUcvTSxHQUFHL1csS0FBS2ljLFdBQVdqYyxLQUFLNmpCLFNBQVM3akIsS0FBS3VsQixPQUFPLE9BQU8sTUFBTTNsQixFQUFFLENBQUNvYSxjQUFjaGEsS0FBS2ljLFVBQVUsR0FBRzdCLEdBQUdRLFFBQVE1YSxLQUFLaWMsU0FBUyxtQkFBbUJyYyxHQUFHMGIsaUJBQWlCLE9BQU8sTUFBTXBiLEVBQUVtbEIsR0FBR08scUJBQXFCNWxCLEtBQUtpYyxVQUFVamMsS0FBS3lsQixVQUFVakksR0FBR0MsaUJBQWlCemQsS0FBS3VsQixNQUFNLFNBQVMsUUFBUXZsQixLQUFLNmxCLGNBQWMzbEIsR0FBRyxpQkFBaUIwTixTQUFTQyxrQkFBa0IzTixFQUFFMmMsUUFBUSxnQkFBZ0IsR0FBR2pULFVBQVVnRSxTQUFTa0UsS0FBS21NLFVBQVVoVCxTQUFTckwsR0FBR3dhLEdBQUdNLEdBQUc5YSxFQUFFLFlBQVkyWCxNQUFNdlgsS0FBS2ljLFNBQVM2SixRQUFROWxCLEtBQUtpYyxTQUFTMVEsYUFBYSxpQkFBZ0IsR0FBSXZMLEtBQUt1bEIsTUFBTXJPLFVBQVUxQyxJQUFJZ1EsSUFBSXhrQixLQUFLaWMsU0FBUy9FLFVBQVUxQyxJQUFJZ1EsSUFBSXBLLEdBQUdRLFFBQVE1YSxLQUFLaWMsU0FBUyxvQkFBb0JyYyxHQUFHNkgsT0FBTyxHQUFHc1AsR0FBRy9XLEtBQUtpYyxZQUFZamMsS0FBSzZqQixTQUFTN2pCLEtBQUt1bEIsT0FBTyxPQUFPLE1BQU0zbEIsRUFBRSxDQUFDb2EsY0FBY2hhLEtBQUtpYyxVQUFVamMsS0FBSytsQixjQUFjbm1CLEdBQUd1YyxVQUFVbmMsS0FBS3NsQixTQUFTdGxCLEtBQUtzbEIsUUFBUS9QLFVBQVV1SyxNQUFNM0QsVUFBVXZMLFNBQVM1USxLQUFLeWxCLFVBQVV6bEIsS0FBSzBsQixnQkFBZ0IxbEIsS0FBS3NsQixTQUFTdGxCLEtBQUtzbEIsUUFBUTFVLFNBQVNtVixjQUFjbm1CLEdBQUd3YSxHQUFHUSxRQUFRNWEsS0FBS2ljLFNBQVMsbUJBQW1CcmMsR0FBRzBiLG1CQUFtQixpQkFBaUIxTixTQUFTQyxpQkFBaUIsR0FBR2pFLFVBQVVnRSxTQUFTa0UsS0FBS21NLFVBQVVoVCxTQUFTckwsR0FBR3dhLEdBQUdDLElBQUl6YSxFQUFFLFlBQVkyWCxNQUFNdlgsS0FBS3NsQixTQUFTdGxCLEtBQUtzbEIsUUFBUS9QLFVBQVV2VixLQUFLdWxCLE1BQU1yTyxVQUFVMkUsT0FBTzJJLElBQUl4a0IsS0FBS2ljLFNBQVMvRSxVQUFVMkUsT0FBTzJJLElBQUl4a0IsS0FBS2ljLFNBQVMxUSxhQUFhLGdCQUFnQixTQUFTaVMsR0FBR0Usb0JBQW9CMWQsS0FBS3VsQixNQUFNLFVBQVVuTCxHQUFHUSxRQUFRNWEsS0FBS2ljLFNBQVMscUJBQXFCcmMsSUFBSTRnQixXQUFXNWdCLEdBQUcsR0FBR0EsRUFBRSxJQUFJSSxLQUFLZ2MsWUFBWStFLFdBQVd2RCxHQUFHRyxrQkFBa0IzZCxLQUFLaWMsYUFBYXJjLEdBQUc0VyxHQUFHd04sR0FBR3BrQixFQUFFSSxLQUFLZ2MsWUFBWTJKLGFBQWEsaUJBQWlCL2xCLEVBQUVtSixZQUFZcU4sR0FBR3hXLEVBQUVtSixZQUFZLG1CQUFtQm5KLEVBQUVtSixVQUFVeUQsc0JBQXNCLE1BQU0sSUFBSW1LLFVBQVUsR0FBR3FOLEdBQUc1akIsK0dBQStHLE9BQU9SLEVBQUVpbUIsY0FBYzNsQixHQUFHLFFBQUcsSUFBU04sRUFBRSxNQUFNLElBQUkrVyxVQUFVLGdFQUFnRSxJQUFJbFcsRUFBRVQsS0FBS2ljLFNBQVMsV0FBV2pjLEtBQUt1Z0IsUUFBUXhYLFVBQVV0SSxFQUFFUCxFQUFFa1csR0FBR3BXLEtBQUt1Z0IsUUFBUXhYLFdBQVd0SSxFQUFFOFYsR0FBR3ZXLEtBQUt1Z0IsUUFBUXhYLFdBQVcsaUJBQWlCL0ksS0FBS3VnQixRQUFReFgsWUFBWXRJLEVBQUVULEtBQUt1Z0IsUUFBUXhYLFdBQVcsTUFBTXJJLEVBQUVWLEtBQUtnbUIsbUJBQW1CcmxCLEVBQUVELEVBQUVpVSxVQUFVbEIsTUFBTTdULEdBQUcsZ0JBQWdCQSxFQUFFOEssT0FBTSxJQUFLOUssRUFBRStLLFVBQVUzSyxLQUFLc2xCLFFBQVExZSxHQUFHbkcsRUFBRVQsS0FBS3VsQixNQUFNN2tCLEdBQUdDLEdBQUc2YyxHQUFHQyxpQkFBaUJ6ZCxLQUFLdWxCLE1BQU0sU0FBUyxVQUFVMUIsU0FBU2prQixFQUFFSSxLQUFLaWMsVUFBVSxPQUFPcmMsRUFBRXNYLFVBQVUvSixTQUFTcVgsSUFBSWdCLGtCQUFrQixPQUFPekgsR0FBR08sS0FBS3RlLEtBQUtpYyxTQUFTeUksSUFBSSxHQUFHdUIsZ0JBQWdCLE1BQU1ybUIsRUFBRUksS0FBS2ljLFNBQVM1TyxXQUFXLEdBQUd6TixFQUFFc1gsVUFBVS9KLFNBQVMsV0FBVyxPQUFPMlgsR0FBRyxHQUFHbGxCLEVBQUVzWCxVQUFVL0osU0FBUyxhQUFhLE9BQU80WCxHQUFHLE1BQU03a0IsRUFBRSxRQUFRc04saUJBQWlCeE4sS0FBS3VsQixPQUFPek8saUJBQWlCLGlCQUFpQmhCLE9BQU8sT0FBT2xXLEVBQUVzWCxVQUFVL0osU0FBUyxVQUFVak4sRUFBRXlrQixHQUFHakssR0FBR3hhLEVBQUUya0IsR0FBR0QsR0FBR2MsZ0JBQWdCLE9BQU8sT0FBTzFsQixLQUFLaWMsU0FBU1ksUUFBUSxXQUFXcUosYUFBYSxNQUFNamUsT0FBT3JJLEdBQUdJLEtBQUt1Z0IsUUFBUSxNQUFNLGlCQUFpQjNnQixFQUFFQSxFQUFFbU0sTUFBTSxLQUFLbUosS0FBS3RWLEdBQUc0WSxPQUFPOEosU0FBUzFpQixFQUFFLE1BQU0sbUJBQW1CQSxFQUFFTSxHQUFHTixFQUFFTSxFQUFFRixLQUFLaWMsVUFBVXJjLEVBQUVvbUIsbUJBQW1CLE1BQU1wbUIsRUFBRSxDQUFDbVAsVUFBVS9PLEtBQUtpbUIsZ0JBQWdCdFIsVUFBVSxDQUFDLENBQUNqSyxLQUFLLGtCQUFrQmdCLFFBQVEsQ0FBQzhHLFNBQVN4UyxLQUFLdWdCLFFBQVEvTixXQUFXLENBQUM5SCxLQUFLLFNBQVNnQixRQUFRLENBQUN6RCxPQUFPakksS0FBS2ttQixpQkFBaUIsTUFBTSxXQUFXbG1CLEtBQUt1Z0IsUUFBUTBFLFVBQVVybEIsRUFBRStVLFVBQVUsQ0FBQyxDQUFDakssS0FBSyxjQUFjQyxTQUFRLEtBQU0sSUFBSS9LLEtBQUssbUJBQW1CSSxLQUFLdWdCLFFBQVEyRSxhQUFhbGxCLEtBQUt1Z0IsUUFBUTJFLGFBQWF0bEIsR0FBR0ksS0FBS3VnQixRQUFRMkUsY0FBY2lCLGlCQUFpQmpFLElBQUl0aUIsRUFBRThZLE9BQU94WSxJQUFJLE1BQU1PLEVBQUVzZCxHQUFHdEssS0FBSyw4REFBOER6VCxLQUFLdWxCLE9BQU85VyxPQUFPbUksSUFBSW5XLEVBQUUwUyxRQUFReUYsR0FBR25ZLEVBQUVQLEVBQUVOLElBQUl3a0IsSUFBSTNqQixFQUFFbVYsU0FBUzFWLElBQUk0bEIsUUFBUXZKLHVCQUF1QjNjLEdBQUcsT0FBT0ksS0FBS2tkLE1BQUssV0FBWSxNQUFNaGQsRUFBRW1sQixHQUFHdkksb0JBQW9COWMsS0FBS0osR0FBRyxHQUFHLGlCQUFpQkEsRUFBRSxDQUFDLFFBQUcsSUFBU00sRUFBRU4sR0FBRyxNQUFNLElBQUkrVyxVQUFVLG9CQUFvQi9XLE1BQU1NLEVBQUVOLFNBQVMyYyxrQkFBa0IzYyxHQUFHLEdBQUdBLElBQUksSUFBSUEsRUFBRXdtQixRQUFRLFVBQVV4bUIsRUFBRTBhLE1BQU0sUUFBUTFhLEVBQUVzaUIsS0FBSyxPQUFPLE1BQU1oaUIsRUFBRTZkLEdBQUd0SyxLQUFLZ1IsSUFBSSxJQUFJLElBQUloa0IsRUFBRSxFQUFFQyxFQUFFUixFQUFFaVQsT0FBTzFTLEVBQUVDLEVBQUVELElBQUksQ0FBQyxNQUFNQyxFQUFFMmtCLEdBQUc3SSxZQUFZdGMsRUFBRU8sSUFBSSxJQUFJQyxJQUFHLElBQUtBLEVBQUU2ZixRQUFRNEUsVUFBVSxTQUFTLElBQUl6a0IsRUFBRW1qQixXQUFXLFNBQVMsTUFBTWxqQixFQUFFLENBQUNxWixjQUFjdFosRUFBRXViLFVBQVUsR0FBR3JjLEVBQUUsQ0FBQyxNQUFNTSxFQUFFTixFQUFFeW1CLGVBQWU1bEIsRUFBRVAsRUFBRTBWLFNBQVNsVixFQUFFNmtCLE9BQU8sR0FBR3JsQixFQUFFMFYsU0FBU2xWLEVBQUV1YixXQUFXLFdBQVd2YixFQUFFNmYsUUFBUTRFLFlBQVkxa0IsR0FBRyxZQUFZQyxFQUFFNmYsUUFBUTRFLFdBQVcxa0IsRUFBRSxTQUFTLEdBQUdDLEVBQUU2a0IsTUFBTXBZLFNBQVN2TixFQUFFOFksVUFBVSxVQUFVOVksRUFBRTBhLE1BQU0sUUFBUTFhLEVBQUVzaUIsS0FBSyxxQ0FBcUN0USxLQUFLaFMsRUFBRThZLE9BQU9rRSxVQUFVLFNBQVMsVUFBVWhkLEVBQUUwYSxPQUFPM1osRUFBRTJsQixXQUFXMW1CLEdBQUdjLEVBQUVxbEIsY0FBY3BsQixJQUFJNGIsNEJBQTRCM2MsR0FBRyxPQUFPb1csR0FBR3BXLElBQUlBLEVBQUV5TixXQUFXa1AsNkJBQTZCM2MsR0FBRyxHQUFHLGtCQUFrQmdTLEtBQUtoUyxFQUFFOFksT0FBT2tFLFNBQVNoZCxFQUFFc2lCLE1BQU1nQyxJQUFJdGtCLEVBQUVzaUIsTUFBTStCLEtBQUtya0IsRUFBRXNpQixNQUFNa0MsSUFBSXhrQixFQUFFc2lCLE1BQU1pQyxJQUFJdmtCLEVBQUU4WSxPQUFPbUUsUUFBUTZILE1BQU1MLEdBQUd6UyxLQUFLaFMsRUFBRXNpQixLQUFLLE9BQU8sTUFBTWhpQixFQUFFRixLQUFLa1gsVUFBVS9KLFNBQVNxWCxJQUFJLElBQUl0a0IsR0FBR04sRUFBRXNpQixNQUFNK0IsR0FBRyxPQUFPLEdBQUdya0IsRUFBRXliLGlCQUFpQnpiLEVBQUUybUIsa0JBQWtCeFAsR0FBRy9XLE1BQU0sT0FBTyxNQUFNUyxFQUFFVCxLQUFLa2UsUUFBUXVHLElBQUl6a0IsS0FBSytkLEdBQUdLLEtBQUtwZSxLQUFLeWtCLElBQUksR0FBRy9qQixFQUFFMmtCLEdBQUd2SSxvQkFBb0JyYyxHQUFHLEdBQUdiLEVBQUVzaUIsTUFBTStCLEdBQUcsT0FBT3JrQixFQUFFc2lCLE1BQU1pQyxJQUFJdmtCLEVBQUVzaUIsTUFBTWtDLElBQUlsa0IsR0FBR1EsRUFBRW9qQixZQUFZcGpCLEVBQUV5bEIsZ0JBQWdCdm1CLFNBQVNNLEdBQUdOLEVBQUVzaUIsTUFBTWdDLElBQUltQixHQUFHbUIsY0FBYzlsQixFQUFFK0csUUFBUTJTLEdBQUdNLEdBQUc5TSxTQUFTMlcsR0FBR0UsR0FBR1ksR0FBR29CLHVCQUF1QnJNLEdBQUdNLEdBQUc5TSxTQUFTMlcsR0FBR0csR0FBR1csR0FBR29CLHVCQUF1QnJNLEdBQUdNLEdBQUc5TSxTQUFTMFcsR0FBR2UsR0FBR21CLFlBQVlwTSxHQUFHTSxHQUFHOU0sU0FBUyw2QkFBNkJ5WCxHQUFHbUIsWUFBWXBNLEdBQUdNLEdBQUc5TSxTQUFTMFcsR0FBR0csSUFBRyxTQUFVN2tCLEdBQUdBLEVBQUV5YixpQkFBaUJnSyxHQUFHdkksb0JBQW9COWMsTUFBTXFkLFlBQVl2RixHQUFHdU4sSUFBSSxNQUFNcUIsR0FBRyxvREFBb0Q3YixHQUFHLGNBQWMsTUFBTThiLEdBQUczSyxjQUFjaGMsS0FBS2ljLFNBQVNyTyxTQUFTa0UsS0FBSzhVLFdBQVcsTUFBTWhuQixFQUFFZ08sU0FBU0MsZ0JBQWdCc0IsWUFBWSxPQUFPbEQsS0FBS2EsSUFBSTlDLE9BQU82YyxXQUFXam5CLEdBQUc2SCxPQUFPLE1BQU03SCxFQUFFSSxLQUFLNG1CLFdBQVc1bUIsS0FBSzhtQixtQkFBbUI5bUIsS0FBSyttQixzQkFBc0IvbUIsS0FBS2ljLFNBQVMsZ0JBQWdCL2IsR0FBR0EsRUFBRU4sSUFBSUksS0FBSyttQixzQkFBc0JMLEdBQUcsZ0JBQWdCeG1CLEdBQUdBLEVBQUVOLElBQUlJLEtBQUsrbUIsc0JBQXNCbGMsR0FBRyxlQUFlM0ssR0FBR0EsRUFBRU4sSUFBSWtuQixtQkFBbUI5bUIsS0FBS2duQixzQkFBc0JobkIsS0FBS2ljLFNBQVMsWUFBWWpjLEtBQUtpYyxTQUFTNVEsTUFBTW9HLFNBQVMsU0FBU3NWLHNCQUFzQm5uQixFQUFFTSxFQUFFTyxHQUFHLE1BQU1DLEVBQUVWLEtBQUs0bUIsV0FBVzVtQixLQUFLaW5CLDJCQUEyQnJuQixHQUFHQSxJQUFJLEdBQUdBLElBQUlJLEtBQUtpYyxVQUFValMsT0FBTzZjLFdBQVdqbkIsRUFBRXVQLFlBQVl6TyxFQUFFLE9BQU9WLEtBQUtnbkIsc0JBQXNCcG5CLEVBQUVNLEdBQUcsTUFBTVMsRUFBRXFKLE9BQU93RCxpQkFBaUI1TixHQUFHTSxHQUFHTixFQUFFeUwsTUFBTW5MLEdBQUcsR0FBR08sRUFBRStYLE9BQU9DLFdBQVc5WCxXQUFXZ1QsUUFBUTNULEtBQUtrbkIsd0JBQXdCbG5CLEtBQUtpYyxTQUFTLFlBQVlqYyxLQUFLa25CLHdCQUF3QmxuQixLQUFLaWMsU0FBUyxnQkFBZ0JqYyxLQUFLa25CLHdCQUF3QlIsR0FBRyxnQkFBZ0IxbUIsS0FBS2tuQix3QkFBd0JyYyxHQUFHLGVBQWVtYyxzQkFBc0JwbkIsRUFBRU0sR0FBRyxNQUFNTyxFQUFFYixFQUFFeUwsTUFBTW5MLEdBQUdPLEdBQUcrYyxHQUFHQyxpQkFBaUI3ZCxFQUFFTSxFQUFFTyxHQUFHeW1CLHdCQUF3QnRuQixFQUFFTSxHQUFHRixLQUFLaW5CLDJCQUEyQnJuQixHQUFHQSxJQUFJLE1BQU1hLEVBQUUrYyxHQUFHTSxpQkFBaUJsZSxFQUFFTSxRQUFHLElBQVNPLEVBQUViLEVBQUV5TCxNQUFNOGIsZUFBZWpuQixJQUFJc2QsR0FBR0Usb0JBQW9COWQsRUFBRU0sR0FBR04sRUFBRXlMLE1BQU1uTCxHQUFHTyxNQUFNd21CLDJCQUEyQnJuQixFQUFFTSxHQUFHa1csR0FBR3hXLEdBQUdNLEVBQUVOLEdBQUdtZSxHQUFHdEssS0FBSzdULEVBQUVJLEtBQUtpYyxVQUFVaFIsUUFBUS9LLEdBQUdrbkIsZ0JBQWdCLE9BQU9wbkIsS0FBSzRtQixXQUFXLEdBQUcsTUFBTVMsR0FBRyxDQUFDQyxVQUFVLGlCQUFpQkMsV0FBVSxFQUFHQyxZQUFXLEVBQUdDLFlBQVksT0FBT0MsY0FBYyxNQUFNQyxHQUFHLENBQUNMLFVBQVUsU0FBU0MsVUFBVSxVQUFVQyxXQUFXLFVBQVVDLFlBQVksbUJBQW1CQyxjQUFjLG1CQUFtQkUsR0FBRyxPQUFPQyxHQUFHLHdCQUF3QixNQUFNQyxHQUFHOUwsWUFBWXBjLEdBQUdJLEtBQUt1Z0IsUUFBUXZnQixLQUFLd2dCLFdBQVc1Z0IsR0FBR0ksS0FBSytuQixhQUFZLEVBQUcvbkIsS0FBS2ljLFNBQVMsS0FBSzZILEtBQUtsa0IsR0FBR0ksS0FBS3VnQixRQUFRZ0gsV0FBV3ZuQixLQUFLZ29CLFVBQVVob0IsS0FBS3VnQixRQUFRaUgsWUFBWWhRLEdBQUd4WCxLQUFLaW9CLGVBQWVqb0IsS0FBS2lvQixjQUFjL1EsVUFBVTFDLElBQUlvVCxJQUFJNW5CLEtBQUtrb0IsbUJBQWtCLEtBQU05UCxHQUFHeFksT0FBT3dZLEdBQUd4WSxHQUFHNkgsS0FBSzdILEdBQUdJLEtBQUt1Z0IsUUFBUWdILFdBQVd2bkIsS0FBS2lvQixjQUFjL1EsVUFBVTJFLE9BQU8rTCxJQUFJNW5CLEtBQUtrb0IsbUJBQWtCLEtBQU1sb0IsS0FBS21jLFVBQVUvRCxHQUFHeFksT0FBT3dZLEdBQUd4WSxHQUFHcW9CLGNBQWMsSUFBSWpvQixLQUFLaWMsU0FBUyxDQUFDLE1BQU1yYyxFQUFFZ08sU0FBU3VhLGNBQWMsT0FBT3ZvQixFQUFFMG5CLFVBQVV0bkIsS0FBS3VnQixRQUFRK0csVUFBVXRuQixLQUFLdWdCLFFBQVFpSCxZQUFZNW5CLEVBQUVzWCxVQUFVMUMsSUFBSSxRQUFReFUsS0FBS2ljLFNBQVNyYyxFQUFFLE9BQU9JLEtBQUtpYyxTQUFTdUUsV0FBVzVnQixHQUFHLE9BQU9BLEVBQUUsSUFBSXluQixNQUFNLGlCQUFpQnpuQixFQUFFQSxFQUFFLEtBQUs2bkIsWUFBWWxSLEdBQUczVyxFQUFFNm5CLGFBQWFqUixHQUFHLFdBQVc1VyxFQUFFK25CLElBQUkvbkIsRUFBRW9vQixVQUFVaG9CLEtBQUsrbkIsY0FBYy9uQixLQUFLdWdCLFFBQVFrSCxZQUFZVyxPQUFPcG9CLEtBQUtpb0IsZUFBZTdOLEdBQUdNLEdBQUcxYSxLQUFLaW9CLGNBQWNKLElBQUcsS0FBTXpQLEdBQUdwWSxLQUFLdWdCLFFBQVFtSCxrQkFBa0IxbkIsS0FBSytuQixhQUFZLEdBQUk1TCxVQUFVbmMsS0FBSytuQixjQUFjM04sR0FBR0MsSUFBSXJhLEtBQUtpYyxTQUFTNEwsSUFBSTduQixLQUFLaWMsU0FBU0osU0FBUzdiLEtBQUsrbkIsYUFBWSxHQUFJRyxrQkFBa0J0b0IsR0FBR3lZLEdBQUd6WSxFQUFFSSxLQUFLaW9CLGNBQWNqb0IsS0FBS3VnQixRQUFRaUgsYUFBYSxNQUFNYSxHQUFHLENBQUNDLFlBQVksS0FBS0MsV0FBVSxHQUFJQyxHQUFHLENBQUNGLFlBQVksVUFBVUMsVUFBVSxXQUFXRSxHQUFHLGdCQUFnQkMsR0FBRyxXQUFXLE1BQU1DLEdBQUczTSxZQUFZcGMsR0FBR0ksS0FBS3VnQixRQUFRdmdCLEtBQUt3Z0IsV0FBVzVnQixHQUFHSSxLQUFLNG9CLFdBQVUsRUFBRzVvQixLQUFLNm9CLHFCQUFxQixLQUFLQyxXQUFXLE1BQU1SLFlBQVkxb0IsRUFBRTJvQixVQUFVcm9CLEdBQUdGLEtBQUt1Z0IsUUFBUXZnQixLQUFLNG9CLFlBQVkxb0IsR0FBR04sRUFBRWttQixRQUFRMUwsR0FBR0MsSUFBSXpNLFNBQVM2YSxJQUFJck8sR0FBR00sR0FBRzlNLFNBQVMsd0JBQXdCaE8sR0FBR0ksS0FBSytvQixlQUFlbnBCLEtBQUt3YSxHQUFHTSxHQUFHOU0sU0FBUyw0QkFBNEJoTyxHQUFHSSxLQUFLZ3BCLGVBQWVwcEIsS0FBS0ksS0FBSzRvQixXQUFVLEdBQUlLLGFBQWFqcEIsS0FBSzRvQixZQUFZNW9CLEtBQUs0b0IsV0FBVSxFQUFHeE8sR0FBR0MsSUFBSXpNLFNBQVM2YSxLQUFLTSxlQUFlbnBCLEdBQUcsTUFBTThZLE9BQU94WSxHQUFHTixHQUFHMG9CLFlBQVk3bkIsR0FBR1QsS0FBS3VnQixRQUFRLEdBQUdyZ0IsSUFBSTBOLFVBQVUxTixJQUFJTyxHQUFHQSxFQUFFME0sU0FBU2pOLEdBQUcsT0FBTyxNQUFNUSxFQUFFcWQsR0FBR1Msa0JBQWtCL2QsR0FBRyxJQUFJQyxFQUFFeVMsT0FBTzFTLEVBQUVxbEIsUUFBUTlsQixLQUFLNm9CLHVCQUF1QkgsR0FBR2hvQixFQUFFQSxFQUFFeVMsT0FBTyxHQUFHMlMsUUFBUXBsQixFQUFFLEdBQUdvbEIsUUFBUWtELGVBQWVwcEIsR0FBRyxRQUFRQSxFQUFFc2lCLE1BQU1saUIsS0FBSzZvQixxQkFBcUJqcEIsRUFBRXNwQixTQUFTUixHQUFHLFdBQVdsSSxXQUFXNWdCLEdBQUcsT0FBT0EsRUFBRSxJQUFJeW9CLE1BQU0saUJBQWlCem9CLEVBQUVBLEVBQUUsSUFBSTRXLEdBQUcsWUFBWTVXLEVBQUU0b0IsSUFBSTVvQixHQUFHLE1BQU11cEIsR0FBRyxRQUFRQyxHQUFHLFNBQVNDLEdBQUcsQ0FBQ0MsVUFBUyxFQUFHekssVUFBUyxFQUFHaUgsT0FBTSxHQUFJeUQsR0FBRyxDQUFDRCxTQUFTLG1CQUFtQnpLLFNBQVMsVUFBVWlILE1BQU0sV0FBVzBELEdBQUcsa0JBQWtCQyxHQUFHLGdCQUFnQkMsR0FBRyxrQkFBa0JDLEdBQUcseUJBQXlCQyxHQUFHLDJCQUEyQkMsR0FBRyw2QkFBNkJDLEdBQUcsYUFBYUMsR0FBRyxPQUFPQyxHQUFHLGVBQWUsTUFBTUMsV0FBV2xPLEdBQUdDLFlBQVlwYyxFQUFFTSxHQUFHNGYsTUFBTWxnQixHQUFHSSxLQUFLdWdCLFFBQVF2Z0IsS0FBS3dnQixXQUFXdGdCLEdBQUdGLEtBQUtrcUIsUUFBUW5NLEdBQUdDLFFBQVEsZ0JBQWdCaGUsS0FBS2ljLFVBQVVqYyxLQUFLbXFCLFVBQVVucUIsS0FBS29xQixzQkFBc0JwcUIsS0FBS3FxQixXQUFXcnFCLEtBQUtzcUIsdUJBQXVCdHFCLEtBQUs2akIsVUFBUyxFQUFHN2pCLEtBQUt1cUIsc0JBQXFCLEVBQUd2cUIsS0FBS3dqQixrQkFBaUIsRUFBR3hqQixLQUFLd3FCLFdBQVcsSUFBSTdELEdBQWM1RixxQkFBVSxPQUFPc0ksR0FBY3RSLGtCQUFPLE9BQU9vUixHQUFHOUwsT0FBT3pkLEdBQUcsT0FBT0ksS0FBSzZqQixTQUFTN2pCLEtBQUt5SCxPQUFPekgsS0FBSzhqQixLQUFLbGtCLEdBQUdra0IsS0FBS2xrQixHQUFHSSxLQUFLNmpCLFVBQVU3akIsS0FBS3dqQixrQkFBa0JwSixHQUFHUSxRQUFRNWEsS0FBS2ljLFNBQVN3TixHQUFHLENBQUN6UCxjQUFjcGEsSUFBSTBiLG1CQUFtQnRiLEtBQUs2akIsVUFBUyxFQUFHN2pCLEtBQUt5cUIsZ0JBQWdCenFCLEtBQUt3akIsa0JBQWlCLEdBQUl4akIsS0FBS3dxQixXQUFXL2lCLE9BQU9tRyxTQUFTa0UsS0FBS29GLFVBQVUxQyxJQUFJc1YsSUFBSTlwQixLQUFLMHFCLGdCQUFnQjFxQixLQUFLMnFCLGtCQUFrQjNxQixLQUFLNHFCLGtCQUFrQnhRLEdBQUdNLEdBQUcxYSxLQUFLa3FCLFFBQVFMLElBQUcsS0FBTXpQLEdBQUdPLElBQUkzYSxLQUFLaWMsU0FBUyw0QkFBNEJyYyxJQUFJQSxFQUFFOFksU0FBUzFZLEtBQUtpYyxXQUFXamMsS0FBS3VxQixzQkFBcUIsU0FBVXZxQixLQUFLNnFCLGVBQWMsSUFBSzdxQixLQUFLOHFCLGFBQWFsckIsTUFBTTZILE9BQU8sSUFBSXpILEtBQUs2akIsVUFBVTdqQixLQUFLd2pCLGlCQUFpQixPQUFPLEdBQUdwSixHQUFHUSxRQUFRNWEsS0FBS2ljLFNBQVMsaUJBQWlCWCxpQkFBaUIsT0FBT3RiLEtBQUs2akIsVUFBUyxFQUFHLE1BQU1qa0IsRUFBRUksS0FBS3lxQixjQUFjN3FCLElBQUlJLEtBQUt3akIsa0JBQWlCLEdBQUl4akIsS0FBSzJxQixrQkFBa0IzcUIsS0FBSzRxQixrQkFBa0I1cUIsS0FBS3FxQixXQUFXcEIsYUFBYWpwQixLQUFLaWMsU0FBUy9FLFVBQVUyRSxPQUFPa08sSUFBSTNQLEdBQUdDLElBQUlyYSxLQUFLaWMsU0FBUzBOLElBQUl2UCxHQUFHQyxJQUFJcmEsS0FBS2txQixRQUFRTCxJQUFJN3BCLEtBQUtzYyxnQkFBZSxJQUFLdGMsS0FBSytxQixjQUFjL3FCLEtBQUtpYyxTQUFTcmMsR0FBR3VjLFVBQVUsQ0FBQ25TLE9BQU9oSyxLQUFLa3FCLFNBQVNqZixTQUFTckwsR0FBR3dhLEdBQUdDLElBQUl6YSxFQUFFLGVBQWVJLEtBQUttcUIsVUFBVWhPLFVBQVVuYyxLQUFLcXFCLFdBQVdwQixhQUFhbkosTUFBTTNELFVBQVU2TyxlQUFlaHJCLEtBQUswcUIsZ0JBQWdCTixzQkFBc0IsT0FBTyxJQUFJdEMsR0FBRyxDQUFDUCxVQUFVOU0sUUFBUXphLEtBQUt1Z0IsUUFBUStJLFVBQVU5QixXQUFXeG5CLEtBQUt5cUIsZ0JBQWdCSCx1QkFBdUIsT0FBTyxJQUFJM0IsR0FBRyxDQUFDTCxZQUFZdG9CLEtBQUtpYyxXQUFXdUUsV0FBVzVnQixHQUFHLE9BQU9BLEVBQUUsSUFBSXlwQixNQUFNN0wsR0FBR0csa0JBQWtCM2QsS0FBS2ljLGFBQWEsaUJBQWlCcmMsRUFBRUEsRUFBRSxJQUFJNFcsR0FBRzJTLEdBQUd2cEIsRUFBRTJwQixJQUFJM3BCLEVBQUVrckIsYUFBYWxyQixHQUFHLE1BQU1NLEVBQUVGLEtBQUt5cUIsY0FBY2hxQixFQUFFc2QsR0FBR0MsUUFBUSxjQUFjaGUsS0FBS2txQixTQUFTbHFCLEtBQUtpYyxTQUFTNU8sWUFBWXJOLEtBQUtpYyxTQUFTNU8sV0FBV2lKLFdBQVdVLEtBQUtDLGNBQWNySixTQUFTa0UsS0FBS3NXLE9BQU9wb0IsS0FBS2ljLFVBQVVqYyxLQUFLaWMsU0FBUzVRLE1BQU00WixRQUFRLFFBQVFqbEIsS0FBS2ljLFNBQVMzUSxnQkFBZ0IsZUFBZXRMLEtBQUtpYyxTQUFTMVEsYUFBYSxjQUFhLEdBQUl2TCxLQUFLaWMsU0FBUzFRLGFBQWEsT0FBTyxVQUFVdkwsS0FBS2ljLFNBQVM1SyxVQUFVLEVBQUU1USxJQUFJQSxFQUFFNFEsVUFBVSxHQUFHblIsR0FBR3NYLEdBQUd4WCxLQUFLaWMsVUFBVWpjLEtBQUtpYyxTQUFTL0UsVUFBVTFDLElBQUl1VixJQUFJL3BCLEtBQUtzYyxnQkFBZSxLQUFNdGMsS0FBS3VnQixRQUFRdUYsT0FBTzlsQixLQUFLcXFCLFdBQVd2QixXQUFXOW9CLEtBQUt3akIsa0JBQWlCLEVBQUdwSixHQUFHUSxRQUFRNWEsS0FBS2ljLFNBQVMsaUJBQWlCLENBQUNqQyxjQUFjcGEsTUFBTUksS0FBS2txQixRQUFRaHFCLEdBQUd5cUIsa0JBQWtCM3FCLEtBQUs2akIsU0FBU3pKLEdBQUdNLEdBQUcxYSxLQUFLaWMsU0FBUzJOLElBQUlocUIsSUFBSUksS0FBS3VnQixRQUFRMUIsVUFBVWpmLEVBQUVzaUIsTUFBTWtILElBQUl4cEIsRUFBRXliLGlCQUFpQnJiLEtBQUt5SCxRQUFRekgsS0FBS3VnQixRQUFRMUIsVUFBVWpmLEVBQUVzaUIsTUFBTWtILElBQUlwcEIsS0FBS2lyQixnQ0FBZ0M3USxHQUFHQyxJQUFJcmEsS0FBS2ljLFNBQVMyTixJQUFJZ0Isa0JBQWtCNXFCLEtBQUs2akIsU0FBU3pKLEdBQUdNLEdBQUcxUSxPQUFPMGYsSUFBRyxJQUFLMXBCLEtBQUswcUIsa0JBQWtCdFEsR0FBR0MsSUFBSXJRLE9BQU8wZixJQUFJcUIsYUFBYS9xQixLQUFLaWMsU0FBUzVRLE1BQU00WixRQUFRLE9BQU9qbEIsS0FBS2ljLFNBQVMxUSxhQUFhLGVBQWMsR0FBSXZMLEtBQUtpYyxTQUFTM1EsZ0JBQWdCLGNBQWN0TCxLQUFLaWMsU0FBUzNRLGdCQUFnQixRQUFRdEwsS0FBS3dqQixrQkFBaUIsRUFBR3hqQixLQUFLbXFCLFVBQVUxaUIsTUFBSyxLQUFNbUcsU0FBU2tFLEtBQUtvRixVQUFVMkUsT0FBT2lPLElBQUk5cEIsS0FBS2tyQixvQkFBb0JsckIsS0FBS3dxQixXQUFXN1csUUFBUXlHLEdBQUdRLFFBQVE1YSxLQUFLaWMsU0FBU3VOLE9BQU9xQixjQUFjanJCLEdBQUd3YSxHQUFHTSxHQUFHMWEsS0FBS2ljLFNBQVMwTixJQUFJL3BCLElBQUlJLEtBQUt1cUIscUJBQXFCdnFCLEtBQUt1cUIsc0JBQXFCLEVBQUczcUIsRUFBRThZLFNBQVM5WSxFQUFFdXJCLGlCQUFnQixJQUFLbnJCLEtBQUt1Z0IsUUFBUStJLFNBQVN0cEIsS0FBS3lILE9BQU8sV0FBV3pILEtBQUt1Z0IsUUFBUStJLFVBQVV0cEIsS0FBS2lyQixpQ0FBaUNqckIsS0FBS21xQixVQUFVckcsS0FBS2xrQixHQUFHNnFCLGNBQWMsT0FBT3pxQixLQUFLaWMsU0FBUy9FLFVBQVUvSixTQUFTLFFBQVE4ZCw2QkFBNkIsR0FBRzdRLEdBQUdRLFFBQVE1YSxLQUFLaWMsU0FBUywwQkFBMEJYLGlCQUFpQixPQUFPLE1BQU1wRSxVQUFVdFgsRUFBRXlTLGFBQWFuUyxFQUFFbUwsTUFBTTVLLEdBQUdULEtBQUtpYyxTQUFTdmIsRUFBRVIsRUFBRTBOLFNBQVNDLGdCQUFnQnFCLGNBQWN4TyxHQUFHLFdBQVdELEVBQUVrUixXQUFXL1IsRUFBRXVOLFNBQVM2YyxNQUFNdHBCLElBQUlELEVBQUVrUixVQUFVLFVBQVUvUixFQUFFNFUsSUFBSXdWLElBQUlocUIsS0FBS3NjLGdCQUFlLEtBQU0xYyxFQUFFaWMsT0FBT21PLElBQUl0cEIsR0FBR1YsS0FBS3NjLGdCQUFlLEtBQU03YixFQUFFa1IsVUFBVSxLQUFLM1IsS0FBS2txQixXQUFXbHFCLEtBQUtrcUIsU0FBU2xxQixLQUFLaWMsU0FBUzZKLFNBQVM0RSxnQkFBZ0IsTUFBTTlxQixFQUFFSSxLQUFLaWMsU0FBUzVKLGFBQWF6RSxTQUFTQyxnQkFBZ0JxQixhQUFhaFAsRUFBRUYsS0FBS3dxQixXQUFXNUQsV0FBV25tQixFQUFFUCxFQUFFLElBQUlPLEdBQUdiLElBQUlnWSxNQUFNblgsSUFBSWIsR0FBR2dZLFFBQVE1WCxLQUFLaWMsU0FBUzVRLE1BQU0rZixZQUFZLEdBQUdsckIsUUFBUU8sSUFBSWIsSUFBSWdZLE9BQU9uWCxHQUFHYixHQUFHZ1ksUUFBUTVYLEtBQUtpYyxTQUFTNVEsTUFBTWdnQixhQUFhLEdBQUduckIsT0FBT2dyQixvQkFBb0JsckIsS0FBS2ljLFNBQVM1USxNQUFNK2YsWUFBWSxHQUFHcHJCLEtBQUtpYyxTQUFTNVEsTUFBTWdnQixhQUFhLEdBQUc5Tyx1QkFBdUIzYyxFQUFFTSxHQUFHLE9BQU9GLEtBQUtrZCxNQUFLLFdBQVksTUFBTXpjLEVBQUV3cEIsR0FBR25OLG9CQUFvQjljLEtBQUtKLEdBQUcsR0FBRyxpQkFBaUJBLEVBQUUsQ0FBQyxRQUFHLElBQVNhLEVBQUViLEdBQUcsTUFBTSxJQUFJK1csVUFBVSxvQkFBb0IvVyxNQUFNYSxFQUFFYixHQUFHTSxRQUFRa2EsR0FBR00sR0FBRzlNLFNBQVMsMEJBQTBCLDRCQUEyQixTQUFVaE8sR0FBRyxNQUFNTSxFQUFFOFYsR0FBR2hXLE1BQU0sQ0FBQyxJQUFJLFFBQVE0VixTQUFTNVYsS0FBSzRjLFVBQVVoZCxFQUFFeWIsaUJBQWlCakIsR0FBR08sSUFBSXphLEVBQUV1cEIsSUFBSTdwQixJQUFJQSxFQUFFMGIsa0JBQWtCbEIsR0FBR08sSUFBSXphLEVBQUVzcEIsSUFBRyxLQUFNNVMsR0FBRzVXLE9BQU9BLEtBQUs4bEIsY0FBYyxNQUFNcmxCLEVBQUVzZCxHQUFHQyxRQUFRLGVBQWV2ZCxHQUFHd3BCLEdBQUd6TixZQUFZL2IsR0FBR2dILE9BQU93aUIsR0FBR25OLG9CQUFvQjVjLEdBQUdtZCxPQUFPcmQsU0FBUzJjLEdBQUdzTixJQUFJblMsR0FBR21TLElBQUksTUFBTXFCLEdBQUcsWUFBWUMsR0FBRyxDQUFDakMsVUFBUyxFQUFHekssVUFBUyxFQUFHck8sUUFBTyxHQUFJZ2IsR0FBRyxDQUFDbEMsU0FBUyxVQUFVekssU0FBUyxVQUFVck8sT0FBTyxXQUFXaWIsR0FBRyxPQUFPQyxHQUFHLGtCQUFrQkMsR0FBRyxzQkFBc0IsTUFBTUMsV0FBVzdQLEdBQUdDLFlBQVlwYyxFQUFFTSxHQUFHNGYsTUFBTWxnQixHQUFHSSxLQUFLdWdCLFFBQVF2Z0IsS0FBS3dnQixXQUFXdGdCLEdBQUdGLEtBQUs2akIsVUFBUyxFQUFHN2pCLEtBQUttcUIsVUFBVW5xQixLQUFLb3FCLHNCQUFzQnBxQixLQUFLcXFCLFdBQVdycUIsS0FBS3NxQix1QkFBdUJ0cUIsS0FBSzhnQixxQkFBZ0MvSSxrQkFBTyxPQUFPdVQsR0FBY3ZLLHFCQUFVLE9BQU93SyxHQUFHbE8sT0FBT3pkLEdBQUcsT0FBT0ksS0FBSzZqQixTQUFTN2pCLEtBQUt5SCxPQUFPekgsS0FBSzhqQixLQUFLbGtCLEdBQUdra0IsS0FBS2xrQixHQUFHSSxLQUFLNmpCLFVBQVV6SixHQUFHUSxRQUFRNWEsS0FBS2ljLFNBQVMsb0JBQW9CLENBQUNqQyxjQUFjcGEsSUFBSTBiLG1CQUFtQnRiLEtBQUs2akIsVUFBUyxFQUFHN2pCLEtBQUtpYyxTQUFTNVEsTUFBTXdnQixXQUFXLFVBQVU3ckIsS0FBS21xQixVQUFVckcsT0FBTzlqQixLQUFLdWdCLFFBQVEvUCxTQUFRLElBQUttVyxJQUFJbGYsT0FBT3pILEtBQUtpYyxTQUFTM1EsZ0JBQWdCLGVBQWV0TCxLQUFLaWMsU0FBUzFRLGFBQWEsY0FBYSxHQUFJdkwsS0FBS2ljLFNBQVMxUSxhQUFhLE9BQU8sVUFBVXZMLEtBQUtpYyxTQUFTL0UsVUFBVTFDLElBQUlpWCxJQUFJenJCLEtBQUtzYyxnQkFBZSxLQUFNdGMsS0FBS3VnQixRQUFRL1AsUUFBUXhRLEtBQUtxcUIsV0FBV3ZCLFdBQVcxTyxHQUFHUSxRQUFRNWEsS0FBS2ljLFNBQVMscUJBQXFCLENBQUNqQyxjQUFjcGEsTUFBTUksS0FBS2ljLFVBQVMsSUFBS3hVLE9BQU96SCxLQUFLNmpCLFdBQVd6SixHQUFHUSxRQUFRNWEsS0FBS2ljLFNBQVMscUJBQXFCWCxtQkFBbUJ0YixLQUFLcXFCLFdBQVdwQixhQUFhanBCLEtBQUtpYyxTQUFTNlAsT0FBTzlyQixLQUFLNmpCLFVBQVMsRUFBRzdqQixLQUFLaWMsU0FBUy9FLFVBQVUyRSxPQUFPNFAsSUFBSXpyQixLQUFLbXFCLFVBQVUxaUIsT0FBT3pILEtBQUtzYyxnQkFBZSxLQUFNdGMsS0FBS2ljLFNBQVMxUSxhQUFhLGVBQWMsR0FBSXZMLEtBQUtpYyxTQUFTM1EsZ0JBQWdCLGNBQWN0TCxLQUFLaWMsU0FBUzNRLGdCQUFnQixRQUFRdEwsS0FBS2ljLFNBQVM1USxNQUFNd2dCLFdBQVcsU0FBUzdyQixLQUFLdWdCLFFBQVEvUCxTQUFRLElBQUttVyxJQUFJaFQsUUFBUXlHLEdBQUdRLFFBQVE1YSxLQUFLaWMsU0FBUzBQLE1BQU0zckIsS0FBS2ljLFVBQVMsS0FBTUUsVUFBVW5jLEtBQUttcUIsVUFBVWhPLFVBQVVuYyxLQUFLcXFCLFdBQVdwQixhQUFhbkosTUFBTTNELFVBQVVxRSxXQUFXNWdCLEdBQUcsT0FBT0EsRUFBRSxJQUFJMnJCLE1BQU0vTixHQUFHRyxrQkFBa0IzZCxLQUFLaWMsYUFBYSxpQkFBaUJyYyxFQUFFQSxFQUFFLElBQUk0VyxHQUFHOFUsR0FBRzFyQixFQUFFNHJCLElBQUk1ckIsRUFBRXdxQixzQkFBc0IsT0FBTyxJQUFJdEMsR0FBRyxDQUFDUixVQUFVLHFCQUFxQkMsVUFBVXZuQixLQUFLdWdCLFFBQVErSSxTQUFTOUIsWUFBVyxFQUFHQyxZQUFZem5CLEtBQUtpYyxTQUFTNU8sV0FBV3FhLGNBQWMsSUFBSTFuQixLQUFLeUgsU0FBUzZpQix1QkFBdUIsT0FBTyxJQUFJM0IsR0FBRyxDQUFDTCxZQUFZdG9CLEtBQUtpYyxXQUFXNkUscUJBQXFCMUcsR0FBR00sR0FBRzFhLEtBQUtpYyxTQUFTLGdDQUFnQ3JjLElBQUlJLEtBQUt1Z0IsUUFBUTFCLFVBQVUsV0FBV2pmLEVBQUVzaUIsS0FBS2xpQixLQUFLeUgsVUFBVThVLHVCQUF1QjNjLEdBQUcsT0FBT0ksS0FBS2tkLE1BQUssV0FBWSxNQUFNaGQsRUFBRTByQixHQUFHOU8sb0JBQW9COWMsS0FBS0osR0FBRyxHQUFHLGlCQUFpQkEsRUFBRSxDQUFDLFFBQUcsSUFBU00sRUFBRU4sSUFBSUEsRUFBRWlXLFdBQVcsTUFBTSxnQkFBZ0JqVyxFQUFFLE1BQU0sSUFBSStXLFVBQVUsb0JBQW9CL1csTUFBTU0sRUFBRU4sR0FBR0ksV0FBV29hLEdBQUdNLEdBQUc5TSxTQUFTLDhCQUE4QixnQ0FBK0IsU0FBVWhPLEdBQUcsTUFBTU0sRUFBRThWLEdBQUdoVyxNQUFNLEdBQUcsQ0FBQyxJQUFJLFFBQVE0VixTQUFTNVYsS0FBSzRjLFVBQVVoZCxFQUFFeWIsaUJBQWlCdEUsR0FBRy9XLE1BQU0sT0FBT29hLEdBQUdPLElBQUl6YSxFQUFFeXJCLElBQUcsS0FBTS9VLEdBQUc1VyxPQUFPQSxLQUFLOGxCLFdBQVcsTUFBTXJsQixFQUFFc2QsR0FBR0MsUUFBUTBOLElBQUlqckIsR0FBR0EsSUFBSVAsR0FBRzByQixHQUFHcFAsWUFBWS9iLEdBQUdnSCxPQUFPbWtCLEdBQUc5TyxvQkFBb0I1YyxHQUFHbWQsT0FBT3JkLFNBQVNvYSxHQUFHTSxHQUFHMVEsT0FBTyw4QkFBNkIsSUFBSytULEdBQUd0SyxLQUFLaVksSUFBSXpnQixTQUFTckwsR0FBR2dzQixHQUFHOU8sb0JBQW9CbGQsR0FBR2trQixXQUFXbkgsR0FBR2lQLElBQUk5VCxHQUFHOFQsSUFBSSxNQUFNRyxHQUFHLElBQUl4WCxJQUFJLENBQUMsYUFBYSxPQUFPLE9BQU8sV0FBVyxXQUFXLFNBQVMsTUFBTSxlQUFleVgsR0FBRyxpRUFBaUVDLEdBQUcscUlBQXFJQyxHQUFHLENBQUN0c0IsRUFBRU0sS0FBSyxNQUFNTyxFQUFFYixFQUFFa0ssU0FBUzNKLGNBQWMsR0FBR0QsRUFBRTBWLFNBQVNuVixHQUFHLE9BQU9zckIsR0FBR3RYLElBQUloVSxJQUFJZ2EsUUFBUXVSLEdBQUdwYSxLQUFLaFMsRUFBRXVzQixZQUFZRixHQUFHcmEsS0FBS2hTLEVBQUV1c0IsWUFBWSxNQUFNenJCLEVBQUVSLEVBQUV1TyxRQUFRN08sR0FBR0EsYUFBYThXLFNBQVMsSUFBSSxJQUFJOVcsRUFBRSxFQUFFTSxFQUFFUSxFQUFFeVMsT0FBT3ZULEVBQUVNLEVBQUVOLElBQUksR0FBR2MsRUFBRWQsR0FBR2dTLEtBQUtuUixHQUFHLE9BQU0sRUFBRyxPQUFNLEdBQUksU0FBUzJyQixHQUFHeHNCLEVBQUVNLEVBQUVPLEdBQUcsSUFBSWIsRUFBRXVULE9BQU8sT0FBT3ZULEVBQUUsR0FBR2EsR0FBRyxtQkFBbUJBLEVBQUUsT0FBT0EsRUFBRWIsR0FBRyxNQUFNYyxHQUFFLElBQUtzSixPQUFPcWlCLFdBQVdDLGdCQUFnQjFzQixFQUFFLGFBQWFlLEVBQUUsR0FBR2lKLFVBQVVsSixFQUFFb1IsS0FBS3FJLGlCQUFpQixNQUFNLElBQUksSUFBSXZhLEVBQUUsRUFBRWEsRUFBRUUsRUFBRXdTLE9BQU92VCxFQUFFYSxFQUFFYixJQUFJLENBQUMsTUFBTWEsRUFBRUUsRUFBRWYsR0FBR2MsRUFBRUQsRUFBRXFKLFNBQVMzSixjQUFjLElBQUlXLE9BQU9pSyxLQUFLN0ssR0FBRzBWLFNBQVNsVixHQUFHLENBQUNELEVBQUVvYixTQUFTLFNBQVMsTUFBTWpiLEVBQUUsR0FBR2dKLFVBQVVuSixFQUFFMEssWUFBWXZELEVBQUUsR0FBR2dDLE9BQU8xSixFQUFFLE1BQU0sR0FBR0EsRUFBRVEsSUFBSSxJQUFJRSxFQUFFcUssU0FBU3JMLElBQUlzc0IsR0FBR3RzQixFQUFFZ0ksSUFBSW5ILEVBQUU2SyxnQkFBZ0IxTCxFQUFFa0ssYUFBYSxPQUFPcEosRUFBRW9SLEtBQUt5YSxVQUFVLE1BQU1DLEdBQUcsVUFBVUMsR0FBRyxJQUFJbFksSUFBSSxDQUFDLFdBQVcsWUFBWSxlQUFla04sR0FBRyxDQUFDaUwsVUFBVSxVQUFVQyxTQUFTLFNBQVNDLE1BQU0sNEJBQTRCaFMsUUFBUSxTQUFTaVMsTUFBTSxrQkFBa0JDLEtBQUssVUFBVUMsU0FBUyxtQkFBbUJoZSxVQUFVLG9CQUFvQjlHLE9BQU8sMEJBQTBCK2tCLFVBQVUsMkJBQTJCaGEsbUJBQW1CLFFBQVFSLFNBQVMsbUJBQW1CeWEsWUFBWSxvQkFBb0JDLFNBQVMsVUFBVUMsV0FBVyxrQkFBa0JDLFVBQVUsU0FBU2xJLGFBQWEsMEJBQTBCbUksR0FBRyxDQUFDQyxLQUFLLE9BQU9DLElBQUksTUFBTUMsTUFBTTVWLEtBQUssT0FBTyxRQUFRNlYsT0FBTyxTQUFTQyxLQUFLOVYsS0FBSyxRQUFRLFFBQVErVixHQUFHLENBQUNqQixXQUFVLEVBQUdDLFNBQVMsK0dBQStHL1IsUUFBUSxjQUFjZ1MsTUFBTSxHQUFHQyxNQUFNLEVBQUVDLE1BQUssRUFBR0MsVUFBUyxFQUFHaGUsVUFBVSxNQUFNOUcsT0FBTyxDQUFDLEVBQUUsR0FBRytrQixXQUFVLEVBQUdoYSxtQkFBbUIsQ0FBQyxNQUFNLFFBQVEsU0FBUyxRQUFRUixTQUFTLGtCQUFrQnlhLFlBQVksR0FBR0MsVUFBUyxFQUFHQyxXQUFXLEtBQUtDLFVBQVUsQ0FBQyxJQUFJLENBQUMsUUFBUSxNQUFNLEtBQUssT0FBTyxPQUFPLGtCQUFrQnRuQixFQUFFLENBQUMsU0FBUyxPQUFPLFFBQVEsT0FBTzhuQixLQUFLLEdBQUcxbkIsRUFBRSxHQUFHMm5CLEdBQUcsR0FBR0MsSUFBSSxHQUFHQyxLQUFLLEdBQUdDLElBQUksR0FBR0MsR0FBRyxHQUFHQyxHQUFHLEdBQUdDLEdBQUcsR0FBR0MsR0FBRyxHQUFHQyxHQUFHLEdBQUdDLEdBQUcsR0FBR0MsR0FBRyxHQUFHQyxHQUFHLEdBQUc3dEIsRUFBRSxHQUFHOHRCLElBQUksQ0FBQyxNQUFNLFNBQVMsTUFBTSxRQUFRLFFBQVEsVUFBVTdxQixHQUFHLEdBQUc4cUIsR0FBRyxHQUFHbGxCLEVBQUUsR0FBR21sQixJQUFJLEdBQUcvbUIsRUFBRSxHQUFHZ25CLE1BQU0sR0FBR0MsS0FBSyxHQUFHQyxJQUFJLEdBQUdDLElBQUksR0FBR0MsT0FBTyxHQUFHNW5CLEVBQUUsR0FBRzZuQixHQUFHLElBQUkvSixhQUFhLE1BQU1nSyxHQUFHLENBQUNDLEtBQUssa0JBQWtCQyxPQUFPLG9CQUFvQkMsS0FBSyxrQkFBa0JDLE1BQU0sbUJBQW1CQyxTQUFTLHNCQUFzQkMsTUFBTSxtQkFBbUJDLFFBQVEscUJBQXFCQyxTQUFTLHNCQUFzQkMsV0FBVyx3QkFBd0JDLFdBQVcseUJBQXlCQyxHQUFHLE9BQU9DLEdBQUcsT0FBT0MsR0FBRyxPQUFPQyxHQUFHLE1BQU1DLEdBQUcsaUJBQWlCQyxHQUFHLFNBQVNDLEdBQUcsZ0JBQWdCQyxHQUFHLFFBQVFDLEdBQUcsUUFBUSxNQUFNQyxXQUFXdlUsR0FBR0MsWUFBWTliLEVBQUVPLEdBQUcsUUFBRyxJQUFTYixFQUFFLE1BQU0sSUFBSStXLFVBQVUsK0RBQStEbUosTUFBTTVmLEdBQUdGLEtBQUt1d0IsWUFBVyxFQUFHdndCLEtBQUt3d0IsU0FBUyxFQUFFeHdCLEtBQUt5d0IsWUFBWSxHQUFHendCLEtBQUswd0IsZUFBZSxHQUFHMXdCLEtBQUtzbEIsUUFBUSxLQUFLdGxCLEtBQUt1Z0IsUUFBUXZnQixLQUFLd2dCLFdBQVcvZixHQUFHVCxLQUFLMndCLElBQUksS0FBSzN3QixLQUFLNHdCLGdCQUEyQjdQLHFCQUFVLE9BQU80TSxHQUFjNVYsa0JBQU8sT0FBT3lVLEdBQWNyVyxtQkFBUSxPQUFPK1ksR0FBY3ZKLHlCQUFjLE9BQU9sRSxHQUFHb1AsU0FBUzd3QixLQUFLdXdCLFlBQVcsRUFBR08sVUFBVTl3QixLQUFLdXdCLFlBQVcsRUFBR1EsZ0JBQWdCL3dCLEtBQUt1d0IsWUFBWXZ3QixLQUFLdXdCLFdBQVdsVCxPQUFPemQsR0FBRyxHQUFHSSxLQUFLdXdCLFdBQVcsR0FBRzN3QixFQUFFLENBQUMsTUFBTU0sRUFBRUYsS0FBS2d4Qiw2QkFBNkJweEIsR0FBR00sRUFBRXd3QixlQUFlTyxPQUFPL3dCLEVBQUV3d0IsZUFBZU8sTUFBTS93QixFQUFFZ3hCLHVCQUF1Qmh4QixFQUFFaXhCLE9BQU8sS0FBS2p4QixHQUFHQSxFQUFFa3hCLE9BQU8sS0FBS2x4QixPQUFPLENBQUMsR0FBR0YsS0FBS3F4QixnQkFBZ0JuYSxVQUFVL0osU0FBUzJpQixJQUFJLFlBQVk5dkIsS0FBS294QixPQUFPLEtBQUtweEIsTUFBTUEsS0FBS214QixPQUFPLEtBQUtueEIsT0FBT21jLFVBQVU4RixhQUFhamlCLEtBQUt3d0IsVUFBVXBXLEdBQUdDLElBQUlyYSxLQUFLaWMsU0FBU1ksUUFBUXFULElBQUlDLEdBQUdud0IsS0FBS3N4QixtQkFBbUJ0eEIsS0FBSzJ3QixLQUFLM3dCLEtBQUsyd0IsSUFBSTlVLFNBQVM3YixLQUFLdXhCLGlCQUFpQnpSLE1BQU0zRCxVQUFVMkgsT0FBTyxHQUFHLFNBQVM5akIsS0FBS2ljLFNBQVM1USxNQUFNNFosUUFBUSxNQUFNLElBQUl2SSxNQUFNLHVDQUF1QyxJQUFJMWMsS0FBS3d4QixrQkFBa0J4eEIsS0FBS3V3QixXQUFXLE9BQU8sTUFBTTN3QixFQUFFd2EsR0FBR1EsUUFBUTVhLEtBQUtpYyxTQUFTamMsS0FBS2djLFlBQVk3RixNQUFNa1osTUFBTW52QixFQUFFbVgsR0FBR3JYLEtBQUtpYyxVQUFVeGIsRUFBRSxPQUFPUCxFQUFFRixLQUFLaWMsU0FBUy9SLGNBQWMyRCxnQkFBZ0JWLFNBQVNuTixLQUFLaWMsVUFBVS9iLEVBQUVpTixTQUFTbk4sS0FBS2ljLFVBQVUsR0FBR3JjLEVBQUUwYixtQkFBbUI3YSxFQUFFLE9BQU8sWUFBWVQsS0FBS2djLFlBQVlqRSxNQUFNL1gsS0FBSzJ3QixLQUFLM3dCLEtBQUt5eEIsYUFBYXp4QixLQUFLMndCLElBQUlyaEIsY0FBYzJnQixJQUFJMUQsWUFBWXZzQixLQUFLdXhCLGlCQUFpQnZ4QixLQUFLMndCLElBQUk5VSxTQUFTN2IsS0FBSzJ3QixJQUFJLE1BQU0sTUFBTWp3QixFQUFFVixLQUFLcXhCLGdCQUFnQjF3QixFQUFFLENBQUNmLElBQUksR0FBR0EsR0FBR3FNLEtBQUt5bEIsTUFBTSxJQUFJemxCLEtBQUswbEIsZ0JBQWdCL2pCLFNBQVNna0IsZUFBZWh5QixJQUFJLE9BQU9BLEdBQWxGLENBQXNGSSxLQUFLZ2MsWUFBWWpFLE1BQU1yWCxFQUFFNkssYUFBYSxLQUFLNUssR0FBR1gsS0FBS2ljLFNBQVMxUSxhQUFhLG1CQUFtQjVLLEdBQUdYLEtBQUt1Z0IsUUFBUW1NLFdBQVdoc0IsRUFBRXdXLFVBQVUxQyxJQUFJcWIsSUFBSSxNQUFNanZCLEVBQUUsbUJBQW1CWixLQUFLdWdCLFFBQVF4UixVQUFVL08sS0FBS3VnQixRQUFReFIsVUFBVTVOLEtBQUtuQixLQUFLVSxFQUFFVixLQUFLaWMsVUFBVWpjLEtBQUt1Z0IsUUFBUXhSLFVBQVVuSCxFQUFFNUgsS0FBSzZ4QixlQUFlanhCLEdBQUdaLEtBQUs4eEIsb0JBQW9CbHFCLEdBQUcsTUFBTW9sQixVQUFVbG5CLEdBQUc5RixLQUFLdWdCLFFBQVEvRSxHQUFHaEksSUFBSTlTLEVBQUVWLEtBQUtnYyxZQUFZRSxTQUFTbGMsTUFBTUEsS0FBS2ljLFNBQVMvUixjQUFjMkQsZ0JBQWdCVixTQUFTbk4sS0FBSzJ3QixPQUFPN3FCLEVBQUVzaUIsT0FBTzFuQixHQUFHMFosR0FBR1EsUUFBUTVhLEtBQUtpYyxTQUFTamMsS0FBS2djLFlBQVk3RixNQUFNb1osV0FBV3Z2QixLQUFLc2xCLFFBQVF0bEIsS0FBS3NsQixRQUFRMVUsU0FBUzVRLEtBQUtzbEIsUUFBUTFlLEdBQUc1RyxLQUFLaWMsU0FBU3ZiLEVBQUVWLEtBQUtnbUIsaUJBQWlCcGUsSUFBSWxILEVBQUV3VyxVQUFVMUMsSUFBSXNiLElBQUksTUFBTTlwQixFQUFFaEcsS0FBSyt4Qix5QkFBeUIveEIsS0FBS3VnQixRQUFRME0sYUFBYWpuQixHQUFHdEYsRUFBRXdXLFVBQVUxQyxPQUFPeE8sRUFBRStGLE1BQU0sTUFBTSxpQkFBaUI2QixTQUFTQyxpQkFBaUIsR0FBR2pFLFVBQVVnRSxTQUFTa0UsS0FBS21NLFVBQVVoVCxTQUFTckwsSUFBSXdhLEdBQUdNLEdBQUc5YSxFQUFFLFlBQVkyWCxPQUFPLE1BQU1wTyxFQUFFbkosS0FBSzJ3QixJQUFJelosVUFBVS9KLFNBQVMwaUIsSUFBSTd2QixLQUFLc2MsZ0JBQWUsS0FBTSxNQUFNMWMsRUFBRUksS0FBS3l3QixZQUFZendCLEtBQUt5d0IsWUFBWSxLQUFLclcsR0FBR1EsUUFBUTVhLEtBQUtpYyxTQUFTamMsS0FBS2djLFlBQVk3RixNQUFNbVosT0FBTzF2QixJQUFJb3dCLElBQUlod0IsS0FBS294QixPQUFPLEtBQUtweEIsUUFBUUEsS0FBSzJ3QixJQUFJeG5CLEdBQUcxQixPQUFPLElBQUl6SCxLQUFLc2xCLFFBQVEsT0FBTyxNQUFNMWxCLEVBQUVJLEtBQUtxeEIsZ0JBQWdCLEdBQUdqWCxHQUFHUSxRQUFRNWEsS0FBS2ljLFNBQVNqYyxLQUFLZ2MsWUFBWTdGLE1BQU1nWixNQUFNN1QsaUJBQWlCLE9BQU8xYixFQUFFc1gsVUFBVTJFLE9BQU9pVSxJQUFJLGlCQUFpQmxpQixTQUFTQyxpQkFBaUIsR0FBR2pFLFVBQVVnRSxTQUFTa0UsS0FBS21NLFVBQVVoVCxTQUFTckwsR0FBR3dhLEdBQUdDLElBQUl6YSxFQUFFLFlBQVkyWCxNQUFNdlgsS0FBSzB3QixlQUFlTyxPQUFNLEVBQUdqeEIsS0FBSzB3QixlQUFlNUssT0FBTSxFQUFHOWxCLEtBQUswd0IsZUFBZXNCLE9BQU0sRUFBRyxNQUFNOXhCLEVBQUVGLEtBQUsyd0IsSUFBSXpaLFVBQVUvSixTQUFTMGlCLElBQUk3dkIsS0FBS3NjLGdCQUFlLEtBQU10YyxLQUFLa3hCLHlCQUF5Qmx4QixLQUFLeXdCLGNBQWNWLElBQUlud0IsRUFBRWljLFNBQVM3YixLQUFLaXlCLGlCQUFpQmp5QixLQUFLaWMsU0FBUzNRLGdCQUFnQixvQkFBb0I4TyxHQUFHUSxRQUFRNWEsS0FBS2ljLFNBQVNqYyxLQUFLZ2MsWUFBWTdGLE1BQU1pWixRQUFRcHZCLEtBQUt1eEIsb0JBQW9CdnhCLEtBQUsyd0IsSUFBSXp3QixHQUFHRixLQUFLeXdCLFlBQVksR0FBRzdmLFNBQVMsT0FBTzVRLEtBQUtzbEIsU0FBU3RsQixLQUFLc2xCLFFBQVExVSxTQUFTNGdCLGdCQUFnQixPQUFPL1csUUFBUXphLEtBQUt5eEIsWUFBWUosZ0JBQWdCLEdBQUdyeEIsS0FBSzJ3QixJQUFJLE9BQU8zd0IsS0FBSzJ3QixJQUFJLE1BQU0vd0IsRUFBRWdPLFNBQVN1YSxjQUFjLE9BQU92b0IsRUFBRTJzQixVQUFVdnNCLEtBQUt1Z0IsUUFBUW9NLFNBQVMsTUFBTXpzQixFQUFFTixFQUFFcWUsU0FBUyxHQUFHLE9BQU9qZSxLQUFLa3lCLFdBQVdoeUIsR0FBR0EsRUFBRWdYLFVBQVUyRSxPQUFPZ1UsR0FBR0MsSUFBSTl2QixLQUFLMndCLElBQUl6d0IsRUFBRUYsS0FBSzJ3QixJQUFJdUIsV0FBV3R5QixHQUFHSSxLQUFLbXlCLHVCQUF1QnZ5QixFQUFFSSxLQUFLeXhCLFdBQVd4QixJQUFJa0MsdUJBQXVCdnlCLEVBQUVNLEVBQUVPLEdBQUcsTUFBTUMsRUFBRXFkLEdBQUdDLFFBQVF2ZCxFQUFFYixHQUFHTSxJQUFJUSxFQUFFVixLQUFLb3lCLGtCQUFrQjF4QixFQUFFUixHQUFHUSxFQUFFbWIsU0FBU3VXLGtCQUFrQnh5QixFQUFFTSxHQUFHLEdBQUcsT0FBT04sRUFBRSxPQUFPd1csR0FBR2xXLElBQUlBLEVBQUVxVyxHQUFHclcsUUFBUUYsS0FBS3VnQixRQUFRdU0sS0FBSzVzQixFQUFFbU4sYUFBYXpOLElBQUlBLEVBQUUyc0IsVUFBVSxHQUFHM3NCLEVBQUV3b0IsT0FBT2xvQixJQUFJTixFQUFFeXlCLFlBQVlueUIsRUFBRW15QixtQkFBbUJyeUIsS0FBS3VnQixRQUFRdU0sTUFBTTlzQixLQUFLdWdCLFFBQVEyTSxXQUFXaHRCLEVBQUVrc0IsR0FBR2xzQixFQUFFRixLQUFLdWdCLFFBQVE2TSxVQUFVcHRCLEtBQUt1Z0IsUUFBUTRNLGFBQWF2dEIsRUFBRTJzQixVQUFVcnNCLEdBQUdOLEVBQUV5eUIsWUFBWW55QixHQUFHdXhCLFdBQVcsTUFBTTd4QixFQUFFSSxLQUFLaWMsU0FBU3RHLGFBQWEsMkJBQTJCM1YsS0FBS3VnQixRQUFRcU0sTUFBTSxPQUFPNXNCLEtBQUsreEIseUJBQXlCbnlCLEdBQUcweUIsaUJBQWlCMXlCLEdBQUcsTUFBTSxVQUFVQSxFQUFFLE1BQU0sU0FBU0EsRUFBRSxRQUFRQSxFQUFFb3hCLDZCQUE2QnB4QixFQUFFTSxHQUFHLE9BQU9BLEdBQUdGLEtBQUtnYyxZQUFZYyxvQkFBb0JsZCxFQUFFcWEsZUFBZWphLEtBQUt1eUIsc0JBQXNCck0sYUFBYSxNQUFNamUsT0FBT3JJLEdBQUdJLEtBQUt1Z0IsUUFBUSxNQUFNLGlCQUFpQjNnQixFQUFFQSxFQUFFbU0sTUFBTSxLQUFLbUosS0FBS3RWLEdBQUc0WSxPQUFPOEosU0FBUzFpQixFQUFFLE1BQU0sbUJBQW1CQSxFQUFFTSxHQUFHTixFQUFFTSxFQUFFRixLQUFLaWMsVUFBVXJjLEVBQUVteUIseUJBQXlCbnlCLEdBQUcsTUFBTSxtQkFBbUJBLEVBQUVBLEVBQUV1QixLQUFLbkIsS0FBS2ljLFVBQVVyYyxFQUFFb21CLGlCQUFpQnBtQixHQUFHLE1BQU1NLEVBQUUsQ0FBQzZPLFVBQVVuUCxFQUFFK1UsVUFBVSxDQUFDLENBQUNqSyxLQUFLLE9BQU9nQixRQUFRLENBQUNzSCxtQkFBbUJoVCxLQUFLdWdCLFFBQVF2TixxQkFBcUIsQ0FBQ3RJLEtBQUssU0FBU2dCLFFBQVEsQ0FBQ3pELE9BQU9qSSxLQUFLa21CLGVBQWUsQ0FBQ3hiLEtBQUssa0JBQWtCZ0IsUUFBUSxDQUFDOEcsU0FBU3hTLEtBQUt1Z0IsUUFBUS9OLFdBQVcsQ0FBQzlILEtBQUssUUFBUWdCLFFBQVEsQ0FBQzJELFFBQVEsSUFBSXJQLEtBQUtnYyxZQUFZakUsZUFBZSxDQUFDck4sS0FBSyxXQUFXQyxTQUFRLEVBQUdDLE1BQU0sYUFBYUMsR0FBR2pMLEdBQUdJLEtBQUt3eUIsNkJBQTZCNXlCLEtBQUs0VixjQUFjNVYsSUFBSUEsRUFBRThMLFFBQVFxRCxZQUFZblAsRUFBRW1QLFdBQVcvTyxLQUFLd3lCLDZCQUE2QjV5QixLQUFLLE1BQU0sSUFBSU0sS0FBSyxtQkFBbUJGLEtBQUt1Z0IsUUFBUTJFLGFBQWFsbEIsS0FBS3VnQixRQUFRMkUsYUFBYWhsQixHQUFHRixLQUFLdWdCLFFBQVEyRSxjQUFjNE0sb0JBQW9CbHlCLEdBQUdJLEtBQUtxeEIsZ0JBQWdCbmEsVUFBVTFDLElBQUksR0FBR3hVLEtBQUt5eUIsMEJBQTBCenlCLEtBQUtzeUIsaUJBQWlCMXlCLE1BQU1peUIsZUFBZWp5QixHQUFHLE9BQU95dEIsR0FBR3p0QixFQUFFUSxlQUFld3dCLGdCQUFnQjV3QixLQUFLdWdCLFFBQVEzRixRQUFRN08sTUFBTSxLQUFLZCxTQUFTckwsSUFBSSxHQUFHLFVBQVVBLEVBQUV3YSxHQUFHTSxHQUFHMWEsS0FBS2ljLFNBQVNqYyxLQUFLZ2MsWUFBWTdGLE1BQU1xWixNQUFNeHZCLEtBQUt1Z0IsUUFBUXdNLFVBQVVudEIsR0FBR0ksS0FBS3FkLE9BQU96ZCxVQUFVLEdBQUcsV0FBV0EsRUFBRSxDQUFDLE1BQU1NLEVBQUVOLElBQUl3d0IsR0FBR3B3QixLQUFLZ2MsWUFBWTdGLE1BQU13WixXQUFXM3ZCLEtBQUtnYyxZQUFZN0YsTUFBTXNaLFFBQVFodkIsRUFBRWIsSUFBSXd3QixHQUFHcHdCLEtBQUtnYyxZQUFZN0YsTUFBTXlaLFdBQVc1dkIsS0FBS2djLFlBQVk3RixNQUFNdVosU0FBU3RWLEdBQUdNLEdBQUcxYSxLQUFLaWMsU0FBUy9iLEVBQUVGLEtBQUt1Z0IsUUFBUXdNLFVBQVVudEIsR0FBR0ksS0FBS214QixPQUFPdnhCLEtBQUt3YSxHQUFHTSxHQUFHMWEsS0FBS2ljLFNBQVN4YixFQUFFVCxLQUFLdWdCLFFBQVF3TSxVQUFVbnRCLEdBQUdJLEtBQUtveEIsT0FBT3h4QixTQUFTSSxLQUFLc3hCLGtCQUFrQixLQUFLdHhCLEtBQUtpYyxVQUFVamMsS0FBS3lILFFBQVEyUyxHQUFHTSxHQUFHMWEsS0FBS2ljLFNBQVNZLFFBQVFxVCxJQUFJQyxHQUFHbndCLEtBQUtzeEIsbUJBQW1CdHhCLEtBQUt1Z0IsUUFBUXdNLFNBQVMvc0IsS0FBS3VnQixRQUFRLElBQUl2Z0IsS0FBS3VnQixRQUFRM0YsUUFBUSxTQUFTbVMsU0FBUyxJQUFJL3NCLEtBQUsweUIsWUFBWUEsWUFBWSxNQUFNOXlCLEVBQUVJLEtBQUtpYyxTQUFTdEcsYUFBYSxTQUFTelYsU0FBU0YsS0FBS2ljLFNBQVN0RyxhQUFhLDJCQUEyQi9WLEdBQUcsV0FBV00sS0FBS0YsS0FBS2ljLFNBQVMxUSxhQUFhLHlCQUF5QjNMLEdBQUcsS0FBS0EsR0FBR0ksS0FBS2ljLFNBQVN0RyxhQUFhLGVBQWUzVixLQUFLaWMsU0FBU29XLGFBQWFyeUIsS0FBS2ljLFNBQVMxUSxhQUFhLGFBQWEzTCxHQUFHSSxLQUFLaWMsU0FBUzFRLGFBQWEsUUFBUSxLQUFLNGxCLE9BQU92eEIsRUFBRU0sR0FBR0EsRUFBRUYsS0FBS2d4Qiw2QkFBNkJweEIsRUFBRU0sR0FBR04sSUFBSU0sRUFBRXd3QixlQUFlLFlBQVk5d0IsRUFBRTBhLEtBQUsrVixHQUFHRCxLQUFJLEdBQUlsd0IsRUFBRW14QixnQkFBZ0JuYSxVQUFVL0osU0FBUzJpQixLQUFLNXZCLEVBQUV1d0IsY0FBY1YsR0FBRzd2QixFQUFFdXdCLFlBQVlWLElBQUk5TixhQUFhL2hCLEVBQUVzd0IsVUFBVXR3QixFQUFFdXdCLFlBQVlWLEdBQUc3dkIsRUFBRXFnQixRQUFRc00sT0FBTzNzQixFQUFFcWdCLFFBQVFzTSxNQUFNL0ksS0FBSzVqQixFQUFFc3dCLFNBQVM3WCxZQUFXLEtBQU16WSxFQUFFdXdCLGNBQWNWLElBQUk3dkIsRUFBRTRqQixTQUFTNWpCLEVBQUVxZ0IsUUFBUXNNLE1BQU0vSSxNQUFNNWpCLEVBQUU0akIsUUFBUXNOLE9BQU94eEIsRUFBRU0sR0FBR0EsRUFBRUYsS0FBS2d4Qiw2QkFBNkJweEIsRUFBRU0sR0FBR04sSUFBSU0sRUFBRXd3QixlQUFlLGFBQWE5d0IsRUFBRTBhLEtBQUsrVixHQUFHRCxJQUFJbHdCLEVBQUUrYixTQUFTOU8sU0FBU3ZOLEVBQUVvYSxnQkFBZ0I5WixFQUFFZ3hCLHlCQUF5QmpQLGFBQWEvaEIsRUFBRXN3QixVQUFVdHdCLEVBQUV1d0IsWUFBWVQsR0FBRzl2QixFQUFFcWdCLFFBQVFzTSxPQUFPM3NCLEVBQUVxZ0IsUUFBUXNNLE1BQU1wbEIsS0FBS3ZILEVBQUVzd0IsU0FBUzdYLFlBQVcsS0FBTXpZLEVBQUV1d0IsY0FBY1QsSUFBSTl2QixFQUFFdUgsU0FBU3ZILEVBQUVxZ0IsUUFBUXNNLE1BQU1wbEIsTUFBTXZILEVBQUV1SCxRQUFReXBCLHVCQUF1QixJQUFJLE1BQU10eEIsS0FBS0ksS0FBSzB3QixlQUFlLEdBQUcxd0IsS0FBSzB3QixlQUFlOXdCLEdBQUcsT0FBTSxFQUFHLE9BQU0sRUFBRzRnQixXQUFXNWdCLEdBQUcsTUFBTU0sRUFBRXNkLEdBQUdHLGtCQUFrQjNkLEtBQUtpYyxVQUFVLE9BQU9uYixPQUFPaUssS0FBSzdLLEdBQUcrSyxTQUFTckwsSUFBSTZzQixHQUFHaFksSUFBSTdVLFdBQVdNLEVBQUVOLE9BQU9BLEVBQUUsSUFBSUksS0FBS2djLFlBQVkrRSxXQUFXN2dCLEtBQUssaUJBQWlCTixHQUFHQSxFQUFFQSxFQUFFLEtBQUtvdEIsV0FBVSxJQUFLcHRCLEVBQUVvdEIsVUFBVXBmLFNBQVNrRSxLQUFLeUUsR0FBRzNXLEVBQUVvdEIsV0FBVyxpQkFBaUJwdEIsRUFBRWl0QixRQUFRanRCLEVBQUVpdEIsTUFBTSxDQUFDL0ksS0FBS2xrQixFQUFFaXRCLE1BQU1wbEIsS0FBSzdILEVBQUVpdEIsUUFBUSxpQkFBaUJqdEIsRUFBRWd0QixRQUFRaHRCLEVBQUVndEIsTUFBTWh0QixFQUFFZ3RCLE1BQU0zaUIsWUFBWSxpQkFBaUJySyxFQUFFK3lCLFVBQVUveUIsRUFBRSt5QixRQUFRL3lCLEVBQUUreUIsUUFBUTFvQixZQUFZdU0sR0FBR2dXLEdBQUc1c0IsRUFBRUksS0FBS2djLFlBQVkySixhQUFhL2xCLEVBQUVzdEIsV0FBV3R0QixFQUFFK3NCLFNBQVNQLEdBQUd4c0IsRUFBRStzQixTQUFTL3NCLEVBQUV3dEIsVUFBVXh0QixFQUFFdXRCLGFBQWF2dEIsRUFBRTJ5QixxQkFBcUIsTUFBTTN5QixFQUFFLEdBQUcsSUFBSSxNQUFNTSxLQUFLRixLQUFLdWdCLFFBQVF2Z0IsS0FBS2djLFlBQVkrRSxRQUFRN2dCLEtBQUtGLEtBQUt1Z0IsUUFBUXJnQixLQUFLTixFQUFFTSxHQUFHRixLQUFLdWdCLFFBQVFyZ0IsSUFBSSxPQUFPTixFQUFFcXlCLGlCQUFpQixNQUFNcnlCLEVBQUVJLEtBQUtxeEIsZ0JBQWdCbnhCLEVBQUUsSUFBSXdXLE9BQU8sVUFBVTFXLEtBQUt5eUIsNkJBQTZCLEtBQUtoeUIsRUFBRWIsRUFBRStWLGFBQWEsU0FBU2MsTUFBTXZXLEdBQUcsT0FBT08sR0FBR0EsRUFBRTBTLE9BQU8sR0FBRzFTLEVBQUV5VSxLQUFLdFYsR0FBR0EsRUFBRWtXLFNBQVM3SyxTQUFTL0ssR0FBR04sRUFBRXNYLFVBQVUyRSxPQUFPM2IsS0FBS3V5Qix1QkFBdUIsTUFBTSxhQUFhRCw2QkFBNkI1eUIsR0FBRyxNQUFNa0wsTUFBTTVLLEdBQUdOLEVBQUVNLElBQUlGLEtBQUsyd0IsSUFBSXp3QixFQUFFOEssU0FBUzNDLE9BQU9ySSxLQUFLaXlCLGlCQUFpQmp5QixLQUFLOHhCLG9CQUFvQjl4QixLQUFLNnhCLGVBQWUzeEIsRUFBRTZPLGFBQWF3aUIsaUJBQWlCdnhCLEtBQUtzbEIsVUFBVXRsQixLQUFLc2xCLFFBQVEvUCxVQUFVdlYsS0FBS3NsQixRQUFRLE1BQU0vSSx1QkFBdUIzYyxHQUFHLE9BQU9JLEtBQUtrZCxNQUFLLFdBQVksTUFBTWhkLEVBQUVvd0IsR0FBR3hULG9CQUFvQjljLEtBQUtKLEdBQUcsR0FBRyxpQkFBaUJBLEVBQUUsQ0FBQyxRQUFHLElBQVNNLEVBQUVOLEdBQUcsTUFBTSxJQUFJK1csVUFBVSxvQkFBb0IvVyxNQUFNTSxFQUFFTixVQUFVa1ksR0FBR3dZLElBQUksTUFBTXNDLEdBQUcsSUFBSXRDLEdBQUd2UCxRQUFRaFMsVUFBVSxRQUFROUcsT0FBTyxDQUFDLEVBQUUsR0FBRzJTLFFBQVEsUUFBUStYLFFBQVEsR0FBR2hHLFNBQVMsK0lBQStJa0csR0FBRyxJQUFJdkMsR0FBRzNLLFlBQVlnTixRQUFRLDZCQUE2QkcsR0FBRyxDQUFDM0QsS0FBSyxrQkFBa0JDLE9BQU8sb0JBQW9CQyxLQUFLLGtCQUFrQkMsTUFBTSxtQkFBbUJDLFNBQVMsc0JBQXNCQyxNQUFNLG1CQUFtQkMsUUFBUSxxQkFBcUJDLFNBQVMsc0JBQXNCQyxXQUFXLHdCQUF3QkMsV0FBVyx5QkFBeUIsTUFBTW1ELFdBQVd6QyxHQUFjdlAscUJBQVUsT0FBTzZSLEdBQWM3YSxrQkFBTyxNQUFNLFVBQXFCNUIsbUJBQVEsT0FBTzJjLEdBQWNuTix5QkFBYyxPQUFPa04sR0FBR3JCLGdCQUFnQixPQUFPeHhCLEtBQUt5eEIsWUFBWXp4QixLQUFLZ3pCLGNBQWNkLFdBQVd0eUIsR0FBR0ksS0FBS215Qix1QkFBdUJ2eUIsRUFBRUksS0FBS3l4QixXQUFXLG1CQUFtQnp4QixLQUFLbXlCLHVCQUF1QnZ5QixFQUFFSSxLQUFLZ3pCLGNBQWMsaUJBQWlCQSxjQUFjLE9BQU9oekIsS0FBSyt4Qix5QkFBeUIveEIsS0FBS3VnQixRQUFRb1MsU0FBU0YsdUJBQXVCLE1BQU0sYUFBYWxXLHVCQUF1QjNjLEdBQUcsT0FBT0ksS0FBS2tkLE1BQUssV0FBWSxNQUFNaGQsRUFBRTZ5QixHQUFHalcsb0JBQW9COWMsS0FBS0osR0FBRyxHQUFHLGlCQUFpQkEsRUFBRSxDQUFDLFFBQUcsSUFBU00sRUFBRU4sR0FBRyxNQUFNLElBQUkrVyxVQUFVLG9CQUFvQi9XLE1BQU1NLEVBQUVOLFVBQVVrWSxHQUFHaWIsSUFBSSxNQUFNRSxHQUFHLFlBQVlDLEdBQUcsQ0FBQ2pyQixPQUFPLEdBQUdrckIsT0FBTyxPQUFPemEsT0FBTyxJQUFJMGEsR0FBRyxDQUFDbnJCLE9BQU8sU0FBU2tyQixPQUFPLFNBQVN6YSxPQUFPLG9CQUFvQjJhLEdBQUcsU0FBU0MsR0FBRyw4Q0FBOENDLEdBQUcsV0FBVyxNQUFNQyxXQUFXelgsR0FBR0MsWUFBWXBjLEVBQUVNLEdBQUc0ZixNQUFNbGdCLEdBQUdJLEtBQUt5ekIsZUFBZSxTQUFTenpCLEtBQUtpYyxTQUFTVyxRQUFRNVMsT0FBT2hLLEtBQUtpYyxTQUFTamMsS0FBS3VnQixRQUFRdmdCLEtBQUt3Z0IsV0FBV3RnQixHQUFHRixLQUFLMHpCLFNBQVMsR0FBRzF6QixLQUFLMnpCLFNBQVMsR0FBRzN6QixLQUFLNHpCLGNBQWMsS0FBSzV6QixLQUFLNnpCLGNBQWMsRUFBRXpaLEdBQUdNLEdBQUcxYSxLQUFLeXpCLGVBQWUsdUJBQXNCLElBQUt6ekIsS0FBSzh6QixhQUFhOXpCLEtBQUsrekIsVUFBVS96QixLQUFLOHpCLFdBQXNCL1MscUJBQVUsT0FBT21TLEdBQWNuYixrQkFBTyxPQUFPa2IsR0FBR2MsVUFBVSxNQUFNbjBCLEVBQUVJLEtBQUt5ekIsaUJBQWlCenpCLEtBQUt5ekIsZUFBZXpwQixPQUFPLFNBQVN1cEIsR0FBR3J6QixFQUFFLFNBQVNGLEtBQUt1Z0IsUUFBUTRTLE9BQU92ekIsRUFBRUksS0FBS3VnQixRQUFRNFMsT0FBTzF5QixFQUFFUCxJQUFJcXpCLEdBQUd2ekIsS0FBS2cwQixnQkFBZ0IsRUFBRWgwQixLQUFLMHpCLFNBQVMsR0FBRzF6QixLQUFLMnpCLFNBQVMsR0FBRzN6QixLQUFLNnpCLGNBQWM3ekIsS0FBS2kwQixtQkFBbUJsVyxHQUFHdEssS0FBSzZmLEdBQUd0ekIsS0FBS3VnQixRQUFRN0gsUUFBUXhELEtBQUt0VixJQUFJLE1BQU1jLEVBQUVxVixHQUFHblcsR0FBR2UsRUFBRUQsRUFBRXFkLEdBQUdDLFFBQVF0ZCxHQUFHLEtBQUssR0FBR0MsRUFBRSxDQUFDLE1BQU1mLEVBQUVlLEVBQUU2TCx3QkFBd0IsR0FBRzVNLEVBQUUrTSxPQUFPL00sRUFBRWdOLE9BQU8sTUFBTSxDQUFDNFEsR0FBR3RkLEdBQUdTLEdBQUd5SSxJQUFJM0ksRUFBRUMsR0FBRyxPQUFPLFFBQVErTixRQUFRN08sR0FBR0EsSUFBSXdULE1BQUssQ0FBRXhULEVBQUVNLElBQUlOLEVBQUUsR0FBR00sRUFBRSxLQUFLK0ssU0FBU3JMLElBQUlJLEtBQUswekIsU0FBU3BnQixLQUFLMVQsRUFBRSxJQUFJSSxLQUFLMnpCLFNBQVNyZ0IsS0FBSzFULEVBQUUsT0FBT3VjLFVBQVUvQixHQUFHQyxJQUFJcmEsS0FBS3l6QixlQUFlLGlCQUFpQjNULE1BQU0zRCxVQUFVcUUsV0FBVzVnQixHQUFHLE9BQU9BLEVBQUUsSUFBSXN6QixNQUFNMVYsR0FBR0csa0JBQWtCM2QsS0FBS2ljLGFBQWEsaUJBQWlCcmMsR0FBR0EsRUFBRUEsRUFBRSxLQUFLOFksT0FBT25DLEdBQUczVyxFQUFFOFksU0FBUzlLLFNBQVNDLGdCQUFnQjJJLEdBQUd5YyxHQUFHcnpCLEVBQUV3ekIsSUFBSXh6QixFQUFFbzBCLGdCQUFnQixPQUFPaDBCLEtBQUt5ekIsaUJBQWlCenBCLE9BQU9oSyxLQUFLeXpCLGVBQWVuaUIsWUFBWXRSLEtBQUt5ekIsZUFBZXBpQixVQUFVNGlCLG1CQUFtQixPQUFPajBCLEtBQUt5ekIsZUFBZXBoQixjQUFjcEcsS0FBS0MsSUFBSTBCLFNBQVNrRSxLQUFLTyxhQUFhekUsU0FBU0MsZ0JBQWdCd0UsY0FBYzZoQixtQkFBbUIsT0FBT2wwQixLQUFLeXpCLGlCQUFpQnpwQixPQUFPQSxPQUFPbXFCLFlBQVluMEIsS0FBS3l6QixlQUFlam5CLHdCQUF3QkksT0FBT2tuQixXQUFXLE1BQU1sMEIsRUFBRUksS0FBS2cwQixnQkFBZ0JoMEIsS0FBS3VnQixRQUFRdFksT0FBTy9ILEVBQUVGLEtBQUtpMEIsbUJBQW1CeHpCLEVBQUVULEtBQUt1Z0IsUUFBUXRZLE9BQU8vSCxFQUFFRixLQUFLazBCLG1CQUFtQixHQUFHbDBCLEtBQUs2ekIsZ0JBQWdCM3pCLEdBQUdGLEtBQUsrekIsVUFBVW4wQixHQUFHYSxFQUFFLENBQUMsTUFBTWIsRUFBRUksS0FBSzJ6QixTQUFTM3pCLEtBQUsyekIsU0FBU3hnQixPQUFPLEdBQUduVCxLQUFLNHpCLGdCQUFnQmgwQixHQUFHSSxLQUFLbzBCLFVBQVV4MEIsT0FBTyxDQUFDLEdBQUdJLEtBQUs0ekIsZUFBZWgwQixFQUFFSSxLQUFLMHpCLFNBQVMsSUFBSTF6QixLQUFLMHpCLFNBQVMsR0FBRyxFQUFFLE9BQU8xekIsS0FBSzR6QixjQUFjLFVBQVU1ekIsS0FBS3EwQixTQUFTLElBQUksSUFBSW4wQixFQUFFRixLQUFLMHpCLFNBQVN2Z0IsT0FBT2pULEtBQUtGLEtBQUs0ekIsZ0JBQWdCNXpCLEtBQUsyekIsU0FBU3p6QixJQUFJTixHQUFHSSxLQUFLMHpCLFNBQVN4ekIsVUFBSyxJQUFTRixLQUFLMHpCLFNBQVN4ekIsRUFBRSxJQUFJTixFQUFFSSxLQUFLMHpCLFNBQVN4ekIsRUFBRSxLQUFLRixLQUFLbzBCLFVBQVVwMEIsS0FBSzJ6QixTQUFTenpCLEtBQUtrMEIsVUFBVXgwQixHQUFHSSxLQUFLNHpCLGNBQWNoMEIsRUFBRUksS0FBS3EwQixTQUFTLE1BQU1uMEIsRUFBRW96QixHQUFHdm5CLE1BQU0sS0FBS21KLEtBQUtoVixHQUFHLEdBQUdBLHFCQUFxQk4sT0FBT00sV0FBV04sUUFBUWEsRUFBRXNkLEdBQUdDLFFBQVE5ZCxFQUFFdWUsS0FBSyxLQUFLemUsS0FBS3VnQixRQUFRN0gsUUFBUWpZLEVBQUV5VyxVQUFVMUMsSUFBSTZlLElBQUk1eUIsRUFBRXlXLFVBQVUvSixTQUFTLGlCQUFpQjRRLEdBQUdDLFFBQVEsbUJBQW1CdmQsRUFBRW9jLFFBQVEsY0FBYzNGLFVBQVUxQyxJQUFJNmUsSUFBSXRWLEdBQUdJLFFBQVExZCxFQUFFLHFCQUFxQndLLFNBQVNyTCxJQUFJbWUsR0FBR0ssS0FBS3hlLEVBQUUsK0JBQStCcUwsU0FBU3JMLEdBQUdBLEVBQUVzWCxVQUFVMUMsSUFBSTZlLE1BQU10VixHQUFHSyxLQUFLeGUsRUFBRSxhQUFhcUwsU0FBU3JMLElBQUltZSxHQUFHRSxTQUFTcmUsRUFBRSxhQUFhcUwsU0FBU3JMLEdBQUdBLEVBQUVzWCxVQUFVMUMsSUFBSTZlLFlBQVlqWixHQUFHUSxRQUFRNWEsS0FBS3l6QixlQUFlLHdCQUF3QixDQUFDelosY0FBY3BhLElBQUl5MEIsU0FBU3RXLEdBQUd0SyxLQUFLNmYsR0FBR3R6QixLQUFLdWdCLFFBQVE3SCxRQUFRakssUUFBUTdPLEdBQUdBLEVBQUVzWCxVQUFVL0osU0FBU2ttQixNQUFNcG9CLFNBQVNyTCxHQUFHQSxFQUFFc1gsVUFBVTJFLE9BQU93WCxNQUFNOVcsdUJBQXVCM2MsR0FBRyxPQUFPSSxLQUFLa2QsTUFBSyxXQUFZLE1BQU1oZCxFQUFFc3pCLEdBQUcxVyxvQkFBb0I5YyxLQUFLSixHQUFHLEdBQUcsaUJBQWlCQSxFQUFFLENBQUMsUUFBRyxJQUFTTSxFQUFFTixHQUFHLE1BQU0sSUFBSStXLFVBQVUsb0JBQW9CL1csTUFBTU0sRUFBRU4sVUFBVXdhLEdBQUdNLEdBQUcxUSxPQUFPLDhCQUE2QixLQUFNK1QsR0FBR3RLLEtBQUssMEJBQTBCeEksU0FBU3JMLEdBQUcsSUFBSTR6QixHQUFHNXpCLFFBQVFrWSxHQUFHMGIsSUFBSSxNQUFNYyxHQUFHLFNBQVNDLEdBQUcsT0FBT0MsR0FBRyxPQUFPQyxHQUFHLFVBQVVDLEdBQUcsd0JBQXdCLE1BQU1DLFdBQVc1WSxHQUFjaEUsa0JBQU8sTUFBTSxNQUFNK0wsT0FBTyxHQUFHOWpCLEtBQUtpYyxTQUFTNU8sWUFBWXJOLEtBQUtpYyxTQUFTNU8sV0FBV2lKLFdBQVdVLEtBQUtDLGNBQWNqWCxLQUFLaWMsU0FBUy9FLFVBQVUvSixTQUFTbW5CLElBQUksT0FBTyxJQUFJMTBCLEVBQUUsTUFBTU0sRUFBRThWLEdBQUdoVyxLQUFLaWMsVUFBVXhiLEVBQUVULEtBQUtpYyxTQUFTWSxRQUFRLHFCQUFxQixHQUFHcGMsRUFBRSxDQUFDLE1BQU1QLEVBQUUsT0FBT08sRUFBRXFKLFVBQVUsT0FBT3JKLEVBQUVxSixTQUFTNHFCLEdBQUdELEdBQUc3MEIsRUFBRW1lLEdBQUd0SyxLQUFLdlQsRUFBRU8sR0FBR2IsRUFBRUEsRUFBRUEsRUFBRXVULE9BQU8sR0FBRyxNQUFNelMsRUFBRWQsRUFBRXdhLEdBQUdRLFFBQVFoYixFQUFFLGNBQWMsQ0FBQ29hLGNBQWNoYSxLQUFLaWMsV0FBVyxLQUFLLEdBQUc3QixHQUFHUSxRQUFRNWEsS0FBS2ljLFNBQVMsY0FBYyxDQUFDakMsY0FBY3BhLElBQUkwYixrQkFBa0IsT0FBTzVhLEdBQUdBLEVBQUU0YSxpQkFBaUIsT0FBT3RiLEtBQUtvMEIsVUFBVXAwQixLQUFLaWMsU0FBU3hiLEdBQUcsTUFBTUUsRUFBRSxLQUFLeVosR0FBR1EsUUFBUWhiLEVBQUUsZ0JBQWdCLENBQUNvYSxjQUFjaGEsS0FBS2ljLFdBQVc3QixHQUFHUSxRQUFRNWEsS0FBS2ljLFNBQVMsZUFBZSxDQUFDakMsY0FBY3BhLEtBQUtNLEVBQUVGLEtBQUtvMEIsVUFBVWwwQixFQUFFQSxFQUFFbU4sV0FBVzFNLEdBQUdBLElBQUl5ekIsVUFBVXgwQixFQUFFTSxFQUFFTyxHQUFHLE1BQU1DLElBQUlSLEdBQUcsT0FBT0EsRUFBRTRKLFVBQVUsT0FBTzVKLEVBQUU0SixTQUFTaVUsR0FBR0UsU0FBUy9kLEVBQUV1MEIsSUFBSTFXLEdBQUd0SyxLQUFLaWhCLEdBQUd4MEIsSUFBSSxHQUFHUyxFQUFFRixHQUFHQyxHQUFHQSxFQUFFd1csVUFBVS9KLFNBQVNvbkIsSUFBSTN6QixFQUFFLElBQUlaLEtBQUs0MEIsb0JBQW9CaDFCLEVBQUVjLEVBQUVELEdBQUdDLEdBQUdDLEdBQUdELEVBQUV3VyxVQUFVMkUsT0FBTzJZLElBQUl4MEIsS0FBS3NjLGVBQWUxYixFQUFFaEIsR0FBRSxJQUFLZ0IsSUFBSWcwQixvQkFBb0JoMUIsRUFBRU0sRUFBRU8sR0FBRyxHQUFHUCxFQUFFLENBQUNBLEVBQUVnWCxVQUFVMkUsT0FBT3lZLElBQUksTUFBTTEwQixFQUFFbWUsR0FBR0MsUUFBUSxrQ0FBa0M5ZCxFQUFFbU4sWUFBWXpOLEdBQUdBLEVBQUVzWCxVQUFVMkUsT0FBT3lZLElBQUksUUFBUXAwQixFQUFFeVYsYUFBYSxTQUFTelYsRUFBRXFMLGFBQWEsaUJBQWdCLEdBQUkzTCxFQUFFc1gsVUFBVTFDLElBQUk4ZixJQUFJLFFBQVExMEIsRUFBRStWLGFBQWEsU0FBUy9WLEVBQUUyTCxhQUFhLGlCQUFnQixHQUFJaU0sR0FBRzVYLEdBQUdBLEVBQUVzWCxVQUFVL0osU0FBU29uQixLQUFLMzBCLEVBQUVzWCxVQUFVMUMsSUFBSWdnQixJQUFJLElBQUk5ekIsRUFBRWQsRUFBRXlOLFdBQVcsR0FBRzNNLEdBQUcsT0FBT0EsRUFBRW9KLFdBQVdwSixFQUFFQSxFQUFFMk0sWUFBWTNNLEdBQUdBLEVBQUV3VyxVQUFVL0osU0FBUyxpQkFBaUIsQ0FBQyxNQUFNak4sRUFBRU4sRUFBRWlkLFFBQVEsYUFBYTNjLEdBQUc2ZCxHQUFHdEssS0FBSyxtQkFBbUJ2VCxHQUFHK0ssU0FBU3JMLEdBQUdBLEVBQUVzWCxVQUFVMUMsSUFBSThmLE1BQU0xMEIsRUFBRTJMLGFBQWEsaUJBQWdCLEdBQUk5SyxHQUFHQSxJQUFJOGIsdUJBQXVCM2MsR0FBRyxPQUFPSSxLQUFLa2QsTUFBSyxXQUFZLE1BQU1oZCxFQUFFeTBCLEdBQUc3WCxvQkFBb0I5YyxNQUFNLEdBQUcsaUJBQWlCSixFQUFFLENBQUMsUUFBRyxJQUFTTSxFQUFFTixHQUFHLE1BQU0sSUFBSStXLFVBQVUsb0JBQW9CL1csTUFBTU0sRUFBRU4sVUFBVXdhLEdBQUdNLEdBQUc5TSxTQUFTLHdCQUF3Qiw0RUFBMkUsU0FBVWhPLEdBQUcsQ0FBQyxJQUFJLFFBQVFnVyxTQUFTNVYsS0FBSzRjLFVBQVVoZCxFQUFFeWIsaUJBQWlCdEUsR0FBRy9XLE9BQU8yMEIsR0FBRzdYLG9CQUFvQjljLE1BQU04akIsVUFBVWhNLEdBQUc2YyxJQUFJLE1BQU1FLEdBQUcsUUFBUUMsR0FBRyxPQUFPQyxHQUFHLE9BQU9DLEdBQUcsVUFBVUMsR0FBRyxDQUFDdkksVUFBVSxVQUFVd0ksU0FBUyxVQUFVckksTUFBTSxVQUFVc0ksR0FBRyxDQUFDekksV0FBVSxFQUFHd0ksVUFBUyxFQUFHckksTUFBTSxLQUFLLE1BQU11SSxXQUFXclosR0FBR0MsWUFBWXBjLEVBQUVNLEdBQUc0ZixNQUFNbGdCLEdBQUdJLEtBQUt1Z0IsUUFBUXZnQixLQUFLd2dCLFdBQVd0Z0IsR0FBR0YsS0FBS3d3QixTQUFTLEtBQUt4d0IsS0FBS3ExQixzQkFBcUIsRUFBR3IxQixLQUFLczFCLHlCQUF3QixFQUFHdDFCLEtBQUs0d0IsZ0JBQTJCakwseUJBQWMsT0FBT3NQLEdBQWNsVSxxQkFBVSxPQUFPb1UsR0FBY3BkLGtCQUFPLE9BQU84YyxHQUFHL1EsT0FBTzFKLEdBQUdRLFFBQVE1YSxLQUFLaWMsU0FBUyxpQkFBaUJYLG1CQUFtQnRiLEtBQUt1MUIsZ0JBQWdCdjFCLEtBQUt1Z0IsUUFBUW1NLFdBQVcxc0IsS0FBS2ljLFNBQVMvRSxVQUFVMUMsSUFBSSxRQUFReFUsS0FBS2ljLFNBQVMvRSxVQUFVMkUsT0FBT2laLElBQUl0ZCxHQUFHeFgsS0FBS2ljLFVBQVVqYyxLQUFLaWMsU0FBUy9FLFVBQVUxQyxJQUFJdWdCLElBQUkvMEIsS0FBS2ljLFNBQVMvRSxVQUFVMUMsSUFBSXdnQixJQUFJaDFCLEtBQUtzYyxnQkFBZSxLQUFNdGMsS0FBS2ljLFNBQVMvRSxVQUFVMkUsT0FBT21aLElBQUk1YSxHQUFHUSxRQUFRNWEsS0FBS2ljLFNBQVMsa0JBQWtCamMsS0FBS3cxQix1QkFBdUJ4MUIsS0FBS2ljLFNBQVNqYyxLQUFLdWdCLFFBQVFtTSxZQUFZamxCLE9BQU96SCxLQUFLaWMsU0FBUy9FLFVBQVUvSixTQUFTNG5CLE1BQU0zYSxHQUFHUSxRQUFRNWEsS0FBS2ljLFNBQVMsaUJBQWlCWCxtQkFBbUJ0YixLQUFLaWMsU0FBUy9FLFVBQVUxQyxJQUFJd2dCLElBQUloMUIsS0FBS3NjLGdCQUFlLEtBQU10YyxLQUFLaWMsU0FBUy9FLFVBQVUxQyxJQUFJc2dCLElBQUk5MEIsS0FBS2ljLFNBQVMvRSxVQUFVMkUsT0FBT21aLElBQUloMUIsS0FBS2ljLFNBQVMvRSxVQUFVMkUsT0FBT2taLElBQUkzYSxHQUFHUSxRQUFRNWEsS0FBS2ljLFNBQVMscUJBQXFCamMsS0FBS2ljLFNBQVNqYyxLQUFLdWdCLFFBQVFtTSxhQUFhdlEsVUFBVW5jLEtBQUt1MUIsZ0JBQWdCdjFCLEtBQUtpYyxTQUFTL0UsVUFBVS9KLFNBQVM0bkIsS0FBSy8wQixLQUFLaWMsU0FBUy9FLFVBQVUyRSxPQUFPa1osSUFBSWpWLE1BQU0zRCxVQUFVcUUsV0FBVzVnQixHQUFHLE9BQU9BLEVBQUUsSUFBSXUxQixNQUFNM1gsR0FBR0csa0JBQWtCM2QsS0FBS2ljLGFBQWEsaUJBQWlCcmMsR0FBR0EsRUFBRUEsRUFBRSxJQUFJNFcsR0FBR3FlLEdBQUdqMUIsRUFBRUksS0FBS2djLFlBQVkySixhQUFhL2xCLEVBQUU0MUIscUJBQXFCeDFCLEtBQUt1Z0IsUUFBUTJVLFdBQVdsMUIsS0FBS3ExQixzQkFBc0JyMUIsS0FBS3MxQiwwQkFBMEJ0MUIsS0FBS3d3QixTQUFTN1gsWUFBVyxLQUFNM1ksS0FBS3lILFNBQVN6SCxLQUFLdWdCLFFBQVFzTSxTQUFTNEksZUFBZTcxQixFQUFFTSxHQUFHLE9BQU9OLEVBQUUwYSxNQUFNLElBQUksWUFBWSxJQUFJLFdBQVd0YSxLQUFLcTFCLHFCQUFxQm4xQixFQUFFLE1BQU0sSUFBSSxVQUFVLElBQUksV0FBV0YsS0FBS3MxQix3QkFBd0JwMUIsRUFBRSxHQUFHQSxFQUFFLFlBQVlGLEtBQUt1MUIsZ0JBQWdCLE1BQU05MEIsRUFBRWIsRUFBRW9hLGNBQWNoYSxLQUFLaWMsV0FBV3hiLEdBQUdULEtBQUtpYyxTQUFTOU8sU0FBUzFNLElBQUlULEtBQUt3MUIscUJBQXFCNUUsZ0JBQWdCeFcsR0FBR00sR0FBRzFhLEtBQUtpYyxTQUFTLHNCQUFzQnJjLEdBQUdJLEtBQUt5MUIsZUFBZTcxQixHQUFFLEtBQU13YSxHQUFHTSxHQUFHMWEsS0FBS2ljLFNBQVMscUJBQXFCcmMsR0FBR0ksS0FBS3kxQixlQUFlNzFCLEdBQUUsS0FBTXdhLEdBQUdNLEdBQUcxYSxLQUFLaWMsU0FBUyxvQkFBb0JyYyxHQUFHSSxLQUFLeTFCLGVBQWU3MUIsR0FBRSxLQUFNd2EsR0FBR00sR0FBRzFhLEtBQUtpYyxTQUFTLHFCQUFxQnJjLEdBQUdJLEtBQUt5MUIsZUFBZTcxQixHQUFFLEtBQU0yMUIsZ0JBQWdCdFQsYUFBYWppQixLQUFLd3dCLFVBQVV4d0IsS0FBS3d3QixTQUFTLEtBQUtqVSx1QkFBdUIzYyxHQUFHLE9BQU9JLEtBQUtrZCxNQUFLLFdBQVksTUFBTWhkLEVBQUVrMUIsR0FBR3RZLG9CQUFvQjljLEtBQUtKLEdBQUcsR0FBRyxpQkFBaUJBLEVBQUUsQ0FBQyxRQUFHLElBQVNNLEVBQUVOLEdBQUcsTUFBTSxJQUFJK1csVUFBVSxvQkFBb0IvVyxNQUFNTSxFQUFFTixHQUFHSSxXQUFXMmMsR0FBR3lZLElBQUl0ZCxHQUFHc2QsSUFBSSxJQUFJTSxHQUFHOXpCLEdBQUcsV0FBVyxTQUFTaEMsSUFBSUksS0FBS2llLFNBQVMsR0FBRyxPQUFPcmUsRUFBRUUsVUFBVTYxQixnQkFBZ0IsU0FBUy8xQixFQUFFTSxHQUFHRixLQUFLcVAsUUFBUXNCLGlCQUFpQi9RLEVBQUVNLElBQUlZLE9BQU9DLGVBQWVuQixFQUFFRSxVQUFVLFFBQVEsQ0FBQ21CLElBQUksV0FBVyxPQUFPakIsS0FBS3FQLFFBQVF1ZCxPQUFPcFosSUFBSSxTQUFTNVQsR0FBR0ksS0FBS3FQLFFBQVF1ZCxNQUFNaHRCLEdBQUdvQixZQUFXLEVBQUc0MEIsY0FBYSxJQUFLOTBCLE9BQU9DLGVBQWVuQixFQUFFRSxVQUFVLGlCQUFpQixDQUFDbUIsSUFBSSxXQUFXLE9BQU9qQixLQUFLNjFCLGlCQUFpQnJpQixJQUFJLFNBQVM1VCxHQUFHSSxLQUFLNjFCLGdCQUFnQmoyQixHQUFHb0IsWUFBVyxFQUFHNDBCLGNBQWEsSUFBSzkwQixPQUFPQyxlQUFlbkIsRUFBRUUsVUFBVSxhQUFhLENBQUNtQixJQUFJLFdBQVcsT0FBT2pCLEtBQUs4MUIsYUFBYXRpQixJQUFJLFNBQVM1VCxHQUFHSSxLQUFLODFCLFlBQVlsMkIsR0FBR29CLFlBQVcsRUFBRzQwQixjQUFhLElBQUs5MEIsT0FBT0MsZUFBZW5CLEVBQUVFLFVBQVUsUUFBUSxDQUFDbUIsSUFBSSxXQUFXLE9BQU9qQixLQUFLcVAsUUFBUWhFLE1BQU1zQixPQUFPNkcsSUFBSSxTQUFTNVQsR0FBR0ksS0FBS3FQLFFBQVFoRSxNQUFNc0IsTUFBTS9NLEdBQUdvQixZQUFXLEVBQUc0MEIsY0FBYSxJQUFLOTBCLE9BQU9DLGVBQWVuQixFQUFFRSxVQUFVLFVBQVUsQ0FBQ21CLElBQUksV0FBVyxPQUFNLElBQUtqQixLQUFLcVAsUUFBUTZSLFFBQVExTixJQUFJLFNBQVM1VCxHQUFHSSxLQUFLcVAsUUFBUTZSLFFBQU8sSUFBS3RoQixHQUFHb0IsWUFBVyxFQUFHNDBCLGNBQWEsSUFBS2gyQixFQUFFRSxVQUFVaTJCLE9BQU8sU0FBU24yQixHQUFHLE9BQU9JLEtBQUtxUCxRQUFRaEUsTUFBTXpMLElBQUlBLEVBQUVFLFVBQVVrMkIsT0FBTyxTQUFTcDJCLEVBQUVNLEdBQUdGLEtBQUtxUCxRQUFRaEUsTUFBTXpMLEdBQUdNLEdBQUdZLE9BQU9DLGVBQWVuQixFQUFFRSxVQUFVLE1BQU0sQ0FBQzBULElBQUksU0FBUzVULEdBQUcsSUFBSU0sRUFBRUYsS0FBSyxpQkFBaUJKLEdBQUcsT0FBT0EsSUFBRyxJQUFLSSxLQUFLaTJCLFdBQVdyMkIsSUFBSWtCLE9BQU9pSyxLQUFLbkwsR0FBR3FMLFNBQVEsU0FBVXhLLEdBQUdQLEVBQUVtUCxRQUFRaEUsTUFBTTVLLEdBQUdiLEVBQUVhLE9BQU9PLFlBQVcsRUFBRzQwQixjQUFhLElBQUtoMkIsRUFBRUUsVUFBVW8yQixNQUFNLFNBQVN0MkIsR0FBRyxJQUFJTSxFQUFFRixLQUFLSixFQUFFcUwsU0FBUSxTQUFVckwsR0FBRyxPQUFPTSxFQUFFaTJCLEtBQUt2MkIsRUFBRXNpQixJQUFJdGlCLEVBQUUwQixXQUFXMUIsRUFBRUUsVUFBVXEyQixLQUFLLFNBQVN2MkIsRUFBRU0sR0FBRyxPQUFPRixLQUFLcVAsUUFBUTlELGFBQWEzTCxFQUFFTSxHQUFHRixLQUFLcVAsU0FBU3pQLEVBQUVFLFVBQVVzMkIsUUFBUSxTQUFTeDJCLEdBQUcsT0FBT0ksS0FBS3FQLFFBQVFzRyxhQUFhL1YsSUFBSUEsRUFBRUUsVUFBVXUyQixhQUFhLFNBQVN6MkIsR0FBRyxPQUFPSSxLQUFLcVAsUUFBUThLLGlCQUFpQnZhLElBQUlBLEVBQUVFLFVBQVV3MkIsU0FBUyxTQUFTMTJCLEdBQUcsT0FBT2dPLFNBQVNna0IsZUFBZWh5QixJQUFJQSxFQUFFRSxVQUFVeTJCLGNBQWMsU0FBUzMyQixHQUFHQSxFQUFFNDJCLGNBQWNDLFlBQVk3MkIsSUFBSUEsRUFBRUUsVUFBVTQyQixTQUFTLFNBQVM5MkIsR0FBRyxJQUFJTSxFQUFFTyxFQUFFYixFQUFFbU0sTUFBTSxLQUFLLE9BQU83TCxFQUFFRixLQUFLcVAsUUFBUTZILFdBQVcxQyxJQUFJK0YsTUFBTXJhLEVBQUVPLEdBQUdULE1BQU1KLEVBQUVFLFVBQVU2MkIsWUFBWSxTQUFTLzJCLEdBQUcsT0FBT0ksS0FBS3FQLFFBQVE2SCxVQUFVMkUsT0FBT2pjLEdBQUdJLE1BQU1KLEVBQUVFLFVBQVU4MkIsU0FBUyxTQUFTaDNCLEdBQUcsT0FBT0ksS0FBS3FQLFFBQVE2SCxVQUFVL0osU0FBU3ZOLElBQUlBLEVBQUVFLFVBQVUrMkIsV0FBVyxTQUFTajNCLEdBQUcsSUFBSU0sRUFBRUYsS0FBSyxZQUFPLElBQVNKLEVBQUVtTSxNQUFNLEtBQUswSCxNQUFLLFNBQVU3VCxHQUFHLE9BQU0sSUFBS00sRUFBRW1QLFFBQVE2SCxVQUFVL0osU0FBU3ZOLE9BQU9BLEVBQUVFLFVBQVVnM0IsUUFBUSxTQUFTbDNCLEdBQUcsT0FBT0ksS0FBS3FQLFFBQVFnakIsWUFBWXp5QixFQUFFSSxNQUFNSixFQUFFRSxVQUFVaTNCLFFBQVEsV0FBVyxPQUFPLzJCLEtBQUtxUCxRQUFRZ2pCLGFBQWF6eUIsRUFBRUUsVUFBVXNvQixPQUFPLFNBQVN4b0IsRUFBRU0sR0FBRyxZQUFPLElBQVNBLElBQUlBLEdBQUUsR0FBSUEsR0FBR0YsS0FBS2llLFNBQVMzSyxLQUFLMVQsR0FBR0ksS0FBS3FQLFFBQVEybkIsWUFBWXAzQixFQUFFeVAsU0FBU3JQLE1BQU1KLEVBQUVFLFVBQVVnbUIsTUFBTSxXQUFXOWxCLEtBQUtxUCxRQUFReVcsU0FBU2xtQixFQUFFRSxVQUFVbTJCLFdBQVcsU0FBU3IyQixHQUFHLE9BQU8sSUFBSWtCLE9BQU9pSyxLQUFLbkwsR0FBR3VULFFBQVFyUyxPQUFPQyxlQUFlbkIsRUFBRUUsVUFBVSxLQUFLLENBQUNtQixJQUFJLFdBQVcsT0FBT2pCLEtBQUtvMkIsUUFBUSxPQUFPNWlCLElBQUksU0FBUzVULEdBQUdJLEtBQUttMkIsS0FBSyxLQUFLdjJCLElBQUlvQixZQUFXLEVBQUc0MEIsY0FBYSxJQUFLaDJCLEVBQUVFLFVBQVVtM0IsTUFBTSxXQUFXLElBQUkvMkIsRUFBRSxJQUFJTixFQUFFYSxFQUFFVCxLQUFLcVAsUUFBUTZuQixZQUFZLEdBQUd6MkIsYUFBYThKLGNBQWNySyxFQUFFbVAsUUFBUTVPLEdBQUdULEtBQUtpZSxTQUFTOUssT0FBTyxFQUFFLENBQUMsSUFBSXpTLEVBQUVWLEtBQUtpZSxTQUFTL0ksS0FBSSxTQUFVdFYsR0FBRyxJQUFJYSxFQUFFYixFQUFFcTNCLFFBQVEsT0FBTy8yQixFQUFFbVAsUUFBUStZLE9BQU8zbkIsRUFBRTRPLFNBQVM1TyxLQUFLUCxFQUFFK2QsU0FBU3ZkLEVBQUUsT0FBT1IsR0FBR04sRUFBRUUsVUFBVXEzQixRQUFRLFNBQVN2M0IsR0FBRyxPQUFPQSxFQUFFa0IsT0FBT3NLLE9BQU90SyxPQUFPczJCLE9BQU90MkIsT0FBT3UyQixlQUFlejNCLElBQUlBLEdBQUdBLEdBQUdBLEVBQUVFLFVBQVV3M0IsY0FBYyxXQUFXLE9BQU90M0IsS0FBS3FQLFFBQVE0TyxVQUFVcmUsRUFBRUUsVUFBVWszQixZQUFZLFNBQVNwM0IsR0FBR0ksS0FBS3FQLFFBQVEybkIsWUFBWXAzQixJQUFJQSxFQUFFRSxVQUFVa2YsS0FBSyxTQUFTcGYsRUFBRU0sR0FBRyxJQUFJTyxFQUFFYixFQUFFczNCLFlBQVksR0FBR2gzQixhQUFhbUssUUFBUSxDQUFDLElBQUkzSixFQUFFUixFQUFFczJCLGNBQWMvMUIsRUFBRXUyQixZQUFZOTJCLEdBQUdRLEVBQUVzMkIsWUFBWXYyQixPQUFPLENBQUMsR0FBR1AsRUFBRWlULFFBQVEsRUFBRSxPQUFPelMsRUFBRVIsRUFBRSxHQUFHczJCLGNBQWMsSUFBSSxJQUFJNzFCLEVBQUUsRUFBRUEsRUFBRVQsRUFBRWlULE9BQU94UyxJQUFJLENBQUMsSUFBSUMsRUFBRVYsRUFBRVMsR0FBR0YsRUFBRXUyQixZQUFZcDJCLEdBQUdGLEVBQUVzMkIsWUFBWXYyQixLQUFLYixFQUFFRSxVQUFVeTNCLGdCQUFnQixTQUFTMzNCLEVBQUVNLEdBQUdBLElBQUlGLEtBQUtpMkIsV0FBVy8xQixLQUFLQSxFQUFFczNCLFdBQVc1M0IsRUFBRStRLGlCQUFpQixZQUFZelEsRUFBRXMzQixXQUFXdDNCLEVBQUV1M0IsV0FBVzczQixFQUFFK1EsaUJBQWlCLFlBQVl6USxFQUFFdTNCLFdBQVd2M0IsRUFBRXczQixXQUFXOTNCLEVBQUUrUSxpQkFBaUIsWUFBWXpRLEVBQUV3M0IsV0FBV3gzQixFQUFFeTNCLFVBQVUvM0IsRUFBRStRLGlCQUFpQixXQUFXelEsRUFBRXkzQixVQUFVejNCLEVBQUUwM0IsU0FBU2g0QixFQUFFK1EsaUJBQWlCLFVBQVV6USxFQUFFMDNCLFNBQVMxM0IsRUFBRTIzQixNQUFNajRCLEVBQUUrUSxpQkFBaUIsT0FBT3pRLEVBQUUyM0IsUUFBUWo0QixFQUFFRSxVQUFVb2UsUUFBUSxTQUFTdGUsRUFBRU0sR0FBRyxTQUFTTixHQUFHLElBQUlBLEVBQUUwVyxhQUFhcFcsR0FBR04sRUFBRXNlLFFBQVFoZSxLQUFLTixFQUFFRSxVQUFVZzRCLFNBQVMsU0FBU2w0QixHQUFHLElBQUlNLEVBQUVGLEtBQUtTLEVBQUUsR0FBRyxPQUFPVCxLQUFLcVAsUUFBUWhDLFlBQVlyTixLQUFLcVAsUUFBUWhDLFdBQVcwcUIsV0FBVzlzQixTQUFRLFNBQVV2SyxHQUFHQSxJQUFJUixFQUFFbVAsU0FBU25QLEVBQUVnZSxRQUFReGQsRUFBRWQsSUFBSWEsRUFBRTZTLEtBQUs1UyxNQUFNRCxHQUFHQSxHQUFHYixFQUE1K0gsR0FBaS9IbzRCLElBQUl2M0IsRUFBRSxLQUFLLFdBQVcsT0FBT3UzQixHQUFHbDNCLE9BQU9zSyxRQUFRLFNBQVN4TCxHQUFHLElBQUksSUFBSU0sRUFBRU8sRUFBRSxFQUFFQyxFQUFFRixVQUFVMlMsT0FBTzFTLEVBQUVDLEVBQUVELElBQUksSUFBSSxJQUFJRSxLQUFLVCxFQUFFTSxVQUFVQyxHQUFHSyxPQUFPaEIsVUFBVW9CLGVBQWVDLEtBQUtqQixFQUFFUyxLQUFLZixFQUFFZSxHQUFHVCxFQUFFUyxJQUFJLE9BQU9mLEdBQUdvNEIsR0FBR3pkLE1BQU12YSxLQUFLUSxhQUFhZ0UsR0FBRyxJQUFJLFdBQVcsU0FBUzVFLEtBQUssT0FBT0EsRUFBRUUsVUFBVW1CLElBQUksU0FBU3JCLEdBQUcsSUFBSU0sRUFBRTBOLFNBQVNxcUIsT0FBT3hoQixNQUFNLGlCQUFpQjdNLE9BQU9oSyxFQUFFLDBCQUEwQixHQUFHLEdBQUdNLEVBQUUsT0FBT2c0QixtQkFBbUJoNEIsSUFBSU4sRUFBRUUsVUFBVTBULElBQUksU0FBUzVULEVBQUVNLEVBQUVPLFFBQUcsSUFBU0EsSUFBSUEsRUFBRSxJQUFJQSxFQUFFMDNCLE9BQU8xM0IsRUFBRSxXQUFXLEdBQUdBLEVBQUUwM0IsS0FBSyxHQUFHLFVBQVUxM0IsRUFBRTAzQixNQUFNMTNCLEVBQUVLLE9BQU9zM0IsUUFBUTMzQixHQUFHa0osUUFBTyxTQUFVL0osRUFBRU0sR0FBRyxJQUFJTyxFQUFFUCxFQUFFLEdBQUdRLEVBQUVSLEVBQUUsR0FBRyxNQUFNLEdBQUcwSixPQUFPaEssRUFBRSxNQUFNZ0ssT0FBT25KLEVBQUUsS0FBS21KLE9BQU9sSixLQUFLLElBQUlrTixTQUFTcXFCLE9BQU9yNEIsRUFBRSxJQUFJeTRCLG1CQUFtQm40QixHQUFHTyxHQUFHYixFQUFFRSxVQUFVZ2MsT0FBTyxTQUFTbGMsRUFBRU0sR0FBR0YsS0FBS3dULElBQUk1VCxFQUFFLEdBQUdvNEIsR0FBRyxDQUFDLFdBQVcsR0FBRzkzQixLQUFLTixFQUFFRSxVQUFVdzRCLFFBQVEsU0FBUzE0QixHQUFHLElBQUlNLEVBQUVGLEtBQUtpQixJQUFJckIsR0FBRyxPQUFPTSxFQUFFcTRCLEtBQUtDLE1BQU10NEIsR0FBRyxJQUFJTixFQUFFRSxVQUFVMjRCLFFBQVEsU0FBUzc0QixFQUFFTSxFQUFFTyxHQUFHVCxLQUFLd1QsSUFBSTVULEVBQUUyNEIsS0FBS0csVUFBVXg0QixHQUFHTyxJQUFJYixFQUFwcEIsSUFBMHBCZ0YsR0FBRyxXQUFXLFNBQVNoRixLQUFLLE9BQU9BLEVBQUUrNEIsWUFBWSxjQUFjLzRCLEVBQUVnNUIsWUFBWSxjQUFjaDVCLEVBQUVpNUIsY0FBYyxnQkFBZ0JqNUIsRUFBRWs1QixZQUFZLGNBQWNsNUIsRUFBcEosR0FBeUprRixHQUFHLFdBQVcsU0FBU2xGLEtBQUssT0FBT0EsRUFBRW01QixVQUFVLFlBQVluNUIsRUFBRW81QixlQUFlLGlCQUFpQnA1QixFQUFFcTVCLGVBQWUsaUJBQWlCcjVCLEVBQUVzNUIsZUFBZSxpQkFBaUJ0NUIsRUFBRXU1QixpQkFBaUIsbUJBQW1CdjVCLEVBQUV3NUIsZUFBZSxpQkFBaUJ4NUIsRUFBRXk1QixnQkFBZ0Isa0JBQWtCejVCLEVBQUUwNUIsY0FBYyxnQkFBZ0IxNUIsRUFBRTI1QixnQkFBZ0Isa0JBQWtCMzVCLEVBQUU0NUIsc0JBQXNCLHdCQUF3QjU1QixFQUFFNjVCLHFCQUFxQix1QkFBdUI3NUIsRUFBRTg1QiwyQkFBMkIsNkJBQTZCOTVCLEVBQUUrNUIscUJBQXFCLHVCQUF1Qi81QixFQUFFZzZCLGdCQUFnQixrQkFBa0JoNkIsRUFBRWk2QixjQUFjLGdCQUFnQmo2QixFQUFFazZCLHFCQUFxQix1QkFBdUJsNkIsRUFBRW02QixrQkFBa0Isb0JBQW9CbjZCLEVBQUVvNkIsbUJBQW1CLHFCQUFxQnA2QixFQUFFcTZCLHVCQUF1Qix5QkFBeUJyNkIsRUFBRXM2QixjQUFjLGdCQUFnQnQ2QixFQUFFdTZCLGVBQWUsaUJBQWlCdjZCLEVBQUV3NkIsaUJBQWlCLG1CQUFtQng2QixFQUFFeTZCLHNCQUFzQix3QkFBd0J6NkIsRUFBbDZCLEdBQXU2QnNGLEdBQUcsSUFBSSxXQUFXLFNBQVN0RixJQUFJSSxLQUFLczZCLFVBQVUsR0FBR3Q2QixLQUFLdTZCLHNCQUFzQixPQUFPMzZCLEVBQUVFLFVBQVV5NkIsb0JBQW9CLFdBQVcsSUFBSTM2QixFQUFFSSxLQUFLZ0ssT0FBT3d3QixXQUFXLFNBQVN0NkIsR0FBRyxHQUFHQSxFQUFFNEssT0FBTzVLLEVBQUU0SyxNQUFNMnZCLFVBQVUsQ0FBQy9lLFFBQVFnZixJQUFJeDZCLEVBQUU0SyxPQUFPLElBQUlySyxFQUFFLENBQUNrNkIsVUFBVXo2QixFQUFFNEssTUFBTTJ2QixVQUFVRyxVQUFTLEVBQUdDLGVBQWUsSUFBSWo3QixFQUFFazdCLEtBQUtoMkIsR0FBR3kwQixnQkFBZ0J2dkIsT0FBT3ZKLE1BQU1iLEVBQUVFLFVBQVVnN0IsS0FBSyxTQUFTbDdCLEVBQUVNLEVBQUVPLEdBQUcsR0FBR2IsRUFBRSxJQUFJSSxLQUFLczZCLFVBQVVydkIsU0FBUSxTQUFVdkssR0FBR0EsRUFBRXE2QixZQUFZbjdCLEdBQUdjLEVBQUVtNkIsaUJBQWlCcDZCLEVBQUVvNkIsaUJBQWdCLElBQUtuNkIsRUFBRXM2QixzQkFBc0J0NkIsRUFBRXU2QixTQUFTLzZCLEVBQUVPLE1BQU0sTUFBTWIsR0FBRzhiLFFBQVFDLE1BQU0vYixLQUFLQSxFQUFFRSxVQUFVbzdCLFlBQVksU0FBU3Q3QixHQUFHLElBQUlNLEVBQUVGLEtBQUtzNkIsVUFBVTdyQixRQUFPLFNBQVV2TyxHQUFHLE9BQU8sSUFBSUEsRUFBRWk3QixNQUFNdjdCLEVBQUV1N0IsS0FBS2o3QixFQUFFNjZCLFlBQVluN0IsRUFBRW03QixXQUFXNzZCLEVBQUUyNkIsaUJBQWlCajdCLEVBQUVpN0IsbUJBQW1CNzZCLEtBQUtzNkIsVUFBVXA2QixHQUFHTixFQUFFRSxVQUFVczdCLFVBQVUsU0FBU3g3QixHQUFHQSxFQUFFbTdCLFdBQVcvNkIsS0FBS3M2QixVQUFVaG5CLEtBQUsxVCxJQUFJQSxFQUFqeEIsSUFBdXhCOEUsR0FBRyxXQUFXLFNBQVM5RSxLQUFLLE9BQU9BLEVBQUVFLFVBQVV1N0IsUUFBUSxTQUFTejdCLEVBQUVNLEVBQUVPLEdBQUcsSUFBSUMsRUFBRSxDQUFDWSxNQUFNcEIsRUFBRW9hLEtBQUssT0FBT2doQixPQUFPNzZCLEVBQUU4NkIsV0FBVyxpQkFBaUJyN0IsUUFBRyxJQUFTQSxJQUFJUSxFQUFFNFosS0FBSyxVQUFVa2hCLGVBQWVDLFFBQVE3N0IsRUFBRTI0QixLQUFLRyxVQUFVaDRCLEtBQUtkLEVBQUVFLFVBQVU0N0IsV0FBVyxTQUFTOTdCLEVBQUVNLEdBQUcsSUFBSSxJQUFJTyxFQUFFVCxLQUFLMjdCLFdBQVcvN0IsR0FBRyxHQUFHYSxFQUFFLENBQUMsSUFBSUMsRUFBRVIsRUFBRU8sRUFBRWEsT0FBT3RCLEtBQUtxN0IsUUFBUXo3QixFQUFFYyxFQUFFLElBQUlrN0IsS0FBS243QixFQUFFNjZCLFVBQVUsTUFBTTE3QixHQUFHOGIsUUFBUUMsTUFBTS9iLEtBQUtBLEVBQUVFLFVBQVUrN0IsZ0JBQWdCLFNBQVNqOEIsR0FBRyxPQUFPQSxFQUFFLFdBQVdBLEVBQUVFLFVBQVU2N0IsV0FBVyxTQUFTLzdCLEdBQUcsSUFBSU0sRUFBRXM3QixlQUFlTSxRQUFRbDhCLEdBQUcsR0FBR00sRUFBRSxDQUFDLElBQUlPLEVBQUU4M0IsS0FBS0MsTUFBTXQ0QixHQUFHLE9BQU8wN0IsS0FBS0csTUFBTXQ3QixFQUFFNjZCLFFBQVF0N0IsS0FBS2c4QixXQUFXcDhCLFFBQVE4YixRQUFRZ2YsSUFBSSxpQ0FBaUNqNkIsSUFBSUEsRUFBRSxPQUFPLE1BQU1iLEVBQUVFLFVBQVVnOEIsUUFBUSxTQUFTbDhCLEdBQUcsSUFBSU0sRUFBRUYsS0FBSzI3QixXQUFXLzdCLEdBQUcsT0FBT00sRUFBRUEsRUFBRW9CLE1BQU0sTUFBTTFCLEVBQUVFLFVBQVVrOEIsV0FBVyxTQUFTcDhCLEdBQUc0N0IsZUFBZVEsV0FBV3A4QixJQUFJQSxFQUFFRSxVQUFVbThCLFVBQVUsU0FBU3I4QixHQUFHLEdBQUdBLEVBQUUsQ0FBQyxJQUFJTSxFQUFFczdCLGVBQWVyb0IsT0FBTyxLQUFLalQsR0FBRyxHQUFHLENBQUMsSUFBSSxJQUFJTyxFQUFFLEdBQUdDLEVBQUUsRUFBRUEsRUFBRVIsRUFBRVEsS0FBS0MsRUFBRTY2QixlQUFldFosSUFBSXhoQixJQUFJbVYsV0FBV2pXLElBQUlhLEVBQUU2UyxLQUFLM1MsR0FBRyxJQUFJRCxFQUFFLEVBQUVBLEVBQUVELEVBQUUwUyxPQUFPelMsSUFBSSxDQUFDLElBQUlDLEVBQUVGLEVBQUVDLEdBQUc4NkIsZUFBZVEsV0FBV3I3QixVQUFVNjZCLGVBQWVTLGFBQWFyOEIsRUFBMWdDLEdBQStnQ29GLEdBQUcsSUFBSSxXQUFXLFNBQVNwRixJQUFJSSxLQUFLazhCLFdBQVcsR0FBRyxPQUFPdDhCLEVBQUVFLFVBQVVxOEIsSUFBSSxTQUFTdjhCLEdBQUdJLEtBQUtrOEIsV0FBVzVvQixLQUFLMVQsSUFBSUEsRUFBRUUsVUFBVXM4QixPQUFPLFdBQVcsSUFBSXg4QixFQUFFLEdBQUcsT0FBT0ksS0FBS2s4QixXQUFXanhCLFNBQVEsU0FBVS9LLEdBQUcsSUFBSUEsRUFBRW04QixXQUFXLENBQUMsSUFBSTU3QixFQUFFLENBQUNvNkIsZUFBZTM2QixFQUFFbzhCLGVBQWVDLEtBQUtyOEIsRUFBRXM4QixjQUFjNThCLEVBQUUwVCxLQUFLN1MsT0FBT2IsR0FBR0EsRUFBRUUsVUFBVTI4QixZQUFZLFNBQVM3OEIsR0FBRyxJQUFJTSxFQUFFRixLQUFLazhCLFdBQVd6b0IsTUFBSyxTQUFVdlQsR0FBRyxPQUFPQSxFQUFFbzhCLGlCQUFpQjE4QixLQUFLLEdBQUdNLEVBQUUsTUFBTSxDQUFDMjZCLGVBQWUzNkIsRUFBRW84QixlQUFlQyxLQUFLcjhCLEVBQUVzOEIsZUFBZTU4QixFQUF2YyxJQUE2Yzg4QixJQUFJaEgsR0FBRyxTQUFTOTFCLEVBQUVNLEdBQUcsT0FBT3cxQixHQUFHNTBCLE9BQU82N0IsZ0JBQWdCLENBQUNDLFVBQVUsY0FBYy9uQixPQUFPLFNBQVNqVixFQUFFTSxHQUFHTixFQUFFZzlCLFVBQVUxOEIsSUFBSSxTQUFTTixFQUFFTSxHQUFHLElBQUksSUFBSU8sS0FBS1AsRUFBRVksT0FBT2hCLFVBQVVvQixlQUFlQyxLQUFLakIsRUFBRU8sS0FBS2IsRUFBRWEsR0FBR1AsRUFBRU8sS0FBS2kxQixHQUFHOTFCLEVBQUVNLElBQUksU0FBU04sRUFBRU0sR0FBRyxHQUFHLG1CQUFtQkEsR0FBRyxPQUFPQSxFQUFFLE1BQU0sSUFBSXlXLFVBQVUsdUJBQXVCOVcsT0FBT0ssR0FBRyxpQ0FBaUMsU0FBU08sSUFBSVQsS0FBS2djLFlBQVlwYyxFQUFFODFCLEdBQUc5MUIsRUFBRU0sR0FBR04sRUFBRUUsVUFBVSxPQUFPSSxFQUFFWSxPQUFPczJCLE9BQU9sM0IsSUFBSU8sRUFBRVgsVUFBVUksRUFBRUosVUFBVSxJQUFJVyxLQUFLbUMsR0FBRyxTQUFTaEQsR0FBRyxTQUFTTSxFQUFFQSxHQUFHLElBQUlPLEVBQUViLEVBQUV1QixLQUFLbkIsT0FBT0EsS0FBSyxPQUFPUyxFQUFFaUwsUUFBUXhMLEVBQUVPLEVBQUU2N0IsZUFBZXA4QixFQUFFMjZCLGVBQWVwNkIsRUFBRSxPQUFPaThCLEdBQUd4OEIsRUFBRU4sR0FBR00sRUFBRUosVUFBVSs4QixnQkFBZ0IsU0FBU2o5QixFQUFFTSxHQUFHZ0YsR0FBRzQxQixLQUFLbDdCLEVBQUVJLEtBQUtFLElBQUlBLEVBQUVKLFVBQVVnOUIsT0FBTyxXQUFXLElBQUlsOUIsRUFBRU0sRUFBRSxHQUFHLFdBQVdGLEtBQUswTCxRQUFRcXhCLFVBQVUvOEIsS0FBS3FQLFFBQVF6QixTQUFTdWEsY0FBYyxlQUFlLEdBQUcsV0FBV25vQixLQUFLMEwsUUFBUXF4QixVQUFVLENBQUMsSUFBSXQ4QixFQUFFbU4sU0FBU3VhLGNBQWMsVUFBVTFuQixFQUFFNlosS0FBS3RhLEtBQUswTCxRQUFRcXhCLFVBQVUvOEIsS0FBS3FQLFFBQVE1TyxNQUFNLENBQUMsSUFBSUMsRUFBRWtOLFNBQVN1YSxjQUFjLFNBQVN6bkIsRUFBRTRaLEtBQUt0YSxLQUFLMEwsUUFBUXF4QixVQUFVLzhCLEtBQUtxUCxRQUFRM08sRUFBRVYsS0FBS3FQLFFBQVEydEIsR0FBRyxRQUFRcDlCLEVBQUVJLEtBQUswTCxRQUFRdXhCLGlCQUFZLElBQVNyOUIsRUFBRUEsRUFBRUksS0FBSzBMLFFBQVFxeEIsVUFBVSxJQUFJLzhCLEtBQUswTCxRQUFRbXZCLGVBQWUsSUFBSTc2QixLQUFLMEwsUUFBUXd4QixVQUFVbDlCLEtBQUs0c0IsTUFBTSxRQUFRMXNCLEVBQUVGLEtBQUswTCxRQUFReXhCLGFBQVEsSUFBU2o5QixFQUFFQSxFQUFFLElBQUlZLE9BQU9DLGVBQWViLEVBQUVKLFVBQVUsTUFBTSxDQUFDbUIsSUFBSSxXQUFXLEdBQUdqQixLQUFLcVAsUUFBUSxPQUFPclAsS0FBS3FQLG1CQUFtQit0QixpQkFBaUIsYUFBYXA5QixLQUFLMEwsUUFBUXF4QixVQUFVLzhCLEtBQUtxUCxRQUFRZ3VCLFFBQVEsV0FBV3I5QixLQUFLMEwsUUFBUXF4QixVQUFVLzhCLEtBQUtxUCxRQUFRaXVCLGNBQWN0OUIsS0FBS3FQLFFBQVEvTixNQUFNdEIsS0FBS3FQLFFBQVEvTixPQUFPa1MsSUFBSSxTQUFTNVQsR0FBR0ksS0FBS3FQLFVBQVUsYUFBYXJQLEtBQUswTCxRQUFRcXhCLFVBQVUvOEIsS0FBS3FQLFFBQVFndUIsUUFBUXo5QixFQUFFSSxLQUFLcVAsUUFBUS9OLE1BQU0xQixFQUFFLFdBQVdJLEtBQUswTCxRQUFRcXhCLFdBQVcvOEIsS0FBS3U5QixXQUFXdjhCLFlBQVcsRUFBRzQwQixjQUFhLElBQUs5MEIsT0FBT0MsZUFBZWIsRUFBRUosVUFBVSxTQUFTLENBQUMwVCxJQUFJLFNBQVM1VCxHQUFHSSxLQUFLdzlCLElBQUk1OUIsRUFBRUksS0FBS3U5QixVQUFVdjhCLFlBQVcsRUFBRzQwQixjQUFhLElBQUs5MEIsT0FBT0MsZUFBZWIsRUFBRUosVUFBVSxXQUFXLENBQUNtQixJQUFJLFdBQVcsT0FBT2pCLEtBQUtxUCxtQkFBbUIrdEIsa0JBQWtCcDlCLEtBQUtxUCxRQUFRb3VCLFVBQVVqcUIsSUFBSSxTQUFTNVQsR0FBR0ksS0FBS3FQLG1CQUFtQit0QixtQkFBbUJwOUIsS0FBS3FQLFFBQVFvdUIsU0FBUzc5QixJQUFJb0IsWUFBVyxFQUFHNDBCLGNBQWEsSUFBSzkwQixPQUFPQyxlQUFlYixFQUFFSixVQUFVLFdBQVcsQ0FBQ21CLElBQUksV0FBVyxPQUFPakIsS0FBS3FQLG1CQUFtQit0QixrQkFBa0JwOUIsS0FBS3FQLG1CQUFtQnF1QixrQkFBa0IxOUIsS0FBS3FQLFFBQVE4SCxTQUFTLFNBQVNuWCxLQUFLbzJCLFFBQVEsYUFBYTVpQixJQUFJLFNBQVM1VCxHQUFHLEdBQUdJLEtBQUtxUCxtQkFBbUIrdEIsa0JBQWtCcDlCLEtBQUtxUCxtQkFBbUJxdUIsa0JBQWtCMTlCLEtBQUtxUCxRQUFROEgsU0FBU3ZYLE1BQU0sQ0FBQyxJQUFJTSxHQUFFLElBQUtOLEVBQUUsT0FBTyxRQUFRSSxLQUFLbTJCLEtBQUssV0FBV2oyQixLQUFLYyxZQUFXLEVBQUc0MEIsY0FBYSxJQUFLOTBCLE9BQU9DLGVBQWViLEVBQUVKLFVBQVUsUUFBUSxDQUFDbUIsSUFBSSxXQUFXLE1BQU0sU0FBU2pCLEtBQUtvMkIsUUFBUSxtQkFBbUI1aUIsSUFBSSxTQUFTNVQsR0FBR0ksS0FBS20yQixLQUFLLGlCQUFpQnYyQixJQUFJb0IsWUFBVyxFQUFHNDBCLGNBQWEsSUFBSzExQixFQUFFSixVQUFVNjlCLG9CQUFvQixXQUFXLElBQUkvOUIsRUFBRUksS0FBS0EsS0FBS3FQLFFBQVFzQixpQkFBaUIsWUFBVyxTQUFVelEsR0FBR04sRUFBRWk5QixnQkFBZ0IvM0IsR0FBR3UxQixzQkFBc0IsQ0FBQ00sVUFBVSxDQUFDeGtCLE1BQU1qVyxHQUFHMjZCLGVBQWVqN0IsRUFBRThMLFFBQVFtdkIscUJBQXFCMzZCLEVBQUVKLFVBQVV5OUIsT0FBTyxXQUFXdjlCLEtBQUtxUCxRQUFRNkcsY0FBYyxJQUFJQyxNQUFNLFlBQVlqVyxFQUFFSixVQUFVbTNCLE1BQU0sV0FBVyxPQUFPcjNCLEVBQUVFLFVBQVVtM0IsTUFBTTkxQixLQUFLbkIsT0FBT0UsRUFBeCtFLENBQTIrRTBCLElBQUlnOEIsR0FBRyxXQUFXLElBQUloK0IsRUFBRSxTQUFTTSxFQUFFTyxHQUFHLE9BQU9iLEVBQUVrQixPQUFPNjdCLGdCQUFnQixDQUFDQyxVQUFVLGNBQWMvbkIsT0FBTyxTQUFTalYsRUFBRU0sR0FBR04sRUFBRWc5QixVQUFVMThCLElBQUksU0FBU04sRUFBRU0sR0FBRyxJQUFJLElBQUlPLEtBQUtQLEVBQUVZLE9BQU9oQixVQUFVb0IsZUFBZUMsS0FBS2pCLEVBQUVPLEtBQUtiLEVBQUVhLEdBQUdQLEVBQUVPLEtBQUtiLEVBQUVNLEVBQUVPLElBQUksT0FBTyxTQUFTUCxFQUFFTyxHQUFHLEdBQUcsbUJBQW1CQSxHQUFHLE9BQU9BLEVBQUUsTUFBTSxJQUFJa1csVUFBVSx1QkFBdUI5VyxPQUFPWSxHQUFHLGlDQUFpQyxTQUFTQyxJQUFJVixLQUFLZ2MsWUFBWTliLEVBQUVOLEVBQUVNLEVBQUVPLEdBQUdQLEVBQUVKLFVBQVUsT0FBT1csRUFBRUssT0FBT3MyQixPQUFPMzJCLElBQUlDLEVBQUVaLFVBQVVXLEVBQUVYLFVBQVUsSUFBSVksSUFBamQsR0FBd2QwQixHQUFHLFNBQVN4QyxHQUFHLFNBQVNNLEVBQUVBLEdBQUcsSUFBSU8sRUFBRVQsS0FBSyxPQUFPRSxFQUFFNjhCLFVBQVUsWUFBWXQ4QixFQUFFYixFQUFFdUIsS0FBS25CLEtBQUtFLElBQUlGLE1BQU04OEIsU0FBU3I4QixFQUFFLE9BQU9tOUIsR0FBRzE5QixFQUFFTixHQUFHTSxFQUFFSixVQUFVbTNCLE1BQU0sV0FBVyxJQUFJeDJCLEVBQUViLEVBQUVFLFVBQVVtM0IsTUFBTTkxQixLQUFLbkIsTUFBTVUsRUFBRSxJQUFJUixFQUFFRixLQUFLbTNCLFFBQVFuM0IsS0FBSzBMLFVBQVUsT0FBT2hMLEVBQUUyTyxRQUFRNU8sRUFBRTRPLFFBQVEzTyxFQUFFdWQsU0FBU3hkLEVBQUV3ZCxTQUFTamUsS0FBSzI5QixzQkFBc0JqOUIsR0FBR1IsRUFBelMsQ0FBNFMwQyxJQUFJaTdCLEdBQUcsV0FBVyxJQUFJaitCLEVBQUUsU0FBU00sRUFBRU8sR0FBRyxPQUFPYixFQUFFa0IsT0FBTzY3QixnQkFBZ0IsQ0FBQ0MsVUFBVSxjQUFjL25CLE9BQU8sU0FBU2pWLEVBQUVNLEdBQUdOLEVBQUVnOUIsVUFBVTE4QixJQUFJLFNBQVNOLEVBQUVNLEdBQUcsSUFBSSxJQUFJTyxLQUFLUCxFQUFFWSxPQUFPaEIsVUFBVW9CLGVBQWVDLEtBQUtqQixFQUFFTyxLQUFLYixFQUFFYSxHQUFHUCxFQUFFTyxLQUFLYixFQUFFTSxFQUFFTyxJQUFJLE9BQU8sU0FBU1AsRUFBRU8sR0FBRyxHQUFHLG1CQUFtQkEsR0FBRyxPQUFPQSxFQUFFLE1BQU0sSUFBSWtXLFVBQVUsdUJBQXVCOVcsT0FBT1ksR0FBRyxpQ0FBaUMsU0FBU0MsSUFBSVYsS0FBS2djLFlBQVk5YixFQUFFTixFQUFFTSxFQUFFTyxHQUFHUCxFQUFFSixVQUFVLE9BQU9XLEVBQUVLLE9BQU9zMkIsT0FBTzMyQixJQUFJQyxFQUFFWixVQUFVVyxFQUFFWCxVQUFVLElBQUlZLElBQWpkLEdBQXdkZ0QsR0FBRyxTQUFTOUQsR0FBRyxTQUFTTSxFQUFFQSxHQUFHLElBQUlPLEVBQUViLEVBQUV1QixLQUFLbkIsT0FBT0EsS0FBSyxPQUFPUyxFQUFFaUwsUUFBUXhMLEVBQUVPLEVBQUVxOEIsU0FBU3I4QixFQUFFLE9BQU9vOUIsR0FBRzM5QixFQUFFTixHQUFHTSxFQUFFSixVQUFVZzlCLE9BQU8sV0FBVyxJQUFJbDlCLEVBQUVnTyxTQUFTdWEsY0FBYyxVQUFVdm9CLEVBQUUwQixNQUFNdEIsS0FBSzBMLFFBQVFwSyxNQUFNMUIsRUFBRWsrQixLQUFLOTlCLEtBQUswTCxRQUFRb3lCLEtBQUs5OUIsS0FBSzBMLFFBQVFxeUIsYUFBYW4rQixFQUFFbytCLFVBQVMsR0FBSWgrQixLQUFLcVAsUUFBUXpQLEdBQUdNLEVBQUVKLFVBQVVtM0IsTUFBTSxXQUFXLElBQUkvMkIsRUFBRU4sRUFBRUUsVUFBVW0zQixNQUFNOTFCLEtBQUtuQixNQUFNLE9BQU9FLEVBQUU0MkIsUUFBUTkyQixLQUFLMEwsUUFBUW95QixNQUFNNTlCLEdBQUdBLEVBQTNYLENBQThYMEIsSUFBSXE4QixHQUFHLFdBQVcsSUFBSXIrQixFQUFFLFNBQVNNLEVBQUVPLEdBQUcsT0FBT2IsRUFBRWtCLE9BQU82N0IsZ0JBQWdCLENBQUNDLFVBQVUsY0FBYy9uQixPQUFPLFNBQVNqVixFQUFFTSxHQUFHTixFQUFFZzlCLFVBQVUxOEIsSUFBSSxTQUFTTixFQUFFTSxHQUFHLElBQUksSUFBSU8sS0FBS1AsRUFBRVksT0FBT2hCLFVBQVVvQixlQUFlQyxLQUFLakIsRUFBRU8sS0FBS2IsRUFBRWEsR0FBR1AsRUFBRU8sS0FBS2IsRUFBRU0sRUFBRU8sSUFBSSxPQUFPLFNBQVNQLEVBQUVPLEdBQUcsR0FBRyxtQkFBbUJBLEdBQUcsT0FBT0EsRUFBRSxNQUFNLElBQUlrVyxVQUFVLHVCQUF1QjlXLE9BQU9ZLEdBQUcsaUNBQWlDLFNBQVNDLElBQUlWLEtBQUtnYyxZQUFZOWIsRUFBRU4sRUFBRU0sRUFBRU8sR0FBR1AsRUFBRUosVUFBVSxPQUFPVyxFQUFFSyxPQUFPczJCLE9BQU8zMkIsSUFBSUMsRUFBRVosVUFBVVcsRUFBRVgsVUFBVSxJQUFJWSxJQUFqZCxHQUF3ZDhDLEdBQUcsU0FBUzVELEdBQUcsU0FBU00sRUFBRUEsR0FBRyxJQUFJTyxFQUFFVCxLQUFLLE9BQU9FLEVBQUU2OEIsVUFBVSxVQUFVdDhCLEVBQUViLEVBQUV1QixLQUFLbkIsS0FBS0UsSUFBSUYsTUFBTTg4QixTQUFTcjhCLEVBQUUsT0FBT3c5QixHQUFHLzlCLEVBQUVOLEdBQUdNLEVBQUVKLFVBQVVnOUIsT0FBTyxXQUFXLElBQUk1OEIsRUFBRUYsS0FBS0osRUFBRUUsVUFBVWc5QixPQUFPMzdCLEtBQUtuQixNQUFNQSxLQUFLMEwsUUFBUXd5QixjQUFjanpCLFNBQVEsU0FBVXJMLEdBQUcsT0FBT00sRUFBRWtvQixPQUFPLElBQUkxa0IsR0FBRzlELE9BQU9JLEtBQUswMkIsU0FBUywrQkFBK0J4MkIsRUFBRUosVUFBVW0zQixNQUFNLFdBQVcsSUFBSXgyQixFQUFFYixFQUFFRSxVQUFVbTNCLE1BQU05MUIsS0FBS25CLE1BQU1VLEVBQUUsSUFBSVIsRUFBRUYsS0FBS20zQixRQUFRbjNCLEtBQUswTCxVQUFVLE9BQU9oTCxFQUFFMk8sUUFBUTVPLEVBQUU0TyxRQUFRM08sRUFBRXVkLFNBQVN4ZCxFQUFFd2QsU0FBU2plLEtBQUsyOUIsc0JBQXNCajlCLEdBQUdSLEVBQXplLENBQTRlMEMsSUFBSXU3QixHQUFHLFdBQVcsSUFBSXYrQixFQUFFLFNBQVNNLEVBQUVPLEdBQUcsT0FBT2IsRUFBRWtCLE9BQU82N0IsZ0JBQWdCLENBQUNDLFVBQVUsY0FBYy9uQixPQUFPLFNBQVNqVixFQUFFTSxHQUFHTixFQUFFZzlCLFVBQVUxOEIsSUFBSSxTQUFTTixFQUFFTSxHQUFHLElBQUksSUFBSU8sS0FBS1AsRUFBRVksT0FBT2hCLFVBQVVvQixlQUFlQyxLQUFLakIsRUFBRU8sS0FBS2IsRUFBRWEsR0FBR1AsRUFBRU8sS0FBS2IsRUFBRU0sRUFBRU8sSUFBSSxPQUFPLFNBQVNQLEVBQUVPLEdBQUcsR0FBRyxtQkFBbUJBLEdBQUcsT0FBT0EsRUFBRSxNQUFNLElBQUlrVyxVQUFVLHVCQUF1QjlXLE9BQU9ZLEdBQUcsaUNBQWlDLFNBQVNDLElBQUlWLEtBQUtnYyxZQUFZOWIsRUFBRU4sRUFBRU0sRUFBRU8sR0FBR1AsRUFBRUosVUFBVSxPQUFPVyxFQUFFSyxPQUFPczJCLE9BQU8zMkIsSUFBSUMsRUFBRVosVUFBVVcsRUFBRVgsVUFBVSxJQUFJWSxJQUFqZCxHQUF3ZHdELEdBQUcsU0FBU3RFLEdBQUcsU0FBU00sRUFBRUEsR0FBRyxJQUFJTyxFQUFFQyxFQUFFVixLQUFLLE9BQU9FLEVBQUU2OEIsVUFBVSxRQUFRdDhCLEVBQUVQLEVBQUU2OEIsaUJBQVksSUFBU3Q4QixFQUFFQSxFQUFFLFFBQVFDLEVBQUVkLEVBQUV1QixLQUFLbkIsS0FBS0UsSUFBSUYsTUFBTTg4QixTQUFTcDhCLEVBQUUsT0FBT3k5QixHQUFHaitCLEVBQUVOLEdBQUdNLEVBQUVKLFVBQVVnOUIsT0FBTyxXQUFXLElBQUk1OEIsRUFBRU8sRUFBRWIsRUFBRUUsVUFBVWc5QixPQUFPMzdCLEtBQUtuQixNQUFNQSxLQUFLMDJCLFNBQVMsUUFBUXgyQixFQUFFRixLQUFLMEwsUUFBUTB5QixlQUFVLElBQVNsK0IsRUFBRUEsRUFBRSxnQ0FBZ0NGLEtBQUtxK0IsWUFBWSxRQUFRNTlCLEVBQUVULEtBQUswTCxRQUFRNHlCLG1CQUFjLElBQVM3OUIsRUFBRUEsRUFBRVQsS0FBSzBMLFFBQVF3eEIsV0FBV3A4QixPQUFPQyxlQUFlYixFQUFFSixVQUFVLGNBQWMsQ0FBQzBULElBQUksU0FBUzVULEdBQUdBLEdBQUdJLEtBQUtxUCxtQkFBbUIrdEIsbUJBQW1CcDlCLEtBQUtxUCxRQUFRa3ZCLFlBQVkzK0IsSUFBSW9CLFlBQVcsRUFBRzQwQixjQUFhLElBQUsxMUIsRUFBRUosVUFBVW0zQixNQUFNLFdBQVcsSUFBSXgyQixFQUFFYixFQUFFRSxVQUFVbTNCLE1BQU05MUIsS0FBS25CLE1BQU1VLEVBQUUsSUFBSVIsRUFBRUYsS0FBS20zQixRQUFRbjNCLEtBQUswTCxVQUFVLE9BQU9oTCxFQUFFMk8sUUFBUTVPLEVBQUU0TyxRQUFRM08sRUFBRXVkLFNBQVN4ZCxFQUFFd2QsU0FBU3ZkLEVBQUVpOUIsc0JBQXNCajlCLEdBQUdSLEVBQWh2QixDQUFtdkIwQyxJQUFJNDdCLEdBQUcsV0FBVyxJQUFJNStCLEVBQUUsU0FBU00sRUFBRU8sR0FBRyxPQUFPYixFQUFFa0IsT0FBTzY3QixnQkFBZ0IsQ0FBQ0MsVUFBVSxjQUFjL25CLE9BQU8sU0FBU2pWLEVBQUVNLEdBQUdOLEVBQUVnOUIsVUFBVTE4QixJQUFJLFNBQVNOLEVBQUVNLEdBQUcsSUFBSSxJQUFJTyxLQUFLUCxFQUFFWSxPQUFPaEIsVUFBVW9CLGVBQWVDLEtBQUtqQixFQUFFTyxLQUFLYixFQUFFYSxHQUFHUCxFQUFFTyxLQUFLYixFQUFFTSxFQUFFTyxJQUFJLE9BQU8sU0FBU1AsRUFBRU8sR0FBRyxHQUFHLG1CQUFtQkEsR0FBRyxPQUFPQSxFQUFFLE1BQU0sSUFBSWtXLFVBQVUsdUJBQXVCOVcsT0FBT1ksR0FBRyxpQ0FBaUMsU0FBU0MsSUFBSVYsS0FBS2djLFlBQVk5YixFQUFFTixFQUFFTSxFQUFFTyxHQUFHUCxFQUFFSixVQUFVLE9BQU9XLEVBQUVLLE9BQU9zMkIsT0FBTzMyQixJQUFJQyxFQUFFWixVQUFVVyxFQUFFWCxVQUFVLElBQUlZLElBQWpkLEdBQXdkc0IsR0FBRyxTQUFTcEMsR0FBRyxTQUFTTSxFQUFFQSxHQUFHLElBQUlPLEVBQUVULEtBQUssT0FBT0UsRUFBRTY4QixVQUFVLFVBQVV0OEIsRUFBRWIsRUFBRXVCLEtBQUtuQixLQUFLRSxJQUFJRixNQUFNMEwsUUFBUXhMLEVBQUVPLEVBQUVxOEIsU0FBU3I4QixFQUFFLE9BQU8rOUIsR0FBR3QrQixFQUFFTixHQUFHTSxFQUFFSixVQUFVZzlCLE9BQU8sV0FBVyxJQUFJNThCLEVBQUUsR0FBR04sRUFBRUUsVUFBVWc5QixPQUFPMzdCLEtBQUtuQixNQUFNQSxLQUFLMDJCLFNBQVMsUUFBUXgyQixFQUFFRixLQUFLMEwsUUFBUTB5QixlQUFVLElBQVNsK0IsRUFBRUEsRUFBRSwyQkFBMkJGLEtBQUswTCxRQUFRK3lCLEtBQUssQ0FBQyxJQUFJaCtCLEVBQUVtTixTQUFTdWEsY0FBYyxLQUFLMW5CLEVBQUV5VyxVQUFVMUMsSUFBSSxLQUFLLE1BQU01SyxPQUFPNUosS0FBSzBMLFFBQVEreUIsT0FBT3orQixLQUFLcVAsUUFBUTJuQixZQUFZdjJCLEdBQUdULEtBQUswTCxRQUFRZ3pCLFNBQVMxK0IsS0FBSzIrQixnQkFBZ0IzK0IsS0FBSzBMLFFBQVFnekIsVUFBVXgrQixFQUFFSixVQUFVNitCLGdCQUFnQixTQUFTLytCLEdBQUdJLEtBQUtxUCxRQUFRc0IsaUJBQWlCLFNBQVEsU0FBVXpRLEdBQUcsT0FBT04sRUFBRU0sT0FBT0EsRUFBRUosVUFBVW0zQixNQUFNLFdBQVcsSUFBSXgyQixFQUFFYixFQUFFRSxVQUFVbTNCLE1BQU05MUIsS0FBS25CLE1BQU1VLEVBQUUsSUFBSVIsRUFBRUYsS0FBS20zQixRQUFRbjNCLEtBQUswTCxVQUFVLE9BQU9oTCxFQUFFdWQsU0FBU3hkLEVBQUV3ZCxTQUFTdmQsR0FBR1IsRUFBcHRCLENBQXV0QjBDLElBQUlnOEIsR0FBRyxXQUFXLElBQUloL0IsRUFBRSxTQUFTTSxFQUFFTyxHQUFHLE9BQU9iLEVBQUVrQixPQUFPNjdCLGdCQUFnQixDQUFDQyxVQUFVLGNBQWMvbkIsT0FBTyxTQUFTalYsRUFBRU0sR0FBR04sRUFBRWc5QixVQUFVMThCLElBQUksU0FBU04sRUFBRU0sR0FBRyxJQUFJLElBQUlPLEtBQUtQLEVBQUVZLE9BQU9oQixVQUFVb0IsZUFBZUMsS0FBS2pCLEVBQUVPLEtBQUtiLEVBQUVhLEdBQUdQLEVBQUVPLEtBQUtiLEVBQUVNLEVBQUVPLElBQUksT0FBTyxTQUFTUCxFQUFFTyxHQUFHLEdBQUcsbUJBQW1CQSxHQUFHLE9BQU9BLEVBQUUsTUFBTSxJQUFJa1csVUFBVSx1QkFBdUI5VyxPQUFPWSxHQUFHLGlDQUFpQyxTQUFTQyxJQUFJVixLQUFLZ2MsWUFBWTliLEVBQUVOLEVBQUVNLEVBQUVPLEdBQUdQLEVBQUVKLFVBQVUsT0FBT1csRUFBRUssT0FBT3MyQixPQUFPMzJCLElBQUlDLEVBQUVaLFVBQVVXLEVBQUVYLFVBQVUsSUFBSVksSUFBamQsR0FBd2RvRCxHQUFHLFNBQVNsRSxHQUFHLFNBQVNNLEVBQUVBLEdBQUcsSUFBSU8sRUFBRWIsRUFBRXVCLEtBQUtuQixPQUFPQSxLQUFLLE9BQU9TLEVBQUVpTCxRQUFReEwsRUFBRU8sRUFBRW8rQixrQkFBa0JwK0IsRUFBRWlMLFFBQVFvekIsWUFBWXIrQixFQUFFcytCLFFBQVEsR0FBR24xQixPQUFPbkosRUFBRW8rQixrQkFBa0IsUUFBUWoxQixPQUFPbkosRUFBRWlMLFFBQVF3eEIsV0FBV3o4QixFQUFFdStCLGFBQWEsR0FBR3AxQixPQUFPbkosRUFBRW8rQixrQkFBa0IsU0FBU2oxQixPQUFPbkosRUFBRWlMLFFBQVF3eEIsV0FBV3o4QixFQUFFdytCLFlBQVksR0FBR3IxQixPQUFPbkosRUFBRW8rQixrQkFBa0IsU0FBU2oxQixPQUFPbkosRUFBRWlMLFFBQVF3eEIsV0FBV3o4QixFQUFFeStCLE9BQU8sR0FBR3QxQixPQUFPbkosRUFBRW8rQixrQkFBa0IsT0FBT2oxQixPQUFPbkosRUFBRWlMLFFBQVF3eEIsV0FBV3o4QixFQUFFcThCLFNBQVNyOEIsRUFBRTArQixLQUFLMStCLEVBQUUyK0IsYUFBYTMrQixFQUFFNCtCLGVBQWUsU0FBU3ovQixFQUFFTSxHQUFHd2IsUUFBUWdmLE9BQU9qNkIsRUFBRSxPQUFPbStCLEdBQUcxK0IsRUFBRU4sR0FBR00sRUFBRUosVUFBVWc5QixPQUFPLFdBQVcsSUFBSWw5QixFQUFFSSxLQUFLRSxFQUFFME4sU0FBU2drQixlQUFlNXhCLEtBQUsrK0IsU0FBUyxHQUFHNytCLEVBQUVGLEtBQUtxUCxRQUFRblAsRUFBRUYsS0FBS3MvQixjQUFjclYsR0FBR25OLG9CQUFvQjVjLE9BQU8sQ0FBQ0YsS0FBS3FQLFFBQVF6QixTQUFTdWEsY0FBYyxPQUFPbm9CLEtBQUtxUCxRQUFRMnRCLEdBQUdoOUIsS0FBSysrQixRQUFRLytCLEtBQUtxUCxRQUFRNkgsVUFBVTFDLElBQUksU0FBU3hVLEtBQUtxUCxRQUFRa2QsVUFBVSxvUUFBb1EzaUIsT0FBTzVKLEtBQUtnL0IsYUFBYSw0VUFBNFVwMUIsT0FBTzVKLEtBQUtpL0IsWUFBWSxtYkFBbWIsSUFBSXgrQixFQUFFbU4sU0FBU2drQixlQUFlNXhCLEtBQUs2K0IsbUJBQW1CcCtCLEdBQUdBLEVBQUV1MkIsWUFBWWgzQixLQUFLcVAsU0FBU3JQLEtBQUtzL0IsY0FBYyxJQUFJclYsR0FBR2pxQixLQUFLcVAsU0FBU3JQLEtBQUtxUCxRQUFRc0IsaUJBQWlCLGtCQUFpQixTQUFVelEsR0FBR04sRUFBRXUvQixLQUFLSSxZQUFZMy9CLEVBQUV1L0IsS0FBS0ssaUJBQWlCQyxZQUFZLEVBQUU3L0IsRUFBRXUvQixLQUFLTyxjQUFjLEdBQUc5L0IsRUFBRSsvQixlQUFlLy9CLEVBQUUrL0IsY0FBYy8vQixRQUFRTSxFQUFFSixVQUFVZ2tCLEtBQUssV0FBVzlqQixLQUFLcy9CLGNBQWN4YixRQUFRNWpCLEVBQUVKLFVBQVVzL0IsV0FBVyxXQUFXLElBQUlwL0IsS0FBS3MyQixTQUFTdDJCLEtBQUtrL0IsUUFBUSxDQUFDLElBQUl0L0IsRUFBRSxDQUFDOEssS0FBSzFLLEtBQUswTCxRQUFRbXZCLGVBQWUsSUFBSTc2QixLQUFLMEwsUUFBUXd4QixVQUFVMEMsVUFBUyxFQUFHQyxJQUFJNy9CLEtBQUswTCxRQUFRbzBCLE9BQU81L0IsRUFBRSxDQUFDZy9CLE9BQU9sL0IsS0FBS2svQixPQUFPRCxZQUFZai9CLEtBQUtpL0IsWUFBWWMsY0FBYy8vQixLQUFLMEwsUUFBUXMwQixTQUFTQyxXQUFXcmdDLEVBQUVzZ0MsWUFBVyxFQUFHQyxzQkFBcUIsR0FBSTEvQixFQUFFLElBQUllLEdBQUd0QixHQUFHLE9BQU9PLEVBQUUyL0Isb0JBQW9CMy9CLEVBQUU0L0IsY0FBY3Y3QixHQUFHaTBCLFdBQVd0NEIsRUFBRTQvQixjQUFjdjdCLEdBQUd3MEIsZUFBZTc0QixFQUFFNC9CLGNBQWN2N0IsR0FBR3kwQixpQkFBaUI5NEIsRUFBRTQvQixjQUFjdjdCLEdBQUdvMEIsZ0JBQWdCejRCLEVBQUU0L0IsY0FBY3Y3QixHQUFHKzBCLGVBQWVwNUIsRUFBRTYvQixTQUFTNy9CLEVBQUU4L0IsWUFBWUMsU0FBUSxFQUFHLy9CLElBQUlQLEVBQS91RixDQUFrdkYwQixJQUFJNitCLEdBQUcsV0FBVyxJQUFJN2dDLEVBQUUsU0FBU00sRUFBRU8sR0FBRyxPQUFPYixFQUFFa0IsT0FBTzY3QixnQkFBZ0IsQ0FBQ0MsVUFBVSxjQUFjL25CLE9BQU8sU0FBU2pWLEVBQUVNLEdBQUdOLEVBQUVnOUIsVUFBVTE4QixJQUFJLFNBQVNOLEVBQUVNLEdBQUcsSUFBSSxJQUFJTyxLQUFLUCxFQUFFWSxPQUFPaEIsVUFBVW9CLGVBQWVDLEtBQUtqQixFQUFFTyxLQUFLYixFQUFFYSxHQUFHUCxFQUFFTyxLQUFLYixFQUFFTSxFQUFFTyxJQUFJLE9BQU8sU0FBU1AsRUFBRU8sR0FBRyxHQUFHLG1CQUFtQkEsR0FBRyxPQUFPQSxFQUFFLE1BQU0sSUFBSWtXLFVBQVUsdUJBQXVCOVcsT0FBT1ksR0FBRyxpQ0FBaUMsU0FBU0MsSUFBSVYsS0FBS2djLFlBQVk5YixFQUFFTixFQUFFTSxFQUFFTyxHQUFHUCxFQUFFSixVQUFVLE9BQU9XLEVBQUVLLE9BQU9zMkIsT0FBTzMyQixJQUFJQyxFQUFFWixVQUFVVyxFQUFFWCxVQUFVLElBQUlZLElBQWpkLEdBQXdka0QsR0FBRyxTQUFTaEUsR0FBRyxTQUFTTSxFQUFFQSxFQUFFTyxHQUFHLElBQUlDLEVBQUVkLEVBQUV1QixLQUFLbkIsS0FBS0UsSUFBSUYsS0FBSyxPQUFPVSxFQUFFZ0wsUUFBUXhMLEVBQUVRLEVBQUVnZ0MsZUFBZWpnQyxFQUFFQyxFQUFFbzhCLFNBQVNwOEIsRUFBRSxPQUFPKy9CLEdBQUd2Z0MsRUFBRU4sR0FBR00sRUFBRUosVUFBVXUvQixlQUFlLFNBQVN6L0IsRUFBRU0sR0FBRyxJQUFJTyxFQUFFYixFQUFFdS9CLEtBQUtydEIsS0FBSzZ1QixpQkFBaUJDLFlBQVludEIsTUFBSyxTQUFVN1QsR0FBRyxPQUFPQSxFQUFFaWhDLFNBQVNwZ0MsSUFBSVQsS0FBSzhnQyxXQUFXdEQsSUFBSS84QixFQUFFKzhCLElBQUl4OUIsS0FBSzhnQyxXQUFXdkQsVUFBVTM5QixFQUFFMC9CLGNBQWM3M0IsUUFBUXZILEVBQUVKLFVBQVVnOUIsT0FBTyxXQUFXLElBQUlsOUIsRUFBRUksS0FBSyxJQUFJQSxLQUFLMGdDLGVBQWUsQ0FBQyxJQUFJeGdDLEVBQUUsSUFBSTRELEdBQUc5RCxLQUFLMEwsU0FBUzFMLEtBQUswZ0MsZUFBZXhnQyxFQUFFRixLQUFLOGdDLFdBQVcsSUFBSTU4QixHQUFHbEUsS0FBSzBMLFNBQVMxTCxLQUFLK2dDLFdBQVcsSUFBSS8rQixHQUFHLENBQUM2NEIsZUFBZTc2QixLQUFLMEwsUUFBUW12QixlQUFlNEQsS0FBSyxTQUFTQyxRQUFRLFNBQVN4K0IsR0FBRyxPQUFPTyxFQUFFYixFQUFFQSxFQUFFOGdDLGVBQWV2QixLQUFLa0IsY0FBY3Y3QixHQUFHdTFCLHVCQUF1Qno2QixFQUFFOGdDLGVBQWV2QixLQUFLNkIsV0FBV2w4QixHQUFHdTFCLHVCQUFzQixTQUFVbjZCLEVBQUVRLEdBQUcsT0FBT0QsRUFBRTQrQixlQUFlei9CLEVBQUU4Z0MsZUFBZWhnQyxXQUFXZCxFQUFFOGdDLGVBQWU1YyxPQUFPLElBQUlyakIsS0FBSyxJQUFJQSxFQUFFbU4sU0FBU3VhLGNBQWMsT0FBTzFuQixFQUFFeVcsVUFBVTFDLElBQUksY0FBYyxrQkFBa0IvVCxFQUFFdTJCLFlBQVloM0IsS0FBSzhnQyxXQUFXenhCLFNBQVM1TyxFQUFFdTJCLFlBQVloM0IsS0FBSytnQyxXQUFXMXhCLFNBQVNyUCxLQUFLcVAsUUFBUTVPLEdBQUdQLEVBQUVKLFVBQVVtM0IsTUFBTSxXQUFXLElBQUl4MkIsRUFBRWIsRUFBRUUsVUFBVW0zQixNQUFNOTFCLEtBQUtuQixNQUFNVSxFQUFFVixLQUFLbTNCLFFBQVFuM0IsS0FBSzBMLFNBQVNoTCxFQUFFdWdDLGNBQWEsRUFBRyxJQUFJdGdDLEVBQUUsSUFBSVQsRUFBRVEsRUFBRVYsS0FBSzBnQyxnQkFBZ0IsT0FBTy8vQixFQUFFc2QsU0FBU3hkLEVBQUV3ZCxTQUFTdGQsR0FBR1QsRUFBN29DLENBQWdwQzBDLElBQUlzK0IsR0FBRyxXQUFXLElBQUl0aEMsRUFBRSxTQUFTTSxFQUFFTyxHQUFHLE9BQU9iLEVBQUVrQixPQUFPNjdCLGdCQUFnQixDQUFDQyxVQUFVLGNBQWMvbkIsT0FBTyxTQUFTalYsRUFBRU0sR0FBR04sRUFBRWc5QixVQUFVMThCLElBQUksU0FBU04sRUFBRU0sR0FBRyxJQUFJLElBQUlPLEtBQUtQLEVBQUVZLE9BQU9oQixVQUFVb0IsZUFBZUMsS0FBS2pCLEVBQUVPLEtBQUtiLEVBQUVhLEdBQUdQLEVBQUVPLEtBQUtiLEVBQUVNLEVBQUVPLElBQUksT0FBTyxTQUFTUCxFQUFFTyxHQUFHLEdBQUcsbUJBQW1CQSxHQUFHLE9BQU9BLEVBQUUsTUFBTSxJQUFJa1csVUFBVSx1QkFBdUI5VyxPQUFPWSxHQUFHLGlDQUFpQyxTQUFTQyxJQUFJVixLQUFLZ2MsWUFBWTliLEVBQUVOLEVBQUVNLEVBQUVPLEdBQUdQLEVBQUVKLFVBQVUsT0FBT1csRUFBRUssT0FBT3MyQixPQUFPMzJCLElBQUlDLEVBQUVaLFVBQVVXLEVBQUVYLFVBQVUsSUFBSVksSUFBamQsR0FBd2R5Z0MsR0FBRyxXQUFXLE9BQU9BLEdBQUdyZ0MsT0FBT3NLLFFBQVEsU0FBU3hMLEdBQUcsSUFBSSxJQUFJTSxFQUFFTyxFQUFFLEVBQUVDLEVBQUVGLFVBQVUyUyxPQUFPMVMsRUFBRUMsRUFBRUQsSUFBSSxJQUFJLElBQUlFLEtBQUtULEVBQUVNLFVBQVVDLEdBQUdLLE9BQU9oQixVQUFVb0IsZUFBZUMsS0FBS2pCLEVBQUVTLEtBQUtmLEVBQUVlLEdBQUdULEVBQUVTLElBQUksT0FBT2YsR0FBR3VoQyxHQUFHNW1CLE1BQU12YSxLQUFLUSxZQUFZMEIsR0FBRyxTQUFTdEMsR0FBRyxTQUFTTSxFQUFFQSxFQUFFTyxRQUFHLElBQVNBLElBQUlBLEdBQUUsR0FBSSxJQUFJQyxFQUFFZCxFQUFFdUIsS0FBS25CLE9BQU9BLEtBQUssT0FBT1UsRUFBRWdMLFFBQVF4TCxHQUFHLEdBQUdRLEVBQUUwZ0MsU0FBUzNnQyxFQUFFQyxFQUFFbzhCLFNBQVNwOEIsRUFBRSxPQUFPd2dDLEdBQUdoaEMsRUFBRU4sR0FBR00sRUFBRUosVUFBVWc5QixPQUFPLFdBQVcsSUFBSWw5QixFQUFFSSxLQUFLMEwsUUFBUTFMLEtBQUswTCxRQUFRMjFCLGFBQVEsRUFBT25oQyxFQUFFRixLQUFLMEwsUUFBUTFMLEtBQUswTCxRQUFRNDFCLGFBQVEsRUFBT3RoQyxLQUFLcVAsU0FBUSxJQUFLclAsS0FBS29oQyxTQUFTeHpCLFNBQVN1YSxjQUFjLE1BQU12YSxTQUFTdWEsY0FBYyxNQUFNbm9CLEtBQUtvaEMsV0FBV3BoQyxLQUFLcVAsUUFBUTZILFVBQVUxQyxJQUFJLFVBQVUsVUFBVXhVLEtBQUswTCxRQUFRNjFCLGFBQWF2aEMsS0FBSzgyQixRQUFROTJCLEtBQUswTCxRQUFRNjFCLGNBQWMzaEMsR0FBR0ksS0FBS20yQixLQUFLLFVBQVV2MkIsR0FBR00sR0FBR0YsS0FBS20yQixLQUFLLFVBQVVqMkIsR0FBR0YsS0FBS3doQyxtQkFBbUJ0aEMsRUFBRUosVUFBVTBoQyxnQkFBZ0IsV0FBVyxJQUFJNWhDLEVBQUVJLEtBQUswTCxRQUFRLElBQUkxTCxLQUFLb2hDLFVBQVV4aEMsRUFBRTJoQyxhQUFhM2hDLEVBQUU2aEMsU0FBUyxDQUFDLElBQUl2aEMsRUFBRSxLQUFLTyxFQUFFLENBQUNvNkIsZUFBZWo3QixFQUFFaTdCLGVBQWVxQyxVQUFVdDlCLEVBQUU2aEMsU0FBU25ELFlBQVkxK0IsRUFBRTJoQyxZQUFZcEUsTUFBTXY5QixFQUFFMmhDLFlBQVl4RSxVQUFVbjlCLEVBQUU4aEMsVUFBVSxHQUFHLFdBQVc5aEMsRUFBRThoQyxTQUFTLENBQUMsSUFBSWhoQyxFQUFFeWdDLEdBQUdBLEdBQUcsR0FBRzFnQyxHQUFHLENBQUN5OUIsY0FBY3QrQixFQUFFK2hDLGFBQWF6aEMsRUFBRSxJQUFJc0QsR0FBRzlDLFFBQVEsR0FBRyxhQUFhZCxFQUFFOGhDLFNBQVN4aEMsRUFBRSxJQUFJa0MsR0FBRzNCLFFBQVEsR0FBRyxhQUFhYixFQUFFOGhDLFNBQVMsQ0FBQyxJQUFJL2dDLEVBQUV3Z0MsR0FBR0EsR0FBRyxHQUFHMWdDLEdBQUcsQ0FBQ3ErQixZQUFZbC9CLEVBQUVrL0IsWUFBWWdCLE1BQU1sZ0MsRUFBRWdpQyxlQUFlNUIsU0FBU3BnQyxFQUFFaWlDLGVBQWUzaEMsRUFBRSxJQUFJMEQsR0FBR2pELFFBQVFULEVBQUUsSUFBSWdFLEdBQUd6RCxJQUFHLElBQUtiLEVBQUVraUMsUUFBUTVoQyxFQUFFNmhDLFVBQVMsRUFBRzdoQyxFQUFFMmdDLE9BQU0sSUFBSSxJQUFLamhDLEVBQUVvaUMsYUFBYTloQyxFQUFFNmhDLFVBQVMsRUFBRzdoQyxFQUFFODFCLE9BQU8sU0FBUyxXQUFXOTFCLEVBQUU4MUIsT0FBTyxjQUFjLFNBQVNoMkIsS0FBS29vQixPQUFPbG9CLEtBQUtBLEVBQUVKLFVBQVVtaUMsaUJBQWlCLFdBQVcsSUFBRyxJQUFLamlDLEtBQUtvaEMsU0FBUyxNQUFNLEdBQUcsSUFBSXhoQyxFQUFFLEdBQUdNLEVBQUVGLEtBQUtpZSxTQUFTLE9BQU8vZCxFQUFFaVQsT0FBTyxHQUFHalQsRUFBRStLLFNBQVEsU0FBVS9LLEVBQUVPLEdBQUdQLGFBQWEwRCxHQUFHaEUsRUFBRTBULEtBQUtwVCxFQUFFNGdDLFlBQVk1Z0MsYUFBYTBDLElBQUloRCxFQUFFMFQsS0FBS3BULE1BQU1OLEdBQUdNLEVBQUVKLFVBQVVvaUMsWUFBWSxXQUFXLEdBQUdsaUMsS0FBS29oQyxTQUFTLE9BQU9waEMsS0FBSysyQixVQUFVLElBQUluM0IsRUFBRUksS0FBS2llLFNBQVMsR0FBRyxJQUFJcmUsRUFBRSxNQUFNLEdBQUcsR0FBR0EsRUFBRXlQLG1CQUFtQit0QixpQkFBaUIsQ0FBQyxHQUFHeDlCLGFBQWF3QyxHQUFHLE9BQU94QyxFQUFFeVAsUUFBUWd1QixRQUFRLEdBQUcsR0FBR3o5QixhQUFhZ0QsR0FBRyxPQUFPaEQsRUFBRTQ5QixJQUFJLE9BQU81OUIsRUFBRW0zQixXQUFXNzJCLEVBQUVKLFVBQVVtM0IsTUFBTSxXQUFXLElBQUl4MkIsRUFBRWIsRUFBRUUsVUFBVW0zQixNQUFNOTFCLEtBQUtuQixNQUFNVSxFQUFFLElBQUlSLEVBQUVGLEtBQUttM0IsUUFBUW4zQixLQUFLMEwsU0FBUzFMLEtBQUtvaEMsVUFBVXpnQyxFQUFFRCxFQUFFcTJCLFVBQVUsT0FBT3IyQixFQUFFdWQsU0FBU3hkLEVBQUV3ZCxTQUFTdmQsRUFBRTJPLFFBQVE1TyxFQUFFNE8sUUFBUXJQLEtBQUtvaEMsVUFBVTFnQyxFQUFFbzJCLFFBQVFuMkIsR0FBR0QsR0FBR1IsRUFBNTJELENBQSsyRDBCLElBQUlzQixHQUFHLFNBQVN0RCxFQUFFTSxFQUFFTyxRQUFHLElBQVNiLElBQUlBLEVBQUUsUUFBRyxJQUFTTSxJQUFJQSxFQUFFLFNBQUksSUFBU08sSUFBSUEsRUFBRSxJQUFJVCxLQUFLbWlDLFVBQVV2aUMsRUFBRUksS0FBS29pQyxVQUFVbGlDLEdBQUdBLEdBQUcsRUFBRSxHQUFHQSxFQUFFRixLQUFLcWlDLGFBQWE1aEMsRUFBRVQsS0FBS3NpQyxXQUFXcjJCLEtBQUtzMkIsS0FBS3ZpQyxLQUFLcWlDLGFBQWFyaUMsS0FBS29pQyxXQUFXSSxHQUFHLFdBQVcsSUFBSTVpQyxFQUFFLFNBQVNNLEVBQUVPLEdBQUcsT0FBT2IsRUFBRWtCLE9BQU82N0IsZ0JBQWdCLENBQUNDLFVBQVUsY0FBYy9uQixPQUFPLFNBQVNqVixFQUFFTSxHQUFHTixFQUFFZzlCLFVBQVUxOEIsSUFBSSxTQUFTTixFQUFFTSxHQUFHLElBQUksSUFBSU8sS0FBS1AsRUFBRVksT0FBT2hCLFVBQVVvQixlQUFlQyxLQUFLakIsRUFBRU8sS0FBS2IsRUFBRWEsR0FBR1AsRUFBRU8sS0FBS2IsRUFBRU0sRUFBRU8sSUFBSSxPQUFPLFNBQVNQLEVBQUVPLEdBQUcsR0FBRyxtQkFBbUJBLEdBQUcsT0FBT0EsRUFBRSxNQUFNLElBQUlrVyxVQUFVLHVCQUF1QjlXLE9BQU9ZLEdBQUcsaUNBQWlDLFNBQVNDLElBQUlWLEtBQUtnYyxZQUFZOWIsRUFBRU4sRUFBRU0sRUFBRU8sR0FBR1AsRUFBRUosVUFBVSxPQUFPVyxFQUFFSyxPQUFPczJCLE9BQU8zMkIsSUFBSUMsRUFBRVosVUFBVVcsRUFBRVgsVUFBVSxJQUFJWSxJQUFqZCxHQUF3ZDhCLEdBQUcsU0FBUzVDLEdBQUcsU0FBU00sRUFBRUEsRUFBRU8sUUFBRyxJQUFTQSxJQUFJQSxHQUFFLEdBQUksSUFBSUMsRUFBRWQsRUFBRXVCLEtBQUtuQixPQUFPQSxLQUFLLE9BQU9VLEVBQUU4NkIsZUFBZSxJQUFJOTJCLEdBQUdoRSxFQUFFNDdCLGVBQWVwOEIsRUFBRVEsRUFBRStoQyxjQUFjaGlDLEVBQUVDLEVBQUUsT0FBTzhoQyxHQUFHdGlDLEVBQUVOLEdBQUdNLEVBQUVKLFVBQVUrOEIsZ0JBQWdCLFNBQVNqOUIsRUFBRU0sR0FBR2dGLEdBQUc0MUIsS0FBS2w3QixFQUFFSSxLQUFLRSxJQUFJQSxFQUFFSixVQUFVbUIsSUFBSSxTQUFTckIsR0FBRyxJQUFJTSxFQUFFTyxFQUFFVCxLQUFLVSxFQUFFRCxFQUFFZ2lDLGNBQWMsSUFBRyxJQUFLL2hDLEVBQUUsQ0FBQyxJQUFJQyxFQUFFNDNCLEtBQUtHLFVBQVU5NEIsR0FBR2dCLEVBQUVaLEtBQUt3N0IsZUFBZU0sUUFBUW43QixHQUFHLEdBQUdDLEVBQUUsT0FBT0gsRUFBRWlpQyxlQUFlOWhDLEVBQUVoQixHQUFHd1YsUUFBUUMsVUFBVSxJQUFJek4sRUFBRSxDQUFDdXJCLE9BQU8sUUFBUWp6QixFQUFFTixFQUFFdXpCLGNBQVMsSUFBU2p6QixFQUFFQSxFQUFFLE1BQU15aUMsUUFBUS9pQyxFQUFFK2lDLFFBQVEvaUMsRUFBRStpQyxRQUFRLElBQUksT0FBT0MsTUFBTWhqQyxFQUFFaWdDLElBQUlqNEIsR0FBRzBOLE1BQUssU0FBVTFWLEdBQUcsT0FBT0EsRUFBRWlqQyxVQUFVdnRCLE1BQUssU0FBVXBWLElBQUcsSUFBS1EsR0FBR0QsRUFBRSs2QixlQUFlSCxRQUFRMTZCLEVBQUVULEVBQUUsSUFBSTA3QixLQUFLQSxLQUFLRyxNQUFNLE1BQU10N0IsRUFBRWlpQyxlQUFleGlDLEVBQUVOLE1BQU1rakMsT0FBTSxTQUFVNWlDLEdBQUdPLEVBQUVzaUMsWUFBWTdpQyxFQUFFTixPQUFPTSxFQUFFSixVQUFVNGlDLGVBQWUsU0FBUzlpQyxFQUFFTSxHQUFHLElBQUksSUFBSU8sRUFBRSxDQUFDbzZCLGVBQWU3NkIsS0FBS3M4QixlQUFlM0IsVUFBVSxDQUFDNEIsS0FBSzM4QixFQUFFb2pDLE1BQU1DLFNBQVMsSUFBSS8vQixHQUFHdEQsRUFBRXNqQyxTQUFTZixVQUFVdmlDLEVBQUVzakMsU0FBU2QsU0FBU3hpQyxFQUFFc2pDLFNBQVNiLGdCQUFnQixNQUFNemlDLEdBQUcsWUFBWUksS0FBSytpQyxZQUFZLHVIQUF1SDdpQyxHQUFHRixLQUFLNjhCLGdCQUFnQi8zQixHQUFHMjBCLHFCQUFxQmg1QixJQUFJUCxFQUFFSixVQUFVaWpDLFlBQVksU0FBU25qQyxFQUFFTSxHQUFHLElBQUlPLEVBQUUsQ0FBQ282QixlQUFlNzZCLEtBQUtzOEIsZUFBZTNCLFVBQVUsQ0FBQ3hrQixNQUFNdlcsRUFBRXVqQyxTQUFTampDLEVBQUVrakMsV0FBV3BqQyxLQUFLNjhCLGdCQUFnQi8zQixHQUFHNDBCLDJCQUEyQmo1QixJQUFJUCxFQUF0dkMsQ0FBeXZDMEIsSUFBSXloQyxHQUFHLFdBQVcsSUFBSXpqQyxFQUFFLFNBQVNNLEVBQUVPLEdBQUcsT0FBT2IsRUFBRWtCLE9BQU82N0IsZ0JBQWdCLENBQUNDLFVBQVUsY0FBYy9uQixPQUFPLFNBQVNqVixFQUFFTSxHQUFHTixFQUFFZzlCLFVBQVUxOEIsSUFBSSxTQUFTTixFQUFFTSxHQUFHLElBQUksSUFBSU8sS0FBS1AsRUFBRVksT0FBT2hCLFVBQVVvQixlQUFlQyxLQUFLakIsRUFBRU8sS0FBS2IsRUFBRWEsR0FBR1AsRUFBRU8sS0FBS2IsRUFBRU0sRUFBRU8sSUFBSSxPQUFPLFNBQVNQLEVBQUVPLEdBQUcsR0FBRyxtQkFBbUJBLEdBQUcsT0FBT0EsRUFBRSxNQUFNLElBQUlrVyxVQUFVLHVCQUF1QjlXLE9BQU9ZLEdBQUcsaUNBQWlDLFNBQVNDLElBQUlWLEtBQUtnYyxZQUFZOWIsRUFBRU4sRUFBRU0sRUFBRU8sR0FBR1AsRUFBRUosVUFBVSxPQUFPVyxFQUFFSyxPQUFPczJCLE9BQU8zMkIsSUFBSUMsRUFBRVosVUFBVVcsRUFBRVgsVUFBVSxJQUFJWSxJQUFqZCxHQUF3ZDRpQyxHQUFHLFNBQVMxakMsR0FBRyxTQUFTTSxFQUFFQSxHQUFHLElBQUlPLEVBQUViLEVBQUV1QixLQUFLbkIsT0FBT0EsS0FBSyxPQUFPUyxFQUFFaUwsUUFBUXhMLEVBQUVPLEVBQUVxOEIsU0FBU3I4QixFQUFFLE9BQU80aUMsR0FBR25qQyxFQUFFTixHQUFHTSxFQUFFSixVQUFVZzlCLE9BQU8sV0FBVyxJQUFJbDlCLEVBQUVnTyxTQUFTdWEsY0FBYyxLQUFLbm9CLEtBQUswTCxRQUFRb3lCLE9BQU9sK0IsRUFBRWsrQixLQUFLOTlCLEtBQUswTCxRQUFRb3lCLE1BQU05OUIsS0FBSzBMLFFBQVE2M0IsT0FBTzNqQyxFQUFFMmpDLEtBQUt2akMsS0FBSzBMLFFBQVE2M0IsTUFBTXZqQyxLQUFLcVAsUUFBUXpQLEVBQUVJLEtBQUswTCxRQUFRODNCLFNBQVN4akMsS0FBSzAyQixTQUFTMTJCLEtBQUswTCxRQUFRODNCLFNBQVN4akMsS0FBSzBMLFFBQVErM0IsY0FBY3pqQyxLQUFLcVAsUUFBUXNCLGlCQUFpQixRQUFRM1EsS0FBSzBMLFFBQVErM0IsZUFBZXZqQyxFQUFwYSxDQUF1YTBCLElBQUk4aEMsR0FBRyxXQUFXLElBQUk5akMsRUFBRSxTQUFTTSxFQUFFTyxHQUFHLE9BQU9iLEVBQUVrQixPQUFPNjdCLGdCQUFnQixDQUFDQyxVQUFVLGNBQWMvbkIsT0FBTyxTQUFTalYsRUFBRU0sR0FBR04sRUFBRWc5QixVQUFVMThCLElBQUksU0FBU04sRUFBRU0sR0FBRyxJQUFJLElBQUlPLEtBQUtQLEVBQUVZLE9BQU9oQixVQUFVb0IsZUFBZUMsS0FBS2pCLEVBQUVPLEtBQUtiLEVBQUVhLEdBQUdQLEVBQUVPLEtBQUtiLEVBQUVNLEVBQUVPLElBQUksT0FBTyxTQUFTUCxFQUFFTyxHQUFHLEdBQUcsbUJBQW1CQSxHQUFHLE9BQU9BLEVBQUUsTUFBTSxJQUFJa1csVUFBVSx1QkFBdUI5VyxPQUFPWSxHQUFHLGlDQUFpQyxTQUFTQyxJQUFJVixLQUFLZ2MsWUFBWTliLEVBQUVOLEVBQUVNLEVBQUVPLEdBQUdQLEVBQUVKLFVBQVUsT0FBT1csRUFBRUssT0FBT3MyQixPQUFPMzJCLElBQUlDLEVBQUVaLFVBQVVXLEVBQUVYLFVBQVUsSUFBSVksSUFBamQsR0FBd2RzQyxHQUFHLFNBQVNwRCxHQUFHLFNBQVNNLEVBQUVBLEdBQUcsSUFBSU8sRUFBRWIsRUFBRXVCLEtBQUtuQixPQUFPQSxLQUFLLE9BQU9TLEVBQUVrakMsVUFBVSxHQUFHbGpDLEVBQUVpTCxRQUFReEwsRUFBRU8sRUFBRW1qQyxPQUFPLFdBQVdoNkIsT0FBT25KLEVBQUVpTCxRQUFRNHdCLGdCQUFnQjc3QixFQUFFdytCLFlBQVksZ0JBQWdCcjFCLE9BQU9uSixFQUFFaUwsUUFBUTR3QixnQkFBZ0I3N0IsRUFBRSxPQUFPaWpDLEdBQUd4akMsRUFBRU4sR0FBR00sRUFBRUosVUFBVWc5QixPQUFPLFdBQVcsSUFBSWw5QixFQUFFTSxFQUFFRixLQUFLUyxFQUFFLFFBQVFiLEVBQUVJLEtBQUswTCxRQUFRdzNCLFNBQVNmLGlCQUFZLElBQVN2aUMsRUFBRUEsRUFBRSxFQUFFSSxLQUFLcVAsU0FBU3JQLEtBQUtxUCxRQUFRd00sU0FBUzdiLEtBQUsyakMsVUFBVSxHQUFHM2pDLEtBQUtxUCxRQUFRekIsU0FBU3VhLGNBQWMsT0FBT25vQixLQUFLcVAsUUFBUTJ0QixHQUFHaDlCLEtBQUtpL0IsWUFBWWovQixLQUFLMDJCLFNBQVMsaUJBQWlCLElBQUloMkIsRUFBRWtOLFNBQVN1YSxjQUFjLE9BQU96bkIsRUFBRTZLLGFBQWEsYUFBYSxtQkFBbUJ2TCxLQUFLcVAsUUFBUTJuQixZQUFZdDJCLEdBQUcsSUFBSUMsRUFBRWlOLFNBQVN1YSxjQUFjLE1BQU14bkIsRUFBRXE4QixHQUFHaDlCLEtBQUs0akMsT0FBT2pqQyxFQUFFdVcsVUFBVTFDLElBQUksYUFBYSx1QkFBdUIsSUFBSSxJQUFJNVQsRUFBRSxFQUFFQSxHQUFHWixLQUFLMEwsUUFBUXczQixTQUFTWixZQUFZMWhDLEdBQUcsRUFBRUEsSUFBSSxDQUFDLElBQUlnSCxFQUFFZ0csU0FBU3VhLGNBQWMsTUFBTXZnQixFQUFFc1AsVUFBVTFDLElBQUksYUFBYS9ULElBQUlHLEdBQUdnSCxFQUFFc1AsVUFBVTFDLElBQUksVUFBVSxJQUFJMU8sRUFBRSxJQUFJdzlCLEdBQUcsQ0FBQ2hILGVBQWV0OEIsS0FBSzBMLFFBQVE0d0IsZUFBZWtILFFBQVEsWUFBWUQsS0FBSyxJQUFJekYsS0FBSyxHQUFHbDBCLE9BQU9oSixHQUFHNmlDLGFBQWEsU0FBUzdqQyxHQUFHLEdBQUdBLEVBQUV5YixpQkFBaUJ6YixFQUFFOFksa0JBQWtCbk8sYUFBYXJLLEVBQUV3TCxRQUFRbTRCLGlCQUFpQixDQUFDLElBQUlwakMsRUFBRWIsRUFBRThZLE9BQU8vQyxhQUFhLGdCQUFnQnpWLEVBQUV3TCxRQUFRbTRCLGlCQUFpQnZoQixTQUFTN2hCLElBQUlQLEVBQUU0akMsZUFBZXJqQyxPQUFPcUYsRUFBRXF3QixLQUFLLGVBQWUsR0FBR3ZzQixPQUFPaEosSUFBSVosS0FBSzJqQyxVQUFVcndCLEtBQUt4TixHQUFHOEIsRUFBRW92QixZQUFZbHhCLEVBQUV1SixTQUFTMU8sRUFBRXEyQixZQUFZcHZCLEdBQUdsSCxFQUFFczJCLFlBQVlyMkIsSUFBSVQsRUFBRUosVUFBVWdrQyxlQUFlLFNBQVNsa0MsR0FBR0ksS0FBSzJqQyxVQUFVMTRCLFNBQVEsU0FBVS9LLEdBQUcsSUFBSU8sRUFBRVAsRUFBRW1QLFFBQVF3TixRQUFRLGNBQWNwYyxJQUFJUCxFQUFFazJCLFFBQVEsa0JBQWtCeDJCLEdBQUUsSUFBS2EsRUFBRXlXLFVBQVUvSixTQUFTLFdBQVcxTSxFQUFFeVcsVUFBVTFDLElBQUksVUFBVS9ULEVBQUV5VyxVQUFVMkUsT0FBTyxlQUFlM2IsRUFBRUosVUFBVWlrQyxNQUFNLFdBQVcsSUFBSW5rQyxFQUFFSSxLQUFLcVAsUUFBUUMsY0FBYyxJQUFJdFAsS0FBSzRqQyxRQUFRNWpDLEtBQUsyakMsVUFBVSxHQUFHL2pDLEVBQUVva0MsbUJBQW1COWpDLEVBQXZuRCxDQUEwbkQwQixJQUFJcWlDLEdBQUcsV0FBVyxJQUFJcmtDLEVBQUUsU0FBU00sRUFBRU8sR0FBRyxPQUFPYixFQUFFa0IsT0FBTzY3QixnQkFBZ0IsQ0FBQ0MsVUFBVSxjQUFjL25CLE9BQU8sU0FBU2pWLEVBQUVNLEdBQUdOLEVBQUVnOUIsVUFBVTE4QixJQUFJLFNBQVNOLEVBQUVNLEdBQUcsSUFBSSxJQUFJTyxLQUFLUCxFQUFFWSxPQUFPaEIsVUFBVW9CLGVBQWVDLEtBQUtqQixFQUFFTyxLQUFLYixFQUFFYSxHQUFHUCxFQUFFTyxLQUFLYixFQUFFTSxFQUFFTyxJQUFJLE9BQU8sU0FBU1AsRUFBRU8sR0FBRyxHQUFHLG1CQUFtQkEsR0FBRyxPQUFPQSxFQUFFLE1BQU0sSUFBSWtXLFVBQVUsdUJBQXVCOVcsT0FBT1ksR0FBRyxpQ0FBaUMsU0FBU0MsSUFBSVYsS0FBS2djLFlBQVk5YixFQUFFTixFQUFFTSxFQUFFTyxHQUFHUCxFQUFFSixVQUFVLE9BQU9XLEVBQUVLLE9BQU9zMkIsT0FBTzMyQixJQUFJQyxFQUFFWixVQUFVVyxFQUFFWCxVQUFVLElBQUlZLElBQWpkLEdBQXdkZ0MsR0FBRyxTQUFTOUMsR0FBRyxTQUFTTSxFQUFFQSxHQUFHLElBQUlPLEVBQUViLEVBQUV1QixLQUFLbkIsT0FBT0EsS0FBSyxPQUFPUyxFQUFFeWpDLFlBQVloa0MsRUFBRWdrQyxZQUFZempDLEVBQUUwakMsV0FBV2prQyxFQUFFaWtDLFdBQVcxakMsRUFBRTJqQyxPQUFPLEtBQUszakMsRUFBRTRqQyxTQUFTLEtBQUs1akMsRUFBRWlZLE9BQU8sS0FBS2pZLEVBQUVnL0IsWUFBWSxFQUFFaC9CLEVBQUU2akMsU0FBUyxLQUFLN2pDLEVBQUU4akMsYUFBYSxLQUFLOWpDLEVBQUVvakMsaUJBQWlCLEtBQUtwakMsRUFBRSxPQUFPd2pDLEdBQUcvakMsRUFBRU4sR0FBR00sRUFBRUosVUFBVTBrQyxXQUFXLFNBQVM1a0MsRUFBRU0sSUFBRyxJQUFLTixFQUFFLEdBQUc2a0MsZ0JBQWdCemtDLEtBQUt5L0IsWUFBWXovQixLQUFLdWtDLGFBQWFqQyxhQUFhNW1CLFFBQVFnZixJQUFJLHlDQUF5QzE2QixLQUFLeS9CLFlBQVksR0FBR3ovQixLQUFLeS9CLGNBQWN6L0IsS0FBSzZqQyxpQkFBaUI3akMsS0FBS3kvQixlQUFldi9CLEVBQUVKLFVBQVU0a0MsUUFBUSxTQUFTOWtDLEdBQUdJLEtBQUswWSxPQUFPOVksRUFBRUksS0FBS3FrQyxTQUFTSyxRQUFROWtDLElBQUlNLEVBQUVKLFVBQVU2a0MsVUFBVSxXQUFXM2tDLEtBQUtxa0MsU0FBU00sVUFBVTNrQyxLQUFLMFksU0FBU3hZLEVBQUVKLFVBQVUrd0IsT0FBTyxXQUFXLElBQUlqeEIsRUFBRUksS0FBS0EsS0FBS29rQyxPQUFPLGVBQWVwa0MsS0FBS2trQyxZQUFZbEgsR0FBRyxJQUFJOThCLEVBQUUwTixTQUFTdWEsY0FBYyxPQUFPam9CLEVBQUU4OEIsR0FBR2g5QixLQUFLb2tDLE9BQU9sa0MsRUFBRWdYLFVBQVUxQyxJQUFJLE1BQU0sYUFBYXhVLEtBQUtnZixLQUFLOWUsRUFBRUYsS0FBS2trQyxhQUFhLElBQUl6akMsRUFBRSxDQUFDcEIsS0FBS3VPLFNBQVNna0IsZUFBZTV4QixLQUFLb2tDLFFBQVFRLFdBQVcsTUFBTUMsVUFBVSxHQUFHQyxpQkFBZ0IsR0FBSTlrQyxLQUFLcWtDLFNBQVMsSUFBSVUsc0JBQXFCLFNBQVU3a0MsRUFBRU8sR0FBRyxPQUFPYixFQUFFNGtDLFdBQVd0a0MsRUFBRU8sS0FBS0EsR0FBRyxJQUFJQyxFQUFFVixLQUFLa2tDLFlBQVkvcEIsaUJBQWlCLE1BQU14WixFQUFFRCxFQUFFQSxFQUFFeVMsT0FBTyxHQUFHblQsS0FBSzBrQyxRQUFRL2pDLElBQUlULEVBQWpsQyxDQUFvbEMwQixJQUFJb2pDLEdBQUcsV0FBVyxJQUFJcGxDLEVBQUUsU0FBU00sRUFBRU8sR0FBRyxPQUFPYixFQUFFa0IsT0FBTzY3QixnQkFBZ0IsQ0FBQ0MsVUFBVSxjQUFjL25CLE9BQU8sU0FBU2pWLEVBQUVNLEdBQUdOLEVBQUVnOUIsVUFBVTE4QixJQUFJLFNBQVNOLEVBQUVNLEdBQUcsSUFBSSxJQUFJTyxLQUFLUCxFQUFFWSxPQUFPaEIsVUFBVW9CLGVBQWVDLEtBQUtqQixFQUFFTyxLQUFLYixFQUFFYSxHQUFHUCxFQUFFTyxLQUFLYixFQUFFTSxFQUFFTyxJQUFJLE9BQU8sU0FBU1AsRUFBRU8sR0FBRyxHQUFHLG1CQUFtQkEsR0FBRyxPQUFPQSxFQUFFLE1BQU0sSUFBSWtXLFVBQVUsdUJBQXVCOVcsT0FBT1ksR0FBRyxpQ0FBaUMsU0FBU0MsSUFBSVYsS0FBS2djLFlBQVk5YixFQUFFTixFQUFFTSxFQUFFTyxHQUFHUCxFQUFFSixVQUFVLE9BQU9XLEVBQUVLLE9BQU9zMkIsT0FBTzMyQixJQUFJQyxFQUFFWixVQUFVVyxFQUFFWCxVQUFVLElBQUlZLElBQWpkLEdBQXdkb0MsR0FBRyxTQUFTbEQsR0FBRyxTQUFTTSxJQUFJLElBQUlBLEVBQUVOLEVBQUV1QixLQUFLbkIsT0FBT0EsS0FBSyxPQUFPRSxFQUFFNDhCLFNBQVM1OEIsRUFBRSxPQUFPOGtDLEdBQUc5a0MsRUFBRU4sR0FBR00sRUFBRUosVUFBVWc5QixPQUFPLFdBQVc5OEIsS0FBS3FQLFFBQVF6QixTQUFTdWEsY0FBYyxLQUFLbm9CLEtBQUtxUCxRQUFRNkgsVUFBVTFDLElBQUksS0FBSyxpQkFBaUIsZUFBZXRVLEVBQUVKLFVBQVVtM0IsTUFBTSxXQUFXLE9BQU9yM0IsRUFBRUUsVUFBVW0zQixNQUFNOTFCLEtBQUtuQixPQUFPRSxFQUE5UixDQUFpUzBCLElBQUlxakMsR0FBRyxXQUFXLElBQUlybEMsRUFBRSxTQUFTTSxFQUFFTyxHQUFHLE9BQU9iLEVBQUVrQixPQUFPNjdCLGdCQUFnQixDQUFDQyxVQUFVLGNBQWMvbkIsT0FBTyxTQUFTalYsRUFBRU0sR0FBR04sRUFBRWc5QixVQUFVMThCLElBQUksU0FBU04sRUFBRU0sR0FBRyxJQUFJLElBQUlPLEtBQUtQLEVBQUVZLE9BQU9oQixVQUFVb0IsZUFBZUMsS0FBS2pCLEVBQUVPLEtBQUtiLEVBQUVhLEdBQUdQLEVBQUVPLEtBQUtiLEVBQUVNLEVBQUVPLElBQUksT0FBTyxTQUFTUCxFQUFFTyxHQUFHLEdBQUcsbUJBQW1CQSxHQUFHLE9BQU9BLEVBQUUsTUFBTSxJQUFJa1csVUFBVSx1QkFBdUI5VyxPQUFPWSxHQUFHLGlDQUFpQyxTQUFTQyxJQUFJVixLQUFLZ2MsWUFBWTliLEVBQUVOLEVBQUVNLEVBQUVPLEdBQUdQLEVBQUVKLFVBQVUsT0FBT1csRUFBRUssT0FBT3MyQixPQUFPMzJCLElBQUlDLEVBQUVaLFVBQVVXLEVBQUVYLFVBQVUsSUFBSVksSUFBamQsR0FBd2RnQixHQUFHLFNBQVM5QixHQUFHLFNBQVNNLElBQUksSUFBSUEsRUFBRU4sRUFBRXVCLEtBQUtuQixPQUFPQSxLQUFLLE9BQU9FLEVBQUU0OEIsU0FBUzU4QixFQUFFLE9BQU8ra0MsR0FBRy9rQyxFQUFFTixHQUFHTSxFQUFFSixVQUFVZzlCLE9BQU8sV0FBVzk4QixLQUFLcVAsUUFBUXpCLFNBQVN1YSxjQUFjLE9BQU9ub0IsS0FBSzAyQixTQUFTLDBCQUEwQngyQixFQUFFSixVQUFVb2xDLFVBQVUsU0FBU3RsQyxFQUFFTSxFQUFFTyxFQUFFQyxFQUFFQyxRQUFHLElBQVNBLElBQUlBLEVBQUUsSUFBSSxJQUFJQyxFQUFFWixLQUFLbWxDLFVBQVV2bEMsRUFBRU0sRUFBRU8sRUFBRUUsR0FBRyxPQUFPQyxFQUFFKzlCLGdCQUFnQmorQixHQUFHVixLQUFLb29CLE9BQU94bkIsR0FBRSxHQUFJWixNQUFNRSxFQUFFSixVQUFVc2xDLGdCQUFnQixTQUFTeGxDLEdBQUcsT0FBT0ksS0FBS2tsQyxVQUFVLGVBQWUsU0FBUyxRQUFRdGxDLEVBQUUsV0FBV00sRUFBRUosVUFBVXVsQyxtQkFBbUIsU0FBU3psQyxHQUFHLE9BQU9JLEtBQUtrbEMsVUFBVSxZQUFZLFVBQVUsY0FBY3RsQyxFQUFFLFFBQVFNLEVBQUVKLFVBQVV3bEMsc0JBQXNCLFdBQVcsSUFBSTFsQyxFQUFFSSxLQUFLbWxDLFVBQVUsY0FBYyxVQUFVLE9BQU8sWUFBWSxPQUFPdmxDLEVBQUV1MkIsS0FBSyxpQkFBaUIsU0FBU3YyQixFQUFFdTJCLEtBQUssaUJBQWlCLG1CQUFtQnZzQixPQUFPNUosS0FBS3M4QixpQkFBaUJ0OEIsS0FBS29vQixPQUFPeG9CLEdBQUUsR0FBSUksTUFBTUUsRUFBRUosVUFBVXFsQyxVQUFVLFNBQVN2bEMsRUFBRU0sRUFBRU8sRUFBRUMsR0FBRyxPQUFPLElBQUlzQixHQUFHLENBQUM2NEIsZUFBZTc2QixLQUFLczhCLGVBQWU4QixRQUFRLDBCQUEwQngwQixPQUFPMUosRUFBRSx3QkFBd0IrOEIsVUFBVSxHQUFHcnpCLE9BQU9oSyxFQUFFLEtBQUtnSyxPQUFPNUosS0FBS3M4QixnQkFBZ0JtQyxLQUFLaCtCLEVBQUUwOEIsTUFBTXo4QixLQUFLUixFQUExZ0MsQ0FBNmdDMEIsSUFBSTJqQyxHQUFHLFdBQVcsSUFBSTNsQyxFQUFFLFNBQVNNLEVBQUVPLEdBQUcsT0FBT2IsRUFBRWtCLE9BQU82N0IsZ0JBQWdCLENBQUNDLFVBQVUsY0FBYy9uQixPQUFPLFNBQVNqVixFQUFFTSxHQUFHTixFQUFFZzlCLFVBQVUxOEIsSUFBSSxTQUFTTixFQUFFTSxHQUFHLElBQUksSUFBSU8sS0FBS1AsRUFBRVksT0FBT2hCLFVBQVVvQixlQUFlQyxLQUFLakIsRUFBRU8sS0FBS2IsRUFBRWEsR0FBR1AsRUFBRU8sS0FBS2IsRUFBRU0sRUFBRU8sSUFBSSxPQUFPLFNBQVNQLEVBQUVPLEdBQUcsR0FBRyxtQkFBbUJBLEdBQUcsT0FBT0EsRUFBRSxNQUFNLElBQUlrVyxVQUFVLHVCQUF1QjlXLE9BQU9ZLEdBQUcsaUNBQWlDLFNBQVNDLElBQUlWLEtBQUtnYyxZQUFZOWIsRUFBRU4sRUFBRU0sRUFBRU8sR0FBR1AsRUFBRUosVUFBVSxPQUFPVyxFQUFFSyxPQUFPczJCLE9BQU8zMkIsSUFBSUMsRUFBRVosVUFBVVcsRUFBRVgsVUFBVSxJQUFJWSxJQUFqZCxHQUF3ZDBDLEdBQUcsU0FBU3hELEdBQUcsU0FBU00sRUFBRUEsR0FBRyxJQUFJTyxFQUFFYixFQUFFdUIsS0FBS25CLE9BQU9BLEtBQUssT0FBT1MsRUFBRStrQyxNQUFNLEdBQUcva0MsRUFBRWlMLFFBQVF4TCxFQUFFTyxFQUFFcThCLFNBQVNyOEIsRUFBRSxPQUFPOGtDLEdBQUdybEMsRUFBRU4sR0FBR00sRUFBRUosVUFBVWc5QixPQUFPLFdBQVc5OEIsS0FBS3FQLFVBQVVyUCxLQUFLcVAsUUFBUXpCLFNBQVN1YSxjQUFjLFFBQU8sSUFBS25vQixLQUFLMEwsUUFBUSs1QixXQUFXemxDLEtBQUswMkIsU0FBUyxhQUFhQSxTQUFTLGFBQWExMkIsS0FBSzAyQixTQUFTLGFBQVksSUFBSzEyQixLQUFLMEwsUUFBUWc2QixnQkFBZ0IxbEMsS0FBSzJsQyxJQUFJLENBQUMxZ0IsUUFBUSxRQUFRamxCLEtBQUt3Z0MsU0FBUSxJQUFLMS9CLE9BQU9DLGVBQWViLEVBQUVKLFVBQVUsY0FBYyxDQUFDbUIsSUFBSSxXQUFXLE9BQU9qQixLQUFLbzJCLFFBQVEscUJBQXFCNWlCLElBQUksU0FBUzVULEdBQUdJLEtBQUttMkIsS0FBSyxtQkFBbUJ2MkIsSUFBSW9CLFlBQVcsRUFBRzQwQixjQUFhLElBQUsxMUIsRUFBRUosVUFBVThsQyxRQUFRLFNBQVNobUMsR0FBR0ksS0FBS3FQLFFBQVErWSxPQUFPeG9CLEVBQUV5UCxTQUFTclAsS0FBS3dsQyxNQUFNbHlCLEtBQUsxVCxJQUFJTSxFQUFFSixVQUFVK2xDLFNBQVMsU0FBU2ptQyxHQUFHLElBQUlNLEVBQUVGLEtBQUtKLEVBQUVxTCxTQUFRLFNBQVVyTCxHQUFHLE9BQU9NLEVBQUUwbEMsUUFBUWhtQyxPQUFPTSxFQUFFSixVQUFVZ21DLFNBQVMsV0FBVzlsQyxLQUFLMjJCLFlBQVksZ0JBQWdCRCxTQUFTLGlCQUFpQngyQixFQUFFSixVQUFVOGdDLFVBQVUsV0FBVyxJQUFHLElBQUs1Z0MsS0FBSzBMLFFBQVErNUIsV0FBVyxNQUFNLEdBQUcsSUFBSTdsQyxFQUFFLEdBQUcsT0FBT0ksS0FBS3dsQyxNQUFNdjZCLFNBQVEsU0FBVS9LLEVBQUVPLEdBQUcsSUFBSUMsRUFBRVIsRUFBRStoQyxtQkFBbUJyaUMsRUFBRUEsRUFBRWdLLE9BQU9sSixNQUFNZCxHQUFHTSxFQUFFSixVQUFVaW1DLGVBQWUsU0FBU25tQyxFQUFFTSxHQUFHLE9BQU9OLEVBQUVpN0IsZUFBZTc2QixLQUFLMEwsUUFBUTR3QixlQUFlMThCLEVBQUVvaUMsV0FBVzloQyxFQUFFTixFQUFFay9CLFlBQVk5K0IsS0FBSzBMLFFBQVF1ekIsWUFBWSxJQUFJLzhCLEdBQUd0QyxHQUFFLElBQUtNLEVBQUVKLFVBQVVrbUMsZ0JBQWdCLFNBQVNwbUMsR0FBRyxPQUFPLElBQUlzQyxHQUFHdEMsR0FBRSxJQUFLTSxFQUFFSixVQUFVbW1DLGlCQUFpQixXQUFXLE9BQU9qbUMsS0FBSzRnQyxZQUFZbnlCLFFBQU8sU0FBVTdPLEdBQUcsT0FBTSxJQUFLQSxFQUFFNGdDLFlBQVl0Z0MsRUFBRUosVUFBVW9tQyxjQUFjLFdBQVcsSUFBSXRtQyxFQUFFSSxLQUFLNGdDLFlBQVkxZ0MsRUFBRSxHQUFHLE9BQU9OLEVBQUVxTCxTQUFRLFNBQVVyTCxFQUFFYSxHQUFHLElBQUlDLEVBQUVkLEVBQUU4TCxRQUFRd3hCLFVBQVVoOUIsRUFBRVEsR0FBR2QsS0FBS00sR0FBR1ksT0FBT0MsZUFBZWIsRUFBRUosVUFBVSxRQUFRLENBQUNtQixJQUFJLFdBQVcsT0FBTSxJQUFLakIsS0FBSzBMLFFBQVErNUIsV0FBVyxPQUFPLFFBQVF6a0MsWUFBVyxFQUFHNDBCLGNBQWEsSUFBSzkwQixPQUFPQyxlQUFlYixFQUFFSixVQUFVLFdBQVcsQ0FBQ21CLElBQUksV0FBVyxJQUFJckIsRUFBRUksS0FBS28yQixRQUFRcDJCLEtBQUttbUMsTUFBTSxhQUFhLE9BQU83akIsU0FBUzFpQixJQUFJNFQsSUFBSSxTQUFTNVQsR0FBR0ksS0FBS20yQixLQUFLbjJCLEtBQUttbUMsTUFBTSxZQUFZdm1DLElBQUlvQixZQUFXLEVBQUc0MEIsY0FBYSxJQUFLMTFCLEVBQUVKLFVBQVVzbUMsV0FBVyxXQUFXLElBQUl4bUMsRUFBRUksS0FBSzRnQyxZQUFZMWdDLEVBQUUsR0FBR08sRUFBRVQsS0FBS3FtQyxZQUFZLE9BQU9ubUMsRUFBRW1tQyxZQUFZNWxDLEVBQUViLEVBQUVxTCxTQUFRLFNBQVVyTCxFQUFFYSxHQUFHLElBQUlDLEVBQUVkLEVBQUU4TCxRQUFRd3hCLFVBQVVoOUIsRUFBRVEsR0FBR2QsRUFBRTQ5QixPQUFPdDlCLEVBQUVvbUMsZ0JBQWdCdG1DLEtBQUt1bUMsU0FBU3JtQyxHQUFHWSxPQUFPQyxlQUFlYixFQUFFSixVQUFVLGFBQWEsQ0FBQ21CLElBQUksV0FBVyxNQUFNLFNBQVNqQixLQUFLbzJCLFFBQVEsaUJBQWlCNWlCLElBQUksU0FBUzVULEdBQUdJLEtBQUttMkIsS0FBSyxnQkFBZSxJQUFLdjJCLEVBQUUsT0FBTyxVQUFVb0IsWUFBVyxFQUFHNDBCLGNBQWEsSUFBSzExQixFQUFFSixVQUFVbTNCLE1BQU0sV0FBVyxJQUFJeDJCLEVBQUViLEVBQUVFLFVBQVVtM0IsTUFBTTkxQixLQUFLbkIsTUFBTVUsRUFBRVYsS0FBS20zQixRQUFRbjNCLEtBQUswTCxTQUFTaEwsRUFBRWdsQyxlQUFjLEVBQUcsSUFBSS9rQyxFQUFFLElBQUlULEVBQUVRLEdBQUcsT0FBT0MsRUFBRTBPLFFBQVE1TyxFQUFFNE8sUUFBUTFPLEVBQUVzZCxTQUFTeGQsRUFBRXdkLFNBQVN0ZCxFQUFFNmtDLE1BQU14bEMsS0FBS3dsQyxNQUFNdHdCLEtBQUksU0FBVXRWLEdBQUcsSUFBSU0sRUFBRU4sRUFBRXEzQixRQUFRLE9BQU90MkIsRUFBRTBPLFFBQVErWSxPQUFPbG9CLEVBQUVtUCxTQUFTblAsS0FBS1MsR0FBR1QsRUFBajhFLENBQW84RTBCLElBQUk0a0MsR0FBRyxXQUFXLElBQUk1bUMsRUFBRSxTQUFTTSxFQUFFTyxHQUFHLE9BQU9iLEVBQUVrQixPQUFPNjdCLGdCQUFnQixDQUFDQyxVQUFVLGNBQWMvbkIsT0FBTyxTQUFTalYsRUFBRU0sR0FBR04sRUFBRWc5QixVQUFVMThCLElBQUksU0FBU04sRUFBRU0sR0FBRyxJQUFJLElBQUlPLEtBQUtQLEVBQUVZLE9BQU9oQixVQUFVb0IsZUFBZUMsS0FBS2pCLEVBQUVPLEtBQUtiLEVBQUVhLEdBQUdQLEVBQUVPLEtBQUtiLEVBQUVNLEVBQUVPLElBQUksT0FBTyxTQUFTUCxFQUFFTyxHQUFHLEdBQUcsbUJBQW1CQSxHQUFHLE9BQU9BLEVBQUUsTUFBTSxJQUFJa1csVUFBVSx1QkFBdUI5VyxPQUFPWSxHQUFHLGlDQUFpQyxTQUFTQyxJQUFJVixLQUFLZ2MsWUFBWTliLEVBQUVOLEVBQUVNLEVBQUVPLEdBQUdQLEVBQUVKLFVBQVUsT0FBT1csRUFBRUssT0FBT3MyQixPQUFPMzJCLElBQUlDLEVBQUVaLFVBQVVXLEVBQUVYLFVBQVUsSUFBSVksSUFBamQsR0FBd2Q0QyxHQUFHLFNBQVMxRCxHQUFHLFNBQVNNLElBQUksSUFBSUEsRUFBRU4sRUFBRXVCLEtBQUtuQixPQUFPQSxLQUFLLE9BQU9FLEVBQUV1bUMsS0FBSyxHQUFHdm1DLEVBQUUsT0FBT3NtQyxHQUFHdG1DLEVBQUVOLEdBQUdNLEVBQUVKLFVBQVU0bUMsT0FBTyxTQUFTOW1DLEdBQUdJLEtBQUtvb0IsT0FBT3hvQixHQUFHLElBQUlNLEVBQUVGLEtBQUsybUMsa0JBQWtCL21DLEVBQUUybUMsU0FBU3JtQyxFQUFFLElBQUlPLEdBQUUsSUFBS2IsRUFBRThMLFFBQVErNUIsV0FBVyxPQUFPLE9BQU8sT0FBTzdsQyxFQUFFbzlCLEdBQUcsR0FBR3B6QixPQUFPaEssRUFBRThMLFFBQVF3ekIsT0FBTyxLQUFLdDFCLE9BQU9uSixFQUFFLEtBQUttSixPQUFPMUosR0FBR0YsS0FBS3ltQyxLQUFLbnpCLEtBQUsxVCxHQUFHSSxNQUFNRSxFQUFFSixVQUFVOG1DLGVBQWUsV0FBVyxPQUFPNW1DLEtBQUt5bUMsS0FBS2g0QixRQUFPLFNBQVU3TyxHQUFHLE9BQU0sSUFBS0EsRUFBRTRnQyxZQUFZdGdDLEVBQUVKLFVBQVU2bUMsZ0JBQWdCLFdBQVcsT0FBTzNtQyxLQUFLeW1DLEtBQUt0ekIsT0FBTyxHQUFHalQsRUFBRUosVUFBVSttQyxpQkFBaUIsV0FBVyxPQUFPN21DLEtBQUt5bUMsS0FBS2h6QixNQUFLLFNBQVU3VCxHQUFHLE9BQU0sSUFBS0EsRUFBRThMLFFBQVErNUIsZUFBZXZsQyxFQUEza0IsQ0FBOGtCMEIsSUFBSWtsQyxHQUFHLFdBQVcsSUFBSWxuQyxFQUFFLFNBQVNNLEVBQUVPLEdBQUcsT0FBT2IsRUFBRWtCLE9BQU82N0IsZ0JBQWdCLENBQUNDLFVBQVUsY0FBYy9uQixPQUFPLFNBQVNqVixFQUFFTSxHQUFHTixFQUFFZzlCLFVBQVUxOEIsSUFBSSxTQUFTTixFQUFFTSxHQUFHLElBQUksSUFBSU8sS0FBS1AsRUFBRVksT0FBT2hCLFVBQVVvQixlQUFlQyxLQUFLakIsRUFBRU8sS0FBS2IsRUFBRWEsR0FBR1AsRUFBRU8sS0FBS2IsRUFBRU0sRUFBRU8sSUFBSSxPQUFPLFNBQVNQLEVBQUVPLEdBQUcsR0FBRyxtQkFBbUJBLEdBQUcsT0FBT0EsRUFBRSxNQUFNLElBQUlrVyxVQUFVLHVCQUF1QjlXLE9BQU9ZLEdBQUcsaUNBQWlDLFNBQVNDLElBQUlWLEtBQUtnYyxZQUFZOWIsRUFBRU4sRUFBRU0sRUFBRU8sR0FBR1AsRUFBRUosVUFBVSxPQUFPVyxFQUFFSyxPQUFPczJCLE9BQU8zMkIsSUFBSUMsRUFBRVosVUFBVVcsRUFBRVgsVUFBVSxJQUFJWSxJQUFqZCxHQUF3ZDRCLEdBQUcsU0FBUzFDLEdBQUcsU0FBU00sSUFBSSxJQUFJQSxFQUFFTixFQUFFdUIsS0FBS25CLE9BQU9BLEtBQUssT0FBT0UsRUFBRTQ4QixTQUFTNThCLEVBQUUsT0FBTzRtQyxHQUFHNW1DLEVBQUVOLEdBQUdNLEVBQUVKLFVBQVVnOUIsT0FBTyxXQUFXOThCLEtBQUtxUCxRQUFRekIsU0FBU3VhLGNBQWMsU0FBU25vQixLQUFLMDJCLFNBQVMsZ0JBQWdCeDJCLEVBQTlMLENBQWlNb0QsSUFBSXlqQyxHQUFHLFdBQVcsSUFBSW5uQyxFQUFFLFNBQVNNLEVBQUVPLEdBQUcsT0FBT2IsRUFBRWtCLE9BQU82N0IsZ0JBQWdCLENBQUNDLFVBQVUsY0FBYy9uQixPQUFPLFNBQVNqVixFQUFFTSxHQUFHTixFQUFFZzlCLFVBQVUxOEIsSUFBSSxTQUFTTixFQUFFTSxHQUFHLElBQUksSUFBSU8sS0FBS1AsRUFBRVksT0FBT2hCLFVBQVVvQixlQUFlQyxLQUFLakIsRUFBRU8sS0FBS2IsRUFBRWEsR0FBR1AsRUFBRU8sS0FBS2IsRUFBRU0sRUFBRU8sSUFBSSxPQUFPLFNBQVNQLEVBQUVPLEdBQUcsR0FBRyxtQkFBbUJBLEdBQUcsT0FBT0EsRUFBRSxNQUFNLElBQUlrVyxVQUFVLHVCQUF1QjlXLE9BQU9ZLEdBQUcsaUNBQWlDLFNBQVNDLElBQUlWLEtBQUtnYyxZQUFZOWIsRUFBRU4sRUFBRU0sRUFBRU8sR0FBR1AsRUFBRUosVUFBVSxPQUFPVyxFQUFFSyxPQUFPczJCLE9BQU8zMkIsSUFBSUMsRUFBRVosVUFBVVcsRUFBRVgsVUFBVSxJQUFJWSxJQUFqZCxHQUF3ZG9CLEdBQUcsU0FBU2xDLEdBQUcsU0FBU00sSUFBSSxJQUFJQSxFQUFFTixFQUFFdUIsS0FBS25CLE9BQU9BLEtBQUssT0FBT0UsRUFBRTQ4QixTQUFTNThCLEVBQUUsT0FBTzZtQyxHQUFHN21DLEVBQUVOLEdBQUdNLEVBQUVKLFVBQVVnOUIsT0FBTyxXQUFXOThCLEtBQUtxUCxRQUFRekIsU0FBU3VhLGNBQWMsVUFBVWpvQixFQUFFSixVQUFVKzhCLGdCQUFnQixTQUFTajlCLEVBQUVNLEdBQUdnRixHQUFHNDFCLEtBQUtsN0IsRUFBRUksS0FBS0UsSUFBSUEsRUFBRUosVUFBVWtuQyxZQUFZLFNBQVNwbkMsR0FBRyxPQUFPSSxLQUFLeW1DLEtBQUtoNEIsUUFBTyxTQUFVdk8sRUFBRU8sR0FBRyxHQUFHUCxJQUFJTixFQUFFLE9BQU9NLE1BQU1BLEVBQUVKLFVBQVVnbUMsU0FBUyxTQUFTbG1DLEdBQUdBLEVBQUVrbUMsV0FBVzlsQyxLQUFLZ25DLFlBQVlwbkMsR0FBR3FMLFNBQVEsU0FBVXJMLEVBQUVNLEdBQUcsT0FBT04sRUFBRSsyQixZQUFZLG9CQUFvQnoyQixFQUFFSixVQUFVbW5DLGVBQWUsV0FBVyxPQUFPam5DLEtBQUt5bUMsS0FBS2h6QixNQUFLLFNBQVU3VCxHQUFHLE9BQU0sSUFBS0EsRUFBRThMLFFBQVFnNkIsa0JBQWtCeGxDLEVBQUVKLFVBQVVvbkMsYUFBYSxXQUFXLE9BQU9sbkMsS0FBS3ltQyxLQUFLaDRCLFFBQU8sU0FBVTdPLEdBQUcsT0FBTSxJQUFLQSxFQUFFdW5DLGVBQWVqbkMsRUFBRUosVUFBVXNuQyxnQkFBZ0IsV0FBVyxJQUFJeG5DLEVBQUVJLEtBQUtrbkMsZUFBZSxHQUFHLElBQUl0bkMsRUFBRXVULE9BQU8sTUFBTSxHQUFHLElBQUlqVCxFQUFFLEdBQUcsT0FBT04sRUFBRXFMLFNBQVEsU0FBVXJMLEVBQUVhLEdBQUdQLEVBQUVvVCxLQUFLMVQsRUFBRXdtQyxpQkFBaUJsbUMsR0FBR0EsRUFBRUosVUFBVXVuQyxjQUFjLFdBQVcsSUFBSXpuQyxFQUFFSSxLQUFLeW1DLEtBQUtoNEIsUUFBTyxTQUFVN08sR0FBRyxPQUFNLElBQUtBLEVBQUU4TCxRQUFRZzZCLGlCQUFpQnhsQyxFQUFFLEdBQUcsT0FBT04sRUFBRXFMLFNBQVEsU0FBVXJMLEdBQUdNLEVBQUVvVCxLQUFLMVQsRUFBRXdtQyxpQkFBaUJsbUMsR0FBR0EsRUFBRUosVUFBVTZnQyxlQUFlLFdBQVcsT0FBTzNnQyxLQUFLeW1DLEtBQUtoekIsTUFBSyxTQUFVN1QsRUFBRU0sR0FBRyxPQUFNLElBQUtOLEVBQUVnM0IsU0FBUyxvQkFBb0IxMkIsRUFBRUosVUFBVXduQyxZQUFZLFdBQVcsSUFBSTFuQyxFQUFFSSxLQUFLMmdDLGlCQUFpQixHQUFHL2dDLEVBQUUsQ0FBQyxJQUFJTSxFQUFFRixLQUFLZ25DLFlBQVlwbkMsR0FBR2EsRUFBRVAsRUFBRUEsRUFBRWlULE9BQU8sR0FBR3ZULEVBQUUrMkIsWUFBWSxnQkFBZ0IvMkIsRUFBRXVuQyxZQUFXLEVBQUd2bkMsRUFBRStsQyxJQUFJLENBQUMxZ0IsUUFBUSxRQUFRcmxCLEVBQUU0Z0MsU0FBUSxFQUFHLElBQUk5L0IsRUFBRWQsRUFBRXltQyxZQUFZem1DLEVBQUV5bUMsWUFBWSxVQUFVM2xDLEVBQUUsZ0JBQWdCLFVBQVVWLEtBQUs2OEIsZ0JBQWdCLzNCLEdBQUc4MEIsZ0JBQWdCLENBQUNpQixlQUFlajdCLEVBQUU4TCxRQUFRNHdCLGVBQWUzQixVQUFVLENBQUN4a0IsTUFBTXZXLEtBQUtJLEtBQUs4bEMsU0FBU3JsQyxLQUFLUCxFQUFFSixVQUFVeW5DLFVBQVUsU0FBUzNuQyxHQUFHQSxFQUFFeVAsUUFBUXdNLFNBQVMsSUFBSTNiLEVBQUVGLEtBQUt5bUMsS0FBSy80QixRQUFROU4sR0FBR00sR0FBRyxHQUFHRixLQUFLeW1DLEtBQUtlLE9BQU90bkMsRUFBRSxJQUFJQSxFQUExa0QsQ0FBNmtEb0QsSUFBSW1rQyxHQUFHLFdBQVcsSUFBSTduQyxFQUFFLFNBQVNNLEVBQUVPLEdBQUcsT0FBT2IsRUFBRWtCLE9BQU82N0IsZ0JBQWdCLENBQUNDLFVBQVUsY0FBYy9uQixPQUFPLFNBQVNqVixFQUFFTSxHQUFHTixFQUFFZzlCLFVBQVUxOEIsSUFBSSxTQUFTTixFQUFFTSxHQUFHLElBQUksSUFBSU8sS0FBS1AsRUFBRVksT0FBT2hCLFVBQVVvQixlQUFlQyxLQUFLakIsRUFBRU8sS0FBS2IsRUFBRWEsR0FBR1AsRUFBRU8sS0FBS2IsRUFBRU0sRUFBRU8sSUFBSSxPQUFPLFNBQVNQLEVBQUVPLEdBQUcsR0FBRyxtQkFBbUJBLEdBQUcsT0FBT0EsRUFBRSxNQUFNLElBQUlrVyxVQUFVLHVCQUF1QjlXLE9BQU9ZLEdBQUcsaUNBQWlDLFNBQVNDLElBQUlWLEtBQUtnYyxZQUFZOWIsRUFBRU4sRUFBRU0sRUFBRU8sR0FBR1AsRUFBRUosVUFBVSxPQUFPVyxFQUFFSyxPQUFPczJCLE9BQU8zMkIsSUFBSUMsRUFBRVosVUFBVVcsRUFBRVgsVUFBVSxJQUFJWSxJQUFqZCxHQUF3ZGduQyxHQUFHLFNBQVM5bkMsRUFBRU0sRUFBRU8sR0FBRyxHQUFHQSxHQUFHLElBQUlELFVBQVUyUyxPQUFPLElBQUksSUFBSXpTLEVBQUVDLEVBQUUsRUFBRUMsRUFBRVYsRUFBRWlULE9BQU94UyxFQUFFQyxFQUFFRCxLQUFLRCxHQUFHQyxLQUFLVCxJQUFJUSxJQUFJQSxFQUFFbVUsTUFBTS9VLFVBQVU0VCxNQUFNdlMsS0FBS2pCLEVBQUUsRUFBRVMsSUFBSUQsRUFBRUMsR0FBR1QsRUFBRVMsSUFBSSxPQUFPZixFQUFFZ0ssT0FBT2xKLEdBQUdtVSxNQUFNL1UsVUFBVTRULE1BQU12UyxLQUFLakIsS0FBS3NCLEdBQUcsU0FBUzVCLEdBQUcsU0FBU00sRUFBRUEsR0FBRyxJQUFJTyxFQUFFYixFQUFFdUIsS0FBS25CLE9BQU9BLEtBQUssT0FBT1MsRUFBRWlMLFFBQVF4TCxFQUFFTyxFQUFFa25DLEtBQUssSUFBSXJsQyxHQUFHN0IsRUFBRXFSLEtBQUssSUFBSWhRLEdBQUdyQixFQUFFbW5DLFVBQVUsSUFBSTVrQyxHQUFHLENBQUNzNUIsZUFBZTc3QixFQUFFaUwsUUFBUXUwQixXQUFXdjFCLEtBQUttNUIsaUJBQWlCLFNBQVNqa0MsR0FBRyxPQUFPYSxFQUFFb25DLGtCQUFrQmpvQyxNQUFNYSxFQUFFMGpDLFdBQVcsSUFBSTNoQyxHQUFHL0IsRUFBRWlMLFFBQVF1MEIsV0FBV3YxQixLQUFLakssRUFBRWlMLFFBQVFvOEIsZ0JBQWdCcm5DLEVBQUUrK0IsaUJBQWlCLEtBQUsvK0IsRUFBRTgvQixZQUFZLEtBQUs5L0IsRUFBRXNuQyxjQUFhLEVBQUd0bkMsRUFBRXVuQyxpQkFBaUJwNkIsU0FBU2drQixlQUFlbnhCLEVBQUVpTCxRQUFRdXpCLGFBQWF4K0IsRUFBRSxPQUFPZ25DLEdBQUd2bkMsRUFBRU4sR0FBR00sRUFBRStuQyxPQUFPLFNBQVNyb0MsS0FBS00sRUFBRUosVUFBVSs4QixnQkFBZ0IsU0FBU2o5QixFQUFFTSxHQUFHZ0YsR0FBRzQxQixLQUFLbDdCLEVBQUVJLEtBQUtFLElBQUlBLEVBQUVKLFVBQVVvb0MsZ0JBQWdCLFdBQVdsakMsR0FBR20zQixJQUFJbjhCLE9BQU9jLE9BQU9DLGVBQWViLEVBQUVKLFVBQVUsaUJBQWlCLENBQUNtQixJQUFJLFdBQVcsT0FBT2pCLEtBQUswTCxRQUFRdTBCLFdBQVd2MUIsTUFBTTFKLFlBQVcsRUFBRzQwQixjQUFhLElBQUs5MEIsT0FBT0MsZUFBZWIsRUFBRUosVUFBVSxhQUFhLENBQUNtQixJQUFJLFdBQVcsT0FBT2pCLEtBQUswTCxRQUFRdzBCLFlBQVlsL0IsWUFBVyxFQUFHNDBCLGNBQWEsSUFBSzkwQixPQUFPQyxlQUFlYixFQUFFSixVQUFVLGVBQWUsQ0FBQ21CLElBQUksV0FBVyxPQUFPakIsS0FBSzhSLEtBQUtzMUIsbUJBQW1CcG1DLFlBQVcsRUFBRzQwQixjQUFhLElBQUs5MEIsT0FBT0MsZUFBZWIsRUFBRUosVUFBVSxhQUFhLENBQUNtQixJQUFJLFdBQVcsT0FBT2pCLEtBQUs4UixLQUFLdTFCLGlCQUFpQnJtQyxZQUFXLEVBQUc0MEIsY0FBYSxJQUFLMTFCLEVBQUVKLFVBQVUrbkMsa0JBQWtCLFNBQVNqb0MsR0FBR0ksS0FBSzAvQixjQUFjOS9CLElBQUlNLEVBQUVKLFVBQVVxb0MsYUFBYSxXQUFXbm9DLEtBQUtxUCxRQUFRK1ksT0FBT3BvQixLQUFLMm5DLEtBQUt0NEIsVUFBVW5QLEVBQUVKLFVBQVVzb0MsV0FBVyxXQUFXcG9DLEtBQUtxUCxRQUFRK1ksT0FBT3BvQixLQUFLOFIsS0FBS3pDLFVBQVVuUCxFQUFFSixVQUFVdW9DLGdCQUFnQixTQUFTem9DLEdBQUcsSUFBSSxPQUFPNEUsR0FBRzh6QixRQUFRMTRCLEdBQUcsTUFBTUEsR0FBRyxZQUFZOGIsUUFBUWdmLElBQUk5NkIsS0FBS00sRUFBRUosVUFBVXdnQyxPQUFPLFdBQVcsSUFBSTFnQyxFQUFFSSxLQUFLQSxLQUFLcVAsUUFBUXpCLFNBQVN1YSxjQUFjLFNBQVNub0IsS0FBS3FQLFFBQVE2SCxVQUFVMUMsSUFBSSxRQUFRLGlCQUFpQixjQUFjLFdBQVcsWUFBWSxXQUFXLFNBQVMsWUFBWXhVLEtBQUtnOUIsR0FBR2g5QixLQUFLMEwsUUFBUXd6QixPQUFPbC9CLEtBQUttMkIsS0FBSyxrQkFBa0JuMkIsS0FBSzBMLFFBQVF1MEIsV0FBV3YxQixNQUFNLElBQUl4SyxFQUFFRixLQUFLcW9DLGdCQUFnQnJvQyxLQUFLMEwsUUFBUXd6QixTQUFTLEdBQUdsL0IsS0FBSzJsQyxJQUFJLENBQUNoNUIsTUFBTSxXQUFXLElBQUlsTSxFQUFFLElBQUkyQyxHQUFHLENBQUNrNUIsZUFBZXQ4QixLQUFLMEwsUUFBUXUwQixXQUFXdjFCLEtBQUt3MEIsT0FBT2wvQixLQUFLMEwsUUFBUXd6QixPQUFPdUcsWUFBVyxJQUFLL2tDLEVBQUUsSUFBSTBDLEdBQUcsQ0FBQ3NpQyxlQUFjLEVBQUdwSixlQUFldDhCLEtBQUswTCxRQUFRdTBCLFdBQVd2MUIsS0FBS3cwQixPQUFPbC9CLEtBQUswTCxRQUFRd3pCLE9BQU9ELFlBQVlqL0IsS0FBSzBMLFFBQVF1ekIsY0FBY3QrQixFQUFFWCxLQUFLc29DLGlCQUFpQnBvQyxHQUFHVSxFQUFFLElBQUlzQixHQUFHLElBQUcsR0FBSTBGLEVBQUUsSUFBSTlFLEdBQUdnRCxFQUFFLElBQUk1RCxHQUFHLEdBQUc0RCxFQUFFc2lCLE9BQU94Z0IsR0FBR25ILEVBQUVtbEMsUUFBUWhsQyxHQUFHRixFQUFFa2xDLFFBQVE5L0IsR0FBR25GLEVBQUVzSyxTQUFRLFNBQVV0SyxHQUFHLEdBQUdBLEVBQUU4Z0MsU0FBUyxDQUFDLElBQUk3Z0MsRUFBRVYsRUFBRVMsRUFBRThnQyxVQUFVNzVCLEVBQUVuSCxFQUFFdWxDLGdCQUFnQnJsQyxHQUFHbUYsRUFBRXBGLEVBQUVxbEMsZUFBZXBsQyxFQUFFZixFQUFFeThCLFlBQVl6OEIsRUFBRTJvQyxXQUFXM2dDLEdBQUdoSSxFQUFFNG9DLGlCQUFpQjVnQyxFQUFFaEgsR0FBR2hCLEVBQUU0b0MsaUJBQWlCMWlDLEVBQUVsRixHQUFHSCxFQUFFbWxDLFFBQVFoK0IsR0FBR2xILEVBQUVrbEMsUUFBUTkvQixPQUFPOUYsS0FBSzJuQyxLQUFLakIsT0FBT2ptQyxHQUFHVCxLQUFLOFIsS0FBSzQwQixPQUFPaG1DLEdBQUdWLEtBQUt5b0MsZ0JBQWdCem9DLEtBQUttb0MsZUFBZW5vQyxLQUFLb29DLGFBQWFwb0MsS0FBS2dvQyxpQkFBaUJoUixZQUFZaDNCLEtBQUtxUCxTQUFTclAsS0FBSzBvQyxvQkFBb0Ixb0MsS0FBSzBMLFFBQVF1MEIsV0FBVzd2QixLQUFLLENBQUMsSUFBSXBLLEVBQUVoRyxLQUFLMEwsUUFBUXUwQixXQUFXN3ZCLEtBQUtrMEIsU0FBU243QixFQUFFbkosS0FBSzBMLFFBQVF1MEIsV0FBVzd2QixLQUFLOHlCLFNBQVM5N0IsRUFBRSxDQUFDeXpCLGVBQWU3NkIsS0FBSzBMLFFBQVF1MEIsV0FBV3YxQixLQUFLaXdCLFVBQVUsQ0FBQzRCLEtBQUt2MkIsRUFBRWk5QixTQUFTOTVCLElBQUluSixLQUFLNjhCLGdCQUFnQi8zQixHQUFHMjBCLHFCQUFxQnJ5QixHQUFHLE9BQU9wSCxLQUFLNjhCLGdCQUFnQi8zQixHQUFHazFCLG1CQUFtQixDQUFDYSxlQUFlNzZCLEtBQUswTCxRQUFRdTBCLFdBQVd2MUIsS0FBS2l3QixVQUFVLE1BQUssSUFBSzM2QixLQUFLK25DLGNBQWMvbkMsS0FBS2tvQyxrQkFBa0Jsb0MsTUFBTUUsRUFBRUosVUFBVTRvQyxrQkFBa0IsV0FBVyxJQUFJOW9DLEVBQUVJLE1BQUssSUFBS0EsS0FBSzBMLFFBQVF5MEIsdUJBQXVCbmdDLEtBQUt3L0IsaUJBQWlCLElBQUk5OEIsR0FBRyxDQUFDd2hDLFlBQVlsa0MsS0FBS3FQLFFBQVE4MEIsV0FBV25rQyxLQUFLbWtDLGFBQWFua0MsS0FBS3cvQixpQkFBaUJxRSxpQkFBaUIsU0FBUzNqQyxHQUFHLE9BQU9OLEVBQUVpb0Msa0JBQWtCM25DLElBQUlGLEtBQUt3L0IsaUJBQWlCM08sV0FBVzN3QixFQUFFSixVQUFVMm9DLGNBQWMsV0FBVyxJQUFJN29DLEVBQUVJLEtBQUtBLEtBQUt1Z0MsWUFBWSxJQUFJNytCLEdBQUcxQixLQUFLdWdDLFlBQVlqRSxlQUFldDhCLEtBQUswTCxRQUFRdTBCLFdBQVd2MUIsS0FBSzFLLEtBQUt1Z0MsWUFBWThFLG9CQUFtQixTQUFVbmxDLEdBQUcsT0FBT04sRUFBRStvQyxpQkFBaUJ2RCxpQkFBZ0IsU0FBVWxsQyxHQUFHLE9BQU9OLEVBQUVrUyxLQUFLdzFCLGlCQUFpQmhDLHdCQUF3QnRsQyxLQUFLZ29DLGlCQUFpQmhSLFlBQVloM0IsS0FBS3VnQyxZQUFZbHhCLFVBQVVuUCxFQUFFSixVQUFVeW9DLFdBQVcsU0FBUzNvQyxHQUFHLElBQUlNLEVBQUVGLEtBQUtKLEVBQUUrMUIsZ0JBQWdCLFNBQVEsU0FBVWwxQixHQUFHLElBQUlDLEdBQUUsRUFBR2QsRUFBRWczQixTQUFTLGdCQUFnQmgzQixFQUFFKzJCLFlBQVksZUFBZUQsU0FBUyxnQkFBZ0JoMkIsR0FBRSxHQUFJZCxFQUFFKzJCLFlBQVksZ0JBQWdCRCxTQUFTLGVBQWU5MkIsRUFBRWs0QixTQUFTLE1BQU03c0IsU0FBUSxTQUFVckwsR0FBR0EsRUFBRXNYLFVBQVUyRSxPQUFPLGNBQWMsbUJBQW1CLElBQUlsYixFQUFFLENBQUNnNkIsVUFBVSxDQUFDeGtCLE1BQU0xVixFQUFFZ2hDLFNBQVM3aEMsRUFBRThMLFFBQVErMUIsU0FBU21ILElBQUlsb0MsR0FBR202QixlQUFlMzZCLEVBQUV3TCxRQUFRdTBCLFdBQVd2MUIsTUFBTXhLLEVBQUUyOEIsZ0JBQWdCLzNCLEdBQUdnMUIscUJBQXFCbjVCLE9BQU9ULEVBQUVKLFVBQVV5L0IsVUFBVSxXQUFXLElBQUkzL0IsRUFBRUksS0FBS0EsS0FBS3EyQixhQUFhLGFBQWFwckIsU0FBUSxTQUFVL0ssR0FBRyxPQUFPTixFQUFFMjJCLGNBQWNyMkIsTUFBTSxJQUFJQSxFQUFFRixLQUFLOFIsS0FBS20xQixpQkFBaUJqbkMsS0FBSzhSLEtBQUsyMEIsS0FBSyxDQUFDdm1DLElBQUlBLEVBQUVKLFVBQVUwb0MsaUJBQWlCLFNBQVM1b0MsRUFBRU0sR0FBR0EsSUFBSUYsS0FBS2kyQixXQUFXLzFCLE1BQUssSUFBS0EsRUFBRTJvQyxVQUFVanBDLEVBQUU0Z0MsU0FBUSxHQUFJdGdDLEVBQUU0b0MsUUFBUWxwQyxFQUFFK2xDLElBQUksQ0FBQ2w2QixTQUFTLFdBQVdrQixNQUFNek0sRUFBRTRvQyxVQUFVNW9DLEVBQUVKLFVBQVV3b0MsaUJBQWlCLFNBQVMxb0MsR0FBRyxJQUFJQSxHQUFHSSxLQUFLaTJCLFdBQVdyMkIsR0FBRyxPQUFPSSxLQUFLMEwsUUFBUXEwQixjQUFjLElBQUk3L0IsRUFBRSxHQUFHLE9BQU9GLEtBQUswTCxRQUFRcTBCLGNBQWM5MEIsU0FBUSxTQUFVeEssRUFBRUMsR0FBRyxJQUFJQyxFQUFFZixFQUFFYSxFQUFFZ2hDLFVBQVU5Z0MsSUFBSVQsRUFBRVMsRUFBRW9vQyxVQUFVdG9DLE1BQU1QLEVBQUVpVCxTQUFTblQsS0FBSzBMLFFBQVFxMEIsY0FBYzVzQixPQUFPblQsS0FBSzBMLFFBQVFxMEIsY0FBYzcvQixHQUFHQSxFQUFFSixVQUFVa3BDLGVBQWUsU0FBU3BwQyxFQUFFTSxHQUFHLElBQUlPLEVBQUVULEtBQUssR0FBR0osS0FBS0EsRUFBRXVULFFBQVEsR0FBRyxDQUFDLElBQUl6UyxFQUFFZCxHQUFFLElBQUtJLEtBQUswTCxRQUFRdTBCLFdBQVdMLFdBQVdsL0IsRUFBRVYsS0FBSzBMLFFBQVF1MEIsV0FBV2dKLGlCQUFpQi9vQyxFQUFFaWlDLFVBQVVuaUMsS0FBSzBMLFFBQVF1MEIsV0FBVzd2QixLQUFLazBCLFNBQVNwa0MsSUFBSSxJQUFJUyxFQUFFLEtBQUtELEVBQUV1SyxTQUFRLFNBQVVyTCxFQUFFTSxHQUFHLElBQUlRLEVBQUVELEVBQUV5b0MsVUFBVXRwQyxHQUFFLEdBQUljLEVBQUUybEMsWUFBWSxXQUFXMWxDLEVBQUVELE1BQUssSUFBS1YsS0FBSzBMLFFBQVF5MEIscUJBQXFCbmdDLEtBQUttcEMsY0FBY2pwQyxJQUFJRixLQUFLdy9CLGlCQUFpQitFLGFBQWFya0MsRUFBRUYsS0FBS3cvQixpQkFBaUI4RSxTQUFTNWpDLEVBQUVDLElBQUlYLEtBQUt3L0IsaUJBQWlCbUYsWUFBWTNrQyxLQUFLdy9CLGlCQUFpQmtGLFFBQVEvakMsRUFBRTBPLGFBQWFuUCxFQUFFSixVQUFVcXBDLGNBQWMsU0FBU3ZwQyxRQUFHLElBQVNBLElBQUlBLEVBQUUsSUFBSXNELElBQUlsRCxLQUFLNG5DLFVBQVV2NEIsU0FBU3JQLEtBQUs0bkMsVUFBVWw4QixRQUFRdzNCLFNBQVNiLGVBQWV6aUMsRUFBRXlpQyxlQUFlcmlDLEtBQUs0bkMsVUFBVWw4QixRQUFRdzNCLFNBQVN0akMsRUFBRUksS0FBSzRuQyxVQUFVOUssU0FBUzk4QixLQUFLZ29DLGlCQUFpQmhSLFlBQVloM0IsS0FBSzRuQyxVQUFVdjRCLFdBQVduUCxFQUFFSixVQUFVb3BDLFVBQVUsU0FBU3RwQyxFQUFFTSxHQUFHLElBQUlPLEVBQUVULEtBQUtVLEVBQUVWLEtBQUs4UixLQUFLNjBCLGtCQUFrQmhtQyxFQUFFWCxLQUFLOFIsS0FBS20xQixpQkFBaUJoUSxRQUFRdDJCLEVBQUUrSyxRQUFRZzZCLGVBQWMsRUFBRy9rQyxFQUFFZ2xDLElBQUksQ0FBQzFnQixRQUFRLGFBQWF0a0IsRUFBRTYvQixTQUFRLEVBQUcsSUFBSTUvQixFQUFFWixLQUFLVyxFQUFFaWdDLFlBQVkzMUIsU0FBUSxTQUFVeEssRUFBRW1ILEdBQUcsSUFBSTlCLEVBQUVyRixFQUFFdUYsRUFBRUYsRUFBRWszQixHQUFHbDNCLEVBQUVrM0IsR0FBR2gzQixFQUFFLElBQUl0RixFQUFFLElBQUl5SSxFQUFFckQsRUFBRTRGLFFBQVF3eEIsVUFBVTkxQixFQUFFeEgsRUFBRXVKLEdBQUcsR0FBRyxTQUFTckQsRUFBRTRGLFFBQVFxeEIsV0FBVzMxQixFQUFFLENBQUMsSUFBSXZHLEVBQUUsSUFBSSs2QixLQUFLeDBCLEdBQUd0QixFQUFFMDNCLElBQUk1OEIsRUFBRXdvQyxvQkFBb0J2b0MsUUFBUWlGLGFBQWExRCxLQUFLLFNBQVNnRixHQUFHLFNBQVNBLElBQUcsSUFBS0EsR0FBR3RCLEVBQUUwM0IsS0FBSSxPQUFHLElBQVNwMkIsSUFBSXRCLEVBQUUwM0IsSUFBSXAyQixJQUFHLElBQUtsSCxJQUFJNEYsRUFBRXFSLFVBQVMsRUFBR3JSLEVBQUVpOEIsVUFBUyxHQUFJajhCLEVBQUV1SixRQUFRc0IsaUJBQWlCLFVBQVMsU0FBVS9RLEdBQUdlLEVBQUV3bUMsWUFBVyxFQUFHLFVBQVV4bUMsRUFBRTBsQyxjQUFjMWxDLEVBQUUwbEMsWUFBWSxXQUFXdmdDLEVBQUU2d0IsWUFBWSxjQUFjUixLQUFLLFFBQVEsSUFBSSxJQUFJajJCLEVBQUVvd0IsR0FBRzlULFlBQVk1YyxFQUFFOFksUUFBUXhZLEdBQUdBLEVBQUVpYyxVQUFVLElBQUkxYixFQUFFRSxFQUFFdWxDLGdCQUFnQnhsQyxFQUFFRSxFQUFFOEssUUFBUXUwQixXQUFXdjFCLEtBQUs5QyxFQUFFLENBQUMreUIsVUFBVSxDQUFDeGtCLE1BQU12VyxFQUFFeXBDLEtBQUt6b0MsR0FBR2k2QixlQUFlbjZCLEdBQUdzRixFQUFFLENBQUMyMEIsVUFBVSxDQUFDeGtCLE1BQU12VyxFQUFFMHBDLElBQUk3b0MsR0FBR282QixlQUFlbjZCLEdBQUd5SSxFQUFFLENBQUN3eEIsVUFBVSxDQUFDeGtCLE1BQU12VyxFQUFFMHBDLElBQUk3b0MsRUFBRThvQyxNQUFNempDLEdBQUcrMEIsZUFBZW42QixHQUFHRSxFQUFFaThCLGdCQUFnQi8zQixHQUFHODBCLGdCQUFnQmh5QixHQUFHaEgsRUFBRWk4QixnQkFBZ0IvM0IsR0FBR3MxQixpQkFBaUJqeEIsR0FBR3ZJLEVBQUVpOEIsZ0JBQWdCLzNCLEdBQUdxMUIsZUFBZW4wQixNQUFNRixFQUFFdUosUUFBUXNCLGlCQUFpQixTQUFRLFNBQVUvUSxHQUFHZ0IsRUFBRWtSLEtBQUtnMEIsU0FBU25sQyxTQUFTQSxFQUFFME8sUUFBUXNCLGlCQUFpQixTQUFRLFNBQVUvUSxHQUFHZ0IsRUFBRWtSLEtBQUtnMEIsU0FBU25sQyxNQUFNWCxLQUFLOFIsS0FBSzQwQixPQUFPL2xDLEdBQUcsSUFBSWlILEVBQUVqSCxFQUFFc2xDLG1CQUFtQixPQUFPcitCLEVBQUV1TCxPQUFPLEdBQUd2TCxFQUFFQSxFQUFFdUwsT0FBTyxHQUFHOUQsUUFBUXNCLGlCQUFpQixXQUFVLFNBQVUvUSxHQUFHLE9BQU9hLEVBQUUrb0Msa0JBQWtCN29DLEdBQUdULEVBQUVKLFVBQVVzcEMsb0JBQW9CLFNBQVN4cEMsR0FBRyxJQUFJTSxFQUFFTixFQUFFNnBDLFVBQVVocEMsRUFBRWIsRUFBRThwQyxXQUFXLEVBQUUsT0FBTzlwQyxFQUFFK3BDLGNBQWMsS0FBS2xwQyxFQUFFLEdBQUcsSUFBSSxJQUFJQSxFQUFFLEtBQUtQLEVBQUUsR0FBRyxJQUFJLElBQUlBLEdBQUdBLEVBQUVKLFVBQVU4cEMsb0JBQW9CLFNBQVNocUMsR0FBRyxJQUFJTSxFQUFFTixFQUFFaXFDLFdBQVdwcEMsRUFBRWIsRUFBRWtxQyxhQUFhLE9BQU81cEMsRUFBRSxHQUFHLElBQUksSUFBSUEsRUFBRSxLQUFLTyxFQUFFLEdBQUcsSUFBSSxJQUFJQSxHQUFHUCxFQUFFSixVQUFVMHBDLGVBQWUsU0FBUzVwQyxHQUFHLEdBQUcsSUFBSUEsRUFBRW1xQyxRQUFPLElBQUtucUMsRUFBRXNwQixTQUFTLENBQUMsSUFBSWhwQixFQUFFRixLQUFLOFIsS0FBSzgwQixpQkFBaUIsS0FBSzFtQyxFQUFFaVQsUUFBUSxHQUFHLENBQUMsSUFBSTFTLEVBQUVQLEVBQUVBLEVBQUVpVCxPQUFPLEdBQUdvekIsU0FBUzdsQyxFQUFFZCxFQUFFOFksT0FBT21FLFFBQVEsTUFBTW5jLEdBQUdELElBQUk2aEIsU0FBUzVoQixFQUFFaVYsYUFBYSxtQkFBbUIzVixLQUFLMm9DLGlCQUFpQnpvQyxFQUFFSixVQUFVNm9DLFlBQVksV0FBVyxJQUFJL29DLEVBQUVJLEtBQUtrcEMsVUFBVWxwQyxLQUFLZ3FDLHNCQUFxQixHQUFJOXBDLEVBQUVOLEVBQUVxbUMsbUJBQW1CL2xDLEVBQUVpVCxPQUFPLEdBQUdqVCxFQUFFLEdBQUc0bEIsUUFBUWxtQixFQUFFeW1DLFlBQVksUUFBUXptQyxFQUFFdW5DLFlBQVcsRUFBRyxJQUFJMW1DLEVBQUUsQ0FBQ2s2QixVQUFVLENBQUMwTyxLQUFLcnBDLEtBQUttVyxNQUFNdlcsR0FBR2k3QixlQUFlNzZCLEtBQUswTCxRQUFRdTBCLFdBQVd2MUIsTUFBTSxPQUFPMUssS0FBSzY4QixnQkFBZ0IvM0IsR0FBRzgwQixnQkFBZ0JuNUIsSUFBRyxJQUFLVCxLQUFLMEwsUUFBUXkwQix1QkFBdUJuZ0MsS0FBS3cvQixpQkFBaUJtRixZQUFZM2tDLEtBQUt3L0IsaUJBQWlCa0YsUUFBUTlrQyxFQUFFeVAsVUFBVXpQLEdBQUdNLEVBQUVKLFVBQVVrcUMsbUJBQW1CLFdBQVcsSUFBSXBxQyxFQUFFLEdBQUcsT0FBT0ksS0FBSzBMLFFBQVFxMEIsY0FBYzkwQixTQUFRLFNBQVUvSyxFQUFFTyxHQUFHYixFQUFFTSxFQUFFdWhDLGVBQVUsS0FBVTdoQyxHQUFHTSxFQUFFSixVQUFVbXFDLGFBQWEsU0FBU3JxQyxFQUFFTSxHQUFHTixHQUFHQSxFQUFFKzZCLFlBQVkzNkIsS0FBS2txQyxlQUFlbHFDLEtBQUt1L0IsWUFBWXYvQixLQUFLNG5DLFVBQVU3RCxTQUFRLElBQUs3akMsSUFBSUYsS0FBSzAvQixjQUFjLElBQUcsSUFBSzEvQixLQUFLMEwsUUFBUXkwQix1QkFBdUJuZ0MsS0FBS3cvQixpQkFBaUJDLFlBQVksTUFBTXYvQixFQUFFSixVQUFVNC9CLGNBQWMsU0FBUzkvQixHQUFHLElBQUcsSUFBS0ksS0FBSzBMLFFBQVF1MEIsV0FBV0wsU0FBUyxDQUFDLElBQUkxL0IsRUFBRUYsS0FBSzBMLFFBQVF1MEIsV0FBV0osSUFBSWpnQyxHQUFHLElBQUlNLEVBQUUsT0FBT0YsS0FBS21rQyxXQUFXbGpDLElBQUksQ0FBQzQrQixJQUFJMy9CLFFBQVEsQ0FBQyxJQUFJTyxFQUFFVCxLQUFLMEwsUUFBUXUwQixXQUFXN3ZCLEtBQUtrMEIsU0FBUzVqQyxFQUFFVixLQUFLMEwsUUFBUXUwQixXQUFXN3ZCLEtBQUs4eUIsU0FBU3ZpQyxFQUFFLENBQUNrNkIsZUFBZTc2QixLQUFLMEwsUUFBUXUwQixXQUFXdjFCLEtBQUtpd0IsVUFBVSxDQUFDNEIsS0FBSzk3QixFQUFFd2lDLFNBQVMsSUFBSS8vQixHQUFHdEQsRUFBRWMsRUFBRTBoQyxTQUFTMWhDLEVBQUUyaEMsZ0JBQWdCcmlDLEtBQUs2OEIsZ0JBQWdCLzNCLEdBQUcyMEIscUJBQXFCOTRCLEtBQUtULEVBQUVKLFVBQVVxcUMsYUFBYSxTQUFTdnFDLEdBQUcsSUFBSU0sRUFBRUYsS0FBS0EsS0FBSzhSLEtBQUsyMEIsS0FBS2g0QixRQUFPLFNBQVU3TyxHQUFHLE1BQU0sWUFBWUEsRUFBRXltQyxhQUFhLGtCQUFrQnptQyxFQUFFeW1DLGVBQWVwN0IsU0FBUSxTQUFVckwsR0FBRyxPQUFPTSxFQUFFNFIsS0FBS3kxQixVQUFVM25DLE1BQU1JLEtBQUs4UixLQUFLMjBCLEtBQUt4N0IsU0FBUSxTQUFVckwsR0FBR0EsRUFBRXltQyxZQUFZLFdBQVd6bUMsRUFBRWdoQyxZQUFZbnlCLFFBQU8sU0FBVTdPLEdBQUcsT0FBT0EsRUFBRWloQyxTQUFTNTFCLFNBQVEsU0FBVXJMLEdBQUdBLEVBQUV1WCxVQUFTLFNBQVVqWCxFQUFFSixVQUFVc3FDLFlBQVksU0FBU3hxQyxHQUFHLEdBQUdBLEdBQUdBLEVBQUUrNkIsV0FBVy82QixFQUFFKzZCLFVBQVV4a0IsTUFBTWswQixhQUFhLElBQUksSUFBSW5xQyxFQUFFTixFQUFFKzZCLFVBQVV4a0IsTUFBTWswQixhQUFhNXBDLEVBQUVULEtBQUswTCxRQUFRdTBCLFdBQVd2MUIsS0FBS2hLLEVBQUVWLEtBQUs4UixLQUFLbzFCLGVBQWV2bUMsRUFBRSxFQUFFQSxFQUFFRCxFQUFFeVMsT0FBT3hTLElBQUksQ0FBQyxJQUFJQyxFQUFFVixFQUFFTyxFQUFFLElBQUlFLEVBQUUsS0FBSyxHQUFHQyxHQUFHQSxFQUFFdVMsT0FBTyxFQUFFLENBQUMsSUFBSXZMLEVBQUVoSCxFQUFFLEdBQUdrRixFQUFFbkYsRUFBRXFGLEVBQUVoRyxLQUFLc3FDLGNBQWNob0IsU0FBUzFhLElBQUksSUFBSTVCLEVBQUUsU0FBU2hHLEtBQUswTCxRQUFRcTBCLGNBQWM5MEIsU0FBUSxTQUFVckwsRUFBRWMsR0FBRyxJQUFJQyxFQUFFZixFQUFFNmhDLFNBQVNuaEMsbUJBQW1CTSxFQUFFVixFQUFFTyxFQUFFLElBQUlxRixFQUFFLEtBQUtuRixHQUFHLEdBQUdDLEdBQUdBLEVBQUV1UyxPQUFPLEVBQUUsQ0FBQyxJQUFJdkwsRUFBRTVCLEVBQUU0NkIsWUFBWW50QixNQUFLLFNBQVV2VCxHQUFHLE9BQU9BLEVBQUV3TCxRQUFRd3hCLFlBQVl0OUIsRUFBRTZoQyxZQUFZLEdBQUc3NUIsRUFBRSxDQUFDQSxFQUFFOHVCLFNBQVMsY0FBYyxJQUFJdnRCLEVBQUUsR0FBRzBMLE1BQU0rRyxLQUFLaGIsR0FBR3FLLFNBQVEsU0FBVXJMLEdBQUd1SixHQUFHdkosRUFBRSxPQUFPZ0ksRUFBRXV1QixLQUFLLFFBQVFodEIsR0FBRyxJQUFJbW5CLEdBQUcxb0IsRUFBRSxHQUFHLENBQUNxbEIsWUFBWSwwQkFBMEIvc0IsRUFBRUosVUFBVXdxQyxjQUFjLFNBQVMxcUMsR0FBRyxPQUFPSSxLQUFLOFIsS0FBSzIwQixLQUFLaHpCLE1BQUssU0FBVXZULEVBQUVPLEdBQUcsT0FBT1AsRUFBRXFtQyxXQUFXM21DLE1BQU1NLEVBQUVKLFVBQVV5cUMsVUFBVSxTQUFTM3FDLEVBQUVNLEdBQUcsSUFBSU8sRUFBRUMsRUFBRUMsRUFBRVgsS0FBS1ksRUFBRSxTQUFTaEIsRUFBRU0sR0FBRyxPQUFPTixFQUFFNGxDLE1BQU10bEMsR0FBR2dpQyxlQUFldDZCLEVBQUU1SCxLQUFLMEwsUUFBUXUwQixXQUFXdjFCLEtBQUsxSyxLQUFLOFIsS0FBSzIwQixLQUFLcnpCLE1BQU0zUyxFQUFFVCxLQUFLMm5DLEtBQUtkLG1CQUFtQnJCLE1BQU05M0IsUUFBUTlOLEdBQUdjLEVBQUVSLEdBQUdBLEVBQUUsU0FBU04sRUFBRU0sR0FBRyxPQUFPUyxFQUFFQyxFQUFFRixFQUFFZCxFQUFFTSxFQUFFTyxHQUFHbUgsRUFBRWhILEVBQUVGLEVBQUVSLEVBQUVOLEVBQUVhLEdBQUdFLEVBQUVzSixXQUFXdWdDLGNBQWM1aUMsRUFBRXFDLFlBQVksSUFBSXRKLEVBQUVpSCxLQUFLcUQsU0FBUSxTQUFVckwsR0FBRyxPQUFPZSxFQUFFbVIsS0FBS3NXLE9BQU94b0IsR0FBRSxNQUFPLElBQUlrRyxFQUFFLENBQUM2MEIsVUFBVSxDQUFDOFAsV0FBVzdxQyxFQUFFOHFDLE9BQU85bEMsR0FBRyt6QixhQUFha0MsZUFBZWp6QixHQUFHNUIsRUFBRSxDQUFDMjBCLFVBQVUsQ0FBQzhQLFdBQVc3cUMsRUFBRWdwQyxJQUFJMW9DLEdBQUcyNkIsZUFBZWp6QixHQUFHNUgsS0FBSzY4QixnQkFBZ0IvM0IsR0FBR2kxQixrQkFBa0IvekIsR0FBR2hHLEtBQUs2OEIsZ0JBQWdCLzNCLEdBQUdtMUIsdUJBQXVCbjBCLElBQUk1RixFQUFFSixVQUFVNnFDLGlCQUFpQixTQUFTL3FDLEdBQUcsSUFBSU0sRUFBRU4sRUFBRSs2QixVQUFVeGtCLE1BQU11QyxPQUFPLEdBQUcsT0FBT3hZLEVBQUUwYyxRQUFRemMsY0FBYyxDQUFDLElBQUlNLEVBQUVQLEVBQUUyYyxRQUFRLE1BQU0sSUFBSXBjLEVBQUUsT0FBT1AsRUFBRU8sRUFBRSxJQUFJQyxFQUFFVixLQUFLMm5DLEtBQUtkLG1CQUFtQnJCLE1BQU0veEIsTUFBSyxTQUFVN1QsRUFBRWEsR0FBRyxPQUFPYixFQUFFeVAsVUFBVW5QLEtBQUtRLEdBQUdWLEtBQUt1cUMsVUFBVTdwQyxFQUFFZCxFQUFFKzZCLFVBQVVpTyxNQUFNMW9DLEVBQUVKLFVBQVVvcUMsYUFBYSxXQUFXbHFDLEtBQUsybkMsS0FBS2xCLEtBQUt4N0IsU0FBUSxTQUFVckwsRUFBRU0sSUFBSU4sRUFBRWczQixTQUFTLGlCQUFpQmgzQixFQUFFZzNCLFNBQVMsaUJBQWlCaDNCLEVBQUUrMkIsWUFBWSxlQUFlQSxZQUFZLG9CQUFvQnoyQixFQUFFSixVQUFVOHFDLGdCQUFnQixTQUFTaHJDLEdBQUcsSUFBSU0sRUFBRUYsS0FBS0EsS0FBSzhSLEtBQUsyMEIsS0FBS3g3QixTQUFRLFNBQVVyTCxFQUFFYSxHQUFHYixFQUFFZ2hDLFlBQVkzMUIsU0FBUSxTQUFVckwsR0FBR0EsRUFBRXlQLFFBQVF3QixvQkFBb0IsVUFBVTNRLEVBQUVzcEMsbUJBQW1CLElBQUk5b0MsRUFBRWQsRUFBRXFtQyxtQkFBbUJ2bEMsRUFBRXlTLFFBQVEsR0FBR3pTLEVBQUVBLEVBQUV5UyxPQUFPLEdBQUc5RCxRQUFRc0IsaUJBQWlCLFVBQVV6USxFQUFFc3BDLG9CQUFvQnRwQyxFQUFFSixVQUFVa2hDLFdBQVcsU0FBU3BoQyxFQUFFTSxFQUFFTyxRQUFHLElBQVNBLElBQUlBLEdBQUUsR0FBSSxJQUFJQyxFQUFFLENBQUN5NkIsSUFBSW43QixLQUFLMEwsUUFBUXd6QixPQUFPbkUsVUFBVW43QixFQUFFcTdCLFNBQVMvNkIsRUFBRTI2QixlQUFlNzZCLEtBQUswTCxRQUFRdTBCLFdBQVd2MUIsS0FBS3N3QixxQkFBcUJ2NkIsR0FBR3lFLEdBQUdrMkIsVUFBVTE2QixJQUFJUixFQUFFSixVQUFVdWdDLGNBQWMsU0FBU3pnQyxHQUFHLElBQUlNLEVBQUUsQ0FBQ2k3QixJQUFJbjdCLEtBQUswTCxRQUFRd3pCLE9BQU9uRSxVQUFVbjdCLEVBQUVpN0IsZUFBZTc2QixLQUFLMEwsUUFBUXUwQixXQUFXdjFCLE1BQU14RixHQUFHZzJCLFlBQVloN0IsSUFBSUEsRUFBRUosVUFBVStxQyxZQUFZLFNBQVNqckMsSUFBRyxJQUFLSSxLQUFLMEwsUUFBUXkwQixzQkFBc0JuZ0MsS0FBS3UvQixZQUFZLElBQUlyL0IsRUFBRU4sRUFBRSs2QixVQUFVc0ksU0FBUy9pQyxHQUFHRixLQUFLZ3BDLGVBQWVwcEMsRUFBRSs2QixVQUFVNEIsS0FBSyxJQUFJcjVCLEdBQUdoRCxFQUFFaWlDLFVBQVVqaUMsRUFBRWtpQyxTQUFTbGlDLEVBQUVtaUMsZ0JBQWdCbmlDLEVBQUVKLFVBQVVnckMsaUJBQWlCLFNBQVNsckMsS0FBS00sRUFBRUosVUFBVXNnQyxrQkFBa0IsU0FBU3hnQyxHQUFHLElBQUlNLEVBQUVGLEtBQUssWUFBTyxJQUFTSixJQUFJQSxHQUFFLEdBQUlJLEtBQUswTCxRQUFRd3pCLE9BQU9sL0IsS0FBSzBMLFFBQVF1MEIsV0FBV3YxQixLQUFLMUssS0FBS2doQyxXQUFXbDhCLEdBQUdpMEIsV0FBVSxTQUFVbjVCLEVBQUVhLEdBQUcsT0FBT1AsRUFBRTRSLEtBQUtzMUIscUJBQXFCcG5DLEtBQUtnaEMsV0FBV2w4QixHQUFHdzBCLGVBQWMsU0FBVTE1QixFQUFFYSxHQUFHLE9BQU9QLEVBQUUrcEMsYUFBYXhwQyxHQUFFLE1BQU9ULEtBQUtnaEMsV0FBV2w4QixHQUFHeTBCLGlCQUFnQixTQUFVMzVCLEVBQUVhLEdBQUcsT0FBT1AsRUFBRStwQyxhQUFheHBDLEdBQUUsTUFBT1QsS0FBS2doQyxXQUFXbDhCLEdBQUdvMEIsZ0JBQWUsU0FBVXQ1QixFQUFFYSxHQUFHLE9BQU9QLEVBQUVpcUMsYUFBYTFwQyxNQUFNVCxLQUFLZ2hDLFdBQVdsOEIsR0FBRyswQixlQUFjLFNBQVVqNkIsRUFBRWEsR0FBRyxPQUFPUCxFQUFFa3FDLFlBQVkzcEMsTUFBTVQsS0FBS2doQyxXQUFXbDhCLEdBQUdnMUIsc0JBQXFCLFNBQVVsNkIsRUFBRWEsR0FBRyxPQUFPUCxFQUFFeXFDLGlCQUFpQmxxQyxLQUFLYixHQUFHSSxLQUFLZ2hDLFdBQVdsOEIsR0FBR2kxQixtQkFBa0IsU0FBVW42QixFQUFFYSxHQUFHLE9BQU9QLEVBQUUwcUMsZ0JBQWdCbnFDLEtBQUtiLEdBQUdJLEtBQUtnaEMsV0FBV2w4QixHQUFHbTFCLHdCQUF1QixTQUFVcjZCLEVBQUVhLEdBQUcsT0FBT1AsRUFBRTZxQywyQkFBMkJ0cUMsS0FBS2IsR0FBR0ksS0FBS2doQyxXQUFXbDhCLEdBQUdrMUIsb0JBQW1CLFNBQVVwNkIsRUFBRWEsR0FBRyxPQUFPUCxFQUFFOHFDLGdCQUFnQnZxQyxLQUFLYixHQUFHSSxLQUFLZ2hDLFdBQVdsOEIsR0FBRzIwQixzQkFBcUIsU0FBVTc1QixFQUFFYSxHQUFHLE9BQU9QLEVBQUUycUMsWUFBWXBxQyxLQUFLYixHQUFHSSxLQUFLZ2hDLFdBQVdsOEIsR0FBRzQwQiw0QkFBMkIsU0FBVTk1QixFQUFFYSxHQUFHLE9BQU9QLEVBQUU0cUMsaUJBQWlCcnFDLEtBQUtiLEdBQUdJLE1BQU1FLEVBQUVKLFVBQVVtckMsaUJBQWlCLFdBQVcsSUFBSXJyQyxFQUFFSSxLQUFLRSxFQUFFRixLQUFLMm5DLEtBQUtkLG1CQUFtQnJCLE1BQU0va0MsRUFBRVQsS0FBSzBMLFFBQVF1MEIsV0FBV3YxQixLQUFLaEssRUFBRSw0REFBNERrSixPQUFPbkosRUFBRSxvWUFBb1ltSixPQUFPbkosRUFBRSw4bkJBQThuQkUsRUFBRWlOLFNBQVN1YSxjQUFjLE9BQU94bkIsRUFBRXVXLFVBQVUxQyxJQUFJLGdCQUFnQix3QkFBd0I3VCxFQUFFNHJCLFVBQVU3ckIsRUFBRVYsS0FBS2dvQyxpQkFBaUI1ZixPQUFPem5CLEdBQUcsSUFBSUMsRUFBRUQsRUFBRTJPLGNBQWMscUJBQXFCcFAsRUFBRStLLFNBQVEsU0FBVS9LLEVBQUVRLEdBQUcsSUFBSUMsRUFBRVQsRUFBRXdMLFFBQVErMUIsU0FBUyxHQUFHOWdDLEVBQUUsQ0FBQyxJQUFJaUgsRUFBRWdHLFNBQVN1YSxjQUFjLE1BQU12Z0IsRUFBRXNQLFVBQVUxQyxJQUFJLG1CQUFtQixJQUFJMU8sRUFBRThILFNBQVN1YSxjQUFjLFNBQVNyaUIsRUFBRXdVLEtBQUssV0FBV3hVLEVBQUV4RSxNQUFNLEdBQUd3RSxFQUFFb1IsVUFBVTFDLElBQUksbUJBQW1CLFFBQVEsSUFBSXhPLEVBQUUsa0JBQWtCckYsRUFBRW1GLEVBQUV5RixhQUFhLEtBQUt2RixHQUFHRixFQUFFeUYsYUFBYSx1QkFBdUI1SyxJQUFHLElBQUtULEVBQUVzZ0MsVUFBVTE2QixFQUFFdTNCLFNBQVEsR0FBSSxJQUFJbDBCLEVBQUV5RSxTQUFTdWEsY0FBYyxTQUFTaGYsRUFBRW9DLGFBQWEsTUFBTXZGLEdBQUdtRCxFQUFFa3BCLFlBQVlueUIsRUFBRTYyQixVQUFVbnZCLEVBQUVvdkIsWUFBWWx4QixHQUFHOEIsRUFBRW92QixZQUFZN3RCLEdBQUd2SSxFQUFFbzJCLFlBQVlwdkIsR0FBRzlCLEVBQUU2SyxpQkFBaUIsU0FBUSxTQUFVelEsR0FBRyxJQUFJUSxFQUFFUixFQUFFd1ksT0FBTy9YLEVBQUVELEVBQUVpVixhQUFhLHdCQUF3QixHQUFHaFYsRUFBRSxDQUFDLElBQUlDLEVBQUVoQixFQUFFK25DLEtBQUtkLG1CQUFtQmovQixFQUFFaEgsRUFBRTRrQyxNQUFNL3hCLE1BQUssU0FBVTdULEdBQUcsT0FBT0EsRUFBRThMLFFBQVErMUIsV0FBVzlnQyxLQUFLLEdBQUdpSCxFQUFFLENBQUMsSUFBSTlCLEVBQUVsRyxFQUFFa1MsS0FBSzIwQixLQUFLemdDLEVBQUUwaEMsR0FBR0EsR0FBRyxHQUFHNWhDLEdBQUUsR0FBSSxDQUFDbEYsSUFBRyxHQUFJdUksRUFBRXZJLEVBQUU0a0MsTUFBTTkzQixRQUFROUYsR0FBRyxLQUFLdUIsRUFBRSxHQUFHLENBQUNuRCxFQUFFaUYsU0FBUSxTQUFVckwsR0FBRyxJQUFJTSxFQUFFTixFQUFFNGxDLE1BQU1yOEIsR0FBR2pKLElBQUlRLEVBQUUyOEIsUUFBUW45QixFQUFFc2dDLFNBQVEsRUFBR3RnQyxFQUFFc2dDLFNBQVEsTUFBTzVnQyxFQUFFaTlCLGdCQUFnQi8zQixHQUFHaTFCLGtCQUFrQixDQUFDYyxlQUFlcDZCLEVBQUVrNkIsVUFBVSxDQUFDeGtCLE1BQU1qVyxLQUFLLElBQUlrSCxFQUFFLENBQUN1ekIsVUFBVSxDQUFDeGtCLE1BQU1qVyxFQUFFd3FDLE9BQU85bEMsR0FBR2kwQixlQUFlZ0MsZUFBZXA2QixHQUFHYixFQUFFaTlCLGdCQUFnQi8zQixHQUFHbTFCLHVCQUF1Qjd5QixjQUFjbEgsRUFBRUosVUFBVW9yQyxjQUFjLFdBQVcsSUFBSXRyQyxFQUFFSSxLQUFLMEwsUUFBUXUwQixXQUFXdjFCLEtBQUt4SyxFQUFFRixLQUFLMm5DLEtBQUtkLG1CQUFtQnJCLE1BQU14bEMsS0FBSzJsQyxJQUFJLEdBQUczbEMsS0FBS2cyQixPQUFPLFdBQVcsVUFBVSxJQUFJLElBQUl2MUIsRUFBRVQsS0FBS3FQLFFBQVE1QyxhQUFhL0wsRUFBRSxFQUFFQSxFQUFFUixFQUFFaVQsT0FBT3pTLElBQUksQ0FBQyxJQUFJQyxFQUFFaUgsRUFBRW5ILEdBQUdQLEVBQUVRLEdBQUcyTyxRQUFRK1ksT0FBT3puQixHQUFHVCxFQUFFUSxHQUFHczFCLE9BQU8sV0FBVyxZQUFZcDFCLEVBQUVELEVBQUVULEVBQUVRLEdBQUdWLE1BQU0sU0FBU1ksRUFBRVYsRUFBRU8sRUFBRUMsR0FBRyxJQUFJQyxFQUFFQyxFQUFFZ0gsRUFBRTVCLEVBQUU5RixFQUFFeVEsaUJBQWlCLGFBQVksU0FBVS9RLEdBQUdvRyxFQUFFdEYsRUFBRTJPLFFBQVEzQyxZQUFZOUwsRUFBRUgsRUFBRTRPLFFBQVExTyxFQUFFZixFQUFFdXJDLE1BQU0sSUFBSWpyQyxFQUFFLFNBQVNOLEdBQUcsR0FBRyxjQUFja0csRUFBRWxHLEVBQUUsY0FBYyxPQUFPLEVBQUUsSUFBSU0sRUFBRTRGLEVBQUVsRyxFQUFFLGdCQUFnQmEsRUFBRXFGLEVBQUVsRyxFQUFFLGlCQUFpQixPQUFPMGlCLFNBQVNwaUIsR0FBR29pQixTQUFTN2hCLEdBQXJJLENBQXlJRyxHQUFHZ0gsRUFBRWhILEVBQUU4TCxZQUFZeE0sS0FBS0EsRUFBRXlRLGlCQUFpQixhQUFZLFNBQVUvUSxHQUFHSSxLQUFLcUwsTUFBTSsvQixZQUFZLHVCQUF1QmxyQyxFQUFFeVEsaUJBQWlCLFlBQVcsU0FBVS9RLEdBQUdJLEtBQUtxTCxNQUFNKy9CLFlBQVksTUFBTXg5QixTQUFTK0MsaUJBQWlCLGFBQVksU0FBVS9RLEdBQUcsR0FBR2dCLEVBQUUsQ0FBQyxJQUFJVixFQUFFTixFQUFFdXJDLE1BQU14cUMsRUFBRUMsRUFBRXlLLE1BQU1zQixNQUFNL0UsRUFBRTFILEVBQUUsS0FBS1EsRUFBRTJPLFFBQVFoRSxNQUFNc0IsTUFBTTNHLEVBQUU5RixFQUFFLFNBQVMwTixTQUFTK0MsaUJBQWlCLFdBQVUsU0FBVXpRLEdBQUcsR0FBR1UsRUFBRSxDQUFDLElBQUlILEVBQUUsQ0FBQ2s2QixVQUFVLENBQUN4a0IsTUFBTWpXLEVBQUV1cUMsV0FBVzdwQyxFQUFFOHBDLE9BQU85bEMsR0FBR2cwQixhQUFhaUMsZUFBZWo3QixHQUFHYyxFQUFFbThCLGdCQUFnQi8zQixHQUFHbTFCLHVCQUF1Qng1QixHQUFHRyxPQUFFLEVBQU9ELE9BQUUsRUFBT2lILE9BQUUsS0FBVSxTQUFTQSxFQUFFaEksR0FBRyxJQUFJTSxFQUFFME4sU0FBU3VhLGNBQWMsT0FBTyxPQUFPam9CLEVBQUVtTCxNQUFNakMsSUFBSSxJQUFJbEosRUFBRW1MLE1BQU1wQyxNQUFNLElBQUkvSSxFQUFFbUwsTUFBTXNCLE1BQU0sTUFBTXpNLEVBQUVtTCxNQUFNSSxTQUFTLFdBQVd2TCxFQUFFbUwsTUFBTWdnQyxPQUFPLGFBQWFuckMsRUFBRW1MLE1BQU1pZ0MsV0FBVyxPQUFPcHJDLEVBQUVtTCxNQUFNdUIsT0FBT2hOLEVBQUUsS0FBS00sRUFBRSxTQUFTNEYsRUFBRWxHLEVBQUVNLEdBQUcsT0FBTzhKLE9BQU93RCxpQkFBaUI1TixFQUFFLE1BQU1rWCxpQkFBaUI1VyxLQUFLQSxFQUFFSixVQUFVeXJDLHVCQUF1QixXQUFXLElBQUkzckMsRUFBRUksS0FBS0UsRUFBRUYsS0FBSzBMLFFBQVF1MEIsV0FBV3YxQixLQUFLakssRUFBRVQsS0FBS1UsRUFBRWtOLFNBQVN1YSxjQUFjLE9BQU96bkIsRUFBRThxQyxXQUFVLEVBQUc5cUMsRUFBRXdXLFVBQVUxQyxJQUFJLGVBQWUsSUFBSTdULEVBQUVDLEVBQUVILEVBQUVrbkMsS0FBS2QsbUJBQW1Cai9CLEVBQUVoSCxFQUFFNGtDLE1BQU01OUIsRUFBRXFELFNBQVEsU0FBVS9LLEdBQUcsSUFBSU8sRUFBRVAsRUFBRW8zQixnQkFBZ0IsR0FBRyxJQUFJNzJCLEVBQUUwUyxPQUFPLENBQUMsSUFBSXhTLEVBQUVULEVBQUU2MkIsVUFBVTcyQixFQUFFNDJCLFFBQVEsSUFBSSxJQUFJbDJCLEVBQUVnTixTQUFTdWEsY0FBYyxPQUFPdm5CLEVBQUV5eEIsWUFBWTF4QixFQUFFVCxFQUFFODJCLFlBQVlwMkIsR0FBR2hCLEVBQUVvZixLQUFLdGUsRUFBRUUsUUFBUWhCLEVBQUVvZixLQUFLdGUsRUFBRUQsTUFBTVQsS0FBS3EyQixhQUFhLGdCQUFnQnByQixTQUFRLFNBQVV2SyxHQUFHZCxFQUFFMjNCLGdCQUFnQjcyQixFQUFFLENBQUM4MkIsVUFBVSxTQUFTNTNCLEdBQUdJLEtBQUtrWCxVQUFVL0osU0FBUyxnQkFBZ0J4TSxFQUFFWCxLQUFLQSxLQUFLcUwsTUFBTW9nQyxRQUFRLE9BQU85cUMsT0FBRSxHQUFRODJCLFVBQVUsU0FBUzczQixHQUFHQSxFQUFFeWIsaUJBQWlCMWEsR0FBR1gsS0FBS2tYLFVBQVUvSixTQUFTLGdCQUFnQm5OLEtBQUtrWCxVQUFVMkUsT0FBTyxTQUFTNmIsVUFBVSxTQUFTOTNCLEdBQUdBLEVBQUV5YixpQkFBaUIxYSxHQUFHWCxLQUFLa1gsVUFBVS9KLFNBQVMsZ0JBQWdCbk4sS0FBS2tYLFVBQVUxQyxJQUFJLFNBQVNtakIsU0FBUyxTQUFTLzNCLEdBQUdBLEVBQUV5YixpQkFBaUIxYSxHQUFHWCxLQUFLa1gsVUFBVS9KLFNBQVMsZ0JBQWdCbk4sS0FBS2tYLFVBQVUxQyxJQUFJLFNBQVNvakIsUUFBUSxTQUFTaDRCLEdBQUdBLEVBQUV5YixpQkFBaUIxYSxJQUFJWCxLQUFLcUwsTUFBTW9nQyxRQUFRLE1BQU01VCxLQUFLLFNBQVNqNEIsR0FBRyxHQUFHQSxFQUFFeWIsaUJBQWlCMWEsSUFBSVgsS0FBS2tYLFVBQVUyRSxPQUFPLFFBQVE3YixLQUFLa1gsVUFBVS9KLFNBQVMsZ0JBQWdCeE0sSUFBSVgsTUFBTSxDQUFDLElBQUlVLEVBQUVWLEtBQUs2YyxRQUFRLE1BQU0sR0FBR25jLEVBQUUsQ0FBQyxJQUFJc0YsRUFBRTRCLEVBQUU2TCxNQUFLLFNBQVU3VCxHQUFHLE9BQU9BLEVBQUV5UCxVQUFVM08sS0FBSyxHQUFHc0YsRUFBRSxDQUFDLElBQUltRCxFQUFFdkIsRUFBRThGLFFBQVExSCxHQUFHb0IsRUFBRXpHLEVBQUVrYyxRQUFRLE1BQU0sR0FBR3pWLEVBQUUsQ0FBQyxJQUFJdkcsRUFBRStHLEVBQUU2TCxNQUFLLFNBQVU3VCxHQUFHLE9BQU9BLEVBQUV5UCxVQUFVakksS0FBSyxHQUFHcEIsRUFBRSxDQUFDLElBQUl3RCxFQUFFNUIsRUFBRThGLFFBQVE3TSxHQUFHLEdBQUdzSSxHQUFHSyxFQUFFLENBQUMxRCxFQUFFbEYsRUFBRWdILEVBQUU0QixFQUFFTCxHQUFHLElBQUliLEVBQUU3SCxFQUFFcVIsS0FBSzIwQixLQUFLOXRCLFlBQVcsV0FBWSxJQUFJLElBQUlqWSxFQUFFLEVBQUVBLEVBQUU0SCxFQUFFNkssT0FBT3pTLElBQUksQ0FBQyxJQUFJQyxFQUFFMkgsRUFBRTVILEdBQUdFLEVBQUVELEVBQUU2a0MsTUFBTSxHQUFHcjhCLEdBQUdLLEVBQUUsT0FBTzFELEVBQUVuRixFQUFFQyxFQUFFNEksRUFBRUwsR0FBRzFJLEVBQUVvOEIsZ0JBQWdCLzNCLEdBQUdpMUIsa0JBQWtCLENBQUNjLGVBQWUzNkIsRUFBRXk2QixVQUFVLENBQUN4a0IsTUFBTXZXLEtBQUssSUFBSWdJLEVBQUUsQ0FBQyt5QixVQUFVLENBQUN4a0IsTUFBTXZXLEVBQUU4cUMsT0FBTzlsQyxHQUFHazBCLGFBQWErQixlQUFlMzZCLEdBQUdPLEVBQUVvOEIsZ0JBQWdCLzNCLEdBQUdtMUIsdUJBQXVCcnlCLEtBQUssaUJBQWlCLElBQUk5QixFQUFFLFNBQVNsRyxFQUFFTSxFQUFFTyxFQUFFQyxHQUFHLEdBQUdELEdBQUdDLEVBQUUsQ0FBQyxJQUFJQyxFQUFFRSxFQUFFNnFDLElBQUlqckMsRUFBRUMsSUFBSUMsRUFBRUUsRUFBRThxQyxLQUFLaHJDLElBQUlFLEVBQUU4cUMsSUFBSTNsQyxFQUFFOUYsRUFBRU8sRUFBRUMsR0FBR3lJLEVBQUVqSixFQUFFTyxFQUFFQyxHQUFHZCxFQUFFNGxDLE1BQU0sR0FBRzVsQyxFQUFFaW1DLFNBQVMzbEMsS0FBSzhGLEVBQUUsU0FBU3BHLEVBQUVNLEVBQUVPLEdBQUcsSUFBSSxJQUFJQyxFQUFFUixFQUFFUSxFQUFFRCxFQUFFQyxJQUFJMEcsRUFBRXhILEVBQUVjLEVBQUVBLEVBQUUsSUFBSXlJLEVBQUUsU0FBU3ZKLEVBQUVNLEVBQUVPLEdBQUcsSUFBSSxJQUFJQyxFQUFFUixFQUFFUSxFQUFFRCxFQUFFQyxJQUFJMEcsRUFBRXhILEVBQUVjLEVBQUVBLEVBQUUsSUFBSTBHLEVBQUUsU0FBU3hILEVBQUVNLEVBQUVPLEdBQUcsSUFBSUMsRUFBRWQsRUFBRU0sR0FBR04sRUFBRU0sR0FBR04sRUFBRWEsR0FBR2IsRUFBRWEsR0FBR0MsR0FBR0csRUFBRSxDQUFDOHFDLElBQUksZ0JBQWdCRCxJQUFJLGtCQUFrQnhyQyxFQUFFSixVQUFVaXJDLDJCQUEyQixTQUFTbnJDLEdBQUdBLEVBQUUrNkIsVUFBVStQLE9BQU8sSUFBSXhxQyxFQUFFRixLQUFLMEwsUUFBUXd6QixPQUFPeitCLEVBQUVULEtBQUsybkMsS0FBS2QsbUJBQW1CckIsTUFBTTlrQyxFQUFFLEdBQUdELEVBQUV3SyxTQUFRLFNBQVVyTCxFQUFFTSxHQUFHLElBQUlPLEVBQUViLEVBQUU4TCxRQUFRKzFCLFNBQVMsR0FBR2hoQyxFQUFFLENBQUMsSUFBSUUsR0FBRSxFQUFHZixFQUFFZzNCLFNBQVMsa0JBQWtCajJCLEdBQUUsR0FBSSxJQUFJQyxFQUFFLENBQUNrb0MsTUFBTWxwQyxFQUFFbTJCLE9BQU8sU0FBUzhTLFFBQVFqcEMsRUFBRTRnQyxRQUFRb0wsVUFBVWpyQyxFQUFFb29DLFNBQVM3b0MsR0FBR1EsRUFBRUQsR0FBR0csTUFBTTRELEdBQUdzWCxPQUFPNWIsR0FBR3lZLFlBQVcsV0FBWW5VLEdBQUdpMEIsUUFBUXY0QixFQUFFUSxFQUFFLENBQUN5M0IsS0FBSyxHQUFHMFQsUUFBTyxFQUFHQyxTQUFTLGFBQWEsTUFBTTVyQyxFQUFFSixVQUFVa3JDLGdCQUFnQixTQUFTcHJDLEdBQUdJLEtBQUtpckMsbUJBQW1CanJDLEtBQUt1ckMseUJBQXlCdnJDLEtBQUtrckMsaUJBQWlCaHJDLEVBQXRpbEIsQ0FBeWlsQjBCLElBQUltcUMsR0FBRyxXQUFXLElBQUluc0MsRUFBRSxTQUFTTSxFQUFFTyxHQUFHLE9BQU9iLEVBQUVrQixPQUFPNjdCLGdCQUFnQixDQUFDQyxVQUFVLGNBQWMvbkIsT0FBTyxTQUFTalYsRUFBRU0sR0FBR04sRUFBRWc5QixVQUFVMThCLElBQUksU0FBU04sRUFBRU0sR0FBRyxJQUFJLElBQUlPLEtBQUtQLEVBQUVZLE9BQU9oQixVQUFVb0IsZUFBZUMsS0FBS2pCLEVBQUVPLEtBQUtiLEVBQUVhLEdBQUdQLEVBQUVPLEtBQUtiLEVBQUVNLEVBQUVPLElBQUksT0FBTyxTQUFTUCxFQUFFTyxHQUFHLEdBQUcsbUJBQW1CQSxHQUFHLE9BQU9BLEVBQUUsTUFBTSxJQUFJa1csVUFBVSx1QkFBdUI5VyxPQUFPWSxHQUFHLGlDQUFpQyxTQUFTQyxJQUFJVixLQUFLZ2MsWUFBWTliLEVBQUVOLEVBQUVNLEVBQUVPLEdBQUdQLEVBQUVKLFVBQVUsT0FBT1csRUFBRUssT0FBT3MyQixPQUFPMzJCLElBQUlDLEVBQUVaLFVBQVVXLEVBQUVYLFVBQVUsSUFBSVksSUFBamQsR0FBd2RzRCxHQUFHLFNBQVNwRSxHQUFHLFNBQVNNLElBQUksSUFBSUEsRUFBRU4sRUFBRXVCLEtBQUtuQixPQUFPQSxLQUFLLE9BQU9FLEVBQUU4aUMsTUFBTSxHQUFHOWlDLEVBQUUsT0FBTzZyQyxHQUFHN3JDLEVBQUVOLEdBQUdNLEVBQUVKLFVBQVUwVSxJQUFJLFNBQVM1VSxHQUFHSSxLQUFLZ3NDLFNBQVNwc0MsRUFBRThMLFFBQVF3eEIsWUFBWWw5QixLQUFLZ2pDLE1BQU0xdkIsS0FBSzFULElBQUlNLEVBQUVKLFVBQVVrc0MsU0FBUyxTQUFTcHNDLEdBQUcsT0FBT0ksS0FBS2dqQyxNQUFNdnZCLE1BQUssU0FBVXZULEdBQUcsT0FBT0EsRUFBRXdMLFFBQVF3eEIsWUFBWXQ5QixNQUFNTSxFQUFqUixDQUFvUjBCLElBQUlxcUMsR0FBRyxXQUFXLElBQUlyc0MsRUFBRSxTQUFTTSxFQUFFTyxHQUFHLE9BQU9iLEVBQUVrQixPQUFPNjdCLGdCQUFnQixDQUFDQyxVQUFVLGNBQWMvbkIsT0FBTyxTQUFTalYsRUFBRU0sR0FBR04sRUFBRWc5QixVQUFVMThCLElBQUksU0FBU04sRUFBRU0sR0FBRyxJQUFJLElBQUlPLEtBQUtQLEVBQUVZLE9BQU9oQixVQUFVb0IsZUFBZUMsS0FBS2pCLEVBQUVPLEtBQUtiLEVBQUVhLEdBQUdQLEVBQUVPLEtBQUtiLEVBQUVNLEVBQUVPLElBQUksT0FBTyxTQUFTUCxFQUFFTyxHQUFHLEdBQUcsbUJBQW1CQSxHQUFHLE9BQU9BLEVBQUUsTUFBTSxJQUFJa1csVUFBVSx1QkFBdUI5VyxPQUFPWSxHQUFHLGlDQUFpQyxTQUFTQyxJQUFJVixLQUFLZ2MsWUFBWTliLEVBQUVOLEVBQUVNLEVBQUVPLEdBQUdQLEVBQUVKLFVBQVUsT0FBT1csRUFBRUssT0FBT3MyQixPQUFPMzJCLElBQUlDLEVBQUVaLFVBQVVXLEVBQUVYLFVBQVUsSUFBSVksSUFBamQsR0FBd2QwRCxHQUFHLFNBQVN4RSxHQUFHLFNBQVNNLEVBQUVBLEdBQUcsSUFBSU8sRUFBRWIsRUFBRXVCLEtBQUtuQixLQUFLRSxJQUFJRixLQUFLLE9BQU9TLEVBQUVpTCxRQUFReEwsRUFBRU8sRUFBRXE4QixTQUFTcjhCLEVBQUUsT0FBT3dyQyxHQUFHL3JDLEVBQUVOLEdBQUdNLEVBQUVKLFVBQVVnOUIsT0FBTyxXQUFXOThCLEtBQUtxUCxRQUFRekIsU0FBU2drQixlQUFlNXhCLEtBQUswTCxRQUFRdXhCLFlBQVkvOEIsRUFBaE0sQ0FBbU0wQyxJQUFJMEIsR0FBRyxXQUFXLFNBQVMxRSxFQUFFQSxHQUFHSSxLQUFLMEwsUUFBUSxNQUFNOUwsRUFBRUEsRUFBRSxDQUFDdWdDLHNCQUFxQixFQUFHMkgsZ0JBQWUsRUFBRzVJLE9BQU8sY0FBY0QsWUFBWSxjQUFjaUIsWUFBVyxFQUFHSCxjQUFjLElBQUkvL0IsS0FBSzBMLFFBQVF1MEIsYUFBYWpnQyxLQUFLMEwsUUFBUXUwQixXQUFXLENBQUN2MUIsS0FBSyxlQUFlMEYsS0FBSyxDQUFDazBCLFNBQVMsR0FBR3BCLFNBQVMsSUFBSWhnQyxJQUFJMDhCLFVBQVMsRUFBR3FKLGlCQUFpQixTQUFTcnBDLEVBQUVNLEVBQUVPLEdBQUcsSUFBSSxJQUFJQyxFQUFFdUwsS0FBS0MsSUFBSSxHQUFHdE0sRUFBRSxHQUFHYSxFQUFFMmhDLFVBQVV6aEMsRUFBRXNMLEtBQUtHLElBQUkxTCxFQUFFRCxFQUFFMmhDLFNBQVNsaUMsRUFBRWlULFFBQVF2UyxFQUFFLEdBQUdnSCxFQUFFbEgsRUFBRWtILEVBQUVqSCxFQUFFaUgsSUFBSSxDQUFDLElBQUk5QixFQUFFNUYsRUFBRTBILEdBQUdoSCxFQUFFMFMsS0FBS3hOLEdBQUcsT0FBT2xGLEtBQUssT0FBT2hCLEVBQUVzc0MsY0FBYyxTQUFTaHNDLEdBQUcsT0FBTyxJQUFJTixFQUFFTSxJQUFJTixFQUFFRSxVQUFVcXNDLE1BQU0sV0FBVyxPQUFPLElBQUkzcUMsR0FBR3hCLEtBQUswTCxVQUFVOUwsRUFBRUUsVUFBVXNzQyxNQUFNLFNBQVN4c0MsR0FBRyxPQUFPSSxLQUFLMEwsUUFBUXd6QixPQUFPdC9CLEVBQUVJLE1BQU1KLEVBQUVFLFVBQVV1c0MsZUFBZSxTQUFTenNDLEdBQUcsT0FBT0ksS0FBSzBMLFFBQVF1ekIsWUFBWXIvQixFQUFFSSxNQUFNSixFQUFFRSxVQUFVd3NDLGtCQUFrQixTQUFTMXNDLEdBQUcsT0FBT0ksS0FBSzBMLFFBQVF1MEIsV0FBV3YxQixLQUFLOUssRUFBRUksTUFBTUosRUFBRUUsVUFBVXlzQyxTQUFTLFNBQVMzc0MsR0FBRyxZQUFPLElBQVNBLElBQUlBLEdBQUUsR0FBSUksS0FBSzBMLFFBQVF1MEIsV0FBV0wsU0FBU2hnQyxFQUFFSSxNQUFNSixFQUFFRSxVQUFVMHNDLFdBQVcsU0FBUzVzQyxHQUFHLFlBQU8sSUFBU0EsSUFBSUEsR0FBRSxHQUFJSSxLQUFLMEwsUUFBUXcwQixXQUFXdGdDLEVBQUVJLE1BQU1KLEVBQUVFLFVBQVUyc0MsZUFBZSxTQUFTN3NDLEdBQUcsWUFBTyxJQUFTQSxJQUFJQSxHQUFFLEdBQUlJLEtBQUswTCxRQUFRbzhCLGVBQWVsb0MsRUFBRUksTUFBTUosRUFBRUUsVUFBVTRzQyxxQkFBcUIsU0FBUzlzQyxHQUFHLFlBQU8sSUFBU0EsSUFBSUEsR0FBRSxHQUFJSSxLQUFLMEwsUUFBUXkwQixxQkFBcUJ2Z0MsRUFBRUksTUFBTUosRUFBRUUsVUFBVTZzQyxvQkFBb0IsU0FBUy9zQyxHQUFHLE9BQU9JLEtBQUswTCxRQUFRdTBCLFdBQVdKLElBQUlqZ0MsRUFBRUksTUFBTUosRUFBRUUsVUFBVThzQywyQkFBMkIsU0FBU2h0QyxHQUFHLE9BQU9JLEtBQUswTCxRQUFRdTBCLFdBQVdnSixpQkFBaUJycEMsRUFBRUksTUFBTUosRUFBRUUsVUFBVStzQyxVQUFVLFNBQVNqdEMsR0FBRyxHQUFHLG1CQUFtQkEsRUFBRSxDQUFDLElBQUlNLEVBQUUsQ0FBQzI2QixlQUFlNzZCLEtBQUswTCxRQUFRdTBCLFdBQVd2MUIsS0FBS28rQixNQUFNLE9BQU9oSyxZQUFZOStCLEtBQUswTCxRQUFRdXpCLFlBQVk2QyxPQUFNLEVBQUdKLFNBQVMsUUFBUTloQyxFQUFFTSxHQUFHRixLQUFLMEwsUUFBUXEwQixjQUFjenNCLEtBQUtwVCxRQUFRRixLQUFLMEwsUUFBUXEwQixjQUFjenNCLEtBQUsxVCxHQUFHLE9BQU9JLE1BQU1KLEVBQUVFLFVBQVVndEMsWUFBWSxTQUFTbHRDLEdBQUcsT0FBT0EsRUFBRUksS0FBSzBMLFFBQVF1MEIsV0FBVzd2QixNQUFNcFEsTUFBTUosRUFBbHRELElBQXIxeEksR0FBZ2oxSWMsR0FBcnAzSSwwR0NHOU5xc0MsRUFBZ0MsSUFBSUMsSUFBSSxZQUN4Q0MsRUFBZ0MsSUFBSUQsSUFBSSxZQUN4Q0UsRUFBZ0MsSUFBSUYsSUFBSSxZQUN4Q0csRUFBMEIsSUFBNEIsS0FDdERDLEVBQXFDLElBQWdDTCxHQUNyRU0sRUFBcUMsSUFBZ0NKLEdBQ3JFSyxFQUFxQyxJQUFnQ0osR0FFekVDLEVBQXdCNzVCLEtBQUssQ0FBQzlULEVBQU93OUIsR0FBSSw2ckJBQStyQm9RLEVBQXFDLDRGQUE4RkMsRUFBcUMsd0ZBQTBGQyxFQUFxQyw0M0VBQTYzRSxHQUFHLENBQUMsUUFBVSxFQUFFLFFBQVUsQ0FBQyx1Q0FBdUMsTUFBUSxHQUFHLFNBQVcsMG5DQUEwbkMsZUFBaUIsQ0FBQyx5eUdBQXl5RyxXQUFhLE1BRXQ2UCxnQ0NSQTl0QyxFQUFPRCxRQUFVLFNBQVVndUMsR0FDekIsSUFBSUMsRUFBTyxHQTZGWCxPQTNGQUEsRUFBS3ZqQyxTQUFXLFdBQ2QsT0FBT2pLLEtBQUtrVixLQUFJLFNBQVV1NEIsR0FDeEIsSUFBSTlhLEVBQVUsR0FDVithLE9BQStCLElBQVpELEVBQUssR0E0QjVCLE9BMUJJQSxFQUFLLEtBQ1A5YSxHQUFXLGNBQWMvb0IsT0FBTzZqQyxFQUFLLEdBQUksUUFHdkNBLEVBQUssS0FDUDlhLEdBQVcsVUFBVS9vQixPQUFPNmpDLEVBQUssR0FBSSxPQUduQ0MsSUFDRi9hLEdBQVcsU0FBUy9vQixPQUFPNmpDLEVBQUssR0FBR3Q2QixPQUFTLEVBQUksSUFBSXZKLE9BQU82akMsRUFBSyxJQUFNLEdBQUksT0FHNUU5YSxHQUFXNGEsRUFBdUJFLEdBRTlCQyxJQUNGL2EsR0FBVyxLQUdUOGEsRUFBSyxLQUNQOWEsR0FBVyxLQUdUOGEsRUFBSyxLQUNQOWEsR0FBVyxLQUdOQSxLQUNObFUsS0FBSyxLQUlWK3VCLEVBQUs3c0MsRUFBSSxTQUFXZ3RDLEVBQVNDLEVBQU9DLEVBQVFDLEVBQVVDLEdBQzdCLGlCQUFaSixJQUNUQSxFQUFVLENBQUMsQ0FBQyxLQUFNQSxPQUFTSyxLQUc3QixJQUFJQyxFQUF5QixHQUU3QixHQUFJSixFQUNGLElBQUssSUFBSTFoQyxFQUFJLEVBQUdBLEVBQUluTSxLQUFLbVQsT0FBUWhILElBQUssQ0FDcEMsSUFBSTZ3QixFQUFLaDlCLEtBQUttTSxHQUFHLEdBRVAsTUFBTjZ3QixJQUNGaVIsRUFBdUJqUixJQUFNLEdBS25DLElBQUssSUFBSWtSLEVBQUssRUFBR0EsRUFBS1AsRUFBUXg2QixPQUFRKzZCLElBQU0sQ0FDMUMsSUFBSVQsRUFBTyxHQUFHN2pDLE9BQU8rakMsRUFBUU8sSUFFekJMLEdBQVVJLEVBQXVCUixFQUFLLFdBSXJCLElBQVZNLFNBQ2MsSUFBWk4sRUFBSyxLQUdkQSxFQUFLLEdBQUssU0FBUzdqQyxPQUFPNmpDLEVBQUssR0FBR3Q2QixPQUFTLEVBQUksSUFBSXZKLE9BQU82akMsRUFBSyxJQUFNLEdBQUksTUFBTTdqQyxPQUFPNmpDLEVBQUssR0FBSSxNQUYvRkEsRUFBSyxHQUFLTSxHQU9WSCxJQUNHSCxFQUFLLElBR1JBLEVBQUssR0FBSyxVQUFVN2pDLE9BQU82akMsRUFBSyxHQUFJLE1BQU03akMsT0FBTzZqQyxFQUFLLEdBQUksS0FDMURBLEVBQUssR0FBS0csR0FIVkgsRUFBSyxHQUFLRyxHQU9WRSxJQUNHTCxFQUFLLElBR1JBLEVBQUssR0FBSyxjQUFjN2pDLE9BQU82akMsRUFBSyxHQUFJLE9BQU83akMsT0FBTzZqQyxFQUFLLEdBQUksS0FDL0RBLEVBQUssR0FBS0ssR0FIVkwsRUFBSyxHQUFLLEdBQUc3akMsT0FBT2trQyxJQU94Qk4sRUFBS2w2QixLQUFLbTZCLE1BSVBELHlCQ2xHVGh1QyxFQUFPRCxRQUFVLFNBQVVzZ0MsRUFBS24wQixHQUs5QixPQUpLQSxJQUNIQSxFQUFVLElBR1BtMEIsR0FJTEEsRUFBTWhnQyxPQUFPZ2dDLEVBQUlzTyxXQUFhdE8sRUFBSXVPLFFBQVV2TyxHQUV4QyxlQUFlanVCLEtBQUtpdUIsS0FDdEJBLEVBQU1BLEVBQUluc0IsTUFBTSxHQUFJLElBR2xCaEksRUFBUTJpQyxPQUNWeE8sR0FBT24wQixFQUFRMmlDLE1BS2Isb0JBQW9CejhCLEtBQUtpdUIsSUFBUW4wQixFQUFRNGlDLFdBQ3BDLElBQUsxa0MsT0FBT2kyQixFQUFJNS9CLFFBQVEsS0FBTSxPQUFPQSxRQUFRLE1BQU8sT0FBUSxLQUc5RDQvQixHQW5CRUEseUJDTlhyZ0MsRUFBT0QsUUFBVSxTQUFVa3VDLEdBQ3pCLElBQUk5YSxFQUFVOGEsRUFBSyxHQUNmYyxFQUFhZCxFQUFLLEdBRXRCLElBQUtjLEVBQ0gsT0FBTzViLEVBR1QsR0FBb0IsbUJBQVQ2YixLQUFxQixDQUM5QixJQUFJQyxFQUFTRCxLQUFLRSxTQUFTclcsbUJBQW1CRSxLQUFLRyxVQUFVNlYsTUFDekRuK0IsRUFBTywrREFBK0R4RyxPQUFPNmtDLEdBQzdFRSxFQUFnQixPQUFPL2tDLE9BQU93RyxFQUFNLE9BQ3BDdytCLEVBQWFMLEVBQVdNLFFBQVEzNUIsS0FBSSxTQUFVNDVCLEdBQ2hELE1BQU8saUJBQWlCbGxDLE9BQU8ya0MsRUFBV1EsWUFBYyxJQUFJbmxDLE9BQU9rbEMsRUFBUSxVQUU3RSxNQUFPLENBQUNuYyxHQUFTL29CLE9BQU9nbEMsR0FBWWhsQyxPQUFPLENBQUMra0MsSUFBZ0Jsd0IsS0FBSyxNQUduRSxNQUFPLENBQUNrVSxHQUFTbFUsS0FBSyw2QkNsQnhCLElBQUl1d0IsRUFBYyxHQUVsQixTQUFTQyxFQUFxQkMsR0FHNUIsSUFGQSxJQUFJQyxHQUFVLEVBRUx4dUMsRUFBSSxFQUFHQSxFQUFJcXVDLEVBQVk3N0IsT0FBUXhTLElBQ3RDLEdBQUlxdUMsRUFBWXJ1QyxHQUFHdXVDLGFBQWVBLEVBQVksQ0FDNUNDLEVBQVN4dUMsRUFDVCxNQUlKLE9BQU93dUMsRUFHVCxTQUFTQyxFQUFhNUIsRUFBTTloQyxHQUkxQixJQUhBLElBQUkyakMsRUFBYSxHQUNiQyxFQUFjLEdBRVQzdUMsRUFBSSxFQUFHQSxFQUFJNnNDLEVBQUtyNkIsT0FBUXhTLElBQUssQ0FDcEMsSUFBSThzQyxFQUFPRCxFQUFLN3NDLEdBQ1pxOEIsRUFBS3R4QixFQUFRNmpDLEtBQU85QixFQUFLLEdBQUsvaEMsRUFBUTZqQyxLQUFPOUIsRUFBSyxHQUNsRCtCLEVBQVFILEVBQVdyUyxJQUFPLEVBQzFCa1MsRUFBYSxHQUFHdGxDLE9BQU9vekIsRUFBSSxLQUFLcHpCLE9BQU80bEMsR0FDM0NILEVBQVdyUyxHQUFNd1MsRUFBUSxFQUN6QixJQUFJQyxFQUFvQlIsRUFBcUJDLEdBQ3pDUSxFQUFNLENBQ1IvSixJQUFLOEgsRUFBSyxHQUNWRyxNQUFPSCxFQUFLLEdBQ1prQyxVQUFXbEMsRUFBSyxHQUNoQkssU0FBVUwsRUFBSyxHQUNmTSxNQUFPTixFQUFLLElBR2QsSUFBMkIsSUFBdkJnQyxFQUNGVCxFQUFZUyxHQUFtQkcsYUFDL0JaLEVBQVlTLEdBQW1CSSxRQUFRSCxPQUNsQyxDQUNMLElBQUlHLEVBQVVDLEVBQWdCSixFQUFLaGtDLEdBQ25DQSxFQUFRcWtDLFFBQVVwdkMsRUFDbEJxdUMsRUFBWXhILE9BQU83bUMsRUFBRyxFQUFHLENBQ3ZCdXVDLFdBQVlBLEVBQ1pXLFFBQVNBLEVBQ1RELFdBQVksSUFJaEJOLEVBQVloOEIsS0FBSzQ3QixHQUduQixPQUFPSSxFQUdULFNBQVNRLEVBQWdCSixFQUFLaGtDLEdBQzVCLElBQUlza0MsRUFBTXRrQyxFQUFRdWtDLE9BQU92a0MsR0FlekIsT0FkQXNrQyxFQUFJcC9CLE9BQU84K0IsR0FFRyxTQUFpQlEsR0FDN0IsR0FBSUEsRUFBUSxDQUNWLEdBQUlBLEVBQU92SyxNQUFRK0osRUFBSS9KLEtBQU91SyxFQUFPdEMsUUFBVThCLEVBQUk5QixPQUFTc0MsRUFBT1AsWUFBY0QsRUFBSUMsV0FBYU8sRUFBT3BDLFdBQWE0QixFQUFJNUIsVUFBWW9DLEVBQU9uQyxRQUFVMkIsRUFBSTNCLE1BQ3pKLE9BR0ZpQyxFQUFJcC9CLE9BQU84K0IsRUFBTVEsUUFFakJGLEVBQUluMEIsVUFPVnJjLEVBQU9ELFFBQVUsU0FBVWl1QyxFQUFNOWhDLEdBRy9CLElBQUl5a0MsRUFBa0JmLEVBRHRCNUIsRUFBT0EsR0FBUSxHQURmOWhDLEVBQVVBLEdBQVcsSUFHckIsT0FBTyxTQUFnQjBrQyxHQUNyQkEsRUFBVUEsR0FBVyxHQUVyQixJQUFLLElBQUl6dkMsRUFBSSxFQUFHQSxFQUFJd3ZDLEVBQWdCaDlCLE9BQVF4UyxJQUFLLENBQy9DLElBQ0kwdkMsRUFBUXBCLEVBREtrQixFQUFnQnh2QyxJQUVqQ3F1QyxFQUFZcUIsR0FBT1QsYUFLckIsSUFGQSxJQUFJVSxFQUFxQmxCLEVBQWFnQixFQUFTMWtDLEdBRXRDNDNCLEVBQUssRUFBR0EsRUFBSzZNLEVBQWdCaDlCLE9BQVFtd0IsSUFBTSxDQUNsRCxJQUVJaU4sRUFBU3RCLEVBRktrQixFQUFnQjdNLElBSUssSUFBbkMwTCxFQUFZdUIsR0FBUVgsYUFDdEJaLEVBQVl1QixHQUFRVixVQUVwQmIsRUFBWXhILE9BQU8rSSxFQUFRLElBSS9CSixFQUFrQkcsMEJDbkd0QixJQUFJRSxFQUFPLEdBb0NYaHhDLEVBQU9ELFFBVlAsU0FBMEJreEMsRUFBUXBsQyxHQUNoQyxJQUFJcU4sRUF4Qk4sU0FBbUJBLEdBQ2pCLFFBQTRCLElBQWpCODNCLEVBQUs5M0IsR0FBeUIsQ0FDdkMsSUFBSWc0QixFQUFjOWlDLFNBQVMwQixjQUFjb0osR0FFekMsR0FBSTFPLE9BQU8ybUMsbUJBQXFCRCxhQUF1QjFtQyxPQUFPMm1DLGtCQUM1RCxJQUdFRCxFQUFjQSxFQUFZRSxnQkFBZ0JqSixLQUMxQyxNQUFPem5DLEdBRVB3d0MsRUFBYyxLQUlsQkYsRUFBSzkzQixHQUFVZzRCLEVBR2pCLE9BQU9GLEVBQUs5M0IsR0FNQ200QixDQUFVSixHQUV2QixJQUFLLzNCLEVBQ0gsTUFBTSxJQUFJZ0UsTUFBTSwyR0FHbEJoRSxFQUFPc2UsWUFBWTNyQiwwQkN6QnJCN0wsRUFBT0QsUUFQUCxTQUE0Qm1NLEdBQzFCLElBQUkyRCxFQUFVekIsU0FBU3VhLGNBQWMsU0FHckMsT0FGQXpjLEVBQVFvbEMsY0FBY3poQyxFQUFTM0QsRUFBUVAsWUFDdkNPLEVBQVEra0MsT0FBT3BoQyxFQUFTM0QsRUFBUUEsU0FDekIyRCwrQkNJVDdQLEVBQU9ELFFBUlAsU0FBd0N3eEMsR0FDdEMsSUFBSUMsRUFBbUQsS0FFbkRBLEdBQ0ZELEVBQWF4bEMsYUFBYSxRQUFTeWxDLDBCQzhEdkN4eEMsRUFBT0QsUUFaUCxTQUFnQm1NLEdBQ2QsSUFBSXFsQyxFQUFlcmxDLEVBQVF1bEMsbUJBQW1CdmxDLEdBQzlDLE1BQU8sQ0FDTGtGLE9BQVEsU0FBZ0I4K0IsSUF6RDVCLFNBQWVxQixFQUFjcmxDLEVBQVNna0MsR0FDcEMsSUFBSS9KLEVBQU0sR0FFTitKLEVBQUk1QixXQUNObkksR0FBTyxjQUFjLzdCLE9BQU84bEMsRUFBSTVCLFNBQVUsUUFHeEM0QixFQUFJOUIsUUFDTmpJLEdBQU8sVUFBVS83QixPQUFPOGxDLEVBQUk5QixNQUFPLE9BR3JDLElBQUlGLE9BQWlDLElBQWRnQyxFQUFJM0IsTUFFdkJMLElBQ0YvSCxHQUFPLFNBQVMvN0IsT0FBTzhsQyxFQUFJM0IsTUFBTTU2QixPQUFTLEVBQUksSUFBSXZKLE9BQU84bEMsRUFBSTNCLE9BQVMsR0FBSSxPQUc1RXBJLEdBQU8rSixFQUFJL0osSUFFUCtILElBQ0YvSCxHQUFPLEtBR0wrSixFQUFJOUIsUUFDTmpJLEdBQU8sS0FHTCtKLEVBQUk1QixXQUNObkksR0FBTyxLQUdULElBQUlnSyxFQUFZRCxFQUFJQyxVQUVoQkEsR0FBNkIsb0JBQVRuQixPQUN0QjdJLEdBQU8sdURBQXVELzdCLE9BQU80a0MsS0FBS0UsU0FBU3JXLG1CQUFtQkUsS0FBS0csVUFBVWlYLE1BQWUsUUFNdElqa0MsRUFBUXdsQyxrQkFBa0J2TCxFQUFLb0wsRUFBY3JsQyxFQUFRQSxTQWtCakQ2TyxDQUFNdzJCLEVBQWNybEMsRUFBU2drQyxJQUUvQjd6QixPQUFRLFlBakJaLFNBQTRCazFCLEdBRTFCLEdBQWdDLE9BQTVCQSxFQUFhMWpDLFdBQ2YsT0FBTyxFQUdUMGpDLEVBQWExakMsV0FBV29wQixZQUFZc2EsR0FZaENJLENBQW1CSiw0QkNqRHpCdnhDLEVBQU9ELFFBWlAsU0FBMkJvbUMsRUFBS29MLEdBQzlCLEdBQUlBLEVBQWFLLFdBQ2ZMLEVBQWFLLFdBQVdDLFFBQVUxTCxNQUM3QixDQUNMLEtBQU9vTCxFQUFhTyxZQUNsQlAsRUFBYXRhLFlBQVlzYSxFQUFhTyxZQUd4Q1AsRUFBYS9aLFlBQVlwcEIsU0FBUzJqQyxlQUFlNUwsdU5DVmpENkwsRUFBMkIsR0FHL0IsU0FBU0MsRUFBb0JDLEdBRTVCLElBQUlDLEVBQWVILEVBQXlCRSxHQUM1QyxRQUFxQjFELElBQWpCMkQsRUFDSCxPQUFPQSxFQUFhcHlDLFFBR3JCLElBQUlDLEVBQVNneUMsRUFBeUJFLEdBQVksQ0FDakQxVSxHQUFJMFUsRUFFSm55QyxRQUFTLElBT1YsT0FIQXF5QyxFQUFvQkYsR0FBVWx5QyxFQUFRQSxFQUFPRCxRQUFTa3lDLEdBRy9DanlDLEVBQU9ELFFBSWZreUMsRUFBb0Jub0MsRUFBSXNvQyxFQ3hCeEJILEVBQW9CaHhDLEVBQUtqQixJQUN4QixJQUFJcXlDLEVBQVNyeUMsR0FBVUEsRUFBTzJ1QyxXQUM3QixJQUFPM3VDLEVBQWlCLFFBQ3hCLElBQU0sRUFFUCxPQURBaXlDLEVBQW9CNXdDLEVBQUVneEMsRUFBUSxDQUFFL3JDLEVBQUcrckMsSUFDNUJBLEdDTFJKLEVBQW9CNXdDLEVBQUksQ0FBQ3RCLEVBQVN1eUMsS0FDakMsSUFBSSxJQUFJNXZCLEtBQU80dkIsRUFDWEwsRUFBb0Ivd0MsRUFBRW94QyxFQUFZNXZCLEtBQVN1dkIsRUFBb0Ivd0MsRUFBRW5CLEVBQVMyaUIsSUFDNUVwaEIsT0FBT0MsZUFBZXhCLEVBQVMyaUIsRUFBSyxDQUFFbGhCLFlBQVksRUFBTUMsSUFBSzZ3QyxFQUFXNXZCLE1DSjNFdXZCLEVBQW9CL3dDLEVBQUksQ0FBQ2d2QyxFQUFLdlosSUFBVXIxQixPQUFPaEIsVUFBVW9CLGVBQWVDLEtBQUt1dUMsRUFBS3ZaLEdDQ2xGc2IsRUFBb0I3d0MsRUFBS3JCLElBQ0gsb0JBQVg2QixRQUEwQkEsT0FBT0MsYUFDMUNQLE9BQU9DLGVBQWV4QixFQUFTNkIsT0FBT0MsWUFBYSxDQUFFQyxNQUFPLFdBRTdEUixPQUFPQyxlQUFleEIsRUFBUyxhQUFjLENBQUUrQixPQUFPLEtDTHZEbXdDLEVBQW9Cam9DLEVBQUksSUNBeEJpb0MsRUFBb0J2ckMsRUFBSTBILFNBQVNta0MsU0FBV3B5QyxLQUFLcXlDLFNBQVN6Tyx1TUNXdEQ3M0IsRUFBVSxHQUVkQSxFQUFRd2xDLGtCQUFvQixJQUM1QnhsQyxFQUFRb2xDLGNBQWdCLElBRWxCcGxDLEVBQVEra0MsT0FBUyxTQUFjLEtBQU0sUUFFM0Mva0MsRUFBUXVrQyxPQUFTLElBQ2pCdmtDLEVBQVF1bEMsbUJBQXFCLElBRWhCLElBQUksSUFBU3ZsQyxHQUtKLEtBQVcsWUFBaUIsd0JDeEJsRCwyQkFzSEEsT0FySFcsRUFBQXVtQyxJQUFQLFNBQVdoVCxFQUFxQnFGLEdBQzVCNW9CLFFBQVFnZixJQUFJLHdCQUVaLElBMEVJd1gsRUExRVUsRUFBQTd0QyxnQkFBQSxnQkFFVGlvQyxrQkFBa0IsaUJBQ2xCRixNQUFNLGlCQUNOQyxlQUFlcE4sR0FDZnNOLFVBQVMsR0FDVEkscUJBQW9CLFNBQUF3RixHQUFRLHFEQUFpREEsS0FDN0V6RixzQkFBcUIsR0FDckJGLFlBQVcsR0FDWEMsZ0JBQWUsR0FDZkssYUFBWSxTQUFBc0YsR0FDVEEsRUFBTzlOLFNBQVdBLEVBQVNsMEIsS0FDM0JnaUMsRUFBT2xQLFNBQVdvQixFQUFTcEIsWUFFOUIySixXQUFVLFNBQUEvZSxHQUNQQSxFQUFJeVQsWUFBYyxXQUNsQnpULEVBQUkyVCxTQUFXLFVBQ2YzVCxFQUFJZ2IsTUFBUSxPQUNaaGIsRUFBSTRULFNBQVcsU0FDZjVULEVBQUlnVSxPQUFRLEtBRWYrSyxXQUFVLFNBQUEvZSxHQUlQQSxFQUFJeVQsWUFBYyxhQUNsQnpULEVBQUkyVCxTQUFXLGNBQ2YzVCxFQUFJZ2IsTUFBUSxPQUNaaGIsRUFBSTRULFNBQVcsV0FDZjVULEVBQUk4VCxlQUFpQixTQUFDdVEsR0FBVyxNQUFPLG9EQUE2Q0EsSUFDckZya0IsRUFBSStULGFBQWUsQ0FDZixDQUFFTixZQUFhLGFBQWNHLFNBQVUsT0FBUW9ILE1BQU8sT0FBUXJILFNBQVUsS0FBTUssT0FBTyxHQUNyRixDQUFFUCxZQUFhLGNBQWVHLFNBQVUsT0FBUW9ILE1BQU8sUUFBU3JILFNBQVUsWUFHakZvTCxXQUFVLFNBQUEvZSxHQUNQQSxFQUFJeVQsWUFBYyxjQUNsQnpULEVBQUkyVCxTQUFXLE9BQ2YzVCxFQUFJZ2IsTUFBUSxRQUNaaGIsRUFBSTRULFNBQVcsVUFFbEJtTCxXQUFVLFNBQUEvZSxHQUlQQSxFQUFJeVQsWUFBYyxrQkFDbEJ6VCxFQUFJMlQsU0FBVyxNQUNmM1QsRUFBSWdiLE1BQVEsUUFDWmhiLEVBQUk0VCxTQUFXLFNBQ2Y1VCxFQUFJNlQsV0FBYSxDQUNiLENBQUU3RCxLQUFNLE9BQVF4OEIsTUFBTyxNQUN2QixDQUFFdzhCLEtBQU0sUUFBU3g4QixNQUFPLE1BQ3hCLENBQUV3OEIsS0FBTSxRQUFTeDhCLE1BQU8sV0FHL0J1ckMsV0FBVSxTQUFBL2UsR0FDUEEsRUFBSXlULFlBQWMsV0FDbEJ6VCxFQUFJMlQsU0FBVyxNQUNmM1QsRUFBSWdiLE1BQVEsT0FDWmhiLEVBQUk0VCxTQUFXLFlBRWxCbUwsV0FBVSxTQUFBL2UsR0FDUEEsRUFBSXlULFlBQWMsWUFDbEJ6VCxFQUFJMlQsU0FBVyxPQUNmM1QsRUFBSWdiLE1BQVEsUUFDWmhiLEVBQUk0VCxTQUFXLFlBRWxCbUwsV0FBVSxTQUFBL2UsR0FDUEEsRUFBSXlULFlBQWMsT0FDbEJ6VCxFQUFJMlQsU0FBVyxVQUNmM1QsRUFBSWdiLE1BQVEsUUFDWmhiLEVBQUk0VCxTQUFXLFlBR0N5SyxRQUN4QitGLEVBQVU5UixvQkFPVjhSLEVBQVVsUixXQUFXLEVBQUFuOEIsY0FBQSxrQkFBZ0MsU0FBQ3d0QyxFQUFRbnlDLEdBRTFELElBQUlveUMsRUFBS3B5QyxFQUNULEdBQUtveUMsRUFBTCxDQUNBLElBQUlDLEVBQVFELEVBQUczWCxVQUFVNE8sTUFDekIsR0FBS2dKLEVBQUwsQ0FFQSxJQUFJQyxFQUFZRCxFQUFNN21DLFFBQVF3eEIsVUFDMUJ1VixFQUFNSCxFQUFHM1gsVUFBVTJPLElBRUwsUUFBZGtKLEdBQXFDLFNBQWRBLElBQ3ZCQyxFQUFJQyxRQUFRbFYsSUFBTWlWLEVBQUlFLElBQUluVixJQUFNaVYsRUFBSUcsS0FBS3BWLFVBS2pEMFUsRUFBVTVSLFNBS1Y0UixFQUFVM1IsWUFBWTJFLFVBQVUsVUFBVyxVQUFXLFFBQVEsU0FBQ2hsQyxHQUMzRHdiLFFBQVFnZixJQUFJLHlCQUNaLElBQUltWSxFQUFVWCxFQUFVWSxXQUN4QnAzQixRQUFRZ2YsSUFBSSxnQkFDWmhmLFFBQVFxM0IsTUFBTUYsR0FFZG4zQixRQUFRZ2YsSUFBSSxlQUNaaGYsUUFBUXEzQixNQUFNYixFQUFVMVYsa0JBSXBDLEVBdEhBLEdDQUEsMkJBMERBLE9BeERXLEVBQUF5VixJQUFQLFdBZ0JJLElBWEEsSUFBSWUsRUFBZSxFQUFBM3VDLGdCQUFBLGdCQUNkaW9DLGtCQUFrQixhQUNsQkYsTUFBTSxRQUNOQyxlQUFlLHVCQUNmRyxZQUFXLEdBQ1hELFVBQVMsR0FDVEcsc0JBQXFCLEdBQ3JCRCxnQkFBZSxjQUlYOXJDLEdBQ0xxeUMsRUFBYW5HLFdBQVUsU0FBQS9lLEdBQ25CQSxFQUFJeVQsWUFBYyxPQUFTNWdDLEVBQzNCbXRCLEVBQUkyVCxTQUFXLE9BQVM5Z0MsRUFDeEJtdEIsRUFBSWdiLE1BQVEsUUFDWmhiLEVBQUk0VCxTQUFXLFdBTGQvZ0MsRUFBSSxFQUFHQSxFQURGLEVBQ2VBLE1BQXBCQSxHQVVUcXlDLEVBQWFsRyxhQUFZLFNBQUFzRixHQUNyQixJQUFLLElBQUl6eEMsRUFBSSxFQUFHQSxFQVpPLEdBWU1BLElBQUssQ0FHOUIsSUFEQSxJQUFJc3lDLEVBQVMsR0FDSjVtQyxFQUFJLEVBQUdBLEVBZlYsRUFldUJBLElBQ3pCNG1DLEVBQU8sT0FBUzVtQyxHQUFLLFFBQVUxTCxFQUFJLElBQU0wTCxFQUU3QytsQyxFQUFPOU4sU0FBU2h4QixLQUFLMi9CLEdBRXpCYixFQUFPbFAsU0FBVyxJQUFJLEVBQUFqZ0MsMEJBQTBCLEVBQUcsR0FwQjVCLE9Bd0IzQixJQUFJOHZDLEVBQVFDLEVBQ1A3RyxRQUNBL0wsb0JBQ0FFLFNBR0x5UyxFQUFNeFMsWUFBWTJFLFVBQVUsVUFBVyxVQUFXLFFBQVEsU0FBQ2hsQyxHQUN2RHdiLFFBQVFnZixJQUFJLHlCQUNaLElBQUltWSxFQUFVRSxFQUFNRCxXQUNwQnAzQixRQUFRZ2YsSUFBSSxnQkFDWmhmLFFBQVFxM0IsTUFBTUYsR0FFZG4zQixRQUFRZ2YsSUFBSSxlQUNaaGYsUUFBUXEzQixNQUFNQSxFQUFNdlcsa0JBSWhDLEVBMURBLEdDR0EsMkJBU0EsT0FQVyxFQUFBMFcsY0FBUCxXQUNJQyxFQUFXbEIsT0FHUixFQUFBbUIsZUFBUCxTQUFzQm5VLEVBQXFCcUYsR0FDdkMrTyxFQUFZcEIsSUFBSWhULEVBQWFxRixJQUVyQyxFQVRBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYnNfZHRfZGVtby93ZWJwYWNrL3VuaXZlcnNhbE1vZHVsZURlZmluaXRpb24iLCJ3ZWJwYWNrOi8vYnNfZHRfZGVtby8uL25vZGVfbW9kdWxlcy9icy1kYXRhdGFibGUvZGlzdC9ic2RhdGF0YWJsZS5qcyIsIndlYnBhY2s6Ly9ic19kdF9kZW1vLy4vYXBwLWNsaWVudC9jc3Mvc2l0ZS5jc3MiLCJ3ZWJwYWNrOi8vYnNfZHRfZGVtby8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vYnNfZHRfZGVtby8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9nZXRVcmwuanMiLCJ3ZWJwYWNrOi8vYnNfZHRfZGVtby8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzIiwid2VicGFjazovL2JzX2R0X2RlbW8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vYnNfZHRfZGVtby8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vYnNfZHRfZGVtby8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly9ic19kdF9kZW1vLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzIiwid2VicGFjazovL2JzX2R0X2RlbW8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcyIsIndlYnBhY2s6Ly9ic19kdF9kZW1vLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vYnNfZHRfZGVtby93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9ic19kdF9kZW1vL3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL2JzX2R0X2RlbW8vd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL2JzX2R0X2RlbW8vd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly9ic19kdF9kZW1vL3dlYnBhY2svcnVudGltZS9tYWtlIG5hbWVzcGFjZSBvYmplY3QiLCJ3ZWJwYWNrOi8vYnNfZHRfZGVtby93ZWJwYWNrL3J1bnRpbWUvcHVibGljUGF0aCIsIndlYnBhY2s6Ly9ic19kdF9kZW1vL3dlYnBhY2svcnVudGltZS9qc29ucCBjaHVuayBsb2FkaW5nIiwid2VicGFjazovL2JzX2R0X2RlbW8vLi9hcHAtY2xpZW50L2Nzcy9zaXRlLmNzcz9lNjhhIiwid2VicGFjazovL2JzX2R0X2RlbW8vLi9hcHAtY2xpZW50L2R5bmFtaWMtZGVtby50cyIsIndlYnBhY2s6Ly9ic19kdF9kZW1vLy4vYXBwLWNsaWVudC9zdGF0aWMtZGVtby50cyIsIndlYnBhY2s6Ly9ic19kdF9kZW1vLy4vYXBwLWNsaWVudC9pbmRleC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gd2VicGFja1VuaXZlcnNhbE1vZHVsZURlZmluaXRpb24ocm9vdCwgZmFjdG9yeSkge1xuXHRpZih0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIG1vZHVsZSA9PT0gJ29iamVjdCcpXG5cdFx0bW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KCk7XG5cdGVsc2UgaWYodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKVxuXHRcdGRlZmluZShbXSwgZmFjdG9yeSk7XG5cdGVsc2UgaWYodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnKVxuXHRcdGV4cG9ydHNbXCJic19kdF9kZW1vXCJdID0gZmFjdG9yeSgpO1xuXHRlbHNlXG5cdFx0cm9vdFtcImJzX2R0X2RlbW9cIl0gPSBmYWN0b3J5KCk7XG59KShzZWxmLCBmdW5jdGlvbigpIHtcbnJldHVybiAiLCIvKiEgRm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24gcGxlYXNlIHNlZSBic2RhdGF0YWJsZS5qcy5MSUNFTlNFLnR4dCAqL1xuIWZ1bmN0aW9uKHQsZSl7XCJvYmplY3RcIj09dHlwZW9mIGV4cG9ydHMmJlwib2JqZWN0XCI9PXR5cGVvZiBtb2R1bGU/bW9kdWxlLmV4cG9ydHM9ZSgpOlwiZnVuY3Rpb25cIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoW10sZSk6XCJvYmplY3RcIj09dHlwZW9mIGV4cG9ydHM/ZXhwb3J0cy5ic2RhdGF0YWJsZT1lKCk6dC5ic2RhdGF0YWJsZT1lKCl9KHNlbGYsKGZ1bmN0aW9uKCl7cmV0dXJuKCgpPT57dmFyIHQ9ezY2MTooKT0+e1N0cmluZy5wcm90b3R5cGUudG9DYW1hbENhc2U9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5yZXBsYWNlKC8oPzpeXFx3fFtBLVpdfFxcYlxcdykvZywoZnVuY3Rpb24odCxlKXtyZXR1cm4gMD09PWU/dC50b0xvd2VyQ2FzZSgpOnQudG9VcHBlckNhc2UoKX0pKS5yZXBsYWNlKC9cXHMrL2csXCJcIil9LFN0cmluZy5wcm90b3R5cGUudG9QYXNjYWxDYXNlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucmVwbGFjZSgvKD86Xlxcd3xbQS1aXXxcXGJcXHcpL2csKGZ1bmN0aW9uKHQsZSl7cmV0dXJuIDA9PT1lP3QudG9VcHBlckNhc2UoKTp0LnRvTG93ZXJDYXNlKCl9KSkucmVwbGFjZSgvXFxzKy9nLFwiXCIpfSxTdHJpbmcucHJvdG90eXBlLnRvUGFzY2FsQ2FzZUpzb249ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5yZXBsYWNlKC8oPzpeXFx3fFtBLVpdfFxcYlxcdykvZywoZnVuY3Rpb24odCxlKXtyZXR1cm4gMD09PWU/dC50b1VwcGVyQ2FzZSgpOnR9KSkucmVwbGFjZSgvXFxzKy9nLFwiXCIpfSxTdHJpbmcucHJvdG90eXBlLmZvcm1hdHx8KFN0cmluZy5wcm90b3R5cGUuZm9ybWF0PWZ1bmN0aW9uKCl7dmFyIHQ9YXJndW1lbnRzO3JldHVybiB0aGlzLnJlcGxhY2UoL3soXFxkKyl9L2csKGZ1bmN0aW9uKGUsbil7cmV0dXJuIHZvaWQgMCE9PXRbbl0/dFtuXTplfSkpfSl9fSxlPXt9O2Z1bmN0aW9uIG4obyl7dmFyIGk9ZVtvXTtpZih2b2lkIDAhPT1pKXJldHVybiBpLmV4cG9ydHM7dmFyIHI9ZVtvXT17ZXhwb3J0czp7fX07cmV0dXJuIHRbb10ocixyLmV4cG9ydHMsbiksci5leHBvcnRzfW4uZD0odCxlKT0+e2Zvcih2YXIgbyBpbiBlKW4ubyhlLG8pJiYhbi5vKHQsbykmJk9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LG8se2VudW1lcmFibGU6ITAsZ2V0OmVbb119KX0sbi5vPSh0LGUpPT5PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodCxlKSxuLnI9dD0+e1widW5kZWZpbmVkXCIhPXR5cGVvZiBTeW1ib2wmJlN5bWJvbC50b1N0cmluZ1RhZyYmT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsU3ltYm9sLnRvU3RyaW5nVGFnLHt2YWx1ZTpcIk1vZHVsZVwifSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSl9O3ZhciBvPXt9O3JldHVybigoKT0+e1widXNlIHN0cmljdFwiO24ucihvKSxuLmQobyx7QlNEYXRhVGFibGU6KCk9PmppLEJTRGF0YVRhYmxlQWN0aW9uczooKT0+Q2ksQlNEYXRhVGFibGVCYXNlOigpPT5HbyxCU0RhdGFUYWJsZUJvZHk6KCk9PkxpLEJTRGF0YVRhYmxlQnV0dG9uOigpPT5yaSxCU0RhdGFUYWJsZUNlbGw6KCk9PnBpLEJTRGF0YVRhYmxlQ2hlY2tCb3g6KCk9PlFvLEJTRGF0YVRhYmxlSGVhZGVyOigpPT5BaSxCU0RhdGFUYWJsZUh0dHBDbGllbnQ6KCk9Pm1pLEJTRGF0YVRhYmxlSW5maW5pdGVTY3JvbGw6KCk9PkVpLEJTRGF0YVRhYmxlSW5wdXQ6KCk9PlhvLEJTRGF0YVRhYmxlTWFya2VyOigpPT5PaSxCU0RhdGFUYWJsZVBhZ2luYXRpb246KCk9PnlpLEJTRGF0YVRhYmxlUGFnaW5nTWV0YURhdGE6KCk9PmhpLEJTRGF0YVRhYmxlUm93OigpPT5UaSxCU0RhdGFUYWJsZVJvd0NvbGxlY3Rpb246KCk9Pk5pLEJTRGF0YVRhYmxlU2VsZWN0OigpPT5laSxCU0RhdGFUYWJsZVNlbGVjdE9wdGlvbjooKT0+Wm8sQlNEYXRhVGFibGVTZWxlY3RvcjooKT0+bGksQlNEYXRhVGFibGVTZWxlY3RvcldpbmRvdzooKT0+YWksQlNEYXRhVGFibGVTZWxlY3RvcldpbmRvd0NvbGxlY3Rpb246KCk9Pk1pLEJTRGF0YVRhYmxlVGV4dElucHV0OigpPT5vaSxCU0RhdGFUYWJsZVRleHRJbnB1dEV4dDooKT0+R2ksQlNGbHVlbnRCdWlsZGVyOigpPT5XaSxDb29raWVIZWxwZXI6KCk9PkZvLFNlc3Npb25TdG9yYWdlU2VydmljZTooKT0+JG8sYXBwQWN0aW9uczooKT0+VW8sYXBwRGF0YUV2ZW50czooKT0+em8sYnNEYXRhVGFibGVEaXNjb3ZlcnlTZXJ2aWNlOigpPT5xbyxkYXRhRXZlbnRzU2VydmljZTooKT0+Vm99KTt2YXIgdD17fTtuLnIodCksbi5kKHQse2FmdGVyTWFpbjooKT0+dyxhZnRlclJlYWQ6KCk9PnksYWZ0ZXJXcml0ZTooKT0+QyxhcHBseVN0eWxlczooKT0+eCxhcnJvdzooKT0+WSxhdXRvOigpPT5hLGJhc2VQbGFjZW1lbnRzOigpPT5jLGJlZm9yZU1haW46KCk9PmIsYmVmb3JlUmVhZDooKT0+XyxiZWZvcmVXcml0ZTooKT0+Tyxib3R0b206KCk9PmksY2xpcHBpbmdQYXJlbnRzOigpPT5kLGNvbXB1dGVTdHlsZXM6KCk9PnR0LGNyZWF0ZVBvcHBlcjooKT0+TnQsY3JlYXRlUG9wcGVyQmFzZTooKT0+UnQsY3JlYXRlUG9wcGVyTGl0ZTooKT0+SXQsZGV0ZWN0T3ZlcmZsb3c6KCk9Pm10LGVuZDooKT0+dSxldmVudExpc3RlbmVyczooKT0+bnQsZmxpcDooKT0+Z3QsaGlkZTooKT0+eXQsbGVmdDooKT0+cyxtYWluOigpPT5FLG1vZGlmaWVyUGhhc2VzOigpPT5TLG9mZnNldDooKT0+YnQscGxhY2VtZW50czooKT0+Zyxwb3BwZXI6KCk9PmgscG9wcGVyR2VuZXJhdG9yOigpPT5UdCxwb3BwZXJPZmZzZXRzOigpPT5FdCxwcmV2ZW50T3ZlcmZsb3c6KCk9Pnd0LHJlYWQ6KCk9PnYscmVmZXJlbmNlOigpPT5mLHJpZ2h0OigpPT5yLHN0YXJ0OigpPT5sLHRvcDooKT0+ZSx2YXJpYXRpb25QbGFjZW1lbnRzOigpPT5tLHZpZXdwb3J0OigpPT5wLHdyaXRlOigpPT5EfSk7dmFyIGU9XCJ0b3BcIixpPVwiYm90dG9tXCIscj1cInJpZ2h0XCIscz1cImxlZnRcIixhPVwiYXV0b1wiLGM9W2UsaSxyLHNdLGw9XCJzdGFydFwiLHU9XCJlbmRcIixkPVwiY2xpcHBpbmdQYXJlbnRzXCIscD1cInZpZXdwb3J0XCIsaD1cInBvcHBlclwiLGY9XCJyZWZlcmVuY2VcIixtPWMucmVkdWNlKChmdW5jdGlvbih0LGUpe3JldHVybiB0LmNvbmNhdChbZStcIi1cIitsLGUrXCItXCIrdV0pfSksW10pLGc9W10uY29uY2F0KGMsW2FdKS5yZWR1Y2UoKGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQuY29uY2F0KFtlLGUrXCItXCIrbCxlK1wiLVwiK3VdKX0pLFtdKSxfPVwiYmVmb3JlUmVhZFwiLHY9XCJyZWFkXCIseT1cImFmdGVyUmVhZFwiLGI9XCJiZWZvcmVNYWluXCIsRT1cIm1haW5cIix3PVwiYWZ0ZXJNYWluXCIsTz1cImJlZm9yZVdyaXRlXCIsRD1cIndyaXRlXCIsQz1cImFmdGVyV3JpdGVcIixTPVtfLHYseSxiLEUsdyxPLEQsQ107ZnVuY3Rpb24gVCh0KXtyZXR1cm4gdD8odC5ub2RlTmFtZXx8XCJcIikudG9Mb3dlckNhc2UoKTpudWxsfWZ1bmN0aW9uIFIodCl7aWYobnVsbD09dClyZXR1cm4gd2luZG93O2lmKFwiW29iamVjdCBXaW5kb3ddXCIhPT10LnRvU3RyaW5nKCkpe3ZhciBlPXQub3duZXJEb2N1bWVudDtyZXR1cm4gZSYmZS5kZWZhdWx0Vmlld3x8d2luZG93fXJldHVybiB0fWZ1bmN0aW9uIE4odCl7cmV0dXJuIHQgaW5zdGFuY2VvZiBSKHQpLkVsZW1lbnR8fHQgaW5zdGFuY2VvZiBFbGVtZW50fWZ1bmN0aW9uIEkodCl7cmV0dXJuIHQgaW5zdGFuY2VvZiBSKHQpLkhUTUxFbGVtZW50fHx0IGluc3RhbmNlb2YgSFRNTEVsZW1lbnR9ZnVuY3Rpb24gQSh0KXtyZXR1cm5cInVuZGVmaW5lZFwiIT10eXBlb2YgU2hhZG93Um9vdCYmKHQgaW5zdGFuY2VvZiBSKHQpLlNoYWRvd1Jvb3R8fHQgaW5zdGFuY2VvZiBTaGFkb3dSb290KX1jb25zdCB4PXtuYW1lOlwiYXBwbHlTdHlsZXNcIixlbmFibGVkOiEwLHBoYXNlOlwid3JpdGVcIixmbjpmdW5jdGlvbih0KXt2YXIgZT10LnN0YXRlO09iamVjdC5rZXlzKGUuZWxlbWVudHMpLmZvckVhY2goKGZ1bmN0aW9uKHQpe3ZhciBuPWUuc3R5bGVzW3RdfHx7fSxvPWUuYXR0cmlidXRlc1t0XXx8e30saT1lLmVsZW1lbnRzW3RdO0koaSkmJlQoaSkmJihPYmplY3QuYXNzaWduKGkuc3R5bGUsbiksT2JqZWN0LmtleXMobykuZm9yRWFjaCgoZnVuY3Rpb24odCl7dmFyIGU9b1t0XTshMT09PWU/aS5yZW1vdmVBdHRyaWJ1dGUodCk6aS5zZXRBdHRyaWJ1dGUodCwhMD09PWU/XCJcIjplKX0pKSl9KSl9LGVmZmVjdDpmdW5jdGlvbih0KXt2YXIgZT10LnN0YXRlLG49e3BvcHBlcjp7cG9zaXRpb246ZS5vcHRpb25zLnN0cmF0ZWd5LGxlZnQ6XCIwXCIsdG9wOlwiMFwiLG1hcmdpbjpcIjBcIn0sYXJyb3c6e3Bvc2l0aW9uOlwiYWJzb2x1dGVcIn0scmVmZXJlbmNlOnt9fTtyZXR1cm4gT2JqZWN0LmFzc2lnbihlLmVsZW1lbnRzLnBvcHBlci5zdHlsZSxuLnBvcHBlciksZS5zdHlsZXM9bixlLmVsZW1lbnRzLmFycm93JiZPYmplY3QuYXNzaWduKGUuZWxlbWVudHMuYXJyb3cuc3R5bGUsbi5hcnJvdyksZnVuY3Rpb24oKXtPYmplY3Qua2V5cyhlLmVsZW1lbnRzKS5mb3JFYWNoKChmdW5jdGlvbih0KXt2YXIgbz1lLmVsZW1lbnRzW3RdLGk9ZS5hdHRyaWJ1dGVzW3RdfHx7fSxyPU9iamVjdC5rZXlzKGUuc3R5bGVzLmhhc093blByb3BlcnR5KHQpP2Uuc3R5bGVzW3RdOm5bdF0pLnJlZHVjZSgoZnVuY3Rpb24odCxlKXtyZXR1cm4gdFtlXT1cIlwiLHR9KSx7fSk7SShvKSYmVChvKSYmKE9iamVjdC5hc3NpZ24oby5zdHlsZSxyKSxPYmplY3Qua2V5cyhpKS5mb3JFYWNoKChmdW5jdGlvbih0KXtvLnJlbW92ZUF0dHJpYnV0ZSh0KX0pKSl9KSl9fSxyZXF1aXJlczpbXCJjb21wdXRlU3R5bGVzXCJdfTtmdW5jdGlvbiBMKHQpe3JldHVybiB0LnNwbGl0KFwiLVwiKVswXX12YXIgUD1NYXRoLm1heCxrPU1hdGgubWluLGo9TWF0aC5yb3VuZDtmdW5jdGlvbiBIKHQsZSl7dm9pZCAwPT09ZSYmKGU9ITEpO3ZhciBuPXQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksbz0xLGk9MTtpZihJKHQpJiZlKXt2YXIgcj10Lm9mZnNldEhlaWdodCxzPXQub2Zmc2V0V2lkdGg7cz4wJiYobz1qKG4ud2lkdGgpL3N8fDEpLHI+MCYmKGk9aihuLmhlaWdodCkvcnx8MSl9cmV0dXJue3dpZHRoOm4ud2lkdGgvbyxoZWlnaHQ6bi5oZWlnaHQvaSx0b3A6bi50b3AvaSxyaWdodDpuLnJpZ2h0L28sYm90dG9tOm4uYm90dG9tL2ksbGVmdDpuLmxlZnQvbyx4Om4ubGVmdC9vLHk6bi50b3AvaX19ZnVuY3Rpb24gTSh0KXt2YXIgZT1IKHQpLG49dC5vZmZzZXRXaWR0aCxvPXQub2Zmc2V0SGVpZ2h0O3JldHVybiBNYXRoLmFicyhlLndpZHRoLW4pPD0xJiYobj1lLndpZHRoKSxNYXRoLmFicyhlLmhlaWdodC1vKTw9MSYmKG89ZS5oZWlnaHQpLHt4OnQub2Zmc2V0TGVmdCx5OnQub2Zmc2V0VG9wLHdpZHRoOm4saGVpZ2h0Om99fWZ1bmN0aW9uIEIodCxlKXt2YXIgbj1lLmdldFJvb3ROb2RlJiZlLmdldFJvb3ROb2RlKCk7aWYodC5jb250YWlucyhlKSlyZXR1cm4hMDtpZihuJiZBKG4pKXt2YXIgbz1lO2Rve2lmKG8mJnQuaXNTYW1lTm9kZShvKSlyZXR1cm4hMDtvPW8ucGFyZW50Tm9kZXx8by5ob3N0fXdoaWxlKG8pfXJldHVybiExfWZ1bmN0aW9uIEcodCl7cmV0dXJuIFIodCkuZ2V0Q29tcHV0ZWRTdHlsZSh0KX1mdW5jdGlvbiBXKHQpe3JldHVybltcInRhYmxlXCIsXCJ0ZFwiLFwidGhcIl0uaW5kZXhPZihUKHQpKT49MH1mdW5jdGlvbiBGKHQpe3JldHVybigoTih0KT90Lm93bmVyRG9jdW1lbnQ6dC5kb2N1bWVudCl8fHdpbmRvdy5kb2N1bWVudCkuZG9jdW1lbnRFbGVtZW50fWZ1bmN0aW9uIFUodCl7cmV0dXJuXCJodG1sXCI9PT1UKHQpP3Q6dC5hc3NpZ25lZFNsb3R8fHQucGFyZW50Tm9kZXx8KEEodCk/dC5ob3N0Om51bGwpfHxGKHQpfWZ1bmN0aW9uIHoodCl7cmV0dXJuIEkodCkmJlwiZml4ZWRcIiE9PUcodCkucG9zaXRpb24/dC5vZmZzZXRQYXJlbnQ6bnVsbH1mdW5jdGlvbiBWKHQpe2Zvcih2YXIgZT1SKHQpLG49eih0KTtuJiZXKG4pJiZcInN0YXRpY1wiPT09RyhuKS5wb3NpdGlvbjspbj16KG4pO3JldHVybiBuJiYoXCJodG1sXCI9PT1UKG4pfHxcImJvZHlcIj09PVQobikmJlwic3RhdGljXCI9PT1HKG4pLnBvc2l0aW9uKT9lOm58fGZ1bmN0aW9uKHQpe3ZhciBlPS0xIT09bmF2aWdhdG9yLnVzZXJBZ2VudC50b0xvd2VyQ2FzZSgpLmluZGV4T2YoXCJmaXJlZm94XCIpO2lmKC0xIT09bmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKFwiVHJpZGVudFwiKSYmSSh0KSYmXCJmaXhlZFwiPT09Ryh0KS5wb3NpdGlvbilyZXR1cm4gbnVsbDtmb3IodmFyIG49VSh0KTtJKG4pJiZbXCJodG1sXCIsXCJib2R5XCJdLmluZGV4T2YoVChuKSk8MDspe3ZhciBvPUcobik7aWYoXCJub25lXCIhPT1vLnRyYW5zZm9ybXx8XCJub25lXCIhPT1vLnBlcnNwZWN0aXZlfHxcInBhaW50XCI9PT1vLmNvbnRhaW58fC0xIT09W1widHJhbnNmb3JtXCIsXCJwZXJzcGVjdGl2ZVwiXS5pbmRleE9mKG8ud2lsbENoYW5nZSl8fGUmJlwiZmlsdGVyXCI9PT1vLndpbGxDaGFuZ2V8fGUmJm8uZmlsdGVyJiZcIm5vbmVcIiE9PW8uZmlsdGVyKXJldHVybiBuO249bi5wYXJlbnROb2RlfXJldHVybiBudWxsfSh0KXx8ZX1mdW5jdGlvbiAkKHQpe3JldHVybltcInRvcFwiLFwiYm90dG9tXCJdLmluZGV4T2YodCk+PTA/XCJ4XCI6XCJ5XCJ9ZnVuY3Rpb24gcSh0LGUsbil7cmV0dXJuIFAodCxrKGUsbikpfWZ1bmN0aW9uIEsodCl7cmV0dXJuIE9iamVjdC5hc3NpZ24oe30se3RvcDowLHJpZ2h0OjAsYm90dG9tOjAsbGVmdDowfSx0KX1mdW5jdGlvbiBYKHQsZSl7cmV0dXJuIGUucmVkdWNlKChmdW5jdGlvbihlLG4pe3JldHVybiBlW25dPXQsZX0pLHt9KX1jb25zdCBZPXtuYW1lOlwiYXJyb3dcIixlbmFibGVkOiEwLHBoYXNlOlwibWFpblwiLGZuOmZ1bmN0aW9uKHQpe3ZhciBuLG89dC5zdGF0ZSxhPXQubmFtZSxsPXQub3B0aW9ucyx1PW8uZWxlbWVudHMuYXJyb3csZD1vLm1vZGlmaWVyc0RhdGEucG9wcGVyT2Zmc2V0cyxwPUwoby5wbGFjZW1lbnQpLGg9JChwKSxmPVtzLHJdLmluZGV4T2YocCk+PTA/XCJoZWlnaHRcIjpcIndpZHRoXCI7aWYodSYmZCl7dmFyIG09ZnVuY3Rpb24odCxlKXtyZXR1cm4gSyhcIm51bWJlclwiIT10eXBlb2YodD1cImZ1bmN0aW9uXCI9PXR5cGVvZiB0P3QoT2JqZWN0LmFzc2lnbih7fSxlLnJlY3RzLHtwbGFjZW1lbnQ6ZS5wbGFjZW1lbnR9KSk6dCk/dDpYKHQsYykpfShsLnBhZGRpbmcsbyksZz1NKHUpLF89XCJ5XCI9PT1oP2U6cyx2PVwieVwiPT09aD9pOnIseT1vLnJlY3RzLnJlZmVyZW5jZVtmXStvLnJlY3RzLnJlZmVyZW5jZVtoXS1kW2hdLW8ucmVjdHMucG9wcGVyW2ZdLGI9ZFtoXS1vLnJlY3RzLnJlZmVyZW5jZVtoXSxFPVYodSksdz1FP1wieVwiPT09aD9FLmNsaWVudEhlaWdodHx8MDpFLmNsaWVudFdpZHRofHwwOjAsTz15LzItYi8yLEQ9bVtfXSxDPXctZ1tmXS1tW3ZdLFM9dy8yLWdbZl0vMitPLFQ9cShELFMsQyksUj1oO28ubW9kaWZpZXJzRGF0YVthXT0oKG49e30pW1JdPVQsbi5jZW50ZXJPZmZzZXQ9VC1TLG4pfX0sZWZmZWN0OmZ1bmN0aW9uKHQpe3ZhciBlPXQuc3RhdGUsbj10Lm9wdGlvbnMuZWxlbWVudCxvPXZvaWQgMD09PW4/XCJbZGF0YS1wb3BwZXItYXJyb3ddXCI6bjtudWxsIT1vJiYoXCJzdHJpbmdcIiE9dHlwZW9mIG98fChvPWUuZWxlbWVudHMucG9wcGVyLnF1ZXJ5U2VsZWN0b3IobykpKSYmQihlLmVsZW1lbnRzLnBvcHBlcixvKSYmKGUuZWxlbWVudHMuYXJyb3c9byl9LHJlcXVpcmVzOltcInBvcHBlck9mZnNldHNcIl0scmVxdWlyZXNJZkV4aXN0czpbXCJwcmV2ZW50T3ZlcmZsb3dcIl19O2Z1bmN0aW9uIFEodCl7cmV0dXJuIHQuc3BsaXQoXCItXCIpWzFdfXZhciBKPXt0b3A6XCJhdXRvXCIscmlnaHQ6XCJhdXRvXCIsYm90dG9tOlwiYXV0b1wiLGxlZnQ6XCJhdXRvXCJ9O2Z1bmN0aW9uIFoodCl7dmFyIG4sbz10LnBvcHBlcixhPXQucG9wcGVyUmVjdCxjPXQucGxhY2VtZW50LGw9dC52YXJpYXRpb24sZD10Lm9mZnNldHMscD10LnBvc2l0aW9uLGg9dC5ncHVBY2NlbGVyYXRpb24sZj10LmFkYXB0aXZlLG09dC5yb3VuZE9mZnNldHMsZz10LmlzRml4ZWQsXz1kLngsdj12b2lkIDA9PT1fPzA6Xyx5PWQueSxiPXZvaWQgMD09PXk/MDp5LEU9XCJmdW5jdGlvblwiPT10eXBlb2YgbT9tKHt4OnYseTpifSk6e3g6dix5OmJ9O3Y9RS54LGI9RS55O3ZhciB3PWQuaGFzT3duUHJvcGVydHkoXCJ4XCIpLE89ZC5oYXNPd25Qcm9wZXJ0eShcInlcIiksRD1zLEM9ZSxTPXdpbmRvdztpZihmKXt2YXIgVD1WKG8pLE49XCJjbGllbnRIZWlnaHRcIixJPVwiY2xpZW50V2lkdGhcIjtUPT09UihvKSYmXCJzdGF0aWNcIiE9PUcoVD1GKG8pKS5wb3NpdGlvbiYmXCJhYnNvbHV0ZVwiPT09cCYmKE49XCJzY3JvbGxIZWlnaHRcIixJPVwic2Nyb2xsV2lkdGhcIiksVD1ULChjPT09ZXx8KGM9PT1zfHxjPT09cikmJmw9PT11KSYmKEM9aSxiLT0oZyYmUy52aXN1YWxWaWV3cG9ydD9TLnZpc3VhbFZpZXdwb3J0LmhlaWdodDpUW05dKS1hLmhlaWdodCxiKj1oPzE6LTEpLGMhPT1zJiYoYyE9PWUmJmMhPT1pfHxsIT09dSl8fChEPXIsdi09KGcmJlMudmlzdWFsVmlld3BvcnQ/Uy52aXN1YWxWaWV3cG9ydC53aWR0aDpUW0ldKS1hLndpZHRoLHYqPWg/MTotMSl9dmFyIEEseD1PYmplY3QuYXNzaWduKHtwb3NpdGlvbjpwfSxmJiZKKSxMPSEwPT09bT9mdW5jdGlvbih0KXt2YXIgZT10Lngsbj10Lnksbz13aW5kb3cuZGV2aWNlUGl4ZWxSYXRpb3x8MTtyZXR1cm57eDpqKGUqbykvb3x8MCx5OmoobipvKS9vfHwwfX0oe3g6dix5OmJ9KTp7eDp2LHk6Yn07cmV0dXJuIHY9TC54LGI9TC55LGg/T2JqZWN0LmFzc2lnbih7fSx4LCgoQT17fSlbQ109Tz9cIjBcIjpcIlwiLEFbRF09dz9cIjBcIjpcIlwiLEEudHJhbnNmb3JtPShTLmRldmljZVBpeGVsUmF0aW98fDEpPD0xP1widHJhbnNsYXRlKFwiK3YrXCJweCwgXCIrYitcInB4KVwiOlwidHJhbnNsYXRlM2QoXCIrditcInB4LCBcIitiK1wicHgsIDApXCIsQSkpOk9iamVjdC5hc3NpZ24oe30seCwoKG49e30pW0NdPU8/YitcInB4XCI6XCJcIixuW0RdPXc/ditcInB4XCI6XCJcIixuLnRyYW5zZm9ybT1cIlwiLG4pKX1jb25zdCB0dD17bmFtZTpcImNvbXB1dGVTdHlsZXNcIixlbmFibGVkOiEwLHBoYXNlOlwiYmVmb3JlV3JpdGVcIixmbjpmdW5jdGlvbih0KXt2YXIgZT10LnN0YXRlLG49dC5vcHRpb25zLG89bi5ncHVBY2NlbGVyYXRpb24saT12b2lkIDA9PT1vfHxvLHI9bi5hZGFwdGl2ZSxzPXZvaWQgMD09PXJ8fHIsYT1uLnJvdW5kT2Zmc2V0cyxjPXZvaWQgMD09PWF8fGEsbD17cGxhY2VtZW50OkwoZS5wbGFjZW1lbnQpLHZhcmlhdGlvbjpRKGUucGxhY2VtZW50KSxwb3BwZXI6ZS5lbGVtZW50cy5wb3BwZXIscG9wcGVyUmVjdDplLnJlY3RzLnBvcHBlcixncHVBY2NlbGVyYXRpb246aSxpc0ZpeGVkOlwiZml4ZWRcIj09PWUub3B0aW9ucy5zdHJhdGVneX07bnVsbCE9ZS5tb2RpZmllcnNEYXRhLnBvcHBlck9mZnNldHMmJihlLnN0eWxlcy5wb3BwZXI9T2JqZWN0LmFzc2lnbih7fSxlLnN0eWxlcy5wb3BwZXIsWihPYmplY3QuYXNzaWduKHt9LGwse29mZnNldHM6ZS5tb2RpZmllcnNEYXRhLnBvcHBlck9mZnNldHMscG9zaXRpb246ZS5vcHRpb25zLnN0cmF0ZWd5LGFkYXB0aXZlOnMscm91bmRPZmZzZXRzOmN9KSkpKSxudWxsIT1lLm1vZGlmaWVyc0RhdGEuYXJyb3cmJihlLnN0eWxlcy5hcnJvdz1PYmplY3QuYXNzaWduKHt9LGUuc3R5bGVzLmFycm93LFooT2JqZWN0LmFzc2lnbih7fSxsLHtvZmZzZXRzOmUubW9kaWZpZXJzRGF0YS5hcnJvdyxwb3NpdGlvbjpcImFic29sdXRlXCIsYWRhcHRpdmU6ITEscm91bmRPZmZzZXRzOmN9KSkpKSxlLmF0dHJpYnV0ZXMucG9wcGVyPU9iamVjdC5hc3NpZ24oe30sZS5hdHRyaWJ1dGVzLnBvcHBlcix7XCJkYXRhLXBvcHBlci1wbGFjZW1lbnRcIjplLnBsYWNlbWVudH0pfSxkYXRhOnt9fTt2YXIgZXQ9e3Bhc3NpdmU6ITB9O2NvbnN0IG50PXtuYW1lOlwiZXZlbnRMaXN0ZW5lcnNcIixlbmFibGVkOiEwLHBoYXNlOlwid3JpdGVcIixmbjpmdW5jdGlvbigpe30sZWZmZWN0OmZ1bmN0aW9uKHQpe3ZhciBlPXQuc3RhdGUsbj10Lmluc3RhbmNlLG89dC5vcHRpb25zLGk9by5zY3JvbGwscj12b2lkIDA9PT1pfHxpLHM9by5yZXNpemUsYT12b2lkIDA9PT1zfHxzLGM9UihlLmVsZW1lbnRzLnBvcHBlciksbD1bXS5jb25jYXQoZS5zY3JvbGxQYXJlbnRzLnJlZmVyZW5jZSxlLnNjcm9sbFBhcmVudHMucG9wcGVyKTtyZXR1cm4gciYmbC5mb3JFYWNoKChmdW5jdGlvbih0KXt0LmFkZEV2ZW50TGlzdGVuZXIoXCJzY3JvbGxcIixuLnVwZGF0ZSxldCl9KSksYSYmYy5hZGRFdmVudExpc3RlbmVyKFwicmVzaXplXCIsbi51cGRhdGUsZXQpLGZ1bmN0aW9uKCl7ciYmbC5mb3JFYWNoKChmdW5jdGlvbih0KXt0LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJzY3JvbGxcIixuLnVwZGF0ZSxldCl9KSksYSYmYy5yZW1vdmVFdmVudExpc3RlbmVyKFwicmVzaXplXCIsbi51cGRhdGUsZXQpfX0sZGF0YTp7fX07dmFyIG90PXtsZWZ0OlwicmlnaHRcIixyaWdodDpcImxlZnRcIixib3R0b206XCJ0b3BcIix0b3A6XCJib3R0b21cIn07ZnVuY3Rpb24gaXQodCl7cmV0dXJuIHQucmVwbGFjZSgvbGVmdHxyaWdodHxib3R0b218dG9wL2csKGZ1bmN0aW9uKHQpe3JldHVybiBvdFt0XX0pKX12YXIgcnQ9e3N0YXJ0OlwiZW5kXCIsZW5kOlwic3RhcnRcIn07ZnVuY3Rpb24gc3QodCl7cmV0dXJuIHQucmVwbGFjZSgvc3RhcnR8ZW5kL2csKGZ1bmN0aW9uKHQpe3JldHVybiBydFt0XX0pKX1mdW5jdGlvbiBhdCh0KXt2YXIgZT1SKHQpO3JldHVybntzY3JvbGxMZWZ0OmUucGFnZVhPZmZzZXQsc2Nyb2xsVG9wOmUucGFnZVlPZmZzZXR9fWZ1bmN0aW9uIGN0KHQpe3JldHVybiBIKEYodCkpLmxlZnQrYXQodCkuc2Nyb2xsTGVmdH1mdW5jdGlvbiBsdCh0KXt2YXIgZT1HKHQpLG49ZS5vdmVyZmxvdyxvPWUub3ZlcmZsb3dYLGk9ZS5vdmVyZmxvd1k7cmV0dXJuL2F1dG98c2Nyb2xsfG92ZXJsYXl8aGlkZGVuLy50ZXN0KG4raStvKX1mdW5jdGlvbiB1dCh0KXtyZXR1cm5bXCJodG1sXCIsXCJib2R5XCIsXCIjZG9jdW1lbnRcIl0uaW5kZXhPZihUKHQpKT49MD90Lm93bmVyRG9jdW1lbnQuYm9keTpJKHQpJiZsdCh0KT90OnV0KFUodCkpfWZ1bmN0aW9uIGR0KHQsZSl7dmFyIG47dm9pZCAwPT09ZSYmKGU9W10pO3ZhciBvPXV0KHQpLGk9bz09PShudWxsPT0obj10Lm93bmVyRG9jdW1lbnQpP3ZvaWQgMDpuLmJvZHkpLHI9UihvKSxzPWk/W3JdLmNvbmNhdChyLnZpc3VhbFZpZXdwb3J0fHxbXSxsdChvKT9vOltdKTpvLGE9ZS5jb25jYXQocyk7cmV0dXJuIGk/YTphLmNvbmNhdChkdChVKHMpKSl9ZnVuY3Rpb24gcHQodCl7cmV0dXJuIE9iamVjdC5hc3NpZ24oe30sdCx7bGVmdDp0LngsdG9wOnQueSxyaWdodDp0LngrdC53aWR0aCxib3R0b206dC55K3QuaGVpZ2h0fSl9ZnVuY3Rpb24gaHQodCxlKXtyZXR1cm4gZT09PXA/cHQoZnVuY3Rpb24odCl7dmFyIGU9Uih0KSxuPUYodCksbz1lLnZpc3VhbFZpZXdwb3J0LGk9bi5jbGllbnRXaWR0aCxyPW4uY2xpZW50SGVpZ2h0LHM9MCxhPTA7cmV0dXJuIG8mJihpPW8ud2lkdGgscj1vLmhlaWdodCwvXigoPyFjaHJvbWV8YW5kcm9pZCkuKSpzYWZhcmkvaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpfHwocz1vLm9mZnNldExlZnQsYT1vLm9mZnNldFRvcCkpLHt3aWR0aDppLGhlaWdodDpyLHg6cytjdCh0KSx5OmF9fSh0KSk6TihlKT9mdW5jdGlvbih0KXt2YXIgZT1IKHQpO3JldHVybiBlLnRvcD1lLnRvcCt0LmNsaWVudFRvcCxlLmxlZnQ9ZS5sZWZ0K3QuY2xpZW50TGVmdCxlLmJvdHRvbT1lLnRvcCt0LmNsaWVudEhlaWdodCxlLnJpZ2h0PWUubGVmdCt0LmNsaWVudFdpZHRoLGUud2lkdGg9dC5jbGllbnRXaWR0aCxlLmhlaWdodD10LmNsaWVudEhlaWdodCxlLng9ZS5sZWZ0LGUueT1lLnRvcCxlfShlKTpwdChmdW5jdGlvbih0KXt2YXIgZSxuPUYodCksbz1hdCh0KSxpPW51bGw9PShlPXQub3duZXJEb2N1bWVudCk/dm9pZCAwOmUuYm9keSxyPVAobi5zY3JvbGxXaWR0aCxuLmNsaWVudFdpZHRoLGk/aS5zY3JvbGxXaWR0aDowLGk/aS5jbGllbnRXaWR0aDowKSxzPVAobi5zY3JvbGxIZWlnaHQsbi5jbGllbnRIZWlnaHQsaT9pLnNjcm9sbEhlaWdodDowLGk/aS5jbGllbnRIZWlnaHQ6MCksYT0tby5zY3JvbGxMZWZ0K2N0KHQpLGM9LW8uc2Nyb2xsVG9wO3JldHVyblwicnRsXCI9PT1HKGl8fG4pLmRpcmVjdGlvbiYmKGErPVAobi5jbGllbnRXaWR0aCxpP2kuY2xpZW50V2lkdGg6MCktcikse3dpZHRoOnIsaGVpZ2h0OnMseDphLHk6Y319KEYodCkpKX1mdW5jdGlvbiBmdCh0KXt2YXIgbixvPXQucmVmZXJlbmNlLGE9dC5lbGVtZW50LGM9dC5wbGFjZW1lbnQsZD1jP0woYyk6bnVsbCxwPWM/UShjKTpudWxsLGg9by54K28ud2lkdGgvMi1hLndpZHRoLzIsZj1vLnkrby5oZWlnaHQvMi1hLmhlaWdodC8yO3N3aXRjaChkKXtjYXNlIGU6bj17eDpoLHk6by55LWEuaGVpZ2h0fTticmVhaztjYXNlIGk6bj17eDpoLHk6by55K28uaGVpZ2h0fTticmVhaztjYXNlIHI6bj17eDpvLngrby53aWR0aCx5OmZ9O2JyZWFrO2Nhc2UgczpuPXt4Om8ueC1hLndpZHRoLHk6Zn07YnJlYWs7ZGVmYXVsdDpuPXt4Om8ueCx5Om8ueX19dmFyIG09ZD8kKGQpOm51bGw7aWYobnVsbCE9bSl7dmFyIGc9XCJ5XCI9PT1tP1wiaGVpZ2h0XCI6XCJ3aWR0aFwiO3N3aXRjaChwKXtjYXNlIGw6blttXT1uW21dLShvW2ddLzItYVtnXS8yKTticmVhaztjYXNlIHU6blttXT1uW21dKyhvW2ddLzItYVtnXS8yKX19cmV0dXJuIG59ZnVuY3Rpb24gbXQodCxuKXt2b2lkIDA9PT1uJiYobj17fSk7dmFyIG89bixzPW8ucGxhY2VtZW50LGE9dm9pZCAwPT09cz90LnBsYWNlbWVudDpzLGw9by5ib3VuZGFyeSx1PXZvaWQgMD09PWw/ZDpsLG09by5yb290Qm91bmRhcnksZz12b2lkIDA9PT1tP3A6bSxfPW8uZWxlbWVudENvbnRleHQsdj12b2lkIDA9PT1fP2g6Xyx5PW8uYWx0Qm91bmRhcnksYj12b2lkIDAhPT15JiZ5LEU9by5wYWRkaW5nLHc9dm9pZCAwPT09RT8wOkUsTz1LKFwibnVtYmVyXCIhPXR5cGVvZiB3P3c6WCh3LGMpKSxEPXY9PT1oP2Y6aCxDPXQucmVjdHMucG9wcGVyLFM9dC5lbGVtZW50c1tiP0Q6dl0sUj1mdW5jdGlvbih0LGUsbil7dmFyIG89XCJjbGlwcGluZ1BhcmVudHNcIj09PWU/ZnVuY3Rpb24odCl7dmFyIGU9ZHQoVSh0KSksbj1bXCJhYnNvbHV0ZVwiLFwiZml4ZWRcIl0uaW5kZXhPZihHKHQpLnBvc2l0aW9uKT49MCYmSSh0KT9WKHQpOnQ7cmV0dXJuIE4obik/ZS5maWx0ZXIoKGZ1bmN0aW9uKHQpe3JldHVybiBOKHQpJiZCKHQsbikmJlwiYm9keVwiIT09VCh0KX0pKTpbXX0odCk6W10uY29uY2F0KGUpLGk9W10uY29uY2F0KG8sW25dKSxyPWlbMF0scz1pLnJlZHVjZSgoZnVuY3Rpb24oZSxuKXt2YXIgbz1odCh0LG4pO3JldHVybiBlLnRvcD1QKG8udG9wLGUudG9wKSxlLnJpZ2h0PWsoby5yaWdodCxlLnJpZ2h0KSxlLmJvdHRvbT1rKG8uYm90dG9tLGUuYm90dG9tKSxlLmxlZnQ9UChvLmxlZnQsZS5sZWZ0KSxlfSksaHQodCxyKSk7cmV0dXJuIHMud2lkdGg9cy5yaWdodC1zLmxlZnQscy5oZWlnaHQ9cy5ib3R0b20tcy50b3Ascy54PXMubGVmdCxzLnk9cy50b3Asc30oTihTKT9TOlMuY29udGV4dEVsZW1lbnR8fEYodC5lbGVtZW50cy5wb3BwZXIpLHUsZyksQT1IKHQuZWxlbWVudHMucmVmZXJlbmNlKSx4PWZ0KHtyZWZlcmVuY2U6QSxlbGVtZW50OkMsc3RyYXRlZ3k6XCJhYnNvbHV0ZVwiLHBsYWNlbWVudDphfSksTD1wdChPYmplY3QuYXNzaWduKHt9LEMseCkpLGo9dj09PWg/TDpBLE09e3RvcDpSLnRvcC1qLnRvcCtPLnRvcCxib3R0b206ai5ib3R0b20tUi5ib3R0b20rTy5ib3R0b20sbGVmdDpSLmxlZnQtai5sZWZ0K08ubGVmdCxyaWdodDpqLnJpZ2h0LVIucmlnaHQrTy5yaWdodH0sVz10Lm1vZGlmaWVyc0RhdGEub2Zmc2V0O2lmKHY9PT1oJiZXKXt2YXIgej1XW2FdO09iamVjdC5rZXlzKE0pLmZvckVhY2goKGZ1bmN0aW9uKHQpe3ZhciBuPVtyLGldLmluZGV4T2YodCk+PTA/MTotMSxvPVtlLGldLmluZGV4T2YodCk+PTA/XCJ5XCI6XCJ4XCI7TVt0XSs9eltvXSpufSkpfXJldHVybiBNfWNvbnN0IGd0PXtuYW1lOlwiZmxpcFwiLGVuYWJsZWQ6ITAscGhhc2U6XCJtYWluXCIsZm46ZnVuY3Rpb24odCl7dmFyIG49dC5zdGF0ZSxvPXQub3B0aW9ucyx1PXQubmFtZTtpZighbi5tb2RpZmllcnNEYXRhW3VdLl9za2lwKXtmb3IodmFyIGQ9by5tYWluQXhpcyxwPXZvaWQgMD09PWR8fGQsaD1vLmFsdEF4aXMsZj12b2lkIDA9PT1ofHxoLF89by5mYWxsYmFja1BsYWNlbWVudHMsdj1vLnBhZGRpbmcseT1vLmJvdW5kYXJ5LGI9by5yb290Qm91bmRhcnksRT1vLmFsdEJvdW5kYXJ5LHc9by5mbGlwVmFyaWF0aW9ucyxPPXZvaWQgMD09PXd8fHcsRD1vLmFsbG93ZWRBdXRvUGxhY2VtZW50cyxDPW4ub3B0aW9ucy5wbGFjZW1lbnQsUz1MKEMpLFQ9X3x8KFMhPT1DJiZPP2Z1bmN0aW9uKHQpe2lmKEwodCk9PT1hKXJldHVybltdO3ZhciBlPWl0KHQpO3JldHVybltzdCh0KSxlLHN0KGUpXX0oQyk6W2l0KEMpXSksUj1bQ10uY29uY2F0KFQpLnJlZHVjZSgoZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5jb25jYXQoTChlKT09PWE/ZnVuY3Rpb24odCxlKXt2b2lkIDA9PT1lJiYoZT17fSk7dmFyIG49ZSxvPW4ucGxhY2VtZW50LGk9bi5ib3VuZGFyeSxyPW4ucm9vdEJvdW5kYXJ5LHM9bi5wYWRkaW5nLGE9bi5mbGlwVmFyaWF0aW9ucyxsPW4uYWxsb3dlZEF1dG9QbGFjZW1lbnRzLHU9dm9pZCAwPT09bD9nOmwsZD1RKG8pLHA9ZD9hP206bS5maWx0ZXIoKGZ1bmN0aW9uKHQpe3JldHVybiBRKHQpPT09ZH0pKTpjLGg9cC5maWx0ZXIoKGZ1bmN0aW9uKHQpe3JldHVybiB1LmluZGV4T2YodCk+PTB9KSk7MD09PWgubGVuZ3RoJiYoaD1wKTt2YXIgZj1oLnJlZHVjZSgoZnVuY3Rpb24oZSxuKXtyZXR1cm4gZVtuXT1tdCh0LHtwbGFjZW1lbnQ6bixib3VuZGFyeTppLHJvb3RCb3VuZGFyeTpyLHBhZGRpbmc6c30pW0wobildLGV9KSx7fSk7cmV0dXJuIE9iamVjdC5rZXlzKGYpLnNvcnQoKGZ1bmN0aW9uKHQsZSl7cmV0dXJuIGZbdF0tZltlXX0pKX0obix7cGxhY2VtZW50OmUsYm91bmRhcnk6eSxyb290Qm91bmRhcnk6YixwYWRkaW5nOnYsZmxpcFZhcmlhdGlvbnM6TyxhbGxvd2VkQXV0b1BsYWNlbWVudHM6RH0pOmUpfSksW10pLE49bi5yZWN0cy5yZWZlcmVuY2UsST1uLnJlY3RzLnBvcHBlcixBPW5ldyBNYXAseD0hMCxQPVJbMF0saz0wO2s8Ui5sZW5ndGg7aysrKXt2YXIgaj1SW2tdLEg9TChqKSxNPVEoaik9PT1sLEI9W2UsaV0uaW5kZXhPZihIKT49MCxHPUI/XCJ3aWR0aFwiOlwiaGVpZ2h0XCIsVz1tdChuLHtwbGFjZW1lbnQ6aixib3VuZGFyeTp5LHJvb3RCb3VuZGFyeTpiLGFsdEJvdW5kYXJ5OkUscGFkZGluZzp2fSksRj1CP00/cjpzOk0/aTplO05bR10+SVtHXSYmKEY9aXQoRikpO3ZhciBVPWl0KEYpLHo9W107aWYocCYmei5wdXNoKFdbSF08PTApLGYmJnoucHVzaChXW0ZdPD0wLFdbVV08PTApLHouZXZlcnkoKGZ1bmN0aW9uKHQpe3JldHVybiB0fSkpKXtQPWoseD0hMTticmVha31BLnNldChqLHopfWlmKHgpZm9yKHZhciBWPWZ1bmN0aW9uKHQpe3ZhciBlPVIuZmluZCgoZnVuY3Rpb24oZSl7dmFyIG49QS5nZXQoZSk7aWYobilyZXR1cm4gbi5zbGljZSgwLHQpLmV2ZXJ5KChmdW5jdGlvbih0KXtyZXR1cm4gdH0pKX0pKTtpZihlKXJldHVybiBQPWUsXCJicmVha1wifSwkPU8/MzoxOyQ+MCYmXCJicmVha1wiIT09VigkKTskLS0pO24ucGxhY2VtZW50IT09UCYmKG4ubW9kaWZpZXJzRGF0YVt1XS5fc2tpcD0hMCxuLnBsYWNlbWVudD1QLG4ucmVzZXQ9ITApfX0scmVxdWlyZXNJZkV4aXN0czpbXCJvZmZzZXRcIl0sZGF0YTp7X3NraXA6ITF9fTtmdW5jdGlvbiBfdCh0LGUsbil7cmV0dXJuIHZvaWQgMD09PW4mJihuPXt4OjAseTowfSkse3RvcDp0LnRvcC1lLmhlaWdodC1uLnkscmlnaHQ6dC5yaWdodC1lLndpZHRoK24ueCxib3R0b206dC5ib3R0b20tZS5oZWlnaHQrbi55LGxlZnQ6dC5sZWZ0LWUud2lkdGgtbi54fX1mdW5jdGlvbiB2dCh0KXtyZXR1cm5bZSxyLGksc10uc29tZSgoZnVuY3Rpb24oZSl7cmV0dXJuIHRbZV0+PTB9KSl9Y29uc3QgeXQ9e25hbWU6XCJoaWRlXCIsZW5hYmxlZDohMCxwaGFzZTpcIm1haW5cIixyZXF1aXJlc0lmRXhpc3RzOltcInByZXZlbnRPdmVyZmxvd1wiXSxmbjpmdW5jdGlvbih0KXt2YXIgZT10LnN0YXRlLG49dC5uYW1lLG89ZS5yZWN0cy5yZWZlcmVuY2UsaT1lLnJlY3RzLnBvcHBlcixyPWUubW9kaWZpZXJzRGF0YS5wcmV2ZW50T3ZlcmZsb3cscz1tdChlLHtlbGVtZW50Q29udGV4dDpcInJlZmVyZW5jZVwifSksYT1tdChlLHthbHRCb3VuZGFyeTohMH0pLGM9X3QocyxvKSxsPV90KGEsaSxyKSx1PXZ0KGMpLGQ9dnQobCk7ZS5tb2RpZmllcnNEYXRhW25dPXtyZWZlcmVuY2VDbGlwcGluZ09mZnNldHM6Yyxwb3BwZXJFc2NhcGVPZmZzZXRzOmwsaXNSZWZlcmVuY2VIaWRkZW46dSxoYXNQb3BwZXJFc2NhcGVkOmR9LGUuYXR0cmlidXRlcy5wb3BwZXI9T2JqZWN0LmFzc2lnbih7fSxlLmF0dHJpYnV0ZXMucG9wcGVyLHtcImRhdGEtcG9wcGVyLXJlZmVyZW5jZS1oaWRkZW5cIjp1LFwiZGF0YS1wb3BwZXItZXNjYXBlZFwiOmR9KX19LGJ0PXtuYW1lOlwib2Zmc2V0XCIsZW5hYmxlZDohMCxwaGFzZTpcIm1haW5cIixyZXF1aXJlczpbXCJwb3BwZXJPZmZzZXRzXCJdLGZuOmZ1bmN0aW9uKHQpe3ZhciBuPXQuc3RhdGUsbz10Lm9wdGlvbnMsaT10Lm5hbWUsYT1vLm9mZnNldCxjPXZvaWQgMD09PWE/WzAsMF06YSxsPWcucmVkdWNlKChmdW5jdGlvbih0LG8pe3JldHVybiB0W29dPWZ1bmN0aW9uKHQsbixvKXt2YXIgaT1MKHQpLGE9W3MsZV0uaW5kZXhPZihpKT49MD8tMToxLGM9XCJmdW5jdGlvblwiPT10eXBlb2Ygbz9vKE9iamVjdC5hc3NpZ24oe30sbix7cGxhY2VtZW50OnR9KSk6byxsPWNbMF0sdT1jWzFdO3JldHVybiBsPWx8fDAsdT0odXx8MCkqYSxbcyxyXS5pbmRleE9mKGkpPj0wP3t4OnUseTpsfTp7eDpsLHk6dX19KG8sbi5yZWN0cyxjKSx0fSkse30pLHU9bFtuLnBsYWNlbWVudF0sZD11LngscD11Lnk7bnVsbCE9bi5tb2RpZmllcnNEYXRhLnBvcHBlck9mZnNldHMmJihuLm1vZGlmaWVyc0RhdGEucG9wcGVyT2Zmc2V0cy54Kz1kLG4ubW9kaWZpZXJzRGF0YS5wb3BwZXJPZmZzZXRzLnkrPXApLG4ubW9kaWZpZXJzRGF0YVtpXT1sfX0sRXQ9e25hbWU6XCJwb3BwZXJPZmZzZXRzXCIsZW5hYmxlZDohMCxwaGFzZTpcInJlYWRcIixmbjpmdW5jdGlvbih0KXt2YXIgZT10LnN0YXRlLG49dC5uYW1lO2UubW9kaWZpZXJzRGF0YVtuXT1mdCh7cmVmZXJlbmNlOmUucmVjdHMucmVmZXJlbmNlLGVsZW1lbnQ6ZS5yZWN0cy5wb3BwZXIsc3RyYXRlZ3k6XCJhYnNvbHV0ZVwiLHBsYWNlbWVudDplLnBsYWNlbWVudH0pfSxkYXRhOnt9fSx3dD17bmFtZTpcInByZXZlbnRPdmVyZmxvd1wiLGVuYWJsZWQ6ITAscGhhc2U6XCJtYWluXCIsZm46ZnVuY3Rpb24odCl7dmFyIG49dC5zdGF0ZSxvPXQub3B0aW9ucyxhPXQubmFtZSxjPW8ubWFpbkF4aXMsdT12b2lkIDA9PT1jfHxjLGQ9by5hbHRBeGlzLHA9dm9pZCAwIT09ZCYmZCxoPW8uYm91bmRhcnksZj1vLnJvb3RCb3VuZGFyeSxtPW8uYWx0Qm91bmRhcnksZz1vLnBhZGRpbmcsXz1vLnRldGhlcix2PXZvaWQgMD09PV98fF8seT1vLnRldGhlck9mZnNldCxiPXZvaWQgMD09PXk/MDp5LEU9bXQobix7Ym91bmRhcnk6aCxyb290Qm91bmRhcnk6ZixwYWRkaW5nOmcsYWx0Qm91bmRhcnk6bX0pLHc9TChuLnBsYWNlbWVudCksTz1RKG4ucGxhY2VtZW50KSxEPSFPLEM9JCh3KSxTPVwieFwiPT09Qz9cInlcIjpcInhcIixUPW4ubW9kaWZpZXJzRGF0YS5wb3BwZXJPZmZzZXRzLFI9bi5yZWN0cy5yZWZlcmVuY2UsTj1uLnJlY3RzLnBvcHBlcixJPVwiZnVuY3Rpb25cIj09dHlwZW9mIGI/YihPYmplY3QuYXNzaWduKHt9LG4ucmVjdHMse3BsYWNlbWVudDpuLnBsYWNlbWVudH0pKTpiLEE9XCJudW1iZXJcIj09dHlwZW9mIEk/e21haW5BeGlzOkksYWx0QXhpczpJfTpPYmplY3QuYXNzaWduKHttYWluQXhpczowLGFsdEF4aXM6MH0sSSkseD1uLm1vZGlmaWVyc0RhdGEub2Zmc2V0P24ubW9kaWZpZXJzRGF0YS5vZmZzZXRbbi5wbGFjZW1lbnRdOm51bGwsaj17eDowLHk6MH07aWYoVCl7aWYodSl7dmFyIEgsQj1cInlcIj09PUM/ZTpzLEc9XCJ5XCI9PT1DP2k6cixXPVwieVwiPT09Qz9cImhlaWdodFwiOlwid2lkdGhcIixGPVRbQ10sVT1GK0VbQl0sej1GLUVbR10sSz12Py1OW1ddLzI6MCxYPU89PT1sP1JbV106TltXXSxZPU89PT1sPy1OW1ddOi1SW1ddLEo9bi5lbGVtZW50cy5hcnJvdyxaPXYmJko/TShKKTp7d2lkdGg6MCxoZWlnaHQ6MH0sdHQ9bi5tb2RpZmllcnNEYXRhW1wiYXJyb3cjcGVyc2lzdGVudFwiXT9uLm1vZGlmaWVyc0RhdGFbXCJhcnJvdyNwZXJzaXN0ZW50XCJdLnBhZGRpbmc6e3RvcDowLHJpZ2h0OjAsYm90dG9tOjAsbGVmdDowfSxldD10dFtCXSxudD10dFtHXSxvdD1xKDAsUltXXSxaW1ddKSxpdD1EP1JbV10vMi1LLW90LWV0LUEubWFpbkF4aXM6WC1vdC1ldC1BLm1haW5BeGlzLHJ0PUQ/LVJbV10vMitLK290K250K0EubWFpbkF4aXM6WStvdCtudCtBLm1haW5BeGlzLHN0PW4uZWxlbWVudHMuYXJyb3cmJlYobi5lbGVtZW50cy5hcnJvdyksYXQ9c3Q/XCJ5XCI9PT1DP3N0LmNsaWVudFRvcHx8MDpzdC5jbGllbnRMZWZ0fHwwOjAsY3Q9bnVsbCE9KEg9bnVsbD09eD92b2lkIDA6eFtDXSk/SDowLGx0PUYrcnQtY3QsdXQ9cSh2P2soVSxGK2l0LWN0LWF0KTpVLEYsdj9QKHosbHQpOnopO1RbQ109dXQsaltDXT11dC1GfWlmKHApe3ZhciBkdCxwdD1cInhcIj09PUM/ZTpzLGh0PVwieFwiPT09Qz9pOnIsZnQ9VFtTXSxndD1cInlcIj09PVM/XCJoZWlnaHRcIjpcIndpZHRoXCIsX3Q9ZnQrRVtwdF0sdnQ9ZnQtRVtodF0seXQ9LTEhPT1bZSxzXS5pbmRleE9mKHcpLGJ0PW51bGwhPShkdD1udWxsPT14P3ZvaWQgMDp4W1NdKT9kdDowLEV0PXl0P190OmZ0LVJbZ3RdLU5bZ3RdLWJ0K0EuYWx0QXhpcyx3dD15dD9mdCtSW2d0XStOW2d0XS1idC1BLmFsdEF4aXM6dnQsT3Q9diYmeXQ/ZnVuY3Rpb24odCxlLG4pe3ZhciBvPXEodCxlLG4pO3JldHVybiBvPm4/bjpvfShFdCxmdCx3dCk6cSh2P0V0Ol90LGZ0LHY/d3Q6dnQpO1RbU109T3QsaltTXT1PdC1mdH1uLm1vZGlmaWVyc0RhdGFbYV09an19LHJlcXVpcmVzSWZFeGlzdHM6W1wib2Zmc2V0XCJdfTtmdW5jdGlvbiBPdCh0LGUsbil7dm9pZCAwPT09biYmKG49ITEpO3ZhciBvLGkscj1JKGUpLHM9SShlKSYmZnVuY3Rpb24odCl7dmFyIGU9dC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSxuPWooZS53aWR0aCkvdC5vZmZzZXRXaWR0aHx8MSxvPWooZS5oZWlnaHQpL3Qub2Zmc2V0SGVpZ2h0fHwxO3JldHVybiAxIT09bnx8MSE9PW99KGUpLGE9RihlKSxjPUgodCxzKSxsPXtzY3JvbGxMZWZ0OjAsc2Nyb2xsVG9wOjB9LHU9e3g6MCx5OjB9O3JldHVybihyfHwhciYmIW4pJiYoKFwiYm9keVwiIT09VChlKXx8bHQoYSkpJiYobD0obz1lKSE9PVIobykmJkkobyk/e3Njcm9sbExlZnQ6KGk9bykuc2Nyb2xsTGVmdCxzY3JvbGxUb3A6aS5zY3JvbGxUb3B9OmF0KG8pKSxJKGUpPygodT1IKGUsITApKS54Kz1lLmNsaWVudExlZnQsdS55Kz1lLmNsaWVudFRvcCk6YSYmKHUueD1jdChhKSkpLHt4OmMubGVmdCtsLnNjcm9sbExlZnQtdS54LHk6Yy50b3ArbC5zY3JvbGxUb3AtdS55LHdpZHRoOmMud2lkdGgsaGVpZ2h0OmMuaGVpZ2h0fX1mdW5jdGlvbiBEdCh0KXt2YXIgZT1uZXcgTWFwLG49bmV3IFNldCxvPVtdO2Z1bmN0aW9uIGkodCl7bi5hZGQodC5uYW1lKSxbXS5jb25jYXQodC5yZXF1aXJlc3x8W10sdC5yZXF1aXJlc0lmRXhpc3RzfHxbXSkuZm9yRWFjaCgoZnVuY3Rpb24odCl7aWYoIW4uaGFzKHQpKXt2YXIgbz1lLmdldCh0KTtvJiZpKG8pfX0pKSxvLnB1c2godCl9cmV0dXJuIHQuZm9yRWFjaCgoZnVuY3Rpb24odCl7ZS5zZXQodC5uYW1lLHQpfSkpLHQuZm9yRWFjaCgoZnVuY3Rpb24odCl7bi5oYXModC5uYW1lKXx8aSh0KX0pKSxvfXZhciBDdD17cGxhY2VtZW50OlwiYm90dG9tXCIsbW9kaWZpZXJzOltdLHN0cmF0ZWd5OlwiYWJzb2x1dGVcIn07ZnVuY3Rpb24gU3QoKXtmb3IodmFyIHQ9YXJndW1lbnRzLmxlbmd0aCxlPW5ldyBBcnJheSh0KSxuPTA7bjx0O24rKyllW25dPWFyZ3VtZW50c1tuXTtyZXR1cm4hZS5zb21lKChmdW5jdGlvbih0KXtyZXR1cm4hKHQmJlwiZnVuY3Rpb25cIj09dHlwZW9mIHQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KX0pKX1mdW5jdGlvbiBUdCh0KXt2b2lkIDA9PT10JiYodD17fSk7dmFyIGU9dCxuPWUuZGVmYXVsdE1vZGlmaWVycyxvPXZvaWQgMD09PW4/W106bixpPWUuZGVmYXVsdE9wdGlvbnMscj12b2lkIDA9PT1pP0N0Omk7cmV0dXJuIGZ1bmN0aW9uKHQsZSxuKXt2b2lkIDA9PT1uJiYobj1yKTt2YXIgaSxzLGE9e3BsYWNlbWVudDpcImJvdHRvbVwiLG9yZGVyZWRNb2RpZmllcnM6W10sb3B0aW9uczpPYmplY3QuYXNzaWduKHt9LEN0LHIpLG1vZGlmaWVyc0RhdGE6e30sZWxlbWVudHM6e3JlZmVyZW5jZTp0LHBvcHBlcjplfSxhdHRyaWJ1dGVzOnt9LHN0eWxlczp7fX0sYz1bXSxsPSExLHU9e3N0YXRlOmEsc2V0T3B0aW9uczpmdW5jdGlvbihuKXt2YXIgaT1cImZ1bmN0aW9uXCI9PXR5cGVvZiBuP24oYS5vcHRpb25zKTpuO2QoKSxhLm9wdGlvbnM9T2JqZWN0LmFzc2lnbih7fSxyLGEub3B0aW9ucyxpKSxhLnNjcm9sbFBhcmVudHM9e3JlZmVyZW5jZTpOKHQpP2R0KHQpOnQuY29udGV4dEVsZW1lbnQ/ZHQodC5jb250ZXh0RWxlbWVudCk6W10scG9wcGVyOmR0KGUpfTt2YXIgcyxsLHA9ZnVuY3Rpb24odCl7dmFyIGU9RHQodCk7cmV0dXJuIFMucmVkdWNlKChmdW5jdGlvbih0LG4pe3JldHVybiB0LmNvbmNhdChlLmZpbHRlcigoZnVuY3Rpb24odCl7cmV0dXJuIHQucGhhc2U9PT1ufSkpKX0pLFtdKX0oKHM9W10uY29uY2F0KG8sYS5vcHRpb25zLm1vZGlmaWVycyksbD1zLnJlZHVjZSgoZnVuY3Rpb24odCxlKXt2YXIgbj10W2UubmFtZV07cmV0dXJuIHRbZS5uYW1lXT1uP09iamVjdC5hc3NpZ24oe30sbixlLHtvcHRpb25zOk9iamVjdC5hc3NpZ24oe30sbi5vcHRpb25zLGUub3B0aW9ucyksZGF0YTpPYmplY3QuYXNzaWduKHt9LG4uZGF0YSxlLmRhdGEpfSk6ZSx0fSkse30pLE9iamVjdC5rZXlzKGwpLm1hcCgoZnVuY3Rpb24odCl7cmV0dXJuIGxbdF19KSkpKTtyZXR1cm4gYS5vcmRlcmVkTW9kaWZpZXJzPXAuZmlsdGVyKChmdW5jdGlvbih0KXtyZXR1cm4gdC5lbmFibGVkfSkpLGEub3JkZXJlZE1vZGlmaWVycy5mb3JFYWNoKChmdW5jdGlvbih0KXt2YXIgZT10Lm5hbWUsbj10Lm9wdGlvbnMsbz12b2lkIDA9PT1uP3t9Om4saT10LmVmZmVjdDtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBpKXt2YXIgcj1pKHtzdGF0ZTphLG5hbWU6ZSxpbnN0YW5jZTp1LG9wdGlvbnM6b30pO2MucHVzaChyfHxmdW5jdGlvbigpe30pfX0pKSx1LnVwZGF0ZSgpfSxmb3JjZVVwZGF0ZTpmdW5jdGlvbigpe2lmKCFsKXt2YXIgdD1hLmVsZW1lbnRzLGU9dC5yZWZlcmVuY2Usbj10LnBvcHBlcjtpZihTdChlLG4pKXthLnJlY3RzPXtyZWZlcmVuY2U6T3QoZSxWKG4pLFwiZml4ZWRcIj09PWEub3B0aW9ucy5zdHJhdGVneSkscG9wcGVyOk0obil9LGEucmVzZXQ9ITEsYS5wbGFjZW1lbnQ9YS5vcHRpb25zLnBsYWNlbWVudCxhLm9yZGVyZWRNb2RpZmllcnMuZm9yRWFjaCgoZnVuY3Rpb24odCl7cmV0dXJuIGEubW9kaWZpZXJzRGF0YVt0Lm5hbWVdPU9iamVjdC5hc3NpZ24oe30sdC5kYXRhKX0pKTtmb3IodmFyIG89MDtvPGEub3JkZXJlZE1vZGlmaWVycy5sZW5ndGg7bysrKWlmKCEwIT09YS5yZXNldCl7dmFyIGk9YS5vcmRlcmVkTW9kaWZpZXJzW29dLHI9aS5mbixzPWkub3B0aW9ucyxjPXZvaWQgMD09PXM/e306cyxkPWkubmFtZTtcImZ1bmN0aW9uXCI9PXR5cGVvZiByJiYoYT1yKHtzdGF0ZTphLG9wdGlvbnM6YyxuYW1lOmQsaW5zdGFuY2U6dX0pfHxhKX1lbHNlIGEucmVzZXQ9ITEsbz0tMX19fSx1cGRhdGU6KGk9ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IFByb21pc2UoKGZ1bmN0aW9uKHQpe3UuZm9yY2VVcGRhdGUoKSx0KGEpfSkpfSxmdW5jdGlvbigpe3JldHVybiBzfHwocz1uZXcgUHJvbWlzZSgoZnVuY3Rpb24odCl7UHJvbWlzZS5yZXNvbHZlKCkudGhlbigoZnVuY3Rpb24oKXtzPXZvaWQgMCx0KGkoKSl9KSl9KSkpLHN9KSxkZXN0cm95OmZ1bmN0aW9uKCl7ZCgpLGw9ITB9fTtpZighU3QodCxlKSlyZXR1cm4gdTtmdW5jdGlvbiBkKCl7Yy5mb3JFYWNoKChmdW5jdGlvbih0KXtyZXR1cm4gdCgpfSkpLGM9W119cmV0dXJuIHUuc2V0T3B0aW9ucyhuKS50aGVuKChmdW5jdGlvbih0KXshbCYmbi5vbkZpcnN0VXBkYXRlJiZuLm9uRmlyc3RVcGRhdGUodCl9KSksdX19dmFyIFJ0PVR0KCksTnQ9VHQoe2RlZmF1bHRNb2RpZmllcnM6W250LEV0LHR0LHgsYnQsZ3Qsd3QsWSx5dF19KSxJdD1UdCh7ZGVmYXVsdE1vZGlmaWVyczpbbnQsRXQsdHQseF19KTtjb25zdCBBdD1cInRyYW5zaXRpb25lbmRcIix4dD10PT57bGV0IGU9dC5nZXRBdHRyaWJ1dGUoXCJkYXRhLWJzLXRhcmdldFwiKTtpZighZXx8XCIjXCI9PT1lKXtsZXQgbj10LmdldEF0dHJpYnV0ZShcImhyZWZcIik7aWYoIW58fCFuLmluY2x1ZGVzKFwiI1wiKSYmIW4uc3RhcnRzV2l0aChcIi5cIikpcmV0dXJuIG51bGw7bi5pbmNsdWRlcyhcIiNcIikmJiFuLnN0YXJ0c1dpdGgoXCIjXCIpJiYobj1gIyR7bi5zcGxpdChcIiNcIilbMV19YCksZT1uJiZcIiNcIiE9PW4/bi50cmltKCk6bnVsbH1yZXR1cm4gZX0sTHQ9dD0+e2NvbnN0IGU9eHQodCk7cmV0dXJuIGUmJmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoZSk/ZTpudWxsfSxQdD10PT57Y29uc3QgZT14dCh0KTtyZXR1cm4gZT9kb2N1bWVudC5xdWVyeVNlbGVjdG9yKGUpOm51bGx9LGt0PXQ9Pnt0LmRpc3BhdGNoRXZlbnQobmV3IEV2ZW50KEF0KSl9LGp0PXQ9PiEoIXR8fFwib2JqZWN0XCIhPXR5cGVvZiB0KSYmKHZvaWQgMCE9PXQuanF1ZXJ5JiYodD10WzBdKSx2b2lkIDAhPT10Lm5vZGVUeXBlKSxIdD10PT5qdCh0KT90LmpxdWVyeT90WzBdOnQ6XCJzdHJpbmdcIj09dHlwZW9mIHQmJnQubGVuZ3RoPjA/ZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0KTpudWxsLE10PSh0LGUsbik9PntPYmplY3Qua2V5cyhuKS5mb3JFYWNoKChvPT57Y29uc3QgaT1uW29dLHI9ZVtvXSxzPXImJmp0KHIpP1wiZWxlbWVudFwiOm51bGw9PShhPXIpP2Ake2F9YDp7fS50b1N0cmluZy5jYWxsKGEpLm1hdGNoKC9cXHMoW2Etel0rKS9pKVsxXS50b0xvd2VyQ2FzZSgpO3ZhciBhO2lmKCFuZXcgUmVnRXhwKGkpLnRlc3QocykpdGhyb3cgbmV3IFR5cGVFcnJvcihgJHt0LnRvVXBwZXJDYXNlKCl9OiBPcHRpb24gXCIke299XCIgcHJvdmlkZWQgdHlwZSBcIiR7c31cIiBidXQgZXhwZWN0ZWQgdHlwZSBcIiR7aX1cIi5gKX0pKX0sQnQ9dD0+ISghanQodCl8fDA9PT10LmdldENsaWVudFJlY3RzKCkubGVuZ3RoKSYmXCJ2aXNpYmxlXCI9PT1nZXRDb21wdXRlZFN0eWxlKHQpLmdldFByb3BlcnR5VmFsdWUoXCJ2aXNpYmlsaXR5XCIpLEd0PXQ9PiF0fHx0Lm5vZGVUeXBlIT09Tm9kZS5FTEVNRU5UX05PREV8fCEhdC5jbGFzc0xpc3QuY29udGFpbnMoXCJkaXNhYmxlZFwiKXx8KHZvaWQgMCE9PXQuZGlzYWJsZWQ/dC5kaXNhYmxlZDp0Lmhhc0F0dHJpYnV0ZShcImRpc2FibGVkXCIpJiZcImZhbHNlXCIhPT10LmdldEF0dHJpYnV0ZShcImRpc2FibGVkXCIpKSxXdD10PT57aWYoIWRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5hdHRhY2hTaGFkb3cpcmV0dXJuIG51bGw7aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgdC5nZXRSb290Tm9kZSl7Y29uc3QgZT10LmdldFJvb3ROb2RlKCk7cmV0dXJuIGUgaW5zdGFuY2VvZiBTaGFkb3dSb290P2U6bnVsbH1yZXR1cm4gdCBpbnN0YW5jZW9mIFNoYWRvd1Jvb3Q/dDp0LnBhcmVudE5vZGU/V3QodC5wYXJlbnROb2RlKTpudWxsfSxGdD0oKT0+e30sVXQ9dD0+e3Qub2Zmc2V0SGVpZ2h0fSx6dD0oKT0+e2NvbnN0e2pRdWVyeTp0fT13aW5kb3c7cmV0dXJuIHQmJiFkb2N1bWVudC5ib2R5Lmhhc0F0dHJpYnV0ZShcImRhdGEtYnMtbm8tanF1ZXJ5XCIpP3Q6bnVsbH0sVnQ9W10sJHQ9KCk9PlwicnRsXCI9PT1kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuZGlyLHF0PXQ9Pnt2YXIgZTtlPSgpPT57Y29uc3QgZT16dCgpO2lmKGUpe2NvbnN0IG49dC5OQU1FLG89ZS5mbltuXTtlLmZuW25dPXQualF1ZXJ5SW50ZXJmYWNlLGUuZm5bbl0uQ29uc3RydWN0b3I9dCxlLmZuW25dLm5vQ29uZmxpY3Q9KCk9PihlLmZuW25dPW8sdC5qUXVlcnlJbnRlcmZhY2UpfX0sXCJsb2FkaW5nXCI9PT1kb2N1bWVudC5yZWFkeVN0YXRlPyhWdC5sZW5ndGh8fGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJET01Db250ZW50TG9hZGVkXCIsKCgpPT57VnQuZm9yRWFjaCgodD0+dCgpKSl9KSksVnQucHVzaChlKSk6ZSgpfSxLdD10PT57XCJmdW5jdGlvblwiPT10eXBlb2YgdCYmdCgpfSxYdD0odCxlLG49ITApPT57aWYoIW4pcmV0dXJuIHZvaWQgS3QodCk7Y29uc3Qgbz0odD0+e2lmKCF0KXJldHVybiAwO2xldHt0cmFuc2l0aW9uRHVyYXRpb246ZSx0cmFuc2l0aW9uRGVsYXk6bn09d2luZG93LmdldENvbXB1dGVkU3R5bGUodCk7Y29uc3Qgbz1OdW1iZXIucGFyc2VGbG9hdChlKSxpPU51bWJlci5wYXJzZUZsb2F0KG4pO3JldHVybiBvfHxpPyhlPWUuc3BsaXQoXCIsXCIpWzBdLG49bi5zcGxpdChcIixcIilbMF0sMWUzKihOdW1iZXIucGFyc2VGbG9hdChlKStOdW1iZXIucGFyc2VGbG9hdChuKSkpOjB9KShlKSs1O2xldCBpPSExO2NvbnN0IHI9KHt0YXJnZXQ6bn0pPT57bj09PWUmJihpPSEwLGUucmVtb3ZlRXZlbnRMaXN0ZW5lcihBdCxyKSxLdCh0KSl9O2UuYWRkRXZlbnRMaXN0ZW5lcihBdCxyKSxzZXRUaW1lb3V0KCgoKT0+e2l8fGt0KGUpfSksbyl9LFl0PSh0LGUsbixvKT0+e2xldCBpPXQuaW5kZXhPZihlKTtpZigtMT09PWkpcmV0dXJuIHRbIW4mJm8/dC5sZW5ndGgtMTowXTtjb25zdCByPXQubGVuZ3RoO3JldHVybiBpKz1uPzE6LTEsbyYmKGk9KGkrciklciksdFtNYXRoLm1heCgwLE1hdGgubWluKGksci0xKSldfSxRdD0vW14uXSooPz1cXC4uKilcXC58LiovLEp0PS9cXC4uKi8sWnQ9Lzo6XFxkKyQvLHRlPXt9O2xldCBlZT0xO2NvbnN0IG5lPXttb3VzZWVudGVyOlwibW91c2VvdmVyXCIsbW91c2VsZWF2ZTpcIm1vdXNlb3V0XCJ9LG9lPS9eKG1vdXNlZW50ZXJ8bW91c2VsZWF2ZSkvaSxpZT1uZXcgU2V0KFtcImNsaWNrXCIsXCJkYmxjbGlja1wiLFwibW91c2V1cFwiLFwibW91c2Vkb3duXCIsXCJjb250ZXh0bWVudVwiLFwibW91c2V3aGVlbFwiLFwiRE9NTW91c2VTY3JvbGxcIixcIm1vdXNlb3ZlclwiLFwibW91c2VvdXRcIixcIm1vdXNlbW92ZVwiLFwic2VsZWN0c3RhcnRcIixcInNlbGVjdGVuZFwiLFwia2V5ZG93blwiLFwia2V5cHJlc3NcIixcImtleXVwXCIsXCJvcmllbnRhdGlvbmNoYW5nZVwiLFwidG91Y2hzdGFydFwiLFwidG91Y2htb3ZlXCIsXCJ0b3VjaGVuZFwiLFwidG91Y2hjYW5jZWxcIixcInBvaW50ZXJkb3duXCIsXCJwb2ludGVybW92ZVwiLFwicG9pbnRlcnVwXCIsXCJwb2ludGVybGVhdmVcIixcInBvaW50ZXJjYW5jZWxcIixcImdlc3R1cmVzdGFydFwiLFwiZ2VzdHVyZWNoYW5nZVwiLFwiZ2VzdHVyZWVuZFwiLFwiZm9jdXNcIixcImJsdXJcIixcImNoYW5nZVwiLFwicmVzZXRcIixcInNlbGVjdFwiLFwic3VibWl0XCIsXCJmb2N1c2luXCIsXCJmb2N1c291dFwiLFwibG9hZFwiLFwidW5sb2FkXCIsXCJiZWZvcmV1bmxvYWRcIixcInJlc2l6ZVwiLFwibW92ZVwiLFwiRE9NQ29udGVudExvYWRlZFwiLFwicmVhZHlzdGF0ZWNoYW5nZVwiLFwiZXJyb3JcIixcImFib3J0XCIsXCJzY3JvbGxcIl0pO2Z1bmN0aW9uIHJlKHQsZSl7cmV0dXJuIGUmJmAke2V9Ojoke2VlKyt9YHx8dC51aWRFdmVudHx8ZWUrK31mdW5jdGlvbiBzZSh0KXtjb25zdCBlPXJlKHQpO3JldHVybiB0LnVpZEV2ZW50PWUsdGVbZV09dGVbZV18fHt9LHRlW2VdfWZ1bmN0aW9uIGFlKHQsZSxuPW51bGwpe2NvbnN0IG89T2JqZWN0LmtleXModCk7Zm9yKGxldCBpPTAscj1vLmxlbmd0aDtpPHI7aSsrKXtjb25zdCByPXRbb1tpXV07aWYoci5vcmlnaW5hbEhhbmRsZXI9PT1lJiZyLmRlbGVnYXRpb25TZWxlY3Rvcj09PW4pcmV0dXJuIHJ9cmV0dXJuIG51bGx9ZnVuY3Rpb24gY2UodCxlLG4pe2NvbnN0IG89XCJzdHJpbmdcIj09dHlwZW9mIGUsaT1vP246ZTtsZXQgcj1kZSh0KTtyZXR1cm4gaWUuaGFzKHIpfHwocj10KSxbbyxpLHJdfWZ1bmN0aW9uIGxlKHQsZSxuLG8saSl7aWYoXCJzdHJpbmdcIiE9dHlwZW9mIGV8fCF0KXJldHVybjtpZihufHwobj1vLG89bnVsbCksb2UudGVzdChlKSl7Y29uc3QgdD10PT5mdW5jdGlvbihlKXtpZighZS5yZWxhdGVkVGFyZ2V0fHxlLnJlbGF0ZWRUYXJnZXQhPT1lLmRlbGVnYXRlVGFyZ2V0JiYhZS5kZWxlZ2F0ZVRhcmdldC5jb250YWlucyhlLnJlbGF0ZWRUYXJnZXQpKXJldHVybiB0LmNhbGwodGhpcyxlKX07bz9vPXQobyk6bj10KG4pfWNvbnN0W3IscyxhXT1jZShlLG4sbyksYz1zZSh0KSxsPWNbYV18fChjW2FdPXt9KSx1PWFlKGwscyxyP246bnVsbCk7aWYodSlyZXR1cm4gdm9pZCh1Lm9uZU9mZj11Lm9uZU9mZiYmaSk7Y29uc3QgZD1yZShzLGUucmVwbGFjZShRdCxcIlwiKSkscD1yP2Z1bmN0aW9uKHQsZSxuKXtyZXR1cm4gZnVuY3Rpb24gbyhpKXtjb25zdCByPXQucXVlcnlTZWxlY3RvckFsbChlKTtmb3IobGV0e3RhcmdldDpzfT1pO3MmJnMhPT10aGlzO3M9cy5wYXJlbnROb2RlKWZvcihsZXQgYT1yLmxlbmd0aDthLS07KWlmKHJbYV09PT1zKXJldHVybiBpLmRlbGVnYXRlVGFyZ2V0PXMsby5vbmVPZmYmJnBlLm9mZih0LGkudHlwZSxlLG4pLG4uYXBwbHkocyxbaV0pO3JldHVybiBudWxsfX0odCxuLG8pOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIGZ1bmN0aW9uIG4obyl7cmV0dXJuIG8uZGVsZWdhdGVUYXJnZXQ9dCxuLm9uZU9mZiYmcGUub2ZmKHQsby50eXBlLGUpLGUuYXBwbHkodCxbb10pfX0odCxuKTtwLmRlbGVnYXRpb25TZWxlY3Rvcj1yP246bnVsbCxwLm9yaWdpbmFsSGFuZGxlcj1zLHAub25lT2ZmPWkscC51aWRFdmVudD1kLGxbZF09cCx0LmFkZEV2ZW50TGlzdGVuZXIoYSxwLHIpfWZ1bmN0aW9uIHVlKHQsZSxuLG8saSl7Y29uc3Qgcj1hZShlW25dLG8saSk7ciYmKHQucmVtb3ZlRXZlbnRMaXN0ZW5lcihuLHIsQm9vbGVhbihpKSksZGVsZXRlIGVbbl1bci51aWRFdmVudF0pfWZ1bmN0aW9uIGRlKHQpe3JldHVybiB0PXQucmVwbGFjZShKdCxcIlwiKSxuZVt0XXx8dH1jb25zdCBwZT17b24odCxlLG4sbyl7bGUodCxlLG4sbywhMSl9LG9uZSh0LGUsbixvKXtsZSh0LGUsbixvLCEwKX0sb2ZmKHQsZSxuLG8pe2lmKFwic3RyaW5nXCIhPXR5cGVvZiBlfHwhdClyZXR1cm47Y29uc3RbaSxyLHNdPWNlKGUsbixvKSxhPXMhPT1lLGM9c2UodCksbD1lLnN0YXJ0c1dpdGgoXCIuXCIpO2lmKHZvaWQgMCE9PXIpe2lmKCFjfHwhY1tzXSlyZXR1cm47cmV0dXJuIHZvaWQgdWUodCxjLHMscixpP246bnVsbCl9bCYmT2JqZWN0LmtleXMoYykuZm9yRWFjaCgobj0+eyFmdW5jdGlvbih0LGUsbixvKXtjb25zdCBpPWVbbl18fHt9O09iamVjdC5rZXlzKGkpLmZvckVhY2goKHI9PntpZihyLmluY2x1ZGVzKG8pKXtjb25zdCBvPWlbcl07dWUodCxlLG4sby5vcmlnaW5hbEhhbmRsZXIsby5kZWxlZ2F0aW9uU2VsZWN0b3IpfX0pKX0odCxjLG4sZS5zbGljZSgxKSl9KSk7Y29uc3QgdT1jW3NdfHx7fTtPYmplY3Qua2V5cyh1KS5mb3JFYWNoKChuPT57Y29uc3Qgbz1uLnJlcGxhY2UoWnQsXCJcIik7aWYoIWF8fGUuaW5jbHVkZXMobykpe2NvbnN0IGU9dVtuXTt1ZSh0LGMscyxlLm9yaWdpbmFsSGFuZGxlcixlLmRlbGVnYXRpb25TZWxlY3Rvcil9fSkpfSx0cmlnZ2VyKHQsZSxuKXtpZihcInN0cmluZ1wiIT10eXBlb2YgZXx8IXQpcmV0dXJuIG51bGw7Y29uc3Qgbz16dCgpLGk9ZGUoZSkscj1lIT09aSxzPWllLmhhcyhpKTtsZXQgYSxjPSEwLGw9ITAsdT0hMSxkPW51bGw7cmV0dXJuIHImJm8mJihhPW8uRXZlbnQoZSxuKSxvKHQpLnRyaWdnZXIoYSksYz0hYS5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpLGw9IWEuaXNJbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWQoKSx1PWEuaXNEZWZhdWx0UHJldmVudGVkKCkpLHM/KGQ9ZG9jdW1lbnQuY3JlYXRlRXZlbnQoXCJIVE1MRXZlbnRzXCIpLGQuaW5pdEV2ZW50KGksYywhMCkpOmQ9bmV3IEN1c3RvbUV2ZW50KGUse2J1YmJsZXM6YyxjYW5jZWxhYmxlOiEwfSksdm9pZCAwIT09biYmT2JqZWN0LmtleXMobikuZm9yRWFjaCgodD0+e09iamVjdC5kZWZpbmVQcm9wZXJ0eShkLHQse2dldDooKT0+blt0XX0pfSkpLHUmJmQucHJldmVudERlZmF1bHQoKSxsJiZ0LmRpc3BhdGNoRXZlbnQoZCksZC5kZWZhdWx0UHJldmVudGVkJiZ2b2lkIDAhPT1hJiZhLnByZXZlbnREZWZhdWx0KCksZH19LGhlPW5ldyBNYXAsZmU9e3NldCh0LGUsbil7aGUuaGFzKHQpfHxoZS5zZXQodCxuZXcgTWFwKTtjb25zdCBvPWhlLmdldCh0KTtvLmhhcyhlKXx8MD09PW8uc2l6ZT9vLnNldChlLG4pOmNvbnNvbGUuZXJyb3IoYEJvb3RzdHJhcCBkb2Vzbid0IGFsbG93IG1vcmUgdGhhbiBvbmUgaW5zdGFuY2UgcGVyIGVsZW1lbnQuIEJvdW5kIGluc3RhbmNlOiAke0FycmF5LmZyb20oby5rZXlzKCkpWzBdfS5gKX0sZ2V0Oih0LGUpPT5oZS5oYXModCkmJmhlLmdldCh0KS5nZXQoZSl8fG51bGwscmVtb3ZlKHQsZSl7aWYoIWhlLmhhcyh0KSlyZXR1cm47Y29uc3Qgbj1oZS5nZXQodCk7bi5kZWxldGUoZSksMD09PW4uc2l6ZSYmaGUuZGVsZXRlKHQpfX07Y2xhc3MgbWV7Y29uc3RydWN0b3IodCl7KHQ9SHQodCkpJiYodGhpcy5fZWxlbWVudD10LGZlLnNldCh0aGlzLl9lbGVtZW50LHRoaXMuY29uc3RydWN0b3IuREFUQV9LRVksdGhpcykpfWRpc3Bvc2UoKXtmZS5yZW1vdmUodGhpcy5fZWxlbWVudCx0aGlzLmNvbnN0cnVjdG9yLkRBVEFfS0VZKSxwZS5vZmYodGhpcy5fZWxlbWVudCx0aGlzLmNvbnN0cnVjdG9yLkVWRU5UX0tFWSksT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGhpcykuZm9yRWFjaCgodD0+e3RoaXNbdF09bnVsbH0pKX1fcXVldWVDYWxsYmFjayh0LGUsbj0hMCl7WHQodCxlLG4pfXN0YXRpYyBnZXRJbnN0YW5jZSh0KXtyZXR1cm4gZmUuZ2V0KEh0KHQpLHRoaXMuREFUQV9LRVkpfXN0YXRpYyBnZXRPckNyZWF0ZUluc3RhbmNlKHQsZT17fSl7cmV0dXJuIHRoaXMuZ2V0SW5zdGFuY2UodCl8fG5ldyB0aGlzKHQsXCJvYmplY3RcIj09dHlwZW9mIGU/ZTpudWxsKX1zdGF0aWMgZ2V0IFZFUlNJT04oKXtyZXR1cm5cIjUuMS4zXCJ9c3RhdGljIGdldCBOQU1FKCl7dGhyb3cgbmV3IEVycm9yKCdZb3UgaGF2ZSB0byBpbXBsZW1lbnQgdGhlIHN0YXRpYyBtZXRob2QgXCJOQU1FXCIsIGZvciBlYWNoIGNvbXBvbmVudCEnKX1zdGF0aWMgZ2V0IERBVEFfS0VZKCl7cmV0dXJuYGJzLiR7dGhpcy5OQU1FfWB9c3RhdGljIGdldCBFVkVOVF9LRVkoKXtyZXR1cm5gLiR7dGhpcy5EQVRBX0tFWX1gfX1jb25zdCBnZT0odCxlPVwiaGlkZVwiKT0+e2NvbnN0IG49YGNsaWNrLmRpc21pc3Mke3QuRVZFTlRfS0VZfWAsbz10Lk5BTUU7cGUub24oZG9jdW1lbnQsbixgW2RhdGEtYnMtZGlzbWlzcz1cIiR7b31cIl1gLChmdW5jdGlvbihuKXtpZihbXCJBXCIsXCJBUkVBXCJdLmluY2x1ZGVzKHRoaXMudGFnTmFtZSkmJm4ucHJldmVudERlZmF1bHQoKSxHdCh0aGlzKSlyZXR1cm47Y29uc3QgaT1QdCh0aGlzKXx8dGhpcy5jbG9zZXN0KGAuJHtvfWApO3QuZ2V0T3JDcmVhdGVJbnN0YW5jZShpKVtlXSgpfSkpfTtjbGFzcyBfZSBleHRlbmRzIG1le3N0YXRpYyBnZXQgTkFNRSgpe3JldHVyblwiYWxlcnRcIn1jbG9zZSgpe2lmKHBlLnRyaWdnZXIodGhpcy5fZWxlbWVudCxcImNsb3NlLmJzLmFsZXJ0XCIpLmRlZmF1bHRQcmV2ZW50ZWQpcmV0dXJuO3RoaXMuX2VsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZShcInNob3dcIik7Y29uc3QgdD10aGlzLl9lbGVtZW50LmNsYXNzTGlzdC5jb250YWlucyhcImZhZGVcIik7dGhpcy5fcXVldWVDYWxsYmFjaygoKCk9PnRoaXMuX2Rlc3Ryb3lFbGVtZW50KCkpLHRoaXMuX2VsZW1lbnQsdCl9X2Rlc3Ryb3lFbGVtZW50KCl7dGhpcy5fZWxlbWVudC5yZW1vdmUoKSxwZS50cmlnZ2VyKHRoaXMuX2VsZW1lbnQsXCJjbG9zZWQuYnMuYWxlcnRcIiksdGhpcy5kaXNwb3NlKCl9c3RhdGljIGpRdWVyeUludGVyZmFjZSh0KXtyZXR1cm4gdGhpcy5lYWNoKChmdW5jdGlvbigpe2NvbnN0IGU9X2UuZ2V0T3JDcmVhdGVJbnN0YW5jZSh0aGlzKTtpZihcInN0cmluZ1wiPT10eXBlb2YgdCl7aWYodm9pZCAwPT09ZVt0XXx8dC5zdGFydHNXaXRoKFwiX1wiKXx8XCJjb25zdHJ1Y3RvclwiPT09dCl0aHJvdyBuZXcgVHlwZUVycm9yKGBObyBtZXRob2QgbmFtZWQgXCIke3R9XCJgKTtlW3RdKHRoaXMpfX0pKX19Z2UoX2UsXCJjbG9zZVwiKSxxdChfZSk7Y29uc3QgdmU9J1tkYXRhLWJzLXRvZ2dsZT1cImJ1dHRvblwiXSc7Y2xhc3MgeWUgZXh0ZW5kcyBtZXtzdGF0aWMgZ2V0IE5BTUUoKXtyZXR1cm5cImJ1dHRvblwifXRvZ2dsZSgpe3RoaXMuX2VsZW1lbnQuc2V0QXR0cmlidXRlKFwiYXJpYS1wcmVzc2VkXCIsdGhpcy5fZWxlbWVudC5jbGFzc0xpc3QudG9nZ2xlKFwiYWN0aXZlXCIpKX1zdGF0aWMgalF1ZXJ5SW50ZXJmYWNlKHQpe3JldHVybiB0aGlzLmVhY2goKGZ1bmN0aW9uKCl7Y29uc3QgZT15ZS5nZXRPckNyZWF0ZUluc3RhbmNlKHRoaXMpO1widG9nZ2xlXCI9PT10JiZlW3RdKCl9KSl9fWZ1bmN0aW9uIGJlKHQpe3JldHVyblwidHJ1ZVwiPT09dHx8XCJmYWxzZVwiIT09dCYmKHQ9PT1OdW1iZXIodCkudG9TdHJpbmcoKT9OdW1iZXIodCk6XCJcIj09PXR8fFwibnVsbFwiPT09dD9udWxsOnQpfWZ1bmN0aW9uIEVlKHQpe3JldHVybiB0LnJlcGxhY2UoL1tBLVpdL2csKHQ9PmAtJHt0LnRvTG93ZXJDYXNlKCl9YCkpfXBlLm9uKGRvY3VtZW50LFwiY2xpY2suYnMuYnV0dG9uLmRhdGEtYXBpXCIsdmUsKHQ9Pnt0LnByZXZlbnREZWZhdWx0KCk7Y29uc3QgZT10LnRhcmdldC5jbG9zZXN0KHZlKTt5ZS5nZXRPckNyZWF0ZUluc3RhbmNlKGUpLnRvZ2dsZSgpfSkpLHF0KHllKTtjb25zdCB3ZT17c2V0RGF0YUF0dHJpYnV0ZSh0LGUsbil7dC5zZXRBdHRyaWJ1dGUoYGRhdGEtYnMtJHtFZShlKX1gLG4pfSxyZW1vdmVEYXRhQXR0cmlidXRlKHQsZSl7dC5yZW1vdmVBdHRyaWJ1dGUoYGRhdGEtYnMtJHtFZShlKX1gKX0sZ2V0RGF0YUF0dHJpYnV0ZXModCl7aWYoIXQpcmV0dXJue307Y29uc3QgZT17fTtyZXR1cm4gT2JqZWN0LmtleXModC5kYXRhc2V0KS5maWx0ZXIoKHQ9PnQuc3RhcnRzV2l0aChcImJzXCIpKSkuZm9yRWFjaCgobj0+e2xldCBvPW4ucmVwbGFjZSgvXmJzLyxcIlwiKTtvPW8uY2hhckF0KDApLnRvTG93ZXJDYXNlKCkrby5zbGljZSgxLG8ubGVuZ3RoKSxlW29dPWJlKHQuZGF0YXNldFtuXSl9KSksZX0sZ2V0RGF0YUF0dHJpYnV0ZToodCxlKT0+YmUodC5nZXRBdHRyaWJ1dGUoYGRhdGEtYnMtJHtFZShlKX1gKSksb2Zmc2V0KHQpe2NvbnN0IGU9dC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtyZXR1cm57dG9wOmUudG9wK3dpbmRvdy5wYWdlWU9mZnNldCxsZWZ0OmUubGVmdCt3aW5kb3cucGFnZVhPZmZzZXR9fSxwb3NpdGlvbjp0PT4oe3RvcDp0Lm9mZnNldFRvcCxsZWZ0OnQub2Zmc2V0TGVmdH0pfSxPZT17ZmluZDoodCxlPWRvY3VtZW50LmRvY3VtZW50RWxlbWVudCk9PltdLmNvbmNhdCguLi5FbGVtZW50LnByb3RvdHlwZS5xdWVyeVNlbGVjdG9yQWxsLmNhbGwoZSx0KSksZmluZE9uZToodCxlPWRvY3VtZW50LmRvY3VtZW50RWxlbWVudCk9PkVsZW1lbnQucHJvdG90eXBlLnF1ZXJ5U2VsZWN0b3IuY2FsbChlLHQpLGNoaWxkcmVuOih0LGUpPT5bXS5jb25jYXQoLi4udC5jaGlsZHJlbikuZmlsdGVyKCh0PT50Lm1hdGNoZXMoZSkpKSxwYXJlbnRzKHQsZSl7Y29uc3Qgbj1bXTtsZXQgbz10LnBhcmVudE5vZGU7Zm9yKDtvJiZvLm5vZGVUeXBlPT09Tm9kZS5FTEVNRU5UX05PREUmJjMhPT1vLm5vZGVUeXBlOylvLm1hdGNoZXMoZSkmJm4ucHVzaChvKSxvPW8ucGFyZW50Tm9kZTtyZXR1cm4gbn0scHJldih0LGUpe2xldCBuPXQucHJldmlvdXNFbGVtZW50U2libGluZztmb3IoO247KXtpZihuLm1hdGNoZXMoZSkpcmV0dXJuW25dO249bi5wcmV2aW91c0VsZW1lbnRTaWJsaW5nfXJldHVybltdfSxuZXh0KHQsZSl7bGV0IG49dC5uZXh0RWxlbWVudFNpYmxpbmc7Zm9yKDtuOyl7aWYobi5tYXRjaGVzKGUpKXJldHVybltuXTtuPW4ubmV4dEVsZW1lbnRTaWJsaW5nfXJldHVybltdfSxmb2N1c2FibGVDaGlsZHJlbih0KXtjb25zdCBlPVtcImFcIixcImJ1dHRvblwiLFwiaW5wdXRcIixcInRleHRhcmVhXCIsXCJzZWxlY3RcIixcImRldGFpbHNcIixcIlt0YWJpbmRleF1cIiwnW2NvbnRlbnRlZGl0YWJsZT1cInRydWVcIl0nXS5tYXAoKHQ9PmAke3R9Om5vdChbdGFiaW5kZXhePVwiLVwiXSlgKSkuam9pbihcIiwgXCIpO3JldHVybiB0aGlzLmZpbmQoZSx0KS5maWx0ZXIoKHQ9PiFHdCh0KSYmQnQodCkpKX19LERlPVwiY2Fyb3VzZWxcIixDZT17aW50ZXJ2YWw6NWUzLGtleWJvYXJkOiEwLHNsaWRlOiExLHBhdXNlOlwiaG92ZXJcIix3cmFwOiEwLHRvdWNoOiEwfSxTZT17aW50ZXJ2YWw6XCIobnVtYmVyfGJvb2xlYW4pXCIsa2V5Ym9hcmQ6XCJib29sZWFuXCIsc2xpZGU6XCIoYm9vbGVhbnxzdHJpbmcpXCIscGF1c2U6XCIoc3RyaW5nfGJvb2xlYW4pXCIsd3JhcDpcImJvb2xlYW5cIix0b3VjaDpcImJvb2xlYW5cIn0sVGU9XCJuZXh0XCIsUmU9XCJwcmV2XCIsTmU9XCJsZWZ0XCIsSWU9XCJyaWdodFwiLEFlPXtBcnJvd0xlZnQ6SWUsQXJyb3dSaWdodDpOZX0seGU9XCJzbGlkLmJzLmNhcm91c2VsXCIsTGU9XCJhY3RpdmVcIixQZT1cIi5hY3RpdmUuY2Fyb3VzZWwtaXRlbVwiO2NsYXNzIGtlIGV4dGVuZHMgbWV7Y29uc3RydWN0b3IodCxlKXtzdXBlcih0KSx0aGlzLl9pdGVtcz1udWxsLHRoaXMuX2ludGVydmFsPW51bGwsdGhpcy5fYWN0aXZlRWxlbWVudD1udWxsLHRoaXMuX2lzUGF1c2VkPSExLHRoaXMuX2lzU2xpZGluZz0hMSx0aGlzLnRvdWNoVGltZW91dD1udWxsLHRoaXMudG91Y2hTdGFydFg9MCx0aGlzLnRvdWNoRGVsdGFYPTAsdGhpcy5fY29uZmlnPXRoaXMuX2dldENvbmZpZyhlKSx0aGlzLl9pbmRpY2F0b3JzRWxlbWVudD1PZS5maW5kT25lKFwiLmNhcm91c2VsLWluZGljYXRvcnNcIix0aGlzLl9lbGVtZW50KSx0aGlzLl90b3VjaFN1cHBvcnRlZD1cIm9udG91Y2hzdGFydFwiaW4gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50fHxuYXZpZ2F0b3IubWF4VG91Y2hQb2ludHM+MCx0aGlzLl9wb2ludGVyRXZlbnQ9Qm9vbGVhbih3aW5kb3cuUG9pbnRlckV2ZW50KSx0aGlzLl9hZGRFdmVudExpc3RlbmVycygpfXN0YXRpYyBnZXQgRGVmYXVsdCgpe3JldHVybiBDZX1zdGF0aWMgZ2V0IE5BTUUoKXtyZXR1cm4gRGV9bmV4dCgpe3RoaXMuX3NsaWRlKFRlKX1uZXh0V2hlblZpc2libGUoKXshZG9jdW1lbnQuaGlkZGVuJiZCdCh0aGlzLl9lbGVtZW50KSYmdGhpcy5uZXh0KCl9cHJldigpe3RoaXMuX3NsaWRlKFJlKX1wYXVzZSh0KXt0fHwodGhpcy5faXNQYXVzZWQ9ITApLE9lLmZpbmRPbmUoXCIuY2Fyb3VzZWwtaXRlbS1uZXh0LCAuY2Fyb3VzZWwtaXRlbS1wcmV2XCIsdGhpcy5fZWxlbWVudCkmJihrdCh0aGlzLl9lbGVtZW50KSx0aGlzLmN5Y2xlKCEwKSksY2xlYXJJbnRlcnZhbCh0aGlzLl9pbnRlcnZhbCksdGhpcy5faW50ZXJ2YWw9bnVsbH1jeWNsZSh0KXt0fHwodGhpcy5faXNQYXVzZWQ9ITEpLHRoaXMuX2ludGVydmFsJiYoY2xlYXJJbnRlcnZhbCh0aGlzLl9pbnRlcnZhbCksdGhpcy5faW50ZXJ2YWw9bnVsbCksdGhpcy5fY29uZmlnJiZ0aGlzLl9jb25maWcuaW50ZXJ2YWwmJiF0aGlzLl9pc1BhdXNlZCYmKHRoaXMuX3VwZGF0ZUludGVydmFsKCksdGhpcy5faW50ZXJ2YWw9c2V0SW50ZXJ2YWwoKGRvY3VtZW50LnZpc2liaWxpdHlTdGF0ZT90aGlzLm5leHRXaGVuVmlzaWJsZTp0aGlzLm5leHQpLmJpbmQodGhpcyksdGhpcy5fY29uZmlnLmludGVydmFsKSl9dG8odCl7dGhpcy5fYWN0aXZlRWxlbWVudD1PZS5maW5kT25lKFBlLHRoaXMuX2VsZW1lbnQpO2NvbnN0IGU9dGhpcy5fZ2V0SXRlbUluZGV4KHRoaXMuX2FjdGl2ZUVsZW1lbnQpO2lmKHQ+dGhpcy5faXRlbXMubGVuZ3RoLTF8fHQ8MClyZXR1cm47aWYodGhpcy5faXNTbGlkaW5nKXJldHVybiB2b2lkIHBlLm9uZSh0aGlzLl9lbGVtZW50LHhlLCgoKT0+dGhpcy50byh0KSkpO2lmKGU9PT10KXJldHVybiB0aGlzLnBhdXNlKCksdm9pZCB0aGlzLmN5Y2xlKCk7Y29uc3Qgbj10PmU/VGU6UmU7dGhpcy5fc2xpZGUobix0aGlzLl9pdGVtc1t0XSl9X2dldENvbmZpZyh0KXtyZXR1cm4gdD17Li4uQ2UsLi4ud2UuZ2V0RGF0YUF0dHJpYnV0ZXModGhpcy5fZWxlbWVudCksLi4uXCJvYmplY3RcIj09dHlwZW9mIHQ/dDp7fX0sTXQoRGUsdCxTZSksdH1faGFuZGxlU3dpcGUoKXtjb25zdCB0PU1hdGguYWJzKHRoaXMudG91Y2hEZWx0YVgpO2lmKHQ8PTQwKXJldHVybjtjb25zdCBlPXQvdGhpcy50b3VjaERlbHRhWDt0aGlzLnRvdWNoRGVsdGFYPTAsZSYmdGhpcy5fc2xpZGUoZT4wP0llOk5lKX1fYWRkRXZlbnRMaXN0ZW5lcnMoKXt0aGlzLl9jb25maWcua2V5Ym9hcmQmJnBlLm9uKHRoaXMuX2VsZW1lbnQsXCJrZXlkb3duLmJzLmNhcm91c2VsXCIsKHQ9PnRoaXMuX2tleWRvd24odCkpKSxcImhvdmVyXCI9PT10aGlzLl9jb25maWcucGF1c2UmJihwZS5vbih0aGlzLl9lbGVtZW50LFwibW91c2VlbnRlci5icy5jYXJvdXNlbFwiLCh0PT50aGlzLnBhdXNlKHQpKSkscGUub24odGhpcy5fZWxlbWVudCxcIm1vdXNlbGVhdmUuYnMuY2Fyb3VzZWxcIiwodD0+dGhpcy5jeWNsZSh0KSkpKSx0aGlzLl9jb25maWcudG91Y2gmJnRoaXMuX3RvdWNoU3VwcG9ydGVkJiZ0aGlzLl9hZGRUb3VjaEV2ZW50TGlzdGVuZXJzKCl9X2FkZFRvdWNoRXZlbnRMaXN0ZW5lcnMoKXtjb25zdCB0PXQ9PnRoaXMuX3BvaW50ZXJFdmVudCYmKFwicGVuXCI9PT10LnBvaW50ZXJUeXBlfHxcInRvdWNoXCI9PT10LnBvaW50ZXJUeXBlKSxlPWU9Pnt0KGUpP3RoaXMudG91Y2hTdGFydFg9ZS5jbGllbnRYOnRoaXMuX3BvaW50ZXJFdmVudHx8KHRoaXMudG91Y2hTdGFydFg9ZS50b3VjaGVzWzBdLmNsaWVudFgpfSxuPXQ9Pnt0aGlzLnRvdWNoRGVsdGFYPXQudG91Y2hlcyYmdC50b3VjaGVzLmxlbmd0aD4xPzA6dC50b3VjaGVzWzBdLmNsaWVudFgtdGhpcy50b3VjaFN0YXJ0WH0sbz1lPT57dChlKSYmKHRoaXMudG91Y2hEZWx0YVg9ZS5jbGllbnRYLXRoaXMudG91Y2hTdGFydFgpLHRoaXMuX2hhbmRsZVN3aXBlKCksXCJob3ZlclwiPT09dGhpcy5fY29uZmlnLnBhdXNlJiYodGhpcy5wYXVzZSgpLHRoaXMudG91Y2hUaW1lb3V0JiZjbGVhclRpbWVvdXQodGhpcy50b3VjaFRpbWVvdXQpLHRoaXMudG91Y2hUaW1lb3V0PXNldFRpbWVvdXQoKHQ9PnRoaXMuY3ljbGUodCkpLDUwMCt0aGlzLl9jb25maWcuaW50ZXJ2YWwpKX07T2UuZmluZChcIi5jYXJvdXNlbC1pdGVtIGltZ1wiLHRoaXMuX2VsZW1lbnQpLmZvckVhY2goKHQ9PntwZS5vbih0LFwiZHJhZ3N0YXJ0LmJzLmNhcm91c2VsXCIsKHQ9PnQucHJldmVudERlZmF1bHQoKSkpfSkpLHRoaXMuX3BvaW50ZXJFdmVudD8ocGUub24odGhpcy5fZWxlbWVudCxcInBvaW50ZXJkb3duLmJzLmNhcm91c2VsXCIsKHQ9PmUodCkpKSxwZS5vbih0aGlzLl9lbGVtZW50LFwicG9pbnRlcnVwLmJzLmNhcm91c2VsXCIsKHQ9Pm8odCkpKSx0aGlzLl9lbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJwb2ludGVyLWV2ZW50XCIpKToocGUub24odGhpcy5fZWxlbWVudCxcInRvdWNoc3RhcnQuYnMuY2Fyb3VzZWxcIiwodD0+ZSh0KSkpLHBlLm9uKHRoaXMuX2VsZW1lbnQsXCJ0b3VjaG1vdmUuYnMuY2Fyb3VzZWxcIiwodD0+bih0KSkpLHBlLm9uKHRoaXMuX2VsZW1lbnQsXCJ0b3VjaGVuZC5icy5jYXJvdXNlbFwiLCh0PT5vKHQpKSkpfV9rZXlkb3duKHQpe2lmKC9pbnB1dHx0ZXh0YXJlYS9pLnRlc3QodC50YXJnZXQudGFnTmFtZSkpcmV0dXJuO2NvbnN0IGU9QWVbdC5rZXldO2UmJih0LnByZXZlbnREZWZhdWx0KCksdGhpcy5fc2xpZGUoZSkpfV9nZXRJdGVtSW5kZXgodCl7cmV0dXJuIHRoaXMuX2l0ZW1zPXQmJnQucGFyZW50Tm9kZT9PZS5maW5kKFwiLmNhcm91c2VsLWl0ZW1cIix0LnBhcmVudE5vZGUpOltdLHRoaXMuX2l0ZW1zLmluZGV4T2YodCl9X2dldEl0ZW1CeU9yZGVyKHQsZSl7Y29uc3Qgbj10PT09VGU7cmV0dXJuIFl0KHRoaXMuX2l0ZW1zLGUsbix0aGlzLl9jb25maWcud3JhcCl9X3RyaWdnZXJTbGlkZUV2ZW50KHQsZSl7Y29uc3Qgbj10aGlzLl9nZXRJdGVtSW5kZXgodCksbz10aGlzLl9nZXRJdGVtSW5kZXgoT2UuZmluZE9uZShQZSx0aGlzLl9lbGVtZW50KSk7cmV0dXJuIHBlLnRyaWdnZXIodGhpcy5fZWxlbWVudCxcInNsaWRlLmJzLmNhcm91c2VsXCIse3JlbGF0ZWRUYXJnZXQ6dCxkaXJlY3Rpb246ZSxmcm9tOm8sdG86bn0pfV9zZXRBY3RpdmVJbmRpY2F0b3JFbGVtZW50KHQpe2lmKHRoaXMuX2luZGljYXRvcnNFbGVtZW50KXtjb25zdCBlPU9lLmZpbmRPbmUoXCIuYWN0aXZlXCIsdGhpcy5faW5kaWNhdG9yc0VsZW1lbnQpO2UuY2xhc3NMaXN0LnJlbW92ZShMZSksZS5yZW1vdmVBdHRyaWJ1dGUoXCJhcmlhLWN1cnJlbnRcIik7Y29uc3Qgbj1PZS5maW5kKFwiW2RhdGEtYnMtdGFyZ2V0XVwiLHRoaXMuX2luZGljYXRvcnNFbGVtZW50KTtmb3IobGV0IGU9MDtlPG4ubGVuZ3RoO2UrKylpZihOdW1iZXIucGFyc2VJbnQobltlXS5nZXRBdHRyaWJ1dGUoXCJkYXRhLWJzLXNsaWRlLXRvXCIpLDEwKT09PXRoaXMuX2dldEl0ZW1JbmRleCh0KSl7bltlXS5jbGFzc0xpc3QuYWRkKExlKSxuW2VdLnNldEF0dHJpYnV0ZShcImFyaWEtY3VycmVudFwiLFwidHJ1ZVwiKTticmVha319fV91cGRhdGVJbnRlcnZhbCgpe2NvbnN0IHQ9dGhpcy5fYWN0aXZlRWxlbWVudHx8T2UuZmluZE9uZShQZSx0aGlzLl9lbGVtZW50KTtpZighdClyZXR1cm47Y29uc3QgZT1OdW1iZXIucGFyc2VJbnQodC5nZXRBdHRyaWJ1dGUoXCJkYXRhLWJzLWludGVydmFsXCIpLDEwKTtlPyh0aGlzLl9jb25maWcuZGVmYXVsdEludGVydmFsPXRoaXMuX2NvbmZpZy5kZWZhdWx0SW50ZXJ2YWx8fHRoaXMuX2NvbmZpZy5pbnRlcnZhbCx0aGlzLl9jb25maWcuaW50ZXJ2YWw9ZSk6dGhpcy5fY29uZmlnLmludGVydmFsPXRoaXMuX2NvbmZpZy5kZWZhdWx0SW50ZXJ2YWx8fHRoaXMuX2NvbmZpZy5pbnRlcnZhbH1fc2xpZGUodCxlKXtjb25zdCBuPXRoaXMuX2RpcmVjdGlvblRvT3JkZXIodCksbz1PZS5maW5kT25lKFBlLHRoaXMuX2VsZW1lbnQpLGk9dGhpcy5fZ2V0SXRlbUluZGV4KG8pLHI9ZXx8dGhpcy5fZ2V0SXRlbUJ5T3JkZXIobixvKSxzPXRoaXMuX2dldEl0ZW1JbmRleChyKSxhPUJvb2xlYW4odGhpcy5faW50ZXJ2YWwpLGM9bj09PVRlLGw9Yz9cImNhcm91c2VsLWl0ZW0tc3RhcnRcIjpcImNhcm91c2VsLWl0ZW0tZW5kXCIsdT1jP1wiY2Fyb3VzZWwtaXRlbS1uZXh0XCI6XCJjYXJvdXNlbC1pdGVtLXByZXZcIixkPXRoaXMuX29yZGVyVG9EaXJlY3Rpb24obik7aWYociYmci5jbGFzc0xpc3QuY29udGFpbnMoTGUpKXJldHVybiB2b2lkKHRoaXMuX2lzU2xpZGluZz0hMSk7aWYodGhpcy5faXNTbGlkaW5nKXJldHVybjtpZih0aGlzLl90cmlnZ2VyU2xpZGVFdmVudChyLGQpLmRlZmF1bHRQcmV2ZW50ZWQpcmV0dXJuO2lmKCFvfHwhcilyZXR1cm47dGhpcy5faXNTbGlkaW5nPSEwLGEmJnRoaXMucGF1c2UoKSx0aGlzLl9zZXRBY3RpdmVJbmRpY2F0b3JFbGVtZW50KHIpLHRoaXMuX2FjdGl2ZUVsZW1lbnQ9cjtjb25zdCBwPSgpPT57cGUudHJpZ2dlcih0aGlzLl9lbGVtZW50LHhlLHtyZWxhdGVkVGFyZ2V0OnIsZGlyZWN0aW9uOmQsZnJvbTppLHRvOnN9KX07aWYodGhpcy5fZWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoXCJzbGlkZVwiKSl7ci5jbGFzc0xpc3QuYWRkKHUpLFV0KHIpLG8uY2xhc3NMaXN0LmFkZChsKSxyLmNsYXNzTGlzdC5hZGQobCk7Y29uc3QgdD0oKT0+e3IuY2xhc3NMaXN0LnJlbW92ZShsLHUpLHIuY2xhc3NMaXN0LmFkZChMZSksby5jbGFzc0xpc3QucmVtb3ZlKExlLHUsbCksdGhpcy5faXNTbGlkaW5nPSExLHNldFRpbWVvdXQocCwwKX07dGhpcy5fcXVldWVDYWxsYmFjayh0LG8sITApfWVsc2Ugby5jbGFzc0xpc3QucmVtb3ZlKExlKSxyLmNsYXNzTGlzdC5hZGQoTGUpLHRoaXMuX2lzU2xpZGluZz0hMSxwKCk7YSYmdGhpcy5jeWNsZSgpfV9kaXJlY3Rpb25Ub09yZGVyKHQpe3JldHVybltJZSxOZV0uaW5jbHVkZXModCk/JHQoKT90PT09TmU/UmU6VGU6dD09PU5lP1RlOlJlOnR9X29yZGVyVG9EaXJlY3Rpb24odCl7cmV0dXJuW1RlLFJlXS5pbmNsdWRlcyh0KT8kdCgpP3Q9PT1SZT9OZTpJZTp0PT09UmU/SWU6TmU6dH1zdGF0aWMgY2Fyb3VzZWxJbnRlcmZhY2UodCxlKXtjb25zdCBuPWtlLmdldE9yQ3JlYXRlSW5zdGFuY2UodCxlKTtsZXR7X2NvbmZpZzpvfT1uO1wib2JqZWN0XCI9PXR5cGVvZiBlJiYobz17Li4ubywuLi5lfSk7Y29uc3QgaT1cInN0cmluZ1wiPT10eXBlb2YgZT9lOm8uc2xpZGU7aWYoXCJudW1iZXJcIj09dHlwZW9mIGUpbi50byhlKTtlbHNlIGlmKFwic3RyaW5nXCI9PXR5cGVvZiBpKXtpZih2b2lkIDA9PT1uW2ldKXRocm93IG5ldyBUeXBlRXJyb3IoYE5vIG1ldGhvZCBuYW1lZCBcIiR7aX1cImApO25baV0oKX1lbHNlIG8uaW50ZXJ2YWwmJm8ucmlkZSYmKG4ucGF1c2UoKSxuLmN5Y2xlKCkpfXN0YXRpYyBqUXVlcnlJbnRlcmZhY2UodCl7cmV0dXJuIHRoaXMuZWFjaCgoZnVuY3Rpb24oKXtrZS5jYXJvdXNlbEludGVyZmFjZSh0aGlzLHQpfSkpfXN0YXRpYyBkYXRhQXBpQ2xpY2tIYW5kbGVyKHQpe2NvbnN0IGU9UHQodGhpcyk7aWYoIWV8fCFlLmNsYXNzTGlzdC5jb250YWlucyhcImNhcm91c2VsXCIpKXJldHVybjtjb25zdCBuPXsuLi53ZS5nZXREYXRhQXR0cmlidXRlcyhlKSwuLi53ZS5nZXREYXRhQXR0cmlidXRlcyh0aGlzKX0sbz10aGlzLmdldEF0dHJpYnV0ZShcImRhdGEtYnMtc2xpZGUtdG9cIik7byYmKG4uaW50ZXJ2YWw9ITEpLGtlLmNhcm91c2VsSW50ZXJmYWNlKGUsbiksbyYma2UuZ2V0SW5zdGFuY2UoZSkudG8obyksdC5wcmV2ZW50RGVmYXVsdCgpfX1wZS5vbihkb2N1bWVudCxcImNsaWNrLmJzLmNhcm91c2VsLmRhdGEtYXBpXCIsXCJbZGF0YS1icy1zbGlkZV0sIFtkYXRhLWJzLXNsaWRlLXRvXVwiLGtlLmRhdGFBcGlDbGlja0hhbmRsZXIpLHBlLm9uKHdpbmRvdyxcImxvYWQuYnMuY2Fyb3VzZWwuZGF0YS1hcGlcIiwoKCk9Pntjb25zdCB0PU9lLmZpbmQoJ1tkYXRhLWJzLXJpZGU9XCJjYXJvdXNlbFwiXScpO2ZvcihsZXQgZT0wLG49dC5sZW5ndGg7ZTxuO2UrKylrZS5jYXJvdXNlbEludGVyZmFjZSh0W2VdLGtlLmdldEluc3RhbmNlKHRbZV0pKX0pKSxxdChrZSk7Y29uc3QgamU9XCJjb2xsYXBzZVwiLEhlPXt0b2dnbGU6ITAscGFyZW50Om51bGx9LE1lPXt0b2dnbGU6XCJib29sZWFuXCIscGFyZW50OlwiKG51bGx8ZWxlbWVudClcIn0sQmU9XCJzaG93XCIsR2U9XCJjb2xsYXBzZVwiLFdlPVwiY29sbGFwc2luZ1wiLEZlPVwiY29sbGFwc2VkXCIsVWU9XCI6c2NvcGUgLmNvbGxhcHNlIC5jb2xsYXBzZVwiLHplPSdbZGF0YS1icy10b2dnbGU9XCJjb2xsYXBzZVwiXSc7Y2xhc3MgVmUgZXh0ZW5kcyBtZXtjb25zdHJ1Y3Rvcih0LGUpe3N1cGVyKHQpLHRoaXMuX2lzVHJhbnNpdGlvbmluZz0hMSx0aGlzLl9jb25maWc9dGhpcy5fZ2V0Q29uZmlnKGUpLHRoaXMuX3RyaWdnZXJBcnJheT1bXTtjb25zdCBuPU9lLmZpbmQoemUpO2ZvcihsZXQgdD0wLGU9bi5sZW5ndGg7dDxlO3QrKyl7Y29uc3QgZT1uW3RdLG89THQoZSksaT1PZS5maW5kKG8pLmZpbHRlcigodD0+dD09PXRoaXMuX2VsZW1lbnQpKTtudWxsIT09byYmaS5sZW5ndGgmJih0aGlzLl9zZWxlY3Rvcj1vLHRoaXMuX3RyaWdnZXJBcnJheS5wdXNoKGUpKX10aGlzLl9pbml0aWFsaXplQ2hpbGRyZW4oKSx0aGlzLl9jb25maWcucGFyZW50fHx0aGlzLl9hZGRBcmlhQW5kQ29sbGFwc2VkQ2xhc3ModGhpcy5fdHJpZ2dlckFycmF5LHRoaXMuX2lzU2hvd24oKSksdGhpcy5fY29uZmlnLnRvZ2dsZSYmdGhpcy50b2dnbGUoKX1zdGF0aWMgZ2V0IERlZmF1bHQoKXtyZXR1cm4gSGV9c3RhdGljIGdldCBOQU1FKCl7cmV0dXJuIGplfXRvZ2dsZSgpe3RoaXMuX2lzU2hvd24oKT90aGlzLmhpZGUoKTp0aGlzLnNob3coKX1zaG93KCl7aWYodGhpcy5faXNUcmFuc2l0aW9uaW5nfHx0aGlzLl9pc1Nob3duKCkpcmV0dXJuO2xldCB0LGU9W107aWYodGhpcy5fY29uZmlnLnBhcmVudCl7Y29uc3QgdD1PZS5maW5kKFVlLHRoaXMuX2NvbmZpZy5wYXJlbnQpO2U9T2UuZmluZChcIi5jb2xsYXBzZS5zaG93LCAuY29sbGFwc2UuY29sbGFwc2luZ1wiLHRoaXMuX2NvbmZpZy5wYXJlbnQpLmZpbHRlcigoZT0+IXQuaW5jbHVkZXMoZSkpKX1jb25zdCBuPU9lLmZpbmRPbmUodGhpcy5fc2VsZWN0b3IpO2lmKGUubGVuZ3RoKXtjb25zdCBvPWUuZmluZCgodD0+biE9PXQpKTtpZih0PW8/VmUuZ2V0SW5zdGFuY2Uobyk6bnVsbCx0JiZ0Ll9pc1RyYW5zaXRpb25pbmcpcmV0dXJufWlmKHBlLnRyaWdnZXIodGhpcy5fZWxlbWVudCxcInNob3cuYnMuY29sbGFwc2VcIikuZGVmYXVsdFByZXZlbnRlZClyZXR1cm47ZS5mb3JFYWNoKChlPT57biE9PWUmJlZlLmdldE9yQ3JlYXRlSW5zdGFuY2UoZSx7dG9nZ2xlOiExfSkuaGlkZSgpLHR8fGZlLnNldChlLFwiYnMuY29sbGFwc2VcIixudWxsKX0pKTtjb25zdCBvPXRoaXMuX2dldERpbWVuc2lvbigpO3RoaXMuX2VsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZShHZSksdGhpcy5fZWxlbWVudC5jbGFzc0xpc3QuYWRkKFdlKSx0aGlzLl9lbGVtZW50LnN0eWxlW29dPTAsdGhpcy5fYWRkQXJpYUFuZENvbGxhcHNlZENsYXNzKHRoaXMuX3RyaWdnZXJBcnJheSwhMCksdGhpcy5faXNUcmFuc2l0aW9uaW5nPSEwO2NvbnN0IGk9YHNjcm9sbCR7b1swXS50b1VwcGVyQ2FzZSgpK28uc2xpY2UoMSl9YDt0aGlzLl9xdWV1ZUNhbGxiYWNrKCgoKT0+e3RoaXMuX2lzVHJhbnNpdGlvbmluZz0hMSx0aGlzLl9lbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoV2UpLHRoaXMuX2VsZW1lbnQuY2xhc3NMaXN0LmFkZChHZSxCZSksdGhpcy5fZWxlbWVudC5zdHlsZVtvXT1cIlwiLHBlLnRyaWdnZXIodGhpcy5fZWxlbWVudCxcInNob3duLmJzLmNvbGxhcHNlXCIpfSksdGhpcy5fZWxlbWVudCwhMCksdGhpcy5fZWxlbWVudC5zdHlsZVtvXT1gJHt0aGlzLl9lbGVtZW50W2ldfXB4YH1oaWRlKCl7aWYodGhpcy5faXNUcmFuc2l0aW9uaW5nfHwhdGhpcy5faXNTaG93bigpKXJldHVybjtpZihwZS50cmlnZ2VyKHRoaXMuX2VsZW1lbnQsXCJoaWRlLmJzLmNvbGxhcHNlXCIpLmRlZmF1bHRQcmV2ZW50ZWQpcmV0dXJuO2NvbnN0IHQ9dGhpcy5fZ2V0RGltZW5zaW9uKCk7dGhpcy5fZWxlbWVudC5zdHlsZVt0XT1gJHt0aGlzLl9lbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpW3RdfXB4YCxVdCh0aGlzLl9lbGVtZW50KSx0aGlzLl9lbGVtZW50LmNsYXNzTGlzdC5hZGQoV2UpLHRoaXMuX2VsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZShHZSxCZSk7Y29uc3QgZT10aGlzLl90cmlnZ2VyQXJyYXkubGVuZ3RoO2ZvcihsZXQgdD0wO3Q8ZTt0Kyspe2NvbnN0IGU9dGhpcy5fdHJpZ2dlckFycmF5W3RdLG49UHQoZSk7biYmIXRoaXMuX2lzU2hvd24obikmJnRoaXMuX2FkZEFyaWFBbmRDb2xsYXBzZWRDbGFzcyhbZV0sITEpfXRoaXMuX2lzVHJhbnNpdGlvbmluZz0hMCx0aGlzLl9lbGVtZW50LnN0eWxlW3RdPVwiXCIsdGhpcy5fcXVldWVDYWxsYmFjaygoKCk9Pnt0aGlzLl9pc1RyYW5zaXRpb25pbmc9ITEsdGhpcy5fZWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKFdlKSx0aGlzLl9lbGVtZW50LmNsYXNzTGlzdC5hZGQoR2UpLHBlLnRyaWdnZXIodGhpcy5fZWxlbWVudCxcImhpZGRlbi5icy5jb2xsYXBzZVwiKX0pLHRoaXMuX2VsZW1lbnQsITApfV9pc1Nob3duKHQ9dGhpcy5fZWxlbWVudCl7cmV0dXJuIHQuY2xhc3NMaXN0LmNvbnRhaW5zKEJlKX1fZ2V0Q29uZmlnKHQpe3JldHVybih0PXsuLi5IZSwuLi53ZS5nZXREYXRhQXR0cmlidXRlcyh0aGlzLl9lbGVtZW50KSwuLi50fSkudG9nZ2xlPUJvb2xlYW4odC50b2dnbGUpLHQucGFyZW50PUh0KHQucGFyZW50KSxNdChqZSx0LE1lKSx0fV9nZXREaW1lbnNpb24oKXtyZXR1cm4gdGhpcy5fZWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoXCJjb2xsYXBzZS1ob3Jpem9udGFsXCIpP1wid2lkdGhcIjpcImhlaWdodFwifV9pbml0aWFsaXplQ2hpbGRyZW4oKXtpZighdGhpcy5fY29uZmlnLnBhcmVudClyZXR1cm47Y29uc3QgdD1PZS5maW5kKFVlLHRoaXMuX2NvbmZpZy5wYXJlbnQpO09lLmZpbmQoemUsdGhpcy5fY29uZmlnLnBhcmVudCkuZmlsdGVyKChlPT4hdC5pbmNsdWRlcyhlKSkpLmZvckVhY2goKHQ9Pntjb25zdCBlPVB0KHQpO2UmJnRoaXMuX2FkZEFyaWFBbmRDb2xsYXBzZWRDbGFzcyhbdF0sdGhpcy5faXNTaG93bihlKSl9KSl9X2FkZEFyaWFBbmRDb2xsYXBzZWRDbGFzcyh0LGUpe3QubGVuZ3RoJiZ0LmZvckVhY2goKHQ9PntlP3QuY2xhc3NMaXN0LnJlbW92ZShGZSk6dC5jbGFzc0xpc3QuYWRkKEZlKSx0LnNldEF0dHJpYnV0ZShcImFyaWEtZXhwYW5kZWRcIixlKX0pKX1zdGF0aWMgalF1ZXJ5SW50ZXJmYWNlKHQpe3JldHVybiB0aGlzLmVhY2goKGZ1bmN0aW9uKCl7Y29uc3QgZT17fTtcInN0cmluZ1wiPT10eXBlb2YgdCYmL3Nob3d8aGlkZS8udGVzdCh0KSYmKGUudG9nZ2xlPSExKTtjb25zdCBuPVZlLmdldE9yQ3JlYXRlSW5zdGFuY2UodGhpcyxlKTtpZihcInN0cmluZ1wiPT10eXBlb2YgdCl7aWYodm9pZCAwPT09blt0XSl0aHJvdyBuZXcgVHlwZUVycm9yKGBObyBtZXRob2QgbmFtZWQgXCIke3R9XCJgKTtuW3RdKCl9fSkpfX1wZS5vbihkb2N1bWVudCxcImNsaWNrLmJzLmNvbGxhcHNlLmRhdGEtYXBpXCIsemUsKGZ1bmN0aW9uKHQpeyhcIkFcIj09PXQudGFyZ2V0LnRhZ05hbWV8fHQuZGVsZWdhdGVUYXJnZXQmJlwiQVwiPT09dC5kZWxlZ2F0ZVRhcmdldC50YWdOYW1lKSYmdC5wcmV2ZW50RGVmYXVsdCgpO2NvbnN0IGU9THQodGhpcyk7T2UuZmluZChlKS5mb3JFYWNoKCh0PT57VmUuZ2V0T3JDcmVhdGVJbnN0YW5jZSh0LHt0b2dnbGU6ITF9KS50b2dnbGUoKX0pKX0pKSxxdChWZSk7Y29uc3QgJGU9XCJkcm9wZG93blwiLHFlPVwiRXNjYXBlXCIsS2U9XCJTcGFjZVwiLFhlPVwiQXJyb3dVcFwiLFllPVwiQXJyb3dEb3duXCIsUWU9bmV3IFJlZ0V4cChcIkFycm93VXB8QXJyb3dEb3dufEVzY2FwZVwiKSxKZT1cImNsaWNrLmJzLmRyb3Bkb3duLmRhdGEtYXBpXCIsWmU9XCJrZXlkb3duLmJzLmRyb3Bkb3duLmRhdGEtYXBpXCIsdG49XCJzaG93XCIsZW49J1tkYXRhLWJzLXRvZ2dsZT1cImRyb3Bkb3duXCJdJyxubj1cIi5kcm9wZG93bi1tZW51XCIsb249JHQoKT9cInRvcC1lbmRcIjpcInRvcC1zdGFydFwiLHJuPSR0KCk/XCJ0b3Atc3RhcnRcIjpcInRvcC1lbmRcIixzbj0kdCgpP1wiYm90dG9tLWVuZFwiOlwiYm90dG9tLXN0YXJ0XCIsYW49JHQoKT9cImJvdHRvbS1zdGFydFwiOlwiYm90dG9tLWVuZFwiLGNuPSR0KCk/XCJsZWZ0LXN0YXJ0XCI6XCJyaWdodC1zdGFydFwiLGxuPSR0KCk/XCJyaWdodC1zdGFydFwiOlwibGVmdC1zdGFydFwiLHVuPXtvZmZzZXQ6WzAsMl0sYm91bmRhcnk6XCJjbGlwcGluZ1BhcmVudHNcIixyZWZlcmVuY2U6XCJ0b2dnbGVcIixkaXNwbGF5OlwiZHluYW1pY1wiLHBvcHBlckNvbmZpZzpudWxsLGF1dG9DbG9zZTohMH0sZG49e29mZnNldDpcIihhcnJheXxzdHJpbmd8ZnVuY3Rpb24pXCIsYm91bmRhcnk6XCIoc3RyaW5nfGVsZW1lbnQpXCIscmVmZXJlbmNlOlwiKHN0cmluZ3xlbGVtZW50fG9iamVjdClcIixkaXNwbGF5Olwic3RyaW5nXCIscG9wcGVyQ29uZmlnOlwiKG51bGx8b2JqZWN0fGZ1bmN0aW9uKVwiLGF1dG9DbG9zZTpcIihib29sZWFufHN0cmluZylcIn07Y2xhc3MgcG4gZXh0ZW5kcyBtZXtjb25zdHJ1Y3Rvcih0LGUpe3N1cGVyKHQpLHRoaXMuX3BvcHBlcj1udWxsLHRoaXMuX2NvbmZpZz10aGlzLl9nZXRDb25maWcoZSksdGhpcy5fbWVudT10aGlzLl9nZXRNZW51RWxlbWVudCgpLHRoaXMuX2luTmF2YmFyPXRoaXMuX2RldGVjdE5hdmJhcigpfXN0YXRpYyBnZXQgRGVmYXVsdCgpe3JldHVybiB1bn1zdGF0aWMgZ2V0IERlZmF1bHRUeXBlKCl7cmV0dXJuIGRufXN0YXRpYyBnZXQgTkFNRSgpe3JldHVybiAkZX10b2dnbGUoKXtyZXR1cm4gdGhpcy5faXNTaG93bigpP3RoaXMuaGlkZSgpOnRoaXMuc2hvdygpfXNob3coKXtpZihHdCh0aGlzLl9lbGVtZW50KXx8dGhpcy5faXNTaG93bih0aGlzLl9tZW51KSlyZXR1cm47Y29uc3QgdD17cmVsYXRlZFRhcmdldDp0aGlzLl9lbGVtZW50fTtpZihwZS50cmlnZ2VyKHRoaXMuX2VsZW1lbnQsXCJzaG93LmJzLmRyb3Bkb3duXCIsdCkuZGVmYXVsdFByZXZlbnRlZClyZXR1cm47Y29uc3QgZT1wbi5nZXRQYXJlbnRGcm9tRWxlbWVudCh0aGlzLl9lbGVtZW50KTt0aGlzLl9pbk5hdmJhcj93ZS5zZXREYXRhQXR0cmlidXRlKHRoaXMuX21lbnUsXCJwb3BwZXJcIixcIm5vbmVcIik6dGhpcy5fY3JlYXRlUG9wcGVyKGUpLFwib250b3VjaHN0YXJ0XCJpbiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQmJiFlLmNsb3Nlc3QoXCIubmF2YmFyLW5hdlwiKSYmW10uY29uY2F0KC4uLmRvY3VtZW50LmJvZHkuY2hpbGRyZW4pLmZvckVhY2goKHQ9PnBlLm9uKHQsXCJtb3VzZW92ZXJcIixGdCkpKSx0aGlzLl9lbGVtZW50LmZvY3VzKCksdGhpcy5fZWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJhcmlhLWV4cGFuZGVkXCIsITApLHRoaXMuX21lbnUuY2xhc3NMaXN0LmFkZCh0biksdGhpcy5fZWxlbWVudC5jbGFzc0xpc3QuYWRkKHRuKSxwZS50cmlnZ2VyKHRoaXMuX2VsZW1lbnQsXCJzaG93bi5icy5kcm9wZG93blwiLHQpfWhpZGUoKXtpZihHdCh0aGlzLl9lbGVtZW50KXx8IXRoaXMuX2lzU2hvd24odGhpcy5fbWVudSkpcmV0dXJuO2NvbnN0IHQ9e3JlbGF0ZWRUYXJnZXQ6dGhpcy5fZWxlbWVudH07dGhpcy5fY29tcGxldGVIaWRlKHQpfWRpc3Bvc2UoKXt0aGlzLl9wb3BwZXImJnRoaXMuX3BvcHBlci5kZXN0cm95KCksc3VwZXIuZGlzcG9zZSgpfXVwZGF0ZSgpe3RoaXMuX2luTmF2YmFyPXRoaXMuX2RldGVjdE5hdmJhcigpLHRoaXMuX3BvcHBlciYmdGhpcy5fcG9wcGVyLnVwZGF0ZSgpfV9jb21wbGV0ZUhpZGUodCl7cGUudHJpZ2dlcih0aGlzLl9lbGVtZW50LFwiaGlkZS5icy5kcm9wZG93blwiLHQpLmRlZmF1bHRQcmV2ZW50ZWR8fChcIm9udG91Y2hzdGFydFwiaW4gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50JiZbXS5jb25jYXQoLi4uZG9jdW1lbnQuYm9keS5jaGlsZHJlbikuZm9yRWFjaCgodD0+cGUub2ZmKHQsXCJtb3VzZW92ZXJcIixGdCkpKSx0aGlzLl9wb3BwZXImJnRoaXMuX3BvcHBlci5kZXN0cm95KCksdGhpcy5fbWVudS5jbGFzc0xpc3QucmVtb3ZlKHRuKSx0aGlzLl9lbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodG4pLHRoaXMuX2VsZW1lbnQuc2V0QXR0cmlidXRlKFwiYXJpYS1leHBhbmRlZFwiLFwiZmFsc2VcIiksd2UucmVtb3ZlRGF0YUF0dHJpYnV0ZSh0aGlzLl9tZW51LFwicG9wcGVyXCIpLHBlLnRyaWdnZXIodGhpcy5fZWxlbWVudCxcImhpZGRlbi5icy5kcm9wZG93blwiLHQpKX1fZ2V0Q29uZmlnKHQpe2lmKHQ9ey4uLnRoaXMuY29uc3RydWN0b3IuRGVmYXVsdCwuLi53ZS5nZXREYXRhQXR0cmlidXRlcyh0aGlzLl9lbGVtZW50KSwuLi50fSxNdCgkZSx0LHRoaXMuY29uc3RydWN0b3IuRGVmYXVsdFR5cGUpLFwib2JqZWN0XCI9PXR5cGVvZiB0LnJlZmVyZW5jZSYmIWp0KHQucmVmZXJlbmNlKSYmXCJmdW5jdGlvblwiIT10eXBlb2YgdC5yZWZlcmVuY2UuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KXRocm93IG5ldyBUeXBlRXJyb3IoYCR7JGUudG9VcHBlckNhc2UoKX06IE9wdGlvbiBcInJlZmVyZW5jZVwiIHByb3ZpZGVkIHR5cGUgXCJvYmplY3RcIiB3aXRob3V0IGEgcmVxdWlyZWQgXCJnZXRCb3VuZGluZ0NsaWVudFJlY3RcIiBtZXRob2QuYCk7cmV0dXJuIHR9X2NyZWF0ZVBvcHBlcihlKXtpZih2b2lkIDA9PT10KXRocm93IG5ldyBUeXBlRXJyb3IoXCJCb290c3RyYXAncyBkcm9wZG93bnMgcmVxdWlyZSBQb3BwZXIgKGh0dHBzOi8vcG9wcGVyLmpzLm9yZylcIik7bGV0IG49dGhpcy5fZWxlbWVudDtcInBhcmVudFwiPT09dGhpcy5fY29uZmlnLnJlZmVyZW5jZT9uPWU6anQodGhpcy5fY29uZmlnLnJlZmVyZW5jZSk/bj1IdCh0aGlzLl9jb25maWcucmVmZXJlbmNlKTpcIm9iamVjdFwiPT10eXBlb2YgdGhpcy5fY29uZmlnLnJlZmVyZW5jZSYmKG49dGhpcy5fY29uZmlnLnJlZmVyZW5jZSk7Y29uc3Qgbz10aGlzLl9nZXRQb3BwZXJDb25maWcoKSxpPW8ubW9kaWZpZXJzLmZpbmQoKHQ9PlwiYXBwbHlTdHlsZXNcIj09PXQubmFtZSYmITE9PT10LmVuYWJsZWQpKTt0aGlzLl9wb3BwZXI9TnQobix0aGlzLl9tZW51LG8pLGkmJndlLnNldERhdGFBdHRyaWJ1dGUodGhpcy5fbWVudSxcInBvcHBlclwiLFwic3RhdGljXCIpfV9pc1Nob3duKHQ9dGhpcy5fZWxlbWVudCl7cmV0dXJuIHQuY2xhc3NMaXN0LmNvbnRhaW5zKHRuKX1fZ2V0TWVudUVsZW1lbnQoKXtyZXR1cm4gT2UubmV4dCh0aGlzLl9lbGVtZW50LG5uKVswXX1fZ2V0UGxhY2VtZW50KCl7Y29uc3QgdD10aGlzLl9lbGVtZW50LnBhcmVudE5vZGU7aWYodC5jbGFzc0xpc3QuY29udGFpbnMoXCJkcm9wZW5kXCIpKXJldHVybiBjbjtpZih0LmNsYXNzTGlzdC5jb250YWlucyhcImRyb3BzdGFydFwiKSlyZXR1cm4gbG47Y29uc3QgZT1cImVuZFwiPT09Z2V0Q29tcHV0ZWRTdHlsZSh0aGlzLl9tZW51KS5nZXRQcm9wZXJ0eVZhbHVlKFwiLS1icy1wb3NpdGlvblwiKS50cmltKCk7cmV0dXJuIHQuY2xhc3NMaXN0LmNvbnRhaW5zKFwiZHJvcHVwXCIpP2U/cm46b246ZT9hbjpzbn1fZGV0ZWN0TmF2YmFyKCl7cmV0dXJuIG51bGwhPT10aGlzLl9lbGVtZW50LmNsb3Nlc3QoXCIubmF2YmFyXCIpfV9nZXRPZmZzZXQoKXtjb25zdHtvZmZzZXQ6dH09dGhpcy5fY29uZmlnO3JldHVyblwic3RyaW5nXCI9PXR5cGVvZiB0P3Quc3BsaXQoXCIsXCIpLm1hcCgodD0+TnVtYmVyLnBhcnNlSW50KHQsMTApKSk6XCJmdW5jdGlvblwiPT10eXBlb2YgdD9lPT50KGUsdGhpcy5fZWxlbWVudCk6dH1fZ2V0UG9wcGVyQ29uZmlnKCl7Y29uc3QgdD17cGxhY2VtZW50OnRoaXMuX2dldFBsYWNlbWVudCgpLG1vZGlmaWVyczpbe25hbWU6XCJwcmV2ZW50T3ZlcmZsb3dcIixvcHRpb25zOntib3VuZGFyeTp0aGlzLl9jb25maWcuYm91bmRhcnl9fSx7bmFtZTpcIm9mZnNldFwiLG9wdGlvbnM6e29mZnNldDp0aGlzLl9nZXRPZmZzZXQoKX19XX07cmV0dXJuXCJzdGF0aWNcIj09PXRoaXMuX2NvbmZpZy5kaXNwbGF5JiYodC5tb2RpZmllcnM9W3tuYW1lOlwiYXBwbHlTdHlsZXNcIixlbmFibGVkOiExfV0pLHsuLi50LC4uLlwiZnVuY3Rpb25cIj09dHlwZW9mIHRoaXMuX2NvbmZpZy5wb3BwZXJDb25maWc/dGhpcy5fY29uZmlnLnBvcHBlckNvbmZpZyh0KTp0aGlzLl9jb25maWcucG9wcGVyQ29uZmlnfX1fc2VsZWN0TWVudUl0ZW0oe2tleTp0LHRhcmdldDplfSl7Y29uc3Qgbj1PZS5maW5kKFwiLmRyb3Bkb3duLW1lbnUgLmRyb3Bkb3duLWl0ZW06bm90KC5kaXNhYmxlZCk6bm90KDpkaXNhYmxlZClcIix0aGlzLl9tZW51KS5maWx0ZXIoQnQpO24ubGVuZ3RoJiZZdChuLGUsdD09PVllLCFuLmluY2x1ZGVzKGUpKS5mb2N1cygpfXN0YXRpYyBqUXVlcnlJbnRlcmZhY2UodCl7cmV0dXJuIHRoaXMuZWFjaCgoZnVuY3Rpb24oKXtjb25zdCBlPXBuLmdldE9yQ3JlYXRlSW5zdGFuY2UodGhpcyx0KTtpZihcInN0cmluZ1wiPT10eXBlb2YgdCl7aWYodm9pZCAwPT09ZVt0XSl0aHJvdyBuZXcgVHlwZUVycm9yKGBObyBtZXRob2QgbmFtZWQgXCIke3R9XCJgKTtlW3RdKCl9fSkpfXN0YXRpYyBjbGVhck1lbnVzKHQpe2lmKHQmJigyPT09dC5idXR0b258fFwia2V5dXBcIj09PXQudHlwZSYmXCJUYWJcIiE9PXQua2V5KSlyZXR1cm47Y29uc3QgZT1PZS5maW5kKGVuKTtmb3IobGV0IG49MCxvPWUubGVuZ3RoO248bztuKyspe2NvbnN0IG89cG4uZ2V0SW5zdGFuY2UoZVtuXSk7aWYoIW98fCExPT09by5fY29uZmlnLmF1dG9DbG9zZSljb250aW51ZTtpZighby5faXNTaG93bigpKWNvbnRpbnVlO2NvbnN0IGk9e3JlbGF0ZWRUYXJnZXQ6by5fZWxlbWVudH07aWYodCl7Y29uc3QgZT10LmNvbXBvc2VkUGF0aCgpLG49ZS5pbmNsdWRlcyhvLl9tZW51KTtpZihlLmluY2x1ZGVzKG8uX2VsZW1lbnQpfHxcImluc2lkZVwiPT09by5fY29uZmlnLmF1dG9DbG9zZSYmIW58fFwib3V0c2lkZVwiPT09by5fY29uZmlnLmF1dG9DbG9zZSYmbiljb250aW51ZTtpZihvLl9tZW51LmNvbnRhaW5zKHQudGFyZ2V0KSYmKFwia2V5dXBcIj09PXQudHlwZSYmXCJUYWJcIj09PXQua2V5fHwvaW5wdXR8c2VsZWN0fG9wdGlvbnx0ZXh0YXJlYXxmb3JtL2kudGVzdCh0LnRhcmdldC50YWdOYW1lKSkpY29udGludWU7XCJjbGlja1wiPT09dC50eXBlJiYoaS5jbGlja0V2ZW50PXQpfW8uX2NvbXBsZXRlSGlkZShpKX19c3RhdGljIGdldFBhcmVudEZyb21FbGVtZW50KHQpe3JldHVybiBQdCh0KXx8dC5wYXJlbnROb2RlfXN0YXRpYyBkYXRhQXBpS2V5ZG93bkhhbmRsZXIodCl7aWYoL2lucHV0fHRleHRhcmVhL2kudGVzdCh0LnRhcmdldC50YWdOYW1lKT90LmtleT09PUtlfHx0LmtleSE9PXFlJiYodC5rZXkhPT1ZZSYmdC5rZXkhPT1YZXx8dC50YXJnZXQuY2xvc2VzdChubikpOiFRZS50ZXN0KHQua2V5KSlyZXR1cm47Y29uc3QgZT10aGlzLmNsYXNzTGlzdC5jb250YWlucyh0bik7aWYoIWUmJnQua2V5PT09cWUpcmV0dXJuO2lmKHQucHJldmVudERlZmF1bHQoKSx0LnN0b3BQcm9wYWdhdGlvbigpLEd0KHRoaXMpKXJldHVybjtjb25zdCBuPXRoaXMubWF0Y2hlcyhlbik/dGhpczpPZS5wcmV2KHRoaXMsZW4pWzBdLG89cG4uZ2V0T3JDcmVhdGVJbnN0YW5jZShuKTtpZih0LmtleSE9PXFlKXJldHVybiB0LmtleT09PVhlfHx0LmtleT09PVllPyhlfHxvLnNob3coKSx2b2lkIG8uX3NlbGVjdE1lbnVJdGVtKHQpKTp2b2lkKGUmJnQua2V5IT09S2V8fHBuLmNsZWFyTWVudXMoKSk7by5oaWRlKCl9fXBlLm9uKGRvY3VtZW50LFplLGVuLHBuLmRhdGFBcGlLZXlkb3duSGFuZGxlcikscGUub24oZG9jdW1lbnQsWmUsbm4scG4uZGF0YUFwaUtleWRvd25IYW5kbGVyKSxwZS5vbihkb2N1bWVudCxKZSxwbi5jbGVhck1lbnVzKSxwZS5vbihkb2N1bWVudCxcImtleXVwLmJzLmRyb3Bkb3duLmRhdGEtYXBpXCIscG4uY2xlYXJNZW51cykscGUub24oZG9jdW1lbnQsSmUsZW4sKGZ1bmN0aW9uKHQpe3QucHJldmVudERlZmF1bHQoKSxwbi5nZXRPckNyZWF0ZUluc3RhbmNlKHRoaXMpLnRvZ2dsZSgpfSkpLHF0KHBuKTtjb25zdCBobj1cIi5maXhlZC10b3AsIC5maXhlZC1ib3R0b20sIC5pcy1maXhlZCwgLnN0aWNreS10b3BcIixmbj1cIi5zdGlja3ktdG9wXCI7Y2xhc3MgbW57Y29uc3RydWN0b3IoKXt0aGlzLl9lbGVtZW50PWRvY3VtZW50LmJvZHl9Z2V0V2lkdGgoKXtjb25zdCB0PWRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aDtyZXR1cm4gTWF0aC5hYnMod2luZG93LmlubmVyV2lkdGgtdCl9aGlkZSgpe2NvbnN0IHQ9dGhpcy5nZXRXaWR0aCgpO3RoaXMuX2Rpc2FibGVPdmVyRmxvdygpLHRoaXMuX3NldEVsZW1lbnRBdHRyaWJ1dGVzKHRoaXMuX2VsZW1lbnQsXCJwYWRkaW5nUmlnaHRcIiwoZT0+ZSt0KSksdGhpcy5fc2V0RWxlbWVudEF0dHJpYnV0ZXMoaG4sXCJwYWRkaW5nUmlnaHRcIiwoZT0+ZSt0KSksdGhpcy5fc2V0RWxlbWVudEF0dHJpYnV0ZXMoZm4sXCJtYXJnaW5SaWdodFwiLChlPT5lLXQpKX1fZGlzYWJsZU92ZXJGbG93KCl7dGhpcy5fc2F2ZUluaXRpYWxBdHRyaWJ1dGUodGhpcy5fZWxlbWVudCxcIm92ZXJmbG93XCIpLHRoaXMuX2VsZW1lbnQuc3R5bGUub3ZlcmZsb3c9XCJoaWRkZW5cIn1fc2V0RWxlbWVudEF0dHJpYnV0ZXModCxlLG4pe2NvbnN0IG89dGhpcy5nZXRXaWR0aCgpO3RoaXMuX2FwcGx5TWFuaXB1bGF0aW9uQ2FsbGJhY2sodCwodD0+e2lmKHQhPT10aGlzLl9lbGVtZW50JiZ3aW5kb3cuaW5uZXJXaWR0aD50LmNsaWVudFdpZHRoK28pcmV0dXJuO3RoaXMuX3NhdmVJbml0aWFsQXR0cmlidXRlKHQsZSk7Y29uc3QgaT13aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSh0KVtlXTt0LnN0eWxlW2VdPWAke24oTnVtYmVyLnBhcnNlRmxvYXQoaSkpfXB4YH0pKX1yZXNldCgpe3RoaXMuX3Jlc2V0RWxlbWVudEF0dHJpYnV0ZXModGhpcy5fZWxlbWVudCxcIm92ZXJmbG93XCIpLHRoaXMuX3Jlc2V0RWxlbWVudEF0dHJpYnV0ZXModGhpcy5fZWxlbWVudCxcInBhZGRpbmdSaWdodFwiKSx0aGlzLl9yZXNldEVsZW1lbnRBdHRyaWJ1dGVzKGhuLFwicGFkZGluZ1JpZ2h0XCIpLHRoaXMuX3Jlc2V0RWxlbWVudEF0dHJpYnV0ZXMoZm4sXCJtYXJnaW5SaWdodFwiKX1fc2F2ZUluaXRpYWxBdHRyaWJ1dGUodCxlKXtjb25zdCBuPXQuc3R5bGVbZV07biYmd2Uuc2V0RGF0YUF0dHJpYnV0ZSh0LGUsbil9X3Jlc2V0RWxlbWVudEF0dHJpYnV0ZXModCxlKXt0aGlzLl9hcHBseU1hbmlwdWxhdGlvbkNhbGxiYWNrKHQsKHQ9Pntjb25zdCBuPXdlLmdldERhdGFBdHRyaWJ1dGUodCxlKTt2b2lkIDA9PT1uP3Quc3R5bGUucmVtb3ZlUHJvcGVydHkoZSk6KHdlLnJlbW92ZURhdGFBdHRyaWJ1dGUodCxlKSx0LnN0eWxlW2VdPW4pfSkpfV9hcHBseU1hbmlwdWxhdGlvbkNhbGxiYWNrKHQsZSl7anQodCk/ZSh0KTpPZS5maW5kKHQsdGhpcy5fZWxlbWVudCkuZm9yRWFjaChlKX1pc092ZXJmbG93aW5nKCl7cmV0dXJuIHRoaXMuZ2V0V2lkdGgoKT4wfX1jb25zdCBnbj17Y2xhc3NOYW1lOlwibW9kYWwtYmFja2Ryb3BcIixpc1Zpc2libGU6ITAsaXNBbmltYXRlZDohMSxyb290RWxlbWVudDpcImJvZHlcIixjbGlja0NhbGxiYWNrOm51bGx9LF9uPXtjbGFzc05hbWU6XCJzdHJpbmdcIixpc1Zpc2libGU6XCJib29sZWFuXCIsaXNBbmltYXRlZDpcImJvb2xlYW5cIixyb290RWxlbWVudDpcIihlbGVtZW50fHN0cmluZylcIixjbGlja0NhbGxiYWNrOlwiKGZ1bmN0aW9ufG51bGwpXCJ9LHZuPVwic2hvd1wiLHluPVwibW91c2Vkb3duLmJzLmJhY2tkcm9wXCI7Y2xhc3MgYm57Y29uc3RydWN0b3IodCl7dGhpcy5fY29uZmlnPXRoaXMuX2dldENvbmZpZyh0KSx0aGlzLl9pc0FwcGVuZGVkPSExLHRoaXMuX2VsZW1lbnQ9bnVsbH1zaG93KHQpe3RoaXMuX2NvbmZpZy5pc1Zpc2libGU/KHRoaXMuX2FwcGVuZCgpLHRoaXMuX2NvbmZpZy5pc0FuaW1hdGVkJiZVdCh0aGlzLl9nZXRFbGVtZW50KCkpLHRoaXMuX2dldEVsZW1lbnQoKS5jbGFzc0xpc3QuYWRkKHZuKSx0aGlzLl9lbXVsYXRlQW5pbWF0aW9uKCgoKT0+e0t0KHQpfSkpKTpLdCh0KX1oaWRlKHQpe3RoaXMuX2NvbmZpZy5pc1Zpc2libGU/KHRoaXMuX2dldEVsZW1lbnQoKS5jbGFzc0xpc3QucmVtb3ZlKHZuKSx0aGlzLl9lbXVsYXRlQW5pbWF0aW9uKCgoKT0+e3RoaXMuZGlzcG9zZSgpLEt0KHQpfSkpKTpLdCh0KX1fZ2V0RWxlbWVudCgpe2lmKCF0aGlzLl9lbGVtZW50KXtjb25zdCB0PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7dC5jbGFzc05hbWU9dGhpcy5fY29uZmlnLmNsYXNzTmFtZSx0aGlzLl9jb25maWcuaXNBbmltYXRlZCYmdC5jbGFzc0xpc3QuYWRkKFwiZmFkZVwiKSx0aGlzLl9lbGVtZW50PXR9cmV0dXJuIHRoaXMuX2VsZW1lbnR9X2dldENvbmZpZyh0KXtyZXR1cm4odD17Li4uZ24sLi4uXCJvYmplY3RcIj09dHlwZW9mIHQ/dDp7fX0pLnJvb3RFbGVtZW50PUh0KHQucm9vdEVsZW1lbnQpLE10KFwiYmFja2Ryb3BcIix0LF9uKSx0fV9hcHBlbmQoKXt0aGlzLl9pc0FwcGVuZGVkfHwodGhpcy5fY29uZmlnLnJvb3RFbGVtZW50LmFwcGVuZCh0aGlzLl9nZXRFbGVtZW50KCkpLHBlLm9uKHRoaXMuX2dldEVsZW1lbnQoKSx5biwoKCk9PntLdCh0aGlzLl9jb25maWcuY2xpY2tDYWxsYmFjayl9KSksdGhpcy5faXNBcHBlbmRlZD0hMCl9ZGlzcG9zZSgpe3RoaXMuX2lzQXBwZW5kZWQmJihwZS5vZmYodGhpcy5fZWxlbWVudCx5biksdGhpcy5fZWxlbWVudC5yZW1vdmUoKSx0aGlzLl9pc0FwcGVuZGVkPSExKX1fZW11bGF0ZUFuaW1hdGlvbih0KXtYdCh0LHRoaXMuX2dldEVsZW1lbnQoKSx0aGlzLl9jb25maWcuaXNBbmltYXRlZCl9fWNvbnN0IEVuPXt0cmFwRWxlbWVudDpudWxsLGF1dG9mb2N1czohMH0sd249e3RyYXBFbGVtZW50OlwiZWxlbWVudFwiLGF1dG9mb2N1czpcImJvb2xlYW5cIn0sT249XCIuYnMuZm9jdXN0cmFwXCIsRG49XCJiYWNrd2FyZFwiO2NsYXNzIENue2NvbnN0cnVjdG9yKHQpe3RoaXMuX2NvbmZpZz10aGlzLl9nZXRDb25maWcodCksdGhpcy5faXNBY3RpdmU9ITEsdGhpcy5fbGFzdFRhYk5hdkRpcmVjdGlvbj1udWxsfWFjdGl2YXRlKCl7Y29uc3R7dHJhcEVsZW1lbnQ6dCxhdXRvZm9jdXM6ZX09dGhpcy5fY29uZmlnO3RoaXMuX2lzQWN0aXZlfHwoZSYmdC5mb2N1cygpLHBlLm9mZihkb2N1bWVudCxPbikscGUub24oZG9jdW1lbnQsXCJmb2N1c2luLmJzLmZvY3VzdHJhcFwiLCh0PT50aGlzLl9oYW5kbGVGb2N1c2luKHQpKSkscGUub24oZG9jdW1lbnQsXCJrZXlkb3duLnRhYi5icy5mb2N1c3RyYXBcIiwodD0+dGhpcy5faGFuZGxlS2V5ZG93bih0KSkpLHRoaXMuX2lzQWN0aXZlPSEwKX1kZWFjdGl2YXRlKCl7dGhpcy5faXNBY3RpdmUmJih0aGlzLl9pc0FjdGl2ZT0hMSxwZS5vZmYoZG9jdW1lbnQsT24pKX1faGFuZGxlRm9jdXNpbih0KXtjb25zdHt0YXJnZXQ6ZX09dCx7dHJhcEVsZW1lbnQ6bn09dGhpcy5fY29uZmlnO2lmKGU9PT1kb2N1bWVudHx8ZT09PW58fG4uY29udGFpbnMoZSkpcmV0dXJuO2NvbnN0IG89T2UuZm9jdXNhYmxlQ2hpbGRyZW4obik7MD09PW8ubGVuZ3RoP24uZm9jdXMoKTp0aGlzLl9sYXN0VGFiTmF2RGlyZWN0aW9uPT09RG4/b1tvLmxlbmd0aC0xXS5mb2N1cygpOm9bMF0uZm9jdXMoKX1faGFuZGxlS2V5ZG93bih0KXtcIlRhYlwiPT09dC5rZXkmJih0aGlzLl9sYXN0VGFiTmF2RGlyZWN0aW9uPXQuc2hpZnRLZXk/RG46XCJmb3J3YXJkXCIpfV9nZXRDb25maWcodCl7cmV0dXJuIHQ9ey4uLkVuLC4uLlwib2JqZWN0XCI9PXR5cGVvZiB0P3Q6e319LE10KFwiZm9jdXN0cmFwXCIsdCx3biksdH19Y29uc3QgU249XCJtb2RhbFwiLFRuPVwiRXNjYXBlXCIsUm49e2JhY2tkcm9wOiEwLGtleWJvYXJkOiEwLGZvY3VzOiEwfSxObj17YmFja2Ryb3A6XCIoYm9vbGVhbnxzdHJpbmcpXCIsa2V5Ym9hcmQ6XCJib29sZWFuXCIsZm9jdXM6XCJib29sZWFuXCJ9LEluPVwiaGlkZGVuLmJzLm1vZGFsXCIsQW49XCJzaG93LmJzLm1vZGFsXCIseG49XCJyZXNpemUuYnMubW9kYWxcIixMbj1cImNsaWNrLmRpc21pc3MuYnMubW9kYWxcIixQbj1cImtleWRvd24uZGlzbWlzcy5icy5tb2RhbFwiLGtuPVwibW91c2Vkb3duLmRpc21pc3MuYnMubW9kYWxcIixqbj1cIm1vZGFsLW9wZW5cIixIbj1cInNob3dcIixNbj1cIm1vZGFsLXN0YXRpY1wiO2NsYXNzIEJuIGV4dGVuZHMgbWV7Y29uc3RydWN0b3IodCxlKXtzdXBlcih0KSx0aGlzLl9jb25maWc9dGhpcy5fZ2V0Q29uZmlnKGUpLHRoaXMuX2RpYWxvZz1PZS5maW5kT25lKFwiLm1vZGFsLWRpYWxvZ1wiLHRoaXMuX2VsZW1lbnQpLHRoaXMuX2JhY2tkcm9wPXRoaXMuX2luaXRpYWxpemVCYWNrRHJvcCgpLHRoaXMuX2ZvY3VzdHJhcD10aGlzLl9pbml0aWFsaXplRm9jdXNUcmFwKCksdGhpcy5faXNTaG93bj0hMSx0aGlzLl9pZ25vcmVCYWNrZHJvcENsaWNrPSExLHRoaXMuX2lzVHJhbnNpdGlvbmluZz0hMSx0aGlzLl9zY3JvbGxCYXI9bmV3IG1ufXN0YXRpYyBnZXQgRGVmYXVsdCgpe3JldHVybiBSbn1zdGF0aWMgZ2V0IE5BTUUoKXtyZXR1cm4gU259dG9nZ2xlKHQpe3JldHVybiB0aGlzLl9pc1Nob3duP3RoaXMuaGlkZSgpOnRoaXMuc2hvdyh0KX1zaG93KHQpe3RoaXMuX2lzU2hvd258fHRoaXMuX2lzVHJhbnNpdGlvbmluZ3x8cGUudHJpZ2dlcih0aGlzLl9lbGVtZW50LEFuLHtyZWxhdGVkVGFyZ2V0OnR9KS5kZWZhdWx0UHJldmVudGVkfHwodGhpcy5faXNTaG93bj0hMCx0aGlzLl9pc0FuaW1hdGVkKCkmJih0aGlzLl9pc1RyYW5zaXRpb25pbmc9ITApLHRoaXMuX3Njcm9sbEJhci5oaWRlKCksZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QuYWRkKGpuKSx0aGlzLl9hZGp1c3REaWFsb2coKSx0aGlzLl9zZXRFc2NhcGVFdmVudCgpLHRoaXMuX3NldFJlc2l6ZUV2ZW50KCkscGUub24odGhpcy5fZGlhbG9nLGtuLCgoKT0+e3BlLm9uZSh0aGlzLl9lbGVtZW50LFwibW91c2V1cC5kaXNtaXNzLmJzLm1vZGFsXCIsKHQ9Pnt0LnRhcmdldD09PXRoaXMuX2VsZW1lbnQmJih0aGlzLl9pZ25vcmVCYWNrZHJvcENsaWNrPSEwKX0pKX0pKSx0aGlzLl9zaG93QmFja2Ryb3AoKCgpPT50aGlzLl9zaG93RWxlbWVudCh0KSkpKX1oaWRlKCl7aWYoIXRoaXMuX2lzU2hvd258fHRoaXMuX2lzVHJhbnNpdGlvbmluZylyZXR1cm47aWYocGUudHJpZ2dlcih0aGlzLl9lbGVtZW50LFwiaGlkZS5icy5tb2RhbFwiKS5kZWZhdWx0UHJldmVudGVkKXJldHVybjt0aGlzLl9pc1Nob3duPSExO2NvbnN0IHQ9dGhpcy5faXNBbmltYXRlZCgpO3QmJih0aGlzLl9pc1RyYW5zaXRpb25pbmc9ITApLHRoaXMuX3NldEVzY2FwZUV2ZW50KCksdGhpcy5fc2V0UmVzaXplRXZlbnQoKSx0aGlzLl9mb2N1c3RyYXAuZGVhY3RpdmF0ZSgpLHRoaXMuX2VsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZShIbikscGUub2ZmKHRoaXMuX2VsZW1lbnQsTG4pLHBlLm9mZih0aGlzLl9kaWFsb2csa24pLHRoaXMuX3F1ZXVlQ2FsbGJhY2soKCgpPT50aGlzLl9oaWRlTW9kYWwoKSksdGhpcy5fZWxlbWVudCx0KX1kaXNwb3NlKCl7W3dpbmRvdyx0aGlzLl9kaWFsb2ddLmZvckVhY2goKHQ9PnBlLm9mZih0LFwiLmJzLm1vZGFsXCIpKSksdGhpcy5fYmFja2Ryb3AuZGlzcG9zZSgpLHRoaXMuX2ZvY3VzdHJhcC5kZWFjdGl2YXRlKCksc3VwZXIuZGlzcG9zZSgpfWhhbmRsZVVwZGF0ZSgpe3RoaXMuX2FkanVzdERpYWxvZygpfV9pbml0aWFsaXplQmFja0Ryb3AoKXtyZXR1cm4gbmV3IGJuKHtpc1Zpc2libGU6Qm9vbGVhbih0aGlzLl9jb25maWcuYmFja2Ryb3ApLGlzQW5pbWF0ZWQ6dGhpcy5faXNBbmltYXRlZCgpfSl9X2luaXRpYWxpemVGb2N1c1RyYXAoKXtyZXR1cm4gbmV3IENuKHt0cmFwRWxlbWVudDp0aGlzLl9lbGVtZW50fSl9X2dldENvbmZpZyh0KXtyZXR1cm4gdD17Li4uUm4sLi4ud2UuZ2V0RGF0YUF0dHJpYnV0ZXModGhpcy5fZWxlbWVudCksLi4uXCJvYmplY3RcIj09dHlwZW9mIHQ/dDp7fX0sTXQoU24sdCxObiksdH1fc2hvd0VsZW1lbnQodCl7Y29uc3QgZT10aGlzLl9pc0FuaW1hdGVkKCksbj1PZS5maW5kT25lKFwiLm1vZGFsLWJvZHlcIix0aGlzLl9kaWFsb2cpO3RoaXMuX2VsZW1lbnQucGFyZW50Tm9kZSYmdGhpcy5fZWxlbWVudC5wYXJlbnROb2RlLm5vZGVUeXBlPT09Tm9kZS5FTEVNRU5UX05PREV8fGRvY3VtZW50LmJvZHkuYXBwZW5kKHRoaXMuX2VsZW1lbnQpLHRoaXMuX2VsZW1lbnQuc3R5bGUuZGlzcGxheT1cImJsb2NrXCIsdGhpcy5fZWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUoXCJhcmlhLWhpZGRlblwiKSx0aGlzLl9lbGVtZW50LnNldEF0dHJpYnV0ZShcImFyaWEtbW9kYWxcIiwhMCksdGhpcy5fZWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJyb2xlXCIsXCJkaWFsb2dcIiksdGhpcy5fZWxlbWVudC5zY3JvbGxUb3A9MCxuJiYobi5zY3JvbGxUb3A9MCksZSYmVXQodGhpcy5fZWxlbWVudCksdGhpcy5fZWxlbWVudC5jbGFzc0xpc3QuYWRkKEhuKSx0aGlzLl9xdWV1ZUNhbGxiYWNrKCgoKT0+e3RoaXMuX2NvbmZpZy5mb2N1cyYmdGhpcy5fZm9jdXN0cmFwLmFjdGl2YXRlKCksdGhpcy5faXNUcmFuc2l0aW9uaW5nPSExLHBlLnRyaWdnZXIodGhpcy5fZWxlbWVudCxcInNob3duLmJzLm1vZGFsXCIse3JlbGF0ZWRUYXJnZXQ6dH0pfSksdGhpcy5fZGlhbG9nLGUpfV9zZXRFc2NhcGVFdmVudCgpe3RoaXMuX2lzU2hvd24/cGUub24odGhpcy5fZWxlbWVudCxQbiwodD0+e3RoaXMuX2NvbmZpZy5rZXlib2FyZCYmdC5rZXk9PT1Ubj8odC5wcmV2ZW50RGVmYXVsdCgpLHRoaXMuaGlkZSgpKTp0aGlzLl9jb25maWcua2V5Ym9hcmR8fHQua2V5IT09VG58fHRoaXMuX3RyaWdnZXJCYWNrZHJvcFRyYW5zaXRpb24oKX0pKTpwZS5vZmYodGhpcy5fZWxlbWVudCxQbil9X3NldFJlc2l6ZUV2ZW50KCl7dGhpcy5faXNTaG93bj9wZS5vbih3aW5kb3cseG4sKCgpPT50aGlzLl9hZGp1c3REaWFsb2coKSkpOnBlLm9mZih3aW5kb3cseG4pfV9oaWRlTW9kYWwoKXt0aGlzLl9lbGVtZW50LnN0eWxlLmRpc3BsYXk9XCJub25lXCIsdGhpcy5fZWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJhcmlhLWhpZGRlblwiLCEwKSx0aGlzLl9lbGVtZW50LnJlbW92ZUF0dHJpYnV0ZShcImFyaWEtbW9kYWxcIiksdGhpcy5fZWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUoXCJyb2xlXCIpLHRoaXMuX2lzVHJhbnNpdGlvbmluZz0hMSx0aGlzLl9iYWNrZHJvcC5oaWRlKCgoKT0+e2RvY3VtZW50LmJvZHkuY2xhc3NMaXN0LnJlbW92ZShqbiksdGhpcy5fcmVzZXRBZGp1c3RtZW50cygpLHRoaXMuX3Njcm9sbEJhci5yZXNldCgpLHBlLnRyaWdnZXIodGhpcy5fZWxlbWVudCxJbil9KSl9X3Nob3dCYWNrZHJvcCh0KXtwZS5vbih0aGlzLl9lbGVtZW50LExuLCh0PT57dGhpcy5faWdub3JlQmFja2Ryb3BDbGljaz90aGlzLl9pZ25vcmVCYWNrZHJvcENsaWNrPSExOnQudGFyZ2V0PT09dC5jdXJyZW50VGFyZ2V0JiYoITA9PT10aGlzLl9jb25maWcuYmFja2Ryb3A/dGhpcy5oaWRlKCk6XCJzdGF0aWNcIj09PXRoaXMuX2NvbmZpZy5iYWNrZHJvcCYmdGhpcy5fdHJpZ2dlckJhY2tkcm9wVHJhbnNpdGlvbigpKX0pKSx0aGlzLl9iYWNrZHJvcC5zaG93KHQpfV9pc0FuaW1hdGVkKCl7cmV0dXJuIHRoaXMuX2VsZW1lbnQuY2xhc3NMaXN0LmNvbnRhaW5zKFwiZmFkZVwiKX1fdHJpZ2dlckJhY2tkcm9wVHJhbnNpdGlvbigpe2lmKHBlLnRyaWdnZXIodGhpcy5fZWxlbWVudCxcImhpZGVQcmV2ZW50ZWQuYnMubW9kYWxcIikuZGVmYXVsdFByZXZlbnRlZClyZXR1cm47Y29uc3R7Y2xhc3NMaXN0OnQsc2Nyb2xsSGVpZ2h0OmUsc3R5bGU6bn09dGhpcy5fZWxlbWVudCxvPWU+ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudEhlaWdodDshbyYmXCJoaWRkZW5cIj09PW4ub3ZlcmZsb3dZfHx0LmNvbnRhaW5zKE1uKXx8KG98fChuLm92ZXJmbG93WT1cImhpZGRlblwiKSx0LmFkZChNbiksdGhpcy5fcXVldWVDYWxsYmFjaygoKCk9Pnt0LnJlbW92ZShNbiksb3x8dGhpcy5fcXVldWVDYWxsYmFjaygoKCk9PntuLm92ZXJmbG93WT1cIlwifSksdGhpcy5fZGlhbG9nKX0pLHRoaXMuX2RpYWxvZyksdGhpcy5fZWxlbWVudC5mb2N1cygpKX1fYWRqdXN0RGlhbG9nKCl7Y29uc3QgdD10aGlzLl9lbGVtZW50LnNjcm9sbEhlaWdodD5kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0LGU9dGhpcy5fc2Nyb2xsQmFyLmdldFdpZHRoKCksbj1lPjA7KCFuJiZ0JiYhJHQoKXx8biYmIXQmJiR0KCkpJiYodGhpcy5fZWxlbWVudC5zdHlsZS5wYWRkaW5nTGVmdD1gJHtlfXB4YCksKG4mJiF0JiYhJHQoKXx8IW4mJnQmJiR0KCkpJiYodGhpcy5fZWxlbWVudC5zdHlsZS5wYWRkaW5nUmlnaHQ9YCR7ZX1weGApfV9yZXNldEFkanVzdG1lbnRzKCl7dGhpcy5fZWxlbWVudC5zdHlsZS5wYWRkaW5nTGVmdD1cIlwiLHRoaXMuX2VsZW1lbnQuc3R5bGUucGFkZGluZ1JpZ2h0PVwiXCJ9c3RhdGljIGpRdWVyeUludGVyZmFjZSh0LGUpe3JldHVybiB0aGlzLmVhY2goKGZ1bmN0aW9uKCl7Y29uc3Qgbj1Cbi5nZXRPckNyZWF0ZUluc3RhbmNlKHRoaXMsdCk7aWYoXCJzdHJpbmdcIj09dHlwZW9mIHQpe2lmKHZvaWQgMD09PW5bdF0pdGhyb3cgbmV3IFR5cGVFcnJvcihgTm8gbWV0aG9kIG5hbWVkIFwiJHt0fVwiYCk7blt0XShlKX19KSl9fXBlLm9uKGRvY3VtZW50LFwiY2xpY2suYnMubW9kYWwuZGF0YS1hcGlcIiwnW2RhdGEtYnMtdG9nZ2xlPVwibW9kYWxcIl0nLChmdW5jdGlvbih0KXtjb25zdCBlPVB0KHRoaXMpO1tcIkFcIixcIkFSRUFcIl0uaW5jbHVkZXModGhpcy50YWdOYW1lKSYmdC5wcmV2ZW50RGVmYXVsdCgpLHBlLm9uZShlLEFuLCh0PT57dC5kZWZhdWx0UHJldmVudGVkfHxwZS5vbmUoZSxJbiwoKCk9PntCdCh0aGlzKSYmdGhpcy5mb2N1cygpfSkpfSkpO2NvbnN0IG49T2UuZmluZE9uZShcIi5tb2RhbC5zaG93XCIpO24mJkJuLmdldEluc3RhbmNlKG4pLmhpZGUoKSxCbi5nZXRPckNyZWF0ZUluc3RhbmNlKGUpLnRvZ2dsZSh0aGlzKX0pKSxnZShCbikscXQoQm4pO2NvbnN0IEduPVwib2ZmY2FudmFzXCIsV249e2JhY2tkcm9wOiEwLGtleWJvYXJkOiEwLHNjcm9sbDohMX0sRm49e2JhY2tkcm9wOlwiYm9vbGVhblwiLGtleWJvYXJkOlwiYm9vbGVhblwiLHNjcm9sbDpcImJvb2xlYW5cIn0sVW49XCJzaG93XCIsem49XCIub2ZmY2FudmFzLnNob3dcIixWbj1cImhpZGRlbi5icy5vZmZjYW52YXNcIjtjbGFzcyAkbiBleHRlbmRzIG1le2NvbnN0cnVjdG9yKHQsZSl7c3VwZXIodCksdGhpcy5fY29uZmlnPXRoaXMuX2dldENvbmZpZyhlKSx0aGlzLl9pc1Nob3duPSExLHRoaXMuX2JhY2tkcm9wPXRoaXMuX2luaXRpYWxpemVCYWNrRHJvcCgpLHRoaXMuX2ZvY3VzdHJhcD10aGlzLl9pbml0aWFsaXplRm9jdXNUcmFwKCksdGhpcy5fYWRkRXZlbnRMaXN0ZW5lcnMoKX1zdGF0aWMgZ2V0IE5BTUUoKXtyZXR1cm4gR259c3RhdGljIGdldCBEZWZhdWx0KCl7cmV0dXJuIFdufXRvZ2dsZSh0KXtyZXR1cm4gdGhpcy5faXNTaG93bj90aGlzLmhpZGUoKTp0aGlzLnNob3codCl9c2hvdyh0KXt0aGlzLl9pc1Nob3dufHxwZS50cmlnZ2VyKHRoaXMuX2VsZW1lbnQsXCJzaG93LmJzLm9mZmNhbnZhc1wiLHtyZWxhdGVkVGFyZ2V0OnR9KS5kZWZhdWx0UHJldmVudGVkfHwodGhpcy5faXNTaG93bj0hMCx0aGlzLl9lbGVtZW50LnN0eWxlLnZpc2liaWxpdHk9XCJ2aXNpYmxlXCIsdGhpcy5fYmFja2Ryb3Auc2hvdygpLHRoaXMuX2NvbmZpZy5zY3JvbGx8fChuZXcgbW4pLmhpZGUoKSx0aGlzLl9lbGVtZW50LnJlbW92ZUF0dHJpYnV0ZShcImFyaWEtaGlkZGVuXCIpLHRoaXMuX2VsZW1lbnQuc2V0QXR0cmlidXRlKFwiYXJpYS1tb2RhbFwiLCEwKSx0aGlzLl9lbGVtZW50LnNldEF0dHJpYnV0ZShcInJvbGVcIixcImRpYWxvZ1wiKSx0aGlzLl9lbGVtZW50LmNsYXNzTGlzdC5hZGQoVW4pLHRoaXMuX3F1ZXVlQ2FsbGJhY2soKCgpPT57dGhpcy5fY29uZmlnLnNjcm9sbHx8dGhpcy5fZm9jdXN0cmFwLmFjdGl2YXRlKCkscGUudHJpZ2dlcih0aGlzLl9lbGVtZW50LFwic2hvd24uYnMub2ZmY2FudmFzXCIse3JlbGF0ZWRUYXJnZXQ6dH0pfSksdGhpcy5fZWxlbWVudCwhMCkpfWhpZGUoKXt0aGlzLl9pc1Nob3duJiYocGUudHJpZ2dlcih0aGlzLl9lbGVtZW50LFwiaGlkZS5icy5vZmZjYW52YXNcIikuZGVmYXVsdFByZXZlbnRlZHx8KHRoaXMuX2ZvY3VzdHJhcC5kZWFjdGl2YXRlKCksdGhpcy5fZWxlbWVudC5ibHVyKCksdGhpcy5faXNTaG93bj0hMSx0aGlzLl9lbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoVW4pLHRoaXMuX2JhY2tkcm9wLmhpZGUoKSx0aGlzLl9xdWV1ZUNhbGxiYWNrKCgoKT0+e3RoaXMuX2VsZW1lbnQuc2V0QXR0cmlidXRlKFwiYXJpYS1oaWRkZW5cIiwhMCksdGhpcy5fZWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUoXCJhcmlhLW1vZGFsXCIpLHRoaXMuX2VsZW1lbnQucmVtb3ZlQXR0cmlidXRlKFwicm9sZVwiKSx0aGlzLl9lbGVtZW50LnN0eWxlLnZpc2liaWxpdHk9XCJoaWRkZW5cIix0aGlzLl9jb25maWcuc2Nyb2xsfHwobmV3IG1uKS5yZXNldCgpLHBlLnRyaWdnZXIodGhpcy5fZWxlbWVudCxWbil9KSx0aGlzLl9lbGVtZW50LCEwKSkpfWRpc3Bvc2UoKXt0aGlzLl9iYWNrZHJvcC5kaXNwb3NlKCksdGhpcy5fZm9jdXN0cmFwLmRlYWN0aXZhdGUoKSxzdXBlci5kaXNwb3NlKCl9X2dldENvbmZpZyh0KXtyZXR1cm4gdD17Li4uV24sLi4ud2UuZ2V0RGF0YUF0dHJpYnV0ZXModGhpcy5fZWxlbWVudCksLi4uXCJvYmplY3RcIj09dHlwZW9mIHQ/dDp7fX0sTXQoR24sdCxGbiksdH1faW5pdGlhbGl6ZUJhY2tEcm9wKCl7cmV0dXJuIG5ldyBibih7Y2xhc3NOYW1lOlwib2ZmY2FudmFzLWJhY2tkcm9wXCIsaXNWaXNpYmxlOnRoaXMuX2NvbmZpZy5iYWNrZHJvcCxpc0FuaW1hdGVkOiEwLHJvb3RFbGVtZW50OnRoaXMuX2VsZW1lbnQucGFyZW50Tm9kZSxjbGlja0NhbGxiYWNrOigpPT50aGlzLmhpZGUoKX0pfV9pbml0aWFsaXplRm9jdXNUcmFwKCl7cmV0dXJuIG5ldyBDbih7dHJhcEVsZW1lbnQ6dGhpcy5fZWxlbWVudH0pfV9hZGRFdmVudExpc3RlbmVycygpe3BlLm9uKHRoaXMuX2VsZW1lbnQsXCJrZXlkb3duLmRpc21pc3MuYnMub2ZmY2FudmFzXCIsKHQ9Pnt0aGlzLl9jb25maWcua2V5Ym9hcmQmJlwiRXNjYXBlXCI9PT10LmtleSYmdGhpcy5oaWRlKCl9KSl9c3RhdGljIGpRdWVyeUludGVyZmFjZSh0KXtyZXR1cm4gdGhpcy5lYWNoKChmdW5jdGlvbigpe2NvbnN0IGU9JG4uZ2V0T3JDcmVhdGVJbnN0YW5jZSh0aGlzLHQpO2lmKFwic3RyaW5nXCI9PXR5cGVvZiB0KXtpZih2b2lkIDA9PT1lW3RdfHx0LnN0YXJ0c1dpdGgoXCJfXCIpfHxcImNvbnN0cnVjdG9yXCI9PT10KXRocm93IG5ldyBUeXBlRXJyb3IoYE5vIG1ldGhvZCBuYW1lZCBcIiR7dH1cImApO2VbdF0odGhpcyl9fSkpfX1wZS5vbihkb2N1bWVudCxcImNsaWNrLmJzLm9mZmNhbnZhcy5kYXRhLWFwaVwiLCdbZGF0YS1icy10b2dnbGU9XCJvZmZjYW52YXNcIl0nLChmdW5jdGlvbih0KXtjb25zdCBlPVB0KHRoaXMpO2lmKFtcIkFcIixcIkFSRUFcIl0uaW5jbHVkZXModGhpcy50YWdOYW1lKSYmdC5wcmV2ZW50RGVmYXVsdCgpLEd0KHRoaXMpKXJldHVybjtwZS5vbmUoZSxWbiwoKCk9PntCdCh0aGlzKSYmdGhpcy5mb2N1cygpfSkpO2NvbnN0IG49T2UuZmluZE9uZSh6bik7biYmbiE9PWUmJiRuLmdldEluc3RhbmNlKG4pLmhpZGUoKSwkbi5nZXRPckNyZWF0ZUluc3RhbmNlKGUpLnRvZ2dsZSh0aGlzKX0pKSxwZS5vbih3aW5kb3csXCJsb2FkLmJzLm9mZmNhbnZhcy5kYXRhLWFwaVwiLCgoKT0+T2UuZmluZCh6bikuZm9yRWFjaCgodD0+JG4uZ2V0T3JDcmVhdGVJbnN0YW5jZSh0KS5zaG93KCkpKSkpLGdlKCRuKSxxdCgkbik7Y29uc3QgcW49bmV3IFNldChbXCJiYWNrZ3JvdW5kXCIsXCJjaXRlXCIsXCJocmVmXCIsXCJpdGVtdHlwZVwiLFwibG9uZ2Rlc2NcIixcInBvc3RlclwiLFwic3JjXCIsXCJ4bGluazpocmVmXCJdKSxLbj0vXig/Oig/Omh0dHBzP3xtYWlsdG98ZnRwfHRlbHxmaWxlfHNtcyk6fFteIyYvOj9dKig/OlsjLz9dfCQpKS9pLFhuPS9eZGF0YTooPzppbWFnZVxcLyg/OmJtcHxnaWZ8anBlZ3xqcGd8cG5nfHRpZmZ8d2VicCl8dmlkZW9cXC8oPzptcGVnfG1wNHxvZ2d8d2VibSl8YXVkaW9cXC8oPzptcDN8b2dhfG9nZ3xvcHVzKSk7YmFzZTY0LFtcXGQrL2Etel0rPSokL2ksWW49KHQsZSk9Pntjb25zdCBuPXQubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtpZihlLmluY2x1ZGVzKG4pKXJldHVybiFxbi5oYXMobil8fEJvb2xlYW4oS24udGVzdCh0Lm5vZGVWYWx1ZSl8fFhuLnRlc3QodC5ub2RlVmFsdWUpKTtjb25zdCBvPWUuZmlsdGVyKCh0PT50IGluc3RhbmNlb2YgUmVnRXhwKSk7Zm9yKGxldCB0PTAsZT1vLmxlbmd0aDt0PGU7dCsrKWlmKG9bdF0udGVzdChuKSlyZXR1cm4hMDtyZXR1cm4hMX07ZnVuY3Rpb24gUW4odCxlLG4pe2lmKCF0Lmxlbmd0aClyZXR1cm4gdDtpZihuJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBuKXJldHVybiBuKHQpO2NvbnN0IG89KG5ldyB3aW5kb3cuRE9NUGFyc2VyKS5wYXJzZUZyb21TdHJpbmcodCxcInRleHQvaHRtbFwiKSxpPVtdLmNvbmNhdCguLi5vLmJvZHkucXVlcnlTZWxlY3RvckFsbChcIipcIikpO2ZvcihsZXQgdD0wLG49aS5sZW5ndGg7dDxuO3QrKyl7Y29uc3Qgbj1pW3RdLG89bi5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO2lmKCFPYmplY3Qua2V5cyhlKS5pbmNsdWRlcyhvKSl7bi5yZW1vdmUoKTtjb250aW51ZX1jb25zdCByPVtdLmNvbmNhdCguLi5uLmF0dHJpYnV0ZXMpLHM9W10uY29uY2F0KGVbXCIqXCJdfHxbXSxlW29dfHxbXSk7ci5mb3JFYWNoKCh0PT57WW4odCxzKXx8bi5yZW1vdmVBdHRyaWJ1dGUodC5ub2RlTmFtZSl9KSl9cmV0dXJuIG8uYm9keS5pbm5lckhUTUx9Y29uc3QgSm49XCJ0b29sdGlwXCIsWm49bmV3IFNldChbXCJzYW5pdGl6ZVwiLFwiYWxsb3dMaXN0XCIsXCJzYW5pdGl6ZUZuXCJdKSx0bz17YW5pbWF0aW9uOlwiYm9vbGVhblwiLHRlbXBsYXRlOlwic3RyaW5nXCIsdGl0bGU6XCIoc3RyaW5nfGVsZW1lbnR8ZnVuY3Rpb24pXCIsdHJpZ2dlcjpcInN0cmluZ1wiLGRlbGF5OlwiKG51bWJlcnxvYmplY3QpXCIsaHRtbDpcImJvb2xlYW5cIixzZWxlY3RvcjpcIihzdHJpbmd8Ym9vbGVhbilcIixwbGFjZW1lbnQ6XCIoc3RyaW5nfGZ1bmN0aW9uKVwiLG9mZnNldDpcIihhcnJheXxzdHJpbmd8ZnVuY3Rpb24pXCIsY29udGFpbmVyOlwiKHN0cmluZ3xlbGVtZW50fGJvb2xlYW4pXCIsZmFsbGJhY2tQbGFjZW1lbnRzOlwiYXJyYXlcIixib3VuZGFyeTpcIihzdHJpbmd8ZWxlbWVudClcIixjdXN0b21DbGFzczpcIihzdHJpbmd8ZnVuY3Rpb24pXCIsc2FuaXRpemU6XCJib29sZWFuXCIsc2FuaXRpemVGbjpcIihudWxsfGZ1bmN0aW9uKVwiLGFsbG93TGlzdDpcIm9iamVjdFwiLHBvcHBlckNvbmZpZzpcIihudWxsfG9iamVjdHxmdW5jdGlvbilcIn0sZW89e0FVVE86XCJhdXRvXCIsVE9QOlwidG9wXCIsUklHSFQ6JHQoKT9cImxlZnRcIjpcInJpZ2h0XCIsQk9UVE9NOlwiYm90dG9tXCIsTEVGVDokdCgpP1wicmlnaHRcIjpcImxlZnRcIn0sbm89e2FuaW1hdGlvbjohMCx0ZW1wbGF0ZTonPGRpdiBjbGFzcz1cInRvb2x0aXBcIiByb2xlPVwidG9vbHRpcFwiPjxkaXYgY2xhc3M9XCJ0b29sdGlwLWFycm93XCI+PC9kaXY+PGRpdiBjbGFzcz1cInRvb2x0aXAtaW5uZXJcIj48L2Rpdj48L2Rpdj4nLHRyaWdnZXI6XCJob3ZlciBmb2N1c1wiLHRpdGxlOlwiXCIsZGVsYXk6MCxodG1sOiExLHNlbGVjdG9yOiExLHBsYWNlbWVudDpcInRvcFwiLG9mZnNldDpbMCwwXSxjb250YWluZXI6ITEsZmFsbGJhY2tQbGFjZW1lbnRzOltcInRvcFwiLFwicmlnaHRcIixcImJvdHRvbVwiLFwibGVmdFwiXSxib3VuZGFyeTpcImNsaXBwaW5nUGFyZW50c1wiLGN1c3RvbUNsYXNzOlwiXCIsc2FuaXRpemU6ITAsc2FuaXRpemVGbjpudWxsLGFsbG93TGlzdDp7XCIqXCI6W1wiY2xhc3NcIixcImRpclwiLFwiaWRcIixcImxhbmdcIixcInJvbGVcIiwvXmFyaWEtW1xcdy1dKiQvaV0sYTpbXCJ0YXJnZXRcIixcImhyZWZcIixcInRpdGxlXCIsXCJyZWxcIl0sYXJlYTpbXSxiOltdLGJyOltdLGNvbDpbXSxjb2RlOltdLGRpdjpbXSxlbTpbXSxocjpbXSxoMTpbXSxoMjpbXSxoMzpbXSxoNDpbXSxoNTpbXSxoNjpbXSxpOltdLGltZzpbXCJzcmNcIixcInNyY3NldFwiLFwiYWx0XCIsXCJ0aXRsZVwiLFwid2lkdGhcIixcImhlaWdodFwiXSxsaTpbXSxvbDpbXSxwOltdLHByZTpbXSxzOltdLHNtYWxsOltdLHNwYW46W10sc3ViOltdLHN1cDpbXSxzdHJvbmc6W10sdTpbXSx1bDpbXX0scG9wcGVyQ29uZmlnOm51bGx9LG9vPXtISURFOlwiaGlkZS5icy50b29sdGlwXCIsSElEREVOOlwiaGlkZGVuLmJzLnRvb2x0aXBcIixTSE9XOlwic2hvdy5icy50b29sdGlwXCIsU0hPV046XCJzaG93bi5icy50b29sdGlwXCIsSU5TRVJURUQ6XCJpbnNlcnRlZC5icy50b29sdGlwXCIsQ0xJQ0s6XCJjbGljay5icy50b29sdGlwXCIsRk9DVVNJTjpcImZvY3VzaW4uYnMudG9vbHRpcFwiLEZPQ1VTT1VUOlwiZm9jdXNvdXQuYnMudG9vbHRpcFwiLE1PVVNFRU5URVI6XCJtb3VzZWVudGVyLmJzLnRvb2x0aXBcIixNT1VTRUxFQVZFOlwibW91c2VsZWF2ZS5icy50b29sdGlwXCJ9LGlvPVwiZmFkZVwiLHJvPVwic2hvd1wiLHNvPVwic2hvd1wiLGFvPVwib3V0XCIsY289XCIudG9vbHRpcC1pbm5lclwiLGxvPVwiLm1vZGFsXCIsdW89XCJoaWRlLmJzLm1vZGFsXCIscG89XCJob3ZlclwiLGhvPVwiZm9jdXNcIjtjbGFzcyBmbyBleHRlbmRzIG1le2NvbnN0cnVjdG9yKGUsbil7aWYodm9pZCAwPT09dCl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQm9vdHN0cmFwJ3MgdG9vbHRpcHMgcmVxdWlyZSBQb3BwZXIgKGh0dHBzOi8vcG9wcGVyLmpzLm9yZylcIik7c3VwZXIoZSksdGhpcy5faXNFbmFibGVkPSEwLHRoaXMuX3RpbWVvdXQ9MCx0aGlzLl9ob3ZlclN0YXRlPVwiXCIsdGhpcy5fYWN0aXZlVHJpZ2dlcj17fSx0aGlzLl9wb3BwZXI9bnVsbCx0aGlzLl9jb25maWc9dGhpcy5fZ2V0Q29uZmlnKG4pLHRoaXMudGlwPW51bGwsdGhpcy5fc2V0TGlzdGVuZXJzKCl9c3RhdGljIGdldCBEZWZhdWx0KCl7cmV0dXJuIG5vfXN0YXRpYyBnZXQgTkFNRSgpe3JldHVybiBKbn1zdGF0aWMgZ2V0IEV2ZW50KCl7cmV0dXJuIG9vfXN0YXRpYyBnZXQgRGVmYXVsdFR5cGUoKXtyZXR1cm4gdG99ZW5hYmxlKCl7dGhpcy5faXNFbmFibGVkPSEwfWRpc2FibGUoKXt0aGlzLl9pc0VuYWJsZWQ9ITF9dG9nZ2xlRW5hYmxlZCgpe3RoaXMuX2lzRW5hYmxlZD0hdGhpcy5faXNFbmFibGVkfXRvZ2dsZSh0KXtpZih0aGlzLl9pc0VuYWJsZWQpaWYodCl7Y29uc3QgZT10aGlzLl9pbml0aWFsaXplT25EZWxlZ2F0ZWRUYXJnZXQodCk7ZS5fYWN0aXZlVHJpZ2dlci5jbGljaz0hZS5fYWN0aXZlVHJpZ2dlci5jbGljayxlLl9pc1dpdGhBY3RpdmVUcmlnZ2VyKCk/ZS5fZW50ZXIobnVsbCxlKTplLl9sZWF2ZShudWxsLGUpfWVsc2V7aWYodGhpcy5nZXRUaXBFbGVtZW50KCkuY2xhc3NMaXN0LmNvbnRhaW5zKHJvKSlyZXR1cm4gdm9pZCB0aGlzLl9sZWF2ZShudWxsLHRoaXMpO3RoaXMuX2VudGVyKG51bGwsdGhpcyl9fWRpc3Bvc2UoKXtjbGVhclRpbWVvdXQodGhpcy5fdGltZW91dCkscGUub2ZmKHRoaXMuX2VsZW1lbnQuY2xvc2VzdChsbyksdW8sdGhpcy5faGlkZU1vZGFsSGFuZGxlciksdGhpcy50aXAmJnRoaXMudGlwLnJlbW92ZSgpLHRoaXMuX2Rpc3Bvc2VQb3BwZXIoKSxzdXBlci5kaXNwb3NlKCl9c2hvdygpe2lmKFwibm9uZVwiPT09dGhpcy5fZWxlbWVudC5zdHlsZS5kaXNwbGF5KXRocm93IG5ldyBFcnJvcihcIlBsZWFzZSB1c2Ugc2hvdyBvbiB2aXNpYmxlIGVsZW1lbnRzXCIpO2lmKCF0aGlzLmlzV2l0aENvbnRlbnQoKXx8IXRoaXMuX2lzRW5hYmxlZClyZXR1cm47Y29uc3QgdD1wZS50cmlnZ2VyKHRoaXMuX2VsZW1lbnQsdGhpcy5jb25zdHJ1Y3Rvci5FdmVudC5TSE9XKSxlPVd0KHRoaXMuX2VsZW1lbnQpLG49bnVsbD09PWU/dGhpcy5fZWxlbWVudC5vd25lckRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jb250YWlucyh0aGlzLl9lbGVtZW50KTplLmNvbnRhaW5zKHRoaXMuX2VsZW1lbnQpO2lmKHQuZGVmYXVsdFByZXZlbnRlZHx8IW4pcmV0dXJuO1widG9vbHRpcFwiPT09dGhpcy5jb25zdHJ1Y3Rvci5OQU1FJiZ0aGlzLnRpcCYmdGhpcy5nZXRUaXRsZSgpIT09dGhpcy50aXAucXVlcnlTZWxlY3RvcihjbykuaW5uZXJIVE1MJiYodGhpcy5fZGlzcG9zZVBvcHBlcigpLHRoaXMudGlwLnJlbW92ZSgpLHRoaXMudGlwPW51bGwpO2NvbnN0IG89dGhpcy5nZXRUaXBFbGVtZW50KCksaT0odD0+e2Rve3QrPU1hdGguZmxvb3IoMWU2Kk1hdGgucmFuZG9tKCkpfXdoaWxlKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHQpKTtyZXR1cm4gdH0pKHRoaXMuY29uc3RydWN0b3IuTkFNRSk7by5zZXRBdHRyaWJ1dGUoXCJpZFwiLGkpLHRoaXMuX2VsZW1lbnQuc2V0QXR0cmlidXRlKFwiYXJpYS1kZXNjcmliZWRieVwiLGkpLHRoaXMuX2NvbmZpZy5hbmltYXRpb24mJm8uY2xhc3NMaXN0LmFkZChpbyk7Y29uc3Qgcj1cImZ1bmN0aW9uXCI9PXR5cGVvZiB0aGlzLl9jb25maWcucGxhY2VtZW50P3RoaXMuX2NvbmZpZy5wbGFjZW1lbnQuY2FsbCh0aGlzLG8sdGhpcy5fZWxlbWVudCk6dGhpcy5fY29uZmlnLnBsYWNlbWVudCxzPXRoaXMuX2dldEF0dGFjaG1lbnQocik7dGhpcy5fYWRkQXR0YWNobWVudENsYXNzKHMpO2NvbnN0e2NvbnRhaW5lcjphfT10aGlzLl9jb25maWc7ZmUuc2V0KG8sdGhpcy5jb25zdHJ1Y3Rvci5EQVRBX0tFWSx0aGlzKSx0aGlzLl9lbGVtZW50Lm93bmVyRG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNvbnRhaW5zKHRoaXMudGlwKXx8KGEuYXBwZW5kKG8pLHBlLnRyaWdnZXIodGhpcy5fZWxlbWVudCx0aGlzLmNvbnN0cnVjdG9yLkV2ZW50LklOU0VSVEVEKSksdGhpcy5fcG9wcGVyP3RoaXMuX3BvcHBlci51cGRhdGUoKTp0aGlzLl9wb3BwZXI9TnQodGhpcy5fZWxlbWVudCxvLHRoaXMuX2dldFBvcHBlckNvbmZpZyhzKSksby5jbGFzc0xpc3QuYWRkKHJvKTtjb25zdCBjPXRoaXMuX3Jlc29sdmVQb3NzaWJsZUZ1bmN0aW9uKHRoaXMuX2NvbmZpZy5jdXN0b21DbGFzcyk7YyYmby5jbGFzc0xpc3QuYWRkKC4uLmMuc3BsaXQoXCIgXCIpKSxcIm9udG91Y2hzdGFydFwiaW4gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50JiZbXS5jb25jYXQoLi4uZG9jdW1lbnQuYm9keS5jaGlsZHJlbikuZm9yRWFjaCgodD0+e3BlLm9uKHQsXCJtb3VzZW92ZXJcIixGdCl9KSk7Y29uc3QgbD10aGlzLnRpcC5jbGFzc0xpc3QuY29udGFpbnMoaW8pO3RoaXMuX3F1ZXVlQ2FsbGJhY2soKCgpPT57Y29uc3QgdD10aGlzLl9ob3ZlclN0YXRlO3RoaXMuX2hvdmVyU3RhdGU9bnVsbCxwZS50cmlnZ2VyKHRoaXMuX2VsZW1lbnQsdGhpcy5jb25zdHJ1Y3Rvci5FdmVudC5TSE9XTiksdD09PWFvJiZ0aGlzLl9sZWF2ZShudWxsLHRoaXMpfSksdGhpcy50aXAsbCl9aGlkZSgpe2lmKCF0aGlzLl9wb3BwZXIpcmV0dXJuO2NvbnN0IHQ9dGhpcy5nZXRUaXBFbGVtZW50KCk7aWYocGUudHJpZ2dlcih0aGlzLl9lbGVtZW50LHRoaXMuY29uc3RydWN0b3IuRXZlbnQuSElERSkuZGVmYXVsdFByZXZlbnRlZClyZXR1cm47dC5jbGFzc0xpc3QucmVtb3ZlKHJvKSxcIm9udG91Y2hzdGFydFwiaW4gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50JiZbXS5jb25jYXQoLi4uZG9jdW1lbnQuYm9keS5jaGlsZHJlbikuZm9yRWFjaCgodD0+cGUub2ZmKHQsXCJtb3VzZW92ZXJcIixGdCkpKSx0aGlzLl9hY3RpdmVUcmlnZ2VyLmNsaWNrPSExLHRoaXMuX2FjdGl2ZVRyaWdnZXIuZm9jdXM9ITEsdGhpcy5fYWN0aXZlVHJpZ2dlci5ob3Zlcj0hMTtjb25zdCBlPXRoaXMudGlwLmNsYXNzTGlzdC5jb250YWlucyhpbyk7dGhpcy5fcXVldWVDYWxsYmFjaygoKCk9Pnt0aGlzLl9pc1dpdGhBY3RpdmVUcmlnZ2VyKCl8fCh0aGlzLl9ob3ZlclN0YXRlIT09c28mJnQucmVtb3ZlKCksdGhpcy5fY2xlYW5UaXBDbGFzcygpLHRoaXMuX2VsZW1lbnQucmVtb3ZlQXR0cmlidXRlKFwiYXJpYS1kZXNjcmliZWRieVwiKSxwZS50cmlnZ2VyKHRoaXMuX2VsZW1lbnQsdGhpcy5jb25zdHJ1Y3Rvci5FdmVudC5ISURERU4pLHRoaXMuX2Rpc3Bvc2VQb3BwZXIoKSl9KSx0aGlzLnRpcCxlKSx0aGlzLl9ob3ZlclN0YXRlPVwiXCJ9dXBkYXRlKCl7bnVsbCE9PXRoaXMuX3BvcHBlciYmdGhpcy5fcG9wcGVyLnVwZGF0ZSgpfWlzV2l0aENvbnRlbnQoKXtyZXR1cm4gQm9vbGVhbih0aGlzLmdldFRpdGxlKCkpfWdldFRpcEVsZW1lbnQoKXtpZih0aGlzLnRpcClyZXR1cm4gdGhpcy50aXA7Y29uc3QgdD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO3QuaW5uZXJIVE1MPXRoaXMuX2NvbmZpZy50ZW1wbGF0ZTtjb25zdCBlPXQuY2hpbGRyZW5bMF07cmV0dXJuIHRoaXMuc2V0Q29udGVudChlKSxlLmNsYXNzTGlzdC5yZW1vdmUoaW8scm8pLHRoaXMudGlwPWUsdGhpcy50aXB9c2V0Q29udGVudCh0KXt0aGlzLl9zYW5pdGl6ZUFuZFNldENvbnRlbnQodCx0aGlzLmdldFRpdGxlKCksY28pfV9zYW5pdGl6ZUFuZFNldENvbnRlbnQodCxlLG4pe2NvbnN0IG89T2UuZmluZE9uZShuLHQpO2V8fCFvP3RoaXMuc2V0RWxlbWVudENvbnRlbnQobyxlKTpvLnJlbW92ZSgpfXNldEVsZW1lbnRDb250ZW50KHQsZSl7aWYobnVsbCE9PXQpcmV0dXJuIGp0KGUpPyhlPUh0KGUpLHZvaWQodGhpcy5fY29uZmlnLmh0bWw/ZS5wYXJlbnROb2RlIT09dCYmKHQuaW5uZXJIVE1MPVwiXCIsdC5hcHBlbmQoZSkpOnQudGV4dENvbnRlbnQ9ZS50ZXh0Q29udGVudCkpOnZvaWQodGhpcy5fY29uZmlnLmh0bWw/KHRoaXMuX2NvbmZpZy5zYW5pdGl6ZSYmKGU9UW4oZSx0aGlzLl9jb25maWcuYWxsb3dMaXN0LHRoaXMuX2NvbmZpZy5zYW5pdGl6ZUZuKSksdC5pbm5lckhUTUw9ZSk6dC50ZXh0Q29udGVudD1lKX1nZXRUaXRsZSgpe2NvbnN0IHQ9dGhpcy5fZWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJkYXRhLWJzLW9yaWdpbmFsLXRpdGxlXCIpfHx0aGlzLl9jb25maWcudGl0bGU7cmV0dXJuIHRoaXMuX3Jlc29sdmVQb3NzaWJsZUZ1bmN0aW9uKHQpfXVwZGF0ZUF0dGFjaG1lbnQodCl7cmV0dXJuXCJyaWdodFwiPT09dD9cImVuZFwiOlwibGVmdFwiPT09dD9cInN0YXJ0XCI6dH1faW5pdGlhbGl6ZU9uRGVsZWdhdGVkVGFyZ2V0KHQsZSl7cmV0dXJuIGV8fHRoaXMuY29uc3RydWN0b3IuZ2V0T3JDcmVhdGVJbnN0YW5jZSh0LmRlbGVnYXRlVGFyZ2V0LHRoaXMuX2dldERlbGVnYXRlQ29uZmlnKCkpfV9nZXRPZmZzZXQoKXtjb25zdHtvZmZzZXQ6dH09dGhpcy5fY29uZmlnO3JldHVyblwic3RyaW5nXCI9PXR5cGVvZiB0P3Quc3BsaXQoXCIsXCIpLm1hcCgodD0+TnVtYmVyLnBhcnNlSW50KHQsMTApKSk6XCJmdW5jdGlvblwiPT10eXBlb2YgdD9lPT50KGUsdGhpcy5fZWxlbWVudCk6dH1fcmVzb2x2ZVBvc3NpYmxlRnVuY3Rpb24odCl7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgdD90LmNhbGwodGhpcy5fZWxlbWVudCk6dH1fZ2V0UG9wcGVyQ29uZmlnKHQpe2NvbnN0IGU9e3BsYWNlbWVudDp0LG1vZGlmaWVyczpbe25hbWU6XCJmbGlwXCIsb3B0aW9uczp7ZmFsbGJhY2tQbGFjZW1lbnRzOnRoaXMuX2NvbmZpZy5mYWxsYmFja1BsYWNlbWVudHN9fSx7bmFtZTpcIm9mZnNldFwiLG9wdGlvbnM6e29mZnNldDp0aGlzLl9nZXRPZmZzZXQoKX19LHtuYW1lOlwicHJldmVudE92ZXJmbG93XCIsb3B0aW9uczp7Ym91bmRhcnk6dGhpcy5fY29uZmlnLmJvdW5kYXJ5fX0se25hbWU6XCJhcnJvd1wiLG9wdGlvbnM6e2VsZW1lbnQ6YC4ke3RoaXMuY29uc3RydWN0b3IuTkFNRX0tYXJyb3dgfX0se25hbWU6XCJvbkNoYW5nZVwiLGVuYWJsZWQ6ITAscGhhc2U6XCJhZnRlcldyaXRlXCIsZm46dD0+dGhpcy5faGFuZGxlUG9wcGVyUGxhY2VtZW50Q2hhbmdlKHQpfV0sb25GaXJzdFVwZGF0ZTp0PT57dC5vcHRpb25zLnBsYWNlbWVudCE9PXQucGxhY2VtZW50JiZ0aGlzLl9oYW5kbGVQb3BwZXJQbGFjZW1lbnRDaGFuZ2UodCl9fTtyZXR1cm57Li4uZSwuLi5cImZ1bmN0aW9uXCI9PXR5cGVvZiB0aGlzLl9jb25maWcucG9wcGVyQ29uZmlnP3RoaXMuX2NvbmZpZy5wb3BwZXJDb25maWcoZSk6dGhpcy5fY29uZmlnLnBvcHBlckNvbmZpZ319X2FkZEF0dGFjaG1lbnRDbGFzcyh0KXt0aGlzLmdldFRpcEVsZW1lbnQoKS5jbGFzc0xpc3QuYWRkKGAke3RoaXMuX2dldEJhc2ljQ2xhc3NQcmVmaXgoKX0tJHt0aGlzLnVwZGF0ZUF0dGFjaG1lbnQodCl9YCl9X2dldEF0dGFjaG1lbnQodCl7cmV0dXJuIGVvW3QudG9VcHBlckNhc2UoKV19X3NldExpc3RlbmVycygpe3RoaXMuX2NvbmZpZy50cmlnZ2VyLnNwbGl0KFwiIFwiKS5mb3JFYWNoKCh0PT57aWYoXCJjbGlja1wiPT09dClwZS5vbih0aGlzLl9lbGVtZW50LHRoaXMuY29uc3RydWN0b3IuRXZlbnQuQ0xJQ0ssdGhpcy5fY29uZmlnLnNlbGVjdG9yLCh0PT50aGlzLnRvZ2dsZSh0KSkpO2Vsc2UgaWYoXCJtYW51YWxcIiE9PXQpe2NvbnN0IGU9dD09PXBvP3RoaXMuY29uc3RydWN0b3IuRXZlbnQuTU9VU0VFTlRFUjp0aGlzLmNvbnN0cnVjdG9yLkV2ZW50LkZPQ1VTSU4sbj10PT09cG8/dGhpcy5jb25zdHJ1Y3Rvci5FdmVudC5NT1VTRUxFQVZFOnRoaXMuY29uc3RydWN0b3IuRXZlbnQuRk9DVVNPVVQ7cGUub24odGhpcy5fZWxlbWVudCxlLHRoaXMuX2NvbmZpZy5zZWxlY3RvciwodD0+dGhpcy5fZW50ZXIodCkpKSxwZS5vbih0aGlzLl9lbGVtZW50LG4sdGhpcy5fY29uZmlnLnNlbGVjdG9yLCh0PT50aGlzLl9sZWF2ZSh0KSkpfX0pKSx0aGlzLl9oaWRlTW9kYWxIYW5kbGVyPSgpPT57dGhpcy5fZWxlbWVudCYmdGhpcy5oaWRlKCl9LHBlLm9uKHRoaXMuX2VsZW1lbnQuY2xvc2VzdChsbyksdW8sdGhpcy5faGlkZU1vZGFsSGFuZGxlciksdGhpcy5fY29uZmlnLnNlbGVjdG9yP3RoaXMuX2NvbmZpZz17Li4udGhpcy5fY29uZmlnLHRyaWdnZXI6XCJtYW51YWxcIixzZWxlY3RvcjpcIlwifTp0aGlzLl9maXhUaXRsZSgpfV9maXhUaXRsZSgpe2NvbnN0IHQ9dGhpcy5fZWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJ0aXRsZVwiKSxlPXR5cGVvZiB0aGlzLl9lbGVtZW50LmdldEF0dHJpYnV0ZShcImRhdGEtYnMtb3JpZ2luYWwtdGl0bGVcIik7KHR8fFwic3RyaW5nXCIhPT1lKSYmKHRoaXMuX2VsZW1lbnQuc2V0QXR0cmlidXRlKFwiZGF0YS1icy1vcmlnaW5hbC10aXRsZVwiLHR8fFwiXCIpLCF0fHx0aGlzLl9lbGVtZW50LmdldEF0dHJpYnV0ZShcImFyaWEtbGFiZWxcIil8fHRoaXMuX2VsZW1lbnQudGV4dENvbnRlbnR8fHRoaXMuX2VsZW1lbnQuc2V0QXR0cmlidXRlKFwiYXJpYS1sYWJlbFwiLHQpLHRoaXMuX2VsZW1lbnQuc2V0QXR0cmlidXRlKFwidGl0bGVcIixcIlwiKSl9X2VudGVyKHQsZSl7ZT10aGlzLl9pbml0aWFsaXplT25EZWxlZ2F0ZWRUYXJnZXQodCxlKSx0JiYoZS5fYWN0aXZlVHJpZ2dlcltcImZvY3VzaW5cIj09PXQudHlwZT9obzpwb109ITApLGUuZ2V0VGlwRWxlbWVudCgpLmNsYXNzTGlzdC5jb250YWlucyhybyl8fGUuX2hvdmVyU3RhdGU9PT1zbz9lLl9ob3ZlclN0YXRlPXNvOihjbGVhclRpbWVvdXQoZS5fdGltZW91dCksZS5faG92ZXJTdGF0ZT1zbyxlLl9jb25maWcuZGVsYXkmJmUuX2NvbmZpZy5kZWxheS5zaG93P2UuX3RpbWVvdXQ9c2V0VGltZW91dCgoKCk9PntlLl9ob3ZlclN0YXRlPT09c28mJmUuc2hvdygpfSksZS5fY29uZmlnLmRlbGF5LnNob3cpOmUuc2hvdygpKX1fbGVhdmUodCxlKXtlPXRoaXMuX2luaXRpYWxpemVPbkRlbGVnYXRlZFRhcmdldCh0LGUpLHQmJihlLl9hY3RpdmVUcmlnZ2VyW1wiZm9jdXNvdXRcIj09PXQudHlwZT9obzpwb109ZS5fZWxlbWVudC5jb250YWlucyh0LnJlbGF0ZWRUYXJnZXQpKSxlLl9pc1dpdGhBY3RpdmVUcmlnZ2VyKCl8fChjbGVhclRpbWVvdXQoZS5fdGltZW91dCksZS5faG92ZXJTdGF0ZT1hbyxlLl9jb25maWcuZGVsYXkmJmUuX2NvbmZpZy5kZWxheS5oaWRlP2UuX3RpbWVvdXQ9c2V0VGltZW91dCgoKCk9PntlLl9ob3ZlclN0YXRlPT09YW8mJmUuaGlkZSgpfSksZS5fY29uZmlnLmRlbGF5LmhpZGUpOmUuaGlkZSgpKX1faXNXaXRoQWN0aXZlVHJpZ2dlcigpe2Zvcihjb25zdCB0IGluIHRoaXMuX2FjdGl2ZVRyaWdnZXIpaWYodGhpcy5fYWN0aXZlVHJpZ2dlclt0XSlyZXR1cm4hMDtyZXR1cm4hMX1fZ2V0Q29uZmlnKHQpe2NvbnN0IGU9d2UuZ2V0RGF0YUF0dHJpYnV0ZXModGhpcy5fZWxlbWVudCk7cmV0dXJuIE9iamVjdC5rZXlzKGUpLmZvckVhY2goKHQ9Pntabi5oYXModCkmJmRlbGV0ZSBlW3RdfSkpLCh0PXsuLi50aGlzLmNvbnN0cnVjdG9yLkRlZmF1bHQsLi4uZSwuLi5cIm9iamVjdFwiPT10eXBlb2YgdCYmdD90Ont9fSkuY29udGFpbmVyPSExPT09dC5jb250YWluZXI/ZG9jdW1lbnQuYm9keTpIdCh0LmNvbnRhaW5lciksXCJudW1iZXJcIj09dHlwZW9mIHQuZGVsYXkmJih0LmRlbGF5PXtzaG93OnQuZGVsYXksaGlkZTp0LmRlbGF5fSksXCJudW1iZXJcIj09dHlwZW9mIHQudGl0bGUmJih0LnRpdGxlPXQudGl0bGUudG9TdHJpbmcoKSksXCJudW1iZXJcIj09dHlwZW9mIHQuY29udGVudCYmKHQuY29udGVudD10LmNvbnRlbnQudG9TdHJpbmcoKSksTXQoSm4sdCx0aGlzLmNvbnN0cnVjdG9yLkRlZmF1bHRUeXBlKSx0LnNhbml0aXplJiYodC50ZW1wbGF0ZT1Rbih0LnRlbXBsYXRlLHQuYWxsb3dMaXN0LHQuc2FuaXRpemVGbikpLHR9X2dldERlbGVnYXRlQ29uZmlnKCl7Y29uc3QgdD17fTtmb3IoY29uc3QgZSBpbiB0aGlzLl9jb25maWcpdGhpcy5jb25zdHJ1Y3Rvci5EZWZhdWx0W2VdIT09dGhpcy5fY29uZmlnW2VdJiYodFtlXT10aGlzLl9jb25maWdbZV0pO3JldHVybiB0fV9jbGVhblRpcENsYXNzKCl7Y29uc3QgdD10aGlzLmdldFRpcEVsZW1lbnQoKSxlPW5ldyBSZWdFeHAoYChefFxcXFxzKSR7dGhpcy5fZ2V0QmFzaWNDbGFzc1ByZWZpeCgpfVxcXFxTK2AsXCJnXCIpLG49dC5nZXRBdHRyaWJ1dGUoXCJjbGFzc1wiKS5tYXRjaChlKTtudWxsIT09biYmbi5sZW5ndGg+MCYmbi5tYXAoKHQ9PnQudHJpbSgpKSkuZm9yRWFjaCgoZT0+dC5jbGFzc0xpc3QucmVtb3ZlKGUpKSl9X2dldEJhc2ljQ2xhc3NQcmVmaXgoKXtyZXR1cm5cImJzLXRvb2x0aXBcIn1faGFuZGxlUG9wcGVyUGxhY2VtZW50Q2hhbmdlKHQpe2NvbnN0e3N0YXRlOmV9PXQ7ZSYmKHRoaXMudGlwPWUuZWxlbWVudHMucG9wcGVyLHRoaXMuX2NsZWFuVGlwQ2xhc3MoKSx0aGlzLl9hZGRBdHRhY2htZW50Q2xhc3ModGhpcy5fZ2V0QXR0YWNobWVudChlLnBsYWNlbWVudCkpKX1fZGlzcG9zZVBvcHBlcigpe3RoaXMuX3BvcHBlciYmKHRoaXMuX3BvcHBlci5kZXN0cm95KCksdGhpcy5fcG9wcGVyPW51bGwpfXN0YXRpYyBqUXVlcnlJbnRlcmZhY2UodCl7cmV0dXJuIHRoaXMuZWFjaCgoZnVuY3Rpb24oKXtjb25zdCBlPWZvLmdldE9yQ3JlYXRlSW5zdGFuY2UodGhpcyx0KTtpZihcInN0cmluZ1wiPT10eXBlb2YgdCl7aWYodm9pZCAwPT09ZVt0XSl0aHJvdyBuZXcgVHlwZUVycm9yKGBObyBtZXRob2QgbmFtZWQgXCIke3R9XCJgKTtlW3RdKCl9fSkpfX1xdChmbyk7Y29uc3QgbW89ey4uLmZvLkRlZmF1bHQscGxhY2VtZW50OlwicmlnaHRcIixvZmZzZXQ6WzAsOF0sdHJpZ2dlcjpcImNsaWNrXCIsY29udGVudDpcIlwiLHRlbXBsYXRlOic8ZGl2IGNsYXNzPVwicG9wb3ZlclwiIHJvbGU9XCJ0b29sdGlwXCI+PGRpdiBjbGFzcz1cInBvcG92ZXItYXJyb3dcIj48L2Rpdj48aDMgY2xhc3M9XCJwb3BvdmVyLWhlYWRlclwiPjwvaDM+PGRpdiBjbGFzcz1cInBvcG92ZXItYm9keVwiPjwvZGl2PjwvZGl2Pid9LGdvPXsuLi5mby5EZWZhdWx0VHlwZSxjb250ZW50OlwiKHN0cmluZ3xlbGVtZW50fGZ1bmN0aW9uKVwifSxfbz17SElERTpcImhpZGUuYnMucG9wb3ZlclwiLEhJRERFTjpcImhpZGRlbi5icy5wb3BvdmVyXCIsU0hPVzpcInNob3cuYnMucG9wb3ZlclwiLFNIT1dOOlwic2hvd24uYnMucG9wb3ZlclwiLElOU0VSVEVEOlwiaW5zZXJ0ZWQuYnMucG9wb3ZlclwiLENMSUNLOlwiY2xpY2suYnMucG9wb3ZlclwiLEZPQ1VTSU46XCJmb2N1c2luLmJzLnBvcG92ZXJcIixGT0NVU09VVDpcImZvY3Vzb3V0LmJzLnBvcG92ZXJcIixNT1VTRUVOVEVSOlwibW91c2VlbnRlci5icy5wb3BvdmVyXCIsTU9VU0VMRUFWRTpcIm1vdXNlbGVhdmUuYnMucG9wb3ZlclwifTtjbGFzcyB2byBleHRlbmRzIGZve3N0YXRpYyBnZXQgRGVmYXVsdCgpe3JldHVybiBtb31zdGF0aWMgZ2V0IE5BTUUoKXtyZXR1cm5cInBvcG92ZXJcIn1zdGF0aWMgZ2V0IEV2ZW50KCl7cmV0dXJuIF9vfXN0YXRpYyBnZXQgRGVmYXVsdFR5cGUoKXtyZXR1cm4gZ299aXNXaXRoQ29udGVudCgpe3JldHVybiB0aGlzLmdldFRpdGxlKCl8fHRoaXMuX2dldENvbnRlbnQoKX1zZXRDb250ZW50KHQpe3RoaXMuX3Nhbml0aXplQW5kU2V0Q29udGVudCh0LHRoaXMuZ2V0VGl0bGUoKSxcIi5wb3BvdmVyLWhlYWRlclwiKSx0aGlzLl9zYW5pdGl6ZUFuZFNldENvbnRlbnQodCx0aGlzLl9nZXRDb250ZW50KCksXCIucG9wb3Zlci1ib2R5XCIpfV9nZXRDb250ZW50KCl7cmV0dXJuIHRoaXMuX3Jlc29sdmVQb3NzaWJsZUZ1bmN0aW9uKHRoaXMuX2NvbmZpZy5jb250ZW50KX1fZ2V0QmFzaWNDbGFzc1ByZWZpeCgpe3JldHVyblwiYnMtcG9wb3ZlclwifXN0YXRpYyBqUXVlcnlJbnRlcmZhY2UodCl7cmV0dXJuIHRoaXMuZWFjaCgoZnVuY3Rpb24oKXtjb25zdCBlPXZvLmdldE9yQ3JlYXRlSW5zdGFuY2UodGhpcyx0KTtpZihcInN0cmluZ1wiPT10eXBlb2YgdCl7aWYodm9pZCAwPT09ZVt0XSl0aHJvdyBuZXcgVHlwZUVycm9yKGBObyBtZXRob2QgbmFtZWQgXCIke3R9XCJgKTtlW3RdKCl9fSkpfX1xdCh2byk7Y29uc3QgeW89XCJzY3JvbGxzcHlcIixibz17b2Zmc2V0OjEwLG1ldGhvZDpcImF1dG9cIix0YXJnZXQ6XCJcIn0sRW89e29mZnNldDpcIm51bWJlclwiLG1ldGhvZDpcInN0cmluZ1wiLHRhcmdldDpcIihzdHJpbmd8ZWxlbWVudClcIn0sd289XCJhY3RpdmVcIixPbz1cIi5uYXYtbGluaywgLmxpc3QtZ3JvdXAtaXRlbSwgLmRyb3Bkb3duLWl0ZW1cIixEbz1cInBvc2l0aW9uXCI7Y2xhc3MgQ28gZXh0ZW5kcyBtZXtjb25zdHJ1Y3Rvcih0LGUpe3N1cGVyKHQpLHRoaXMuX3Njcm9sbEVsZW1lbnQ9XCJCT0RZXCI9PT10aGlzLl9lbGVtZW50LnRhZ05hbWU/d2luZG93OnRoaXMuX2VsZW1lbnQsdGhpcy5fY29uZmlnPXRoaXMuX2dldENvbmZpZyhlKSx0aGlzLl9vZmZzZXRzPVtdLHRoaXMuX3RhcmdldHM9W10sdGhpcy5fYWN0aXZlVGFyZ2V0PW51bGwsdGhpcy5fc2Nyb2xsSGVpZ2h0PTAscGUub24odGhpcy5fc2Nyb2xsRWxlbWVudCxcInNjcm9sbC5icy5zY3JvbGxzcHlcIiwoKCk9PnRoaXMuX3Byb2Nlc3MoKSkpLHRoaXMucmVmcmVzaCgpLHRoaXMuX3Byb2Nlc3MoKX1zdGF0aWMgZ2V0IERlZmF1bHQoKXtyZXR1cm4gYm99c3RhdGljIGdldCBOQU1FKCl7cmV0dXJuIHlvfXJlZnJlc2goKXtjb25zdCB0PXRoaXMuX3Njcm9sbEVsZW1lbnQ9PT10aGlzLl9zY3JvbGxFbGVtZW50LndpbmRvdz9cIm9mZnNldFwiOkRvLGU9XCJhdXRvXCI9PT10aGlzLl9jb25maWcubWV0aG9kP3Q6dGhpcy5fY29uZmlnLm1ldGhvZCxuPWU9PT1Ebz90aGlzLl9nZXRTY3JvbGxUb3AoKTowO3RoaXMuX29mZnNldHM9W10sdGhpcy5fdGFyZ2V0cz1bXSx0aGlzLl9zY3JvbGxIZWlnaHQ9dGhpcy5fZ2V0U2Nyb2xsSGVpZ2h0KCksT2UuZmluZChPbyx0aGlzLl9jb25maWcudGFyZ2V0KS5tYXAoKHQ9Pntjb25zdCBvPUx0KHQpLGk9bz9PZS5maW5kT25lKG8pOm51bGw7aWYoaSl7Y29uc3QgdD1pLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO2lmKHQud2lkdGh8fHQuaGVpZ2h0KXJldHVyblt3ZVtlXShpKS50b3ArbixvXX1yZXR1cm4gbnVsbH0pKS5maWx0ZXIoKHQ9PnQpKS5zb3J0KCgodCxlKT0+dFswXS1lWzBdKSkuZm9yRWFjaCgodD0+e3RoaXMuX29mZnNldHMucHVzaCh0WzBdKSx0aGlzLl90YXJnZXRzLnB1c2godFsxXSl9KSl9ZGlzcG9zZSgpe3BlLm9mZih0aGlzLl9zY3JvbGxFbGVtZW50LFwiLmJzLnNjcm9sbHNweVwiKSxzdXBlci5kaXNwb3NlKCl9X2dldENvbmZpZyh0KXtyZXR1cm4odD17Li4uYm8sLi4ud2UuZ2V0RGF0YUF0dHJpYnV0ZXModGhpcy5fZWxlbWVudCksLi4uXCJvYmplY3RcIj09dHlwZW9mIHQmJnQ/dDp7fX0pLnRhcmdldD1IdCh0LnRhcmdldCl8fGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCxNdCh5byx0LEVvKSx0fV9nZXRTY3JvbGxUb3AoKXtyZXR1cm4gdGhpcy5fc2Nyb2xsRWxlbWVudD09PXdpbmRvdz90aGlzLl9zY3JvbGxFbGVtZW50LnBhZ2VZT2Zmc2V0OnRoaXMuX3Njcm9sbEVsZW1lbnQuc2Nyb2xsVG9wfV9nZXRTY3JvbGxIZWlnaHQoKXtyZXR1cm4gdGhpcy5fc2Nyb2xsRWxlbWVudC5zY3JvbGxIZWlnaHR8fE1hdGgubWF4KGRvY3VtZW50LmJvZHkuc2Nyb2xsSGVpZ2h0LGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxIZWlnaHQpfV9nZXRPZmZzZXRIZWlnaHQoKXtyZXR1cm4gdGhpcy5fc2Nyb2xsRWxlbWVudD09PXdpbmRvdz93aW5kb3cuaW5uZXJIZWlnaHQ6dGhpcy5fc2Nyb2xsRWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5oZWlnaHR9X3Byb2Nlc3MoKXtjb25zdCB0PXRoaXMuX2dldFNjcm9sbFRvcCgpK3RoaXMuX2NvbmZpZy5vZmZzZXQsZT10aGlzLl9nZXRTY3JvbGxIZWlnaHQoKSxuPXRoaXMuX2NvbmZpZy5vZmZzZXQrZS10aGlzLl9nZXRPZmZzZXRIZWlnaHQoKTtpZih0aGlzLl9zY3JvbGxIZWlnaHQhPT1lJiZ0aGlzLnJlZnJlc2goKSx0Pj1uKXtjb25zdCB0PXRoaXMuX3RhcmdldHNbdGhpcy5fdGFyZ2V0cy5sZW5ndGgtMV07dGhpcy5fYWN0aXZlVGFyZ2V0IT09dCYmdGhpcy5fYWN0aXZhdGUodCl9ZWxzZXtpZih0aGlzLl9hY3RpdmVUYXJnZXQmJnQ8dGhpcy5fb2Zmc2V0c1swXSYmdGhpcy5fb2Zmc2V0c1swXT4wKXJldHVybiB0aGlzLl9hY3RpdmVUYXJnZXQ9bnVsbCx2b2lkIHRoaXMuX2NsZWFyKCk7Zm9yKGxldCBlPXRoaXMuX29mZnNldHMubGVuZ3RoO2UtLTspdGhpcy5fYWN0aXZlVGFyZ2V0IT09dGhpcy5fdGFyZ2V0c1tlXSYmdD49dGhpcy5fb2Zmc2V0c1tlXSYmKHZvaWQgMD09PXRoaXMuX29mZnNldHNbZSsxXXx8dDx0aGlzLl9vZmZzZXRzW2UrMV0pJiZ0aGlzLl9hY3RpdmF0ZSh0aGlzLl90YXJnZXRzW2VdKX19X2FjdGl2YXRlKHQpe3RoaXMuX2FjdGl2ZVRhcmdldD10LHRoaXMuX2NsZWFyKCk7Y29uc3QgZT1Pby5zcGxpdChcIixcIikubWFwKChlPT5gJHtlfVtkYXRhLWJzLXRhcmdldD1cIiR7dH1cIl0sJHtlfVtocmVmPVwiJHt0fVwiXWApKSxuPU9lLmZpbmRPbmUoZS5qb2luKFwiLFwiKSx0aGlzLl9jb25maWcudGFyZ2V0KTtuLmNsYXNzTGlzdC5hZGQod28pLG4uY2xhc3NMaXN0LmNvbnRhaW5zKFwiZHJvcGRvd24taXRlbVwiKT9PZS5maW5kT25lKFwiLmRyb3Bkb3duLXRvZ2dsZVwiLG4uY2xvc2VzdChcIi5kcm9wZG93blwiKSkuY2xhc3NMaXN0LmFkZCh3byk6T2UucGFyZW50cyhuLFwiLm5hdiwgLmxpc3QtZ3JvdXBcIikuZm9yRWFjaCgodD0+e09lLnByZXYodCxcIi5uYXYtbGluaywgLmxpc3QtZ3JvdXAtaXRlbVwiKS5mb3JFYWNoKCh0PT50LmNsYXNzTGlzdC5hZGQod28pKSksT2UucHJldih0LFwiLm5hdi1pdGVtXCIpLmZvckVhY2goKHQ9PntPZS5jaGlsZHJlbih0LFwiLm5hdi1saW5rXCIpLmZvckVhY2goKHQ9PnQuY2xhc3NMaXN0LmFkZCh3bykpKX0pKX0pKSxwZS50cmlnZ2VyKHRoaXMuX3Njcm9sbEVsZW1lbnQsXCJhY3RpdmF0ZS5icy5zY3JvbGxzcHlcIix7cmVsYXRlZFRhcmdldDp0fSl9X2NsZWFyKCl7T2UuZmluZChPbyx0aGlzLl9jb25maWcudGFyZ2V0KS5maWx0ZXIoKHQ9PnQuY2xhc3NMaXN0LmNvbnRhaW5zKHdvKSkpLmZvckVhY2goKHQ9PnQuY2xhc3NMaXN0LnJlbW92ZSh3bykpKX1zdGF0aWMgalF1ZXJ5SW50ZXJmYWNlKHQpe3JldHVybiB0aGlzLmVhY2goKGZ1bmN0aW9uKCl7Y29uc3QgZT1Dby5nZXRPckNyZWF0ZUluc3RhbmNlKHRoaXMsdCk7aWYoXCJzdHJpbmdcIj09dHlwZW9mIHQpe2lmKHZvaWQgMD09PWVbdF0pdGhyb3cgbmV3IFR5cGVFcnJvcihgTm8gbWV0aG9kIG5hbWVkIFwiJHt0fVwiYCk7ZVt0XSgpfX0pKX19cGUub24od2luZG93LFwibG9hZC5icy5zY3JvbGxzcHkuZGF0YS1hcGlcIiwoKCk9PntPZS5maW5kKCdbZGF0YS1icy1zcHk9XCJzY3JvbGxcIl0nKS5mb3JFYWNoKCh0PT5uZXcgQ28odCkpKX0pKSxxdChDbyk7Y29uc3QgU289XCJhY3RpdmVcIixUbz1cImZhZGVcIixSbz1cInNob3dcIixObz1cIi5hY3RpdmVcIixJbz1cIjpzY29wZSA+IGxpID4gLmFjdGl2ZVwiO2NsYXNzIEFvIGV4dGVuZHMgbWV7c3RhdGljIGdldCBOQU1FKCl7cmV0dXJuXCJ0YWJcIn1zaG93KCl7aWYodGhpcy5fZWxlbWVudC5wYXJlbnROb2RlJiZ0aGlzLl9lbGVtZW50LnBhcmVudE5vZGUubm9kZVR5cGU9PT1Ob2RlLkVMRU1FTlRfTk9ERSYmdGhpcy5fZWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoU28pKXJldHVybjtsZXQgdDtjb25zdCBlPVB0KHRoaXMuX2VsZW1lbnQpLG49dGhpcy5fZWxlbWVudC5jbG9zZXN0KFwiLm5hdiwgLmxpc3QtZ3JvdXBcIik7aWYobil7Y29uc3QgZT1cIlVMXCI9PT1uLm5vZGVOYW1lfHxcIk9MXCI9PT1uLm5vZGVOYW1lP0lvOk5vO3Q9T2UuZmluZChlLG4pLHQ9dFt0Lmxlbmd0aC0xXX1jb25zdCBvPXQ/cGUudHJpZ2dlcih0LFwiaGlkZS5icy50YWJcIix7cmVsYXRlZFRhcmdldDp0aGlzLl9lbGVtZW50fSk6bnVsbDtpZihwZS50cmlnZ2VyKHRoaXMuX2VsZW1lbnQsXCJzaG93LmJzLnRhYlwiLHtyZWxhdGVkVGFyZ2V0OnR9KS5kZWZhdWx0UHJldmVudGVkfHxudWxsIT09byYmby5kZWZhdWx0UHJldmVudGVkKXJldHVybjt0aGlzLl9hY3RpdmF0ZSh0aGlzLl9lbGVtZW50LG4pO2NvbnN0IGk9KCk9PntwZS50cmlnZ2VyKHQsXCJoaWRkZW4uYnMudGFiXCIse3JlbGF0ZWRUYXJnZXQ6dGhpcy5fZWxlbWVudH0pLHBlLnRyaWdnZXIodGhpcy5fZWxlbWVudCxcInNob3duLmJzLnRhYlwiLHtyZWxhdGVkVGFyZ2V0OnR9KX07ZT90aGlzLl9hY3RpdmF0ZShlLGUucGFyZW50Tm9kZSxpKTppKCl9X2FjdGl2YXRlKHQsZSxuKXtjb25zdCBvPSghZXx8XCJVTFwiIT09ZS5ub2RlTmFtZSYmXCJPTFwiIT09ZS5ub2RlTmFtZT9PZS5jaGlsZHJlbihlLE5vKTpPZS5maW5kKElvLGUpKVswXSxpPW4mJm8mJm8uY2xhc3NMaXN0LmNvbnRhaW5zKFRvKSxyPSgpPT50aGlzLl90cmFuc2l0aW9uQ29tcGxldGUodCxvLG4pO28mJmk/KG8uY2xhc3NMaXN0LnJlbW92ZShSbyksdGhpcy5fcXVldWVDYWxsYmFjayhyLHQsITApKTpyKCl9X3RyYW5zaXRpb25Db21wbGV0ZSh0LGUsbil7aWYoZSl7ZS5jbGFzc0xpc3QucmVtb3ZlKFNvKTtjb25zdCB0PU9lLmZpbmRPbmUoXCI6c2NvcGUgPiAuZHJvcGRvd24tbWVudSAuYWN0aXZlXCIsZS5wYXJlbnROb2RlKTt0JiZ0LmNsYXNzTGlzdC5yZW1vdmUoU28pLFwidGFiXCI9PT1lLmdldEF0dHJpYnV0ZShcInJvbGVcIikmJmUuc2V0QXR0cmlidXRlKFwiYXJpYS1zZWxlY3RlZFwiLCExKX10LmNsYXNzTGlzdC5hZGQoU28pLFwidGFiXCI9PT10LmdldEF0dHJpYnV0ZShcInJvbGVcIikmJnQuc2V0QXR0cmlidXRlKFwiYXJpYS1zZWxlY3RlZFwiLCEwKSxVdCh0KSx0LmNsYXNzTGlzdC5jb250YWlucyhUbykmJnQuY2xhc3NMaXN0LmFkZChSbyk7bGV0IG89dC5wYXJlbnROb2RlO2lmKG8mJlwiTElcIj09PW8ubm9kZU5hbWUmJihvPW8ucGFyZW50Tm9kZSksbyYmby5jbGFzc0xpc3QuY29udGFpbnMoXCJkcm9wZG93bi1tZW51XCIpKXtjb25zdCBlPXQuY2xvc2VzdChcIi5kcm9wZG93blwiKTtlJiZPZS5maW5kKFwiLmRyb3Bkb3duLXRvZ2dsZVwiLGUpLmZvckVhY2goKHQ9PnQuY2xhc3NMaXN0LmFkZChTbykpKSx0LnNldEF0dHJpYnV0ZShcImFyaWEtZXhwYW5kZWRcIiwhMCl9biYmbigpfXN0YXRpYyBqUXVlcnlJbnRlcmZhY2UodCl7cmV0dXJuIHRoaXMuZWFjaCgoZnVuY3Rpb24oKXtjb25zdCBlPUFvLmdldE9yQ3JlYXRlSW5zdGFuY2UodGhpcyk7aWYoXCJzdHJpbmdcIj09dHlwZW9mIHQpe2lmKHZvaWQgMD09PWVbdF0pdGhyb3cgbmV3IFR5cGVFcnJvcihgTm8gbWV0aG9kIG5hbWVkIFwiJHt0fVwiYCk7ZVt0XSgpfX0pKX19cGUub24oZG9jdW1lbnQsXCJjbGljay5icy50YWIuZGF0YS1hcGlcIiwnW2RhdGEtYnMtdG9nZ2xlPVwidGFiXCJdLCBbZGF0YS1icy10b2dnbGU9XCJwaWxsXCJdLCBbZGF0YS1icy10b2dnbGU9XCJsaXN0XCJdJywoZnVuY3Rpb24odCl7W1wiQVwiLFwiQVJFQVwiXS5pbmNsdWRlcyh0aGlzLnRhZ05hbWUpJiZ0LnByZXZlbnREZWZhdWx0KCksR3QodGhpcyl8fEFvLmdldE9yQ3JlYXRlSW5zdGFuY2UodGhpcykuc2hvdygpfSkpLHF0KEFvKTtjb25zdCB4bz1cInRvYXN0XCIsTG89XCJoaWRlXCIsUG89XCJzaG93XCIsa289XCJzaG93aW5nXCIsam89e2FuaW1hdGlvbjpcImJvb2xlYW5cIixhdXRvaGlkZTpcImJvb2xlYW5cIixkZWxheTpcIm51bWJlclwifSxIbz17YW5pbWF0aW9uOiEwLGF1dG9oaWRlOiEwLGRlbGF5OjVlM307Y2xhc3MgTW8gZXh0ZW5kcyBtZXtjb25zdHJ1Y3Rvcih0LGUpe3N1cGVyKHQpLHRoaXMuX2NvbmZpZz10aGlzLl9nZXRDb25maWcoZSksdGhpcy5fdGltZW91dD1udWxsLHRoaXMuX2hhc01vdXNlSW50ZXJhY3Rpb249ITEsdGhpcy5faGFzS2V5Ym9hcmRJbnRlcmFjdGlvbj0hMSx0aGlzLl9zZXRMaXN0ZW5lcnMoKX1zdGF0aWMgZ2V0IERlZmF1bHRUeXBlKCl7cmV0dXJuIGpvfXN0YXRpYyBnZXQgRGVmYXVsdCgpe3JldHVybiBIb31zdGF0aWMgZ2V0IE5BTUUoKXtyZXR1cm4geG99c2hvdygpe3BlLnRyaWdnZXIodGhpcy5fZWxlbWVudCxcInNob3cuYnMudG9hc3RcIikuZGVmYXVsdFByZXZlbnRlZHx8KHRoaXMuX2NsZWFyVGltZW91dCgpLHRoaXMuX2NvbmZpZy5hbmltYXRpb24mJnRoaXMuX2VsZW1lbnQuY2xhc3NMaXN0LmFkZChcImZhZGVcIiksdGhpcy5fZWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKExvKSxVdCh0aGlzLl9lbGVtZW50KSx0aGlzLl9lbGVtZW50LmNsYXNzTGlzdC5hZGQoUG8pLHRoaXMuX2VsZW1lbnQuY2xhc3NMaXN0LmFkZChrbyksdGhpcy5fcXVldWVDYWxsYmFjaygoKCk9Pnt0aGlzLl9lbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoa28pLHBlLnRyaWdnZXIodGhpcy5fZWxlbWVudCxcInNob3duLmJzLnRvYXN0XCIpLHRoaXMuX21heWJlU2NoZWR1bGVIaWRlKCl9KSx0aGlzLl9lbGVtZW50LHRoaXMuX2NvbmZpZy5hbmltYXRpb24pKX1oaWRlKCl7dGhpcy5fZWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoUG8pJiYocGUudHJpZ2dlcih0aGlzLl9lbGVtZW50LFwiaGlkZS5icy50b2FzdFwiKS5kZWZhdWx0UHJldmVudGVkfHwodGhpcy5fZWxlbWVudC5jbGFzc0xpc3QuYWRkKGtvKSx0aGlzLl9xdWV1ZUNhbGxiYWNrKCgoKT0+e3RoaXMuX2VsZW1lbnQuY2xhc3NMaXN0LmFkZChMbyksdGhpcy5fZWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKGtvKSx0aGlzLl9lbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoUG8pLHBlLnRyaWdnZXIodGhpcy5fZWxlbWVudCxcImhpZGRlbi5icy50b2FzdFwiKX0pLHRoaXMuX2VsZW1lbnQsdGhpcy5fY29uZmlnLmFuaW1hdGlvbikpKX1kaXNwb3NlKCl7dGhpcy5fY2xlYXJUaW1lb3V0KCksdGhpcy5fZWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoUG8pJiZ0aGlzLl9lbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoUG8pLHN1cGVyLmRpc3Bvc2UoKX1fZ2V0Q29uZmlnKHQpe3JldHVybiB0PXsuLi5IbywuLi53ZS5nZXREYXRhQXR0cmlidXRlcyh0aGlzLl9lbGVtZW50KSwuLi5cIm9iamVjdFwiPT10eXBlb2YgdCYmdD90Ont9fSxNdCh4byx0LHRoaXMuY29uc3RydWN0b3IuRGVmYXVsdFR5cGUpLHR9X21heWJlU2NoZWR1bGVIaWRlKCl7dGhpcy5fY29uZmlnLmF1dG9oaWRlJiYodGhpcy5faGFzTW91c2VJbnRlcmFjdGlvbnx8dGhpcy5faGFzS2V5Ym9hcmRJbnRlcmFjdGlvbnx8KHRoaXMuX3RpbWVvdXQ9c2V0VGltZW91dCgoKCk9Pnt0aGlzLmhpZGUoKX0pLHRoaXMuX2NvbmZpZy5kZWxheSkpKX1fb25JbnRlcmFjdGlvbih0LGUpe3N3aXRjaCh0LnR5cGUpe2Nhc2VcIm1vdXNlb3ZlclwiOmNhc2VcIm1vdXNlb3V0XCI6dGhpcy5faGFzTW91c2VJbnRlcmFjdGlvbj1lO2JyZWFrO2Nhc2VcImZvY3VzaW5cIjpjYXNlXCJmb2N1c291dFwiOnRoaXMuX2hhc0tleWJvYXJkSW50ZXJhY3Rpb249ZX1pZihlKXJldHVybiB2b2lkIHRoaXMuX2NsZWFyVGltZW91dCgpO2NvbnN0IG49dC5yZWxhdGVkVGFyZ2V0O3RoaXMuX2VsZW1lbnQ9PT1ufHx0aGlzLl9lbGVtZW50LmNvbnRhaW5zKG4pfHx0aGlzLl9tYXliZVNjaGVkdWxlSGlkZSgpfV9zZXRMaXN0ZW5lcnMoKXtwZS5vbih0aGlzLl9lbGVtZW50LFwibW91c2VvdmVyLmJzLnRvYXN0XCIsKHQ9PnRoaXMuX29uSW50ZXJhY3Rpb24odCwhMCkpKSxwZS5vbih0aGlzLl9lbGVtZW50LFwibW91c2VvdXQuYnMudG9hc3RcIiwodD0+dGhpcy5fb25JbnRlcmFjdGlvbih0LCExKSkpLHBlLm9uKHRoaXMuX2VsZW1lbnQsXCJmb2N1c2luLmJzLnRvYXN0XCIsKHQ9PnRoaXMuX29uSW50ZXJhY3Rpb24odCwhMCkpKSxwZS5vbih0aGlzLl9lbGVtZW50LFwiZm9jdXNvdXQuYnMudG9hc3RcIiwodD0+dGhpcy5fb25JbnRlcmFjdGlvbih0LCExKSkpfV9jbGVhclRpbWVvdXQoKXtjbGVhclRpbWVvdXQodGhpcy5fdGltZW91dCksdGhpcy5fdGltZW91dD1udWxsfXN0YXRpYyBqUXVlcnlJbnRlcmZhY2UodCl7cmV0dXJuIHRoaXMuZWFjaCgoZnVuY3Rpb24oKXtjb25zdCBlPU1vLmdldE9yQ3JlYXRlSW5zdGFuY2UodGhpcyx0KTtpZihcInN0cmluZ1wiPT10eXBlb2YgdCl7aWYodm9pZCAwPT09ZVt0XSl0aHJvdyBuZXcgVHlwZUVycm9yKGBObyBtZXRob2QgbmFtZWQgXCIke3R9XCJgKTtlW3RdKHRoaXMpfX0pKX19Z2UoTW8pLHF0KE1vKTt2YXIgQm8sR289ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KCl7dGhpcy5jaGlsZHJlbj1bXX1yZXR1cm4gdC5wcm90b3R5cGUuYWRkRXZlbnRIYW5kbGVyPWZ1bmN0aW9uKHQsZSl7dGhpcy5lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIodCxlKX0sT2JqZWN0LmRlZmluZVByb3BlcnR5KHQucHJvdG90eXBlLFwidGl0bGVcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZWxlbWVudC50aXRsZX0sc2V0OmZ1bmN0aW9uKHQpe3RoaXMuZWxlbWVudC50aXRsZT10fSxlbnVtZXJhYmxlOiExLGNvbmZpZ3VyYWJsZTohMH0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LnByb3RvdHlwZSxcImRhdGFTb3VyY2VOYW1lXCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9kYXRhU291cmNlTmFtZX0sc2V0OmZ1bmN0aW9uKHQpe3RoaXMuX2RhdGFTb3VyY2VOYW1lPXR9LGVudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQucHJvdG90eXBlLFwiaXNSZWFkT25seVwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faXNSZWFkT25seX0sc2V0OmZ1bmN0aW9uKHQpe3RoaXMuX2lzUmVhZE9ubHk9dH0sZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITB9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkodC5wcm90b3R5cGUsXCJ3aWR0aFwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5lbGVtZW50LnN0eWxlLndpZHRofSxzZXQ6ZnVuY3Rpb24odCl7dGhpcy5lbGVtZW50LnN0eWxlLndpZHRoPXR9LGVudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQucHJvdG90eXBlLFwidmlzaWJsZVwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4hMCE9PXRoaXMuZWxlbWVudC5oaWRkZW59LHNldDpmdW5jdGlvbih0KXt0aGlzLmVsZW1lbnQuaGlkZGVuPSEwIT09dH0sZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITB9KSx0LnByb3RvdHlwZS5nZXRDc3M9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuZWxlbWVudC5zdHlsZVt0XX0sdC5wcm90b3R5cGUuc2V0Q3NzPWZ1bmN0aW9uKHQsZSl7dGhpcy5lbGVtZW50LnN0eWxlW3RdPWV9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LnByb3RvdHlwZSxcImNzc1wiLHtzZXQ6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcztcIm9iamVjdFwiPT10eXBlb2YgdCYmbnVsbCE9PXQmJiEwIT09dGhpcy5pc0VtcHR5T2JqKHQpJiZPYmplY3Qua2V5cyh0KS5mb3JFYWNoKChmdW5jdGlvbihuKXtlLmVsZW1lbnQuc3R5bGVbbl09dFtuXX0pKX0sZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITB9KSx0LnByb3RvdHlwZS5wcm9wcz1mdW5jdGlvbih0KXt2YXIgZT10aGlzO3QuZm9yRWFjaCgoZnVuY3Rpb24odCl7cmV0dXJuIGUucHJvcCh0LmtleSx0LnZhbHVlKX0pKX0sdC5wcm90b3R5cGUucHJvcD1mdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLmVsZW1lbnQuc2V0QXR0cmlidXRlKHQsZSksdGhpcy5lbGVtZW50fSx0LnByb3RvdHlwZS5nZXRQcm9wPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmVsZW1lbnQuZ2V0QXR0cmlidXRlKHQpfSx0LnByb3RvdHlwZS5maW5kRWxlbWVudHM9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKHQpfSx0LnByb3RvdHlwZS5maW5kQnlJZD1mdW5jdGlvbih0KXtyZXR1cm4gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodCl9LHQucHJvdG90eXBlLnJlbW92ZUVsZW1lbnQ9ZnVuY3Rpb24odCl7dC5wYXJlbnRFbGVtZW50LnJlbW92ZUNoaWxkKHQpfSx0LnByb3RvdHlwZS5hZGRDbGFzcz1mdW5jdGlvbih0KXt2YXIgZSxuPXQuc3BsaXQoXCIgXCIpO3JldHVybihlPXRoaXMuZWxlbWVudC5jbGFzc0xpc3QpLmFkZC5hcHBseShlLG4pLHRoaXN9LHQucHJvdG90eXBlLnJlbW92ZUNsYXNzPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0KSx0aGlzfSx0LnByb3RvdHlwZS5oYXNDbGFzcz1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5lbGVtZW50LmNsYXNzTGlzdC5jb250YWlucyh0KX0sdC5wcm90b3R5cGUuaGFzQ2xhc3Nlcz1mdW5jdGlvbih0KXt2YXIgZT10aGlzO3JldHVybiB2b2lkIDA9PT10LnNwbGl0KFwiIFwiKS5maW5kKChmdW5jdGlvbih0KXtyZXR1cm4hMT09PWUuZWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnModCl9KSl9LHQucHJvdG90eXBlLnNldFRleHQ9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuZWxlbWVudC50ZXh0Q29udGVudD10LHRoaXN9LHQucHJvdG90eXBlLmdldFRleHQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5lbGVtZW50LnRleHRDb250ZW50fSx0LnByb3RvdHlwZS5hcHBlbmQ9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdm9pZCAwPT09ZSYmKGU9ITApLGUmJnRoaXMuY2hpbGRyZW4ucHVzaCh0KSx0aGlzLmVsZW1lbnQuYXBwZW5kQ2hpbGQodC5lbGVtZW50KSx0aGlzfSx0LnByb3RvdHlwZS5mb2N1cz1mdW5jdGlvbigpe3RoaXMuZWxlbWVudC5mb2N1cygpfSx0LnByb3RvdHlwZS5pc0VtcHR5T2JqPWZ1bmN0aW9uKHQpe3JldHVybiAwPT09T2JqZWN0LmtleXModCkubGVuZ3RofSxPYmplY3QuZGVmaW5lUHJvcGVydHkodC5wcm90b3R5cGUsXCJpZFwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5nZXRQcm9wKFwiaWRcIil9LHNldDpmdW5jdGlvbih0KXt0aGlzLnByb3AoXCJpZFwiLHQpfSxlbnVtZXJhYmxlOiExLGNvbmZpZ3VyYWJsZTohMH0pLHQucHJvdG90eXBlLmNsb25lPWZ1bmN0aW9uKCl7dmFyIGU9bmV3IHQsbj10aGlzLmVsZW1lbnQuY2xvbmVOb2RlKCk7aWYobiBpbnN0YW5jZW9mIEhUTUxFbGVtZW50JiYoZS5lbGVtZW50PW4pLHRoaXMuY2hpbGRyZW4ubGVuZ3RoPjApe3ZhciBvPXRoaXMuY2hpbGRyZW4ubWFwKChmdW5jdGlvbih0KXt2YXIgbj10LmNsb25lKCk7cmV0dXJuIGUuZWxlbWVudC5hcHBlbmQobi5lbGVtZW50KSxufSkpO2UuY2hpbGRyZW49b31yZXR1cm4gZX0sdC5wcm90b3R5cGUuc2hDbG9uZT1mdW5jdGlvbih0KXtyZXR1cm4gdD9PYmplY3QuYXNzaWduKE9iamVjdC5jcmVhdGUoT2JqZWN0LmdldFByb3RvdHlwZU9mKHQpKSx0KTp0fSx0LnByb3RvdHlwZS5jaGlsZHJlbk5vZGVzPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZWxlbWVudC5jaGlsZHJlbn0sdC5wcm90b3R5cGUuYXBwZW5kQ2hpbGQ9ZnVuY3Rpb24odCl7dGhpcy5lbGVtZW50LmFwcGVuZENoaWxkKHQpfSx0LnByb3RvdHlwZS53cmFwPWZ1bmN0aW9uKHQsZSl7dmFyIG49dC5jbG9uZU5vZGUoKTtpZihlIGluc3RhbmNlb2YgRWxlbWVudCl7dmFyIG89ZS5wYXJlbnRFbGVtZW50O24uYXBwZW5kQ2hpbGQoZSksby5hcHBlbmRDaGlsZChuKX1lbHNle2lmKGUubGVuZ3RoPD0wKXJldHVybjtvPWVbMF0ucGFyZW50RWxlbWVudDtmb3IodmFyIGk9MDtpPGUubGVuZ3RoO2krKyl7dmFyIHI9ZVtpXTtuLmFwcGVuZENoaWxkKHIpfW8uYXBwZW5kQ2hpbGQobil9fSx0LnByb3RvdHlwZS5hZGREcmFnSGFuZGxlcnM9ZnVuY3Rpb24odCxlKXtlJiYhdGhpcy5pc0VtcHR5T2JqKGUpJiYoZS5kcmFnU3RhcnQmJnQuYWRkRXZlbnRMaXN0ZW5lcihcImRyYWdzdGFydFwiLGUuZHJhZ1N0YXJ0KSxlLmRyYWdMZWF2ZSYmdC5hZGRFdmVudExpc3RlbmVyKFwiZHJhZ2xlYXZlXCIsZS5kcmFnTGVhdmUpLGUuZHJhZ0VudGVyJiZ0LmFkZEV2ZW50TGlzdGVuZXIoXCJkcmFnZW50ZXJcIixlLmRyYWdFbnRlciksZS5kcmFnT3ZlciYmdC5hZGRFdmVudExpc3RlbmVyKFwiZHJhZ292ZXJcIixlLmRyYWdPdmVyKSxlLmRyYWdFbmQmJnQuYWRkRXZlbnRMaXN0ZW5lcihcImRyYWdlbmRcIixlLmRyYWdFbmQpLGUuZHJvcCYmdC5hZGRFdmVudExpc3RlbmVyKFwiZHJvcFwiLGUuZHJvcCkpfSx0LnByb3RvdHlwZS5tYXRjaGVzPWZ1bmN0aW9uKHQsZSl7cmV0dXJuISghdHx8MSE9PXQubm9kZVR5cGUpJiYoIWV8fHQubWF0Y2hlcyhlKSl9LHQucHJvdG90eXBlLnNpYmxpbmdzPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1bXTtyZXR1cm4gdGhpcy5lbGVtZW50LnBhcmVudE5vZGU/KHRoaXMuZWxlbWVudC5wYXJlbnROb2RlLmNoaWxkTm9kZXMuZm9yRWFjaCgoZnVuY3Rpb24obyl7byE9PWUuZWxlbWVudCYmZS5tYXRjaGVzKG8sdCkmJm4ucHVzaChvKX0pKSxuKTpufSx0fSgpLFdvPShuKDY2MSksZnVuY3Rpb24oKXtyZXR1cm4gV289T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24odCl7Zm9yKHZhciBlLG49MSxvPWFyZ3VtZW50cy5sZW5ndGg7bjxvO24rKylmb3IodmFyIGkgaW4gZT1hcmd1bWVudHNbbl0pT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsaSkmJih0W2ldPWVbaV0pO3JldHVybiB0fSxXby5hcHBseSh0aGlzLGFyZ3VtZW50cyl9KSxGbz1uZXcoZnVuY3Rpb24oKXtmdW5jdGlvbiB0KCl7fXJldHVybiB0LnByb3RvdHlwZS5nZXQ9ZnVuY3Rpb24odCl7dmFyIGU9ZG9jdW1lbnQuY29va2llLm1hdGNoKFwiKD86KD86XnwuKjsgKilcIi5jb25jYXQodCxcIiAqPSAqKFteO10qKS4qJCl8Xi4qJFwiKSlbMV07aWYoZSlyZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KGUpfSx0LnByb3RvdHlwZS5zZXQ9ZnVuY3Rpb24odCxlLG4pe3ZvaWQgMD09PW4mJihuPXt9KSxuLmRheXMmJihuW1wibWF4LWFnZVwiXT02MCpuLmRheXMqNjAqMjQsZGVsZXRlIG4uZGF5cyksbj1PYmplY3QuZW50cmllcyhuKS5yZWR1Y2UoKGZ1bmN0aW9uKHQsZSl7dmFyIG49ZVswXSxvPWVbMV07cmV0dXJuXCJcIi5jb25jYXQodCxcIjsgXCIpLmNvbmNhdChuLFwiPVwiKS5jb25jYXQobyl9KSxcIlwiKSxkb2N1bWVudC5jb29raWU9dCtcIj1cIitlbmNvZGVVUklDb21wb25lbnQoZSkrbn0sdC5wcm90b3R5cGUuZGVsZXRlPWZ1bmN0aW9uKHQsZSl7dGhpcy5zZXQodCxcIlwiLFdvKHtcIm1heC1hZ2VcIjotMX0sZSkpfSx0LnByb3RvdHlwZS5nZXRKU09OPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZ2V0KHQpO3JldHVybiBlP0pTT04ucGFyc2UoZSk6XCJcIn0sdC5wcm90b3R5cGUuc2V0SlNPTj1mdW5jdGlvbih0LGUsbil7dGhpcy5zZXQodCxKU09OLnN0cmluZ2lmeShlKSxuKX0sdH0oKSksVW89ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KCl7fXJldHVybiB0LkNPTF9TT1JUSU5HPVwiQ09MX1NPUlRJTkdcIix0LkNPTF9SRVNJWkVEPVwiQ09MX1JFU0laRURcIix0LkNPTF9TSE9XX0hJREU9XCJDT0xfU0hPV19ISURFXCIsdC5DT0xfUkVPUkRFUj1cIkNPTF9SRU9SREVSXCIsdH0oKSx6bz1mdW5jdGlvbigpe2Z1bmN0aW9uIHQoKXt9cmV0dXJuIHQuR1JJRF9EQVRBPVwiR1JJRF9EQVRBXCIsdC5PTl9ORVhUX1JFQ09SRD1cIk9OX05FWFRfUkVDT1JEXCIsdC5PTl9QUkVWX1JFQ09SRD1cIk9OX1BSRVZfUkVDT1JEXCIsdC5PTl9TQVZFX1JFQ09SRD1cIk9OX1NBVkVfUkVDT1JEXCIsdC5PTl9ERUxFVEVfUkVDT1JEPVwiT05fREVMRVRFX1JFQ09SRFwiLHQuT05fTEFTVF9SRUNPUkQ9XCJPTl9MQVNUX1JFQ09SRFwiLHQuT05fRklSU1RfUkVDT1JEPVwiT05fRklSU1RfUkVDT1JEXCIsdC5PTl9BRERfUkVDT1JEPVwiT05fQUREX1JFQ09SRFwiLHQuT05fRkVUQ0hfUkVDT1JEPVwiT05fRkVUQ0hfUkVDT1JEXCIsdC5PTl9GRVRDSF9SRUNPUkRfRVJST1I9XCJPTl9GRVRDSF9SRUNPUkRfRVJST1JcIix0Lk9OX0ZFVENIX0dSSURfUkVDT1JEPVwiT05fRkVUQ0hfR1JJRF9SRUNPUkRcIix0Lk9OX0ZFVENIX0dSSURfUkVDT1JEX0VSUk9SPVwiT05fRkVUQ0hfR1JJRF9SRUNPUkRfRVJST1JcIix0Lk9OX05BVklHQVRJTkdfUkVDT1JEPVwiT05fTkFWSUdBVElOR19SRUNPUkRcIix0Lk9OX0dSSURfVVBEQVRFRD1cIk9OX0dSSURfVVBEQVRFRFwiLHQuT05fU0FWRV9FUlJPUj1cIk9OX1NBVkVfRVJST1JcIix0Lk9OX1NPUlRJTkdfUkVRVUVTVEVEPVwiT05fU09SVElOR19SRVFVRVNURURcIix0Lk9OX0NPTFNfUkVPUkRFUkVEPVwiT05fQ09MU19SRU9SREVSRURcIix0Lk9OX0dSSURfREFUQV9CT1VORD1cIk9OX0dSSURfREFUQV9CT1VORFwiLHQuT05fR1JJRF9DT05GSUdfVVBEQVRFRD1cIk9OX0dSSURfQ09ORklHX1VQREFURURcIix0Lk9OX1BBR0VfUkVBRFk9XCJPTl9QQUdFX1JFQURZXCIsdC5PTl9ST1dfVVBEQVRFRD1cIk9OX1JPV19VUERBVEVEXCIsdC5PTl9GSUVMRF9VUERBVEVEPVwiT05fRklFTERfVVBEQVRFRFwiLHQuT05fUk9XX0RPVUJMRV9DTElDS0VEPVwiT05fUk9XX0RPVUJMRV9DTElDS0VEXCIsdH0oKSxWbz1uZXcoZnVuY3Rpb24oKXtmdW5jdGlvbiB0KCl7dGhpcy5jYWxsYmFja3M9W10sdGhpcy5yZWdpc3RlcldpblBvcFN0YXRlKCl9cmV0dXJuIHQucHJvdG90eXBlLnJlZ2lzdGVyV2luUG9wU3RhdGU9ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3dpbmRvdy5vbnBvcHN0YXRlPWZ1bmN0aW9uKGUpe2lmKGUuc3RhdGUmJmUuc3RhdGUuZXZlbnREYXRhKXtjb25zb2xlLmxvZyhlLnN0YXRlKTt2YXIgbj17RXZlbnREYXRhOmUuc3RhdGUuZXZlbnREYXRhLFNraXBQdXNoOiEwLERhdGFTb3VyY2VOYW1lOlwiXCJ9O3QuRW1pdCh6by5PTl9GRVRDSF9SRUNPUkQsd2luZG93LG4pfX19LHQucHJvdG90eXBlLkVtaXQ9ZnVuY3Rpb24odCxlLG4pe2lmKHQpdHJ5e3RoaXMuY2FsbGJhY2tzLmZvckVhY2goKGZ1bmN0aW9uKG8pe28uRXZlbnROYW1lIT09dHx8by5EYXRhU291cmNlTmFtZSE9PW4uRGF0YVNvdXJjZU5hbWUmJiEwPT09by5WZXJpZnlEYXRhU291cmNlTmFtZXx8by5DYWxsYmFjayhlLG4pfSkpfWNhdGNoKHQpe2NvbnNvbGUuZXJyb3IodCl9fSx0LnByb3RvdHlwZS5VbnN1YnNjcmliZT1mdW5jdGlvbih0KXt2YXIgZT10aGlzLmNhbGxiYWNrcy5maWx0ZXIoKGZ1bmN0aW9uKGUpe3JldHVybiAwPT0oZS5LZXk9PT10LktleSYmZS5FdmVudE5hbWU9PT10LkV2ZW50TmFtZSYmZS5EYXRhU291cmNlTmFtZT09PXQuRGF0YVNvdXJjZU5hbWUpfSkpO3RoaXMuY2FsbGJhY2tzPWV9LHQucHJvdG90eXBlLlN1YnNjcmliZT1mdW5jdGlvbih0KXt0LkV2ZW50TmFtZSYmdGhpcy5jYWxsYmFja3MucHVzaCh0KX0sdH0oKSksJG89ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KCl7fXJldHVybiB0LnByb3RvdHlwZS5hZGRJdGVtPWZ1bmN0aW9uKHQsZSxuKXt2YXIgbz17dmFsdWU6ZSx0eXBlOlwicHJlbVwiLGV4cGlyeTpuLmdldFRpbWUoKX07XCJvYmplY3RcIj09dHlwZW9mIGUmJnZvaWQgMCE9PWUmJihvLnR5cGU9XCJvYmplY3RcIiksc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbSh0LEpTT04uc3RyaW5naWZ5KG8pKX0sdC5wcm90b3R5cGUuYXBwZW5kSXRlbT1mdW5jdGlvbih0LGUpe3RyeXt2YXIgbj10aGlzLmdldEl0ZW1SYXcodCk7aWYobil7dmFyIG89ZShuLnZhbHVlKTt0aGlzLmFkZEl0ZW0odCxvLG5ldyBEYXRlKG4uZXhwaXJ5KSl9fWNhdGNoKHQpe2NvbnNvbGUuZXJyb3IodCl9fSx0LnByb3RvdHlwZS5jcmVhdGVFeHBpcnlLZXk9ZnVuY3Rpb24odCl7cmV0dXJuIHQrXCItZXhwaXJ5XCJ9LHQucHJvdG90eXBlLmdldEl0ZW1SYXc9ZnVuY3Rpb24odCl7dmFyIGU9c2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSh0KTtpZihlKXt2YXIgbj1KU09OLnBhcnNlKGUpO3JldHVybiBEYXRlLm5vdygpPm4uZXhwaXJ5Pyh0aGlzLnJlbW92ZUl0ZW0odCksdm9pZCBjb25zb2xlLmxvZyhcImVudHJ5IGV4cGlyZWQsIHdpbGwgYmUgcmVtb3ZlZFwiLG4pKTpufXJldHVybiBudWxsfSx0LnByb3RvdHlwZS5nZXRJdGVtPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZ2V0SXRlbVJhdyh0KTtyZXR1cm4gZT9lLnZhbHVlOm51bGx9LHQucHJvdG90eXBlLnJlbW92ZUl0ZW09ZnVuY3Rpb24odCl7c2Vzc2lvblN0b3JhZ2UucmVtb3ZlSXRlbSh0KX0sdC5wcm90b3R5cGUucmVtb3ZlQWxsPWZ1bmN0aW9uKHQpe2lmKHQpe3ZhciBlPXNlc3Npb25TdG9yYWdlLmxlbmd0aDtpZighKGU8PTApKXtmb3IodmFyIG49W10sbz0wO288ZTtvKyspKGk9c2Vzc2lvblN0b3JhZ2Uua2V5KG8pKS5zdGFydHNXaXRoKHQpJiZuLnB1c2goaSk7Zm9yKG89MDtvPG4ubGVuZ3RoO28rKyl7dmFyIGk9bltvXTtzZXNzaW9uU3RvcmFnZS5yZW1vdmVJdGVtKGkpfX19ZWxzZSBzZXNzaW9uU3RvcmFnZS5yZW1vdmVBbGwoKX0sdH0oKSxxbz1uZXcoZnVuY3Rpb24oKXtmdW5jdGlvbiB0KCl7dGhpcy5EYXRhVGFibGVzPVtdfXJldHVybiB0LnByb3RvdHlwZS5BZGQ9ZnVuY3Rpb24odCl7dGhpcy5EYXRhVGFibGVzLnB1c2godCl9LHQucHJvdG90eXBlLkdldEFsbD1mdW5jdGlvbigpe3ZhciB0PVtdO3JldHVybiB0aGlzLkRhdGFUYWJsZXMuZm9yRWFjaCgoZnVuY3Rpb24oZSl7aWYoIWUuaXNSZWFkT25seSl7dmFyIG49e0RhdGFTb3VyY2VOYW1lOmUuZGF0YVNvdXJjZU5hbWUsRGF0YTplLmRpcnR5UmVjb3Jkc307dC5wdXNoKG4pfX0pKSx0fSx0LnByb3RvdHlwZS5HZXRCeURTTmFtZT1mdW5jdGlvbih0KXt2YXIgZT10aGlzLkRhdGFUYWJsZXMuZmluZCgoZnVuY3Rpb24oZSl7cmV0dXJuIGUuZGF0YVNvdXJjZU5hbWU9PT10fSkpO2lmKGUpcmV0dXJue0RhdGFTb3VyY2VOYW1lOmUuZGF0YVNvdXJjZU5hbWUsRGF0YTplLmRpcnR5UmVjb3Jkc319LHR9KCkpLEtvPShCbz1mdW5jdGlvbih0LGUpe3JldHVybiBCbz1PYmplY3Quc2V0UHJvdG90eXBlT2Z8fHtfX3Byb3RvX186W119aW5zdGFuY2VvZiBBcnJheSYmZnVuY3Rpb24odCxlKXt0Ll9fcHJvdG9fXz1lfXx8ZnVuY3Rpb24odCxlKXtmb3IodmFyIG4gaW4gZSlPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxuKSYmKHRbbl09ZVtuXSl9LEJvKHQsZSl9LGZ1bmN0aW9uKHQsZSl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgZSYmbnVsbCE9PWUpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNsYXNzIGV4dGVuZHMgdmFsdWUgXCIrU3RyaW5nKGUpK1wiIGlzIG5vdCBhIGNvbnN0cnVjdG9yIG9yIG51bGxcIik7ZnVuY3Rpb24gbigpe3RoaXMuY29uc3RydWN0b3I9dH1Cbyh0LGUpLHQucHJvdG90eXBlPW51bGw9PT1lP09iamVjdC5jcmVhdGUoZSk6KG4ucHJvdG90eXBlPWUucHJvdG90eXBlLG5ldyBuKX0pLFhvPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSl7dmFyIG49dC5jYWxsKHRoaXMpfHx0aGlzO3JldHVybiBuLm9wdGlvbnM9ZSxuLmRhdGFTb3VyY2VOYW1lPWUuRGF0YVNvdXJjZU5hbWUsbn1yZXR1cm4gS28oZSx0KSxlLnByb3RvdHlwZS5ub3RpZnlMaXN0ZW5lcnM9ZnVuY3Rpb24odCxlKXtWby5FbWl0KHQsdGhpcyxlKX0sZS5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKCl7dmFyIHQsZTtpZihcInNlbGVjdFwiPT09dGhpcy5vcHRpb25zLklucHV0VHlwZSl0aGlzLmVsZW1lbnQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNlbGVjdFwiKTtlbHNlIGlmKFwiYnV0dG9uXCI9PT10aGlzLm9wdGlvbnMuSW5wdXRUeXBlKXt2YXIgbj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO24udHlwZT10aGlzLm9wdGlvbnMuSW5wdXRUeXBlLHRoaXMuZWxlbWVudD1ufWVsc2V7dmFyIG89ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlucHV0XCIpO28udHlwZT10aGlzLm9wdGlvbnMuSW5wdXRUeXBlLHRoaXMuZWxlbWVudD1vfXRoaXMuZWxlbWVudC5pZD1udWxsIT09KHQ9dGhpcy5vcHRpb25zLkVsZW1lbnRJZCkmJnZvaWQgMCE9PXQ/dDp0aGlzLm9wdGlvbnMuSW5wdXRUeXBlK1wiX1wiK3RoaXMub3B0aW9ucy5EYXRhU291cmNlTmFtZStcIl9cIit0aGlzLm9wdGlvbnMuTW9kZWxOYW1lLHRoaXMudGl0bGU9bnVsbCE9PShlPXRoaXMub3B0aW9ucy5UaXRsZSkmJnZvaWQgMCE9PWU/ZTpcIlwifSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZS5wcm90b3R5cGUsXCJ2YWxcIix7Z2V0OmZ1bmN0aW9uKCl7aWYodGhpcy5lbGVtZW50KXJldHVybiB0aGlzLmVsZW1lbnQgaW5zdGFuY2VvZiBIVE1MSW5wdXRFbGVtZW50P1wiY2hlY2tib3hcIj09PXRoaXMub3B0aW9ucy5JbnB1dFR5cGU/dGhpcy5lbGVtZW50LmNoZWNrZWQ6XCJudW1iZXJcIj09PXRoaXMub3B0aW9ucy5JbnB1dFR5cGU/dGhpcy5lbGVtZW50LnZhbHVlQXNOdW1iZXI6dGhpcy5lbGVtZW50LnZhbHVlOnRoaXMuZWxlbWVudC52YWx1ZX0sc2V0OmZ1bmN0aW9uKHQpe3RoaXMuZWxlbWVudCYmKFwiY2hlY2tib3hcIj09PXRoaXMub3B0aW9ucy5JbnB1dFR5cGU/dGhpcy5lbGVtZW50LmNoZWNrZWQ9dDp0aGlzLmVsZW1lbnQudmFsdWU9dCxcInNlbGVjdFwiPT09dGhpcy5vcHRpb25zLklucHV0VHlwZSYmdGhpcy5jaGFuZ2UoKSl9LGVudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUucHJvdG90eXBlLFwidmFsRXh0XCIse3NldDpmdW5jdGlvbih0KXt0aGlzLnZhbD10LHRoaXMuY2hhbmdlKCl9LGVudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUucHJvdG90eXBlLFwicmVhZG9ubHlcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZWxlbWVudCBpbnN0YW5jZW9mIEhUTUxJbnB1dEVsZW1lbnQmJnRoaXMuZWxlbWVudC5yZWFkT25seX0sc2V0OmZ1bmN0aW9uKHQpe3RoaXMuZWxlbWVudCBpbnN0YW5jZW9mIEhUTUxJbnB1dEVsZW1lbnQmJih0aGlzLmVsZW1lbnQucmVhZE9ubHk9dCl9LGVudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUucHJvdG90eXBlLFwiZGlzYWJsZWRcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZWxlbWVudCBpbnN0YW5jZW9mIEhUTUxJbnB1dEVsZW1lbnR8fHRoaXMuZWxlbWVudCBpbnN0YW5jZW9mIEhUTUxTZWxlY3RFbGVtZW50P3RoaXMuZWxlbWVudC5kaXNhYmxlZDpcInRydWVcIj09PXRoaXMuZ2V0UHJvcChcImRpc2FibGVkXCIpfSxzZXQ6ZnVuY3Rpb24odCl7aWYodGhpcy5lbGVtZW50IGluc3RhbmNlb2YgSFRNTElucHV0RWxlbWVudHx8dGhpcy5lbGVtZW50IGluc3RhbmNlb2YgSFRNTFNlbGVjdEVsZW1lbnQpdGhpcy5lbGVtZW50LmRpc2FibGVkPXQ7ZWxzZXt2YXIgZT0hMD09PXQ/XCJ0cnVlXCI6XCJmYWxzZVwiO3RoaXMucHJvcChcImRpc2FibGVkXCIsZSl9fSxlbnVtZXJhYmxlOiExLGNvbmZpZ3VyYWJsZTohMH0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLnByb3RvdHlwZSxcImlzS2V5XCIse2dldDpmdW5jdGlvbigpe3JldHVyblwidHJ1ZVwiPT09dGhpcy5nZXRQcm9wKFwiZGF0YS1rZXljb2x1bW5cIil9LHNldDpmdW5jdGlvbih0KXt0aGlzLnByb3AoXCJkYXRhLWtleWNvbHVtblwiLHQpfSxlbnVtZXJhYmxlOiExLGNvbmZpZ3VyYWJsZTohMH0pLGUucHJvdG90eXBlLmFkZERvdWJsZUNsaWNrRXZlbnQ9ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3RoaXMuZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiZGJsY2xpY2tcIiwoZnVuY3Rpb24oZSl7dC5ub3RpZnlMaXN0ZW5lcnMoem8uT05fUk9XX0RPVUJMRV9DTElDS0VELHtFdmVudERhdGE6e0V2ZW50OmV9LERhdGFTb3VyY2VOYW1lOnQub3B0aW9ucy5EYXRhU291cmNlTmFtZX0pfSkpfSxlLnByb3RvdHlwZS5jaGFuZ2U9ZnVuY3Rpb24oKXt0aGlzLmVsZW1lbnQuZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoXCJjaGFuZ2VcIikpfSxlLnByb3RvdHlwZS5jbG9uZT1mdW5jdGlvbigpe3JldHVybiB0LnByb3RvdHlwZS5jbG9uZS5jYWxsKHRoaXMpfSxlfShHbyksWW89ZnVuY3Rpb24oKXt2YXIgdD1mdW5jdGlvbihlLG4pe3JldHVybiB0PU9iamVjdC5zZXRQcm90b3R5cGVPZnx8e19fcHJvdG9fXzpbXX1pbnN0YW5jZW9mIEFycmF5JiZmdW5jdGlvbih0LGUpe3QuX19wcm90b19fPWV9fHxmdW5jdGlvbih0LGUpe2Zvcih2YXIgbiBpbiBlKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLG4pJiYodFtuXT1lW25dKX0sdChlLG4pfTtyZXR1cm4gZnVuY3Rpb24oZSxuKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBuJiZudWxsIT09bil0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2xhc3MgZXh0ZW5kcyB2YWx1ZSBcIitTdHJpbmcobikrXCIgaXMgbm90IGEgY29uc3RydWN0b3Igb3IgbnVsbFwiKTtmdW5jdGlvbiBvKCl7dGhpcy5jb25zdHJ1Y3Rvcj1lfXQoZSxuKSxlLnByb3RvdHlwZT1udWxsPT09bj9PYmplY3QuY3JlYXRlKG4pOihvLnByb3RvdHlwZT1uLnByb3RvdHlwZSxuZXcgbyl9fSgpLFFvPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSl7dmFyIG49dGhpcztyZXR1cm4gZS5JbnB1dFR5cGU9XCJjaGVja2JveFwiLChuPXQuY2FsbCh0aGlzLGUpfHx0aGlzKS5yZW5kZXIoKSxufXJldHVybiBZbyhlLHQpLGUucHJvdG90eXBlLmNsb25lPWZ1bmN0aW9uKCl7dmFyIG49dC5wcm90b3R5cGUuY2xvbmUuY2FsbCh0aGlzKSxvPW5ldyBlKHRoaXMuc2hDbG9uZSh0aGlzLm9wdGlvbnMpKTtyZXR1cm4gby5lbGVtZW50PW4uZWxlbWVudCxvLmNoaWxkcmVuPW4uY2hpbGRyZW4sdGhpcy5hZGREb3VibGVDbGlja0V2ZW50KCksb30sZX0oWG8pLEpvPWZ1bmN0aW9uKCl7dmFyIHQ9ZnVuY3Rpb24oZSxuKXtyZXR1cm4gdD1PYmplY3Quc2V0UHJvdG90eXBlT2Z8fHtfX3Byb3RvX186W119aW5zdGFuY2VvZiBBcnJheSYmZnVuY3Rpb24odCxlKXt0Ll9fcHJvdG9fXz1lfXx8ZnVuY3Rpb24odCxlKXtmb3IodmFyIG4gaW4gZSlPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxuKSYmKHRbbl09ZVtuXSl9LHQoZSxuKX07cmV0dXJuIGZ1bmN0aW9uKGUsbil7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgbiYmbnVsbCE9PW4pdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNsYXNzIGV4dGVuZHMgdmFsdWUgXCIrU3RyaW5nKG4pK1wiIGlzIG5vdCBhIGNvbnN0cnVjdG9yIG9yIG51bGxcIik7ZnVuY3Rpb24gbygpe3RoaXMuY29uc3RydWN0b3I9ZX10KGUsbiksZS5wcm90b3R5cGU9bnVsbD09PW4/T2JqZWN0LmNyZWF0ZShuKTooby5wcm90b3R5cGU9bi5wcm90b3R5cGUsbmV3IG8pfX0oKSxabz1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKGUpe3ZhciBuPXQuY2FsbCh0aGlzKXx8dGhpcztyZXR1cm4gbi5vcHRpb25zPWUsbi5yZW5kZXIoKSxufXJldHVybiBKbyhlLHQpLGUucHJvdG90eXBlLnJlbmRlcj1mdW5jdGlvbigpe3ZhciB0PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIik7dC52YWx1ZT10aGlzLm9wdGlvbnMudmFsdWUsdC50ZXh0PXRoaXMub3B0aW9ucy50ZXh0LHRoaXMub3B0aW9ucy5pc1NlbGVjdGVkJiYodC5zZWxlY3RlZD0hMCksdGhpcy5lbGVtZW50PXR9LGUucHJvdG90eXBlLmNsb25lPWZ1bmN0aW9uKCl7dmFyIGU9dC5wcm90b3R5cGUuY2xvbmUuY2FsbCh0aGlzKTtyZXR1cm4gZS5zZXRUZXh0KHRoaXMub3B0aW9ucy50ZXh0KSxlfSxlfShHbyksdGk9ZnVuY3Rpb24oKXt2YXIgdD1mdW5jdGlvbihlLG4pe3JldHVybiB0PU9iamVjdC5zZXRQcm90b3R5cGVPZnx8e19fcHJvdG9fXzpbXX1pbnN0YW5jZW9mIEFycmF5JiZmdW5jdGlvbih0LGUpe3QuX19wcm90b19fPWV9fHxmdW5jdGlvbih0LGUpe2Zvcih2YXIgbiBpbiBlKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLG4pJiYodFtuXT1lW25dKX0sdChlLG4pfTtyZXR1cm4gZnVuY3Rpb24oZSxuKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBuJiZudWxsIT09bil0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2xhc3MgZXh0ZW5kcyB2YWx1ZSBcIitTdHJpbmcobikrXCIgaXMgbm90IGEgY29uc3RydWN0b3Igb3IgbnVsbFwiKTtmdW5jdGlvbiBvKCl7dGhpcy5jb25zdHJ1Y3Rvcj1lfXQoZSxuKSxlLnByb3RvdHlwZT1udWxsPT09bj9PYmplY3QuY3JlYXRlKG4pOihvLnByb3RvdHlwZT1uLnByb3RvdHlwZSxuZXcgbyl9fSgpLGVpPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSl7dmFyIG49dGhpcztyZXR1cm4gZS5JbnB1dFR5cGU9XCJzZWxlY3RcIiwobj10LmNhbGwodGhpcyxlKXx8dGhpcykucmVuZGVyKCksbn1yZXR1cm4gdGkoZSx0KSxlLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oKXt2YXIgZT10aGlzO3QucHJvdG90eXBlLnJlbmRlci5jYWxsKHRoaXMpLHRoaXMub3B0aW9ucy5TZWxlY3RPcHRpb25zLmZvckVhY2goKGZ1bmN0aW9uKHQpe3JldHVybiBlLmFwcGVuZChuZXcgWm8odCkpfSkpLHRoaXMuYWRkQ2xhc3MoXCJmb3JtLXNlbGVjdCBmb3JtLXNlbGVjdC1zbVwiKX0sZS5wcm90b3R5cGUuY2xvbmU9ZnVuY3Rpb24oKXt2YXIgbj10LnByb3RvdHlwZS5jbG9uZS5jYWxsKHRoaXMpLG89bmV3IGUodGhpcy5zaENsb25lKHRoaXMub3B0aW9ucykpO3JldHVybiBvLmVsZW1lbnQ9bi5lbGVtZW50LG8uY2hpbGRyZW49bi5jaGlsZHJlbix0aGlzLmFkZERvdWJsZUNsaWNrRXZlbnQoKSxvfSxlfShYbyksbmk9ZnVuY3Rpb24oKXt2YXIgdD1mdW5jdGlvbihlLG4pe3JldHVybiB0PU9iamVjdC5zZXRQcm90b3R5cGVPZnx8e19fcHJvdG9fXzpbXX1pbnN0YW5jZW9mIEFycmF5JiZmdW5jdGlvbih0LGUpe3QuX19wcm90b19fPWV9fHxmdW5jdGlvbih0LGUpe2Zvcih2YXIgbiBpbiBlKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLG4pJiYodFtuXT1lW25dKX0sdChlLG4pfTtyZXR1cm4gZnVuY3Rpb24oZSxuKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBuJiZudWxsIT09bil0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2xhc3MgZXh0ZW5kcyB2YWx1ZSBcIitTdHJpbmcobikrXCIgaXMgbm90IGEgY29uc3RydWN0b3Igb3IgbnVsbFwiKTtmdW5jdGlvbiBvKCl7dGhpcy5jb25zdHJ1Y3Rvcj1lfXQoZSxuKSxlLnByb3RvdHlwZT1udWxsPT09bj9PYmplY3QuY3JlYXRlKG4pOihvLnByb3RvdHlwZT1uLnByb3RvdHlwZSxuZXcgbyl9fSgpLG9pPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSl7dmFyIG4sbz10aGlzO3JldHVybiBlLklucHV0VHlwZT1udWxsIT09KG49ZS5JbnB1dFR5cGUpJiZ2b2lkIDAhPT1uP246XCJ0ZXh0XCIsKG89dC5jYWxsKHRoaXMsZSl8fHRoaXMpLnJlbmRlcigpLG99cmV0dXJuIG5pKGUsdCksZS5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKCl7dmFyIGUsbjt0LnByb3RvdHlwZS5yZW5kZXIuY2FsbCh0aGlzKSx0aGlzLmFkZENsYXNzKG51bGwhPT0oZT10aGlzLm9wdGlvbnMuQ2xhc3NlcykmJnZvaWQgMCE9PWU/ZTpcImZvcm0tY29udHJvbCBmb3JtLWNvbnRyb2wtc21cIiksdGhpcy5wbGFjZUhvbGRlcj1udWxsIT09KG49dGhpcy5vcHRpb25zLlBsYWNlSG9sZGVyKSYmdm9pZCAwIT09bj9uOnRoaXMub3B0aW9ucy5Nb2RlbE5hbWV9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLnByb3RvdHlwZSxcInBsYWNlSG9sZGVyXCIse3NldDpmdW5jdGlvbih0KXt0JiZ0aGlzLmVsZW1lbnQgaW5zdGFuY2VvZiBIVE1MSW5wdXRFbGVtZW50JiYodGhpcy5lbGVtZW50LnBsYWNlaG9sZGVyPXQpfSxlbnVtZXJhYmxlOiExLGNvbmZpZ3VyYWJsZTohMH0pLGUucHJvdG90eXBlLmNsb25lPWZ1bmN0aW9uKCl7dmFyIG49dC5wcm90b3R5cGUuY2xvbmUuY2FsbCh0aGlzKSxvPW5ldyBlKHRoaXMuc2hDbG9uZSh0aGlzLm9wdGlvbnMpKTtyZXR1cm4gby5lbGVtZW50PW4uZWxlbWVudCxvLmNoaWxkcmVuPW4uY2hpbGRyZW4sby5hZGREb3VibGVDbGlja0V2ZW50KCksb30sZX0oWG8pLGlpPWZ1bmN0aW9uKCl7dmFyIHQ9ZnVuY3Rpb24oZSxuKXtyZXR1cm4gdD1PYmplY3Quc2V0UHJvdG90eXBlT2Z8fHtfX3Byb3RvX186W119aW5zdGFuY2VvZiBBcnJheSYmZnVuY3Rpb24odCxlKXt0Ll9fcHJvdG9fXz1lfXx8ZnVuY3Rpb24odCxlKXtmb3IodmFyIG4gaW4gZSlPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxuKSYmKHRbbl09ZVtuXSl9LHQoZSxuKX07cmV0dXJuIGZ1bmN0aW9uKGUsbil7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgbiYmbnVsbCE9PW4pdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNsYXNzIGV4dGVuZHMgdmFsdWUgXCIrU3RyaW5nKG4pK1wiIGlzIG5vdCBhIGNvbnN0cnVjdG9yIG9yIG51bGxcIik7ZnVuY3Rpb24gbygpe3RoaXMuY29uc3RydWN0b3I9ZX10KGUsbiksZS5wcm90b3R5cGU9bnVsbD09PW4/T2JqZWN0LmNyZWF0ZShuKTooby5wcm90b3R5cGU9bi5wcm90b3R5cGUsbmV3IG8pfX0oKSxyaT1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKGUpe3ZhciBuPXRoaXM7cmV0dXJuIGUuSW5wdXRUeXBlPVwiYnV0dG9uXCIsKG49dC5jYWxsKHRoaXMsZSl8fHRoaXMpLm9wdGlvbnM9ZSxuLnJlbmRlcigpLG59cmV0dXJuIGlpKGUsdCksZS5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKCl7dmFyIGU7aWYodC5wcm90b3R5cGUucmVuZGVyLmNhbGwodGhpcyksdGhpcy5hZGRDbGFzcyhudWxsIT09KGU9dGhpcy5vcHRpb25zLkNsYXNzZXMpJiZ2b2lkIDAhPT1lP2U6XCJidG4gYnRuLW91dGxpbmUtcHJpbWFyeVwiKSx0aGlzLm9wdGlvbnMuSWNvbil7dmFyIG49ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlcIik7bi5jbGFzc0xpc3QuYWRkKFwiYmlcIixcImJpLVwiLmNvbmNhdCh0aGlzLm9wdGlvbnMuSWNvbikpLHRoaXMuZWxlbWVudC5hcHBlbmRDaGlsZChuKX10aGlzLm9wdGlvbnMuSGFuZGxlciYmdGhpcy5hZGRDbGlja0hhbmRsZXIodGhpcy5vcHRpb25zLkhhbmRsZXIpfSxlLnByb3RvdHlwZS5hZGRDbGlja0hhbmRsZXI9ZnVuY3Rpb24odCl7dGhpcy5lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLChmdW5jdGlvbihlKXtyZXR1cm4gdChlKX0pKX0sZS5wcm90b3R5cGUuY2xvbmU9ZnVuY3Rpb24oKXt2YXIgbj10LnByb3RvdHlwZS5jbG9uZS5jYWxsKHRoaXMpLG89bmV3IGUodGhpcy5zaENsb25lKHRoaXMub3B0aW9ucykpO3JldHVybiBvLmNoaWxkcmVuPW4uY2hpbGRyZW4sb30sZX0oWG8pLHNpPWZ1bmN0aW9uKCl7dmFyIHQ9ZnVuY3Rpb24oZSxuKXtyZXR1cm4gdD1PYmplY3Quc2V0UHJvdG90eXBlT2Z8fHtfX3Byb3RvX186W119aW5zdGFuY2VvZiBBcnJheSYmZnVuY3Rpb24odCxlKXt0Ll9fcHJvdG9fXz1lfXx8ZnVuY3Rpb24odCxlKXtmb3IodmFyIG4gaW4gZSlPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxuKSYmKHRbbl09ZVtuXSl9LHQoZSxuKX07cmV0dXJuIGZ1bmN0aW9uKGUsbil7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgbiYmbnVsbCE9PW4pdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNsYXNzIGV4dGVuZHMgdmFsdWUgXCIrU3RyaW5nKG4pK1wiIGlzIG5vdCBhIGNvbnN0cnVjdG9yIG9yIG51bGxcIik7ZnVuY3Rpb24gbygpe3RoaXMuY29uc3RydWN0b3I9ZX10KGUsbiksZS5wcm90b3R5cGU9bnVsbD09PW4/T2JqZWN0LmNyZWF0ZShuKTooby5wcm90b3R5cGU9bi5wcm90b3R5cGUsbmV3IG8pfX0oKSxhaT1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKGUpe3ZhciBuPXQuY2FsbCh0aGlzKXx8dGhpcztyZXR1cm4gbi5vcHRpb25zPWUsbi5wYXJlbnRDb250YWluZXJJZD1uLm9wdGlvbnMuQ29udGFpbmVySWQsbi5tb2RhbElkPVwiXCIuY29uY2F0KG4ucGFyZW50Q29udGFpbmVySWQsXCJfYnNfXCIpLmNvbmNhdChuLm9wdGlvbnMuTW9kZWxOYW1lKSxuLm1vZGFsVGl0bGVJZD1cIlwiLmNvbmNhdChuLnBhcmVudENvbnRhaW5lcklkLFwiX2xic19cIikuY29uY2F0KG4ub3B0aW9ucy5Nb2RlbE5hbWUpLG4uY29udGFpbmVySWQ9XCJcIi5jb25jYXQobi5wYXJlbnRDb250YWluZXJJZCxcIl9jYnNfXCIpLmNvbmNhdChuLm9wdGlvbnMuTW9kZWxOYW1lKSxuLmdyaWRJZD1cIlwiLmNvbmNhdChuLnBhcmVudENvbnRhaW5lcklkLFwiX2dfXCIpLmNvbmNhdChuLm9wdGlvbnMuTW9kZWxOYW1lKSxuLnJlbmRlcigpLG4uZ3JpZD1uLnJlbmRlckdyaWQoKSxuLm9uSXRlbVNlbGVjdGVkPWZ1bmN0aW9uKHQsZSl7Y29uc29sZS5sb2coKX0sbn1yZXR1cm4gc2koZSx0KSxlLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGhpcy5tb2RhbElkKTtpZihlKXRoaXMuZWxlbWVudD1lLHRoaXMuc2VsZWN0b3JNb2RhbD1Cbi5nZXRPckNyZWF0ZUluc3RhbmNlKGUpO2Vsc2V7dGhpcy5lbGVtZW50PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksdGhpcy5lbGVtZW50LmlkPXRoaXMubW9kYWxJZCx0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LmFkZChcIm1vZGFsXCIpLHRoaXMuZWxlbWVudC5pbm5lckhUTUw9JzxkaXYgY2xhc3M9XCJtb2RhbC1kaWFsb2cgbW9kYWwtZGlhbG9nLXNjcm9sbGFibGVcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibW9kYWwtY29udGVudFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibW9kYWwtaGVhZGVyXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDUgY2xhc3M9XCJtb2RhbC10aXRsZVwiIGlkPVwiJy5jb25jYXQodGhpcy5tb2RhbFRpdGxlSWQsJ1wiPlNlbGVjdCBhIHZhbHVlPC9oNT5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzPVwiYnRuLWNsb3NlXCIgZGF0YS1icy1kaXNtaXNzPVwibW9kYWxcIiBhcmlhLWxhYmVsPVwiQ2xvc2VcIj48L2J1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtb2RhbC1ib2R5XCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPVwiJykuY29uY2F0KHRoaXMuY29udGFpbmVySWQsJ1wiPlxcblxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibW9kYWwtZm9vdGVyXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzcz1cImJ0biBidG4tcHJpbWFyeVwiIGRhdGEtYnMtZGlzbWlzcz1cIm1vZGFsXCI+T2s8L2J1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4nKTt2YXIgbj1kb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0aGlzLnBhcmVudENvbnRhaW5lcklkKTtuJiZuLmFwcGVuZENoaWxkKHRoaXMuZWxlbWVudCksdGhpcy5zZWxlY3Rvck1vZGFsPW5ldyBCbih0aGlzLmVsZW1lbnQpLHRoaXMuZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwic2hvd24uYnMubW9kYWxcIiwoZnVuY3Rpb24oZSl7dC5ncmlkLmNsZWFyR3JpZCgpLHQuZ3JpZC5pbmZpbml0ZVNjcm9sbGVyLmN1cnJlbnRQYWdlPTEsdC5ncmlkLmZldGNoR3JpZFBhZ2UoMSksdC5vbldpbmRvd1Nob3duJiZ0Lm9uV2luZG93U2hvd24odCl9KSl9fSxlLnByb3RvdHlwZS5zaG93PWZ1bmN0aW9uKCl7dGhpcy5zZWxlY3Rvck1vZGFsLnNob3coKX0sZS5wcm90b3R5cGUucmVuZGVyR3JpZD1mdW5jdGlvbigpe2lmKCF0aGlzLmZpbmRCeUlkKHRoaXMuZ3JpZElkKSl7dmFyIHQ9e25hbWU6dGhpcy5vcHRpb25zLkRhdGFTb3VyY2VOYW1lK1wiX1wiK3RoaXMub3B0aW9ucy5Nb2RlbE5hbWUsaXNSZW1vdGU6ITAsdXJsOnRoaXMub3B0aW9ucy5VcmxDYn0sZT17Z3JpZElkOnRoaXMuZ3JpZElkLGNvbnRhaW5lcklkOnRoaXMuY29udGFpbmVySWQsY29sRGVmaW5pdGlvbjp0aGlzLm9wdGlvbnMuR3JpZENvbHMsZGF0YVNvdXJjZTp0LGlzUmVhZG9ubHk6ITAsZW5hYmxlSW5maW5pdGVTY3JvbGw6ITB9LG49bmV3IGppKGUpO3JldHVybiBuLlJlZ2lzdGVyQ2FsbGJhY2tzKCksbi5yZW1vdmVIYW5kbGVyKHpvLkdSSURfREFUQSksbi5yZW1vdmVIYW5kbGVyKHpvLk9OX0FERF9SRUNPUkQpLG4ucmVtb3ZlSGFuZGxlcih6by5PTl9GRVRDSF9SRUNPUkQpLG4ucmVtb3ZlSGFuZGxlcih6by5PTl9TQVZFX1JFQ09SRCksbi5yZW1vdmVIYW5kbGVyKHpvLk9OX1NBVkVfRVJST1IpLG4uUmVuZGVyKCksbi5ncmlkQWN0aW9ucy52aXNpYmxlPSExLG59fSxlfShHbyksY2k9ZnVuY3Rpb24oKXt2YXIgdD1mdW5jdGlvbihlLG4pe3JldHVybiB0PU9iamVjdC5zZXRQcm90b3R5cGVPZnx8e19fcHJvdG9fXzpbXX1pbnN0YW5jZW9mIEFycmF5JiZmdW5jdGlvbih0LGUpe3QuX19wcm90b19fPWV9fHxmdW5jdGlvbih0LGUpe2Zvcih2YXIgbiBpbiBlKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLG4pJiYodFtuXT1lW25dKX0sdChlLG4pfTtyZXR1cm4gZnVuY3Rpb24oZSxuKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBuJiZudWxsIT09bil0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2xhc3MgZXh0ZW5kcyB2YWx1ZSBcIitTdHJpbmcobikrXCIgaXMgbm90IGEgY29uc3RydWN0b3Igb3IgbnVsbFwiKTtmdW5jdGlvbiBvKCl7dGhpcy5jb25zdHJ1Y3Rvcj1lfXQoZSxuKSxlLnByb3RvdHlwZT1udWxsPT09bj9PYmplY3QuY3JlYXRlKG4pOihvLnByb3RvdHlwZT1uLnByb3RvdHlwZSxuZXcgbyl9fSgpLGxpPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSxuKXt2YXIgbz10LmNhbGwodGhpcyxlKXx8dGhpcztyZXR1cm4gby5vcHRpb25zPWUsby5zZWxlY3RvcldpbmRvdz1uLG8ucmVuZGVyKCksb31yZXR1cm4gY2koZSx0KSxlLnByb3RvdHlwZS5vbkl0ZW1TZWxlY3RlZD1mdW5jdGlvbih0LGUpe3ZhciBuPXQuZ3JpZC5ib2R5LmdldFNlbGVjdGVkUm93KCkuZ2V0SW5wdXRzKCkuZmluZCgoZnVuY3Rpb24odCl7cmV0dXJuIHQuaXNLZXl9KSk7biYmKHRoaXMudHh0RWxlbWVudC52YWw9bi52YWwsdGhpcy50eHRFbGVtZW50LmNoYW5nZSgpKSx0LnNlbGVjdG9yTW9kYWwuaGlkZSgpfSxlLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oKXt2YXIgdD10aGlzO2lmKCF0aGlzLnNlbGVjdG9yV2luZG93KXt2YXIgZT1uZXcgYWkodGhpcy5vcHRpb25zKTt0aGlzLnNlbGVjdG9yV2luZG93PWV9dGhpcy50eHRFbGVtZW50PW5ldyBvaSh0aGlzLm9wdGlvbnMpLHRoaXMuYnRuRWxlbWVudD1uZXcgcmkoe0RhdGFTb3VyY2VOYW1lOnRoaXMub3B0aW9ucy5EYXRhU291cmNlTmFtZSxJY29uOlwic2VhcmNoXCIsSGFuZGxlcjpmdW5jdGlvbihlKXtyZXR1cm4gbj10LHQuc2VsZWN0b3JXaW5kb3cuZ3JpZC5yZW1vdmVIYW5kbGVyKHpvLk9OX1JPV19ET1VCTEVfQ0xJQ0tFRCksdC5zZWxlY3RvcldpbmRvdy5ncmlkLmFkZEhhbmRsZXIoem8uT05fUk9XX0RPVUJMRV9DTElDS0VELChmdW5jdGlvbihlLG8pe3JldHVybiBuLm9uSXRlbVNlbGVjdGVkKHQuc2VsZWN0b3JXaW5kb3csbyl9KSksdm9pZCB0LnNlbGVjdG9yV2luZG93LnNob3coKTt2YXIgbn19KTt2YXIgbj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO24uY2xhc3NMaXN0LmFkZChcImlucHV0LWdyb3VwXCIsXCJpbnB1dC1ncm91cC1zbVwiKSxuLmFwcGVuZENoaWxkKHRoaXMudHh0RWxlbWVudC5lbGVtZW50KSxuLmFwcGVuZENoaWxkKHRoaXMuYnRuRWxlbWVudC5lbGVtZW50KSx0aGlzLmVsZW1lbnQ9bn0sZS5wcm90b3R5cGUuY2xvbmU9ZnVuY3Rpb24oKXt2YXIgbj10LnByb3RvdHlwZS5jbG9uZS5jYWxsKHRoaXMpLG89dGhpcy5zaENsb25lKHRoaXMub3B0aW9ucyk7by5jbG9uZUNvbnRleHQ9ITA7dmFyIGk9bmV3IGUobyx0aGlzLnNlbGVjdG9yV2luZG93KTtyZXR1cm4gaS5jaGlsZHJlbj1uLmNoaWxkcmVuLGl9LGV9KFhvKSx1aT1mdW5jdGlvbigpe3ZhciB0PWZ1bmN0aW9uKGUsbil7cmV0dXJuIHQ9T2JqZWN0LnNldFByb3RvdHlwZU9mfHx7X19wcm90b19fOltdfWluc3RhbmNlb2YgQXJyYXkmJmZ1bmN0aW9uKHQsZSl7dC5fX3Byb3RvX189ZX18fGZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuIGluIGUpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsbikmJih0W25dPWVbbl0pfSx0KGUsbil9O3JldHVybiBmdW5jdGlvbihlLG4pe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIG4mJm51bGwhPT1uKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDbGFzcyBleHRlbmRzIHZhbHVlIFwiK1N0cmluZyhuKStcIiBpcyBub3QgYSBjb25zdHJ1Y3RvciBvciBudWxsXCIpO2Z1bmN0aW9uIG8oKXt0aGlzLmNvbnN0cnVjdG9yPWV9dChlLG4pLGUucHJvdG90eXBlPW51bGw9PT1uP09iamVjdC5jcmVhdGUobik6KG8ucHJvdG90eXBlPW4ucHJvdG90eXBlLG5ldyBvKX19KCksZGk9ZnVuY3Rpb24oKXtyZXR1cm4gZGk9T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24odCl7Zm9yKHZhciBlLG49MSxvPWFyZ3VtZW50cy5sZW5ndGg7bjxvO24rKylmb3IodmFyIGkgaW4gZT1hcmd1bWVudHNbbl0pT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsaSkmJih0W2ldPWVbaV0pO3JldHVybiB0fSxkaS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9LHBpPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSxuKXt2b2lkIDA9PT1uJiYobj0hMSk7dmFyIG89dC5jYWxsKHRoaXMpfHx0aGlzO3JldHVybiBvLm9wdGlvbnM9ZXx8e30sby5pc0hlYWRlcj1uLG8ucmVuZGVyKCksb31yZXR1cm4gdWkoZSx0KSxlLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLm9wdGlvbnM/dGhpcy5vcHRpb25zLlJvd1NwYW46dm9pZCAwLGU9dGhpcy5vcHRpb25zP3RoaXMub3B0aW9ucy5Db2xTcGFuOnZvaWQgMDt0aGlzLmVsZW1lbnQ9ITA9PT10aGlzLmlzSGVhZGVyP2RvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ0aFwiKTpkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwidGRcIiksdGhpcy5pc0hlYWRlciYmKHRoaXMuZWxlbWVudC5jbGFzc0xpc3QuYWRkKFwic29ydGluZ1wiLFwiZHMtY29sXCIpLHRoaXMub3B0aW9ucy5EaXNwbGF5TmFtZSYmdGhpcy5zZXRUZXh0KHRoaXMub3B0aW9ucy5EaXNwbGF5TmFtZSkpLHQmJnRoaXMucHJvcChcInJvd1NwYW5cIix0KSxlJiZ0aGlzLnByb3AoXCJjb2xTcGFuXCIsZSksdGhpcy5hZGRJbnB1dENvbnRyb2woKX0sZS5wcm90b3R5cGUuYWRkSW5wdXRDb250cm9sPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5vcHRpb25zO2lmKCF0aGlzLmlzSGVhZGVyJiZ0LkRpc3BsYXlOYW1lJiZ0LlByb3BOYW1lKXt2YXIgZT1udWxsLG49e0RhdGFTb3VyY2VOYW1lOnQuRGF0YVNvdXJjZU5hbWUsTW9kZWxOYW1lOnQuUHJvcE5hbWUsUGxhY2VIb2xkZXI6dC5EaXNwbGF5TmFtZSxUaXRsZTp0LkRpc3BsYXlOYW1lLElucHV0VHlwZTp0LkRhdGFUeXBlfTtpZihcInNlbGVjdFwiPT09dC5EYXRhVHlwZSl7dmFyIG89ZGkoZGkoe30sbikse1NlbGVjdE9wdGlvbnM6dC5TZWxlY3RMaXN0fSk7ZT1uZXcgZWkobyl9ZWxzZSBpZihcImNoZWNrYm94XCI9PT10LkRhdGFUeXBlKWU9bmV3IFFvKG4pO2Vsc2UgaWYoXCJzZWxlY3RvclwiPT09dC5EYXRhVHlwZSl7dmFyIGk9ZGkoZGkoe30sbikse0NvbnRhaW5lcklkOnQuQ29udGFpbmVySWQsVXJsQ2I6dC5TZWxlY3RvckRhdGFDQixHcmlkQ29sczp0LlNlbGVjdG9yQ29sc30pO2U9bmV3IGxpKGkpfWVsc2UgZT1uZXcgb2kobik7ITA9PT10LklzS2V5JiYoZS5yZWFkb25seT0hMCxlLmlzS2V5PSEwKSwhMD09PXQuSXNSZWFkT25seSYmKGUucmVhZG9ubHk9ITAsZS5zZXRDc3MoXCJjdXJzb3JcIixcInBvaW50ZXJcIiksZS5zZXRDc3MoXCJ1c2VyLXNlbGVjdFwiLFwibm9uZVwiKSksdGhpcy5hcHBlbmQoZSl9fSxlLnByb3RvdHlwZS5nZXRJbnB1dENvbnRyb2xzPWZ1bmN0aW9uKCl7aWYoITA9PT10aGlzLmlzSGVhZGVyKXJldHVybltdO3ZhciB0PVtdLGU9dGhpcy5jaGlsZHJlbjtyZXR1cm4gZS5sZW5ndGg+MCYmZS5mb3JFYWNoKChmdW5jdGlvbihlLG4pe2UgaW5zdGFuY2VvZiBsaT90LnB1c2goZS50eHRFbGVtZW50KTplIGluc3RhbmNlb2YgWG8mJnQucHVzaChlKX0pKSx0fSxlLnByb3RvdHlwZS5nZXRDZWxsVGV4dD1mdW5jdGlvbigpe2lmKHRoaXMuaXNIZWFkZXIpcmV0dXJuIHRoaXMuZ2V0VGV4dCgpO3ZhciB0PXRoaXMuY2hpbGRyZW5bMF07aWYoIXQpcmV0dXJuXCJcIjtpZih0LmVsZW1lbnQgaW5zdGFuY2VvZiBIVE1MSW5wdXRFbGVtZW50KXtpZih0IGluc3RhbmNlb2YgUW8pcmV0dXJuIHQuZWxlbWVudC5jaGVja2VkK1wiXCI7aWYodCBpbnN0YW5jZW9mIFhvKXJldHVybiB0LnZhbH1yZXR1cm4gdC5nZXRUZXh0KCl9LGUucHJvdG90eXBlLmNsb25lPWZ1bmN0aW9uKCl7dmFyIG49dC5wcm90b3R5cGUuY2xvbmUuY2FsbCh0aGlzKSxvPW5ldyBlKHRoaXMuc2hDbG9uZSh0aGlzLm9wdGlvbnMpLHRoaXMuaXNIZWFkZXIpLGk9by5nZXRUZXh0KCk7cmV0dXJuIG8uY2hpbGRyZW49bi5jaGlsZHJlbixvLmVsZW1lbnQ9bi5lbGVtZW50LHRoaXMuaXNIZWFkZXImJm8uc2V0VGV4dChpKSxvfSxlfShHbyksaGk9ZnVuY3Rpb24odCxlLG4pe3ZvaWQgMD09PXQmJih0PTEpLHZvaWQgMD09PWUmJihlPTEwKSx2b2lkIDA9PT1uJiYobj0xMCksdGhpcy5wYWdlSW5kZXg9dCx0aGlzLnBhZ2VTaXplPSFlfHxlPD0wPzEwOmUsdGhpcy50b3RhbFJlY29yZHM9bix0aGlzLnRvdGFsUGFnZXM9TWF0aC5jZWlsKHRoaXMudG90YWxSZWNvcmRzL3RoaXMucGFnZVNpemUpfSxmaT1mdW5jdGlvbigpe3ZhciB0PWZ1bmN0aW9uKGUsbil7cmV0dXJuIHQ9T2JqZWN0LnNldFByb3RvdHlwZU9mfHx7X19wcm90b19fOltdfWluc3RhbmNlb2YgQXJyYXkmJmZ1bmN0aW9uKHQsZSl7dC5fX3Byb3RvX189ZX18fGZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuIGluIGUpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsbikmJih0W25dPWVbbl0pfSx0KGUsbil9O3JldHVybiBmdW5jdGlvbihlLG4pe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIG4mJm51bGwhPT1uKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDbGFzcyBleHRlbmRzIHZhbHVlIFwiK1N0cmluZyhuKStcIiBpcyBub3QgYSBjb25zdHJ1Y3RvciBvciBudWxsXCIpO2Z1bmN0aW9uIG8oKXt0aGlzLmNvbnN0cnVjdG9yPWV9dChlLG4pLGUucHJvdG90eXBlPW51bGw9PT1uP09iamVjdC5jcmVhdGUobik6KG8ucHJvdG90eXBlPW4ucHJvdG90eXBlLG5ldyBvKX19KCksbWk9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZShlLG4pe3ZvaWQgMD09PW4mJihuPSExKTt2YXIgbz10LmNhbGwodGhpcyl8fHRoaXM7cmV0dXJuIG8uc2Vzc2lvblN0b3JhZ2U9bmV3ICRvLG8uZGF0YVNvdXJjZU5hbWU9ZSxvLmVuYWJsZUNhY2hpbmc9bixvfXJldHVybiBmaShlLHQpLGUucHJvdG90eXBlLm5vdGlmeUxpc3RlbmVycz1mdW5jdGlvbih0LGUpe1ZvLkVtaXQodCx0aGlzLGUpfSxlLnByb3RvdHlwZS5nZXQ9ZnVuY3Rpb24odCl7dmFyIGUsbj10aGlzLG89bi5lbmFibGVDYWNoaW5nO2lmKCEwPT09byl7dmFyIGk9SlNPTi5zdHJpbmdpZnkodCkscj10aGlzLnNlc3Npb25TdG9yYWdlLmdldEl0ZW0oaSk7aWYocilyZXR1cm4gbi5ub3RpZnlSZXNwb25zZShyLHQpLFByb21pc2UucmVzb2x2ZSgpfXZhciBzPXttZXRob2Q6bnVsbCE9PShlPXQubWV0aG9kKSYmdm9pZCAwIT09ZT9lOlwiR0VUXCIsaGVhZGVyczp0LmhlYWRlcnM/dC5oZWFkZXJzOnt9fTtyZXR1cm4gZmV0Y2godC51cmwscykudGhlbigoZnVuY3Rpb24odCl7cmV0dXJuIHQuanNvbigpfSkpLnRoZW4oKGZ1bmN0aW9uKGUpeyEwPT09byYmbi5zZXNzaW9uU3RvcmFnZS5hZGRJdGVtKGksZSxuZXcgRGF0ZShEYXRlLm5vdygpKzZlNSkpLG4ubm90aWZ5UmVzcG9uc2UoZSx0KX0pKS5jYXRjaCgoZnVuY3Rpb24oZSl7bi5ub3RpZnlFcnJvcihlLHQpfSkpfSxlLnByb3RvdHlwZS5ub3RpZnlSZXNwb25zZT1mdW5jdGlvbih0LGUpe3RyeXt2YXIgbj17RGF0YVNvdXJjZU5hbWU6dGhpcy5kYXRhU291cmNlTmFtZSxFdmVudERhdGE6e0RhdGE6dC5pdGVtcyxNZXRhRGF0YTpuZXcgaGkodC5tZXRhRGF0YS5wYWdlSW5kZXgsdC5tZXRhRGF0YS5wYWdlU2l6ZSx0Lm1ldGFEYXRhLnRvdGFsUmVjb3Jkcyl9fX1jYXRjaCh0KXtyZXR1cm4gdm9pZCB0aGlzLm5vdGlmeUVycm9yKFwiaW52YWxpZCByZXNwb25zZS4gTWFrZSBzdXJlIHJlc3BvbnNlIGhhdmUgZmllbGRzOiBpdGVtc3thcnJheVtvYmplY3RdfSwgbWV0YURhdGEge3BhZ2VJbmRleCwgcGFnZVNpemUsIHRvdGFsUmVjb3Jkc31cIixlKX10aGlzLm5vdGlmeUxpc3RlbmVycyh6by5PTl9GRVRDSF9HUklEX1JFQ09SRCxuKX0sZS5wcm90b3R5cGUubm90aWZ5RXJyb3I9ZnVuY3Rpb24odCxlKXt2YXIgbj17RGF0YVNvdXJjZU5hbWU6dGhpcy5kYXRhU291cmNlTmFtZSxFdmVudERhdGE6e0V2ZW50OnQsUmVjb3JkSWQ6ZS5yZWNvcmRJZH19O3RoaXMubm90aWZ5TGlzdGVuZXJzKHpvLk9OX0ZFVENIX0dSSURfUkVDT1JEX0VSUk9SLG4pfSxlfShHbyksZ2k9ZnVuY3Rpb24oKXt2YXIgdD1mdW5jdGlvbihlLG4pe3JldHVybiB0PU9iamVjdC5zZXRQcm90b3R5cGVPZnx8e19fcHJvdG9fXzpbXX1pbnN0YW5jZW9mIEFycmF5JiZmdW5jdGlvbih0LGUpe3QuX19wcm90b19fPWV9fHxmdW5jdGlvbih0LGUpe2Zvcih2YXIgbiBpbiBlKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLG4pJiYodFtuXT1lW25dKX0sdChlLG4pfTtyZXR1cm4gZnVuY3Rpb24oZSxuKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBuJiZudWxsIT09bil0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2xhc3MgZXh0ZW5kcyB2YWx1ZSBcIitTdHJpbmcobikrXCIgaXMgbm90IGEgY29uc3RydWN0b3Igb3IgbnVsbFwiKTtmdW5jdGlvbiBvKCl7dGhpcy5jb25zdHJ1Y3Rvcj1lfXQoZSxuKSxlLnByb3RvdHlwZT1udWxsPT09bj9PYmplY3QuY3JlYXRlKG4pOihvLnByb3RvdHlwZT1uLnByb3RvdHlwZSxuZXcgbyl9fSgpLF9pPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSl7dmFyIG49dC5jYWxsKHRoaXMpfHx0aGlzO3JldHVybiBuLm9wdGlvbnM9ZSxuLnJlbmRlcigpLG59cmV0dXJuIGdpKGUsdCksZS5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKCl7dmFyIHQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImFcIik7dGhpcy5vcHRpb25zLnRleHQmJih0LnRleHQ9dGhpcy5vcHRpb25zLnRleHQpLHRoaXMub3B0aW9ucy5ocmVmJiYodC5ocmVmPXRoaXMub3B0aW9ucy5ocmVmKSx0aGlzLmVsZW1lbnQ9dCx0aGlzLm9wdGlvbnMuY2xhc3NlcyYmdGhpcy5hZGRDbGFzcyh0aGlzLm9wdGlvbnMuY2xhc3NlcyksdGhpcy5vcHRpb25zLmNsaWNrSGFuZGxlciYmdGhpcy5lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLHRoaXMub3B0aW9ucy5jbGlja0hhbmRsZXIpfSxlfShHbyksdmk9ZnVuY3Rpb24oKXt2YXIgdD1mdW5jdGlvbihlLG4pe3JldHVybiB0PU9iamVjdC5zZXRQcm90b3R5cGVPZnx8e19fcHJvdG9fXzpbXX1pbnN0YW5jZW9mIEFycmF5JiZmdW5jdGlvbih0LGUpe3QuX19wcm90b19fPWV9fHxmdW5jdGlvbih0LGUpe2Zvcih2YXIgbiBpbiBlKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLG4pJiYodFtuXT1lW25dKX0sdChlLG4pfTtyZXR1cm4gZnVuY3Rpb24oZSxuKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBuJiZudWxsIT09bil0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2xhc3MgZXh0ZW5kcyB2YWx1ZSBcIitTdHJpbmcobikrXCIgaXMgbm90IGEgY29uc3RydWN0b3Igb3IgbnVsbFwiKTtmdW5jdGlvbiBvKCl7dGhpcy5jb25zdHJ1Y3Rvcj1lfXQoZSxuKSxlLnByb3RvdHlwZT1udWxsPT09bj9PYmplY3QuY3JlYXRlKG4pOihvLnByb3RvdHlwZT1uLnByb3RvdHlwZSxuZXcgbyl9fSgpLHlpPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSl7dmFyIG49dC5jYWxsKHRoaXMpfHx0aGlzO3JldHVybiBuLnBhZ2VMaW5rcz1bXSxuLm9wdGlvbnM9ZSxuLmxpc3RJZD1cInBnX2xpc3RfXCIuY29uY2F0KG4ub3B0aW9ucy5kYXRhU291cmNlTmFtZSksbi5jb250YWluZXJJZD1cInBnX2NvbnRhaW5lcl9cIi5jb25jYXQobi5vcHRpb25zLmRhdGFTb3VyY2VOYW1lKSxufXJldHVybiB2aShlLHQpLGUucHJvdG90eXBlLnJlbmRlcj1mdW5jdGlvbigpe3ZhciB0LGU9dGhpcyxuPW51bGwhPT0odD10aGlzLm9wdGlvbnMubWV0YURhdGEucGFnZUluZGV4KSYmdm9pZCAwIT09dD90OjE7dGhpcy5lbGVtZW50JiZ0aGlzLmVsZW1lbnQucmVtb3ZlKCksdGhpcy5wYWdlTGlua3M9W10sdGhpcy5lbGVtZW50PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksdGhpcy5lbGVtZW50LmlkPXRoaXMuY29udGFpbmVySWQsdGhpcy5hZGRDbGFzcyhcImJzLXBhZ2luYXRpb25cIik7dmFyIG89ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIm5hdlwiKTtvLnNldEF0dHJpYnV0ZShcImFyaWEtbGFiZWxcIixcIlBhZ2UgbmF2aWdhdGlvblwiKSx0aGlzLmVsZW1lbnQuYXBwZW5kQ2hpbGQobyk7dmFyIGk9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInVsXCIpO2kuaWQ9dGhpcy5saXN0SWQsaS5jbGFzc0xpc3QuYWRkKFwicGFnaW5hdGlvblwiLFwianVzdGlmeS1jb250ZW50LWVuZFwiKTtmb3IodmFyIHI9MTtyPD10aGlzLm9wdGlvbnMubWV0YURhdGEudG90YWxQYWdlcyYmcjw9NTtyKyspe3ZhciBzPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsaVwiKTtzLmNsYXNzTGlzdC5hZGQoXCJwYWdlLWl0ZW1cIiksbj09PXImJnMuY2xhc3NMaXN0LmFkZChcImFjdGl2ZVwiKTt2YXIgYT1uZXcgX2koe2RhdGFTb3VyY2VOYW1lOnRoaXMub3B0aW9ucy5kYXRhU291cmNlTmFtZSxjbGFzc2VzOlwicGFnZS1saW5rXCIsaHJlZjpcIiNcIix0ZXh0OlwiXCIuY29uY2F0KHIpLGNsaWNrSGFuZGxlcjpmdW5jdGlvbih0KXtpZih0LnByZXZlbnREZWZhdWx0KCksdC50YXJnZXQgaW5zdGFuY2VvZiBIVE1MRWxlbWVudCYmZS5vcHRpb25zLm5leHRQYWdlQ2FsbGJhY2spe3ZhciBuPXQudGFyZ2V0LmdldEF0dHJpYnV0ZShcImRhdGEtcC1pbmRleFwiKTtlLm9wdGlvbnMubmV4dFBhZ2VDYWxsYmFjayhwYXJzZUludChuKSksZS5mb2N1c1BhZ2VJbmRleChuKX19fSk7YS5wcm9wKFwiZGF0YS1wLWluZGV4XCIsXCJcIi5jb25jYXQocikpLHRoaXMucGFnZUxpbmtzLnB1c2goYSkscy5hcHBlbmRDaGlsZChhLmVsZW1lbnQpLGkuYXBwZW5kQ2hpbGQocyl9by5hcHBlbmRDaGlsZChpKX0sZS5wcm90b3R5cGUuZm9jdXNQYWdlSW5kZXg9ZnVuY3Rpb24odCl7dGhpcy5wYWdlTGlua3MuZm9yRWFjaCgoZnVuY3Rpb24oZSl7dmFyIG49ZS5lbGVtZW50LmNsb3Nlc3QoXCIucGFnZS1pdGVtXCIpO24mJihlLmdldFByb3AoXCJkYXRhLXAtaW5kZXhcIik9PT10PyEwIT09bi5jbGFzc0xpc3QuY29udGFpbnMoXCJhY3RpdmVcIikmJm4uY2xhc3NMaXN0LmFkZChcImFjdGl2ZVwiKTpuLmNsYXNzTGlzdC5yZW1vdmUoXCJhY3RpdmVcIikpfSkpfSxlLnByb3RvdHlwZS5jbGVhcj1mdW5jdGlvbigpe3ZhciB0PXRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiI1wiK3RoaXMubGlzdElkKTt0aGlzLnBhZ2VMaW5rcz1bXSx0LnJlcGxhY2VDaGlsZHJlbigpfSxlfShHbyksYmk9ZnVuY3Rpb24oKXt2YXIgdD1mdW5jdGlvbihlLG4pe3JldHVybiB0PU9iamVjdC5zZXRQcm90b3R5cGVPZnx8e19fcHJvdG9fXzpbXX1pbnN0YW5jZW9mIEFycmF5JiZmdW5jdGlvbih0LGUpe3QuX19wcm90b19fPWV9fHxmdW5jdGlvbih0LGUpe2Zvcih2YXIgbiBpbiBlKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLG4pJiYodFtuXT1lW25dKX0sdChlLG4pfTtyZXR1cm4gZnVuY3Rpb24oZSxuKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBuJiZudWxsIT09bil0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2xhc3MgZXh0ZW5kcyB2YWx1ZSBcIitTdHJpbmcobikrXCIgaXMgbm90IGEgY29uc3RydWN0b3Igb3IgbnVsbFwiKTtmdW5jdGlvbiBvKCl7dGhpcy5jb25zdHJ1Y3Rvcj1lfXQoZSxuKSxlLnByb3RvdHlwZT1udWxsPT09bj9PYmplY3QuY3JlYXRlKG4pOihvLnByb3RvdHlwZT1uLnByb3RvdHlwZSxuZXcgbyl9fSgpLEVpPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSl7dmFyIG49dC5jYWxsKHRoaXMpfHx0aGlzO3JldHVybiBuLmdyaWRFbGVtZW50PWUuZ3JpZEVsZW1lbnQsbi5odHRwQ2xpZW50PWUuaHR0cENsaWVudCxuLnNfYXJlYT1udWxsLG4ub2JzZXJ2ZXI9bnVsbCxuLnRhcmdldD1udWxsLG4uY3VycmVudFBhZ2U9MSxuLmluaXREYXRhPW51bGwsbi5pbml0TWV0YURhdGE9bnVsbCxuLm5leHRQYWdlQ2FsbGJhY2s9bnVsbCxufXJldHVybiBiaShlLHQpLGUucHJvdG90eXBlLm9ic2VydmVyQ0I9ZnVuY3Rpb24odCxlKXshMD09PXRbMF0uaXNJbnRlcnNlY3RpbmcmJnRoaXMuY3VycmVudFBhZ2U8dGhpcy5pbml0TWV0YURhdGEudG90YWxQYWdlcyYmKGNvbnNvbGUubG9nKFwiSW5maW5pdGUgc2Nyb2xsOiBmZXRjaGluZyBuZXh0IHBhZ2UjOiBcIix0aGlzLmN1cnJlbnRQYWdlKzEpLHRoaXMuY3VycmVudFBhZ2UrKyx0aGlzLm5leHRQYWdlQ2FsbGJhY2sodGhpcy5jdXJyZW50UGFnZSkpfSxlLnByb3RvdHlwZS5vYnNlcnZlPWZ1bmN0aW9uKHQpe3RoaXMudGFyZ2V0PXQsdGhpcy5vYnNlcnZlci5vYnNlcnZlKHQpfSxlLnByb3RvdHlwZS51bm9ic2VydmU9ZnVuY3Rpb24oKXt0aGlzLm9ic2VydmVyLnVub2JzZXJ2ZSh0aGlzLnRhcmdldCl9LGUucHJvdG90eXBlLmVuYWJsZT1mdW5jdGlvbigpe3ZhciB0PXRoaXM7dGhpcy5zX2FyZWE9XCJzY3JvbGxfYXJlYV9cIit0aGlzLmdyaWRFbGVtZW50LmlkO3ZhciBlPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7ZS5pZD10aGlzLnNfYXJlYSxlLmNsYXNzTGlzdC5hZGQoXCJyb3dcIixcImJzLXNjcm9sbFwiKSx0aGlzLndyYXAoZSx0aGlzLmdyaWRFbGVtZW50KTt2YXIgbj17cm9vdDpkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0aGlzLnNfYXJlYSkscm9vdE1hcmdpbjpcIjBweFwiLHRocmVzaG9sZDouMyx0cmFja1Zpc2liaWxpdHk6ITF9O3RoaXMub2JzZXJ2ZXI9bmV3IEludGVyc2VjdGlvbk9ic2VydmVyKChmdW5jdGlvbihlLG4pe3JldHVybiB0Lm9ic2VydmVyQ0IoZSxuKX0pLG4pO3ZhciBvPXRoaXMuZ3JpZEVsZW1lbnQucXVlcnlTZWxlY3RvckFsbChcInRyXCIpLGk9b1tvLmxlbmd0aC0xXTt0aGlzLm9ic2VydmUoaSl9LGV9KEdvKSx3aT1mdW5jdGlvbigpe3ZhciB0PWZ1bmN0aW9uKGUsbil7cmV0dXJuIHQ9T2JqZWN0LnNldFByb3RvdHlwZU9mfHx7X19wcm90b19fOltdfWluc3RhbmNlb2YgQXJyYXkmJmZ1bmN0aW9uKHQsZSl7dC5fX3Byb3RvX189ZX18fGZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuIGluIGUpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsbikmJih0W25dPWVbbl0pfSx0KGUsbil9O3JldHVybiBmdW5jdGlvbihlLG4pe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIG4mJm51bGwhPT1uKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDbGFzcyBleHRlbmRzIHZhbHVlIFwiK1N0cmluZyhuKStcIiBpcyBub3QgYSBjb25zdHJ1Y3RvciBvciBudWxsXCIpO2Z1bmN0aW9uIG8oKXt0aGlzLmNvbnN0cnVjdG9yPWV9dChlLG4pLGUucHJvdG90eXBlPW51bGw9PT1uP09iamVjdC5jcmVhdGUobik6KG8ucHJvdG90eXBlPW4ucHJvdG90eXBlLG5ldyBvKX19KCksT2k9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe3ZhciBlPXQuY2FsbCh0aGlzKXx8dGhpcztyZXR1cm4gZS5yZW5kZXIoKSxlfXJldHVybiB3aShlLHQpLGUucHJvdG90eXBlLnJlbmRlcj1mdW5jdGlvbigpe3RoaXMuZWxlbWVudD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaVwiKSx0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LmFkZChcImJpXCIsXCJiaS1jYXJldC1yaWdodFwiLFwicm93LW1hcmtlclwiKX0sZS5wcm90b3R5cGUuY2xvbmU9ZnVuY3Rpb24oKXtyZXR1cm4gdC5wcm90b3R5cGUuY2xvbmUuY2FsbCh0aGlzKX0sZX0oR28pLERpPWZ1bmN0aW9uKCl7dmFyIHQ9ZnVuY3Rpb24oZSxuKXtyZXR1cm4gdD1PYmplY3Quc2V0UHJvdG90eXBlT2Z8fHtfX3Byb3RvX186W119aW5zdGFuY2VvZiBBcnJheSYmZnVuY3Rpb24odCxlKXt0Ll9fcHJvdG9fXz1lfXx8ZnVuY3Rpb24odCxlKXtmb3IodmFyIG4gaW4gZSlPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxuKSYmKHRbbl09ZVtuXSl9LHQoZSxuKX07cmV0dXJuIGZ1bmN0aW9uKGUsbil7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgbiYmbnVsbCE9PW4pdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNsYXNzIGV4dGVuZHMgdmFsdWUgXCIrU3RyaW5nKG4pK1wiIGlzIG5vdCBhIGNvbnN0cnVjdG9yIG9yIG51bGxcIik7ZnVuY3Rpb24gbygpe3RoaXMuY29uc3RydWN0b3I9ZX10KGUsbiksZS5wcm90b3R5cGU9bnVsbD09PW4/T2JqZWN0LmNyZWF0ZShuKTooby5wcm90b3R5cGU9bi5wcm90b3R5cGUsbmV3IG8pfX0oKSxDaT1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKCl7dmFyIGU9dC5jYWxsKHRoaXMpfHx0aGlzO3JldHVybiBlLnJlbmRlcigpLGV9cmV0dXJuIERpKGUsdCksZS5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKCl7dGhpcy5lbGVtZW50PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksdGhpcy5hZGRDbGFzcyhcInJvdyBhY3Rpb25zLWNvbnRhaW5lclwiKX0sZS5wcm90b3R5cGUuYWRkQWN0aW9uPWZ1bmN0aW9uKHQsZSxuLG8saSl7dm9pZCAwPT09aSYmKGk9XCJcIik7dmFyIHI9dGhpcy5nZXRCdXR0b24odCxlLG4saSk7cmV0dXJuIHIuYWRkQ2xpY2tIYW5kbGVyKG8pLHRoaXMuYXBwZW5kKHIsITApLHRoaXN9LGUucHJvdG90eXBlLmFkZERlbGV0ZUFjdGlvbj1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5hZGRBY3Rpb24oXCJidG5EZWxldGVSb3dcIixcImRhbmdlclwiLFwidHJhc2hcIix0LFwiRGVsZXRlXCIpfSxlLnByb3RvdHlwZS5hZGROZXdSZWNvcmRBY3Rpb249ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuYWRkQWN0aW9uKFwiYnRuQWRkUm93XCIsXCJwcmltYXJ5XCIsXCJwbHVzLWNpcmNsZVwiLHQsXCJBZGRcIil9LGUucHJvdG90eXBlLmFkZEdyaWRTZXR0aW5nc0FjdGlvbj1mdW5jdGlvbigpe3ZhciB0PXRoaXMuZ2V0QnV0dG9uKFwiYnRuU2V0dGluZ3NcIixcInByaW1hcnlcIixcImdlYXJcIixcIlNldHRpbmdzXCIpO3JldHVybiB0LnByb3AoXCJkYXRhLWJzLXRvZ2dsZVwiLFwibW9kYWxcIiksdC5wcm9wKFwiZGF0YS1icy10YXJnZXRcIixcIiNzdGF0aWNCYWNrZHJvcF9cIi5jb25jYXQodGhpcy5kYXRhU291cmNlTmFtZSkpLHRoaXMuYXBwZW5kKHQsITApLHRoaXN9LGUucHJvdG90eXBlLmdldEJ1dHRvbj1mdW5jdGlvbih0LGUsbixvKXtyZXR1cm4gbmV3IHJpKHtEYXRhU291cmNlTmFtZTp0aGlzLmRhdGFTb3VyY2VOYW1lLENsYXNzZXM6XCJidG4gYnRuLXNtIGJ0bi1vdXRsaW5lLVwiLmNvbmNhdChlLFwiIGdyaWQtdG9vbGJhci1hY3Rpb25cIiksRWxlbWVudElkOlwiXCIuY29uY2F0KHQsXCJfXCIpLmNvbmNhdCh0aGlzLmRhdGFTb3VyY2VOYW1lKSxJY29uOm4sVGl0bGU6b30pfSxlfShHbyksU2k9ZnVuY3Rpb24oKXt2YXIgdD1mdW5jdGlvbihlLG4pe3JldHVybiB0PU9iamVjdC5zZXRQcm90b3R5cGVPZnx8e19fcHJvdG9fXzpbXX1pbnN0YW5jZW9mIEFycmF5JiZmdW5jdGlvbih0LGUpe3QuX19wcm90b19fPWV9fHxmdW5jdGlvbih0LGUpe2Zvcih2YXIgbiBpbiBlKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLG4pJiYodFtuXT1lW25dKX0sdChlLG4pfTtyZXR1cm4gZnVuY3Rpb24oZSxuKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBuJiZudWxsIT09bil0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2xhc3MgZXh0ZW5kcyB2YWx1ZSBcIitTdHJpbmcobikrXCIgaXMgbm90IGEgY29uc3RydWN0b3Igb3IgbnVsbFwiKTtmdW5jdGlvbiBvKCl7dGhpcy5jb25zdHJ1Y3Rvcj1lfXQoZSxuKSxlLnByb3RvdHlwZT1udWxsPT09bj9PYmplY3QuY3JlYXRlKG4pOihvLnByb3RvdHlwZT1uLnByb3RvdHlwZSxuZXcgbyl9fSgpLFRpPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSl7dmFyIG49dC5jYWxsKHRoaXMpfHx0aGlzO3JldHVybiBuLmNlbGxzPVtdLG4ub3B0aW9ucz1lLG4ucmVuZGVyKCksbn1yZXR1cm4gU2koZSx0KSxlLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oKXt0aGlzLmVsZW1lbnR8fCh0aGlzLmVsZW1lbnQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInRyXCIpKSwhMD09PXRoaXMub3B0aW9ucy5ncmlkSGVhZGVyP3RoaXMuYWRkQ2xhc3MoXCJkcmFnZ2FibGVcIikuYWRkQ2xhc3MoXCJncmlkLWNvbHNcIik6dGhpcy5hZGRDbGFzcyhcImdyaWQtcm93XCIpLCEwPT09dGhpcy5vcHRpb25zLmlzVGVtcGxhdGVSb3cmJih0aGlzLmNzcz17ZGlzcGxheTpcIm5vbmVcIn0sdGhpcy52aXNpYmxlPSExKX0sT2JqZWN0LmRlZmluZVByb3BlcnR5KGUucHJvdG90eXBlLFwicm93Q2F0ZWdvcnlcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZ2V0UHJvcChcImRhdGEtcm93Y2F0ZWdvcnlcIil9LHNldDpmdW5jdGlvbih0KXt0aGlzLnByb3AoXCJkYXRhLXJvd2NhdGVnb3J5XCIsdCl9LGVudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiEwfSksZS5wcm90b3R5cGUuYWRkQ2VsbD1mdW5jdGlvbih0KXt0aGlzLmVsZW1lbnQuYXBwZW5kKHQuZWxlbWVudCksdGhpcy5jZWxscy5wdXNoKHQpfSxlLnByb3RvdHlwZS5hZGRDZWxscz1mdW5jdGlvbih0KXt2YXIgZT10aGlzO3QuZm9yRWFjaCgoZnVuY3Rpb24odCl7cmV0dXJuIGUuYWRkQ2VsbCh0KX0pKX0sZS5wcm90b3R5cGUuZm9jdXNSb3c9ZnVuY3Rpb24oKXt0aGlzLnJlbW92ZUNsYXNzKFwidGFibGUtYWN0aXZlXCIpLmFkZENsYXNzKFwidGFibGUtYWN0aXZlXCIpfSxlLnByb3RvdHlwZS5nZXRJbnB1dHM9ZnVuY3Rpb24oKXtpZighMD09PXRoaXMub3B0aW9ucy5ncmlkSGVhZGVyKXJldHVybltdO3ZhciB0PVtdO3JldHVybiB0aGlzLmNlbGxzLmZvckVhY2goKGZ1bmN0aW9uKGUsbil7dmFyIG89ZS5nZXRJbnB1dENvbnRyb2xzKCk7dD10LmNvbmNhdChvKX0pKSx0fSxlLnByb3RvdHlwZS5jcmVhdGVJbnB1dEZvcj1mdW5jdGlvbih0LGUpe3JldHVybiB0LkRhdGFTb3VyY2VOYW1lPXRoaXMub3B0aW9ucy5kYXRhU291cmNlTmFtZSx0LklzUmVhZE9ubHk9ZSx0LkNvbnRhaW5lcklkPXRoaXMub3B0aW9ucy5jb250YWluZXJJZCxuZXcgcGkodCwhMSl9LGUucHJvdG90eXBlLmNyZWF0ZUhlYWRlckZvcj1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IHBpKHQsITApfSxlLnByb3RvdHlwZS5nZXRWaXNpYmxlSW5wdXRzPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZ2V0SW5wdXRzKCkuZmlsdGVyKChmdW5jdGlvbih0KXtyZXR1cm4hMD09PXQudmlzaWJsZX0pKX0sZS5wcm90b3R5cGUuZ2V0Um93RGF0YUV4dD1mdW5jdGlvbigpe3ZhciB0PXRoaXMuZ2V0SW5wdXRzKCksZT17fTtyZXR1cm4gdC5mb3JFYWNoKChmdW5jdGlvbih0LG4pe3ZhciBvPXQub3B0aW9ucy5Nb2RlbE5hbWU7ZVtvXT10fSkpLGV9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLnByb3RvdHlwZSxcInJUeXBlXCIse2dldDpmdW5jdGlvbigpe3JldHVybiEwPT09dGhpcy5vcHRpb25zLmdyaWRIZWFkZXI/XCJoZWFkXCI6XCJkYXRhXCJ9LGVudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUucHJvdG90eXBlLFwicm93SW5kZXhcIix7Z2V0OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXRQcm9wKHRoaXMuclR5cGUrXCItcm93aW5kZXhcIik7cmV0dXJuIHBhcnNlSW50KHQpfSxzZXQ6ZnVuY3Rpb24odCl7dGhpcy5wcm9wKHRoaXMuclR5cGUrXCItcm93aW5kZXhcIix0KX0sZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITB9KSxlLnByb3RvdHlwZS5nZXRSb3dEYXRhPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXRJbnB1dHMoKSxlPXt9LG49dGhpcy5yb3dDYXRlZ29yeTtyZXR1cm4gZS5yb3dDYXRlZ29yeT1uLHQuZm9yRWFjaCgoZnVuY3Rpb24odCxuKXt2YXIgbz10Lm9wdGlvbnMuTW9kZWxOYW1lO2Vbb109dC52YWx9KSksZS5jbGllbnRSb3dOdW1iZXI9dGhpcy5yb3dJbmRleCxlfSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZS5wcm90b3R5cGUsXCJpc1Jvd0RpcnR5XCIse2dldDpmdW5jdGlvbigpe3JldHVyblwidHJ1ZVwiPT09dGhpcy5nZXRQcm9wKFwiZGF0YS1pc2RpcnR5XCIpfSxzZXQ6ZnVuY3Rpb24odCl7dGhpcy5wcm9wKFwiZGF0YS1pc2RpcnR5XCIsITA9PT10P1widHJ1ZVwiOlwiZmFsc2VcIil9LGVudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiEwfSksZS5wcm90b3R5cGUuY2xvbmU9ZnVuY3Rpb24oKXt2YXIgbj10LnByb3RvdHlwZS5jbG9uZS5jYWxsKHRoaXMpLG89dGhpcy5zaENsb25lKHRoaXMub3B0aW9ucyk7by5pc1RlbXBsYXRlUm93PSExO3ZhciBpPW5ldyBlKG8pO3JldHVybiBpLmVsZW1lbnQ9bi5lbGVtZW50LGkuY2hpbGRyZW49bi5jaGlsZHJlbixpLmNlbGxzPXRoaXMuY2VsbHMubWFwKChmdW5jdGlvbih0KXt2YXIgZT10LmNsb25lKCk7cmV0dXJuIGkuZWxlbWVudC5hcHBlbmQoZS5lbGVtZW50KSxlfSkpLGl9LGV9KEdvKSxSaT1mdW5jdGlvbigpe3ZhciB0PWZ1bmN0aW9uKGUsbil7cmV0dXJuIHQ9T2JqZWN0LnNldFByb3RvdHlwZU9mfHx7X19wcm90b19fOltdfWluc3RhbmNlb2YgQXJyYXkmJmZ1bmN0aW9uKHQsZSl7dC5fX3Byb3RvX189ZX18fGZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuIGluIGUpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsbikmJih0W25dPWVbbl0pfSx0KGUsbil9O3JldHVybiBmdW5jdGlvbihlLG4pe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIG4mJm51bGwhPT1uKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDbGFzcyBleHRlbmRzIHZhbHVlIFwiK1N0cmluZyhuKStcIiBpcyBub3QgYSBjb25zdHJ1Y3RvciBvciBudWxsXCIpO2Z1bmN0aW9uIG8oKXt0aGlzLmNvbnN0cnVjdG9yPWV9dChlLG4pLGUucHJvdG90eXBlPW51bGw9PT1uP09iamVjdC5jcmVhdGUobik6KG8ucHJvdG90eXBlPW4ucHJvdG90eXBlLG5ldyBvKX19KCksTmk9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe3ZhciBlPXQuY2FsbCh0aGlzKXx8dGhpcztyZXR1cm4gZS5yb3dzPVtdLGV9cmV0dXJuIFJpKGUsdCksZS5wcm90b3R5cGUuYWRkUm93PWZ1bmN0aW9uKHQpe3RoaXMuYXBwZW5kKHQpO3ZhciBlPXRoaXMuZ2V0TmV4dFJvd0luZGV4KCk7dC5yb3dJbmRleD1lO3ZhciBuPSEwPT09dC5vcHRpb25zLmdyaWRIZWFkZXI/XCJoZWFkXCI6XCJkYXRhXCI7cmV0dXJuIHQuaWQ9XCJcIi5jb25jYXQodC5vcHRpb25zLmdyaWRJZCxcIl9cIikuY29uY2F0KG4sXCJfXCIpLmNvbmNhdChlKSx0aGlzLnJvd3MucHVzaCh0KSx0aGlzfSxlLnByb3RvdHlwZS5nZXRWaXNpYmxlUm93cz1mdW5jdGlvbigpe3JldHVybiB0aGlzLnJvd3MuZmlsdGVyKChmdW5jdGlvbih0KXtyZXR1cm4hMD09PXQudmlzaWJsZX0pKX0sZS5wcm90b3R5cGUuZ2V0TmV4dFJvd0luZGV4PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucm93cy5sZW5ndGgrMX0sZS5wcm90b3R5cGUuZ2V0R3JpZFRpdGxlc1Jvdz1mdW5jdGlvbigpe3JldHVybiB0aGlzLnJvd3MuZmluZCgoZnVuY3Rpb24odCl7cmV0dXJuITA9PT10Lm9wdGlvbnMuZ3JpZEhlYWRlcn0pKX0sZX0oR28pLElpPWZ1bmN0aW9uKCl7dmFyIHQ9ZnVuY3Rpb24oZSxuKXtyZXR1cm4gdD1PYmplY3Quc2V0UHJvdG90eXBlT2Z8fHtfX3Byb3RvX186W119aW5zdGFuY2VvZiBBcnJheSYmZnVuY3Rpb24odCxlKXt0Ll9fcHJvdG9fXz1lfXx8ZnVuY3Rpb24odCxlKXtmb3IodmFyIG4gaW4gZSlPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxuKSYmKHRbbl09ZVtuXSl9LHQoZSxuKX07cmV0dXJuIGZ1bmN0aW9uKGUsbil7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgbiYmbnVsbCE9PW4pdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNsYXNzIGV4dGVuZHMgdmFsdWUgXCIrU3RyaW5nKG4pK1wiIGlzIG5vdCBhIGNvbnN0cnVjdG9yIG9yIG51bGxcIik7ZnVuY3Rpb24gbygpe3RoaXMuY29uc3RydWN0b3I9ZX10KGUsbiksZS5wcm90b3R5cGU9bnVsbD09PW4/T2JqZWN0LmNyZWF0ZShuKTooby5wcm90b3R5cGU9bi5wcm90b3R5cGUsbmV3IG8pfX0oKSxBaT1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKCl7dmFyIGU9dC5jYWxsKHRoaXMpfHx0aGlzO3JldHVybiBlLnJlbmRlcigpLGV9cmV0dXJuIElpKGUsdCksZS5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKCl7dGhpcy5lbGVtZW50PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ0aGVhZFwiKSx0aGlzLmFkZENsYXNzKFwidGFibGUtbGlnaHRcIil9LGV9KE5pKSx4aT1mdW5jdGlvbigpe3ZhciB0PWZ1bmN0aW9uKGUsbil7cmV0dXJuIHQ9T2JqZWN0LnNldFByb3RvdHlwZU9mfHx7X19wcm90b19fOltdfWluc3RhbmNlb2YgQXJyYXkmJmZ1bmN0aW9uKHQsZSl7dC5fX3Byb3RvX189ZX18fGZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuIGluIGUpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsbikmJih0W25dPWVbbl0pfSx0KGUsbil9O3JldHVybiBmdW5jdGlvbihlLG4pe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIG4mJm51bGwhPT1uKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDbGFzcyBleHRlbmRzIHZhbHVlIFwiK1N0cmluZyhuKStcIiBpcyBub3QgYSBjb25zdHJ1Y3RvciBvciBudWxsXCIpO2Z1bmN0aW9uIG8oKXt0aGlzLmNvbnN0cnVjdG9yPWV9dChlLG4pLGUucHJvdG90eXBlPW51bGw9PT1uP09iamVjdC5jcmVhdGUobik6KG8ucHJvdG90eXBlPW4ucHJvdG90eXBlLG5ldyBvKX19KCksTGk9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe3ZhciBlPXQuY2FsbCh0aGlzKXx8dGhpcztyZXR1cm4gZS5yZW5kZXIoKSxlfXJldHVybiB4aShlLHQpLGUucHJvdG90eXBlLnJlbmRlcj1mdW5jdGlvbigpe3RoaXMuZWxlbWVudD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwidGJvZHlcIil9LGUucHJvdG90eXBlLm5vdGlmeUxpc3RlbmVycz1mdW5jdGlvbih0LGUpe1ZvLkVtaXQodCx0aGlzLGUpfSxlLnByb3RvdHlwZS5yb3dTaWJsaW5ncz1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5yb3dzLmZpbHRlcigoZnVuY3Rpb24oZSxuKXtpZihlIT09dClyZXR1cm4gZX0pKX0sZS5wcm90b3R5cGUuZm9jdXNSb3c9ZnVuY3Rpb24odCl7dC5mb2N1c1JvdygpLHRoaXMucm93U2libGluZ3ModCkuZm9yRWFjaCgoZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5yZW1vdmVDbGFzcyhcInRhYmxlLWFjdGl2ZVwiKX0pKX0sZS5wcm90b3R5cGUuZ2V0VGVtcGxhdGVSb3c9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5yb3dzLmZpbmQoKGZ1bmN0aW9uKHQpe3JldHVybiEwPT09dC5vcHRpb25zLmlzVGVtcGxhdGVSb3d9KSl9LGUucHJvdG90eXBlLmdldERpcnR5Um93cz1mdW5jdGlvbigpe3JldHVybiB0aGlzLnJvd3MuZmlsdGVyKChmdW5jdGlvbih0KXtyZXR1cm4hMD09PXQuaXNSb3dEaXJ0eX0pKX0sZS5wcm90b3R5cGUuZ2V0RGlydHlSZWNvcmRzPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXREaXJ0eVJvd3MoKTtpZigwPT09dC5sZW5ndGgpcmV0dXJuW107dmFyIGU9W107cmV0dXJuIHQuZm9yRWFjaCgoZnVuY3Rpb24odCxuKXtlLnB1c2godC5nZXRSb3dEYXRhKCkpfSkpLGV9LGUucHJvdG90eXBlLmdldEFsbFJlY29yZHM9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLnJvd3MuZmlsdGVyKChmdW5jdGlvbih0KXtyZXR1cm4hMCE9PXQub3B0aW9ucy5pc1RlbXBsYXRlUm93fSkpLGU9W107cmV0dXJuIHQuZm9yRWFjaCgoZnVuY3Rpb24odCl7ZS5wdXNoKHQuZ2V0Um93RGF0YSgpKX0pKSxlfSxlLnByb3RvdHlwZS5nZXRTZWxlY3RlZFJvdz1mdW5jdGlvbigpe3JldHVybiB0aGlzLnJvd3MuZmluZCgoZnVuY3Rpb24odCxlKXtyZXR1cm4hMD09PXQuaGFzQ2xhc3MoXCJ0YWJsZS1hY3RpdmVcIil9KSl9LGUucHJvdG90eXBlLm1hcmtEZWxldGVkPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXRTZWxlY3RlZFJvdygpO2lmKHQpe3ZhciBlPXRoaXMucm93U2libGluZ3ModCksbj1lW2UubGVuZ3RoLTFdO3QucmVtb3ZlQ2xhc3MoXCJ0YWJsZS1hY3RpdmVcIiksdC5pc1Jvd0RpcnR5PSEwLHQuY3NzPXtkaXNwbGF5Olwibm9uZVwifSx0LnZpc2libGU9ITE7dmFyIG89dC5yb3dDYXRlZ29yeTt0LnJvd0NhdGVnb3J5PVwiQURERURcIj09PW8/XCJBRERFRF9ERUxFVEVEXCI6XCJERUxFVEVEXCIsdGhpcy5ub3RpZnlMaXN0ZW5lcnMoem8uT05fR1JJRF9VUERBVEVELHtEYXRhU291cmNlTmFtZTp0Lm9wdGlvbnMuZGF0YVNvdXJjZU5hbWUsRXZlbnREYXRhOntFdmVudDp0fX0pLHRoaXMuZm9jdXNSb3cobil9fSxlLnByb3RvdHlwZS5yZW1vdmVSb3c9ZnVuY3Rpb24odCl7dC5lbGVtZW50LnJlbW92ZSgpO3ZhciBlPXRoaXMucm93cy5pbmRleE9mKHQpO2U+LTEmJnRoaXMucm93cy5zcGxpY2UoZSwxKX0sZX0oTmkpLFBpPWZ1bmN0aW9uKCl7dmFyIHQ9ZnVuY3Rpb24oZSxuKXtyZXR1cm4gdD1PYmplY3Quc2V0UHJvdG90eXBlT2Z8fHtfX3Byb3RvX186W119aW5zdGFuY2VvZiBBcnJheSYmZnVuY3Rpb24odCxlKXt0Ll9fcHJvdG9fXz1lfXx8ZnVuY3Rpb24odCxlKXtmb3IodmFyIG4gaW4gZSlPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxuKSYmKHRbbl09ZVtuXSl9LHQoZSxuKX07cmV0dXJuIGZ1bmN0aW9uKGUsbil7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgbiYmbnVsbCE9PW4pdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNsYXNzIGV4dGVuZHMgdmFsdWUgXCIrU3RyaW5nKG4pK1wiIGlzIG5vdCBhIGNvbnN0cnVjdG9yIG9yIG51bGxcIik7ZnVuY3Rpb24gbygpe3RoaXMuY29uc3RydWN0b3I9ZX10KGUsbiksZS5wcm90b3R5cGU9bnVsbD09PW4/T2JqZWN0LmNyZWF0ZShuKTooby5wcm90b3R5cGU9bi5wcm90b3R5cGUsbmV3IG8pfX0oKSxraT1mdW5jdGlvbih0LGUsbil7aWYobnx8Mj09PWFyZ3VtZW50cy5sZW5ndGgpZm9yKHZhciBvLGk9MCxyPWUubGVuZ3RoO2k8cjtpKyspIW8mJmkgaW4gZXx8KG98fChvPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGUsMCxpKSksb1tpXT1lW2ldKTtyZXR1cm4gdC5jb25jYXQob3x8QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoZSkpfSxqaT1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKGUpe3ZhciBuPXQuY2FsbCh0aGlzKXx8dGhpcztyZXR1cm4gbi5vcHRpb25zPWUsbi5oZWFkPW5ldyBBaSxuLmJvZHk9bmV3IExpLG4ucGFnaW5hdG9yPW5ldyB5aSh7ZGF0YVNvdXJjZU5hbWU6bi5vcHRpb25zLmRhdGFTb3VyY2UubmFtZSxuZXh0UGFnZUNhbGxiYWNrOmZ1bmN0aW9uKHQpe3JldHVybiBuLnBhZ2luYXRvckNhbGxiYWNrKHQpfX0pLG4uaHR0cENsaWVudD1uZXcgbWkobi5vcHRpb25zLmRhdGFTb3VyY2UubmFtZSxuLm9wdGlvbnMuY2FjaGVSZXNwb25zZXMpLG4uaW5maW5pdGVTY3JvbGxlcj1udWxsLG4uZ3JpZEFjdGlvbnM9bnVsbCxuLmRpc2NvdmVyYWJsZT0hMCxuLmNvbnRhaW5lckVsZW1lbnQ9ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobi5vcHRpb25zLmNvbnRhaW5lcklkKSxufXJldHVybiBQaShlLHQpLGUuQ3JlYXRlPWZ1bmN0aW9uKHQpe30sZS5wcm90b3R5cGUubm90aWZ5TGlzdGVuZXJzPWZ1bmN0aW9uKHQsZSl7Vm8uRW1pdCh0LHRoaXMsZSl9LGUucHJvdG90eXBlLnNldERpc2NvdmVyYWJsZT1mdW5jdGlvbigpe3FvLkFkZCh0aGlzKX0sT2JqZWN0LmRlZmluZVByb3BlcnR5KGUucHJvdG90eXBlLFwiZGF0YVNvdXJjZU5hbWVcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMub3B0aW9ucy5kYXRhU291cmNlLm5hbWV9LGVudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUucHJvdG90eXBlLFwiaXNSZWFkT25seVwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5vcHRpb25zLmlzUmVhZG9ubHl9LGVudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUucHJvdG90eXBlLFwiZGlydHlSZWNvcmRzXCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmJvZHkuZ2V0RGlydHlSZWNvcmRzKCl9LGVudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUucHJvdG90eXBlLFwiYWxsUmVjb3Jkc1wiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5ib2R5LmdldEFsbFJlY29yZHMoKX0sZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITB9KSxlLnByb3RvdHlwZS5wYWdpbmF0b3JDYWxsYmFjaz1mdW5jdGlvbih0KXt0aGlzLmZldGNoR3JpZFBhZ2UodCl9LGUucHJvdG90eXBlLmFwcGVuZEhlYWRlcj1mdW5jdGlvbigpe3RoaXMuZWxlbWVudC5hcHBlbmQodGhpcy5oZWFkLmVsZW1lbnQpfSxlLnByb3RvdHlwZS5hcHBlbmRCb2R5PWZ1bmN0aW9uKCl7dGhpcy5lbGVtZW50LmFwcGVuZCh0aGlzLmJvZHkuZWxlbWVudCl9LGUucHJvdG90eXBlLmdldEdyaWRTZXR0aW5ncz1mdW5jdGlvbih0KXt0cnl7cmV0dXJuIEZvLmdldEpTT04odCl9Y2F0Y2godCl7cmV0dXJuIHZvaWQgY29uc29sZS5sb2codCl9fSxlLnByb3RvdHlwZS5SZW5kZXI9ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3RoaXMuZWxlbWVudD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwidGFibGVcIiksdGhpcy5lbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJ0YWJsZVwiLFwidGFibGUtYm9yZGVyZWRcIixcInRhYmxlLWhvdmVyXCIsXCJ0YWJsZS1zbVwiLFwicmVzaXphYmxlXCIsXCJuYXZUYWJsZVwiLFwibm93cmFwXCIsXCJicy10YWJsZVwiKSx0aGlzLmlkPXRoaXMub3B0aW9ucy5ncmlkSWQsdGhpcy5wcm9wKFwiZGF0YS1kYXRhc291cmNlXCIsdGhpcy5vcHRpb25zLmRhdGFTb3VyY2UubmFtZSk7dmFyIGU9dGhpcy5nZXRHcmlkU2V0dGluZ3ModGhpcy5vcHRpb25zLmdyaWRJZCl8fHt9O3RoaXMuY3NzPXt3aWR0aDpcImluaGVyaXRcIn07dmFyIG49bmV3IFRpKHtkYXRhU291cmNlTmFtZTp0aGlzLm9wdGlvbnMuZGF0YVNvdXJjZS5uYW1lLGdyaWRJZDp0aGlzLm9wdGlvbnMuZ3JpZElkLGdyaWRIZWFkZXI6ITB9KSxvPW5ldyBUaSh7aXNUZW1wbGF0ZVJvdzohMCxkYXRhU291cmNlTmFtZTp0aGlzLm9wdGlvbnMuZGF0YVNvdXJjZS5uYW1lLGdyaWRJZDp0aGlzLm9wdGlvbnMuZ3JpZElkLGNvbnRhaW5lcklkOnRoaXMub3B0aW9ucy5jb250YWluZXJJZH0pLGk9dGhpcy5hcHBseUNvbE9yZGVyaW5nKGUpLHI9bmV3IHBpKHt9LCEwKSxzPW5ldyBPaSxhPW5ldyBwaTtpZihhLmFwcGVuZChzKSxuLmFkZENlbGwociksby5hZGRDZWxsKGEpLGkuZm9yRWFjaCgoZnVuY3Rpb24oaSl7aWYoaS5Qcm9wTmFtZSl7dmFyIHI9ZVtpLlByb3BOYW1lXSxzPW4uY3JlYXRlSGVhZGVyRm9yKGkpLGE9by5jcmVhdGVJbnB1dEZvcihpLHQuaXNSZWFkT25seSk7dC5hZGRTb3J0aW5nKHMpLHQuYXBwbHlDb2xTZXR0aW5ncyhzLHIpLHQuYXBwbHlDb2xTZXR0aW5ncyhhLHIpLG4uYWRkQ2VsbChzKSxvLmFkZENlbGwoYSl9fSkpLHRoaXMuaGVhZC5hZGRSb3cobiksdGhpcy5ib2R5LmFkZFJvdyhvKSx0aGlzLmFwcGVuZEFjdGlvbnMoKSx0aGlzLmFwcGVuZEhlYWRlcigpLHRoaXMuYXBwZW5kQm9keSgpLHRoaXMuY29udGFpbmVyRWxlbWVudC5hcHBlbmRDaGlsZCh0aGlzLmVsZW1lbnQpLHRoaXMuYWRkSW5maW5pdGVTY3JvbGwoKSx0aGlzLm9wdGlvbnMuZGF0YVNvdXJjZS5kYXRhKXt2YXIgYz10aGlzLm9wdGlvbnMuZGF0YVNvdXJjZS5kYXRhLmluaXREYXRhLGw9dGhpcy5vcHRpb25zLmRhdGFTb3VyY2UuZGF0YS5tZXRhRGF0YSx1PXtEYXRhU291cmNlTmFtZTp0aGlzLm9wdGlvbnMuZGF0YVNvdXJjZS5uYW1lLEV2ZW50RGF0YTp7RGF0YTpjLE1ldGFEYXRhOmx9fTt0aGlzLm5vdGlmeUxpc3RlbmVycyh6by5PTl9GRVRDSF9HUklEX1JFQ09SRCx1KX1yZXR1cm4gdGhpcy5ub3RpZnlMaXN0ZW5lcnMoem8uT05fR1JJRF9EQVRBX0JPVU5ELHtEYXRhU291cmNlTmFtZTp0aGlzLm9wdGlvbnMuZGF0YVNvdXJjZS5uYW1lLEV2ZW50RGF0YTp7fX0pLCEwPT09dGhpcy5kaXNjb3ZlcmFibGUmJnRoaXMuc2V0RGlzY292ZXJhYmxlKCksdGhpc30sZS5wcm90b3R5cGUuYWRkSW5maW5pdGVTY3JvbGw9ZnVuY3Rpb24oKXt2YXIgdD10aGlzOyEwPT09dGhpcy5vcHRpb25zLmVuYWJsZUluZmluaXRlU2Nyb2xsJiYodGhpcy5pbmZpbml0ZVNjcm9sbGVyPW5ldyBFaSh7Z3JpZEVsZW1lbnQ6dGhpcy5lbGVtZW50LGh0dHBDbGllbnQ6dGhpcy5odHRwQ2xpZW50fSksdGhpcy5pbmZpbml0ZVNjcm9sbGVyLm5leHRQYWdlQ2FsbGJhY2s9ZnVuY3Rpb24oZSl7cmV0dXJuIHQucGFnaW5hdG9yQ2FsbGJhY2soZSl9LHRoaXMuaW5maW5pdGVTY3JvbGxlci5lbmFibGUoKSl9LGUucHJvdG90eXBlLmFwcGVuZEFjdGlvbnM9ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3RoaXMuZ3JpZEFjdGlvbnM9bmV3IENpLHRoaXMuZ3JpZEFjdGlvbnMuZGF0YVNvdXJjZU5hbWU9dGhpcy5vcHRpb25zLmRhdGFTb3VyY2UubmFtZSx0aGlzLmdyaWRBY3Rpb25zLmFkZE5ld1JlY29yZEFjdGlvbigoZnVuY3Rpb24oZSl7cmV0dXJuIHQuYWRkRW1wdHlSb3coKX0pKS5hZGREZWxldGVBY3Rpb24oKGZ1bmN0aW9uKGUpe3JldHVybiB0LmJvZHkubWFya0RlbGV0ZWQoKX0pKS5hZGRHcmlkU2V0dGluZ3NBY3Rpb24oKSx0aGlzLmNvbnRhaW5lckVsZW1lbnQuYXBwZW5kQ2hpbGQodGhpcy5ncmlkQWN0aW9ucy5lbGVtZW50KX0sZS5wcm90b3R5cGUuYWRkU29ydGluZz1mdW5jdGlvbih0KXt2YXIgZT10aGlzO3QuYWRkRXZlbnRIYW5kbGVyKFwiY2xpY2tcIiwoZnVuY3Rpb24obil7dmFyIG89ITA7dC5oYXNDbGFzcyhcInNvcnRpbmdfYXNjXCIpPyh0LnJlbW92ZUNsYXNzKFwic29ydGluZ19hc2NcIikuYWRkQ2xhc3MoXCJzb3J0aW5nX2Rlc2NcIiksbz0hMSk6dC5yZW1vdmVDbGFzcyhcInNvcnRpbmdfZGVzY1wiKS5hZGRDbGFzcyhcInNvcnRpbmdfYXNjXCIpLHQuc2libGluZ3MoXCJ0aFwiKS5mb3JFYWNoKChmdW5jdGlvbih0KXt0LmNsYXNzTGlzdC5yZW1vdmUoXCJzb3J0aW5nX2FzY1wiLFwic29ydGluZ19kZXNjXCIpfSkpO3ZhciBpPXtFdmVudERhdGE6e0V2ZW50Om4sUHJvcE5hbWU6dC5vcHRpb25zLlByb3BOYW1lLEFzYzpvfSxEYXRhU291cmNlTmFtZTplLm9wdGlvbnMuZGF0YVNvdXJjZS5uYW1lfTtlLm5vdGlmeUxpc3RlbmVycyh6by5PTl9TT1JUSU5HX1JFUVVFU1RFRCxpKX0pKX0sZS5wcm90b3R5cGUuY2xlYXJHcmlkPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0aGlzLmZpbmRFbGVtZW50cyhcIi5ncmlkLXJvd1wiKS5mb3JFYWNoKChmdW5jdGlvbihlKXtyZXR1cm4gdC5yZW1vdmVFbGVtZW50KGUpfSkpO3ZhciBlPXRoaXMuYm9keS5nZXRUZW1wbGF0ZVJvdygpO3RoaXMuYm9keS5yb3dzPVtlXX0sZS5wcm90b3R5cGUuYXBwbHlDb2xTZXR0aW5ncz1mdW5jdGlvbih0LGUpe2UmJiF0aGlzLmlzRW1wdHlPYmooZSkmJighMCE9PWUuVmlzaWJsZSYmKHQudmlzaWJsZT0hMSksZS5XaWR0aCYmKHQuY3NzPXtwb3NpdGlvbjpcInJlbGF0aXZlXCIsd2lkdGg6ZS5XaWR0aH0pKX0sZS5wcm90b3R5cGUuYXBwbHlDb2xPcmRlcmluZz1mdW5jdGlvbih0KXtpZighdHx8dGhpcy5pc0VtcHR5T2JqKHQpKXJldHVybiB0aGlzLm9wdGlvbnMuY29sRGVmaW5pdGlvbjt2YXIgZT1bXTtyZXR1cm4gdGhpcy5vcHRpb25zLmNvbERlZmluaXRpb24uZm9yRWFjaCgoZnVuY3Rpb24obixvKXt2YXIgaT10W24uUHJvcE5hbWVdO2kmJihlW2kuUG9zaXRpb25dPW4pfSkpLGUubGVuZ3RoIT09dGhpcy5vcHRpb25zLmNvbERlZmluaXRpb24ubGVuZ3RoP3RoaXMub3B0aW9ucy5jb2xEZWZpbml0aW9uOmV9LGUucHJvdG90eXBlLmJpbmREYXRhU291cmNlPWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcztpZih0JiYhKHQubGVuZ3RoPD0wKSl7dmFyIG89dDshMCE9PXRoaXMub3B0aW9ucy5kYXRhU291cmNlLmlzUmVtb3RlJiYobz10aGlzLm9wdGlvbnMuZGF0YVNvdXJjZS5nZXRQYWdlT2ZmbGluZUNCKGUucGFnZUluZGV4LHRoaXMub3B0aW9ucy5kYXRhU291cmNlLmRhdGEuaW5pdERhdGEsZSkpO3ZhciBpPW51bGw7by5mb3JFYWNoKChmdW5jdGlvbih0LGUpe3ZhciBvPW4uYWRkTmV3Um93KHQsITApO28ucm93Q2F0ZWdvcnk9XCJQUkVTVElORVwiLGk9b30pKSwhMCE9PXRoaXMub3B0aW9ucy5lbmFibGVJbmZpbml0ZVNjcm9sbD90aGlzLmJpbmRQYWdpbmF0b3IoZSk6KHRoaXMuaW5maW5pdGVTY3JvbGxlci5pbml0TWV0YURhdGE9ZSx0aGlzLmluZmluaXRlU2Nyb2xsZXIuaW5pdERhdGE9byxpJiYodGhpcy5pbmZpbml0ZVNjcm9sbGVyLnVub2JzZXJ2ZSgpLHRoaXMuaW5maW5pdGVTY3JvbGxlci5vYnNlcnZlKGkuZWxlbWVudCkpKX19LGUucHJvdG90eXBlLmJpbmRQYWdpbmF0b3I9ZnVuY3Rpb24odCl7dm9pZCAwPT09dCYmKHQ9bmV3IGhpKSx0aGlzLnBhZ2luYXRvci5lbGVtZW50JiZ0aGlzLnBhZ2luYXRvci5vcHRpb25zLm1ldGFEYXRhLnRvdGFsUmVjb3Jkcz09PXQudG90YWxSZWNvcmRzfHwodGhpcy5wYWdpbmF0b3Iub3B0aW9ucy5tZXRhRGF0YT10LHRoaXMucGFnaW5hdG9yLnJlbmRlcigpLHRoaXMuY29udGFpbmVyRWxlbWVudC5hcHBlbmRDaGlsZCh0aGlzLnBhZ2luYXRvci5lbGVtZW50KSl9LGUucHJvdG90eXBlLmFkZE5ld1Jvdz1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMsbz10aGlzLmJvZHkuZ2V0TmV4dFJvd0luZGV4KCksaT10aGlzLmJvZHkuZ2V0VGVtcGxhdGVSb3coKS5jbG9uZSgpO2kub3B0aW9ucy5pc1RlbXBsYXRlUm93PSExLGkuY3NzPXtkaXNwbGF5OlwidGFibGUtcm93XCJ9LGkudmlzaWJsZT0hMDt2YXIgcj10aGlzO2kuZ2V0SW5wdXRzKCkuZm9yRWFjaCgoZnVuY3Rpb24obixzKXt2YXIgYT1uLGM9YS5pZDthLmlkPWMrXCJfXCIrbzt2YXIgbD1hLm9wdGlvbnMuTW9kZWxOYW1lLHU9dFtsXTtpZihcImRhdGVcIj09PWEub3B0aW9ucy5JbnB1dFR5cGUmJnUpe3ZhciBkPW5ldyBEYXRlKHUpO2EudmFsPXIudG9EYXRlRGlzcGxheUZvcm1hdChkKX1lbHNlIGEgaW5zdGFuY2VvZiBRbyYmKFwidHJ1ZVwiPT09dXx8XCJUcnVlXCI9PT11fHwhMD09PXUpP2EudmFsPSEwOnZvaWQgMCE9PXUmJihhLnZhbD11KTshMCE9PWUmJihhLmRpc2FibGVkPSExLGEucmVhZG9ubHk9ITEpLGEuZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiY2hhbmdlXCIsKGZ1bmN0aW9uKHQpe2kuaXNSb3dEaXJ0eT0hMCxcIkFEREVEXCIhPT1pLnJvd0NhdGVnb3J5JiYoaS5yb3dDYXRlZ29yeT1cIlVQREFURURcIiksYS5yZW1vdmVDbGFzcyhcImlzLWludmFsaWRcIikucHJvcChcInRpdGxlXCIsXCJcIik7dmFyIGU9Zm8uZ2V0SW5zdGFuY2UodC50YXJnZXQpO2UmJmUuZGlzcG9zZSgpO3ZhciBuPWkuZ2V0Um93RGF0YUV4dCgpLG89ci5vcHRpb25zLmRhdGFTb3VyY2UubmFtZSxzPXtFdmVudERhdGE6e0V2ZW50OnQsR3JpZDpyfSxEYXRhU291cmNlTmFtZTpvfSxjPXtFdmVudERhdGE6e0V2ZW50OnQsUm93Om59LERhdGFTb3VyY2VOYW1lOm99LGw9e0V2ZW50RGF0YTp7RXZlbnQ6dCxSb3c6bixGaWVsZDphfSxEYXRhU291cmNlTmFtZTpvfTtyLm5vdGlmeUxpc3RlbmVycyh6by5PTl9HUklEX1VQREFURUQscyksci5ub3RpZnlMaXN0ZW5lcnMoem8uT05fRklFTERfVVBEQVRFRCxsKSxyLm5vdGlmeUxpc3RlbmVycyh6by5PTl9ST1dfVVBEQVRFRCxjKX0pKSxhLmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImZvY3VzXCIsKGZ1bmN0aW9uKHQpe3IuYm9keS5mb2N1c1JvdyhpKX0pKX0pKSxpLmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsKGZ1bmN0aW9uKHQpe3IuYm9keS5mb2N1c1JvdyhpKX0pKSx0aGlzLmJvZHkuYWRkUm93KGkpO3ZhciBzPWkuZ2V0VmlzaWJsZUlucHV0cygpO3JldHVybiBzLmxlbmd0aD4wJiZzW3MubGVuZ3RoLTFdLmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwoZnVuY3Rpb24odCl7cmV0dXJuIG4ub25JbnB1dEtleURvd259KSksaX0sZS5wcm90b3R5cGUudG9EYXRlRGlzcGxheUZvcm1hdD1mdW5jdGlvbih0KXt2YXIgZT10LmdldERhdGUoKSxuPXQuZ2V0TW9udGgoKSsxO3JldHVybiB0LmdldEZ1bGxZZWFyKCkrXCItXCIrKG48MTA/XCIwXCI6XCJcIikrbitcIi1cIisoZTwxMD9cIjBcIjpcIlwiKStlfSxlLnByb3RvdHlwZS50b1RpbWVEaXNwbGF5Rm9ybWF0PWZ1bmN0aW9uKHQpe3ZhciBlPXQuZ2V0SG91cnMoKSxuPXQuZ2V0TWludXRlcygpO3JldHVybihlPDEwP1wiMFwiOlwiXCIpK2UrXCI6XCIrKG48MTA/XCIwXCI6XCJcIikrbn0sZS5wcm90b3R5cGUub25JbnB1dEtleURvd249ZnVuY3Rpb24odCl7aWYoOT09PXQud2hpY2gmJiEwIT09dC5zaGlmdEtleSl7dmFyIGU9dGhpcy5ib2R5LmdldFZpc2libGVSb3dzKCk7aWYoIShlLmxlbmd0aDw9MCkpe3ZhciBuPWVbZS5sZW5ndGgtMV0ucm93SW5kZXgsbz10LnRhcmdldC5jbG9zZXN0KFwidHJcIik7byYmbj09PXBhcnNlSW50KG8uZ2V0QXR0cmlidXRlKFwiZGF0YS1yb3dpbmRleFwiKSkmJnRoaXMuYWRkRW1wdHlSb3coKX19fSxlLnByb3RvdHlwZS5hZGRFbXB0eVJvdz1mdW5jdGlvbigpe3ZhciB0PXRoaXMuYWRkTmV3Um93KHRoaXMuY3JlYXRlRW1wdHlSb3dEYXRhKCksITEpLGU9dC5nZXRWaXNpYmxlSW5wdXRzKCk7ZS5sZW5ndGg+MCYmZVswXS5mb2N1cygpLHQucm93Q2F0ZWdvcnk9XCJBRERFRFwiLHQuaXNSb3dEaXJ0eT0hMDt2YXIgbj17RXZlbnREYXRhOntHcmlkOnRoaXMsRXZlbnQ6dH0sRGF0YVNvdXJjZU5hbWU6dGhpcy5vcHRpb25zLmRhdGFTb3VyY2UubmFtZX07cmV0dXJuIHRoaXMubm90aWZ5TGlzdGVuZXJzKHpvLk9OX0dSSURfVVBEQVRFRCxuKSwhMD09PXRoaXMub3B0aW9ucy5lbmFibGVJbmZpbml0ZVNjcm9sbCYmKHRoaXMuaW5maW5pdGVTY3JvbGxlci51bm9ic2VydmUoKSx0aGlzLmluZmluaXRlU2Nyb2xsZXIub2JzZXJ2ZSh0LmVsZW1lbnQpKSx0fSxlLnByb3RvdHlwZS5jcmVhdGVFbXB0eVJvd0RhdGE9ZnVuY3Rpb24oKXt2YXIgdD17fTtyZXR1cm4gdGhpcy5vcHRpb25zLmNvbERlZmluaXRpb24uZm9yRWFjaCgoZnVuY3Rpb24oZSxuKXt0W2UuUHJvcE5hbWVdPXZvaWQgMH0pKSx0fSxlLnByb3RvdHlwZS5vbkhlYWRlck5leHQ9ZnVuY3Rpb24odCxlKXt0JiZ0LkV2ZW50RGF0YSYmKHRoaXMucmVzZXRTb3J0aW5nKCksdGhpcy5jbGVhckdyaWQoKSx0aGlzLnBhZ2luYXRvci5jbGVhcigpLCEwPT09ZSYmKHRoaXMuZmV0Y2hHcmlkUGFnZSgxKSwhMD09PXRoaXMub3B0aW9ucy5lbmFibGVJbmZpbml0ZVNjcm9sbCYmKHRoaXMuaW5maW5pdGVTY3JvbGxlci5jdXJyZW50UGFnZT0xKSkpfSxlLnByb3RvdHlwZS5mZXRjaEdyaWRQYWdlPWZ1bmN0aW9uKHQpe2lmKCEwPT09dGhpcy5vcHRpb25zLmRhdGFTb3VyY2UuaXNSZW1vdGUpe3ZhciBlPXRoaXMub3B0aW9ucy5kYXRhU291cmNlLnVybCh0KTtpZighZSlyZXR1cm47dGhpcy5odHRwQ2xpZW50LmdldCh7dXJsOmV9KX1lbHNle3ZhciBuPXRoaXMub3B0aW9ucy5kYXRhU291cmNlLmRhdGEuaW5pdERhdGEsbz10aGlzLm9wdGlvbnMuZGF0YVNvdXJjZS5kYXRhLm1ldGFEYXRhLGk9e0RhdGFTb3VyY2VOYW1lOnRoaXMub3B0aW9ucy5kYXRhU291cmNlLm5hbWUsRXZlbnREYXRhOntEYXRhOm4sTWV0YURhdGE6bmV3IGhpKHQsby5wYWdlU2l6ZSxvLnRvdGFsUmVjb3Jkcyl9fTt0aGlzLm5vdGlmeUxpc3RlbmVycyh6by5PTl9GRVRDSF9HUklEX1JFQ09SRCxpKX19LGUucHJvdG90eXBlLm9uU2F2ZVJlY29yZD1mdW5jdGlvbih0KXt2YXIgZT10aGlzO3RoaXMuYm9keS5yb3dzLmZpbHRlcigoZnVuY3Rpb24odCl7cmV0dXJuXCJERUxFVEVEXCI9PT10LnJvd0NhdGVnb3J5fHxcIkFEREVEX0RFTEVURURcIj09PXQucm93Q2F0ZWdvcnl9KSkuZm9yRWFjaCgoZnVuY3Rpb24odCl7cmV0dXJuIGUuYm9keS5yZW1vdmVSb3codCl9KSksdGhpcy5ib2R5LnJvd3MuZm9yRWFjaCgoZnVuY3Rpb24odCl7dC5yb3dDYXRlZ29yeT1cIlBSRVNUSU5FXCIsdC5nZXRJbnB1dHMoKS5maWx0ZXIoKGZ1bmN0aW9uKHQpe3JldHVybiB0LmlzS2V5fSkpLmZvckVhY2goKGZ1bmN0aW9uKHQpe3QuZGlzYWJsZWQ9ITB9KSl9KSl9LGUucHJvdG90eXBlLm9uU2F2ZUVycm9yPWZ1bmN0aW9uKHQpe2lmKHQmJnQuRXZlbnREYXRhJiZ0LkV2ZW50RGF0YS5FdmVudC5yZXNwb25zZUpTT04pZm9yKHZhciBlPXQuRXZlbnREYXRhLkV2ZW50LnJlc3BvbnNlSlNPTixuPXRoaXMub3B0aW9ucy5kYXRhU291cmNlLm5hbWUsbz10aGlzLmJvZHkuZ2V0RGlydHlSb3dzKCksaT0wO2k8by5sZW5ndGg7aSsrKXt2YXIgcj1lW24rXCJbXCIraStcIl1cIl07aWYociYmci5sZW5ndGg+MCl7dmFyIHM9clswXSxhPWksYz10aGlzLmdldFJvd0J5SW5kZXgocGFyc2VJbnQocykpO2lmKCFjKWNvbnRpbnVlO3RoaXMub3B0aW9ucy5jb2xEZWZpbml0aW9uLmZvckVhY2goKGZ1bmN0aW9uKHQsbyl7dmFyIGk9dC5Qcm9wTmFtZS50b1Bhc2NhbENhc2VKc29uKCkscj1lW24rXCJbXCIrYStcIl0uXCIraV07aWYociYmci5sZW5ndGg+MCl7dmFyIHM9Yy5nZXRJbnB1dHMoKS5maW5kKChmdW5jdGlvbihlKXtyZXR1cm4gZS5vcHRpb25zLk1vZGVsTmFtZT09PXQuUHJvcE5hbWV9KSk7aWYocyl7cy5hZGRDbGFzcyhcImlzLWludmFsaWRcIik7dmFyIGw9XCJcIjtBcnJheS5mcm9tKHIpLmZvckVhY2goKGZ1bmN0aW9uKHQpe2wrPXQrXCIgXCJ9KSkscy5wcm9wKFwidGl0bGVcIixsKSxuZXcgZm8oc1swXSx7Y3VzdG9tQ2xhc3M6XCJ0b29sdGlwLWVycm9yXCJ9KX19fSkpfX19LGUucHJvdG90eXBlLmdldFJvd0J5SW5kZXg9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuYm9keS5yb3dzLmZpbmQoKGZ1bmN0aW9uKGUsbil7cmV0dXJuIGUucm93SW5kZXg9PT10fSkpfSxlLnByb3RvdHlwZS5zb3J0VGFibGU9ZnVuY3Rpb24odCxlKXt2YXIgbixvLGk9dGhpcyxyPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQuY2VsbHNbZV0uZ2V0Q2VsbFRleHQoKX0scz10aGlzLm9wdGlvbnMuZGF0YVNvdXJjZS5uYW1lO3RoaXMuYm9keS5yb3dzLnNvcnQoKG49dGhpcy5oZWFkLmdldEdyaWRUaXRsZXNSb3coKS5jZWxscy5pbmRleE9mKHQpLG89ZT0hZSxmdW5jdGlvbih0LGUpe3JldHVybiBpPXIobz90OmUsbikscz1yKG8/ZTp0LG4pLGkudG9TdHJpbmcoKS5sb2NhbGVDb21wYXJlKHMudG9TdHJpbmcoKSk7dmFyIGksc30pKS5mb3JFYWNoKChmdW5jdGlvbih0KXtyZXR1cm4gaS5ib2R5LmFwcGVuZCh0LCExKX0pKTt2YXIgYT17RXZlbnREYXRhOntDdXJyZW50Q29sOnQsQWN0aW9uOlVvLkNPTF9TT1JUSU5HfSxEYXRhU291cmNlTmFtZTpzfSxjPXtFdmVudERhdGE6e0N1cnJlbnRDb2w6dCxBc2M6ZX0sRGF0YVNvdXJjZU5hbWU6c307dGhpcy5ub3RpZnlMaXN0ZW5lcnMoem8uT05fQ09MU19SRU9SREVSRUQsYyksdGhpcy5ub3RpZnlMaXN0ZW5lcnMoem8uT05fR1JJRF9DT05GSUdfVVBEQVRFRCxhKX0sZS5wcm90b3R5cGUub25Tb3J0aW5nUmVxdWVzdD1mdW5jdGlvbih0KXt2YXIgZT10LkV2ZW50RGF0YS5FdmVudC50YXJnZXQ7aWYoXCJ0aFwiIT09ZS50YWdOYW1lLnRvTG93ZXJDYXNlKCkpe3ZhciBuPWUuY2xvc2VzdChcInRoXCIpO2lmKCFuKXJldHVybjtlPW59dmFyIG89dGhpcy5oZWFkLmdldEdyaWRUaXRsZXNSb3coKS5jZWxscy5maW5kKChmdW5jdGlvbih0LG4pe3JldHVybiB0LmVsZW1lbnQ9PT1lfSkpO28mJnRoaXMuc29ydFRhYmxlKG8sdC5FdmVudERhdGEuQXNjKX0sZS5wcm90b3R5cGUucmVzZXRTb3J0aW5nPWZ1bmN0aW9uKCl7dGhpcy5oZWFkLnJvd3MuZm9yRWFjaCgoZnVuY3Rpb24odCxlKXsodC5oYXNDbGFzcyhcInNvcnRpbmdfZGVzY1wiKXx8dC5oYXNDbGFzcyhcInNvcnRpbmdfYXNjXCIpKSYmdC5yZW1vdmVDbGFzcyhcInNvcnRpbmdfYXNjXCIpLnJlbW92ZUNsYXNzKFwic29ydGluZ19kZXNjXCIpfSkpfSxlLnByb3RvdHlwZS5vbkNvbHNSZW9yZGVyZWQ9ZnVuY3Rpb24odCl7dmFyIGU9dGhpczt0aGlzLmJvZHkucm93cy5mb3JFYWNoKChmdW5jdGlvbih0LG4pe3QuZ2V0SW5wdXRzKCkuZm9yRWFjaCgoZnVuY3Rpb24odCl7dC5lbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsZS5vbklucHV0S2V5RG93bil9KSk7dmFyIG89dC5nZXRWaXNpYmxlSW5wdXRzKCk7by5sZW5ndGg8PTB8fG9bby5sZW5ndGgtMV0uZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLGUub25JbnB1dEtleURvd24pfSkpfSxlLnByb3RvdHlwZS5hZGRIYW5kbGVyPWZ1bmN0aW9uKHQsZSxuKXt2b2lkIDA9PT1uJiYobj0hMSk7dmFyIG89e0tleTp0aGlzLm9wdGlvbnMuZ3JpZElkLEV2ZW50TmFtZTp0LENhbGxiYWNrOmUsRGF0YVNvdXJjZU5hbWU6dGhpcy5vcHRpb25zLmRhdGFTb3VyY2UubmFtZSxWZXJpZnlEYXRhU291cmNlTmFtZTpufTtWby5TdWJzY3JpYmUobyl9LGUucHJvdG90eXBlLnJlbW92ZUhhbmRsZXI9ZnVuY3Rpb24odCl7dmFyIGU9e0tleTp0aGlzLm9wdGlvbnMuZ3JpZElkLEV2ZW50TmFtZTp0LERhdGFTb3VyY2VOYW1lOnRoaXMub3B0aW9ucy5kYXRhU291cmNlLm5hbWV9O1ZvLlVuc3Vic2NyaWJlKGUpfSxlLnByb3RvdHlwZS5vbkZldGNoRGF0YT1mdW5jdGlvbih0KXshMCE9PXRoaXMub3B0aW9ucy5lbmFibGVJbmZpbml0ZVNjcm9sbCYmdGhpcy5jbGVhckdyaWQoKTt2YXIgZT10LkV2ZW50RGF0YS5NZXRhRGF0YTtlJiZ0aGlzLmJpbmREYXRhU291cmNlKHQuRXZlbnREYXRhLkRhdGEsbmV3IGhpKGUucGFnZUluZGV4LGUucGFnZVNpemUsZS50b3RhbFJlY29yZHMpKX0sZS5wcm90b3R5cGUub25GZXRjaERhdGFFcnJvcj1mdW5jdGlvbih0KXt9LGUucHJvdG90eXBlLlJlZ2lzdGVyQ2FsbGJhY2tzPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7cmV0dXJuIHZvaWQgMD09PXQmJih0PSEwKSx0aGlzLm9wdGlvbnMuZ3JpZElkLHRoaXMub3B0aW9ucy5kYXRhU291cmNlLm5hbWUsdGhpcy5hZGRIYW5kbGVyKHpvLkdSSURfREFUQSwoZnVuY3Rpb24odCxuKXtyZXR1cm4gZS5ib2R5LmdldERpcnR5UmVjb3JkcygpfSkpLHRoaXMuYWRkSGFuZGxlcih6by5PTl9BRERfUkVDT1JELChmdW5jdGlvbih0LG4pe3JldHVybiBlLm9uSGVhZGVyTmV4dChuLCExKX0pKSx0aGlzLmFkZEhhbmRsZXIoem8uT05fRkVUQ0hfUkVDT1JELChmdW5jdGlvbih0LG4pe3JldHVybiBlLm9uSGVhZGVyTmV4dChuLCEwKX0pKSx0aGlzLmFkZEhhbmRsZXIoem8uT05fU0FWRV9SRUNPUkQsKGZ1bmN0aW9uKHQsbil7cmV0dXJuIGUub25TYXZlUmVjb3JkKG4pfSkpLHRoaXMuYWRkSGFuZGxlcih6by5PTl9TQVZFX0VSUk9SLChmdW5jdGlvbih0LG4pe3JldHVybiBlLm9uU2F2ZUVycm9yKG4pfSkpLHRoaXMuYWRkSGFuZGxlcih6by5PTl9TT1JUSU5HX1JFUVVFU1RFRCwoZnVuY3Rpb24odCxuKXtyZXR1cm4gZS5vblNvcnRpbmdSZXF1ZXN0KG4pfSksdCksdGhpcy5hZGRIYW5kbGVyKHpvLk9OX0NPTFNfUkVPUkRFUkVELChmdW5jdGlvbih0LG4pe3JldHVybiBlLm9uQ29sc1Jlb3JkZXJlZChuKX0pLHQpLHRoaXMuYWRkSGFuZGxlcih6by5PTl9HUklEX0NPTkZJR19VUERBVEVELChmdW5jdGlvbih0LG4pe3JldHVybiBlLm9uR3JpZENvbmZpZ3VyYXRpb25DaGFuZ2VkKG4pfSksdCksdGhpcy5hZGRIYW5kbGVyKHpvLk9OX0dSSURfREFUQV9CT1VORCwoZnVuY3Rpb24odCxuKXtyZXR1cm4gZS5vbkdyaWREYXRhQm91bmQobil9KSx0KSx0aGlzLmFkZEhhbmRsZXIoem8uT05fRkVUQ0hfR1JJRF9SRUNPUkQsKGZ1bmN0aW9uKHQsbil7cmV0dXJuIGUub25GZXRjaERhdGEobil9KSx0KSx0aGlzLmFkZEhhbmRsZXIoem8uT05fRkVUQ0hfR1JJRF9SRUNPUkRfRVJST1IsKGZ1bmN0aW9uKHQsbil7cmV0dXJuIGUub25GZXRjaERhdGFFcnJvcihuKX0pLHQpLHRoaXN9LGUucHJvdG90eXBlLmNvbmZpZ3VyYWJsZUdyaWQ9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dGhpcy5oZWFkLmdldEdyaWRUaXRsZXNSb3coKS5jZWxscyxuPXRoaXMub3B0aW9ucy5kYXRhU291cmNlLm5hbWUsbz0nXFxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm1vZGFsIGZhZGVcIiBpZD1cInN0YXRpY0JhY2tkcm9wXycuY29uY2F0KG4sJ1wiIGRhdGEtYnMtYmFja2Ryb3A9XCJzdGF0aWNcIiBkYXRhLWJzLWtleWJvYXJkPVwiZmFsc2VcIiB0YWJpbmRleD1cIi0xXCJcXG4gICAgICAgICAgICBhcmlhLWxhYmVsbGVkYnk9XCJzdGF0aWNCYWNrZHJvcExhYmVsXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+XFxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtb2RhbC1kaWFsb2cgbW9kYWwtZGlhbG9nLXNjcm9sbGFibGVcIj5cXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtb2RhbC1jb250ZW50XCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm1vZGFsLWhlYWRlclwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDUgY2xhc3M9XCJtb2RhbC10aXRsZVwiIGlkPVwic3RhdGljQmFja2Ryb3BMYWJlbF8nKS5jb25jYXQobiwnXCI+Q29uZmlndXJlIGNvbHVtbnM8L2g1PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzcz1cImJ0bi1jbG9zZVwiIGRhdGEtYnMtZGlzbWlzcz1cIm1vZGFsXCIgYXJpYS1sYWJlbD1cIkNsb3NlXCI+PC9idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm1vZGFsLWJvZHlcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsIGNsYXNzPVwibGlzdC1ncm91cCBncmlkLWNvbmZpZy1jb2xzXCI+XFxuXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm1vZGFsLWZvb3RlclwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzcz1cImJ0biBidG4tcHJpbWFyeVwiIGRhdGEtYnMtZGlzbWlzcz1cIm1vZGFsXCI+T2s8L2J1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICA8L2Rpdj4nKSxpPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7aS5jbGFzc0xpc3QuYWRkKFwic2V0dGluZ3MtbWVudVwiLFwiZ3JpZC1jb25maWctdGVtcGxhdGVcIiksaS5pbm5lckhUTUw9byx0aGlzLmNvbnRhaW5lckVsZW1lbnQuYXBwZW5kKGkpO3ZhciByPWkucXVlcnlTZWxlY3RvcihcIi5ncmlkLWNvbmZpZy1jb2xzXCIpO2UuZm9yRWFjaCgoZnVuY3Rpb24oZSxvKXt2YXIgaT1lLm9wdGlvbnMuUHJvcE5hbWU7aWYoaSl7dmFyIHM9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxpXCIpO3MuY2xhc3NMaXN0LmFkZChcImxpc3QtZ3JvdXAtaXRlbVwiKTt2YXIgYT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7YS50eXBlPVwiY2hlY2tib3hcIixhLnZhbHVlPVwiXCIsYS5jbGFzc0xpc3QuYWRkKFwiZm9ybS1jaGVjay1pbnB1dFwiLFwibWUtMVwiKTt2YXIgYz1cImNvbF9jb25maWdfY2hrX1wiK2k7YS5zZXRBdHRyaWJ1dGUoXCJpZFwiLGMpLGEuc2V0QXR0cmlidXRlKFwiZGF0YS1jb25maWctcHJvcG5hbWVcIixpKSwhMD09PWUudmlzaWJsZSYmKGEuY2hlY2tlZD0hMCk7dmFyIGw9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxhYmVsXCIpO2wuc2V0QXR0cmlidXRlKFwiZm9yXCIsYyksbC50ZXh0Q29udGVudD1lLmdldFRleHQoKSxzLmFwcGVuZENoaWxkKGEpLHMuYXBwZW5kQ2hpbGQobCksci5hcHBlbmRDaGlsZChzKSxhLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLChmdW5jdGlvbihlKXt2YXIgbz1lLnRhcmdldCxpPW8uZ2V0QXR0cmlidXRlKFwiZGF0YS1jb25maWctcHJvcG5hbWVcIik7aWYoaSl7dmFyIHI9dC5oZWFkLmdldEdyaWRUaXRsZXNSb3coKSxzPXIuY2VsbHMuZmluZCgoZnVuY3Rpb24odCl7cmV0dXJuIHQub3B0aW9ucy5Qcm9wTmFtZT09PWl9KSk7aWYocyl7dmFyIGE9dC5ib2R5LnJvd3MsYz1raShraShbXSxhLCEwKSxbcl0sITEpLGw9ci5jZWxscy5pbmRleE9mKHMpO2lmKCEobDwwKSl7Yy5mb3JFYWNoKChmdW5jdGlvbih0KXt2YXIgZT10LmNlbGxzW2xdO2UmJihvLmNoZWNrZWQ/ZS52aXNpYmxlPSEwOmUudmlzaWJsZT0hMSl9KSksdC5ub3RpZnlMaXN0ZW5lcnMoem8uT05fQ09MU19SRU9SREVSRUQse0RhdGFTb3VyY2VOYW1lOm4sRXZlbnREYXRhOntFdmVudDplfX0pO3ZhciB1PXtFdmVudERhdGE6e0V2ZW50OmUsQWN0aW9uOlVvLkNPTF9TSE9XX0hJREV9LERhdGFTb3VyY2VOYW1lOm59O3Qubm90aWZ5TGlzdGVuZXJzKHpvLk9OX0dSSURfQ09ORklHX1VQREFURUQsdSl9fX19KSl9fSkpfSxlLnByb3RvdHlwZS5yZXNpemFibGVHcmlkPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5vcHRpb25zLmRhdGFTb3VyY2UubmFtZSxlPXRoaXMuaGVhZC5nZXRHcmlkVGl0bGVzUm93KCkuY2VsbHM7dGhpcy5jc3M9e30sdGhpcy5zZXRDc3MoXCJvdmVyZmxvd1wiLFwiaGlkZGVuXCIpO2Zvcih2YXIgbj10aGlzLmVsZW1lbnQub2Zmc2V0SGVpZ2h0LG89MDtvPGUubGVuZ3RoO28rKyl7dmFyIGk9cyhuKTtlW29dLmVsZW1lbnQuYXBwZW5kKGkpLGVbb10uc2V0Q3NzKFwicG9zaXRpb25cIixcInJlbGF0aXZlXCIpLHIoaSxlW29dLHRoaXMpfWZ1bmN0aW9uIHIoZSxuLG8pe3ZhciBpLHIscyxjO2UuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlZG93blwiLChmdW5jdGlvbih0KXtjPW8uZWxlbWVudC5vZmZzZXRXaWR0aCxyPW4uZWxlbWVudCxpPXQucGFnZVg7dmFyIGU9ZnVuY3Rpb24odCl7aWYoXCJib3JkZXItYm94XCI9PWEodCxcImJveC1zaXppbmdcIikpcmV0dXJuIDA7dmFyIGU9YSh0LFwicGFkZGluZy1sZWZ0XCIpLG49YSh0LFwicGFkZGluZy1yaWdodFwiKTtyZXR1cm4gcGFyc2VJbnQoZSkrcGFyc2VJbnQobil9KHIpO3M9ci5vZmZzZXRXaWR0aC1lfSkpLGUuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlb3ZlclwiLChmdW5jdGlvbih0KXt0aGlzLnN0eWxlLmJvcmRlclJpZ2h0PVwiMnB4IHNvbGlkICMwMDAwZmZcIn0pKSxlLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZW91dFwiLChmdW5jdGlvbih0KXt0aGlzLnN0eWxlLmJvcmRlclJpZ2h0PVwiXCJ9KSksZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlbW92ZVwiLChmdW5jdGlvbih0KXtpZihyKXt2YXIgZT10LnBhZ2VYLWk7ci5zdHlsZS53aWR0aD1zK2UrXCJweFwiLG8uZWxlbWVudC5zdHlsZS53aWR0aD1jK2UrXCJweFwifX0pKSxkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwibW91c2V1cFwiLChmdW5jdGlvbihlKXtpZihyKXt2YXIgbj17RXZlbnREYXRhOntFdmVudDplLEN1cnJlbnRDb2w6cixBY3Rpb246VW8uQ09MX1JFU0laRUR9LERhdGFTb3VyY2VOYW1lOnR9O28ubm90aWZ5TGlzdGVuZXJzKHpvLk9OX0dSSURfQ09ORklHX1VQREFURUQsbil9cj12b2lkIDAsaT12b2lkIDAscz12b2lkIDB9KSl9ZnVuY3Rpb24gcyh0KXt2YXIgZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO3JldHVybiBlLnN0eWxlLnRvcD1cIjBcIixlLnN0eWxlLnJpZ2h0PVwiMFwiLGUuc3R5bGUud2lkdGg9XCI1cHhcIixlLnN0eWxlLnBvc2l0aW9uPVwiYWJzb2x1dGVcIixlLnN0eWxlLmN1cnNvcj1cImNvbC1yZXNpemVcIixlLnN0eWxlLnVzZXJTZWxlY3Q9XCJub25lXCIsZS5zdHlsZS5oZWlnaHQ9dCtcInB4XCIsZX1mdW5jdGlvbiBhKHQsZSl7cmV0dXJuIHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKHQsbnVsbCkuZ2V0UHJvcGVydHlWYWx1ZShlKX19LGUucHJvdG90eXBlLmVuYWJsZUNvbHVtblJlb3JkZXJpbmc9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dGhpcy5vcHRpb25zLmRhdGFTb3VyY2UubmFtZSxuPXRoaXMsbz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO28uZHJhZ2dhYmxlPSEwLG8uY2xhc3NMaXN0LmFkZChcImdyaWQtaGVhZGVyXCIpO3ZhciBpLHI9bi5oZWFkLmdldEdyaWRUaXRsZXNSb3coKSxzPXIuY2VsbHM7cy5mb3JFYWNoKChmdW5jdGlvbihlKXt2YXIgbj1lLmNoaWxkcmVuTm9kZXMoKTtpZigwPT09bi5sZW5ndGgpe3ZhciBpPWUuZ2V0VGV4dCgpO2Uuc2V0VGV4dChcIlwiKTt2YXIgcj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO3IudGV4dENvbnRlbnQ9aSxlLmFwcGVuZENoaWxkKHIpLHQud3JhcChvLHIpfWVsc2UgdC53cmFwKG8sbil9KSksdGhpcy5maW5kRWxlbWVudHMoXCIuZ3JpZC1oZWFkZXJcIikuZm9yRWFjaCgoZnVuY3Rpb24obyl7dC5hZGREcmFnSGFuZGxlcnMobyx7ZHJhZ1N0YXJ0OmZ1bmN0aW9uKHQpe3RoaXMuY2xhc3NMaXN0LmNvbnRhaW5zKFwiZ3JpZC1oZWFkZXJcIik/KGk9dGhpcyx0aGlzLnN0eWxlLm9wYWNpdHk9XCIwLjVcIik6aT12b2lkIDB9LGRyYWdMZWF2ZTpmdW5jdGlvbih0KXt0LnByZXZlbnREZWZhdWx0KCksaSYmdGhpcy5jbGFzc0xpc3QuY29udGFpbnMoXCJncmlkLWhlYWRlclwiKSYmdGhpcy5jbGFzc0xpc3QucmVtb3ZlKFwib3ZlclwiKX0sZHJhZ0VudGVyOmZ1bmN0aW9uKHQpe3QucHJldmVudERlZmF1bHQoKSxpJiZ0aGlzLmNsYXNzTGlzdC5jb250YWlucyhcImdyaWQtaGVhZGVyXCIpJiZ0aGlzLmNsYXNzTGlzdC5hZGQoXCJvdmVyXCIpfSxkcmFnT3ZlcjpmdW5jdGlvbih0KXt0LnByZXZlbnREZWZhdWx0KCksaSYmdGhpcy5jbGFzc0xpc3QuY29udGFpbnMoXCJncmlkLWhlYWRlclwiKSYmdGhpcy5jbGFzc0xpc3QuYWRkKFwib3ZlclwiKX0sZHJhZ0VuZDpmdW5jdGlvbih0KXt0LnByZXZlbnREZWZhdWx0KCksaSYmKHRoaXMuc3R5bGUub3BhY2l0eT1cIjFcIil9LGRyb3A6ZnVuY3Rpb24odCl7aWYodC5wcmV2ZW50RGVmYXVsdCgpLGkmJih0aGlzLmNsYXNzTGlzdC5yZW1vdmUoXCJvdmVyXCIpLHRoaXMuY2xhc3NMaXN0LmNvbnRhaW5zKFwiZ3JpZC1oZWFkZXJcIikmJmkhPT10aGlzKSl7dmFyIG89dGhpcy5jbG9zZXN0KFwidGhcIik7aWYobyl7dmFyIGM9cy5maW5kKChmdW5jdGlvbih0KXtyZXR1cm4gdC5lbGVtZW50PT09b30pKTtpZihjKXt2YXIgbD1zLmluZGV4T2YoYyksdT1pLmNsb3Nlc3QoXCJ0aFwiKTtpZih1KXt2YXIgZD1zLmZpbmQoKGZ1bmN0aW9uKHQpe3JldHVybiB0LmVsZW1lbnQ9PT11fSkpO2lmKGMpe3ZhciBwPXMuaW5kZXhPZihkKTtpZihsIT1wKXthKHIscyxwLGwpO3ZhciBoPW4uYm9keS5yb3dzO3NldFRpbWVvdXQoKGZ1bmN0aW9uKCl7Zm9yKHZhciBvPTA7bzxoLmxlbmd0aDtvKyspe3ZhciBpPWhbb10scj1pLmNlbGxzO2lmKGw9PXApcmV0dXJuO2EoaSxyLHAsbCl9bi5ub3RpZnlMaXN0ZW5lcnMoem8uT05fQ09MU19SRU9SREVSRUQse0RhdGFTb3VyY2VOYW1lOmUsRXZlbnREYXRhOntFdmVudDp0fX0pO3ZhciBzPXtFdmVudERhdGE6e0V2ZW50OnQsQWN0aW9uOlVvLkNPTF9SRU9SREVSfSxEYXRhU291cmNlTmFtZTplfTtuLm5vdGlmeUxpc3RlbmVycyh6by5PTl9HUklEX0NPTkZJR19VUERBVEVELHMpfSksNTAwKX19fX19fX19KX0pKTt2YXIgYT1mdW5jdGlvbih0LGUsbixvKXtpZihuIT1vKXt2YXIgaT1kLmx0cjtuPm8mJihpPWQucnRsKSxpPT09ZC5ydGw/YyhlLG4sbyk6bChlLG4sbyksdC5jZWxscz1bXSx0LmFkZENlbGxzKGUpfX0sYz1mdW5jdGlvbih0LGUsbil7Zm9yKHZhciBvPWU7bz5uO28tLSl1KHQsbyxvLTEpfSxsPWZ1bmN0aW9uKHQsZSxuKXtmb3IodmFyIG89ZTtvPG47bysrKXUodCxvLG8rMSl9LHU9ZnVuY3Rpb24odCxlLG4pe3ZhciBvPXRbZV07dFtlXT10W25dLHRbbl09b30sZD17cnRsOlwiUklHSFQtVE8tTEVGVFwiLGx0cjpcIkxFRlQtVE8tUklHSFRcIn19LGUucHJvdG90eXBlLm9uR3JpZENvbmZpZ3VyYXRpb25DaGFuZ2VkPWZ1bmN0aW9uKHQpe3QuRXZlbnREYXRhLkFjdGlvbjt2YXIgZT10aGlzLm9wdGlvbnMuZ3JpZElkLG49dGhpcy5oZWFkLmdldEdyaWRUaXRsZXNSb3coKS5jZWxscyxvPXt9O24uZm9yRWFjaCgoZnVuY3Rpb24odCxlKXt2YXIgbj10Lm9wdGlvbnMuUHJvcE5hbWU7aWYobil7dmFyIGk9ITA7dC5oYXNDbGFzcyhcInNvcnRpbmdfZGVzY1wiKSYmKGk9ITEpO3ZhciByPXtXaWR0aDp0LmdldENzcyhcIndpZHRoXCIpLFZpc2libGU6dC52aXNpYmxlLEFzY2VuZGluZzppLFBvc2l0aW9uOmV9O29bbl09cn19KSksRm8uZGVsZXRlKGUpLHNldFRpbWVvdXQoKGZ1bmN0aW9uKCl7Rm8uc2V0SlNPTihlLG8se2RheXM6MzAsc2VjdXJlOiEwLFNhbWVTaXRlOlwic3RyaWN0XCJ9KX0pLDUwMCl9LGUucHJvdG90eXBlLm9uR3JpZERhdGFCb3VuZD1mdW5jdGlvbih0KXt0aGlzLmNvbmZpZ3VyYWJsZUdyaWQoKSx0aGlzLmVuYWJsZUNvbHVtblJlb3JkZXJpbmcoKSx0aGlzLnJlc2l6YWJsZUdyaWQoKX0sZX0oR28pLEhpPWZ1bmN0aW9uKCl7dmFyIHQ9ZnVuY3Rpb24oZSxuKXtyZXR1cm4gdD1PYmplY3Quc2V0UHJvdG90eXBlT2Z8fHtfX3Byb3RvX186W119aW5zdGFuY2VvZiBBcnJheSYmZnVuY3Rpb24odCxlKXt0Ll9fcHJvdG9fXz1lfXx8ZnVuY3Rpb24odCxlKXtmb3IodmFyIG4gaW4gZSlPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxuKSYmKHRbbl09ZVtuXSl9LHQoZSxuKX07cmV0dXJuIGZ1bmN0aW9uKGUsbil7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgbiYmbnVsbCE9PW4pdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNsYXNzIGV4dGVuZHMgdmFsdWUgXCIrU3RyaW5nKG4pK1wiIGlzIG5vdCBhIGNvbnN0cnVjdG9yIG9yIG51bGxcIik7ZnVuY3Rpb24gbygpe3RoaXMuY29uc3RydWN0b3I9ZX10KGUsbiksZS5wcm90b3R5cGU9bnVsbD09PW4/T2JqZWN0LmNyZWF0ZShuKTooby5wcm90b3R5cGU9bi5wcm90b3R5cGUsbmV3IG8pfX0oKSxNaT1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKCl7dmFyIGU9dC5jYWxsKHRoaXMpfHx0aGlzO3JldHVybiBlLml0ZW1zPVtdLGV9cmV0dXJuIEhpKGUsdCksZS5wcm90b3R5cGUuYWRkPWZ1bmN0aW9uKHQpe3RoaXMuZmluZEl0ZW0odC5vcHRpb25zLk1vZGVsTmFtZSl8fHRoaXMuaXRlbXMucHVzaCh0KX0sZS5wcm90b3R5cGUuZmluZEl0ZW09ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuaXRlbXMuZmluZCgoZnVuY3Rpb24oZSl7cmV0dXJuIGUub3B0aW9ucy5Nb2RlbE5hbWU9PT10fSkpfSxlfShHbyksQmk9ZnVuY3Rpb24oKXt2YXIgdD1mdW5jdGlvbihlLG4pe3JldHVybiB0PU9iamVjdC5zZXRQcm90b3R5cGVPZnx8e19fcHJvdG9fXzpbXX1pbnN0YW5jZW9mIEFycmF5JiZmdW5jdGlvbih0LGUpe3QuX19wcm90b19fPWV9fHxmdW5jdGlvbih0LGUpe2Zvcih2YXIgbiBpbiBlKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLG4pJiYodFtuXT1lW25dKX0sdChlLG4pfTtyZXR1cm4gZnVuY3Rpb24oZSxuKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBuJiZudWxsIT09bil0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2xhc3MgZXh0ZW5kcyB2YWx1ZSBcIitTdHJpbmcobikrXCIgaXMgbm90IGEgY29uc3RydWN0b3Igb3IgbnVsbFwiKTtmdW5jdGlvbiBvKCl7dGhpcy5jb25zdHJ1Y3Rvcj1lfXQoZSxuKSxlLnByb3RvdHlwZT1udWxsPT09bj9PYmplY3QuY3JlYXRlKG4pOihvLnByb3RvdHlwZT1uLnByb3RvdHlwZSxuZXcgbyl9fSgpLEdpPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSl7dmFyIG49dC5jYWxsKHRoaXMsZSl8fHRoaXM7cmV0dXJuIG4ub3B0aW9ucz1lLG4ucmVuZGVyKCksbn1yZXR1cm4gQmkoZSx0KSxlLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oKXt0aGlzLmVsZW1lbnQ9ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGhpcy5vcHRpb25zLkVsZW1lbnRJZCl9LGV9KFhvKSxXaT1mdW5jdGlvbigpe2Z1bmN0aW9uIHQodCl7dGhpcy5vcHRpb25zPW51bGwhPXQ/dDp7ZW5hYmxlSW5maW5pdGVTY3JvbGw6ITAsY2FjaGVSZXNwb25zZXM6ITEsZ3JpZElkOlwiYnNEYXRhVGFibGVcIixjb250YWluZXJJZDpcImJzQ29udGFpbmVyXCIsaXNSZWFkb25seTohMSxjb2xEZWZpbml0aW9uOltdfSx0aGlzLm9wdGlvbnMuZGF0YVNvdXJjZXx8KHRoaXMub3B0aW9ucy5kYXRhU291cmNlPXtuYW1lOlwiYnNEYXRhU291cmNlXCIsZGF0YTp7aW5pdERhdGE6W10sbWV0YURhdGE6bmV3IGhpfSxpc1JlbW90ZTohMCxnZXRQYWdlT2ZmbGluZUNCOmZ1bmN0aW9uKHQsZSxuKXtmb3IodmFyIG89TWF0aC5tYXgoMCwodC0xKSpuLnBhZ2VTaXplKSxpPU1hdGgubWluKG8rbi5wYWdlU2l6ZSxlLmxlbmd0aCkscj1bXSxzPW87czxpO3MrKyl7dmFyIGE9ZVtzXTtyLnB1c2goYSl9cmV0dXJuIHJ9fSl9cmV0dXJuIHQuQ3JlYXRlQnVpbGRlcj1mdW5jdGlvbihlKXtyZXR1cm4gbmV3IHQoZSl9LHQucHJvdG90eXBlLkJ1aWxkPWZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBqaSh0aGlzLm9wdGlvbnMpfSx0LnByb3RvdHlwZS5TZXRJZD1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5vcHRpb25zLmdyaWRJZD10LHRoaXN9LHQucHJvdG90eXBlLlNldENvbnRhaW5lcklkPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLm9wdGlvbnMuY29udGFpbmVySWQ9dCx0aGlzfSx0LnByb3RvdHlwZS5TZXREYXRhU291cmNlTmFtZT1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5vcHRpb25zLmRhdGFTb3VyY2UubmFtZT10LHRoaXN9LHQucHJvdG90eXBlLklzUmVtb3RlPWZ1bmN0aW9uKHQpe3JldHVybiB2b2lkIDA9PT10JiYodD0hMCksdGhpcy5vcHRpb25zLmRhdGFTb3VyY2UuaXNSZW1vdGU9dCx0aGlzfSx0LnByb3RvdHlwZS5Jc1JlYWRvbmx5PWZ1bmN0aW9uKHQpe3JldHVybiB2b2lkIDA9PT10JiYodD0hMSksdGhpcy5vcHRpb25zLmlzUmVhZG9ubHk9dCx0aGlzfSx0LnByb3RvdHlwZS5DYWNoZVJlc3BvbnNlcz1mdW5jdGlvbih0KXtyZXR1cm4gdm9pZCAwPT09dCYmKHQ9ITEpLHRoaXMub3B0aW9ucy5jYWNoZVJlc3BvbnNlcz10LHRoaXN9LHQucHJvdG90eXBlLkVuYWJsZUluZmluaXRlU2Nyb2xsPWZ1bmN0aW9uKHQpe3JldHVybiB2b2lkIDA9PT10JiYodD0hMCksdGhpcy5vcHRpb25zLmVuYWJsZUluZmluaXRlU2Nyb2xsPXQsdGhpc30sdC5wcm90b3R5cGUuTmV4dFBhZ2VVcmxDYWxsYmFjaz1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5vcHRpb25zLmRhdGFTb3VyY2UudXJsPXQsdGhpc30sdC5wcm90b3R5cGUuR2V0TmV4dFBhZ2VPZmZsaW5lQ2FsbGJhY2s9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMub3B0aW9ucy5kYXRhU291cmNlLmdldFBhZ2VPZmZsaW5lQ0I9dCx0aGlzfSx0LnByb3RvdHlwZS5BZGRDb2x1bW49ZnVuY3Rpb24odCl7aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgdCl7dmFyIGU9e0RhdGFTb3VyY2VOYW1lOnRoaXMub3B0aW9ucy5kYXRhU291cmNlLm5hbWUsV2lkdGg6XCI5MHB4XCIsQ29udGFpbmVySWQ6dGhpcy5vcHRpb25zLmNvbnRhaW5lcklkLElzS2V5OiExLERhdGFUeXBlOlwidGV4dFwifTt0KGUpLHRoaXMub3B0aW9ucy5jb2xEZWZpbml0aW9uLnB1c2goZSl9ZWxzZSB0aGlzLm9wdGlvbnMuY29sRGVmaW5pdGlvbi5wdXNoKHQpO3JldHVybiB0aGlzfSx0LnByb3RvdHlwZS5BZGRJbml0RGF0YT1mdW5jdGlvbih0KXtyZXR1cm4gdCh0aGlzLm9wdGlvbnMuZGF0YVNvdXJjZS5kYXRhKSx0aGlzfSx0fSgpfSkoKSxvfSkoKX0pKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pWW5Oa1lYUmhkR0ZpYkdVdWFuTWlMQ0p0WVhCd2FXNW5jeUk2SWp0RFFVRkJMRk5CUVRKRFFTeEZRVUZOUXl4SFFVTXhRaXhwUWtGQldrTXNVMEZCTUVNc2FVSkJRVmhETEU5QlEzaERRU3hQUVVGUFJDeFJRVUZWUkN4SlFVTlJMRzFDUVVGWVJ5eFJRVUY1UWtFc1QwRkJUME1zU1VGRE9VTkVMRTlCUVU4c1IwRkJTVWdzUjBGRFpTeHBRa0ZCV2tNc1VVRkRaRUVzVVVGQmNVSXNXVUZCU1VRc1NVRkZla0pFTEVWQlFXdENMRmxCUVVsRExFbEJVbmhDTEVOQlUwZExMRTFCUVUwc1YwRkRWQ3cwUWtOSFEwTXNUMEZCVDBNc1ZVRkJWVU1zV1VGQll5eFhRVU0xUWl4UFFVRlBReXhMUVVGTFF5eFJRVUZSTEhWQ1FVRjFRaXhUUVVGVFF5eEZRVUZOUXl4SFFVTjBSQ3hQUVVGcFFpeEpRVUZXUVN4RlFVRmpSQ3hGUVVGTFJTeGpRVUZuUWtZc1JVRkJTMGNzYVVKQlF6bERTaXhSUVVGUkxFOUJRVkVzUzBGUmVrSktMRTlCUVU5RExGVkJRVlZSTEdGQlFXVXNWMEZETlVJc1QwRkJUMDRzUzBGQlMwTXNVVUZCVVN4MVFrRkJkVUlzVTBGQlUwTXNSVUZCVFVNc1IwRkRkRVFzVDBGQmFVSXNTVUZCVmtFc1JVRkJZMFFzUlVGQlMwY3NZMEZCWjBKSUxFVkJRVXRGTEdsQ1FVTTVRMGdzVVVGQlVTeFBRVUZSTEV0QlIzcENTaXhQUVVGUFF5eFZRVUZWVXl4cFFrRkJiVUlzVjBGRGFFTXNUMEZCVDFBc1MwRkJTME1zVVVGQlVTeDFRa0ZCZFVJc1UwRkJVME1zUlVGQlRVTXNSMEZEZEVRc1QwRkJhVUlzU1VGQlZrRXNSVUZCWTBRc1JVRkJTMGNzWTBGQlowSklMRXRCUTNwRFJDeFJRVUZSTEU5QlFWRXNTMEZIY0VKS0xFOUJRVTlETEZWQlFWVlZMRk5CUTNCQ1dDeFBRVUZQUXl4VlFVRlZWU3hQUVVGVExGZEJRM2hDTEVsQlFVbERMRVZCUVU5RExGVkJRMWdzVDBGQlQxWXNTMEZCUzBNc1VVRkJVU3haUVVGWkxGTkJRVk5WTEVWQlFVOURMRWRCUXpsRExGbEJRVGhDTEVsQlFXaENTQ3hGUVVGTFJ5eEhRVU5tU0N4RlFVRkxSeXhIUVVOTVJDeFRRM3BEVGtVc1JVRkJNa0lzUjBGSEwwSXNVMEZCVTBNc1JVRkJiMEpETEVkQlJUVkNMRWxCUVVsRExFVkJRV1ZJTEVWQlFYbENSU3hIUVVNMVF5eFJRVUZ4UWtVc1NVRkJha0pFTEVWQlEwZ3NUMEZCVDBFc1JVRkJZWGhDTEZGQlIzSkNMRWxCUVVsRExFVkJRVk52UWl4RlFVRjVRa1VzUjBGQldTeERRVWRxUkhaQ0xGRkJRVk1zU1VGUFZpeFBRVWhCTUVJc1JVRkJiMEpJTEVkQlFWVjBRaXhGUVVGUlFTeEZRVUZQUkN4UlFVRlRjMElzUjBGSEwwTnlRaXhGUVVGUFJDeFJRM0JDWm5OQ0xFVkJRVzlDU3l4RlFVRkpMRU5CUVVNelFpeEZRVUZUTkVJc1MwRkRha01zU1VGQlNTeEpRVUZKUXl4TFFVRlBSQ3hGUVVOWVRpeEZRVUZ2UWxFc1JVRkJSVVlzUlVGQldVTXNTMEZCVTFBc1JVRkJiMEpSTEVWQlFVVTVRaXhGUVVGVE5rSXNTVUZETlVWRkxFOUJRVTlETEdWQlFXVm9ReXhGUVVGVE5rSXNSVUZCU3l4RFFVRkZTU3haUVVGWkxFVkJRVTFETEVsQlFVdE9MRVZCUVZkRExFMURTak5GVUN4RlFVRnZRbEVzUlVGQlNTeERRVUZEU3l4RlFVRkxReXhKUVVGVlRDeFBRVUZQZWtJc1ZVRkJWU3RDTEdWQlFXVkRMRXRCUVV0SUxFVkJRVXRETEVkRFEyeEdaQ3hGUVVGdlFtbENMRVZCUVV0MlF5eEpRVU5JTEc5Q1FVRllkME1zVVVGQk1FSkJMRTlCUVU5RExHRkJRekZEVml4UFFVRlBReXhsUVVGbGFFTXNSVUZCVTNkRExFOUJRVTlETEZsQlFXRXNRMEZCUlVNc1RVRkJUeXhYUVVVM1JGZ3NUMEZCVDBNc1pVRkJaV2hETEVWQlFWTXNZVUZCWXl4RFFVRkZNRU1zVDBGQlR5eG5MME5EVEdoRUxFbEJRVWtzUlVGQlRTeE5RVU5PUXl4RlFVRlRMRk5CUTFSRExFVkJRVkVzVVVGRFVrTXNSVUZCVHl4UFFVTlFReXhGUVVGUExFOUJRMUJETEVWQlFXbENMRU5CUVVNc1JVRkJTMG9zUlVGQlVVTXNSVUZCVDBNc1IwRkRkRU5ITEVWQlFWRXNVVUZEVWtNc1JVRkJUU3hOUVVOT1F5eEZRVUZyUWl4clFrRkRiRUpETEVWQlFWY3NWMEZEV0VNc1JVRkJVeXhUUVVOVVF5eEZRVUZaTEZsQlExcERMRVZCUVcxRFVDeEZRVUZsVVN4UlFVRlBMRk5CUVZWRExFVkJRVXRETEVkQlEycEdMRTlCUVU5RUxFVkJRVWxGTEU5QlFVOHNRMEZCUTBRc1JVRkJXU3hKUVVGTlZDeEZRVUZQVXl4RlFVRlpMRWxCUVUxU0xFMUJRemRFTEVsQlExRXNSVUZCTUVJc1IwRkJSMU1zVDBGQlQxZ3NSVUZCWjBJc1EwRkJRMFFzU1VGQlQxTXNVVUZCVHl4VFFVRlZReXhGUVVGTFF5eEhRVU16Uml4UFFVRlBSQ3hGUVVGSlJTeFBRVUZQTEVOQlFVTkVMRVZCUVZkQkxFVkJRVmtzU1VGQlRWUXNSVUZCVDFNc1JVRkJXU3hKUVVGTlVpeE5RVU40UlN4SlFVVlJWU3hGUVVGaExHRkJRMkpETEVWQlFVOHNUMEZEVUVNc1JVRkJXU3haUVVWYVF5eEZRVUZoTEdGQlEySkRMRVZCUVU4c1QwRkRVRU1zUlVGQldTeFpRVVZhUXl4RlFVRmpMR05CUTJSRExFVkJRVkVzVVVGRFVrTXNSVUZCWVN4aFFVTmlReXhGUVVGcFFpeERRVUZEVkN4RlFVRlpReXhGUVVGTlF5eEZRVUZYUXl4RlFVRlpReXhGUVVGTlF5eEZRVUZYUXl4RlFVRmhReXhGUVVGUFF5eEhRemxDTlVZc1UwRkJVMFVzUlVGQldVTXNSMEZEYkVNc1QwRkJUMEVzUjBGQlYwRXNSVUZCVVVNc1ZVRkJXU3hKUVVGSk0wUXNZMEZCWjBJc1MwTkVOME1zVTBGQlV6UkVMRVZCUVZWRExFZEJRMmhETEVkQlFWa3NUVUZCVWtFc1JVRkRSaXhQUVVGUFF5eFBRVWRVTEVkQlFYZENMRzlDUVVGd1FrUXNSVUZCUzBVc1YwRkJhME1zUTBGRGVrTXNTVUZCU1VNc1JVRkJaMEpJTEVWQlFVdEhMR05CUTNwQ0xFOUJRVTlCTEVkQlFXZENRU3hGUVVGalF5eGhRVUYzUWtnc1QwRkhMMFFzVDBGQlQwUXNSVU5TVkN4VFFVRlRTeXhGUVVGVlRDeEhRVVZxUWl4UFFVRlBRU3hoUVVSVlJDeEZRVUZWUXl4SFFVRk5UU3hUUVVOSlRpeGhRVUZuUWswc1VVRkhka1FzVTBGQlUwTXNSVUZCWTFBc1IwRkZja0lzVDBGQlQwRXNZVUZFVlVRc1JVRkJWVU1zUjBGQlRWRXNZVUZEU1ZJc1lVRkJaMEpSTEZsQlIzWkVMRk5CUVZORExFVkJRV0ZVTEVkQlJYQkNMRTFCUVRCQ0xHOUNRVUZtVlN4aFFVdEtWaXhoUVVSVlJDeEZRVUZWUXl4SFFVRk5WU3haUVVOSlZpeGhRVUZuUWxVc1dVTjVSSFpFTEZOQlEwVkRMRXRCUVUwc1kwRkRUa01zVTBGQlV5eEZRVU5VUXl4TlFVRlBMRkZCUTFCRExFZEJOVVZHTEZOQlFYRkNReXhIUVVOdVFpeEpRVUZKUXl4RlFVRlJSQ3hGUVVGTFF5eE5RVU5xUWpGRUxFOUJRVTh5UkN4TFFVRkxSQ3hGUVVGTlJTeFZRVUZWUXl4VFFVRlJMRk5CUVZWU0xFZEJRelZETEVsQlFVbFRMRVZCUVZGS0xFVkJRVTFMTEU5QlFVOVdMRWxCUVZNc1IwRkRPVUpYTEVWQlFXRk9MRVZCUVUxTkxGZEJRVmRZTEVsQlFWTXNSMEZEZGtOa0xFVkJRVlZ0UWl4RlFVRk5SU3hUUVVGVFVDeEhRVVY0UWtvc1JVRkJZMVlzU1VGQllVUXNSVUZCV1VNc1MwRlBOVU4yUXl4UFFVRlBhVVVzVDBGQlR6RkNMRVZCUVZGMVFpeE5RVUZQUVN4SFFVTTNRamxFTEU5QlFVOHlSQ3hMUVVGTFN5eEhRVUZaU0N4VFFVRlJMRk5CUVZWU0xFZEJRM2hETEVsQlFVa3hReXhGUVVGUmNVUXNSVUZCVjFnc1NVRkZWQ3hKUVVGV01VTXNSVUZEUmpSQ0xFVkJRVkV5UWl4blFrRkJaMEppTEVkQlJYaENaQ3hGUVVGUk5FSXNZVUZCWVdRc1IwRkJaMElzU1VGQlZqRkRMRVZCUVdsQ0xFZEJRVXRCTEZkQmQwUjJSSGxFTEU5QmJFUkdMRk5CUVdkQ1F5eEhRVU5rTEVsQlFVbFlMRVZCUVZGWExFVkJRVTFZTEUxQlEyUlpMRVZCUVdkQ0xFTkJRMnhDYWtRc1QwRkJVU3hEUVVOT2EwUXNVMEZCVldJc1JVRkJUV01zVVVGQlVVTXNVMEZEZUVJelJDeExRVUZOTEVsQlEwNDBSQ3hKUVVGTExFbEJRMHhETEU5QlFWRXNTMEZGVmtNc1RVRkJUeXhEUVVOTVRDeFRRVUZWTEZsQlJWcHFSQ3hWUVVGWExFbEJVMklzVDBGUVFYUkNMRTlCUVU5cFJTeFBRVUZQVUN4RlFVRk5SU3hUUVVGVGRrTXNUMEZCVDNsRExFMUJRVTlSTEVWQlFXTnFSQ3hSUVVONlJIRkRMRVZCUVUxTExFOUJRVk5QTEVWQlJWaGFMRVZCUVUxRkxGTkJRVk5uUWl4UFFVTnFRalZGTEU5QlFVOXBSU3hQUVVGUFVDeEZRVUZOUlN4VFFVRlRaMElzVFVGQlRXUXNUVUZCVDFFc1JVRkJZMDBzVDBGSGJrUXNWMEZEVERWRkxFOUJRVTh5UkN4TFFVRkxSQ3hGUVVGTlJTeFZRVUZWUXl4VFFVRlJMRk5CUVZWU0xFZEJRelZETEVsQlFVbGtMRVZCUVZWdFFpeEZRVUZOUlN4VFFVRlRVQ3hIUVVONlFsY3NSVUZCWVU0c1JVRkJUVTBzVjBGQlYxZ3NTVUZCVXl4SFFVZDJRMU1zUlVGR2EwSTVSQ3hQUVVGUE1rUXNTMEZCUzBRc1JVRkJUVXNzVDBGQlQzcEVMR1ZCUVdVclF5eEhRVUZSU3l4RlFVRk5TeXhQUVVGUFZpeEhRVUZSYVVJc1JVRkJZMnBDTEVsQlJUZEZOMElzVVVGQlR5eFRRVUZWYzBNc1JVRkJUMlVzUjBGRmJFUXNUMEZFUVdZc1JVRkJUV1VzUjBGQldTeEhRVU5ZWml4SlFVTk9MRWxCUlVWaUxFVkJRV05XTEVsQlFXRkVMRVZCUVZsRExFdEJTVFZEZGtNc1QwRkJUMmxGTEU5QlFVOHhRaXhGUVVGUmRVSXNUVUZCVDBFc1IwRkROMEk1UkN4UFFVRlBNa1FzUzBGQlMwc3NSMEZCV1Vnc1UwRkJVU3hUUVVGVmFVSXNSMEZEZUVOMlF5eEZRVUZSTWtJc1owSkJRV2RDV1N4WlFXRTVRa01zVTBGQlZTeERRVUZETEd0Q1EycEdSU3hUUVVGVFF5eEZRVUZwUW5SRUxFZEJRM1pETEU5QlFVOUJMRVZCUVZWMVJDeE5RVUZOTEV0QlFVc3NSME5HZGtJc1NVRkJTU3hGUVVGTlF5eExRVUZMUXl4SlFVTllMRVZCUVUxRUxFdEJRVXRGTEVsQlExaERMRVZCUVZGSUxFdEJRVXRITEUxRFFWUXNVMEZCVTBNc1JVRkJjMEl2UXl4RlFVRlRaMFFzVVVGRGFFTXNTVUZCYWtKQkxFbEJRMFpCTEVkQlFXVXNSMEZIYWtJc1NVRkJTVU1zUlVGQlQycEVMRVZCUVZFclF5eDNRa0ZEWmtjc1JVRkJVeXhGUVVOVVF5eEZRVUZUTEVWQlJXSXNSMEZCU1hwRExFVkJRV05XTEVsQlFWbG5SQ3hGUVVGakxFTkJRekZETEVsQlFVbEpMRVZCUVdWd1JDeEZRVUZSYjBRc1lVRkRka0pETEVWQlFXTnlSQ3hGUVVGUmNVUXNXVUZIZEVKQkxFVkJRV01zU1VGRGFFSklMRVZCUVZOS0xFVkJRVTFITEVWQlFVdExMRTlCUVZORUxFZEJRV1VzUjBGSE1VTkVMRVZCUVdVc1NVRkRha0pFTEVWQlFWTk1MRVZCUVUxSExFVkJRVXROTEZGQlFWVklMRWRCUVdkQ0xFZEJTV3hFTEUxQlFVOHNRMEZEVEVVc1RVRkJUMHdzUlVGQlMwc3NUVUZCVVVvc1JVRkRjRUpMTEU5QlFWRk9MRVZCUVV0TkxFOUJRVk5LTEVWQlEzUkNhRUlzU1VGQlMyTXNSVUZCUzJRc1NVRkJUV2RDTEVWQlEyaENOMFVzVFVGQlR6SkZMRVZCUVVzelJTeE5RVUZSTkVVc1JVRkRjRUkzUlN4UFFVRlJORVVzUlVGQlN6VkZMRTlCUVZNNFJTeEZRVU4wUWpWRkxFdEJRVTB3UlN4RlFVRkxNVVVzUzBGQlR6SkZMRVZCUTJ4Q1RTeEZRVUZIVUN4RlFVRkxNVVVzUzBGQlR6SkZMRVZCUTJaUExFVkJRVWRTTEVWQlFVdGtMRWxCUVUxblFpeEhRemxDU0N4VFFVRlRUeXhGUVVGak1VUXNSMEZEY0VNc1NVRkJTVEpFTEVWQlFXRmFMRVZCUVhOQ0wwTXNSMEZIYmtOelJDeEZRVUZSZEVRc1JVRkJVWEZFTEZsQlEyaENSU3hGUVVGVGRrUXNSVUZCVVc5RUxHRkJWWEpDTEU5QlVrbFVMRXRCUVV0cFFpeEpRVUZKUkN4RlFVRlhUQ3hOUVVGUlFTeEpRVUZWTEVsQlEzaERRU3hGUVVGUlN5eEZRVUZYVEN4UFFVZHFRbGdzUzBGQlMybENMRWxCUVVsRUxFVkJRVmRLTEU5QlFWTkJMRWxCUVZjc1NVRkRNVU5CTEVWQlFWTkpMRVZCUVZkS0xGRkJSMllzUTBGRFRFTXNSVUZCUjNoRUxFVkJRVkUyUkN4WFFVTllTaXhGUVVGSGVrUXNSVUZCVVRoRUxGVkJRMWhTTEUxQlFVOUJMRVZCUTFCRExFOUJRVkZCTEVkRGNrSkhMRk5CUVZOUkxFVkJRVk5ETEVWQlFWRkRMRWRCUTNaRExFbEJRVWxETEVWQlFWZEVMRVZCUVUxRkxHRkJRV1ZHTEVWQlFVMUZMR05CUlRGRExFZEJRVWxJTEVWQlFVOUVMRk5CUVZORkxFZEJRMnhDTEU5QlFVOHNSVUZGU2l4SFFVRkpReXhIUVVGWmRFUXNSVUZCWVhORUxFZEJRVmNzUTBGRGVrTXNTVUZCU1VVc1JVRkJUMGdzUlVGRldDeEZRVUZITEVOQlEwUXNSMEZCU1Vjc1IwRkJVVW9zUlVGQlQwc3NWMEZCVjBRc1IwRkROVUlzVDBGQlR5eEZRVWxVUVN4RlFVRlBRU3hGUVVGTFJTeFpRVUZqUml4RlFVRkxSeXhYUVVONFFrZ3NSMEZKWWl4UFFVRlBMRVZEY0VKTkxGTkJRVk1zUlVGQmFVSndSU3hIUVVOMlF5eFBRVUZQUlN4RlFVRlZSaXhIUVVGVGQwVXNhVUpCUVdsQ2VFVXNSME5FT1VJc1UwRkJVM2xGTEVWQlFXVjZSU3hIUVVOeVF5eE5RVUZQTEVOQlFVTXNVVUZCVXl4TFFVRk5MRTFCUVUwd1JTeFJRVUZSTTBVc1JVRkJXVU1zUzBGQllTeEZRMFJxUkN4VFFVRlRNa1VzUlVGQmJVSXpSU3hIUVVWNlF5eFJRVUZUVVN4RlFVRlZVaXhIUVVGWFFTeEZRVUZSVFN4alFVTjBRMDRzUlVGQlVUUkZMRmRCUVdGNFJTeFBRVUZQZDBVc1ZVRkJWVU1zWjBKRFJIcENMRk5CUVZORExFVkJRV001UlN4SFFVTndReXhOUVVFMlFpeFRRVUY2UWtRc1JVRkJXVU1zUjBGRFVFRXNSVUZOVUVFc1JVRkJVU3RGTEdOQlExSXZSU3hGUVVGUmMwVXNZVUZEVWpGRUxFVkJRV0ZhTEVkQlFWZEJMRVZCUVZGMVJTeExRVUZQTEU5QlJYWkRTU3hGUVVGdFFqTkZMRWREVW5aQ0xGTkJRVk5uUml4RlFVRnZRbWhHTEVkQlF6TkNMRTlCUVV0VkxFVkJRV05XTEVsQlEyOUNMRlZCUVhaRExFVkJRV2xDUVN4SFFVRlRaME1zVTBGSmJrSm9ReXhGUVVGUmFVWXNZVUZJVGl4TFFYZERTU3hUUVVGVFF5eEZRVUZuUW14R0xFZEJTWFJETEVsQlNFRXNTVUZCU1Vrc1JVRkJVMFlzUlVGQlZVWXNSMEZEYmtKcFJpeEZRVUZsUkN4RlFVRnZRbWhHTEVkQlJXaERhVVlzUjBGQlowSlNMRVZCUVdWUkxFbEJRVFpFTEZkQlFUVkRMRVZCUVdsQ1FTeEhRVUZqYWtRc1ZVRkRjRVpwUkN4RlFVRmxSQ3hGUVVGdlFrTXNSMEZIY2tNc1QwRkJTVUVzU1VGQkswTXNVMEZCT1VKc1JpeEZRVUZaYTBZc1NVRkJNRVFzVTBGQk9VSnNSaXhGUVVGWmEwWXNTVUZCZDBVc1YwRkJOVU1zUlVGQmFVSkJMRWRCUVdOcVJDeFZRVU16U0RWQ0xFVkJSMFkyUlN4SFFUVkRWQ3hUUVVFMFFtcEdMRWRCUXpGQ0xFbEJRVWx0Uml4SFFVRnpSU3hKUVVFeFJFTXNWVUZCVlVNc1ZVRkJWUzlKTEdOQlFXTnZTU3hSUVVGUkxGZEJSekZFTEVsQlJuVkVMRWxCUVRWRFZTeFZRVUZWUXl4VlFVRlZXQ3hSUVVGUkxGbEJSVE5DYUVVc1JVRkJZMVlzU1VGSlNTeFZRVVpZTEVWQlFXbENRU3hIUVVWdVFtZERMRk5CUTJJc1QwRkJUeXhMUVUxWUxFbEJSa0VzU1VGQlNYTkVMRVZCUVdOU0xFVkJRV001UlN4SFFVVjZRbFVzUlVGQll6UkZMRWxCUVdkQ0xFTkJRVU1zVDBGQlVTeFJRVUZSV2l4UlFVRlJNMFVzUlVGQldYVkdMRWxCUVdkQ0xFZEJRVWNzUTBGRE0wWXNTVUZCU1VNc1JVRkJUU3hGUVVGcFFrUXNSMEZKTTBJc1IwRkJjMElzVTBGQmJFSkRMRVZCUVVsRExGZEJRVFJETEZOQlFYQkNSQ3hGUVVGSlJTeGhRVUV3UXl4VlFVRm9Ra1lzUlVGQlNVY3NWVUZCYVVZc1NVRkJNVVFzUTBGQlF5eFpRVUZoTEdWQlFXVm9RaXhSUVVGUllTeEZRVUZKU1N4aFFVRnpRbElzUjBGQlowTXNWMEZCYmtKSkxFVkJRVWxKTEZsQlFUSkNVaXhIUVVGaFNTeEZRVUZKU3l4UlFVRjVRaXhUUVVGbVRDeEZRVUZKU3l4UFFVTnFUeXhQUVVGUFRpeEZRVVZRUVN4RlFVRmpRU3hGUVVGWmFFSXNWMEZKT1VJc1QwRkJUeXhMUVdsQ1owSjFRaXhEUVVGdFFqZEdMRWxCUVZsSkxFVkRPVVI2UXl4VFFVRlRNRVlzUlVGQmVVSXpSeXhIUVVNdlF5eE5RVUZQTEVOQlFVTXNUVUZCVHl4VlFVRlZkVVlzVVVGQlVYWkdMRWxCUVdNc1JVRkJTU3hKUVVGTkxFbERRWEJFTEZOQlFWTTBSeXhGUVVGUGJFUXNSVUZCUzNwRkxFVkJRVTkzUlN4SFFVTnFReXhQUVVGUExFVkJRVkZETEVWQlFVc3NSVUZCVVhwRkxFVkJRVTkzUlN4SlEwUjBRaXhUUVVGVGIwUXNSVUZCYlVKRExFZEJRM3BETEU5QlFVOTRTU3hQUVVGUGFVVXNUMEZCVHl4SFEwUmtMRU5CUTB4VExFbEJRVXNzUlVGRFREZEVMRTFCUVU4c1JVRkRVRVFzVDBGQlVTeEZRVU5TUlN4TFFVRk5MRWRFU0hWRE1FZ3NSMFZHYkVNc1UwRkJVME1zUlVGQlowSTVTQ3hGUVVGUFowUXNSMEZETjBNc1QwRkJUMEVzUlVGQlMyNURMRkZCUVU4c1UwRkJWV3RJTEVWQlFWTTFTU3hIUVVWd1F5eFBRVVJCTkVrc1JVRkJVVFZKTEVkQlFVOWhMRVZCUTFJclNDeEpRVU5PTEVsRGQwWk1MRk5CUTBWeVJpeExRVUZOTEZGQlEwNURMRk5CUVZNc1JVRkRWRU1zVFVGQlR5eFBRVU5RUXl4SFFUbEZSaXhUUVVGbFF5eEhRVU5pTEVsQlFVbHJSaXhGUVVWQmFrWXNSVUZCVVVRc1JVRkJTME1zVFVGRFlrd3NSVUZCVDBrc1JVRkJTMG9zUzBGRFdtMUNMRVZCUVZWbUxFVkJRVXRsTEZGQlEyWnZSU3hGUVVGbGJFWXNSVUZCVFVVc1UwRkJVMmRDTEUxQlF6bENhVVVzUlVGQlowSnVSaXhGUVVGTmIwWXNZMEZCWTBRc1kwRkRjRU5GTEVWQlFXZENMMFFzUlVGQmFVSjBRaXhGUVVGTmFFTXNWMEZEZGtOelNDeEZRVUZQV0N4RlFVRjVRbFVzUjBGRmFFTkZMRVZCUkdFc1EwRkJRMjVKTEVWQlFVMUVMRWRCUVU5dlJ5eFJRVUZST0VJc1NVRkJhMElzUlVGRGJFTXNVMEZCVnl4UlFVVnNReXhIUVVGTFNDeEhRVUZwUWtNc1JVRkJkRUlzUTBGSlFTeEpRVUZKVEN4RlFYaENaMElzVTBGQmVVSlZMRVZCUVZONFJpeEhRVWwwUkN4UFFVRlBOa1VzUlVGQmMwTXNhVUpCU0RkRFZ5eEZRVUUyUWl4dFFrRkJXa0VzUlVGQmVVSkJMRVZCUVZGc1NpeFBRVUZQYVVVc1QwRkJUeXhIUVVGSlVDeEZRVUZOZVVZc1RVRkJUeXhEUVVNdlJYcElMRlZCUVZkblF5eEZRVUZOYUVNc1lVRkRZbmRJTEVkQlEydEVRU3hGUVVGVlZDeEZRVUZuUWxNc1JVRkJVMnhKTEVsQmIwSjJSVzlKTEVOQlFXZENOVVVzUlVGQlVUQkZMRkZCUVZONFJpeEhRVU5xUkRKR0xFVkJRVmx3UkN4RlFVRmpNa01zUjBGRE1VSlZMRVZCUVcxQ0xFMUJRVlJPTEVWQlFXVXNSVUZCVFd4SkxFVkJReTlDZVVrc1JVRkJiVUlzVFVGQlZGQXNSVUZCWlhCSkxFVkJRVk5ETEVWQlEyeERNa2tzUlVGQlZUbEdMRVZCUVUxNVJpeE5RVUZOTjBnc1ZVRkJWVEpJTEVkQlFVOTJSaXhGUVVGTmVVWXNUVUZCVFRkSUxGVkJRVlV3U0N4SFFVRlJTQ3hGUVVGalJ5eEhRVUZSZEVZc1JVRkJUWGxHTEUxQlFVMDVTQ3hQUVVGUE5FZ3NSMEZET1VkUkxFVkJRVmxhTEVWQlFXTkhMRWRCUVZGMFJpeEZRVUZOZVVZc1RVRkJUVGRJTEZWQlFWVXdTQ3hIUVVONFJGVXNSVUZCYjBKcVF5eEZRVUZuUW0xQ0xFZEJRM0JEWlN4RlFVRmhSQ3hGUVVFMlFpeE5RVUZVVml4RlFVRmxWU3hGUVVGclFrVXNZMEZCWjBJc1JVRkJTVVlzUlVGQmEwSkhMR0ZCUVdVc1JVRkJTU3hGUVVNelNFTXNSVUZCYjBKT0xFVkJRVlVzUlVGQlNVTXNSVUZCV1N4RlFVYzVRM0pGTEVWQlFVMXZSQ3hGUVVGall5eEhRVU53UW01RkxFVkJRVTEzUlN4RlFVRmhUaXhGUVVGVlNpeEhRVUZQVkN4RlFVRmpaU3hIUVVOc1JGRXNSVUZCVTBvc1JVRkJZU3hGUVVGSlRpeEZRVUZWU2l4SFFVRlBMRVZCUVVsaExFVkJReTlEUlN4RlFVRlRNVUlzUlVGQlQyeEVMRVZCUVVzeVJTeEZRVUZSTlVVc1IwRkZOMEk0UlN4RlFVRlhha0lzUlVGRFpuUkdMRVZCUVUxdlJpeGpRVUZqZWtZc1MwRkJVM05HTEVWQlFYZENMRWxCUVRCQ2MwSXNSMEZCV1VRc1JVRkJVWEpDTEVWQlFYTkNkVUlzWVVGQlpVWXNSVUZCVTBRc1JVRkJVWEJDTEV0Qk5rTjZTblpGTEU5Qk1VTkdMRk5CUVdkQ1F5eEhRVU5rTEVsQlFVbFlMRVZCUVZGWExFVkJRVTFZTEUxQlJXUjVSeXhGUVVSVk9VWXNSVUZCVFVjc1VVRkRWMnBETEZGQlF6TkNjVWNzVDBGQmIwTXNTVUZCY2tKMVFpeEZRVUU0UWl4elFrRkJkMEpCTEVWQlJYSkVMRTFCUVdoQ2RrSXNTVUZMZDBJc2FVSkJRV3BDUVN4SlFVTlVRU3hGUVVGbGJFWXNSVUZCVFVVc1UwRkJVM1pETEU5QlFVOHJTU3hqUVVGamVFSXNUVUZoYUVSMFF5eEZRVUZUTlVNc1JVRkJUVVVzVTBGQlUzWkRMRTlCUVZGMVNDeExRVkZ5UTJ4R0xFVkJRVTFGTEZOQlFWTm5RaXhOUVVGUlowVXNTVUZWZGtJM1JDeFRRVUZWTEVOQlFVTXNhVUpCUTFoelJpeHBRa0ZCYTBJc1EwRkJReXh2UWtOdVIwNHNVMEZCVTBNc1JVRkJZVFZKTEVkQlEyNURMRTlCUVU5QkxFVkJRVlYxUkN4TlFVRk5MRXRCUVVzc1IwTlJPVUlzU1VGQlNYTkdMRVZCUVdFc1EwRkRaamRHTEVsQlFVc3NUMEZEVERkRUxFMUJRVThzVDBGRFVFUXNUMEZCVVN4UFFVTlNSU3hMUVVGTkxGRkJaMEpFTEZOQlFWTXdTaXhGUVVGWmJrY3NSMEZETVVJc1NVRkJTVzlITEVWQlJVRndTaXhGUVVGVFowUXNSVUZCVFdoRUxFOUJRMlp4U2l4RlFVRmhja2NzUlVGQlRYRkhMRmRCUTI1Q2FFb3NSVUZCV1RKRExFVkJRVTB6UXl4VlFVTnNRbWxLTEVWQlFWbDBSeXhGUVVGTmMwY3NWVUZEYkVKRExFVkJRVlYyUnl4RlFVRk5kVWNzVVVGRGFFSnlSeXhGUVVGWFJpeEZRVUZOUlN4VFFVTnFRbk5ITEVWQlFXdENlRWNzUlVGQlRYZEhMR2RDUVVONFFrTXNSVUZCVjNwSExFVkJRVTE1Unl4VFFVTnFRa01zUlVGQlpURkhMRVZCUVUwd1J5eGhRVU55UWtNc1JVRkJWVE5ITEVWQlFVMHlSeXhSUVVOb1FrTXNSVUZCWVV3c1JVRkJVVGRGTEVWQlEzSkNRU3hQUVVGdFFpeEpRVUZtYTBZc1JVRkJkMElzUlVGQlNVRXNSVUZEYUVORExFVkJRV0ZPTEVWQlFWRTFSU3hGUVVOeVFrRXNUMEZCYlVJc1NVRkJabXRHTEVWQlFYZENMRVZCUVVsQkxFVkJSV2hEUXl4RlFVRm5ReXh0UWtGQmFrSktMRVZCUVRoQ1FTeEZRVUZoTEVOQlF6VkVhRVlzUlVGQlIwRXNSVUZEU0VNc1JVRkJSMEVzU1VGRFFTeERRVU5JUkN4RlFVRkhRU3hGUVVOSVF5eEZRVUZIUVN4SFFVZE1SQ3hGUVVGSmIwWXNSVUZCVFhCR0xFVkJRMVpETEVWQlFVbHRSaXhGUVVGTmJrWXNSVUZEVml4SlFVRkpiMFlzUlVGQlQxSXNSVUZCVVhSTExHVkJRV1VzUzBGRE9VSXJTeXhGUVVGUFZDeEZRVUZSZEVzc1pVRkJaU3hMUVVNNVFtZE1MRVZCUVZGNFN5eEZRVU5TZVVzc1JVRkJVU3hGUVVOU1F5eEZRVUZOTjBrc1QwRkZWaXhIUVVGSmJVa3NSVUZCVlN4RFFVTmFMRWxCUVVsMFJDeEZRVUZsUXl4RlFVRm5RbkJITEVkQlF5OUNiMHNzUlVGQllTeGxRVU5pUXl4RlFVRlpMR05CUlZwc1JTeEpRVUZwUWk5RkxFVkJRVlZ3UWl4SlFVZHRRaXhYUVVFMVF5eEZRVVpLYlVjc1JVRkJaVTRzUlVGQmJVSTNSaXhKUVVWRGEwUXNWVUZCYzBNc1lVRkJZa0VzU1VGRE1VUnJTQ3hGUVVGaExHVkJRMkpETEVWQlFWa3NaVUZMYUVKc1JTeEZRVUZsUVN4SFFVVllPVVlzU1VGQll5eEpRVUZSUVN4SlFVRmpXaXhIUVVGUldTeEpRVUZqWWl4SlFVRlZPRW9zU1VGQlkzcEtMRXRCUTNCR2NVc3NSVUZCVVROTExFVkJSMUp2Uml4SlFVWmpaMFlzUjBGQlYxRXNSVUZCU1Vjc1pVRkJhVUpJTEVWQlFVbEhMR1ZCUVdVM1JpeFBRVU5xUlRCQ0xFVkJRV0ZwUlN4SlFVTkZaaXhGUVVGWE5VVXNUMEZETVVKRkxFZEJRVXMyUlN4RlFVRnJRaXhIUVVGTExFZEJSekZDYmtvc1NVRkJZMW9zU1VGQlUxa3NTVUZCWXl4SFFVRlBRU3hKUVVGalpDeEhRVUZYSzBvc1NVRkJZM3BLTEV0QlEzSkdiMHNzUlVGQlVYcExMRVZCUjFKclJpeEpRVVpqYVVZc1IwRkJWMUVzUlVGQlNVY3NaVUZCYVVKSUxFVkJRVWxITEdWQlFXVTVSaXhOUVVOcVJUSkNMRVZCUVdGclJTeEpRVU5GYUVJc1JVRkJWemRGTEUxQlF6RkNSU3hIUVVGTE9FVXNSVUZCYTBJc1IwRkJTeXhIUVVsb1F5eEpRV2RDVFdVc1JVRm9Ra1pETEVWQlFXVTNUQ3hQUVVGUGFVVXNUMEZCVHl4RFFVTXZRazBzVTBGQlZVRXNSMEZEVkhWSExFZEJRVmxRTEVkQlJWaDFRaXhIUVVGNVFpeEpRVUZxUW1Zc1JVRnVSbVFzVTBGQk1rSjBTQ3hIUVVONlFpeEpRVUZKYzBNc1JVRkJTWFJETEVWQlFVdHpReXhGUVVOVVF5eEZRVUZKZGtNc1JVRkJTM1ZETEVWQlJWUXJSaXhGUVVSTmNFb3NUMEZEU1hGS0xHdENRVUZ2UWl4RlFVTnNReXhOUVVGUExFTkJRMHhxUnl4RlFVRkhWaXhGUVVGTlZTeEZRVUZKWjBjc1IwRkJUMEVzUjBGQlR5eEZRVU16UWk5R0xFVkJRVWRZTEVWQlFVMVhMRVZCUVVrclJpeEhRVUZQUVN4SFFVRlBMRWRCTkVWUFJTeERRVUZyUWl4RFFVTndSR3hITEVWQlFVZEJMRVZCUTBoRExFVkJRVWRCTEVsQlEwRXNRMEZEU0VRc1JVRkJSMEVzUlVGRFNFTXNSVUZCUjBFc1IwRk5UQ3hQUVVoQlJDeEZRVUZKSzBZc1JVRkJUUzlHTEVWQlExWkRMRVZCUVVrNFJpeEZRVUZOT1VZc1JVRkZUalpGTEVWQlIwczNTeXhQUVVGUGFVVXNUMEZCVHl4SFFVRkpORWdzU1VGQlpVUXNSVUZCYVVJc1NVRkJiVUpNTEVkQlFWTkdMRVZCUVU4c1NVRkJUU3hIUVVGSlR5eEZRVUZsVGl4SFFVRlRSaXhGUVVGUExFbEJRVTBzUjBGQlNWRXNSVUZCWlRkRUxGZEJRV0Y1UkN4RlFVRkpVU3hyUWtGQmIwSXNTVUZCVFN4RlFVRkpMR0ZCUVdWcVJ5eEZRVUZKTEU5QlFWTkRMRVZCUVVrc1RVRkJVU3hsUVVGcFFrUXNSVUZCU1N4UFFVRlRReXhGUVVGSkxGTkJRVlUwUml4SlFVYzFValZNTEU5QlFVOXBSU3hQUVVGUExFZEJRVWswU0N4SlFVRmxjRUlzUlVGQmEwSXNTVUZCYjBKakxFZEJRVk5HTEVWQlFVOXlSaXhGUVVGSkxFdEJRVThzUjBGQlNYbEZMRVZCUVdkQ1lTeEhRVUZUUml4RlFVRlBja1lzUlVGQlNTeExRVUZQTEVkQlFVa3dSU3hGUVVGblFqRkRMRlZCUVZrc1IwRkJTVEJETEVsQmQwUTVUQ3hWUVVORmNFZ3NTMEZCVFN4blFrRkRUa01zVTBGQlV5eEZRVU5VUXl4TlFVRlBMR05CUTFCRExFZEJla1JHTEZOQlFYVkNNRWtzUjBGRGNrSXNTVUZCU1hoSkxFVkJRVkYzU1N4RlFVRk5lRWtzVFVGRFpHTXNSVUZCVlRCSUxFVkJRVTB4U0N4UlFVTm9RakpJTEVWQlFYZENNMGdzUlVGQlVYRkhMR2RDUVVOb1EwRXNUMEZCTkVNc1NVRkJNVUp6UWl4SFFVRXdRMEVzUlVGRE5VUkRMRVZCUVc5Q05VZ3NSVUZCVVhOSExGTkJRelZDUVN4UFFVRnBReXhKUVVGMFFuTkNMRWRCUVhORFFTeEZRVU5xUkVNc1JVRkJkMEkzU0N4RlFVRlJkVWNzWVVGRGFFTkJMRTlCUVhsRExFbEJRVEZDYzBJc1IwRkJNRU5CTEVWQldYcEVVaXhGUVVGbExFTkJRMnBDYmtzc1ZVRkJWM05FTEVWQlFXbENkRUlzUlVGQlRXaERMRmRCUTJ4RGFVb3NWVUZCVjB3c1JVRkJZVFZITEVWQlFVMW9ReXhYUVVNNVFrd3NUMEZCVVhGRExFVkJRVTFGTEZOQlFWTjJReXhQUVVOMlFuRktMRmRCUVZsb1NDeEZRVUZOZVVZc1RVRkJUVGxJTEU5QlEzaENkMG9zWjBKQlFXbENRU3hGUVVOcVFrY3NVVUZCYjBNc1ZVRkJNMEowU0N4RlFVRk5ZeXhSUVVGUlF5eFZRVWRuUWl4TlFVRnlRMllzUlVGQlRXOUdMR05CUVdORUxHZENRVU4wUW01R0xFVkJRVTFMTEU5QlFVOHhReXhQUVVGVGNrSXNUMEZCVDJsRkxFOUJRVThzUjBGQlNWQXNSVUZCVFVzc1QwRkJUekZETEU5QlFWRnRTaXhGUVVGWmVFc3NUMEZCVDJsRkxFOUJRVThzUjBGQlNUUklMRVZCUVdNc1EwRkRka2RxUWl4UlFVRlRiRWdzUlVGQlRXOUdMR05CUVdORUxHTkJRemRDZEVVc1UwRkJWV0lzUlVGQlRXTXNVVUZCVVVNc1UwRkRlRUp4Unl4VFFVRlZRU3hGUVVOV1F5eGhRVUZqUVN4UFFVbGxMRTFCUVRkQ2NrZ3NSVUZCVFc5R0xHTkJRV05zUlN4UlFVTjBRbXhDTEVWQlFVMUxMRTlCUVU5aExFMUJRVkUxUlN4UFFVRlBhVVVzVDBGQlR5eEhRVUZKVUN4RlFVRk5TeXhQUVVGUFlTeE5RVUZQTkVZc1JVRkJXWGhMTEU5QlFVOXBSU3hQUVVGUExFZEJRVWswU0N4RlFVRmpMRU5CUTNKSGFrSXNVVUZCVTJ4SUxFVkJRVTF2Uml4alFVRmpiRVVzVFVGRE4wSk1MRk5CUVZVc1YwRkRWblZITEZWQlFWVXNSVUZEVmtNc1lVRkJZMEVzVDBGSmJFSnlTQ3hGUVVGTlRTeFhRVUZYTTBNc1QwRkJVM0pDTEU5QlFVOXBSU3hQUVVGUExFZEJRVWxRTEVWQlFVMU5MRmRCUVZjelF5eFBRVUZSTEVOQlEyNUZMSGRDUVVGNVFuRkRMRVZCUVUxb1F5eGhRVlZxUXpSTExFdEJRVTBzU1VOcVRGSXNTVUZCU1VNc1IwRkJWU3hEUVVOYVFTeFRRVUZUTEVkQmMwTllMRlZCUTBWc1NpeExRVUZOTEdsQ1FVTk9ReXhUUVVGVExFVkJRMVJETEUxQlFVOHNVVUZEVUVNc1IwRkJTU3hoUVVOS1dTeFBRWGhEUml4VFFVRm5RbGdzUjBGRFpDeEpRVUZKUXl4RlFVRlJSQ3hGUVVGTFF5eE5RVU5pT0Vrc1JVRkJWeTlKTEVWQlFVc3JTU3hUUVVOb1FtaEpMRVZCUVZWbUxFVkJRVXRsTEZGQlEyWnBTU3hGUVVGclFtcEpMRVZCUVZGclNTeFBRVU14UWtFc1QwRkJOa0lzU1VGQmNFSkVMRWRCUVc5RFFTeEZRVU0zUTBVc1JVRkJhMEp1U1N4RlFVRlJiMGtzVDBGRE1VSkJMRTlCUVRaQ0xFbEJRWEJDUkN4SFFVRnZRMEVzUlVGRE4wTm9TeXhGUVVGVFJpeEZRVUZWYVVJc1JVRkJUVVVzVTBGQlUzWkRMRkZCUTJ4RGQwd3NSVUZCWjBJc1IwRkJSMnhNTEU5QlFVOHJRaXhGUVVGTmJVb3NZMEZCWTNaTUxGVkJRVmR2UXl4RlFVRk5iVW9zWTBGQlkzaE1MRkZCV1dwR0xFOUJWa2x4VEN4SFFVTkdSeXhGUVVGamFFb3NVMEZCVVN4VFFVRlZhVW9zUjBGRE9VSkJMRVZCUVdGRExHbENRVUZwUWl4VFFVRlZVQ3hGUVVGVFVTeFBRVUZSVkN4UFFVbDZSRXNzUjBGRFJtcExMRVZCUVU5dlN5eHBRa0ZCYVVJc1UwRkJWVkFzUlVGQlUxRXNUMEZCVVZRc1NVRkhPVU1zVjBGRFJFY3NSMEZEUmtjc1JVRkJZMmhLTEZOQlFWRXNVMEZCVldsS0xFZEJRemxDUVN4RlFVRmhSeXh2UWtGQmIwSXNVMEZCVlZRc1JVRkJVMUVzVDBGQlVWUXNUMEZKTlVSTExFZEJRMFpxU3l4RlFVRlBjMHNzYjBKQlFXOUNMRk5CUVZWVUxFVkJRVk5STEU5QlFWRlVMRTFCV1RGRVJDeExRVUZOTEVsREwwTlNMRWxCUVVsWkxFZEJRVThzUTBGRFZIQk5MRXRCUVUwc1VVRkRUa1FzVFVGQlR5eFBRVU5RUkN4UFFVRlJMRTFCUTFJNFJDeEpRVUZMTEZWQlJWRXNVMEZCVTNsSkxFZEJRWEZDZWt3c1IwRkRNME1zVDBGQlQwRXNSVUZCVldoRUxGRkJRVkVzTUVKQlFUQkNMRk5CUVZVd1R5eEhRVU16UkN4UFFVRlBSaXhIUVVGTFJTeE5RMUpvUWl4SlFVRkpMRWRCUVU4c1EwRkRWRzVOTEUxQlFVOHNUVUZEVUVNc1NVRkJTeXhUUVVWUkxGTkJRVk50VFN4SFFVRTRRak5NTEVkQlEzQkVMRTlCUVU5QkxFVkJRVlZvUkN4UlFVRlJMR05CUVdNc1UwRkJWVEJQTEVkQlF5OURMRTlCUVU4c1IwRkJTMEVzVFVOTVJDeFRRVUZUUlN4SFFVRm5RalZMTEVkQlEzUkRMRWxCUVVrNFNTeEZRVUZOTDBrc1JVRkJWVU1zUjBGSGNFSXNUVUZCVHl4RFFVTk1Oa3NzVjBGSVpTOUNMRVZCUVVsblF5eFpRVWx1UWtNc1ZVRklZMnBETEVWQlFVbHJReXhoUTBSUUxGTkJRVk5ETEVkQlFXOUNjRXdzUjBGUk1VTXNUMEZCVHl0RExFVkJRWE5DTkVJc1JVRkJiVUl6UlN4SlFVRlZla0lzUzBGQlQzZE5MRWRCUVdkQ0wwc3NSMEZCVTJkTUxGZERWamRGTEZOQlFWTkxMRWRCUVdWeVRDeEhRVVZ5UXl4SlFVRkpjMHdzUlVGQmIwSXNSVUZCYVVKMFRDeEhRVU55UTNWTUxFVkJRVmRFTEVWQlFXdENReXhUUVVNM1FrTXNSVUZCV1VZc1JVRkJhMEpGTEZWQlF6bENReXhGUVVGWlNDeEZRVUZyUWtjc1ZVRkZiRU1zVFVGQlR5dzJRa0ZCTmtKRExFdEJRVXRJTEVWQlFWZEZMRVZCUVZsRUxFZERTbTVFTEZOQlFWTkhMRWRCUVdkQ2VFd3NSMEZEZEVNc1RVRkJTU3hEUVVGRExFOUJRVkVzVDBGQlVTeGhRVUZoZFVVc1VVRkJVVE5GTEVWQlFWbEpMRXRCUVZVc1JVRkZka1JCTEVWQlFVdEhMR05CUVdOelRDeExRVWQ0UW14TUxFVkJRV05RTEVsQlFWTnJUQ3hIUVVGbGJFd3NSMEZEYWtOQkxFVkJSMFozVEN4SFFVRm5RamRITEVWQlFXTXpSU3hKUTBoNFFpeFRRVUZUTUV3c1IwRkJhMEkzVEN4RlFVRlRPRXdzUjBGRGFrUXNTVUZCU1VNc1QwRkZVeXhKUVVGVVJDeEpRVU5HUVN4RlFVRlBMRWxCUjFRc1NVRkJTWFpDTEVWQlFXVnZRaXhIUVVGblFqTk1MRWRCUXk5Q1owMHNSVUZCVTNwQ0xFdEJRWEZGTEU5QlFXeEVkMElzUlVGQmQwSXZUQ3hGUVVGUlRTeHZRa0ZCZVVJc1JVRkJVM2xNTEVWQlFYTkNTQ3hOUVVOd1NETkRMRVZCUVUwdlNTeEZRVUZWY1Vzc1IwRkRhRUl3UWl4RlFVRlRSQ3hGUVVGVExFTkJRVU12UXl4SFFVRkxOMG9zVDBGQlR6WktMRVZCUVVsSExHZENRVUZyUWl4SFFVRkphVU1zUjBGQlpXUXNSMEZCWjBKQkxFVkJRV1VzU1VGQlRVRXNSVUZETjBjeVFpeEZRVUZqU2l4RlFVRkxNVTBzVDBGQlR6Wk5MRWRCUXpsQ0xFOUJRVTlFTEVWQlFWTkZMRVZCUTJoQ1FTeEZRVUZaT1Uwc1QwRkJUM2xOTEVkQlFXdENMMGNzUlVGQlkyMUlMRXREZUVKMFF5eFRRVUZUUlN4SFFVRnBRbXhLTEVkQlEzWkRMRTlCUVU5NFJpeFBRVUZQYVVVc1QwRkJUeXhIUVVGSmRVSXNSVUZCVFN4RFFVTTNRakZGTEV0QlFVMHdSU3hGUVVGTFR5eEZRVU5ZY2tJc1NVRkJTMk1zUlVGQlMxRXNSVUZEVm01R0xFMUJRVTh5UlN4RlFVRkxUeXhGUVVGSlVDeEZRVUZMU3l4TlFVTnlRbXBHTEU5QlFWRTBSU3hGUVVGTFVTeEZRVUZKVWl4RlFVRkxUU3hUUTNWQ01VSXNVMEZCVXpaSkxFZEJRVEpDY0Uwc1JVRkJVM0ZOTEVkQlF6TkRMRTlCUVU5QkxFbEJRVzFDZUU0c1JVRkJWM05PTEVkRE1VSjRRaXhUUVVGNVFtNU5MRWRCUTNSRExFbEJRVWxwU2l4RlFVRk5MMGtzUlVGQlZVWXNSMEZEYUVKelRTeEZRVUZQTTBnc1JVRkJiVUl6UlN4SFFVTXhRbTlLTEVWQlFXbENTQ3hGUVVGSlJ5eGxRVU55UWpsR0xFVkJRVkZuU2l4RlFVRkxhRVlzV1VGRFlpOUVMRVZCUVZNclNTeEZRVUZMYWtZc1lVRkRaRGRFTEVWQlFVa3NSVUZEU2tNc1JVRkJTU3hGUVhWQ1VpeFBRV3BDU1RKR0xFbEJRMFk1Uml4RlFVRlJPRVlzUlVGQlpUbEdMRTFCUTNaQ1F5eEZRVUZUTmtZc1JVRkJaVGRHTEU5QlUyNUNMR2xEUVVGcFEyMUpMRXRCUVV0MFJ5eFZRVUZWUXl4aFFVTnVSRGRDTEVWQlFVazBSaXhGUVVGbGRrWXNWMEZEYmtKS0xFVkJRVWt5Uml4RlFVRmxkRVlzV1VGSmFFSXNRMEZEVEZJc1RVRkJUMEVzUlVGRFVFTXNUMEZCVVVFc1JVRkRVa01zUlVGQlIwRXNSVUZCU1RSSUxFZEJRVzlDY0V3c1IwRkRNMEo1UkN4RlFVRkhRU3hIUkZKcFJEaEpMRU5CUVdkQ2RrMHNTVUZCV1ZFc1JVRkJWVFpNTEVkQlpEbEdMRk5CUVc5RGNrMHNSMEZEYkVNc1NVRkJTV2xFTEVWQlFVOUdMRVZCUVhOQ0wwTXNSMEZUYWtNc1QwRlNRV2xFTEVWQlFVdGtMRWxCUVUxakxFVkJRVXRrTEVsQlFVMXVReXhGUVVGUmQwMHNWVUZET1VKMlNpeEZRVUZMTVVVc1MwRkJUekJGTEVWQlFVc3hSU3hMUVVGUGVVSXNSVUZCVVhsTkxGZEJRMmhEZUVvc1JVRkJTelZGTEU5QlFWTTBSU3hGUVVGTFpDeEpRVUZOYmtNc1JVRkJVWEZJTEdGQlEycERjRVVzUlVGQlN6TkZMRTFCUVZFeVJTeEZRVUZMTVVVc1MwRkJUM2xDTEVWQlFWRnpTQ3haUVVOcVEzSkZMRVZCUVV0TExFMUJRVkYwUkN4RlFVRlJjMGdzV1VGRGNrSnlSU3hGUVVGTFRTeFBRVUZUZGtRc1JVRkJVWEZJTEdGQlEzUkNjRVVzUlVGQlMwOHNSVUZCU1ZBc1JVRkJTekZGTEV0QlEyUXdSU3hGUVVGTFVTeEZRVUZKVWl4RlFVRkxaQ3hKUVVOUVl5eEZRVWwxUjNsS0xFTkJRVEpDVEN4SFFVRnJRa1lzUjBWMFFqbEpMRk5CUVhsQ2JrMHNSMEZEZEVNc1NVRkJTU3RNTEVWQlJVRlBMRVZCUVU4elNDeEZRVUZ0UWpORkxFZEJRekZDTWswc1JVRkJXVFZDTEVkQlFXZENMMHNzUjBGRE5VSTBUQ3hGUVVFd1JDeFBRVUZzUkVjc1JVRkJkMEl2VEN4RlFVRlJUU3h2UWtGQmVVSXNSVUZCVTNsTUxFVkJRWE5DU0N4TFFVTm9SM1JKTEVWQlFWRXNSVUZCU1dkS0xFVkJRVXROTEZsQlFXRk9MRVZCUVV0b1JpeFpRVUZoYzBVc1JVRkJUMEVzUlVGQlMyZENMRmxCUVdNc1JVRkJSMmhDTEVWQlFVOUJMRVZCUVV0MFJTeFpRVUZqTEVkQlEzWkhMMFFzUlVGQlV5eEZRVUZKSzBrc1JVRkJTMDhzWVVGQlkxQXNSVUZCUzJwR0xHRkJRV04xUlN4RlFVRlBRU3hGUVVGTGFVSXNZVUZCWlN4RlFVRkhha0lzUlVGQlQwRXNSVUZCUzNaRkxHRkJRV1VzUjBGRE5VYzNSQ3hIUVVGTGJVb3NSVUZCVlROQ0xGZEJRV0ZKTEVkQlFXOUNjRXdzUjBGRGFFUjVSQ3hIUVVGTGEwb3NSVUZCVlhwQ0xGVkJUVzVDTEUxQlNtbEVMRkZCUVRkRExFVkJRV2xDVlN4SFFVRlJWU3hIUVVGTlVTeFpRVU5xUTNSS0xFZEJRVXNzUlVGQlNUaEpMRVZCUVV0b1JpeFpRVUZoYzBVc1JVRkJUMEVzUlVGQlMzUkZMRmxCUVdNc1IwRkJTMmhGTEVkQlIzSkVMRU5CUTB4QkxFMUJRVTlCTEVWQlExQkRMRTlCUVZGQkxFVkJRMUpETEVWQlFVZEJMRVZCUTBoRExFVkJRVWRCTEVkR1IzVkxjMG9zUTBGQlowSndTU3hGUVVGdFFqTkZMRXRIZWtKc1RTeFRRVUZUWjA0c1IwRkJaVGxNTEVkQlEzSkRMRWxCVDBsdFNDeEZRVkJCZEVvc1JVRkJXVzFETEVWQlFVdHVReXhWUVVOcVFtbENMRVZCUVZWclFpeEZRVUZMYkVJc1VVRkRabUlzUlVGQldTdENMRVZCUVVzdlFpeFZRVU5xUW5GSUxFVkJRV2RDY2tnc1JVRkJXWE5FTEVWQlFXbENkRVFzUjBGQllTeExRVU14UkdsS0xFVkJRVmxxU2l4RlFVRlpORWtzUlVGQllUVkpMRWRCUVdFc1MwRkRiRVE0VGl4RlFVRlZiRThzUlVGQlZYbEZMRVZCUVVsNlJTeEZRVUZWZFVVc1RVRkJVU3hGUVVGSmRFUXNSVUZCVVhORUxFMUJRVkVzUlVGRE9VUTBTaXhGUVVGVmJrOHNSVUZCVlRCRkxFVkJRVWt4UlN4RlFVRlZkMFVzVDBGQlV5eEZRVUZKZGtRc1JVRkJVWFZFTEU5QlFWTXNSVUZIY0VVc1QwRkJVV2xFTEVkQlEwNHNTMEZCU3l4RlFVTklOa0lzUlVGQlZTeERRVU5TTjBVc1JVRkJSM2xLTEVWQlEwaDRTaXhGUVVGSE1VVXNSVUZCVlRCRkxFVkJRVWw2UkN4RlFVRlJkVVFzVVVGRk0wSXNUVUZGUml4TFFVRkxiRVlzUlVGRFNHZExMRVZCUVZVc1EwRkRVamRGTEVWQlFVZDVTaXhGUVVOSWVFb3NSVUZCUnpGRkxFVkJRVlV3UlN4RlFVRkpNVVVzUlVGQlZYZEZMRkZCUlRkQ0xFMUJSVVlzUzBGQlMycEdMRVZCUTBnclNpeEZRVUZWTEVOQlExSTNSU3hGUVVGSGVrVXNSVUZCVlhsRkxFVkJRVWw2UlN4RlFVRlZkVVVzVFVGRE0wSkhMRVZCUVVkNVNpeEhRVVZNTEUxQlJVWXNTMEZCU3pOUExFVkJRMGc0U2l4RlFVRlZMRU5CUTFJM1JTeEZRVUZIZWtVc1JVRkJWWGxGTEVWQlFVbDRSQ3hGUVVGUmMwUXNUVUZEZWtKSExFVkJRVWQ1U2l4SFFVVk1MRTFCUlVZc1VVRkRSVGRGTEVWQlFWVXNRMEZEVWpkRkxFVkJRVWQ2UlN4RlFVRlZlVVVzUlVGRFlrTXNSVUZCUnpGRkxFVkJRVlV3UlN4SFFVbHVRaXhKUVVGSk1Fb3NSVUZCVnpOSExFVkJRV2RDVml4RlFVRjVRbFVzUjBGQmFVSXNTMEZGZWtVc1IwRkJaMElzVFVGQldqSkhMRVZCUVd0Q0xFTkJRM0JDTEVsQlFVbDZSeXhGUVVGdFFpeE5RVUZpZVVjc1JVRkJiVUlzVTBGQlZ5eFJRVVY0UXl4UFFVRlJMMFVzUjBGRFRpeExRVUZMTVVvc1JVRkRTREpLTEVWQlFWRTRSU3hIUVVGWk9VVXNSVUZCVVRoRkxFbEJRV0Z3VHl4RlFVRlZNa2dzUjBGQlR5eEZRVUZKTVVjc1JVRkJVVEJITEVkQlFVOHNSMEZETjBVc1RVRkZSaXhMUVVGTEwwZ3NSVUZEU0RCS0xFVkJRVkU0UlN4SFFVRlpPVVVzUlVGQlVUaEZMRWxCUVdGd1R5eEZRVUZWTWtnc1IwRkJUeXhGUVVGSk1VY3NSVUZCVVRCSExFZEJRVThzU1VGUGJrWXNUMEZCVHpKQ0xFVkRNVVJOTEZOQlFWTXJSU3hIUVVGbGFrMHNSVUZCVDJNc1VVRkROVUlzU1VGQldrRXNTVUZEUmtFc1JVRkJWU3hKUVVkYUxFbEJRVWx2VEN4RlFVRlhjRXdzUlVGRFdIRk1MRVZCUVhGQ1JDeEZRVUZUYkU4c1ZVRkRPVUpCTEU5QlFXMURMRWxCUVhaQ2JVOHNSVUZCWjBOdVRTeEZRVUZOYUVNc1ZVRkJXVzFQTEVWQlF6bEVReXhGUVVGdlFrWXNSVUZCVTBjc1UwRkROMEpCTEU5QlFXbERMRWxCUVhSQ1JDeEZRVUVyUWpOUExFVkJRV3RDTWs4c1JVRkROVVJGTEVWQlFYZENTaXhGUVVGVFN5eGhRVU5xUTBFc1QwRkJlVU1zU1VGQk1VSkVMRVZCUVcxRE5VOHNSVUZCVnpSUExFVkJRemRFUlN4RlFVRjNRazRzUlVGQlUwOHNaVUZEYWtOQkxFOUJRVEpETEVsQlFURkNSQ3hGUVVGdFF6ZFBMRVZCUVZNMlR5eEZRVU0zUkVVc1JVRkJkVUpTTEVWQlFWTlRMRmxCUTJoRFFTeFBRVUYxUXl4SlFVRjZRa1FzUjBGQk1FTkJMRVZCUTNoRVJTeEZRVUZ0UWxZc1JVRkJVekZITEZGQlF6VkNRU3hQUVVFclFpeEpRVUZ5UW05SUxFVkJRVGhDTEVWQlFVbEJMRVZCUXpWRE9VZ3NSVUZCWjBKRUxFVkJRWE5ETEdsQ1FVRmFWeXhGUVVGMVFrRXNSVUZCVlZRc1JVRkJaMEpUTEVWQlFWTnNTU3hKUVVOd1IzVlFMRVZCUVdGS0xFbEJRVzFDT1U4c1JVRkJVME1zUlVGQldVUXNSVUZEY2tSeFNpeEZRVUZoYUVnc1JVRkJUWGxHTEUxQlFVMDVTQ3hQUVVONlFtdENMRVZCUVZWdFFpeEZRVUZOUlN4VFFVRlRlVTBzUlVGQlkwVXNSVUZCWVVvc1IwRkRjRVJMTEVWS2IwSlRMRk5CUVhsQ2FrOHNSVUZCVTNkT0xFVkJRVlZGTEVkQlEzcEVMRWxCUVVsUkxFVkJRVzFETEc5Q1FVRmlWaXhGUVd4Q05VSXNVMEZCTkVKNFRpeEhRVU14UWl4SlFVRkpjRUlzUlVGQmEwSnBUaXhIUVVGclFpOUhMRVZCUVdNNVJTeEpRVVZzUkcxUExFVkJSRzlDTEVOQlFVTXNWMEZCV1N4VFFVRlRla29zVVVGQlVTeEZRVUZwUWpGRkxFZEJRVk5uUXl4WFFVRmhMRWRCUTI1RWRFSXNSVUZCWTFZc1IwRkJWMnRHTEVWQlFXZENiRVlzUjBGQlYwRXNSVUZGT1VZc1QwRkJTMUVzUlVGQlZUSk9MRWRCUzFKMlVDeEZRVUZuUW1kSUxGRkJRVThzVTBGQlZYbEhMRWRCUTNSRExFOUJRVTgzVEN4RlFVRlZOa3dzU1VGQmJVSjBTU3hGUVVGVGMwa3NSVUZCWjBJNFFpeEpRVUZ0UkN4VFFVRm9RM0JQTEVWQlFWbHpUU3hOUVV4eVJpeEhRVmxyUkN0Q0xFTkJRVzFDY0U4c1IwRkJWeXhIUVVGSFdpeFBRVUZQYjA4c1IwRkRMMFkxVHl4RlFVRnJRaXhIUVVGSFVTeFBRVUZQT0U4c1JVRkJjVUlzUTBGQlExSXNTVUZEYkVSWExFVkJRWE5DZWxBc1JVRkJaMElzUjBGRGRFTXdVQ3hGUVVGbE1WQXNSVUZCWjBKTExGRkJRVThzVTBGQlZYTlFMRVZCUVZOc1F5eEhRVU16UkN4SlFVRkpjRW9zUlVGQlQyMUtMRWRCUVRKQ2NFMHNSVUZCVTNGTkxFZEJTeTlETEU5QlNrRnJReXhGUVVGUmNFMHNTVUZCVFN4RlFVRkpZeXhGUVVGTFpDeEpRVUZMYjAwc1JVRkJVWEJOTEV0QlEzQkRiMDBzUlVGQlVXcFJMRTFCUVZFc1JVRkJTVEpGTEVWQlFVc3pSU3hOUVVGUGFWRXNSVUZCVVdwUkxFOUJRM2hEYVZFc1JVRkJVV3hSTEU5QlFWTXNSVUZCU1RSRkxFVkJRVXMxUlN4UFFVRlJhMUVzUlVGQlVXeFJMRkZCUXpGRGExRXNSVUZCVVdoUkxFdEJRVThzUlVGQlNUQkZMRVZCUVVzeFJTeExRVUZOWjFFc1JVRkJVV2hSTEUxQlF5OUNaMUVzU1VGRFRtNURMRWRCUVRKQ2NFMHNSVUZCVTNGUExFbEJTM1pETEU5QlNrRkRMRVZCUVdGb1RDeE5RVUZSWjB3c1JVRkJZV2hSTEUxQlFWRm5VU3hGUVVGaEwxQXNTMEZEZGtRclVDeEZRVUZoTDBzc1QwRkJVeXRMTEVWQlFXRnFVU3hQUVVGVGFWRXNSVUZCWVc1TkxFbEJRM3BFYlUwc1JVRkJZVGxMTEVWQlFVazRTeXhGUVVGaEwxQXNTMEZET1VJclVDeEZRVUZoTjBzc1JVRkJTVFpMTEVWQlFXRnVUU3hKUVVOMlFtMU5MRVZKY0VOclFrVXNRMEZCWjBKb1R5eEZRVUZWVWl4SFFVRlhRU3hGUVVGVlFTeEZRVUZSZVU4c1owSkJRV3RDT1Vvc1JVRkJiVUo0UkN4RlFVRk5SU3hUUVVGVGRrTXNVVUZCVXpCUExFVkJRVlZGTEVkQlEyNUtaMElzUlVGQmMwSXpUQ3hGUVVGelFqVkNMRVZCUVUxRkxGTkJRVk4wUXl4WFFVTXpSSFZJTEVWQlFXZENNRWNzUjBGQlpTeERRVU5xUTJwUExGVkJRVmN5VUN4RlFVTllNVThzVVVGQlUyMUpMRVZCUTFScVJ5eFRRVUZWTEZkQlExWXZReXhWUVVGWFFTeEpRVVZVZDFBc1JVRkJiVUo0UXl4SFFVRnBRakZQTEU5QlFVOXBSU3hQUVVGUExFZEJRVWw1Unl4RlFVRlpOMElzU1VGRGJFVnpTU3hGUVVGdlFtaENMRWxCUVcxQ09VOHNSVUZCVXpaUUxFVkJRVzFDUkN4RlFVZHVSVWNzUlVGQmEwSXNRMEZEY0VJeFRTeEpRVUZMT0V3c1JVRkJiVUk1VEN4SlFVRk5lVTBzUlVGQmEwSjZUU3hKUVVGTk9FUXNSVUZCWXpsRUxFbEJRM0JGT1VRc1QwRkJVWFZSTEVWQlFXdENkbEVzVDBGQlV6UlFMRVZCUVcxQ05WQXNUMEZCVXpSSUxFVkJRV00xU0N4UFFVTTNSVVVzUzBGQlRUQlFMRVZCUVcxQ01WQXNTMEZCVDNGUkxFVkJRV3RDY2xFc1MwRkJUekJJTEVWQlFXTXhTQ3hMUVVOMlJVUXNUVUZCVDNOUkxFVkJRV3RDZEZFc1RVRkJVVEpRTEVWQlFXMUNNMUFzVFVGQlVUSklMRVZCUVdNelNDeFBRVVY0UlhkUkxFVkJRV0V6VGl4RlFVRk5iMFlzWTBGQlkydENMRTlCUlhKRExFZEJRVWx0Unl4SlFVRnRRamxQTEVkQlFWVm5VU3hGUVVGWkxFTkJRek5ETEVsQlFVbHlTQ3hGUVVGVGNVZ3NSVUZCVnpOUUxFZEJRM2hDTVVJc1QwRkJUekpFTEV0QlFVdDVUaXhIUVVGcFFuWk9MRk5CUVZFc1UwRkJWUzlFTEVkQlF6ZERMRWxCUVVsM1VpeEZRVUZYTEVOQlFVTjZVU3hGUVVGUFJDeEhRVUZSY1Vjc1VVRkJVVzVJTEVsQlFWRXNSVUZCU1N4SFFVRkxMRVZCUTNCRWEwb3NSVUZCVHl4RFFVRkRMRVZCUVV0d1NTeEhRVUZSY1Vjc1VVRkJVVzVJTEVsQlFWRXNSVUZCU1N4SlFVRk5MRWxCUTI1RWMxSXNSVUZCWjBKMFVpeEpRVUZSYTBzc1JVRkJUMmhDTEVkQlFWRnpTU3hMUVVrelF5eFBRVUZQUml4RlF6UkZWQ3hWUVVORkwwNHNTMEZCVFN4UFFVTk9ReXhUUVVGVExFVkJRMVJETEUxQlFVOHNUMEZEVUVNc1IwRTFTRVlzVTBGQlkwTXNSMEZEV2l4SlFVRkpReXhGUVVGUlJDeEZRVUZMUXl4TlFVTmlZeXhGUVVGVlppeEZRVUZMWlN4UlFVTm1ia0lzUlVGQlQwa3NSVUZCUzBvc1MwRkZhRUlzU1VGQlNVc3NSVUZCVFc5R0xHTkJRV042Uml4SFFVRk5hMDhzVFVGQk9VSXNRMEZ2UTBFc1NVRm9RMEVzU1VGQlNVTXNSVUZCYjBKb1RpeEZRVUZSYTB3c1UwRkROVUlyUWl4UFFVRnpReXhKUVVGMFFrUXNSMEZCYzBOQkxFVkJRM1JFUlN4RlFVRnRRbXhPTEVWQlFWRnRUaXhSUVVNelFrTXNUMEZCYjBNc1NVRkJja0pHTEVkQlFYRkRRU3hGUVVOd1JFY3NSVUZCT0VKeVRpeEZRVUZSYzA0c2JVSkJRM1JETlVrc1JVRkJWVEZGTEVWQlFWRXdSU3hSUVVOc1FqWkhMRVZCUVZkMlRDeEZRVUZSZFV3c1UwRkRia0pGTEVWQlFXVjZUQ3hGUVVGUmVVd3NZVUZEZGtKSkxFVkJRV00zVEN4RlFVRlJOa3dzV1VGRGRFSXdRaXhGUVVGM1FuWk9MRVZCUVZGM1RpeGxRVU5vUTBFc1QwRkJNa01zU1VGQk1VSkVMRWRCUVRCRFFTeEZRVU16UkVVc1JVRkJkMEo2VGl4RlFVRlJlVTRzYzBKQlEyaERReXhGUVVGeFFuaFBMRVZCUVUxakxGRkJRVkU1UXl4VlFVTnVRM0ZJTEVWQlFXZENMMFFzUlVGQmFVSnJUaXhIUVVWcVEwb3NSVUZCY1VKRUxFbEJSRWc1U1N4SlFVRnJRbTFLTEVkQlEzRkRSaXhGUVdwREwwVXNVMEZCZFVOMFVTeEhRVU55UXl4SFFVRkpjMFFzUlVGQmFVSjBSQ3hMUVVGbFdDeEZRVU5zUXl4TlFVRlBMRWRCUjFRc1NVRkJTVzlTTEVWQlFXOUNhRVlzUjBGQmNVSjZUQ3hIUVVNM1F5eE5RVUZQTEVOQlFVTXlUQ3hIUVVFNFFqTk1MRWRCUVZsNVVTeEZRVUZ0UWpsRkxFZEJRVGhDT0VVc1NVRXlRbmREUXl4RFFVRTRRa1lzUjBGQk0wVXNRMEZCUXk5RkxFZEJRWEZDSzBVc1MwRkRhRWhITEVWQlFXRXNRMEZCUTBnc1IwRkJiMEoyVVN4UFFVRlBiVkVzUjBGQmIwSjBVU3hSUVVGUExGTkJRVlZETEVWQlFVdERMRWRCUTNKR0xFOUJRVTlFTEVWQlFVbEZMRTlCUVU5eFJDeEZRVUZwUW5SRUxFdEJRV1ZZTEVWRGRrTjJReXhUUVVFNFFqSkRMRVZCUVU5akxGRkJRMnhETEVsQlFWcEJMRWxCUTBaQkxFVkJRVlVzU1VGSFdpeEpRVUZKYjB3c1JVRkJWM0JNTEVWQlExZzVReXhGUVVGWmEwOHNSVUZCVTJ4UExGVkJRM0pDY1U4c1JVRkJWMGdzUlVGQlUwY3NVMEZEY0VKRkxFVkJRV1ZNTEVWQlFWTkxMR0ZCUTNoQ0wwY3NSVUZCVlRCSExFVkJRVk14Unl4UlFVTnVRamhKTEVWQlFXbENjRU1zUlVGQlUyOURMR1ZCUXpGQ1RTeEZRVUYzUWpGRExFVkJRVk54UXl4elFrRkRha05CTEU5QlFXdEVMRWxCUVRGQ1N5eEZRVUZ0UXl4RlFVRm5Ra0VzUlVGRE0wVXpTQ3hGUVVGWlRDeEZRVUZoTlVrc1IwRkRla0l5VVN4RlFVRmhNVWdzUlVGQldYRklMRVZCUVdsQ2VsRXNSVUZCYzBKQkxFVkJRVzlDTkVjc1VVRkJUeXhUUVVGVmVrY3NSMEZEZGtjc1QwRkJUelJKTEVWQlFXRTFTU3hMUVVGbGFVb3NTMEZEYUVNelNpeEZRVU5FZFZJc1JVRkJiMEpHTEVWQlFWZHNTeXhSUVVGUExGTkJRVlY2Unl4SFFVTnNSQ3hQUVVGUGRWRXNSVUZCYzBKb1RDeFJRVUZSZGtZc1NVRkJZeXhMUVVkd1FpeEpRVUUzUWpaUkxFVkJRV3RDUXl4VFFVTndRa1FzUlVGQmIwSkdMRWRCVVhSQ0xFbEJRVWxKTEVWQlFWbEdMRVZCUVd0Q0wxRXNVVUZCVHl4VFFVRlZReXhGUVVGTFF5eEhRVTkwUkN4UFFVNUJSQ3hGUVVGSlF5eEhRVUZoYVU4c1IwRkJaV3BOTEVWQlFVOHNRMEZEY2tOb1F5eFZRVUZYUVN4RlFVTlljVThzVTBGQlZVRXNSVUZEVmtVc1lVRkJZMEVzUlVGRFpDOUhMRkZCUVZOQkxFbEJRMUpzUlN4RlFVRnBRblJFTEVsQlEySkVMRWxCUTA0c1NVRkRTQ3hQUVVGUGVrSXNUMEZCVHpKRUxFdEJRVXM0VHl4SFFVRlhReXhOUVVGTExGTkJRVlZETEVWQlFVZERMRWRCUXpsRExFOUJRVTlJTEVWQlFWVkZMRWRCUVV0R0xFVkJRVlZITEUxRVJIbENReXhEUVVGeFFtNVFMRVZCUVU4c1EwRkRia1pvUXl4VlFVRlhRU3hGUVVOWWNVOHNVMEZCVlVFc1JVRkRWa1VzWVVGQlkwRXNSVUZEWkM5SExGRkJRVk5CTEVWQlExUTRTU3hsUVVGblFrRXNSVUZEYUVKRExITkNRVUYxUWtFc1NVRkRjRUoyVVN4TFFVTktMRWxCUTBOdlVpeEZRVUZuUW5CUUxFVkJRVTE1Uml4TlFVRk5OMGdzVlVGRE5VSnZTaXhGUVVGaGFFZ3NSVUZCVFhsR0xFMUJRVTA1U0N4UFFVTjZRakJTTEVWQlFWa3NTVUZCU1VNc1NVRkRhRUpETEVkQlFYRkNMRVZCUTNKQ1F5eEZRVUYzUW1Jc1JVRkJWeXhIUVVVNVFtTXNSVUZCU1N4RlFVRkhRU3hGUVVGSlpDeEZRVUZYUnl4UFFVRlJWeXhKUVVGTExFTkJRekZETEVsQlFVbDZVaXhGUVVGWk1sRXNSVUZCVjJNc1IwRkZka0pETEVWQlFXbENjRThzUlVGQmFVSjBSQ3hIUVVWc1F6SlNMRVZCUVcxQ0wwa3NSVUZCWVRWSkxFdEJRV1ZVTEVWQlF5OURjVk1zUlVGQllTeERRVUZETEVWQlFVc3hVeXhIUVVGUmNVY3NVVUZCVVcxTkxFbEJRVzFDTEVWQlEzUkVia3NzUlVGQlRYRkxMRVZCUVdFc1VVRkJWU3hUUVVNM1FuaEdMRVZCUVZjMlFpeEhRVUZsYWswc1JVRkJUeXhEUVVOdVEyaERMRlZCUVZkQkxFVkJRMWh4VHl4VFFVRlZRU3hGUVVOV1JTeGhRVUZqUVN4RlFVTmtTU3haUVVGaFFTeEZRVU5pYmtnc1VVRkJVMEVzU1VGRlVIRkxMRVZCUVc5Q1JDeEZRVUZoUkN4RlFVRnRRbmhUTEVWQlFWRkRMRVZCUVU5MVV5eEZRVUZ0UW5wVExFVkJRVk1zUlVGRkwwWnJVeXhGUVVGak4wb3NSMEZCVDNsQ0xFVkJRVmQ2UWl4TFFVTnNRM05MTEVWQlFXOUNjRWNzUjBGQmNVSnZSeXhKUVVjelF5eEpRVUZKUXl4RlFVRnRRbkpITEVkQlFYRkNiMGNzUjBGRGVFTkZMRVZCUVZNc1IwRlZZaXhIUVZKSmFFTXNSMEZEUm1kRExFVkJRVTlETEV0QlFVczFSaXhGUVVGVGMwWXNTVUZCYlVJc1IwRkhkRU40UWl4SFFVTkdOa0lzUlVGQlQwTXNTMEZCU3pWR0xFVkJRVk41Uml4SlFVRnpRaXhGUVVGSGVrWXNSVUZCVXpCR0xFbEJRWEZDTEVkQlJ6RkZReXhGUVVGUFJTeFBRVUZOTEZOQlFWVkRMRWRCUTNwQ0xFOUJRVTlCTEV0QlEwd3NRMEZEUmxZc1JVRkJkMEo0VWl4RlFVTjRRblZTTEVkQlFYRkNMRVZCUTNKQ0xFMUJSMFpHTEVWQlFWVmpMRWxCUVVsdVV5eEZRVUZYSzFJc1IwRkhNMElzUjBGQlNWSXNSVUZ4UWtZc1NVRnVRa0VzU1VGRlNXRXNSVUZCVVN4VFFVRmxReXhIUVVONlFpeEpRVUZKUXl4RlFVRnRRak5DTEVWQlFWYzBRaXhOUVVGTExGTkJRVlYyVXl4SFFVTXZReXhKUVVGSksxSXNSVUZCVTFZc1JVRkJWVFZUTEVsQlFVbDFRaXhIUVVVelFpeEhRVUZKSzFJc1JVRkRSaXhQUVVGUFFTeEZRVUZQVXl4TlFVRk5MRVZCUVVkSUxFZEJRVWxLTEU5QlFVMHNVMEZCVlVNc1IwRkRla01zVDBGQlQwRXNVVUZMWWl4SFFVRkpTU3hGUVVWR0xFOUJSRUZrTEVWQlFYZENZeXhGUVVOcVFpeFRRVWxHUkN4RlFXNUNXUzlDTEVWQlFXbENMRVZCUVVrc1JVRnRRbG9yUWl4RlFVRkxMRWRCUjNCQ0xGVkJSa1pFTEVWQlFVMURMRWRCUkcxQ1FTeExRVTl3UTNKUkxFVkJRVTFvUXl4WlFVRmpkMUlzU1VGRGRFSjRVQ3hGUVVGTmIwWXNZMEZCWTNwR0xFZEJRVTFyVHl4UFFVRlJMRVZCUTJ4RE4wNHNSVUZCVFdoRExGVkJRVmwzVWl4RlFVTnNRbmhRTEVWQlFVMTVVU3hQUVVGUkxFdEJWV2hDT1Vvc2FVSkJRV3RDTEVOQlFVTXNWVUZEYmtKcFF5eExRVUZOTEVOQlEwcHBSaXhQUVVGUExFbEZOMGxZTEZOQlFWTTJReXhIUVVGbGRFY3NSVUZCVlhSSkxFVkJRVTAyVHl4SFFWRjBReXhaUVZCNVFpeEpRVUZ5UWtFc1NVRkRSa0VzUlVGQmJVSXNRMEZEYWtKMFR5eEZRVUZITEVWQlEwaERMRVZCUVVjc1NVRkpRU3hEUVVOTWRFSXNTVUZCUzI5S0xFVkJRVk53U2l4SlFVRk5ZeXhGUVVGTFRTeFBRVUZUZFU4c1JVRkJhVUp5VHl4RlFVTnVSRzVHTEUxQlFVOXBUaXhGUVVGVGFrNHNUVUZCVVRKRkxFVkJRVXRMTEUxQlFWRjNUeXhGUVVGcFFuUlBMRVZCUTNSRWJrWXNUMEZCVVd0T0xFVkJRVk5zVGl4UFFVRlRORVVzUlVGQlMwMHNUMEZCVTNWUExFVkJRV2xDY2s4c1JVRkRla1JzUml4TFFVRk5aMDRzUlVGQlUyaE9MRXRCUVU4d1JTeEZRVUZMU3l4TlFVRlJkMDhzUlVGQmFVSjBUeXhIUVVsNFJDeFRRVUZUZFU4c1IwRkJjMEo0Unl4SFFVTTNRaXhOUVVGUExFTkJRVU1zUlVGQlMycE9MRVZCUVU5RUxFVkJRVkZGTEVkQlFVMTVWQ3hOUVVGTExGTkJRVlZETEVkQlF5OURMRTlCUVU4eFJ5eEZRVUZUTUVjc1NVRkJVeXhMUVdsRE4wSXNWVUZEUlc1U0xFdEJRVTBzVDBGRFRrTXNVMEZCVXl4RlFVTlVReXhOUVVGUExFOUJRMUE0Unl4cFFrRkJhMElzUTBGQlF5eHRRa0ZEYmtJM1J5eEhRV3hEUml4VFFVRmpReXhIUVVOYUxFbEJRVWxETEVWQlFWRkVMRVZCUVV0RExFMUJRMkpNTEVWQlFVOUpMRVZCUVV0S0xFdEJRMXA1VUN4RlFVRm5RbkJRTEVWQlFVMTVSaXhOUVVGTk4wZ3NWVUZETlVKdlNpeEZRVUZoYUVnc1JVRkJUWGxHTEUxQlFVMDVTQ3hQUVVONlFtZFVMRVZCUVcxQ00xRXNSVUZCVFc5R0xHTkJRV015VEN4blFrRkRka05ETEVWQlFXOUNMMFVzUjBGQlpXcE5MRVZCUVU4c1EwRkROVU41VFN4bFFVRm5RaXhqUVVWa2QwVXNSVUZCYjBKb1JpeEhRVUZsYWswc1JVRkJUeXhEUVVNMVF6Sk5MR0ZCUVdFc1NVRkZXSFZGTEVWQlFUSkNVaXhIUVVGbFRTeEZRVUZ0UWpWQ0xFZEJRemRFSzBJc1JVRkJjMEpVTEVkQlFXVlBMRVZCUVcxQ2Frc3NSVUZCV1RKS0xFZEJRM0JGVXl4RlFVRnZRbElzUjBGQmMwSk5MRWRCUXpGRFJ5eEZRVUZ0UWxRc1IwRkJjMEpQTEVkQlF6ZERibElzUlVGQlRXOUdMR05CUVdONlJpeEhRVUZSTEVOQlF6RkNkVklzZVVKQlFUQkNRU3hGUVVNeFFrTXNiMEpCUVhGQ1FTeEZRVU55UWtNc2EwSkJRVzFDUVN4RlFVTnVRa01zYVVKQlFXdENRU3hIUVVWd1FuSlNMRVZCUVUxTkxGZEJRVmN6UXl4UFFVRlRja0lzVDBGQlQybEZMRTlCUVU4c1IwRkJTVkFzUlVGQlRVMHNWMEZCVnpORExFOUJRVkVzUTBGRGJrVXNLMEpCUVdkRGVWUXNSVUZEYUVNc2MwSkJRWFZDUXl4TlEwWXpRaXhKUVVORk1WSXNTMEZCVFN4VFFVTk9ReXhUUVVGVExFVkJRMVJETEUxQlFVOHNUMEZEVUhkQ0xGTkJRVlVzUTBGQlF5eHBRa0ZEV0haQ0xFZEJOVUpHTEZOQlFXZENZU3hIUVVOa0xFbEJRVWxZTEVWQlFWRlhMRVZCUVUxWUxFMUJRMlJqTEVWQlFWVklMRVZCUVUxSExGRkJRMmhDYmtJc1JVRkJUMmRDTEVWQlFVMW9RaXhMUVVOaU1sSXNSVUZCYTBKNFVTeEZRVUZSZDBZc1QwRkRNVUpCTEU5QlFUWkNMRWxCUVhCQ1owd3NSVUZCTmtJc1EwRkJReXhGUVVGSExFZEJRVXRCTEVWQlF5OURNVWtzUlVGQlR5eFZRVUZyUWl4VFFVRlZOMHNzUlVGQlMwTXNSMEZGTVVNc1QwRkVRVVFzUlVGQlNVTXNSMEUxUWtRc1UwRkJhVU5CTEVWQlFWZDVTQ3hGUVVGUFlTeEhRVU40UkN4SlFVRkpha0lzUlVGQlowSXZSQ3hGUVVGcFFuUkVMRWRCUTJwRGRWUXNSVUZCYVVJc1EwRkJRMjVWTEVWQlFVMHNSMEZCUzIxSExGRkJRVkU0UWl4SlFVRnJRaXhIUVVGTExFVkJRVWtzUlVGRmFFVjBSaXhGUVVGNVFpeHRRa0ZCV0hWSExFVkJRWGRDUVN4RlFVRlBhRXNzVDBGQlQybEZMRTlCUVU4c1IwRkJTV3RHTEVWQlFVOHNRMEZEZUVWNlNDeFZRVUZYUVN4TFFVTlFjMGtzUlVGRFJtdE1MRVZCUVZkNlVpeEZRVUZMTEVkQlEyaENNRklzUlVGQlZ6RlNMRVZCUVVzc1IwRkpjRUlzVDBGR1FYbFNMRVZCUVZkQkxFZEJRVmtzUlVGRGRrSkRMRWRCUVZsQkxFZEJRVmtzUjBGQlMwWXNSVUZEZEVJc1EwRkJRMjVWTEVWQlFVMUVMRWRCUVU5dlJ5eFJRVUZST0VJc1NVRkJhMElzUlVGQlNTeERRVU5xUkdoRUxFVkJRVWR2VUN4RlFVTklibEFzUlVGQlIydFFMRWRCUTBRc1EwRkRSbTVRTEVWQlFVZHRVQ3hGUVVOSWJGQXNSVUZCUjIxUUxFZEJWMk5ETEVOQlFYZENNVlFzUlVGQlYyZERMRVZCUVUxNVJpeE5RVUZQWVN4SFFVTXhSSFpKTEVsQlEwNHNTVUZEUXpSVUxFVkJRWGRDTDBrc1JVRkJTelZKTEVWQlFVMW9ReXhYUVVOdVEzRkZMRVZCUVVselVDeEZRVUZ6UW5SUUxFVkJRekZDUXl4RlFVRkpjVkFzUlVGQmMwSnlVQ3hGUVVWWExFMUJRWEpEZEVNc1JVRkJUVzlHTEdOQlFXTkVMR2RDUVVOMFFtNUdMRVZCUVUxdlJpeGpRVUZqUkN4alFVRmpPVU1zUjBGQlMwRXNSVUZEZGtOeVF5eEZRVUZOYjBZc1kwRkJZMFFzWTBGQll6ZERMRWRCUVV0QkxFZEJSM3BEZEVNc1JVRkJUVzlHTEdOQlFXTjZSaXhIUVVGUmFVb3NTVU42UWpsQ0xFbEJRMFZxU2l4TFFVRk5MR2RDUVVOT1F5eFRRVUZUTEVWQlExUkRMRTFCUVU4c1QwRkRVRU1zUjBGd1FrWXNVMEZCZFVKRExFZEJRM0pDTEVsQlFVbERMRVZCUVZGRUxFVkJRVXRETEUxQlEySk1MRVZCUVU5SkxFVkJRVXRLTEV0QlMyaENTeXhGUVVGTmIwWXNZMEZCWTNwR0xFZEJRVkZyVFN4SFFVRmxMRU5CUTNwRGFrOHNWVUZCVjI5RExFVkJRVTE1Uml4TlFVRk5OMGdzVlVGRGRrSnBRaXhSUVVGVGJVSXNSVUZCVFhsR0xFMUJRVTA1U0N4UFFVTnlRbTlFTEZOQlFWVXNWMEZEVmk5RExGVkJRVmRuUXl4RlFVRk5hRU1zWVVGVmJrSTBTeXhMUVVGTkxFbERaMGhTTEVsQlEwVnFTaXhMUVVGTkxHdENRVU5PUXl4VFFVRlRMRVZCUTFSRExFMUJRVThzVDBGRFVFTXNSMEV2U0VZc1UwRkJlVUpETEVkQlEzWkNMRWxCUVVsRExFVkJRVkZFTEVWQlFVdERMRTFCUTJKakxFVkJRVlZtTEVWQlFVdGxMRkZCUTJadVFpeEZRVUZQU1N4RlFVRkxTaXhMUVVOYWJVOHNSVUZCYjBKb1RpeEZRVUZSYTB3c1UwRkROVUlyUWl4UFFVRnpReXhKUVVGMFFrUXNSMEZCYzBOQkxFVkJRM1JFUlN4RlFVRnRRbXhPTEVWQlFWRnRUaXhSUVVNelFrTXNUMEZCYjBNc1NVRkJja0pHTEVkQlFYTkRRU3hGUVVOeVJETkNMRVZCUVZkMlRDeEZRVUZSZFV3c1UwRkRia0pGTEVWQlFXVjZUQ3hGUVVGUmVVd3NZVUZEZGtKSkxFVkJRV00zVEN4RlFVRlJOa3dzV1VGRGRFSnVTQ3hGUVVGVk1VVXNSVUZCVVRCRkxGRkJRMnhDYjAwc1JVRkJhMEk1VVN4RlFVRlJLMUVzVDBGRE1VSkJMRTlCUVRaQ0xFbEJRWEJDUkN4SFFVRnZRMEVzUlVGRE4wTkZMRVZCUVhkQ2FGSXNSVUZCVVdsU0xHRkJRMmhEUVN4UFFVRjVReXhKUVVFeFFrUXNSVUZCYlVNc1JVRkJTVUVzUlVGRGRFUXhTQ3hGUVVGWE5rSXNSMEZCWldwTkxFVkJRVThzUTBGRGJrTnhUU3hUUVVGVlFTeEZRVU5XUlN4aFFVRmpRU3hGUVVOa0wwY3NVVUZCVTBFc1JVRkRWRzFJTEZsQlFXRkJMRWxCUlZoMFNDeEZRVUZuUWk5RUxFVkJRV2xDZEVJc1JVRkJUV2hETEZkQlEzWkRhVW9zUlVGQldVd3NSVUZCWVRWSExFVkJRVTFvUXl4WFFVTXZRbWRWTEVkQlFXMUNMMHNzUlVGRGJrSXJSU3hGUVVGWGNrZ3NSVUZCZVVKVkxFZEJRM0JETkVrc1JVTnlRMWtzVFVSeFExTnFReXhGUTNKRFNDeEpRVUZOTEVsRWMwTjRRamRITEVWQlFXZENia1lzUlVGQlRXOUdMR05CUVdORUxHTkJRM0JEYVVzc1JVRkJaMEp3VUN4RlFVRk5lVVlzVFVGQlRUZElMRlZCUXpWQ2Iwb3NSVUZCWVdoSUxFVkJRVTE1Uml4TlFVRk5PVWdzVDBGRGVrSnpWU3hGUVVFMFF5eHRRa0ZCYWtKR0xFVkJRVGhDUVN4RlFVRmhlbFlzVDBGQlQybEZMRTlCUVU4c1IwRkJTVkFzUlVGQlRYbEdMRTFCUVU4c1EwRkRka2Q2U0N4VlFVRlhaME1zUlVGQlRXaERMR0ZCUTJJclZDeEZRVU5HUnl4RlFVRXlSQ3hwUWtGQmRFSkVMRVZCUVdsRExFTkJRM2hGYWtjc1UwRkJWV2xITEVWQlExWm9SU3hSUVVGVFowVXNSMEZEVUROV0xFOUJRVTlwUlN4UFFVRlBMRU5CUTJoQ2VVd3NVMEZCVlN4RlFVTldhVU1zVVVGQlV5eEhRVU5TWjBVc1IwRkRRMFVzUlVGQmMwSnVVeXhGUVVGTmIwWXNZMEZCWTJ0Q0xFOUJRVk4wUnl4RlFVRk5iMFlzWTBGQlkydENMRTlCUVU5MFJ5eEZRVUZOYUVNc1YwRkJZU3hMUVVOcVJ6UkxMRVZCUVU4c1EwRkRWSFpITEVWQlFVY3NSVUZEU0VNc1JVRkJSeXhIUVVkTUxFZEJRVXMyUXl4RlFVRk1MRU5CU1VFc1IwRkJTVFJKTEVWQlFXVXNRMEZEYWtJc1NVRkJTWEZGTEVWQlJVRkRMRVZCUVhkQ0xFMUJRV0p5Unl4RlFVRnRRaXhGUVVGTk5VOHNSVUZEY0VOclZpeEZRVUYxUWl4TlFVRmlkRWNzUlVGQmJVSTVUeXhGUVVGVFF5eEZRVU4wUTI5SkxFVkJRVzFDTEUxQlFXSjVSeXhGUVVGdFFpeFRRVUZYTEZGQlEzQkRNVVlzUlVGQlUyNUNMRVZCUVdNMlJ5eEhRVU4yUW5STExFVkJRVTAwUlN4RlFVRlRPRVFzUlVGQlUybEpMRWRCUTNoQ05WRXNSVUZCVFRaRkxFVkJRVk00UkN4RlFVRlRhMGtzUjBGRGVFSkRMRVZCUVZkV0xFZEJRVlUzU3l4RlFVRlhla0lzUjBGQlR5eEZRVUZKTEVWQlF6TkRhVTRzUlVGQlUzWk1MRWxCUVdNeFNpeEZRVUZSTmxJc1JVRkJZemRLTEVkQlFVOTVRaXhGUVVGWGVrSXNSMEZETDBSclRpeEZRVUZUZUV3c1NVRkJZekZLTEVkQlFWTjVTaXhGUVVGWGVrSXNTVUZCVVRaS0xFVkJRV00zU2l4SFFVZHFSVXdzUlVGQlpXeEdMRVZCUVUxRkxGTkJRVk5uUWl4TlFVTTVRbmxGTEVWQlFWbHJUU3hIUVVGVk0wMHNSVUZCWlRORExFVkJRV015UXl4SFFVRm5RaXhEUVVOeVJTOURMRTFCUVU4c1JVRkRVRU1zVDBGQlVTeEhRVVZPYzFFc1IwRkJjVUl4VXl4RlFVRk5iMFlzWTBGQll5eHZRa0ZCYzBKd1JpeEZRVUZOYjBZc1kwRkJZeXh2UWtGQmIwSkpMRkY0UW1oR2RFY3NRMEZEVEhoRkxFbEJRVXNzUlVGRFREZEVMRTFCUVU4c1JVRkRVRVFzVDBGQlVTeEZRVU5TUlN4TFFVRk5MRWQzUWpaRlJuVldMRWRCUVd0Q1JDeEhRVUZ0UWt3c1IwRkRja05QTEVkQlFXdENSaXhIUVVGdFFrb3NSMEZOY2tOUExFZEJRVmRxVHl4RlFVRlBMRVZCUVVkM1N5eEZRVUZqTjBvc1IwRkJUVWtzUlVGQlZVb3NTVUZEYmtSMVRpeEhRVUZaWkN4RlFVRnJRalZETEVWQlFXTTNTaXhIUVVGUExFVkJRVWxuVGl4RlFVRlhUU3hIUVVGWFJpeEhRVUZyUWxRc1JVRkJORUpzUnl4VFFVRlhkMGNzUlVGQlUwc3NSMEZCVjBZc1IwRkJhMEpVTEVWQlFUUkNiRWNzVTBGRGVFMHJSeXhIUVVGWlppeEhRVUZ0UWpWRExFVkJRV00zU2l4SFFVRlBMRVZCUVVsblRpeEZRVUZYVFN4SFFVRlhSQ3hIUVVGclFsWXNSVUZCTkVKc1J5eFRRVUZYZVVjc1JVRkJVMGtzUjBGQlYwUXNSMEZCYTBKV0xFVkJRVFJDYkVjc1UwRkRlazFvUnl4SFFVRnZRbWhITEVWQlFVMUZMRk5CUVZOblFpeFBRVUZUTmtNc1JVRkJaMEl2UkN4RlFVRk5SU3hUUVVGVFowSXNUMEZETTBVNFVpeEhRVUZsYUU0c1IwRkJhVU1zVFVGQlltZEhMRVZCUVcxQ2FFY3NSMEZCYTBKeFJpeFhRVUZoTEVWQlFVbHlSaXhIUVVGclFuTkdMRmxCUVdNc1JVRkJTU3hGUVVNM1NESklMRWRCUVhkSUxFOUJRV3BIWWl4RlFVRXJReXhOUVVGMlFrUXNUMEZCT0VJc1JVRkJVMEVzUlVGQmIwSnVSeXhKUVVGeFFtOUhMRVZCUVhkQ0xFVkJSWFpLWXl4SFFVRlpOVTBzUlVGQlUzbE5MRWRCUVZsRkxFZEJRMnBEUlN4SFFVRnJRblpQTEVWQlFVOXBUaXhGUVVGVExFVkJRVkZ1VVN4RlFVWTVRalJGTEVWQlFWTjNUU3hIUVVGWlJ5eEhRVUZ6UWtRc1NVRkZTM1JTTEVWQlFVczBSU3hGUVVGUmRVd3NSVUZCVXl4RlFVRlJjRkVzUlVGQlMzbFNMRWxCUVdGNlVpeEhRVU5vU0RCRUxFVkJRV00yUnl4SFFVRlpiVWdzUjBGRE1VSjJTeXhGUVVGTGIwUXNSMEZCV1cxSUxFZEJRV3RDTjAwc1JVRkhja01zUjBGQlNUUklMRVZCUVdNc1EwRkRhRUlzU1VGQlNXdEdMRWRCUlVGRExFZEJRWGxDTEUxQlFXSnlTQ3hGUVVGdFFpeEZRVUZOTlU4c1JVRkZja05yVnl4SFFVRjNRaXhOUVVGaWRFZ3NSVUZCYlVJNVR5eEZRVUZUUXl4RlFVVjJRMjlYTEVkQlFWVndUeXhGUVVGak9Fa3NSMEZGZUVKMVJpeEhRVUZ0UWl4TlFVRmFka1lzUlVGQmEwSXNVMEZCVnl4UlFVVndRM2RHTEVkQlFVOUdMRWRCUVZWdVNpeEZRVUZUYVVvc1NVRkZNVUpMTEVkQlFVOUlMRWRCUVZWdVNpeEZRVUZUYTBvc1NVRkZNVUpMTEVsQlFYVkVMRWxCUVhoRExFTkJRVU1zUlVGQlMzWlhMRWRCUVUxdFJ5eFJRVUZST0VJc1IwRkZia04xVHl4SFFVRjVTQ3hQUVVGcVIxSXNSMEZCWjBRc1RVRkJka0pxUWl4UFFVRTRRaXhGUVVGVFFTeEZRVUZ2UW14RkxFbEJRVzlDYlVZc1IwRkJlVUlzUlVGRmVrcFRMRWRCUVdGR0xFZEJRV1ZHTEVkQlFVOUdMRWRCUVZWdVJTeEZRVUZqYjBVc1NVRkJVWGhOTEVWQlFWZDNUU3hKUVVGUlNTeEhRVUYxUWpGQ0xFVkJRVFJDYWtVc1VVRkZla2syUml4SFFVRmhTQ3hIUVVGbFNpeEhRVUZWYmtVc1JVRkJZMjlGTEVsQlFWRjRUU3hGUVVGWGQwMHNTVUZCVVVrc1IwRkJkVUl4UWl4RlFVRTBRbXBGTEZGQlFWVjVSaXhIUVVVMVNVc3NSMEZCYlVKc1F5eEhRVUZWT0VJc1J6RkNla2c1UWl4VFFVRjNRbXBUTEVWQlFVdDZSU3hGUVVGUGQwVXNSMEZEZWtNc1NVRkJTWFZUTEVWQlFVbHdVQ3hGUVVGUGJFUXNSVUZCUzNwRkxFVkJRVTkzUlN4SFFVTXpRaXhQUVVGUGRWTXNSVUZCU1haVExFVkJRVTFCTEVWQlFVMTFVeXhGTUVKMVNESkNReXhEUVVGbFNpeEhRVUZaVGl4SFFVRlRUeXhKUVVGamJGQXNSVUZCVDJsT0xFVkJRVk5uUXl4SFFVRmhTaXhIUVVGTlJpeEhRVUZUTVVJc1JVRkJVMmxETEVkQlFXRktMRWxCUlhCTGRrOHNSVUZCWXpoSkxFZEJRVmM0Uml4SFFVTjZRbTVNTEVWQlFVdHhSaXhIUVVGWE9FWXNSMEZCYlVKU0xFZEJSM0pEZGxRc1JVRkJUVzlHTEdOQlFXTjZSaXhIUVVGUmFVb3NTVUZUTlVKcVF5eHBRa0ZCYTBJc1EwRkJReXhYUlRGSVRpeFRRVUZUZFU0c1IwRkJhVUpETEVWQlFYbENjbEVzUlVGQlkzZEVMRkZCUXpsRUxFbEJRVnBCTEVsQlEwWkJMRWRCUVZVc1IwRkhXaXhKUTI1Q2IwTjBTU3hGUTBwUFNDeEZSblZDZGtOMVZpeEZRVUV3UWpkVkxFVkJRV04xUlN4SFFVTjRRM1ZSTEVWQlFYVkNPVlVzUlVGQlkzVkZMRWxCWmpORExGTkJRWGxDYWtZc1IwRkRka0lzU1VGQlNXbEVMRVZCUVU5cVJDeEZRVUZSSzBNc2QwSkJRMlpITEVWQlFWTktMRVZCUVUxSExFVkJRVXRMTEU5QlFWTjBSQ3hGUVVGUmNVUXNZVUZCWlN4RlFVTndSRVlzUlVGQlUwd3NSVUZCVFVjc1JVRkJTMDBzVVVGQlZYWkVMRVZCUVZGdlJDeGpRVUZuUWl4RlFVTXhSQ3hQUVVGclFpeEpRVUZZUml4SFFVRXlRaXhKUVVGWVF5eEZRVmR0UTNOVExFTkJRV2RDZUZFc1IwRkRkRVZLTEVWQlFXdENSaXhGUVVGdFFrMHNSMEZEY2tOb1F5eEZRVUZQUml4RlFVRnpRblZUTEVWQlFYbENSU3hIUVVOMFJISk1MRVZCUVZNc1EwRkRXR0VzVjBGQldTeEZRVU5hUlN4VlFVRlhMRWRCUlZRM1F5eEZRVUZWTEVOQlExbzNSU3hGUVVGSExFVkJRMGhETEVWQlFVY3NSMEZyUWt3c1QwRm1TVGhTTEVsQlFUUkNRU3hKUVVFMFFqbE5MRTFCUTNoQ0xGTkJRVGxDTVVrc1JVRkJXV3RHTEVsQlEyaENiMGNzUjBGQlpYaEhMRTFCUTJKelJpeEhRMjVEWjBOb1N5eEZSRzFEVkRoRkxFdERiRU5rTDBVc1JVRkJWVU1zU1VGQlZVOHNSVUZCWTFBc1IwTktlRU1zUTBGRFREWkxMRmxCUm5sRGFFd3NSVVJSWWtjc1IwTk9ValpMTEZkQlEzQkNSU3hWUVVGWGJFd3NSVUZCVVd0TUxGZEVSMXBJTEVkQlFXZENOVXNzU1VSdlEyNUNUeXhGUVVGamRVVXNTMEZEYUVKdlJDeEZRVUZWZEVZc1JVRkJjMEpyUXl4SFFVRmpMRWxCUTNSRGVrSXNSMEZCUzNsQ0xFVkJRV0YzU0N4WFFVTXhRbkJGTEVWQlFWRTFSU3hIUVVGTGQwSXNSVUZCWVhWSUxGZEJRMnBDTTBnc1NVRkRWSGRFTEVWQlFWRTNSU3hGUVVGSk5FZ3NSMEZCYjBKMlJ5eExRVWszUWl4RFFVTk1ja0lzUlVGQlIxQXNSVUZCU3pGRkxFdEJRVTgwVEN4RlFVRlBZU3hYUVVGaE0wTXNSVUZCVVRkRkxFVkJRek5EUXl4RlFVRkhVaXhGUVVGTFpDeEpRVUZOWjBrc1JVRkJUMlVzVlVGQldUZERMRVZCUVZFMVJTeEZRVU42UTBnc1RVRkJUMHdzUlVGQlMwc3NUVUZEV2tNc1QwRkJVVTRzUlVGQlMwMHNVVWR5UkdwQ0xGTkJRVk50VXl4SFFVRk5ReXhIUVVOaUxFbEJRVWxETEVWQlFVMHNTVUZCU1c1R0xFbEJRMVp2Uml4RlFVRlZMRWxCUVVsRExFbEJRMlJETEVWQlFWTXNSMEZMWWl4VFFVRlROVVlzUlVGQlN6WkdMRWRCUTFwSUxFVkJRVkZKTEVsQlFVbEVMRVZCUVZOc1ZpeE5RVU5PTEVkQlFVY3hRaXhQUVVGUE5GY3NSVUZCVTNoVUxGVkJRVmtzUjBGQlNYZFVMRVZCUVZOc1R5eHJRa0ZCYjBJc1NVRkRkRVY0Unl4VFFVRlJMRk5CUVZVMFZTeEhRVU42UWl4SlFVRkxUQ3hGUVVGUlRTeEpRVUZKUkN4SFFVRk5MRU5CUTNKQ0xFbEJRVWxGTEVWQlFXTlNMRVZCUVVsb1dTeEpRVUZKYzFrc1IwRkZkRUpGTEVkQlEwWnFSeXhGUVVGTGFVY3NUMEZKV0V3c1JVRkJUelZGTEV0QlFVczJSU3hIUVZOa0xFOUJla0pCVEN4RlFVRlZjbFVzVTBGQlVTeFRRVUZWTUZVc1IwRkRNVUpLTEVWQlFVbDBSU3hKUVVGSk1FVXNSVUZCVTJ4V0xFdEJRVTFyVml4TlFXdENla0pNTEVWQlFWVnlWU3hUUVVGUkxGTkJRVlV3VlN4SFFVTnlRa2dzUlVGQlVVMHNTVUZCU1Vnc1JVRkJVMnhXTEU5QlJYaENjVkFzUlVGQlN6WkdMRTFCUjBaRUxFVkRha0pVTEVsQlJVbE5MRWRCUVd0Q0xFTkJRM0JDYkZnc1ZVRkJWeXhUUVVOWWQxY3NWVUZCVnl4SFFVTlllbFFzVTBGQlZTeFpRVWRhTEZOQlFWTnZWU3hMUVVOUUxFbEJRVXNzU1VGQlNUTkNMRVZCUVU4dldDeFZRVUZWY1ZRc1QwRkJVWFJVTEVWQlFVOHNTVUZCU1RSYUxFMUJRVTAxUWl4SFFVRlBOa0lzUlVGQlR5eEZRVUZIUVN4RlFVRlBOMElzUlVGQlRUWkNMRWxCUXk5Rk4xb3NSVUZCU3paYUxFZEJRVkUxV2l4VlFVRlZORm9zUjBGSGVrSXNUMEZCVVRkYUxFVkJRVXR4Vml4TlFVRkxMRk5CUVZWb1V5eEhRVU14UWl4UlFVRlRRU3hIUVVGdlJDeHRRa0ZCYkVOQkxFVkJRVkVyUXl3d1FrRkphRU1zVTBGQlV6QlVMRWRCUVdkQ1F5eFJRVU5NTEVsQlFYSkNRU3hKUVVOR1FTeEZRVUZ0UWl4SlFVZHlRaXhKUVVGSlF5eEZRVUZ2UWtRc1JVRkRjRUpGTEVWQlFYZENSQ3hGUVVGclFrVXNhVUpCUXpGRFFTeFBRVUUyUXl4SlFVRXhRa1FzUlVGQmJVTXNSMEZCUzBFc1JVRkRNMFJGTEVWQlFYbENTQ3hGUVVGclFra3NaVUZETTBOQkxFOUJRVFJETEVsQlFUTkNSQ3hGUVVGdlExUXNSMEZCYTBKVExFVkJRek5GTEU5QlFVOHNVMEZCYzBJdldDeEZRVUZYUkN4RlFVRlJiVVFzVVVGRE9VSXNTVUZCV2tFc1NVRkRSa0VzUlVGQlZUaFZMRWRCUjFvc1NVTXZRelpDT1ZZc1JVRkRNMElyVml4RlJEaERSVGRXTEVWQlFWRXNRMEZEVm1oRExGVkJRVmNzVTBGRFdEaFlMR2xDUVVGclFpeEhRVU5zUW1oV0xGRkJRVk40UlN4UFFVRlBhVVVzVDBGQlR5eEhRVUZKTWxVc1IwRkJhVUpWTEVkQlF6VkRlRkVzWTBGQlpTeEhRVU5tYkVZc1UwRkJWU3hEUVVOU2RFTXNWVUZCVjBFc1JVRkRXRVFzVDBGQlVVRXNSMEZGVmpKRExGZEJRVmtzUjBGRFdrUXNUMEZCVVN4SlFVVk9NRllzUlVGQmJVSXNSMEZEYmtKRExFZEJRV01zUlVGRFpHeE9MRVZCUVZjc1EwRkRZamxKTEUxQlFVOUJMRVZCUTFCcFZ5eFhRVUZaTEZOQlFXOUNReXhIUVVNNVFpeEpRVUZKY0ZZc1JVRkJjME1zYlVKQlFYSkNiMVlzUlVGQmEwTkJMRVZCUVdsQ2JGY3NSVUZCVFdNc1UwRkJWMjlXTEVWQlEzcEdReXhKUVVOQmJsY3NSVUZCVFdNc1VVRkJWWGhGTEU5QlFVOXBSU3hQUVVGUExFZEJRVWx4Vml4RlFVRm5RalZXTEVWQlFVMWpMRkZCUVZOQkxFZEJRMnBGWkN4RlFVRk5iVW9zWTBGQlowSXNRMEZEY0VKMlRDeFZRVUZYZVVJc1JVRkJWWHBDTEVkQlFXRTRUU3hIUVVGclFqbE5MRWRCUVdGQkxFVkJRVlV3VUN4bFFVRnBRalZETEVkQlFXdENPVTBzUlVGQlZUQlFMR2RDUVVGclFpeEhRVU14U1ROUUxFOUJRVkVyVFN4SFFVRnJRaTlOTEVsQlNUVkNMRWxGZWtVMFFqWlhMRVZCUXpsQ05FSXNSVVozUlUxT0xFVkVka05ITEZOQlFYZENkRUlzUjBGRmNrTXNTVUZCU1hOQ0xFVkJRVzFDZGtJc1IwRkJUVU1zUjBGRk4wSXNUMEZCVHpkV0xFVkJRV1ZpTEZGQlFVOHNVMEZCVlVNc1JVRkJTemhDTEVkQlF6RkRMRTlCUVU4NVFpeEZRVUZKUlN4UFFVRlBObGdzUlVGQmFVSnlVaXhSUVVGUExGTkJRVlZ2VVN4SFFVTnNSQ3hQUVVGUFFTeEZRVUZUYUZZc1VVRkJWVUVzVVVGRk0wSXNTVU1yUWpCQ2QxY3NSVVY2UlVzM1FpeEZSbmxGYzBJc1IwRkJSM1pYTEU5QlFVOTVXQ3hGUVVGclFqRldMRVZCUVUxakxGRkJRVkV3VkN4WFJYaEZPVVkwUWl4RlFVRlROVUlzUlVGQlZURlhMRkZCUVU4c1UwRkJWWE5aTEVWQlFWRkZMRWRCUXpsRExFbEJRVWxETEVWQlFWZElMRVZCUVU5RkxFVkJRVkV6Vnl4TlFVczVRaXhQUVVwQmVWY3NSVUZCVDBVc1JVRkJVVE5YTEUxQlFWRTBWeXhGUVVGWGFtRXNUMEZCVDJsRkxFOUJRVThzUjBGQlNXZFhMRVZCUVZWRUxFVkJRVk1zUTBGRGNrVjRWaXhSUVVGVGVFVXNUMEZCVDJsRkxFOUJRVThzUjBGQlNXZFhMRVZCUVZONlZpeFJRVUZUZDFZc1JVRkJVWGhXTEZOQlEzSkVPRWdzUzBGQlRYUk5MRTlCUVU5cFJTeFBRVUZQTEVkQlFVbG5WeXhGUVVGVE0wNHNTMEZCVFRCT0xFVkJRVkV4VGl4UlFVTTFRekJPTEVWQlEwVkdMRWxCUTA0c1NVRkZTVGxhTEU5QlFVOHlSQ3hMUVVGTGJWY3NSMEZCVVROQ0xFdEJRVWtzVTBGQlZYSlpMRWRCUTNaRExFOUJRVTluWVN4RlFVRlBhR0VzVVVaMVIxWXNUMEYyUTBFMFJDeEZRVUZOT0ZZc2FVSkJRVzFDUVN4RlFVRnBRbkpTTEZGQlFVOHNVMEZCVlN0U0xFZEJRM3BFTEU5QlFVOUJMRVZCUVVVMVZ5eFhRWEZLWWtrc1JVRkJUVGhXTEdsQ1FVRnBRak5XTEZOQlFWRXNVMEZCVlhOSUxFZEJRM1pETEVsQlFVazVTQ3hGUVVGUE9FZ3NSVUZCVFRsSUxFdEJRMkk0Vnl4RlFVRm5RbWhRTEVWQlFVMHpSeXhSUVVOMFFrRXNUMEZCTkVJc1NVRkJiRUl5Vml4RlFVRXlRaXhIUVVGTFFTeEZRVU14UXk5V0xFVkJRVk1yUnl4RlFVRk5MMGNzVDBGRmJrSXNSMEZCYzBJc2JVSkJRVmhCTEVWQlFYVkNMRU5CUTJoRExFbEJRVWxuVnl4RlFVRlphRmNzUlVGQlR5eERRVU55UWxZc1RVRkJUMEVzUlVGRFVFd3NTMEZCVFVFc1JVRkRUbTFLTEZOQlFWVkJMRVZCUTFab1NTeFJRVUZUUVN4SlFVdFlhVllzUlVGQmFVSXZSaXhMUVVGTE1FY3NSMEZHVkN4clFrRTNTRkkxVGl4RlFVRlRVU3hWUVU5c1FuRk9MRmxCUVdFc1YwRkRXQ3hKUVVGSldDeEZRVUZLTEVOQlNVRXNTVUZCU1Zrc1JVRkJhMEkxVnl4RlFVRk5SU3hUUVVONFFuUkRMRVZCUVZsbldpeEZRVUZuUW1oYUxGVkJRelZDUkN4RlFVRlRhVm9zUlVGQlowSnFXaXhQUVVjM1FpeEhRVUZMZDFnc1IwRkJhVUoyV0N4RlFVRlhSQ3hIUVVGcVF5eERRVk5CY1VNc1JVRkJUWGxHTEUxQlFWRXNRMEZEV2pkSUxGVkJRVmR6Vnl4SFFVRnBRblJYTEVWQlFWZHRSeXhGUVVGblFuQkhMRWRCUVc5RExGVkJRVE5DY1VNc1JVRkJUV01zVVVGQlVVTXNWVUZET1VWd1JDeFBRVUZSTkVVc1JVRkJZelZGTEVsQlQzaENjVU1zUlVGQlRYbFJMRTlCUVZFc1JVRkRaSHBSTEVWQlFVMW9ReXhWUVVGWlowTXNSVUZCVFdNc1VVRkJVVGxETEZWQlMyaERaME1zUlVGQlRUaFdMR2xDUVVGcFFqTldMRk5CUVZFc1UwRkJWVEJWTEVkQlEzWkRMRTlCUVU4M1ZTeEZRVUZOYjBZc1kwRkJZM2xRTEVWQlFWTnNWaXhOUVVGUmNrUXNUMEZCVDJsRkxFOUJRVThzUjBGQlNYTlZMRVZCUVZOcVRTeFRRVWw2UlN4SlFVWkJMRWxCUlZNeFRpeEZRVUZSTEVWQlFVZEJMRVZCUVZFNFJTeEZRVUZOT0ZZc2FVSkJRV2xDYUVnc1QwRkJVVFZVTEVsQlZYcEVMRWxCUVc5Q0xFbEJRV2hDT0VVc1JVRkJUWGxSTEUxQlFWWXNRMEZOUVN4SlFVRkpiMGNzUlVGQmQwSTNWeXhGUVVGTk9GWXNhVUpCUVdsQ05XRXNSMEZETDBNMFJTeEZRVUZMSzFjc1JVRkJjMEl2Vnl4SFFVTXpRbWRZTEVWQlFYbENSQ3hGUVVGelFpOVdMRkZCUXk5RGIwd3NUMEZCYzBNc1NVRkJNMEkwU3l4RlFVRnZReXhIUVVGTFFTeEZRVU53Ukc1WUxFVkJRVTlyV0N4RlFVRnpRbXhZTEV0QlJXWXNiVUpCUVZCSExFbEJRMVJGTEVWQlFWRkdMRVZCUVVjc1EwRkRWRVVzVFVGQlQwRXNSVUZEVUdNc1VVRkJVMjlNTEVWQlExUjJUU3hMUVVGTlFTeEZRVU5PYlVvc1UwRkJWVUVzUzBGRFRqbEpMRkZCYWtKT1FTeEZRVUZOZVZFc1QwRkJVU3hGUVVOa2RsWXNSMEZCVXl4TFFYTkNabTlQTEZGRGJFMHlRbmhLTEVWRWEwMVdMRmRCUTJZc1QwRkJUeXhKUVVGSmFWZ3NVMEZCVVN4VFFVRlZReXhIUVVNelFteFBMRVZCUVZNMlRpeGpRVU5VU3l4RlFVRlJhRmdzVDBOdVRWUXNWMEZWVEN4UFFWUkxObFlzU1VGRFNFRXNSVUZCVlN4SlFVRkphMElzVTBGQlVTeFRRVUZWUXl4SFFVTTVRa1FzVVVGQlVVTXNWVUZCVlVNc1RVRkJTeXhYUVVOeVFuQkNMRTlCUVZVM1dpeEZRVU5XWjJJc1JVRkJVV3hZTEZsQlMxQXJWaXhKUkRSTVRIRkNMRkZCUVZNc1YwRkRVR1lzU1VGRFFVZ3NSMEZCWXl4SlFVbHNRaXhKUVVGTFlpeEhRVUZwUW5aWUxFVkJRVmRFTEVkQlN5OUNMRTlCUVU5dFRDeEZRVzFEVkN4VFFVRlRjVTRzU1VGRFVFb3NSVUZCYVVJMVZpeFRRVUZSTEZOQlFWVk1MRWRCUTJwRExFOUJRVTlCTEU5QlJWUnBWeXhGUVVGdFFpeEhRVWR5UWl4UFFYWkRRV3BPTEVWQlFWTnRUaXhYUVVGWGJsWXNSMEZCVTIxWExFMUJRVXNzVTBGQlZXcFlMRWxCUTNKRFoxY3NSMEZCWld4V0xFVkJRVkZ4Vnl4bFFVTXhRbkpYTEVWQlFWRnhWeXhqUVVGamJsZ3NUVUZ4UTI1Q09Fa3NSMEZIU2l4SlFVRkpjMDhzUjBGQk5FSTVRaXhMUjNKUWJrTXNSMEZCTkVKQkxFZEJRV2RDTEVOQlF6bERTU3hwUWtGR2NVSXNRMEZCUXpKQ0xFZEJRV2RDTEVkQlFXVXNSMEZCWlN4RlFVRmhMRWRCUVZFc1IwRkJUU3hIUVVGcFFpeEZRVUZQTEUxRFNuSklMRWRCUVRSQ0wwSXNSMEZCWjBJc1EwRkRPVU5KTEdsQ1FVWnhRaXhEUVVGRE1rSXNSMEZCWjBJc1IwRkJaU3hIUVVGbExFdERVWFJGTEUxQlJVMURMRWRCUVdsQ0xHZENRWGRDYWtKRExFZEJRV014V1N4SlFVTnNRaXhKUVVGSk1sa3NSVUZCVnpOWkxFVkJRVkUwV1N4aFFVRmhMR3RDUVVWd1F5eEpRVUZMUkN4SFFVRjVRaXhOUVVGaVFTeEZRVUZyUWl4RFFVTnFReXhKUVVGSlJTeEZRVUZYTjFrc1JVRkJVVFJaTEdGQlFXRXNVVUZMY0VNc1NVRkJTME1zU1VGQllVRXNSVUZCVTBNc1UwRkJVeXhQUVVGVFJDeEZRVUZUUlN4WFFVRlhMRXRCUXk5RUxFOUJRVThzUzBGSlRFWXNSVUZCVTBNc1UwRkJVeXhQUVVGVFJDeEZRVUZUUlN4WFFVRlhMRTlCUTJwRVJpeEZRVUZYTEVsQlFVbEJMRVZCUVZOdVZ5eE5RVUZOTEV0QlFVc3NUVUZIY2tOcFZ5eEZRVUZYUlN4SFFVRjVRaXhOUVVGaVFTeEZRVUZ0UWtFc1JVRkJVMGNzVDBGQlV5eExRVWM1UkN4UFFVRlBUQ3hIUVVkSVRTeEhRVUY1UW1wYUxFbEJRemRDTEUxQlFVMHlXU3hGUVVGWFJDeEhRVUZaTVZrc1IwRkZOMElzVDBGQlNUSlpMRWRCUTBzdlZDeFRRVUZUYVVRc1kwRkJZemhSTEVkQlFWbEJMRVZCUjNKRExFMUJSMGhQTEVkQlFYbENiRm9zU1VGRE4wSXNUVUZCVFRKWkxFVkJRVmRFTEVkQlFWa3hXU3hIUVVNM1FpeFBRVUZQTWxrc1JVRkJWeTlVTEZOQlFWTnBSQ3hqUVVGak9GRXNSMEZCV1N4TlFUQkNha1JSTEVkQlFYVkNibG9zU1VGRE0wSkJMRVZCUVZGdldpeGpRVUZqTEVsQlFVbERMRTFCUVUxYUxFMUJSelZDTEVkQlFWazFZU3hOUVVOWVFTeEhRVUZ6UWl4cFFrRkJVa0VzVlVGSlR5eEpRVUZtUVN4RlFVRkplV0lzVTBGRFlucGlMRVZCUVUxQkxFVkJRVWtzVTBGSGJVSXNTVUZCYWtKQkxFVkJRVWt3WWl4VlFVZGtReXhIUVVGaE0ySXNSMEZEWWl4SFFVRlZRU3hIUVVWTVFTeEZRVUZKZVdJc1QwRkJVM3BpTEVWQlFVa3NSMEZCUzBFc1JVRkhXaXhwUWtGQlVrRXNSMEZCYjBKQkxFVkJRVWx2VXl4UFFVRlRMRVZCUTI1RGNrd3NVMEZCVTJsRUxHTkJRV05vU3l4SFFVZDZRaXhMUVVkSU5HSXNSMEZCYTBJc1EwRkJRME1zUlVGQlpVTXNSVUZCVVVNc1MwRkRPVU51WXl4UFFVRlBNa1FzUzBGQlMzZFpMRWRCUVdGMFdTeFRRVUZSWjBJc1NVRkRMMElzVFVGQlRYVllMRVZCUVdkQ1JDeEZRVUZaZEZnc1IwRkROVUpzUlN4RlFVRlJkV0lzUlVGQlQzSllMRWRCUTJaM1dDeEZRVUZaTVdJc1IwRkJVeXhIUVVGVlFTeEhRVUZUTEZWQmNFZzFRMUFzVDBGRVUwRXNSVUZ4U0hORVR5eEhRVzVJTVVRc1IwRkJSMUFzU1VGSFRDeEhRVUZIZDBNc1UwRkJVM0pETEV0QlFVdElMRWRCUVV0b1FpeE5RVUZOTEdWQlFXVXNSMEZCUjFBc1kwRk1lRU4xUWl4SlFVRkJRU3hGUVhWSVdDeEpRVUZMTEVsQlFVbHJZeXhQUVVGUFJpeEhRVUZsYms4c1MwRkJTMjlQTEVkQlEyeERMRTFCUVUwc1NVRkJTVVVzVlVGQlZTeEhRVUZIVGl4RlFVRmpibVFzTUVKQlFUQkNLMFlzY1VKQlFUUkNkMWdzZVVKQlFXbERSQ3hYUVVzMVNFa3NSMEZCV1dwaExFMUJRMWdzUjBGQlZVRXNTVUZCWjBRc1NVRkJjRU5CTEVWQlFWRnJZU3hwUWtGQmFVSnFTeXhUUVVsblFpeFpRVUUzUkhwTUxHbENRVUZwUW5oRkxFZEJRVk50WVN4cFFrRkJhVUlzWTBGSE9VTkRMRWRCUVdGd1lTeEpRVU5hUVN4SFFVRlhRU3hGUVVGUmRWb3NWMEZCWVdNc1MwRkJTME1zWjBKQlNYUkRkR0VzUlVGQlVYVmhMRlZCUVZWNFZ5eFRRVUZUTEcxQ1FVbERMRWxCUVhKQ0wwUXNSVUZCVVhkaExGTkJRMVo0WVN4RlFVRlJkMkVzVTBGSFZuaGhMRVZCUVZGNVlTeGhRVUZoTEdGQlFXOUVMRlZCUVhKRGVtRXNSVUZCVVRSWkxHRkJRV0VzWVVGSE5VUTRRaXhIUVVGcFFqRmhMRWxCUTNKQ0xFbEJRVXMwUlN4VFFVRlRReXhuUWtGQlowSTRWaXhoUVVNMVFpeFBRVUZQTEV0QlNWUXNSMEZCYlVNc2JVSkJRWGhDTTJFc1JVRkJVVzFGTEZsQlFUUkNMRU5CUXpkRExFMUJRVTB6U1N4RlFVRlBkMFVzUlVGQlVXMUZMR05CUTNKQ0xFOUJRVTh6U1N4aFFVRm5RbkZHTEZkQlFXRnlSaXhGUVVGUExFdEJSemRETEU5QlFVbDNSU3hoUVVGdFFtRXNWMEZEWkdJc1JVRkpTa0VzUlVGQlVYTkZMRmRCU1U1dlZ5eEhRVUZsTVdFc1JVRkJVWE5GTEZsQlNISkNMRTFCVFV4elZ5eEhRVUZQTEU5QlYxQkRMRWRCUVZNM1lTeEpRVVZpUVN4RlFVRlJiMFFzWTBGSFNqQllMRWRCUVZrc1MwRkRhRUlzVFVGQlRTeFBRVU5LUXl4SFFVTkZNMkVzVDBGRlNpeFBRVUZKTW1Fc1NVRkJWMjVYTEZOQlFWTm5TQ3hMUVVGTE5rOHNZVUZCWVN4eFFrRkRha05OTEVWQlIwWXNUVUZIU0VNc1IwRkJORUlzUjBGcFFqVkNReXhIUVVGUkxFbEJRWFZETEZGQlFXcERjbGNzVTBGQlUwTXNaMEpCUVdkQ2NWY3NTVUZGZGtORExFZEJRWEZDUXl4SlFXcENRVU1zU1VGQlFVRXNSVUZCUVVFc1JVRnJRazRzUzBGRGFrSXNUVUZCVFVNc1JVRkJTVklzUzBGSFZpeEhRVUZKVVN4RlFVRkhMRU5CUTB3c1RVRkJUWGhoTEVWQlFVOXpZU3hGUVVGUFJ5eExRVU5rUXl4RlFVRnhRa1lzUlVGQlJYSmhMRWRCUVVkSUxFZEJRMmhEZDJFc1JVRkJSWEpoTEVkQlFVZElMRWRCUVZGellTeEZRVUZQU3l4blFrRkRjRUpJTEVWQlFVVnlZU3hIUVVGSFNDeEhRVUZOTkdFc1dVRkJZMDRzUlVGRmVrSkZMRVZCUVVWeVlTeEhRVUZIU0N4SFFVRk5ObUVzVjBGQllTeExRVU4wUWt3c1JVRkJSWEpoTEVkQlFVZElMRWRCUVZFd1lTeEZRVU5PU2l4RlFVRlBTeXh0UWtFM1FsRXNXVUZCZUVJM1Z5eFRRVUZUWjFnc1dVRkZUbG9zUjBGQk1FSXZTeXhSUVVNM1FuSk1MRk5CUVZNMFJpeHBRa0ZCYVVJc2IwSkJRVzlDTEV0QlF6VkRkMUVzUjBGQk1FSXhXaXhUUVVGUksxb3NSMEZCV1VFc1UwRkpiRVJNTEVkQlFUQkNOMG9zUzBGQlMydExMRWxCUlM5Q1FTeExRWGxDUlZFc1IwRkJWVklzU1VGRFZTeHRRa0ZCWWtFc1IwRkRWRUVzUzBGSlJWTXNSMEZCZVVJc1EwRkJRMVFzUlVGQlZWVXNSVUZCYlVKRExFZEJRVzlDTEV0QlF5OUZMRWxCUVV0QkxFVkJSVWdzV1VGRVFVZ3NSMEZCVVZJc1IwRkpWaXhOUVVOTldTeEZRVGxNYVVOcVl5eERRVUZCUVN4SlFVTjJReXhKUVVGTFFTeEZRVU5JTEU5QlFVOHNSVUZKVkN4SlFVRkpMRzFDUVVOR2EyTXNSVUZCYTBJc1owSkJRMnhDUXl4SFFVTkZMMklzVDBGQlQyOUZMR2xDUVVGcFFuaEZMRWRCUXpWQ0xFMUJRVTF2WXl4RlFVRXdRa01zVDBGQlQwTXNWMEZCVjBvc1IwRkROVU5MTEVWQlFYVkNSaXhQUVVGUFF5eFhRVUZYU0N4SFFVVXZReXhQUVVGTFF5eEhRVUUwUWtjc1IwRkxha05NTEVWQlFYRkNRU3hGUVVGdFFuaGFMRTFCUVUwc1MwRkJTeXhIUVVOdVJIbGFMRVZCUVd0Q1FTeEZRVUZuUW5wYUxFMUJRVTBzUzBGQlN5eEhRVzVHWml4TFFXOUdkRUl5V2l4UFFVRlBReXhYUVVGWFNpeEhRVUZ6UWtjc1QwRkJUME1zVjBGQlYwZ3NTMEZPZWtRc1IwRm5UR2RDU3l4RFFVRnBRMVFzUjBGRWJFTXNSVUZGZUVJc1NVRkJTVlVzUjBGQlV5eEZRVVZpTEUxQlFVMURMRVZCUVZVc1JVRkRaSHBSTEU5QlFVRkJMRTFCUlVsQkxFbEJRVmM0VUN4SlFVbG1WU3hIUVVGVExFVkJRMVJXTEVWQlFXdENjbElzYjBKQlFXOUNLMDRzUjBGQlowSnBSU3hIUVVOMFJHSXNSMEZCVVZJc1MwRkhWbFVzUlVGQmEwSjJVaXhwUWtGQmFVSnBUeXhIUVVGblFtbEZMRWRCUTI1RVF5eFpRVUZYTEV0QlEwcEdMRWRCUTBoMFJDeEhRVUZ4UWpSRExFdEJSWFJDUlN4SlFXRkRWeXhIUVVGMVFpeERRVUZET1ZFc1JVRkJUU3RSTEVWQlFXVkRMRVZCUVdWRExFdEJRMmhGTEVsQlFVa3haMElzUlVGQlVYbFFMRVZCUVV0d1NDeFJRVUZSYlZrc1IwRkZla0lzU1VGQlpTeEpRVUZZZUdkQ0xFVkJRMFlzVDBGQlQzbFFMRWRCUVUxblVpeEhRVUZwUWtNc1JVRkJhVUpxVWl4RlFVRkxiVVVzVDBGQlV5eEZRVUZKTEVkQlIyNUZMRTFCUVUwclRTeEZRVUZoYkZJc1JVRkJTMjFGTEU5QlQzaENMRTlCVGtFMVZDeEhRVUZUZVdkQ0xFVkJRV2RDTEVkQlFVc3NSVUZGTVVKRExFbEJRMFl4WjBJc1IwRkJVMEVzUlVGQlVUSm5RaXhIUVVGalFTeEhRVWN4UW14U0xFVkJRVXR1U2l4TFFVRkxReXhKUVVGSkxFVkJRVWRFTEV0QlFVdEZMRWxCUVVsNFJ5eEZRVUZQTW1kQ0xFVkJRV0VzVFVGbGFrUkRMRWRCUVdsQ0xIRkNRVU5xUWtNc1IwRkJhVUlzVDBGRGFrSkRMRWRCUVdkQ0xGTkJRMmhDUXl4SFFVRm5RaXhIUVVWMFFpeEpRVUZKUXl4SFFVRlhMRVZCUTJZc1RVRkJUVU1zUjBGQlpTeERRVU51UWtNc1YwRkJXU3haUVVOYVF5eFhRVUZaTEZsQlJWSkRMRWRCUVc5Q0xEUkNRVU53UWtNc1IwRkJaU3hKUVVGSk5VZ3NTVUZCU1N4RFFVRkRMRkZCUVZNc1YwRkJXU3hWUVVGWExGbEJRV0VzWTBGQlpTeGhRVUZqTEdsQ1FVRnJRaXhaUVVGaExGZEJRVmtzV1VGQllTeGpRVUZsTEZsQlFXRXNWVUZCVnl4WFFVRlpMRkZCUVZNc2IwSkJRWEZDTEdGQlFXTXNXVUZCWVN4WFFVRlpMR05CUVdVc1kwRkJaU3hqUVVGbExGbEJRV0VzWlVGQlowSXNaMEpCUVdsQ0xHVkJRV2RDTEdkQ1FVRnBRaXhoUVVGakxGRkJRVk1zVDBGQlVTeFRRVUZWTEZGQlFWTXNVMEZCVlN4VFFVRlZMRlZCUVZjc1YwRkJXU3hQUVVGUkxGTkJRVlVzWlVGQlowSXNVMEZCVlN4UFFVRlJMRzFDUVVGdlFpeHRRa0ZCYjBJc1VVRkJVeXhSUVVGVExGZEJUeTlzUWl4VFFVRlROa2dzUjBGQldUTmtMRVZCUVZNMFpDeEhRVU0xUWl4UFFVRlBRU3hIUVVGUExFZEJRVWRCTEUxQlFWRlFMRkZCUVdkQ2NtUXNSVUZCVVhGa0xGVkJRVmxCTEV0QlJ5OUVMRk5CUVZOUkxFZEJRVk0zWkN4SFFVTm9RaXhOUVVGTk5HUXNSVUZCVFVRc1IwRkJXVE5rTEVkQlIzaENMRTlCUmtGQkxFVkJRVkZ4WkN4VFFVRlhUeXhGUVVOdVFsSXNSMEZCWTFFc1IwRkJUMUlzUjBGQlkxRXNTVUZCVVN4SFFVTndRMUlzUjBGQlkxRXNSMEYzUTNaQ0xGTkJRVk5GTEVkQlFWbERMRVZCUVZGeVFpeEZRVUZUYzBJc1JVRkJjVUlzVFVGRGVrUXNUVUZCVFVNc1JVRkJaWGhuUWl4UFFVRlBNa1FzUzBGQlN6SmpMRWRCUldwRExFbEJRVXNzU1VGQlNXNU9MRVZCUVVrc1JVRkJSMnhMTEVWQlFVMTFXQ3hGUVVGaGFFOHNUMEZCVVZjc1JVRkJTV3hMTEVWQlFVdHJTeXhKUVVGTExFTkJRM1pFTEUxQlFVMXpUaXhGUVVGUlNDeEZRVUZQUlN4RlFVRmhjazRzU1VGRmJFTXNSMEZCU1hOT0xFVkJRVTFETEd0Q1FVRnZRbnBDTEVkQlFWZDNRaXhGUVVGTlJpeHhRa0ZCZFVKQkxFVkJRM0JGTEU5QlFVOUZMRVZCU1Znc1QwRkJUeXhMUVVkVUxGTkJRVk5GTEVkQlFXZENReXhGUVVGdFFqTkNMRVZCUVZNMFFpeEhRVU51UkN4TlFVRk5ReXhGUVVGblF5eHBRa0ZCV2pkQ0xFVkJRM0JDZVVJc1JVRkJhMEpKTEVWQlFXRkVMRVZCUVdVMVFpeEZRVU53UkN4SlFVRkpPRUlzUlVGQldVTXNSMEZCWVVvc1IwRlBOMElzVDBGT2FVSllMRWRCUVdGMlNDeEpRVUZKY1Vrc1MwRkhhRU5CTEVWQlFWbElMRWRCUjFBc1EwRkJRMFVzUlVGQldVb3NSVUZCYVVKTExFZEJSM1pETEZOQlFWTkZMRWRCUVZjeFpTeEZRVUZUY1dVc1JVRkJiVUl6UWl4RlFVRlRORUlzUlVGQlkwc3NSMEZEY2tVc1IwRkJhVU1zYVVKQlFYUkNUaXhKUVVGdFEzSmxMRVZCUXpWRExFOUJWVVlzUjBGUVN6QmpMRWxCUTBoQkxFVkJRVlUwUWl4RlFVTldRU3hGUVVGbExFMUJTMkppTEVkQlFXdENMMUlzUzBGQlN6SlRMRWRCUVc5Q0xFTkJRemRETEUxQlFVMVBMRVZCUVZNelpDeEhRVU5PTEZOQlFWVnBaQ3hIUVVObUxFbEJRVXRCTEVWQlFVMVhMR1ZCUVdsQ1dDeEZRVUZOVnl4blFrRkJhMEpZTEVWQlFVMVpMR2xDUVVGdFFsb3NSVUZCVFZrc1pVRkJaUzloTEZOQlFWTnRZU3hGUVVGTlZ5eGxRVU12Unl4UFFVRlBOV1FzUlVGQlIycEVMRXRCUVVzNVFpeExRVUZOWjJsQ0xFbEJTM1pDU1N4RlFVTkdRU3hGUVVGbFRTeEZRVUZQVGl4SFFVVjBRalZDTEVWQlFWVnJReXhGUVVGUGJFTXNSMEZKY2tJc1RVRkJUelpDTEVWQlFWbEtMRVZCUVdsQ1N5eEhRVUZoU2l4SFFVRm5Ra01zUlVGQmJVSXpRaXhGUVVGVE5FSXNSMEZEZGtaUUxFVkJRVk5HTEVkQlFWTTNaQ3hIUVVOc1FpdGxMRVZCUVZkb1FpeEZRVUZQVXl4TFFVRmxWQ3hGUVVGUFV5eEhRVUZoTEVsQlEzSkVVU3hGUVVGaGJFSXNSMEZCV1dsQ0xFVkJRVlZhTEVWQlFXbENTU3hGUVVGaE4wSXNSVUZCVlN4TlFVVnFSaXhIUVVGSmMwTXNSVUZGUml4WlFVUkJRU3hGUVVGWFRDeFBRVUZUU3l4RlFVRlhUQ3hSUVVGVlFTeEhRVWt6UXl4TlFVRk5aaXhGUVVGTlJDeEhRVUZaVVN4RlFVRnBRa1VzUlVGQmEwSnNhVUlzVVVGQlVUaG5RaXhIUVVGblFpeExRVU0zUldoakxFVkJRVXR6WkN4RlFUTkdZaXhUUVVGdlEzWmxMRVZCUVZNeVdTeEZRVUZWTVZnc1IwRkRja1FzVDBGQlR5eFRRVUZUZVdJc1JVRkJVWGRDTEVkQlEzUkNMRTFCUVUxbExFVkJRV05xWml4RlFVRlJhMllzYVVKQlFXbENka2NzUjBGRk4wTXNTVUZCU3l4SlFVRkpMRTlCUTFBeFRTeEhRVU5GYVZNc1JVRkJUMnBUTEVkQlFWVkJMRWxCUVZjdlVDeExRVUZOSzFBc1JVRkJVMEVzUlVGQlR6TklMRmRCUTNCRUxFbEJRVXNzU1VGQlNYTk5MRVZCUVVseFR5eEZRVUZaYUZBc1QwRkJVVmNzUzBGREwwSXNSMEZCU1hGUExFVkJRVmx5VHl4TFFVRlBNMFVzUlVGUGNrSXNUMEZPUVdsVExFVkJRVTFaTEdWQlFXbENOMU1zUlVGRmJrSjVVU3hGUVVGUmFVTXNVVUZEVmxFc1IwRkJZVU1zU1VGQlNYQm1MRVZCUVZOclpTeEZRVUZOYlVJc1MwRkJUVEZITEVWQlFWVXhXQ3hIUVVjelEwRXNSVUZCUjNGbExFMUJRVTF5VkN4RlFVRlJMRU5CUVVOcFV5eEpRVTB2UWl4UFFVRlBMRTFCYzBWbGNVSXNRMEZCTWtKMlppeEZRVUZUTUdNc1JVRkJVelJDTEVkQmRrZDJSU3hUUVVFd1FuUmxMRVZCUVZOcFFpeEhRVU5xUXl4UFFVRlBMRk5CUVZONVlpeEZRVUZSZDBJc1IwRlBkRUlzVDBGT1FVRXNSVUZCVFZrc1pVRkJhVUk1WlN4RlFVVnVRakJqTEVWQlFWRnBReXhSUVVOV1VTeEhRVUZoUXl4SlFVRkpjR1lzUlVGQlUydGxMRVZCUVUxdFFpeExRVUZOY0dVc1IwRkhha05CTEVWQlFVZHhaU3hOUVVGTmRHWXNSVUZCVXl4RFFVRkRhMlVzUzBFclJubEVjMElzUTBGQmFVSjRaaXhGUVVGVE1HTXNSMEZETDBkNllpeEZRVUZISzJNc2JVSkJRWEZDVHl4RlFVRmhOMElzUlVGQlZTeExRVU12UTNwaUxFVkJRVWRyWkN4blFrRkJhMEpCTEVWQlEzSkNiR1FzUlVGQlJ6QmtMRTlCUVZOQkxFVkJRMW94WkN4RlFVRkhiMk1zVTBGQlYwOHNSVUZEWkcxQ0xFVkJRVk51UWl4SFFVRlBNMk1zUlVGRGFFSnFRaXhGUVVGUmQwc3NhVUpCUVdsQ1oxVXNSVUZCVjNaa0xFVkJRVWx6WkN4SFFVY3hReXhUUVVGVGEwSXNSMEZCWTNwbUxFVkJRVk1yWkN4RlFVRlJVeXhGUVVGWE9VSXNSVUZCVTNOQ0xFZEJRekZFTEUxQlFVMHZZeXhGUVVGTE5tTXNSMEZCV1VNc1JVRkJUMU1zUjBGQldUbENMRVZCUVZOelFpeEhRVVU1UXk5akxFbEJTVXhxUWl4RlFVRlJNRXNzYjBKQlFXOUNPRlFzUlVGQlYzWmtMRVZCUVVsNVpTeFJRVUZSTVVJc1YwRkROVU5FTEVWQlFVOVRMRWRCUVZkMlpDeEZRVUZIYjJNc1YwRmhPVUlzVTBGQlUyOUNMRWRCUVdGUUxFZEJSM0JDTEU5QlJFRkJMRVZCUVZGQkxFVkJRVTB2YUVJc1VVRkJVU3RuUWl4SFFVRm5RaXhKUVVNdlFra3NSMEZCWVZrc1NVRkJWVUVzUlVGSGFFTXNUVUZCVFdsQ0xFZEJRV1VzUTBGRGJrSlJMRWRCUVVjelppeEZRVUZUYTJVc1JVRkJUM2hDTEVWQlFWTTBRaXhIUVVNeFFra3NSMEZCVnpGbExFVkJRVk5yWlN4RlFVRlBlRUlzUlVGQlV6UkNMRWRCUVdNc1NVRkhjRVJ6UWl4SlFVRkpOV1lzUlVGQlUydGxMRVZCUVU5NFFpeEZRVUZUTkVJc1IwRkRNMEpKTEVkQlFWY3haU3hGUVVGVGEyVXNSVUZCVDNoQ0xFVkJRVk0wUWl4SFFVRmpMRWxCUjNCRVl5eEpRVUZKY0dZc1JVRkJVM0ZsTEVWQlFXMUNNMElzUlVGQlV6UkNMRWRCUTNaRExFZEJRV2xETEdsQ1FVRjBRa1FzU1VGQmJVTnlaU3hGUVVNMVF5eFBRVWRHTEUxQlFVOTFaU3hGUVVGWlNpeEZRVUZwUWtzc1IwRkJZVW9zUjBGQlowSkRMRVZCUVcxQ00wSXNSVUZCVXpSQ0xFZEJRM1pHZFVJc1JVRkJZM0pDTEVsQlFXTklMRVZCUXpWQ1RpeEZRVUZUUml4SFFVRlROMlFzUjBGRGJFSTRaaXhGUVVGamVrSXNSVUZCYTBKMFJpeFhRVUZYTEV0QlJXcEVMRkZCUVN0Q0xFbEJRWEJDYjBZc1JVRkJhVU1zUTBGRk1VTXNTVUZCUzBvc1NVRkJWMEVzUlVGQlQxTXNSMEZEY2tJc1QwRkpSaXhaUVVSQmFVSXNSMEZCWTNwbUxFVkJRVk1yWkN4RlFVRlJVeXhGUVVGWFRDeEZRVUZwUWtrc1JVRkJZVGRDTEVWQlFWVXNUVUZKYUVadlJDeEhRVU5HY21sQ0xFOUJRVTh5UkN4TFFVRkxNbU1zUjBGQlVYcGpMRk5CUVZGNVpTeExRVGxEYkVNc1UwRkJhME12Wml4RlFVRlRLMlFzUlVGQlVWTXNSVUZCVjNkQ0xFZEJRelZFTEUxQlFVMURMRVZCUVc5Q2JFTXNSVUZCVDFNc1NVRkJZeXhIUVVNdlF5OW5RaXhQUVVGUE1rUXNTMEZCU3pabExFZEJRVzFDTTJVc1UwRkJVVFJsTEVsQlEzSkRMRWRCUVVsQkxFVkJRVmR3U0N4VFFVRlRhMGdzUjBGQldTeERRVU5zUXl4TlFVRk5PVUlzUlVGQlVTdENMRVZCUVd0Q1F5eEhRVU5vUTFRc1IwRkJZM3BtTEVWQlFWTXJaQ3hGUVVGUlV5eEZRVUZYVGl4RlFVRk5ReXhuUWtGQmFVSkVMRVZCUVUxR0xIZENRVEJEY2tWdFF5eERRVUY1UW01blFpeEZRVUZUSzJRc1JVRkJVV2RETEVWQlFXTXhRaXhGUVVGclFqRk5MRTFCUVUwc1QwRkpjRVlzVFVGQlRYTlBMRVZCUVc5Q2JFTXNSVUZCVDFNc1NVRkJZeXhIUVVNdlF5OW5RaXhQUVVGUE1rUXNTMEZCU3pabExFZEJRVzFDTTJVc1UwRkJVVGhsTEVsQlEzSkRMRTFCUVUxR0xFVkJRV0ZGTEVWQlFWbHFhMElzVVVGQlVXZG9RaXhIUVVGbExFbEJSWFJFTEVsQlFVc3dReXhIUVVGbGVFSXNSVUZCYTBKMlJpeFRRVUZUYjBnc1IwRkJZU3hEUVVNeFJDeE5RVUZOYUVNc1JVRkJVU3RDTEVWQlFXdENSeXhIUVVOb1ExZ3NSMEZCWTNwbUxFVkJRVk1yWkN4RlFVRlJVeXhGUVVGWFRpeEZRVUZOUXl4blFrRkJhVUpFTEVWQlFVMUdMSGxDUVVzM1JYRkRMRkZCUVZGeVowSXNSVUZCVTJ0bExFVkJRVTkyYUVJc1IwRkRkRUlzUjBGQmNVSXNhVUpCUVZaMWFFSXNTVUZCZFVKc1pTeEZRVU5vUXl4UFFVRlBMRXRCUjFRc1RVRkJUWE5pTEVWQlFVbFNMRXRCUTBvd1JDeEZRVUZaUXl4SFFVRmhVQ3hIUVVONlFqSkNMRVZCUVdNelFpeEpRVUZWVFN4RlFVTjRRamhDTEVWQlFWYzFReXhIUVVGaGRrZ3NTVUZCU1hGSkxFZEJRMnhETEVsQlFVa3JRaXhGUVVOQlF5eEhRVUZWTEVWQlExWkRMRWRCUVdsQ0xFVkJRMnBDUXl4SFFVRnRRaXhGUVVOdVFrTXNSVUZCVFN4TFFUUkRWaXhQUVRGRFNXUXNSMEZCWlhaRkxFbEJRMnBDYVVZc1JVRkJZMnBHTEVWQlFVVnFReXhOUVVGTk5rVXNSVUZCVDNab1FpeEhRVU0zUWpKbExFVkJRVVYwWWl4SFFVRlRjV2RDTEZGQlFWRkZMRWRCUTI1Q1F5eEhRVUZYUkN4RlFVRlpTeXgxUWtGRGRrSklMRWRCUVd0Q1JpeEZRVUZaVFN4blEwRkRPVUpJTEVWQlFXMUNTQ3hGUVVGWlR5eHpRa0ZITjBKU0xFZEJRMFpMTEVWQlFVMHZZaXhUUVVGVGJXTXNXVUZCV1N4alFVTXpRa29zUlVGQlNVc3NWVUZCVlhoRExFVkJRVmRuUXl4SFFVRlRMRWxCUld4RFJ5eEZRVUZOTEVsQlFVbE5MRmxCUVZrdlF5eEZRVUZQTEVOQlF6TkNjME1zVVVGQlFVRXNSVUZEUVZVc1dVRkJXU3hUUVV0SkxFbEJRVlIyYTBJc1IwRkRWR01zVDBGQlR6SkVMRXRCUVV0NlJTeEhRVUZOTWtVc1UwRkJVUzlFTEVsQlEzaENSU3hQUVVGUFF5eGxRVUZsYVdwQ0xFVkJRVXR3YWtJc1JVRkJTeXhEUVVNNVFrc3NTVUZCUnl4SlFVTk5ha0lzUlVGQlMxa3NVVUZQYUVKdGFrSXNSMEZEUmtNc1JVRkJTVkVzYVVKQlIwWldMRWRCUTBaNlowSXNSVUZCVVc5YUxHTkJRV04xU0N4SFFVZHdRa0VzUlVGQlNVUXNkVUpCUVRKRExFbEJRV2hDU0N4SFFVTnFRMEVzUlVGQldWa3NhVUpCUjFCU0xFbEJhVUpNVXl4SFFVRmhMRWxCUVVrelVTeEpRVU5xUWpSUkxFZEJRVThzUTBGRFdDOVFMRWxCUVVsMFVpeEZRVUZUZWtNc1JVRkJTekJOTEVkQlExaHRXQ3hIUVVGWGFrd3NTVUZCU1c1WExFbEJRMnhDYjJoQ0xFZEJRVmM1VUN4SlFVRkpkRklzUlVGQlV5eEpRVUZKZVZFc1MwRkhPVUlzVFVGQlRUWlJMRVZCUVdOR0xFZEJRVmQ0YWtJc1NVRkJTVzlETEVkQlJ6bENjMmhDTEVWQlFWbHVUQ3hKUVVGSk5Wa3NTVUZCTmtJc1NVRkJja0lyYWtJc1JVRkJXVU1zUzBGTmVrTkVMRVZCUVZsb1VTeEpRVUZKTDFRc1JVRkJTekJOTEVkQlNtNUNkVmdzVVVGQlVVTXNUVUZCVFN3clJVRkJLMFZzVEN4TlFVRk5iVXdzUzBGQlMwb3NSVUZCV1d4blFpeFJRVUZSTEZGQlQyaEplRVFzU1VGQlJ5eERRVUZEYjBNc1JVRkJVM3BETEVsQlExQTJha0lzUjBGQlYycE1MRWxCUVVsdVZ5eEpRVU5XYjJoQ0xFZEJRVmQ0YWtJc1NVRkJTVzlETEVkQlFWTndReXhKUVVGSlRDeEpRVWM1UWl4TFFVZFViMnRDTEU5QlFVOHphRUlzUlVGQlUzcERMRWRCUTJRc1NVRkJTelpxUWl4SFFVRlhha3dzU1VGQlNXNVhMRWRCUTJ4Q0xFOUJSMFlzVFVGQlRYTm9RaXhGUVVGalJpeEhRVUZYZUdwQ0xFbEJRVWx2UXl4SFFVTnVRM05vUWl4RlFVRlpUU3hQUVVGUGNtdENMRWRCUlUwc1NVRkJja0lyYWtJc1JVRkJXVU1zVFVGRFpFZ3NSMEZCVjFFc1QwRkJUelZvUWl4TFFXOUNlRUlzVFVGQlRUWm9RaXhIUVVOS1F5eFpRVUZaT1doQ0xFbEJRMVpCTEVWQlFWVjNXaXhIUVVGWGVGb3NUVUZOY2tJNVJDeExRVUZMTm14Q0xGTkJRVmN2YUVJc1JVRkRhRUp4YUVJc1IwRkJTeTlRTEVsQlFVbHdWaXhMUVVGTE5teENMRk5CUVZVM2JFSXNTMEZCU3pSc1FpeFpRVUZaUlN4VFFVRlZPV3hDTEU5QlIzSkVLMnhDTEZWQlEwVmFMRWRCUVV0TkxFOUJRVTk2YkVJc1MwRkJTelpzUWl4VFFVRlZOMnhDTEV0QlFVczBiRUlzV1VGQldVVXNWVUZETlVNM1F5eEhRVUZoUXl4SlFVRkpiR3BDTEV0QlFVczJiRUlzVTBGQlZUZHNRaXhMUVVGTE5HeENMRmxCUVZsSkxGZEJRMnBFZW10Q0xFOUJRVTh3YTBJc2IwSkJRVzlDYW0xQ0xFMUJRVTF2Uml4VFFVRlJPR2RDTEVsQlEzWkRiRzFDTEV0QlFVdHJiVUlzUjBGQlowSXNVVUZKZWtKRExHVkJRV1ZvU0N4RlFVRlZjbUlzUlVGQlUzTnBRaXhIUVVGaExFZEJRemREZUVjc1IwRkJkVUpVTEVWQlFWVnlZaXhGUVVGVGMybENMRWRCU3pWRFF5eHRRa0ZCYlVKMmFVSXNSMEZEYWtJc1QwRkJUM0ZvUWl4SFFVRkxlbXBDTEVsQlFVazBZaXhIUVVGWGVGb3NSMEZCVlRsRUxFdEJRVXM0YkVJc1ZVRkhOVU5QTERKQ1FVRXlRblpwUWl4RlFVRlRNbG9zUlVGQlV5eEpRVU16UXl4UFFVRlBlbVFzUzBGQlMzTnRRaXhaUVVGWmVHbENMRWxCUVZrc1NVRkJTVGxFTEV0QlFVczRSQ3hGUVVFeVFpeHBRa0ZCV0RKYUxFVkJRWE5DUVN4RlFVRlRMRTFCUjI1R09Fa3NjVUpCUTFRc1RVRnlRMWtzVVVGM1EwaHNTQ3hyUWtGRFZDeE5RVUZOTEVsQlFVbHRTQ3hOUVVGTkxIVkZRVWRRVml4elFrRkRWQ3hOUVVGUExFMUJRVTA1YkVJc1MwRkJTM0ZtTEU5QlIxUXlSeXgxUWtGRFZDeE5RVUZQTEVsQlFVbG9iVUlzUzBGQlN6aHNRaXhaUVZsd1FpeE5RVUZOVnl4SFFVRjFRaXhEUVVGRFF5eEZRVUZYUXl4RlFVRlRMRlZCUTJoRUxFMUJRVTFETEVWQlFXRXNaMEpCUVdkQ1JpeEZRVUZWVml4WlFVTjJRM0JvUWl4RlFVRlBPR2hDTEVWQlFWVnlTQ3hMUVVOMlFqUkVMRWRCUVdGUkxFZEJRVWN2WVN4VFFVRlZhMlVzUlVGQldTeHhRa0ZCY1VKb2FVSXNUMEZCVlN4VFFVRlZiMlFzUjBGTE4wVXNSMEZLU1N4RFFVRkRMRWxCUVVzc1VVRkJVWEJHTEZOQlFWTTFZeXhMUVVGTE5tMUNMRlZCUXpsQ04wVXNSVUZCVFdsRUxHbENRVWRLTDBjc1IwRkJWMnhsTEUxQlEySXNUMEZIUml4TlFVRk5LMUFzUlVGQlUybE9MRWRCUVhWQ2FHUXNUMEZCVTBFc1MwRkJTemh0UWl4UlFVRlJMRWxCUVVsc2FVSXNTMEZETDBNNGFFSXNSVUZCVlVzc2IwSkJRVzlDYUZnc1IwRkZkRU0wVnl4VFFUWkNZaXhOUVVGTlN5eFhRVUZqY2tJc1IwRkZVSFJITEd0Q1FVTlVMRTFCYUVKWExGRkJiMEppTkVnc1VVRkhSU3hIUVVadFFtaEZMRWRCUVdGclFpeFJRVUZSYm10Q0xFdEJRVXMyYkVJc1UwRnNRamRDTEd0Q1FXOUNSSEpDTEdsQ1FVTmlMRTlCUjBaNGEwSXNTMEZCU3pac1FpeFRRVUZUZUVnc1ZVRkJWVzlJTEU5QmNrSkdMRkZCZFVKMFFpeE5RVUZOVnl4RlFVRmhjRzFDTEV0QlFVczJiRUlzVTBGQlUzaElMRlZCUVZWNFZ5eFRRWGhDY2tJc1VVRXdRblJDTjBnc1MwRkJTMjF0UWl4blFrRkJaU3hKUVVGTmJtMUNMRXRCUVV0cmJrSXNiVUpCUVcxQ2JHNUNMRXRCUVVzMmJFSXNVMEZCVlU4c1IwRkpia1ZqTEd0Q1FVTkZiRzVDTEV0QlFVczJiRUlzVTBGQlUwb3NVMEZGWkhoRExFZEJRV0ZyUWl4UlFVRlJibXRDTEV0QlFVczJiRUlzVTBGc1ExUXNiVUpCYlVOcVFqZHNRaXhMUVVGTEsyeENMRlZCU1ZCTkxIVkNRVUYxUWpWSkxFZEJRM0pDTEU5QlFVOTZaQ3hMUVVGTGJXNUNMRTFCUVVzc1YwRkRaaXhOUVVGTmRGb3NSVUZCVDIxYUxFZEJRVTFFTEc5Q1FVRnZRaTl0UWl4TlFVVjJReXhIUVVGelFpeHBRa0ZCV0hsa0xFVkJRVmdzUTBGSlFTeFJRVUZ4UW5oakxFbEJRV3BDTkUwc1JVRkJTelJRTEVsQlFYbENRU3hGUVVGUFdpeFhRVUZYTEUxQlFXMUNMR2RDUVVGWVdTeEZRVU14UkN4TlFVRk5MRWxCUVVsTExGVkJRVlVzYjBKQlFXOUNUQ3hOUVVjeFF6VlFMRVZCUVVzMFVDeEhRVUZSZW1Rc1YwRlpia0o1YlVJc1IwRkJjVUpQTEVkQlFVOHNVMEZSTlVJdlNDeEhRVUZ0UWl0SUxFbEJZMjVDTEUxQlMwMUpMRWRCUVhsQ0xEUkNRVkV2UWl4TlFVRk5ReXhYUVVGbE1VSXNSMEZGVW5SSExHdENRVU5VTEUxQmFFSlhMRk5CYjBKaWFVa3NVMEZGUlhSdVFpeExRVUZMTm14Q0xGTkJRVk51WjBJc1lVRkJZU3hsUVVGblFqRkdMRXRCUVVzMmJFSXNVMEZCVTNoSUxGVkJRVlZwU2l4UFFXeENNME1zVjBGelFqRkNha0lzZFVKQlFYVkNOVWtzUjBGRGNrSXNUMEZCVDNwa0xFdEJRVXR0YmtJc1RVRkJTeXhYUVVObUxFMUJRVTEwV2l4RlFVRlBkMW9zUjBGQlQwNHNiMEpCUVc5Q0wyMUNMRTFCUlhwQ0xGZEJRVmg1WkN4SFFVTkdOVkFzUlVGQlN6UlFMRk5CYTBOaUxGTkJRVk00U2l4SFFVRmpReXhIUVVOeVFpeE5RVUZaTEZOQlFWSkJMRWRCU1ZFc1ZVRkJVa0VzU1VGSlFVRXNTVUZCVVhKSUxFOUJRVTl4U0N4SFFVRkxjbXBDTEZkQlEyWm5ZeXhQUVVGUGNVZ3NSMEZIU2l4TFFVRlNRU3hIUVVGelFpeFRRVUZTUVN4RlFVTlVMRXRCUjBaQkxFZEJSMVFzVTBGQlUwTXNSMEZCYVVKd2JVSXNSMEZEZUVJc1QwRkJUMEVzUlVGQlNYQkNMRkZCUVZFc1ZVRkJWWGx1UWl4SFFVRlBMRWxCUVVsQkxFVkJRVWwwYmtJc2EwSkJNVU01UXpacFFpeEhRVUZoVVN4SFFVRkhMMkVzVTBGMFEyVXNNa0pCYzBOdFFqQmxMRWxCUVhkQ2NFWXNTVUZEZUVWQkxFVkJRVTFwUkN4cFFrRkRUaXhOUVVGTk1FTXNSVUZCVXpOR0xFVkJRVTFxVXl4UFFVRlBLMWNzVVVGQlVVMHNTVUZEZGtKRExFZEJRVTlPTEc5Q1FVRnZRbGtzUjBGRGJrTk1MRmxCVTFCeVNTeEhRVUZ0UW05SkxFbEJaME51UWl4TlFVRk5UeXhIUVVGakxFTkJRMnhDUXl4cFFrRkJhVUl2YWtJc1JVRkJVM3BETEVWQlFVdGhMRWRCUXpkQ05FSXNSVUZCVVRSQ0xHRkJRV0VzVjBGQlZ5dG9RaXhIUVVGcFFuQnRRaXhMUVVGUllTeEpRVWN6UkRSc1FpeHZRa0ZCYjBKb2EwSXNSVUZCVTNwRExFZEJRek5DZVVNc1JVRkJVVEpDTEdkQ1FVRm5RaXhYUVVGWFoybENMRWRCUVdsQ2NHMUNMRTlCUjNSRU1HMUNMR3RDUVVGclFtcHJRaXhIUVVOb1FpeEpRVUZMUVN4RlFVTklMRTFCUVU4c1IwRkhWQ3hOUVVGTmVVSXNSVUZCWVN4SFFVMXVRaXhQUVV4QmFFVXNUMEZCVHpKRUxFdEJRVXR3UWl4RlFVRlJhMnRDTEZOQlFWTjBaU3hSUVVGUGNra3NSMEZCVDBFc1JVRkJTWGRpTEZkQlFWY3NVVUZCVDNwWUxGTkJRVkV2UkN4SlFVTjJSU3hKUVVGSk5HMUNMRVZCUVZVMWJVSXNSVUZCU1hCQ0xGRkJRVkVzVFVGQlR5eEpRVU5xUTJkdlFpeEZRVUZWUVN4RlFVRlJReXhQUVVGUExFZEJRVWM1YmtJc1kwRkJaMEkyYmtJc1JVRkJVWGhUTEUxQlFVMHNSVUZCUjNkVExFVkJRVkZzVlN4UlFVTnlSWGhQTEVWQlFWY3dhVUlzUjBGQlYxWXNSMEZCWTNwcVFpeEZRVUZSYTJ0Q0xGRkJRVkV6YlVJc1QwRkZMME5yUlN4SFFVZFVOR2xDTEdsQ1FVRm5RaXhEUVVGRGNtdENMRVZCUVZONlF5eEpRVU5xUW10dFFpeEhRVUZqZW1wQ0xFVkJRVkUwV1N4aFFVRmhMRmRCUVZjclN5eEhRVUZwUW5CdFFpeFBRVWQ0Uld0TExFOUJRVTk2U0N4SFFVTk1MRTFCUVUxcFJDeEZRVUZQYWtRc1JVRkJVU3RETEhkQ1FVTnlRaXhOUVVGUExFTkJRMHhhTEVsQlFVdGpMRVZCUVV0a0xFbEJRVTB2UWl4UFFVRlBLMHNzV1VGRGRrSTFUU3hMUVVGTk1FVXNSVUZCU3pGRkxFdEJRVTgyUWl4UFFVRlBOa3NzWTBGSk4wSnFTaXhUUVVGVGFFTXNTVUZEUVN4RFFVTk1iVU1zU1VGQlMyNURMRVZCUVZFNFJDeFZRVU5pZGtZc1MwRkJUWGxDTEVWQlFWRTJSQ3hqUVdGa2VXZENMRWRCUVdsQ0xFTkJRM0pDTlZNc1MwRkJTU3hEUVVGRGFVZ3NSVUZCVlROWkxFVkJRVlUwUlN4VFFVRlRReXhyUWtGRGVrSXNSMEZCUjNwR0xGVkJRVlZ4UWl4UlFVRlJla1VzVlVGQlZXdHFRaXhwUWtGQmFVSnNhRUlzUzBGQlMyZERMRVZCUVZNeVdTeEpRVWQyUlRSTUxGRkJRVThzUTBGQlF6Vk1MRVZCUVZVeldTeEZRVUZWTkVVc1UwRkJVME1zYTBKQlF6VkNjRVVzVVVGQlVYcEZMRlZCUVZVMlRDeGpRVUZqTjBvc1MwRkJTMmRETEVWQlFWTXlXU3hIUVVkMlJEWk1MRk5CUVZFc1EwRkJRM2hyUWl4RlFVRlRNbGtzU1VGRFZDeEhRVUZIZGxvc1ZVRkJWVmtzUlVGQlVYZHJRaXhWUVVGVk5XVXNVVUZCVHpOQ0xFZEJRVk5CTEVWQlFVMTNaMElzVVVGQlVUbE1MRXRCUjNSRkswd3NVVUZCVVRGclFpeEZRVUZUTWxrc1IwRkRaaXhOUVVGTkswd3NSVUZCVlN4SFFVTm9RaXhKUVVGSlF5eEZRVUZYTTJ0Q0xFVkJRVkZ6UlN4WFFVVjJRaXhMUVVGUGNXZENMRWRCUVZsQkxFVkJRVk53VEN4WFFVRmhZeXhMUVVGTFF5eGpRV3hDYUVNc1NVRnJRbWRFY1Vzc1JVRkJVM0JNTEZWQlEycEZiMHdzUlVGQlUwWXNVVUZCVVRsTUxFbEJRMjVDSzB3c1JVRkJVWFpVTEV0QlFVdDNWQ3hIUVVkbVFTeEZRVUZYUVN4RlFVRlRjbWRDTEZkQlIzUkNMRTlCUVU5dlowSXNSMEZIVkVVc1MwRkJTelZyUWl4RlFVRlRNbGtzUjBGRFdpeEpRVUZKYTAwc1JVRkJWemRyUWl4RlFVRlJPR3RDTEhWQ1FVVjJRaXhMUVVGUFJDeEhRVUZWTEVOQlEyWXNSMEZCU1VFc1JVRkJVMG9zVVVGQlVUbE1MRWRCUTI1Q0xFMUJRVThzUTBGQlEydE5MRWRCUjFaQkxFVkJRVmRCTEVWQlFWTkRMSFZDUVVkMFFpeE5RVUZQTEVsQlIxUXhaMElzUzBGQlMzQkZMRVZCUVZNeVdTeEhRVU5hTEVsQlFVbDJWU3hGUVVGUGNFVXNSVUZCVVN0clFpeHRRa0ZGYmtJc1MwRkJUek5uUWl4SFFVRk5MRU5CUTFnc1IwRkJTVUVzUlVGQlMzRm5RaXhSUVVGUk9Vd3NSMEZEWml4TlFVRlBMRU5CUVVOMlZTeEhRVWRXUVN4RlFVRlBRU3hGUVVGTE1tZENMRzFDUVVka0xFMUJRVThzU1VGSFZFTXNhMEpCUVd0Q2FHeENMRWRCUTJoQ0xFMUJRVTFwYkVJc1JVRkJZU3hEUVVGRExFbEJRVXNzVTBGQlZTeFJRVUZUTEZkQlFWa3NVMEZCVlN4VlFVRlhMR0ZCUVdNc05FSkJRVFJDY2xBc1MwRkJTU3RETEVkQlFWa3NSMEZCUjBFc01rSkJRV2xEZFUwc1MwRkJTeXhOUVVOb1RDeFBRVUZQYUhCQ0xFdEJRVXQzVml4TFFVRkxkVlFzUlVGQldXcHNRaXhIUVVGVE5FWXNVVUZCVDNWbUxFbEJRVTh2U3l4SFFVRlhLMHNzU1VGQlQyeE1MRWRCUVZWclRDeFBRV2xDT1VWRExFZEJRVk1zVjBGVFZFTXNSMEZCV1N4RFFVTm9Ra01zVTBGQlZTeEpRVU5XUXl4VlFVRlZMRVZCUTFaRExFOUJRVThzUlVGRFVFTXNUVUZCVHl4UlFVTlFReXhOUVVGTkxFVkJRMDVETEU5QlFVOHNSMEZGU0VNc1IwRkJaMElzUTBGRGNFSk9MRk5CUVZVc2JVSkJRMVpETEZOQlFWVXNWVUZEVmtNc1RVRkJUeXh0UWtGRFVFTXNUVUZCVHl4dFFrRkRVRU1zUzBGQlRTeFZRVU5PUXl4TlFVRlBMRmRCUlVoRkxFZEJRV0VzVDBGRFlrTXNSMEZCWVN4UFFVTmlReXhIUVVGcFFpeFBRVU5xUWtNc1IwRkJhMElzVVVGRGJFSkRMRWRCUVcxQ0xFTkJRM1pDTEZWQlFXdENSQ3hIUVVOc1FpeFhRVUZ0UWtRc1NVRkhaa2NzUjBGQllTeHRRa0ZoWWtNc1IwRkJjMElzVTBGUmRFSkRMRWRCUVhWQ0xIZENRV2RDTjBJc1RVRkJUVU1zVjBGQmFVSjRSU3hIUVVOeVFrTXNXVUZCV1Rsb1FpeEZRVUZUTWxvc1IwRkRia0l5VFN4TlFVRk5kRzFDTEVkQlEwNDVSQ3hMUVVGTGNYRkNMRTlCUVZNc1MwRkRaSEp4UWl4TFFVRkxjM0ZDTEZWQlFWa3NTMEZEYWtKMGNVSXNTMEZCUzNWeFFpeGxRVUZwUWl4TFFVTjBRblp4UWl4TFFVRkxkM0ZDTEZkQlFWa3NSVUZEYWtKNGNVSXNTMEZCUzNseFFpeFpRVUZoTEVWQlEyeENlbkZDTEV0QlFVc3djVUlzWVVGQlpTeExRVU53UWpGeFFpeExRVUZMTW5GQ0xGbEJRV01zUlVGRGJrSXpjVUlzUzBGQlN6UnhRaXhaUVVGakxFVkJRMjVDTlhGQ0xFdEJRVXMyY1VJc1VVRkJWVGR4UWl4TFFVRkxPSEZDTEZkQlFWZHlUaXhIUVVNdlFucGtMRXRCUVVzcmNVSXNiVUpCUVhGQ00wTXNSMEZCWlVNc1VVRjRRbXBDTEhWQ1FYZENPRU55YjBJc1MwRkJTelpzUWl4VlFVTXpSVGRzUWl4TFFVRkxaM0pDTEdkQ1FVRnJRaXhwUWtGQmEwSjBhVUlzVTBGQlUwTXNhVUpCUVcxQ1R5eFZRVUZWSzJoQ0xHVkJRV2xDTEVWQlEyaEhhbkpDTEV0QlFVdHJja0lzWTBGQlowSXhTQ3hSUVVGUmRHWXNUMEZCVDJsdVFpeGpRVVZ3UTI1eVFpeExRVUZMYjNKQ0xIRkNRVWxKUXl4eFFrRkRWQ3hQUVVGUGJFTXNSMEZIUlRsS0xHdENRVU5VTEU5QlFVODJTaXhIUVVsVWFHaENMRTlCUTBWc1NTeExRVUZMYzNKQ0xFOUJRVTh6UWl4SlFVZGtORUlzYlVKQlIwODNhVUlzVTBGQlV6aHBRaXhSUVVGVmVrNHNSMEZCVlM5a0xFdEJRVXMyYkVJc1YwRkRja00zYkVJc1MwRkJTMnRKTEU5QlNWUjNaMElzVDBGRFJURnZRaXhMUVVGTGMzSkNMRTlCUVU4eFFpeEpRVWRrVEN4TlFVRk5ka2dzUjBGRFEwRXNTVUZEU0docFFpeExRVUZMZDNGQ0xGZEJRVmtzUjBGSFpuQkRMRWRCUVdWRExGRkJMMFJKTERKRFFTdEVkMEp5YjBJc1MwRkJTelpzUWl4WlFVTnNSRFZKTEVkQlFYRkNhbVFzUzBGQlN6WnNRaXhWUVVNeFFqZHNRaXhMUVVGTGVYSkNMRTlCUVUwc1NVRkhZa01zWTBGQll6RnlRaXhMUVVGTGMzRkNMRmRCUTI1Q2RIRkNMRXRCUVV0emNVSXNWVUZCV1N4TFFVZHVRbTFDTEUxQlFVMTZTaXhIUVVORFFTeEpRVU5JYUdsQ0xFdEJRVXQzY1VJc1YwRkJXU3hIUVVkbWVIRkNMRXRCUVV0emNVSXNXVUZEVUc5Q0xHTkJRV014Y2tJc1MwRkJTM054UWl4WFFVTnVRblJ4UWl4TFFVRkxjM0ZDTEZWQlFWa3NUVUZIWm5SeFFpeExRVUZMTm5GQ0xGTkJRVmMzY1VJc1MwRkJTelp4UWl4UlFVRlJla0lzVjBGQllYQndRaXhMUVVGTGQzRkNMRmxCUTJwRWVIRkNMRXRCUVVzeWNrSXNhMEpCUlV3emNrSXNTMEZCUzNOeFFpeFZRVUZaYzBJc1lVRkJZV3hxUWl4VFFVRlRiV3BDTEdkQ1FVRnJRamR5UWl4TFFVRkxkWEpDTEdkQ1FVRnJRblp5UWl4TFFVRkxhMGtzVFVGQlRUUnFRaXhMUVVGTE9YSkNMRTFCUVU5QkxFdEJRVXMyY1VJc1VVRkJVWHBDTEZkQlNYaElNa01zUjBGQlJ6VnlRaXhIUVVORVNDeExRVUZMZFhGQ0xHVkJRV2xDYmtNc1IwRkJaVU1zVVVGQlVUWkNMRWRCUVhOQ2JIRkNMRXRCUVVzMmJFSXNWVUZGZUVVc1RVRkJUVzFITEVWQlFXTm9jMElzUzBGQlMybHpRaXhqUVVGamFuTkNMRXRCUVV0MWNVSXNaMEpCUlRWRExFZEJRVWx3Y1VJc1JVRkJVVWdzUzBGQlMzRnhRaXhQUVVGUGRGY3NUMEZCVXl4SFFVRkxOVlFzUlVGQlVTeEZRVU0xUXl4UFFVZEdMRWRCUVVsSUxFdEJRVXQ1Y1VJc1YwRkZVQ3haUVVSQmVFZ3NSMEZCWVZNc1NVRkJTVEZxUWl4TFFVRkxObXhDTEZOQlFWVnRSU3hKUVVGWkxFbEJRVTFvY1VJc1MwRkJTeXR5UWl4SFFVRkhOWEpDTEV0QlNUVkVMRWRCUVVrMmNrSXNTVUZCWjBJM2NrSXNSVUZIYkVJc1QwRkdRVWdzUzBGQlMzVndRaXhoUVVOTWRuQkNMRXRCUVV0NWNrSXNVVUZKVUN4TlFVRk5hbE1zUlVGQlVYSmFMRVZCUVZFMmNrSXNSVUZCWTNKRExFZEJRV0ZETEVkQlJXcEVOWEJDTEV0QlFVdHpja0lzVDBGQlR6bFNMRVZCUVU5NFdpeExRVUZMY1hGQ0xFOUJRVTlzY1VJc1NVRkpha015Y1VJc1YwRkJWM0pPTEVkQlRWUXNUMEZNUVVFc1JVRkJVeXhKUVVGTE1Fd3NUVUZEVkhaQ0xFZEJRVmxITEd0Q1FVRnJRaTl1UWl4TFFVRkxObXhDTEdGQlEyaENMR2xDUVVGWWNFa3NSVUZCYzBKQkxFVkJRVk1zU1VGRk5VTkdMRWRCUVdkQ01rd3NSMEZCVVhwTUxFVkJRVkZwVFN4SlFVTjZRbXBOTEVWQlIxUjVUeXhsUVVORkxFMUJRVTFETEVWQlFWa3hiRUlzUzBGQlMybENMRWxCUVVreFNDeExRVUZMTkhGQ0xHRkJSV2hETEVkQlFVbDFRaXhIUVdwTVowSXNSMEZyVEd4Q0xFOUJSMFlzVFVGQlRYWmlMRVZCUVZsMVlpeEZRVUZaYm5OQ0xFdEJRVXMwY1VJc1dVRkRia00xY1VJc1MwRkJTelJ4UWl4WlFVRmpMRVZCUldSb1lTeEhRVWxNTlZFc1MwRkJTM055UWl4UFFVRlBNV0VzUlVGQldTeEZRVUZKYTFvc1IwRkJhMEpFTEVsQlIyaEVkVUlzY1VKQlEwMXdja0lzUzBGQlN6WnhRaXhSUVVGUmVFSXNWVUZEWm5CSExFZEJRV0ZSTEVkQlFVZDZha0lzUzBGQlN6WnNRaXhUUVhSTFRDeDFRa0Z6U3poQ04wUXNSMEZCVTJocFFpeExRVUZMYjNOQ0xGTkJRVk53U3l4TFFVYzFReXhWUVVGMlFtaHBRaXhMUVVGTE5uRkNMRkZCUVZGMFFpeFJRVU5tZEVjc1IwRkJZVkVzUjBGQlIzcHFRaXhMUVVGTE5teENMRk5CZWt0R0xEQkNRWGxMT0VJM1JDeEhRVUZUYUdsQ0xFdEJRVXQxY0VJc1RVRkJUWFpJTEV0QlEzSkZhVUlzUjBGQllWRXNSMEZCUjNwcVFpeExRVUZMTm14Q0xGTkJla3RHTERCQ1FYbExPRUkzUkN4SFFVRlRhR2xDTEV0QlFVdDVja0lzVFVGQlRYcEtMRTFCUjI1RmFHbENMRXRCUVVzMmNVSXNVVUZCVVhCQ0xFOUJRVk42Y0VJc1MwRkJTMmR5UWl4cFFrRkROMEpvY2tJc1MwRkJTM0Z6UWl3d1FrRkpWRUVzTUVKQlEwVXNUVUZCVFVNc1JVRkJjVUowU3l4SFFVTnNRbWhwUWl4TFFVRkxhM0pDTEdkQ1FYaEtUeXhSUVhkS1YyeEtMRVZCUVUxMVN5eGhRWHBLWml4VlFYbEtiVVIyU3l4RlFVRk5kVXNzWVVGSE1VVXZjRUlzUlVGQlVYZG1MRWxCUTFKelN5eEZRVUZ0UW5STExFZEJRM0pDYUdsQ0xFdEJRVXN5Y1VJc1dVRkJZek5KTEVWQlFVMTNTeXhSUVVObWVITkNMRXRCUVV0cmNrSXNaMEpCUTJac2NrSXNTMEZCU3pKeFFpeFpRVUZqTTBrc1JVRkJUWGxMTEZGQlFWRXNSMEZCUjBRc1ZVRkpiRU5GTEVWQlFVOHhTeXhKUVVWWWFHbENMRXRCUVVzMGNVSXNXVUZCWXpWSkxFVkJRVTE1U3l4VFFVRlhla3NzUlVGQlRYbExMRkZCUVZFeFdTeFBRVUZUTEVWQlFVa3NSVUZCU1dsUExFVkJRVTE1U3l4UlFVRlJMRWRCUVVkRUxGRkJRVlY0YzBJc1MwRkJTekp4UWl4aFFVY3ZSbXh2UWl4RlFVRk5kV1lzU1VGRFRuTkxMRVZCUVcxQ2RFc3NTMEZEY2tKb2FVSXNTMEZCU3pSeFFpeFpRVUZqTlVrc1JVRkJUWGRMTEZGQlFWVjRjMElzUzBGQlN6SnhRaXhoUVVjeFF6TnhRaXhMUVVGTGEzTkNMR1ZCUlhOQ0xGVkJRWFpDYkhOQ0xFdEJRVXMyY1VJc1VVRkJVWFJDTEZGQlVXWjJjRUlzUzBGQlMzVndRaXhSUVVWRWRuQkNMRXRCUVVzd2NVSXNZMEZEVUdsRExHRkJRV0V6YzBJc1MwRkJTekJ4UWl4alFVZHdRakZ4UWl4TFFVRkxNSEZDTEdGQlFXVnFTeXhaUVVGWGRVSXNSMEZCVTJocFFpeExRVUZMZVhKQ0xFMUJRVTE2U2l4SlFYWlFOVUlzU1VGMVVEWkVhR2xDTEV0QlFVczJjVUlzVVVGQlVYcENMRmxCU1hKSGFFSXNSMEZCWlRWVExFdEJlRTFQTEhGQ1FYZE5hVUo0Vml4TFFVRkxObXhDTEZWQlFWVjZaMElzVTBGQlVYZHVRaXhKUVVNMVJETktMRWRCUVdGUkxFZEJRVWR0U2l4RlFYWk9SeXg1UWtGMVRuZENOVXNzUjBGQlUwRXNSVUZCVFdsRUxITkNRVWQ0Ukdwc1FpeExRVUZMYTNKQ0xHVkJRMUJxU1N4SFFVRmhVU3hIUVVGSGVtcENMRXRCUVVzMmJFSXNVMEUzVGtRc01rSkJOazQ0UWpkRUxFZEJRVk40Wml4RlFVRk5kMllzUzBGRGFrVnBRaXhIUVVGaFVTeEhRVUZIZW1wQ0xFdEJRVXMyYkVJc1UwRTNUa2dzZVVKQk5rNDRRamRFTEVkQlFWTjJaaXhGUVVGSmRXWXNTMEZGTjBSb2FVSXNTMEZCU3pac1FpeFRRVUZUZUVnc1ZVRkJWWFJGTEVsQmNFNUhMRzFDUVhOT00wSnJTaXhIUVVGaFVTeEhRVUZIZW1wQ0xFdEJRVXMyYkVJc1UwRnlUMFlzTUVKQmNVODRRamRFTEVkQlFWTjRaaXhGUVVGTmQyWXNTMEZEYUVWcFFpeEhRVUZoVVN4SFFVRkhlbXBDTEV0QlFVczJiRUlzVTBGeVQwZ3NlVUpCY1U4NFFqZEVMRWRCUVZNd1N5eEZRVUZMTVVzc1MwRkRPVVJwUWl4SFFVRmhVU3hIUVVGSGVtcENMRXRCUVVzMmJFSXNVMEZ5VDBvc2QwSkJjVTg0UWpkRUxFZEJRVk4yWml4RlFVRkpkV1lzVFVGSmFFVnZTeXhUUVVGVGNFc3NSMEZEVUN4SFFVRkpMR3RDUVVGclFuaFRMRXRCUVV0M1V5eEZRVUZOYWxNc1QwRkJUemhYTEZOQlEzUkRMRTlCUjBZc1RVRkJUV3BYTEVWQlFWbHRXaXhIUVVGcFFpOUlMRVZCUVUwelowSXNTMEZGY2tOMVVDeEpRVU5HYjFJc1JVRkJUV2xFTEdsQ1FVVk9hbXhDTEV0QlFVdHpja0lzVDBGQlR6RmhMRWxCU1doQ2NXSXNZMEZCWTI1dlFpeEhRVVZhTEU5QlJFRTVSQ3hMUVVGTGNYRkNMRTlCUVZOMmJVSXNSMEZCVjBFc1JVRkJVWE5GTEZkQlFXRm5aMElzUjBGQlpUVlRMRXRCZUU4elF5eHBRa0YzVHl0RU1WSXNSVUZCVVhORkxGbEJRV01zUjBGRGFFZHdTU3hMUVVGTGNYRkNMRTlCUVU4M2FFSXNVVUZCVVRGRkxFZEJSemRDSzI5Q0xHZENRVUZuUW5KVUxFVkJRVTl0U0N4SFFVTnlRaXhOUVVGTmJVMHNSVUZCVTNSVUxFbEJRVlZ0VVN4SFFVTjZRaXhQUVVGUGFrb3NSMEZCY1VJeFowSXNTMEZCUzNGeFFpeFBRVUZSTVVvc1JVRkJaVzFOTEVWQlFWRTVjMElzUzBGQlN6WnhRaXhSUVVGUmNrSXNUVUZITDBWMVJDeHRRa0ZCYlVKd1N5eEZRVUZsY1Vzc1IwRkRhRU1zVFVGQlRVTXNSVUZCWTJwMFFpeExRVUZMYVhOQ0xHTkJRV04wU2l4SFFVVnFRM1ZMTEVWQlFWbHNkRUlzUzBGQlMybHpRaXhqUVVGak4wUXNSMEZCWlVNc1VVRkJVVFpDTEVkQlFYTkNiSEZDTEV0QlFVczJiRUlzVjBGRmRrWXNUMEZCVHpWRExFZEJRV0ZyUWl4UlFVRlJibXRDTEV0QlFVczJiRUlzVTBFM1VXcENMRzlDUVRaUmQwTXNRMEZEZEVSc1JDeGpRVUZCUVN4RlFVTkJMMUlzVlVGQlYyOWpMRVZCUTFoNFNDeExRVUZOTUVnc1JVRkRUbTVDTEVkQlFVbHJRaXhKUVVsU1JTd3lRa0ZCTWtKeWNFSXNSMEZEZWtJc1IwRkJTVGxFTEV0QlFVc3JjVUlzYlVKQlFXOUNMRU5CUXpOQ0xFMUJRVTF4UXl4RlFVRnJRbWhHTEVkQlFXVkRMRkZCYkZGdVFpeFZRV3RST0VOeWIwSXNTMEZCU3l0eFFpeHZRa0ZEZGtWeFF5eEZRVUZuUWk5UExGVkJRVlZ2U0N4UFFVRlBkMFVzU1VGRGFrTnRSQ3hGUVVGblFqTnVRaXhuUWtGQlowSXNaMEpCUTJoRExFMUJRVTAwYmtJc1JVRkJZV3BHTEVkQlFXVTFVeXhMUVM5UVlpeHRRa0VyVUhORGVGWXNTMEZCU3l0eFFpeHZRa0ZGYUVVc1NVRkJTeXhKUVVGSmNsY3NSVUZCU1N4RlFVRkhRU3hGUVVGSk1sa3NSVUZCVjNSYUxFOUJRVkZYTEVsQlEzSkRMRWRCUVVsNVRDeFBRVUZQYlU0c1UwRkJVMFFzUlVGQlZ6TlpMRWRCUVVkblNTeGhRVUZoTEc5Q1FVRnhRaXhOUVVGUk1XTXNTMEZCUzJselFpeGpRVUZqYm05Q0xFZEJRVlVzUTBGRGRrZDFjRUlzUlVGQlZ6TlpMRWRCUVVjeVNpeFZRVUZWZEVVc1NVRkJTV3RSTEVsQlF6VkNiMFFzUlVGQlZ6TlpMRWRCUVVkb1VDeGhRVUZoTEdWQlFXZENMRkZCUXpORExGRkJUVkpwYlVJc2EwSkJRMFVzVFVGQlRUZHVRaXhGUVVGVk9VUXNTMEZCUzNWeFFpeG5Ra0ZCYTBKdVF5eEhRVUZsUXl4UlFVRlJOa0lzUjBGQmMwSnNjVUlzUzBGQlN6WnNRaXhWUVVWNlJpeEpRVUZMTDJoQ0xFVkJRMGdzVDBGSFJpeE5RVUZOZVhCQ0xFVkJRV3RDY0U0c1QwRkJUMjFPTEZOQlFWTjRjRUlzUlVGQlVUUlpMR0ZCUVdFc2IwSkJRWEZDTEVsQlJUbEZObEVzUjBGRFJuWjBRaXhMUVVGTE5uRkNMRkZCUVZFeVF5eG5Ra0ZCYTBKNGRFSXNTMEZCU3paeFFpeFJRVUZSTWtNc2FVSkJRVzFDZUhSQ0xFdEJRVXMyY1VJc1VVRkJVWHBDTEZOQlF6VkZjSEJDTEV0QlFVczJjVUlzVVVGQlVYcENMRk5CUVZkdFJTeEhRVVY0UW5aMFFpeExRVUZMTm5GQ0xGRkJRVkY2UWl4VFFVRlhjSEJDTEV0QlFVczJjVUlzVVVGQlVUSkRMR2xDUVVGdFFuaDBRaXhMUVVGTE5uRkNMRkZCUVZGNlFpeFRRVWw2Uld0RExFOUJRVTl0UXl4RlFVRnJRak53UWl4SFFVTjJRaXhOUVVGTk1GWXNSVUZCVVhoYUxFdEJRVXN3ZEVJc2EwSkJRV3RDUkN4SFFVVXZRamxOTEVWQlFXZENlVWdzUjBGQlpVTXNVVUZCVVRaQ0xFZEJRWE5DYkhGQ0xFdEJRVXMyYkVJc1ZVRkZiRVU0U0N4RlFVRnhRak4wUWl4TFFVRkxhWE5DTEdOQlFXTjBUQ3hIUVVWNFEybE9MRVZCUVdNNWNFSXNSMEZCVnpsRUxFdEJRVXMyYzBJc1owSkJRV2RDY2xRc1JVRkJUMjFJTEVkQlJYSkVhMDRzUlVGQmJVSTNkRUlzUzBGQlMybHpRaXhqUVVGak1rSXNSMEZGZEVORkxFVkJRVmwwU3l4UlFVRlJlR3BDTEV0QlFVdHpjVUlzVjBGRGVrSjNReXhGUVVGVGRGUXNTVUZCVlcxUkxFZEJRMjVDYjBVc1JVRkJkVUpxUWl4RlFXNVVVaXh6UWtGRVJpeHZRa0Z4VkdKclFpeEZRVUZwUW14Q0xFVkJibFJJTEhGQ1FVTkJMSEZDUVc5VVpFVXNSVUZCY1VKb2RFSXNTMEZCUzJsMVFpeHJRa0ZCYTBKNlZTeEhRVVZzUkN4SFFVRkpiMVVzUjBGQlpVRXNSVUZCV1haUUxGVkJRVlY0Vnl4VFFVRlRiMmxDTEVsQlJXaEVMRmxCUkVGcWNVSXNTMEZCUzNseFFpeFpRVUZoTEVkQlNYQkNMRWRCUVVsNmNVSXNTMEZCUzNseFFpeFhRVU5RTEU5QlMwWXNSMEZHYlVKNmNVSXNTMEZCU3l0elFpeHRRa0ZCYlVKaExFVkJRV0ZhTEVkQlJYcERlRWtzYVVKQlEySXNUMEZIUml4SlFVRkxOMFFzU1VGQmEwSnBUaXhGUVVWeVFpeFBRVWRHTlhSQ0xFdEJRVXQ1Y1VJc1dVRkJZU3hGUVVWa2NVUXNSMEZEUmpsMFFpeExRVUZMZFhCQ0xGRkJSMUIyY0VJc1MwRkJTMjEwUWl3eVFrRkJNa0pUTEVkQlJXaEROWFJDTEV0QlFVdDFjVUlzWlVGQmFVSnhSQ3hGUVVWMFFpeE5RVUZOVFN4RlFVRnRRaXhMUVVOMlFtcE1MRWRCUVdGclFpeFJRVUZSYm10Q0xFdEJRVXMyYkVJc1UwRkJWVzFGTEVkQlFWa3NRMEZET1VOeVNDeGpRVUZsYVV3c1JVRkRabWhrTEZWQlFWZHZZeXhGUVVOWWVFZ3NTMEZCVFcxSkxFVkJRMDQxUWl4SFFVRkpPRUlzUzBGSlVpeEhRVUZKTjNSQ0xFdEJRVXMyYkVJc1UwRkJVM2hJTEZWQlFWVjRWeXhUUVdwWFVDeFRRV2xYYlVNc1EwRkRkRVFyYkVJc1JVRkJXWFpRTEZWQlFWVjBSU3hKUVVGSmFWVXNSMEZETVVKeVVDeEhRVUZQYVZBc1IwRkRVR3BPTEVWQlFXTjBReXhWUVVGVmRFVXNTVUZCU1dkVkxFZEJRelZDU0N4RlFVRlpkbEFzVlVGQlZYUkZMRWxCUVVsblZTeEhRVVV4UWl4TlFVRk5TU3hGUVVGdFFpeExRVU4yUWxBc1JVRkJXWFpRTEZWQlFWVnZTQ3hQUVVGUGMwa3NSVUZCYzBKRExFZEJRMjVFU2l4RlFVRlpkbEFzVlVGQlZYUkZMRWxCUVVsclVTeEpRVU14UW5SS0xFVkJRV04wUXl4VlFVRlZiMGdzVDBGQlQzZEZMRWRCUVhGQ0swUXNSVUZCWjBKRUxFZEJRM0JGTDNSQ0xFdEJRVXQ1Y1VJc1dVRkJZU3hGUVVOc1FtaExMRmRCUVZkNVRpeEZRVUZyUWl4SlFVY3ZRbXgxUWl4TFFVRkxiVzFDTEdWQlFXVm5TU3hGUVVGclFuaE9MRWRCUVdVc1VVRkZja1JCTEVWQlFXTjBReXhWUVVGVmIwZ3NUMEZCVDNkRkxFbEJReTlDTWtRc1JVRkJXWFpRTEZWQlFWVjBSU3hKUVVGSmExRXNTVUZETVVKcWNVSXNTMEZCUzNseFFpeFpRVUZoTEVWQlEyeENlVVFzU1VGSFJVb3NSMEZEUmpsMFFpeExRVUZMZVhKQ0xGRkJTVlJwUXl4clFrRkJhMEk1WXl4SFFVTm9RaXhOUVVGTExFTkJRVU5yV2l4SFFVRnBRa1FzU1VGQlowSnFUaXhUUVVGVGFFMHNSMEZKTlVOdFR5eExRVU5MYms4c1NVRkJZMmxhTEVkQlFXbENSQ3hIUVVGaFJDeEhRVWM1UXk5WkxFbEJRV05wV2l4SFFVRnBRa1lzUjBGQllVTXNSMEZRTVVOb1dpeEZRVlZZY1dRc2EwSkJRV3RDZWxVc1IwRkRhRUlzVFVGQlN5eERRVUZEYlZFc1IwRkJXVU1zU1VGQldXaE9MRk5CUVZOd1JDeEhRVWx1UTNWR0xFdEJRMHQyUml4SlFVRlZiMUVzUjBGQllVTXNSMEZCYVVKRExFZEJSekZEZEZFc1NVRkJWVzlSTEVkQlFXRkZMRWRCUVd0Q1JDeEhRVkIyUTNKUkxFVkJWMWcyVFN4NVFrRkJlVUoyYVVJc1JVRkJVekphTEVkQlEyaERMRTFCUVUwMVVDeEZRVUZQYzJNc1IwRkJVM0JFTEc5Q1FVRnZRbXBxUWl4RlFVRlRNbG9zUjBGRGJrUXNTVUZCU1N4UlFVTkdiMDRzUjBGRFJXaGtMRVZCUld0Q0xHbENRVUZZTkZBc1NVRkRWRzlPTEVWQlFWVXNTVUZCUzBFc1MwRkRWbkJPTEVsQlNWQXNUVUZCVFRKUkxFVkJRVEpDTEdsQ1FVRllNMUVzUlVGQmMwSkJMRVZCUVZOdlRpeEZRVUZSZGtJc1RVRkZOMFFzUjBGQmMwSXNhVUpCUVZnM1RDeEZRVU5VTlZBc1JVRkJTMnRsTEVkQlFVZDBUeXhSUVVOSUxFZEJRWE5DTEdsQ1FVRllNbEVzUlVGQmNVSXNRMEZEY2tNc1VVRkJORUlzU1VGQmFrSjJaMElzUlVGQlMzVm5RaXhIUVVOa0xFMUJRVTBzU1VGQlNYUlJMRlZCUVZVc2IwSkJRVzlDYzFFc1RVRkhNVU4yWjBJc1JVRkJTM1ZuUWl4VlFVTkpka1FzUlVGQlVYcENMRlZCUVZsNVFpeEZRVUZSZDBRc1QwRkRja040WjBJc1JVRkJTekJpTEZGQlEwd3hZaXhGUVVGTE5HUXNVMEZKVkhCR0xIVkNRVUYxUWpWSkxFZEJRM0pDTEU5QlFVOTZaQ3hMUVVGTGJXNUNMRTFCUVVzc1YwRkRabWRFTEVkQlFWTnRSU3hyUWtGQmEwSjBkVUlzUzBGQlRYbGtMRTFCU1hKRE5Fa3NNa0pCUVRKQ2NrVXNSMEZEZWtJc1RVRkJUV3BUTEVWQlFWTnBUaXhIUVVGMVFtaGtMRTFCUlhSRExFbEJRVXNyVUN4SlFVRlhRU3hGUVVGUGMwOHNWVUZCVlhoWExGTkJOV0pVTEZsQk5tSjBRaXhQUVVkR0xFMUJRVTAwVml4RlFVRlRMRWxCUVV0dFN5eEhRVUZaUnl4clFrRkJhMEpvV1N4TlFVTTNRelpZTEVkQlFWbEhMR3RDUVVGclFpOXVRaXhQUVVVM1FuVjFRaXhGUVVGaGRuVkNMRXRCUVVzd1l5eGhRVUZoTEc5Q1FVVnFRelpTTEVsQlEwWTVVU3hGUVVGUE1rd3NWVUZCVnl4SFFVZHdRbVVzUjBGQlUyMUZMR3RDUVVGclFuWmxMRVZCUVZFd1RpeEhRVVV2UWpoUkxFZEJRMFp3UlN4SFFVRlROMFFzV1VGQldYWlhMRWRCUVZGbll5eEhRVUZIZDBNc1IwRkhiRU4yVFN4RlFVRk5hVVFzYTBKQlYxWm9ReXhIUVVGaFVTeEhRVUZITDJFc1UwRXpaR1VzTmtKQlowSklMSE5EUVRKak1rTjVhRUlzUjBGQlUzRkZMSEZDUVVOb1JuWk1MRWRCUVdGUkxFZEJRVWQyWml4UFFUZGtZeXcyUWtFMlpHbENMRXRCUXpkRExFMUJRVTExY1VJc1JVRkJXWEpITEVkQlFXVTFVeXhMUVRWalVpdzJRa0U0WTNwQ0xFbEJRVXNzU1VGQlNXUXNSVUZCU1N4RlFVRkhiRXNzUlVGQlRXbHJRaXhGUVVGVk1XRXNUMEZCVVZjc1JVRkJTV3hMTEVWQlFVdHJTeXhKUVVNdlEzbFdMRWRCUVZOdFJTeHJRa0ZCYTBKSExFVkJRVlV2V2l4SFFVRkplVllzUjBGQlV6ZEVMRmxCUVZsdFNTeEZRVUZWTDFvc1VVRlZOVVYxU3l4SFFVRnRRbXRNTEVsQlkyNUNMRTFCUVUxMVJTeEhRVUZUTEZkQlNWUkRMRWRCUVZrc1EwRkRhRUp5U0N4UlFVRlJMRVZCUTFKNFppeFBRVUZSTEUxQlJVbzRiVUlzUjBGQlowSXNRMEZEY0VKMFNDeFBRVUZSTEZWQlExSjRaaXhQUVVGUkxHdENRVTlLSzIxQ0xFZEJRVzlDTEU5QlEzQkNReXhIUVVGelFpeFhRVU4wUWtNc1IwRkJkMElzWVVGRGVFSkRMRWRCUVhWQ0xGbEJRM1pDUXl4SFFVRTJRaXcyUWtGTE4wSkRMRWRCUVhsQ0xEaENRVTh2UWl4TlFVRk5ReXhYUVVGcFFuaEtMRWRCUTNKQ1F5eFpRVUZaT1doQ0xFVkJRVk15V2l4SFFVTnVRakpOTEUxQlFVMTBiVUlzUjBGRFRqbEVMRXRCUVV0dmRrSXNhMEpCUVcxQ0xFVkJRM2hDY0haQ0xFdEJRVXMyY1VJc1VVRkJWVGR4UWl4TFFVRkxPSEZDTEZkQlFWZHlUaXhIUVVNdlFucGtMRXRCUVV0eGRrSXNZMEZCWjBJc1IwRkRja0lzVFVGQlRVTXNSVUZCWVd4SUxFZEJRV1UxVXl4TFFVRkxNRm9zU1VGRmRrTXNTVUZCU3l4SlFVRkplR0VzUlVGQlNTeEZRVUZIYkVzc1JVRkJUVGhyUWl4RlFVRlhkbUlzVDBGQlVWY3NSVUZCU1d4TExFVkJRVXRyU3l4SlFVRkxMRU5CUTNKRUxFMUJRVTAyWVN4RlFVRlBSQ3hGUVVGWE5XRXNSMEZEYkVJclNDeEZRVUZYVFN4SFFVRjFRbmRUTEVkQlEyeERReXhGUVVGblFuQklMRWRCUVdVMVV5eExRVUZMYVVnc1IwRkJWUzlUTEZGQlFVOHJiRUlzUjBGQllVRXNTVUZCWTNwMlFpeExRVUZMTm14Q0xGZEJSVEZGTEU5QlFXSndTaXhIUVVGeFFpdFRMRVZCUVdONllpeFRRVU55UXk5VUxFdEJRVXN3ZGtJc1ZVRkJXV3BVTEVWQlJXcENlbU1zUzBGQlMzRjJRaXhqUVVGamNHRXNTMEZCUzNOaExFbEJTVFZDZG5aQ0xFdEJRVXN5ZGtJc2MwSkJSVUV6ZGtJc1MwRkJTelp4UWl4UlFVRlJMMmxDTEZGQlEyaENPVWdzUzBGQlN6UjJRaXd3UWtGQk1FSTFka0lzUzBGQlMzRjJRaXhqUVVGbGNuWkNMRXRCUVVzMmRrSXNXVUZIZEVRM2RrSXNTMEZCU3paeFFpeFJRVUZSZGtRc1VVRkRablJ1UWl4TFFVRkxjMjVDTEZOQlMwVXJSQ3h4UWtGRFZDeFBRVUZQYzBRc1IwRkhSWFJRTEd0Q1FVTlVMRTlCUVU5eFVDeEhRVWxVY0Vnc1UwRkRUWFJ1UWl4TFFVRkxOblpDTEZkQlExQTNka0lzUzBGQlN6aDJRaXhQUVVWTU9YWkNMRXRCUVVzcmRrSXNUMEZKVkVFc1QwRkRSU3hIUVVGSkwzWkNMRXRCUVV0dmRrSXNhMEpCUVc5Q2NIWkNMRXRCUVVzMmRrSXNWMEZEYUVNc1QwRkhSaXhKUVVOSlJ5eEZRVVJCUXl4RlFVRlZMRWRCUjJRc1IwRkJTV3AzUWl4TFFVRkxObkZDTEZGQlFWRXZhVUlzVDBGQlVTeERRVU4yUWl4TlFVRk5kMmRDTEVWQlFWZEdMRWRCUVdVMVV5eExRVUZMZVZvc1IwRkJORUpxZGtJc1MwRkJTelp4UWl4UlFVRlJMMmxDTEZGQlF6bEZiVzlDTEVWQlFWVTNTQ3hIUVVGbE5WTXNTMEZ1UlU0c2RVTkJiVVUyUW5oV0xFdEJRVXMyY1VJc1VVRkJVUzlwUWl4UlFVRlJORUlzVVVGQlR6WnNRaXhKUVVGVGFrZ3NSVUZCVXpGTUxGTkJRVk15VXl4TFFVZDZSeXhOUVVGTlZ5eEZRVUZaT1Vnc1IwRkJaVU1zVVVGQlVYSnZRaXhMUVVGTE1IWkNMRmRCUlRsRExFZEJRVWxQTEVWQlFWRnNZeXhQUVVGUkxFTkJRMnhDTEUxQlFVMXZZeXhGUVVGcFFrWXNSVUZCVVhwaExFMUJRVXNyV2l4SFFVRlJWeXhKUVVGaldDeEpRVWN4UkN4SFFVWkJVeXhGUVVGalJ5eEZRVUZwUW1oQ0xFZEJRVk0zU1N4WlFVRlpOa29zUjBGQmEwSXNTMEZGYkVWSUxFZEJRV1ZCTEVWQlFWbGFMR2xDUVVNM1FpeFBRVTFLTEVkQlJtMUNiazBzUjBGQllXdENMRkZCUVZGdWEwSXNTMEZCU3pac1FpeFRRVGxHTlVJc2IwSkJaMGRHY2tJc2FVSkJRMklzVDBGSFJubE1MRVZCUVZFM2NVSXNVMEZCVVdkeVFpeEpRVU5XUml4SlFVRmpSU3hIUVVOb1FtcENMRWRCUVZOd1NTeHZRa0ZCYjBKeFNpeEZRVUZaTEVOQlEzWkRPVWtzVVVGQlVTeEpRVU5RZDBrc1QwRkhRVVVzUjBGRFNEZExMRWRCUVVzdlVDeEpRVUZKWjJJc1JVRjJTRVVzWTBGMVNITkNMRk5CU1hKRExFMUJRVTFETEVWQlFWbHlkMElzUzBGQlMzTjNRaXhuUWtGRmRrSjBkMElzUzBGQlN6WnNRaXhUUVVGVGVFZ3NWVUZCVlc5SUxFOUJRVTl4U2l4SlFVVXZRamwxUWl4TFFVRkxObXhDTEZOQlFWTjRTQ3hWUVVGVmRFVXNTVUZCU1dkV0xFbEJSVFZDTDNWQ0xFdEJRVXMyYkVJc1UwRkJVM2huUWl4TlFVRk5aM0pDTEVkQlFXRXNSVUZGYWtOeWQwSXNTMEZCU3pSMlFpd3dRa0ZCTUVJMWRrSXNTMEZCUzNGMlFpeGxRVUZsTEVkQlJXNUVjblpDTEV0QlFVdHZka0lzYTBKQlFXMUNMRVZCUlhoQ0xFMUJXVTF0UWl4RlFVRmhMRk5CUkZWR0xFVkJRVlVzUjBGQlIyaDNRaXhqUVVGblFtZDNRaXhGUVVGVk5XRXNUVUZCVFN4TFFVY3hSWHBXTEV0QlFVdHRiVUlzWjBKQlpGa3NTMEZEWm01dFFpeExRVUZMYjNaQ0xHdENRVUZ0UWl4RlFVVjRRbkIyUWl4TFFVRkxObXhDTEZOQlFWTjRTQ3hWUVVGVmIwZ3NUMEZCVDNOS0xFbEJSUzlDTDNWQ0xFdEJRVXMyYkVJc1UwRkJVM2hJTEZWQlFWVjBSU3hKUVVGSksxVXNSMEZCY1VKRUxFbEJSV3BFTjNWQ0xFdEJRVXMyYkVJc1UwRkJVM2huUWl4TlFVRk5aM0pDTEVkQlFXRXNSMEZEYWtOd1RpeEhRVUZoYTBJc1VVRkJVVzVyUWl4TFFVRkxObXhDTEZOQmJrbFdMSFZDUVhsSldUZHNRaXhMUVVGTE5teENMRlZCUVZVc1IwRkZOME0zYkVJc1MwRkJTelpzUWl4VFFVRlRlR2RDTEUxQlFVMW5ja0lzUjBGQllTeEhRVUZIY25kQ0xFdEJRVXMyYkVJc1UwRkJVekJMTEU5QlIzQkVWQ3hQUVVORkxFZEJRVWs1ZGtJc1MwRkJTMjkyUWl4dFFrRkJjVUp3ZGtJc1MwRkJTeloyUWl4WFFVTnFReXhQUVV0R0xFZEJSbTFDTlUwc1IwRkJZV3RDTEZGQlFWRnVhMElzUzBGQlN6WnNRaXhUUVd4S05VSXNiMEpCYjBwR2NrSXNhVUpCUTJJc1QwRkhSaXhOUVVGTk5rd3NSVUZCV1hKM1FpeExRVUZMYzNkQ0xHZENRVVYyUW5SM1FpeExRVUZMTm14Q0xGTkJRVk40WjBJc1RVRkJUV2R5UWl4SFFVRmhMRWRCUVVkeWQwSXNTMEZCU3pac1FpeFRRVUZUYUdZc2QwSkJRWGRDZDNCQ0xFOUJRekZGTVZJc1IwRkJUek5sTEV0QlFVczJiRUlzVlVGRldqZHNRaXhMUVVGTE5teENMRk5CUVZONFNDeFZRVUZWZEVVc1NVRkJTV2RXTEVsQlJUVkNMM1ZDTEV0QlFVczJiRUlzVTBGQlUzaElMRlZCUVZWdlNDeFBRVUZQY1Vvc1IwRkJjVUpFTEVsQlJYQkVMRTFCUVUweVFpeEZRVUZ4UW5oM1FpeExRVUZMY1haQ0xHTkJRV04wWWl4UFFVVTVReXhKUVVGTExFbEJRVWxYTEVWQlFVa3NSVUZCUjBFc1JVRkJTVGhpTEVWQlFXOUNPV0lzU1VGQlN5eERRVU16UXl4TlFVRk5lVkFzUlVGQlZXNXJRaXhMUVVGTGNYWkNMR05CUVdNellTeEhRVU0zUWpaaExFVkJRVTkyVXl4SFFVRjFRbTFJTEVkQlJXaERiMHdzU1VGQlUzWjJRaXhMUVVGTE5uWkNMRk5CUVZOT0xFbEJRM3BDZG5aQ0xFdEJRVXMwZGtJc01FSkJRVEJDTEVOQlFVTjZUQ3hKUVVGVkxFZEJTVGxEYm10Q0xFdEJRVXR2ZGtJc2EwSkJRVzFDTEVWQldYaENjSFpDTEV0QlFVczJiRUlzVTBGQlUzaG5RaXhOUVVGTlozSkNMRWRCUVdFc1IwRkZha055ZDBJc1MwRkJTMjF0UWl4blFrRmFXU3hMUVVObWJtMUNMRXRCUVV0dmRrSXNhMEpCUVcxQ0xFVkJSWGhDY0haQ0xFdEJRVXMyYkVJc1UwRkJVM2hJTEZWQlFWVnZTQ3hQUVVGUGMwb3NTVUZGTDBJdmRVSXNTMEZCU3pac1FpeFRRVUZUZUVnc1ZVRkJWWFJGTEVsQlFVa3JWU3hKUVVVMVFqZE1MRWRCUVdGclFpeFJRVUZSYm10Q0xFdEJRVXMyYkVJc1UwRndURlFzZDBKQmVVeFhOMnhDTEV0QlFVczJiRUlzVlVGQlZTeEhRVWN2UTJkTExGTkJRVk12Y2tJc1JVRkJWVGxFTEV0QlFVczJiRUlzVlVGRGRFSXNUMEZCVHk5b1FpeEZRVUZSZFdFc1ZVRkJWWGhYTEZOQlFWTm5ia0lzU1VGSmNFTXZSQ3hYUVVGWGNrNHNSMEZUVkN4UFFWSkJRU3hGUVVGVExFbEJRVXRyVWl4TlFVTlVMMGNzUjBGQldVY3NhMEpCUVd0Q0wyNUNMRXRCUVVzMmJFSXNZVUZEYmtOd1NTeEpRVVZGTmtvc1QwRkJVemxFTEZGQlFWRXZSaXhGUVVGUE5rb3NVVUZGTDBJM1NpeEZRVUZQTTFZc1QwRkJVM2RXTEVkQlFWZEhMRVZCUVU4elZpeFJRVU5zUTNsV0xFZEJRV2RDYlZJc1IwRkJVV3BTTEVWQlFWRnRVaXhKUVVONlFtNVNMRVZCUjFRMlV5eG5Ra0ZEUlN4UFFVRlBkSGRDTEV0QlFVczJiRUlzVTBGQlUzaElMRlZCUVZWNFZ5eFRRWFpOVEN4MVFrRkRhRUlzVVVGRFF5eFRRWGROWWpodVFpeHpRa0ZEUlN4SlFVRkxNM1pDTEV0QlFVczJjVUlzVVVGQlVTOXBRaXhQUVVOb1FpeFBRVWRHTEUxQlFVMTNaMElzUlVGQlYwWXNSMEZCWlRWVExFdEJRVXQ1V2l4SFFVRTBRbXAyUWl4TFFVRkxObkZDTEZGQlFWRXZhVUlzVVVGRE9VVnpaMElzUjBGQlpUVlRMRXRCUVVzd1dpeEhRVUYzUW14MlFpeExRVUZMTm5GQ0xGRkJRVkV2YVVJc1VVRkJVVFJDTEZGQlFVODJiRUlzU1VGQlUycElMRVZCUVZNeFRDeFRRVUZUTWxNc1MwRkJUMjV4UWl4VFFVRlJkRUlzU1VGRGFFZ3NUVUZCVFRKelFpeEZRVUZYZWxRc1IwRkJkVUpzV2l4SFFVVndRekp6UWl4SFFVTkdlbmRDTEV0QlFVczBka0lzTUVKQlFUQkNMRU5CUVVNNWNrSXNSMEZCVlRsRUxFdEJRVXMyZGtJc1UwRkJVMWtzVDBGTE9VUmlMREJDUVVFd1FtTXNSVUZCWTBNc1IwRkRha05FTEVWQlFXRXpZeXhSUVVsc1FqSmpMRVZCUVdGMGNrSXNVMEZCVVcxeFFpeEpRVU5tYjBJc1JVRkRSbkJDTEVWQlFVdHNVaXhWUVVGVmIwZ3NUMEZCVDNWS0xFbEJSWFJDVHl4RlFVRkxiRklzVlVGQlZYUkZMRWxCUVVscFZpeEpRVWR5UWs4c1JVRkJTemR3UWl4aFFVRmhMR2RDUVVGcFFtbHlRaXhOUVV0MlEzUkxMSFZDUVVGMVFqVkpMRWRCUTNKQ0xFOUJRVTk2WkN4TFFVRkxiVzVDTEUxQlFVc3NWMEZEWml4TlFVRk5NRVFzUlVGQlZTeEhRVVZOTEdsQ1FVRlljRTRzUjBGQmRVSXNXVUZCV1dwUExFdEJRVXRwVHl4TFFVTnFSRzlPTEVWQlFWRjJSQ3hSUVVGVExFZEJSMjVDTEUxQlFVMTZXaXhGUVVGUGMyaENMRWRCUVZOd1NTeHZRa0ZCYjBJdmJVSXNTMEZCVFRaeFFpeEhRVVZvUkN4SFFVRnpRaXhwUWtGQldIQk9MRVZCUVhGQ0xFTkJRemxDTEZGQlFUUkNMRWxCUVdwQ05WQXNSVUZCU3pSUUxFZEJRMlFzVFVGQlRTeEpRVUZKU3l4VlFVRlZMRzlDUVVGdlFrd3NUVUZITVVNMVVDeEZRVUZMTkZBc1ZVRmhZbmRHTEVkQlFXRlJMRWRCUVVjdllTeFRRVFZSWlN3MlFrRTBVVzFDZDIxQ0xFbEJRWGRDTEZOQlFWVnNUaXhKUVVWeVJDeE5RVUY2UWtFc1JVRkJUV3BUTEU5QlFVODRWeXhUUVVGdFFqZEZMRVZCUVUxWkxHZENRVUZ0UkN4TlFVRnFRMW9zUlVGQlRWa3NaVUZCWldsRkxGVkJReTlGTjBVc1JVRkJUV2xFTEdsQ1FVZFNMRTFCUVUxNFNTeEZRVUZYVFN4SFFVRjFRaTlqTEUxQlEyWnZiMElzUjBGQlpUVlRMRXRCUVV0cFNDeEhRVU0xUW5KWUxGTkJRVkYwUWl4SlFVTjJRbkZ5UWl4SFFVRlRjRWtzYjBKQlFXOUNhbXBDTEVWQlFWTXNRMEZEY0VOM2FrSXNVVUZCVVN4SlFVTlFRU3hsUVZWUWNra3NSMEZCYlVKclVTeEpRV051UWl4TlFVRk5lVUlzUjBGQlV5eFhRVWxVUXl4SFFVRmxMRk5CUTJaRExFZEJRVmtzVVVGRldrTXNSMEZCWlN4VlFVTm1ReXhIUVVGcFFpeFpRVWRxUWtNc1IwRkJhVUlzU1VGQlNYQlVMRTlCUVU4c05FSkJTelZDY1ZRc1IwRkJlVUlzTmtKQlEzcENReXhIUVVGNVFpd3JRa0ZGZWtKRExFZEJRVzlDTEU5QlMzQkNReXhIUVVGNVFpdzRRa0ZEZWtKRExFZEJRV2RDTEdsQ1FVZG9Ra01zUjBGQlowSjRVeXhMUVVGVkxGVkJRVmtzV1VGRGRFTjVVeXhIUVVGdFFucFRMRXRCUVZVc1dVRkJZeXhWUVVNelF6QlRMRWRCUVcxQ01WTXNTMEZCVlN4aFFVRmxMR1ZCUXpWRE1sTXNSMEZCYzBJelV5eExRVUZWTEdWQlFXbENMR0ZCUTJwRU5GTXNSMEZCYTBJMVV5eExRVUZWTEdGQlFXVXNZMEZETTBNMlV5eEhRVUZwUWpkVExFdEJRVlVzWTBGQlowSXNZVUZETTBNNFV5eEhRVUZaTEVOQlEyaENkRzFDTEU5QlFWRXNRMEZCUXl4RlFVRkhMRWRCUTFvclJpeFRRVUZWTEd0Q1FVTldlazhzVlVGQlZ5eFRRVU5ZYVhaQ0xGRkJRVk1zVlVGRFZFTXNZVUZCWXl4TFFVTmtReXhYUVVGWExFZEJSVkJETEVkQlFXZENMRU5CUTNCQ01XMUNMRTlCUVZFc01FSkJRMUlyUml4VFFVRlZMRzFDUVVOV2VrOHNWVUZCVnl3d1FrRkRXR2wyUWl4UlFVRlRMRk5CUTFSRExHRkJRV01zZVVKQlEyUkRMRlZCUVZjc2IwSkJVV0lzVFVGQlRVVXNWMEZCYVVKMlRTeEhRVU55UWtNc1dVRkJXVGxvUWl4RlFVRlRNbG9zUjBGRGJrSXlUU3hOUVVGTmRHMUNMRWRCUTA0NVJDeExRVUZMYlhsQ0xGRkJRVlVzUzBGRFptNTVRaXhMUVVGTE5uRkNMRkZCUVZVM2NVSXNTMEZCU3poeFFpeFhRVUZYY2s0c1IwRkRMMEo2WkN4TFFVRkxiM2xDTEUxQlFWRndlVUlzUzBGQlMzRjVRaXhyUWtGRGJFSnllVUlzUzBGQlMzTjVRaXhWUVVGWmRIbENMRXRCUVV0MWVVSXNaMEpCU1dKc1NDeHhRa0ZEVkN4UFFVRlBkMGNzUjBGSFJWY3NlVUpCUTFRc1QwRkJUMUFzUjBGSFJUVlRMR3RDUVVOVUxFOUJRVTkxVWl4SFFVbFVkRW9zVTBGRFJTeFBRVUZQZEc1Q0xFdEJRVXMyZGtJc1YwRkJZVGQyUWl4TFFVRkxPSFpDTEU5QlFWTTVka0lzUzBGQlN5dDJRaXhQUVVjNVEwRXNUMEZEUlN4SFFVRkpOMUlzUjBGQlYyeGxMRXRCUVVzMmJFSXNWMEZCWVRkc1FpeExRVUZMTm5aQ0xGTkJRVk0zZGtJc1MwRkJTMjk1UWl4UFFVTnNSQ3hQUVVkR0xFMUJRVTE2VUN4RlFVRm5RaXhEUVVOd1FrRXNZMEZCWlROcFFpeExRVUZMTm14Q0xGVkJTWFJDTEVkQlJtdENOVU1zUjBGQllXdENMRkZCUVZGdWEwSXNTMEZCU3pac1FpeFRRVGRGTTBJc2JVSkJOa1Z0Ukd4RUxFZEJSWFJFTmtJc2FVSkJRMW9zVDBGSFJpeE5RVUZOTVdNc1JVRkJVMjl4UWl4SFFVRlRUeXh4UWtGQmNVSjZlVUlzUzBGQlN6WnNRaXhWUVVVNVF6ZHNRaXhMUVVGTGMzbENMRlZCUTFBeFN5eEhRVUZaUXl4cFFrRkJhVUkzYmtJc1MwRkJTMjk1UWl4TlFVRlBMRk5CUVZVc1VVRkZia1J3ZVVJc1MwRkJTekI1UWl4alFVRmpOWEZDTEVkQlQycENMR2xDUVVGclFsa3NVMEZCVTBNc2EwSkJRVzlDWWl4RlFVRlBaMllzVVVGdVJteERMR2RDUVc5R2RFSXNSMEZCUnpWcVFpeFZRVUZWZDBZc1UwRkJVMmRJTEV0QlFVczBXU3hWUVVGVmJHcENMRk5CUVZGdGNVSXNSMEZCVVhSTkxFZEJRV0ZSTEVkQlFVYzRUQ3hGUVVGTkxGbEJRV0UzVVN4TlFVY3hSakZsTEV0QlFVczJiRUlzVTBGQlV6aE5MRkZCUldRemVVSXNTMEZCU3pac1FpeFRRVUZUYm1kQ0xHRkJRV0VzYVVKQlFXbENMRWRCUlRWRE1VWXNTMEZCUzI5NVFpeE5RVUZOTDFRc1ZVRkJWWFJGTEVsQlFVbHhXQ3hKUVVWNlFuQjRRaXhMUVVGTE5teENMRk5CUVZONFNDeFZRVUZWZEVVc1NVRkJTWEZZTEVsQlJUVkNiazhzUjBGQllXdENMRkZCUVZGdWEwSXNTMEZCU3pac1FpeFRRVEZIVWl4dlFrRXdSMmxEYkVRc1IwRkhja1J0VGl4UFFVTkZMRWRCUVVrMVVpeEhRVUZYYkdVc1MwRkJTelpzUWl4WlFVRmpOMnhDTEV0QlFVczJka0lzVTBGQlV6ZDJRaXhMUVVGTGIzbENMRTlCUTI1RUxFOUJSMFlzVFVGQlRYcFFMRVZCUVdkQ0xFTkJRM0JDUVN4alFVRmxNMmxDTEV0QlFVczJiRUlzVlVGSGRFSTNiRUlzUzBGQlN6UjVRaXhqUVVGamFsRXNSMEZIY2tKdlJDeFZRVU5OTDJ4Q0xFdEJRVXR0ZVVJc1UwRkRVRzU1UWl4TFFVRkxiWGxDTEZGQlFWRm9WeXhWUVVkbWFVOHNUVUZCVFhKRkxGVkJSMUo0V0N4VFFVTkZkazhzUzBGQlMzTjVRaXhWUVVGWmRIbENMRXRCUVV0MWVVSXNaMEpCUld4Q2RubENMRXRCUVV0dGVVSXNVMEZEVUc1NVFpeExRVUZMYlhsQ0xGRkJRVkUxYWtJc1UwRkxha0p4YTBJc1kwRkJZMnBSTEVkQlEwMU5MRWRCUVdGclFpeFJRVUZSYm10Q0xFdEJRVXMyYkVJc1UwRTVTVE5DTEcxQ1FUaEpiVVJzUkN4SFFVVjBSRFpDTEcxQ1FVMVdMR2xDUVVGclFqbGlMRk5CUVZORExHbENRVU0zUWl4SFFVRkhla1lzVlVGQlZYZEdMRk5CUVZOblNDeExRVUZMTkZrc1ZVRkJWV3hxUWl4VFFVRlJiWEZDTEVkQlFWRjBUU3hIUVVGaFF5eEpRVUZKY1Uwc1JVRkJUU3haUVVGaE4xRXNUVUZIZGtZeFpTeExRVUZMYlhsQ0xGTkJRMUJ1ZVVJc1MwRkJTMjE1UWl4UlFVRlJhRmNzVlVGSFptNWpMRXRCUVV0dmVVSXNUVUZCVFM5VUxGVkJRVlZ2U0N4UFFVRlBNa3dzU1VGRk5VSndlRUlzUzBGQlN6WnNRaXhUUVVGVGVFZ3NWVUZCVlc5SUxFOUJRVTh5VEN4SlFVVXZRbkI0UWl4TFFVRkxObXhDTEZOQlFWTnVaMElzWVVGQllTeG5Ra0ZCYVVJc1UwRkZOVU5yYVVJc1IwRkJXVVVzYjBKQlFXOUNPVzVDTEV0QlFVdHZlVUlzVFVGQlR5eFZRVU0xUTI1UUxFZEJRV0ZyUWl4UlFVRlJibXRDTEV0QlFVczJiRUlzVTBGd1MxQXNjVUpCYjB0cFEyeEVMRWxCUjNSRWJVa3NWMEZCVjNKT0xFZEJUMVFzUjBGT1FVRXNSVUZCVXl4SlFVRkxlbVFzUzBGQlN6UnNRaXhaUVVGWmVVWXNWMEZETVVKNlJDeEhRVUZaUnl4clFrRkJhMEl2YmtJc1MwRkJTelpzUWl4aFFVTnVRM0JKTEVkQlJVeEdMRWRCUVdkQ2NWUXNSMEZCVVc1VUxFVkJRVkY2WkN4TFFVRkxOR3hDTEZsQlFWazBUU3hoUVVWcVFpeHBRa0ZCY2tJdlZTeEZRVUZQTldFc1dVRkJNa0lzUjBGQlZUUmhMRVZCUVU4MVlTeFpRVUZuUlN4dFFrRkJNME0wWVN4RlFVRlBOV0VzVlVGQlZXZEZMSE5DUVVWc1J5eE5RVUZOTEVsQlFVbHBXQ3hWUVVGVkxFZEJRVWM0VXl4SFFVRlBkbmRDTEN0SFFVZG9ReXhQUVVGUGIyUXNSVUZIVkdsV0xHTkJRV00xY1VJc1IwRkRXaXhSUVVGelFpeEpRVUZZTEVWQlExUXNUVUZCVFN4SlFVRkpaMWNzVlVGQlZTeG5SVUZIZEVJc1NVRkJTU3RWTEVWQlFXMUNOM2xDTEV0QlFVczJiRUlzVTBGRlJ5eFhRVUV6UWpkc1FpeExRVUZMTm5GQ0xGRkJRVkZvYjBJc1ZVRkRabWQzUWl4RlFVRnRRaTl4UWl4RlFVTldMRWRCUVZVNVNDeExRVUZMTm5GQ0xGRkJRVkZvYjBJc1YwRkRhRU5uZDBJc1JVRkJiVUoyVml4SFFVRlhkR1FzUzBGQlN6WnhRaXhSUVVGUmFHOUNMRmRCUTBFc2FVSkJRVE5DTjBNc1MwRkJTelp4UWl4UlFVRlJhRzlDTEZsQlF6ZENaM2RDTEVWQlFXMUNOM2xDTEV0QlFVczJjVUlzVVVGQlVXaHZRaXhYUVVkc1F5eE5RVUZOYTNaQ0xFVkJRV1V2ZUVJc1MwRkJTemg1UWl4dFFrRkZjRUpETEVWQlFXdENhRUlzUlVGQllYUlpMRlZCUVZWcVJTeE5RVUZMYzBVc1IwRkJPRUlzWjBKQlFXeENRU3hGUVVGVGJGWXNUMEZCSzBNc1NVRkJja0pyVml4RlFVRlRhbFlzVlVGRE5VYzNSU3hMUVVGTGJYbENMRkZCUVZVc1IwRkJiMEpWTEVWQlFXdENOM2xDTEV0QlFVdHZlVUlzVFVGQlQwd3NSMEZGTjBSblFpeEhRVU5HYmt3c1IwRkJXVU1zYVVKQlFXbENOMjVDTEV0QlFVdHZlVUlzVFVGQlR5eFRRVUZWTEZWQlNYWkVka01zVTBGQlV5OXlRaXhGUVVGVk9VUXNTMEZCU3pac1FpeFZRVU4wUWl4UFFVRlBMMmhDTEVWQlFWRjFZU3hWUVVGVmVGY3NVMEZCVTNWd1FpeEpRVWR3UTJsQ0xHdENRVU5GTEU5QlFVOXFTeXhIUVVGbGJHZENMRXRCUVV0c1NTeExRVUZMTm14Q0xGTkJRVlY1VEN4SlFVRmxMRWRCUnpORU1FSXNaMEpCUTBVc1RVRkJUVU1zUlVGQmFVSnFla0lzUzBGQlN6WnNRaXhUUVVGVGVtUXNWMEZGY2tNc1IwRkJTVFp4UWl4RlFVRmxOVlVzVlVGQlZYaFhMRk5CYkU1T0xGZEJiVTV5UWl4UFFVRlBPSEJDTEVkQlIxUXNSMEZCU1hOQ0xFVkJRV1UxVlN4VlFVRlZlRmNzVTBGeVRrb3NZVUZ6VG5aQ0xFOUJRVThyY0VJc1IwRkpWQ3hOUVVGTmMwSXNSVUZCYTBZc1VVRkJNVVUxY1VJc2FVSkJRV2xDZEVrc1MwRkJTMjk1UWl4UFFVRlBibFVzYVVKQlFXbENMR2xDUVVGcFFtNUNMRTlCUlRkRkxFOUJRVWx0Vnl4RlFVRmxOVlVzVlVGQlZYaFhMRk5CT1U1UUxGVkJLMDVpY1hKQ0xFVkJRVkV4UWl4SFFVRnRRa1FzUjBGSE4wSXlRaXhGUVVGUmVFSXNSMEZCYzBKRUxFZEJSM1pEWXl4blFrRkRSU3hQUVVFd1JDeFBRVUZ1UkhaNVFpeExRVUZMTm14Q0xGTkJRVk5wUWl4UlFVRlJMRmRCUnk5Q2NVMHNZVUZEUlN4TlFVRk5MRTlCUTBvMWJrSXNSMEZEUlhaTUxFdEJRVXMyY1VJc1VVRkZWQ3hOUVVGelFpeHBRa0ZCV0hSbUxFVkJRMFpCTEVWQlFVOHZSU3hOUVVGTkxFdEJRVXRyVkN4TFFVRkpPRTRzUjBGQlQzSklMRTlCUVU5dFRpeFRRVUZUT1VZc1JVRkJTeXhOUVVkeVF5eHRRa0ZCV0dwakxFVkJRMFkyYmtJc1IwRkJZemR1UWl4RlFVRlBObTVDTEVWQlFWbHdla0lzUzBGQlN6WnNRaXhWUVVkNFEzUmhMRVZCUjFSMWJrSXNiVUpCUTBVc1RVRkJUVThzUlVGQmQwSXNRMEZETlVKd2QwSXNWVUZCVjJwRUxFdEJRVXRuZWtJc1owSkJRMmhDZGxvc1ZVRkJWeXhEUVVGRExFTkJRMVkzVlN4TFFVRk5MR3RDUVVOT2JVSXNVVUZCVXl4RFFVTlFkVXdzVTBGQlZYUlNMRXRCUVVzMmNVSXNVVUZCVVhaYUxGZEJSWGhDTEVOQlEwUXhUU3hMUVVGTkxGTkJRMDV0UWl4UlFVRlRMRU5CUTFCM1JpeFBRVUZSZGt3c1MwRkJTMjE2UWl4cFFrRlpia0lzVFVGUU5rSXNWMEZCZWtKdWVrSXNTMEZCU3paeFFpeFJRVUZSYVVnc1ZVRkRablZDTEVWQlFYTkNOVm9zVlVGQldTeERRVUZETEVOQlEycEROMVVzUzBGQlRTeGpRVU5PUXl4VFFVRlRMRXRCU1U0c1NVRkJTM2QxUWl4TFFVTXJRaXh0UWtGQk9VSnlla0lzUzBGQlN6WnhRaXhSUVVGUmEwZ3NZVUZCT0VJdmVFSXNTMEZCU3paeFFpeFJRVUZSYTBnc1lVRkJZWE5DTEVkQlFYbENjbnBDTEV0QlFVczJjVUlzVVVGQlVXdElMR05CU1RGSWRVSXNhVUpCUVdkQ0xFbEJRMlJxZVVJc1JVRkJSeXhQUVVOSU1FOHNTVUZGUVN4TlFVRk5kMnBDTEVWQlFWRnVUQ3hIUVVGbE5WTXNTMEZzVWtZc09FUkJhMUlyUW5oV0xFdEJRVXR2ZVVJc1QwRkJUekZ2UWl4UFFVRlBjVlVzU1VGRmVFVjNWaXhGUVVGTmVHWXNVVUZOV0RKTkxFZEJRWEZDTmxNc1JVRkJUM2hxUWl4RlFVRlJNVThzU1VGQlVUSjJRaXhKUVVGcFFuVkRMRVZCUVUwelZ5eFRRVUZUTjAwc1NVRkJVelJwUWl4UlFVbDJSblJOTEhWQ1FVRjFRalZKTEVkQlEzSkNMRTlCUVU5NlpDeExRVUZMYlc1Q0xFMUJRVXNzVjBGRFppeE5RVUZOZEZvc1JVRkJUM0ZyUWl4SFFVRlRia3dzYjBKQlFXOUNMMjFDTEV0QlFVMTVaQ3hIUVVWb1JDeEhRVUZ6UWl4cFFrRkJXRUVzUlVGQldDeERRVWxCTEZGQlFUUkNMRWxCUVdwQ05WQXNSVUZCU3pSUUxFZEJRMlFzVFVGQlRTeEpRVUZKU3l4VlFVRlZMRzlDUVVGdlFrd3NUVUZITVVNMVVDeEZRVUZMTkZBc1UwRkpWRFJKTEd0Q1FVRnJRbkpGTEVkQlEyaENMRWRCUVVsQkxFbEJhbFZ0UWl4SlFXbFZWRUVzUlVGQlRUSkdMRkZCUVdkRUxGVkJRV1l6Uml4RlFVRk5iVUlzVFVGd1ZUZERMRkZCYjFWcFJXNUNMRVZCUVUwelowSXNTMEZEYmtZc1QwRkhSaXhOUVVGTmJYbENMRVZCUVZWd1RDeEhRVUZsTlZNc1MwRkJTelppTEVsQlJYQkRMRWxCUVVzc1NVRkJTVE5qTEVWQlFVa3NSVUZCUjJ4TExFVkJRVTFuY0VJc1JVRkJVWHBtTEU5QlFWRlhMRVZCUVVsc1N5eEZRVUZMYTBzc1NVRkJTeXhEUVVOc1JDeE5RVUZOSzJVc1JVRkJWWFpDTEVkQlFWTTFUQ3haUVVGWmEwNHNSVUZCVVRsbExFbEJSVGRETEVsQlFVc3JaU3hKUVVGNVF5eEpRVUU1UWtFc1JVRkJVVFZKTEZGQlFWRnRTQ3hWUVVNNVFpeFRRVWRHTEVsQlFVdDVRaXhGUVVGUk5VUXNWMEZEV0N4VFFVZEdMRTFCUVUxc1RpeEZRVUZuUWl4RFFVTndRa0VzWTBGQlpUaFJMRVZCUVZFMVRpeFZRVWQ2UWl4SFFVRkpOMFFzUlVGQlR5eERRVU5VTEUxQlFVMHdVaXhGUVVGbE1WSXNSVUZCVFRCU0xHVkJRM0pDUXl4RlFVRmxSQ3hGUVVGaE9WY3NVMEZCVXpaWExFVkJRVkZ5UWl4UFFVVnVSQ3hIUVVGSmMwSXNSVUZCWVRsWExGTkJRVk0yVnl4RlFVRlJOVTRzVjBGQk1rTXNWMEZCT1VJMFRpeEZRVUZSTlVrc1VVRkJVVzFJTEZsQlFUSkNNa0lzUjBGQk9FTXNXVUZCT1VKR0xFVkJRVkUxU1N4UlFVRlJiVWdzVjBGQk1rSXlRaXhGUVVOdVNpeFRRVWxHTEVkQlFVbEdMRVZCUVZGeVFpeE5RVUZOZG5GQ0xGTkJRVk50WVN4RlFVRk5hbE1zVlVGQk1rSXNWVUZCWm1sVExFVkJRVTF0UWl4TlFXeFhla01zVVVGclZ6WkVia0lzUlVGQlRUTm5RaXhMUVVGeFFpeHhRMEZCY1VOdFR5eExRVUZMZDFNc1JVRkJUV3BUTEU5QlFVODRWeXhWUVVOMlNpeFRRVWRwUWl4VlFVRm1OMFVzUlVGQlRXMUNMRTlCUTFKU0xFVkJRV05wUlN4WFFVRmhOVVVzUjBGSkwwSjVVaXhGUVVGUllpeGpRVUZqYWxFc1NVRkpNVUl3UkN3MFFrRkJORUoyYVVJc1IwRkRNVUlzVDBGQlQydGFMRWRCUVhWQ2JGb3NTVUZCV1VFc1JVRkJVWE5GTEZkQlIzQkVhV1VzTmtKQlFUWkNja1VzUjBGUk0wSXNSMEZCU1N4clFrRkJhMEo0VXl4TFFVRkxkMU1zUlVGQlRXcFRMRTlCUVU4NFZ5eFRRVUZYTjBVc1JVRkJUVE5uUWl4TlFVRlJlWFpDTEVsQlFXRTVUeXhGUVVGTk0yZENMRTFCUVZGM2RrSXNTMEZCYVVJM1R5eEZRVUZOTTJkQ0xFMUJRVkV5ZGtJc1NVRkJhMEpvVUN4RlFVRk5NMmRDTEUxQlFWRXdka0lzU1VGQlowSXZUeXhGUVVGTmFsTXNUMEZCVHl0WExGRkJRVkYzU3l4TlFVRnRRa3dzUjBGQlpYcG9RaXhMUVVGTGQxTXNSVUZCVFROblFpeExRVU16VHl4UFFVZEdMRTFCUVUxMWVVSXNSVUZCVnpWNlFpeExRVUZMY1dVc1ZVRkJWWGhYTEZOQlFWTjFjRUlzU1VGRmVrTXNTVUZCUzNkRExFZEJRVmsxVWl4RlFVRk5NMmRDTEUxQlFWRjNka0lzUjBGRE4wSXNUMEZOUml4SFFVaEJOMDhzUlVGQlRXbEVMR2xDUVVOT2FrUXNSVUZCVFRaU0xHdENRVVZHTTFZc1IwRkJWMnhsTEUxQlEySXNUMEZIUml4TlFVRk5PSHBDTEVWQlFXdENPWHBDTEV0QlFVdDFiMElzVVVGQlVUaEpMRWxCUVRCQ2NuaENMRXRCUVU5dmIwSXNSMEZCWlUwc1MwRkJTekZ2UWl4TFFVRk5jWGhDTEVsQlFYZENMRWRCUTJ4SWRHcENMRVZCUVZkdGEwSXNSMEZCVTI1TUxHOUNRVUZ2UWl0TkxFZEJSVGxETEVkQlFVazVVaXhGUVVGTk0yZENMRTFCUVZGM2RrSXNSMEZMYkVJc1QwRkJTVGRQTEVWQlFVMHpaMElzVFVGQlVUQjJRaXhKUVVGblFpOVBMRVZCUVUwelowSXNUVUZCVVRKMlFpeEpRVU42UXpSRExFZEJRMGczYkVJc1JVRkJVMmRwUWl4WlFVZFlhR2xDTEVWQlFWTjFiRUlzWjBKQlFXZENkRklzVTBGTGRFSTBVaXhIUVVGWk5WSXNSVUZCVFROblFpeE5RVUZSZVhaQ0xFbEJRemRDYjBJc1IwRkJVelpDTEdOQlpsUm9iVUlzUlVGQlV5dG9RaXhSUVRKQ1pqZE5MRWRCUVdGUkxFZEJRVWN2WVN4VFFVRlZlVzlDTEVkQlFYZENSU3hIUVVGM1FtRXNSMEZCVXpoQ0xIVkNRVU51Umk5UkxFZEJRV0ZSTEVkQlFVY3ZZU3hUUVVGVmVXOUNMRWRCUVhkQ1J5eEhRVUZsV1N4SFFVRlRPRUlzZFVKQlF6RkZMMUVzUjBGQllWRXNSMEZCUnk5aExGTkJRVlYzYjBJc1IwRkJkMEpuUWl4SFFVRlROa0lzV1VGRE0wUTVVU3hIUVVGaFVTeEhRVUZITDJFc1UwRnNZV0VzTmtKQmEyRnRRbmR3UWl4SFFVRlROa0lzV1VGRGVrUTVVU3hIUVVGaFVTeEhRVUZITDJFc1UwRkJWWGR2UWl4SFFVRjNRa2NzU1VGQmQwSXNVMEZCVlhKUUxFZEJRMnhHUVN4RlFVRk5hVVFzYVVKQlEwNXBUaXhIUVVGVGJrd3NiMEpCUVc5Q0wyMUNMRTFCUVUxemJrSXNXVUZUY2tOeVNTeEhRVUZ0UW1sVUxFbEJVVzVDTEUxQlFVMHJRaXhIUVVGNVFpeHZSRUZEZWtKRExFZEJRVEJDTEdOQlJXaERMRTFCUVUxRExFZEJRMHAyVHl4alFVTkZOV3hDTEV0QlFVczJiRUlzVTBGQlYyNWtMRk5CUVZOblNDeExRVWN6UWpCclFpeFhRVVZGTEUxQlFVMURMRVZCUVdkQ00zSkNMRk5CUVZORExHZENRVUZuUW5sRExGbEJReTlETEU5QlFVOHpSU3hMUVVGTGFVSXNTVUZCU1hoRUxFOUJRVTl2ZDBJc1YwRkJZVVFzUjBGSGRFTjJSU3hQUVVORkxFMUJRVTB4YjBJc1JVRkJVWEJJTEV0QlFVdHZNRUlzVjBGRmJrSndNRUlzUzBGQlMzVXdRaXh0UWtGSFRIWXdRaXhMUVVGTGR6QkNMSE5DUVVGelFuZ3dRaXhMUVVGTE5teENMRk5CUVZVc1owSkJRV2RDTkU4c1IwRkJiVUpCTEVWQlFXdENjblJDTEVsQlJ5OUdjRWdzUzBGQlMzY3dRaXh6UWtGQmMwSlFMRWRCUVhkQ0xHZENRVUZuUWxFc1IwRkJiVUpCTEVWQlFXdENjblJDTEVsQlJYaEhjRWdzUzBGQlMzY3dRaXh6UWtGQmMwSk9MRWRCUVhsQ0xHVkJRV1ZQTEVkQlFXMUNRU3hGUVVGclFuSjBRaXhKUVVjeFIyMTBRaXh0UWtGRFJYWXdRaXhMUVVGTE1EQkNMSE5DUVVGelFqRXdRaXhMUVVGTE5teENMRk5CUVZVc1dVRkZNVU0zYkVJc1MwRkJTelpzUWl4VFFVRlRlR2RDTEUxQlFVMW5TeXhUUVVGWExGTkJSMnBEYld4Q0xITkNRVUZ6UWk5WUxFVkJRVlZyV1N4RlFVRlhlRllzUjBGRGVrTXNUVUZCVFhsV0xFVkJRV2xDTlRCQ0xFdEJRVXR2TUVJc1YwRmhOVUp3TUVJc1MwRkJTell3UWl3eVFrRkJNa0p3V1N4SFFWaElNMWtzU1VGRE0wSXNSMEZCU1VFc1NVRkJXVGxFTEV0QlFVczJiRUlzVlVGQldUTm9RaXhQUVVGUGIzZENMRmRCUVdGNGQwSXNSVUZCVVhOSUxGbEJRV04zY0VJc1JVRkRla1VzVDBGSFJqVXdRaXhMUVVGTE1EQkNMSE5DUVVGelFqVjNRaXhGUVVGVE5uZENMRWRCUlhCRExFMUJRVTFHTEVWQlFXdENkbmRDTEU5QlFVOXZSU3hwUWtGQmFVSjRSU3hIUVVGVE5uZENMRWRCUTNwRU4zZENMRVZCUVZGMVFpeE5RVUZOYzNaQ0xFZEJRV0VzUjBGQlIzaFdMRVZCUVZOblFpeFBRVUZQUXl4WFFVRlhjVlVzVjBGTk4wUXZaU3hSUVVORk1WWXNTMEZCU3pnd1FpeDNRa0ZCZDBJNU1FSXNTMEZCU3pac1FpeFRRVUZWTEZsQlJUVkROMnhDTEV0QlFVczRNRUlzZDBKQlFYZENPVEJDTEV0QlFVczJiRUlzVTBGQlZTeG5Ra0ZGTlVNM2JFSXNTMEZCU3pnd1FpeDNRa0ZCZDBKaUxFZEJRWGRDTEdkQ1FVVnlSR293UWl4TFFVRkxPREJDTEhkQ1FVRjNRbG9zUjBGQmVVSXNaVUZIZUVSUkxITkNRVUZ6UWpWM1FpeEZRVUZUTm5kQ0xFZEJRemRDTEUxQlFVMUpMRVZCUVdOcWVFSXNSVUZCVVhWQ0xFMUJRVTF6ZGtJc1IwRkZPVUpKTEVkQlEwWnVUaXhIUVVGWlF5eHBRa0ZCYVVJdmFrSXNSVUZCVXpaM1FpeEZRVUZYU1N4SFFVbHlSRVFzZDBKQlFYZENjbGtzUlVGQlZXdFpMRWRCV1doRE16QkNMRXRCUVVzMk1FSXNNa0pCUVRKQ2NGa3NSMEZZU0ROWkxFbEJRek5DTEUxQlFVMDFRaXhGUVVGUk1HeENMRWRCUVZsUExHbENRVUZwUW5KclFpeEZRVUZUTm5kQ0xGRkJSUzlDTEVsQlFWWjZlVUlzUlVGRFZEUkNMRVZCUVZGMVFpeE5RVUZOTW5aQ0xHVkJRV1ZNTEVsQlJUZENMMDBzUjBGQldVVXNiMEpCUVc5Q2FHdENMRVZCUVZNMmQwSXNSMEZEZWtNM2QwSXNSVUZCVVhWQ0xFMUJRVTF6ZGtJc1IwRkJZWHA1UWl4TlFVOXFReko1UWl3eVFrRkJNa0p3V1N4RlFVRlZkMWtzUjBGREwwSXNSMEZCVlhoWkxFZEJRMXAzV1N4RlFVRlRlRmtzUjBGRlZESk1MRWRCUVdVMVV5eExRVUZMYVVnc1JVRkJWWHBqTEV0QlFVczJiRUlzVlVGQlZYcG5RaXhSUVVGUk5uWkNMRWRCU1hwRVF5eG5Ra0ZEUlN4UFFVRlBiREZDTEV0QlFVdHZNRUlzVjBGQllTeEhRVmMzUWl4TlFVRk5aU3hIUVVGWkxFTkJRMmhDUXl4VlFVRlhMR2xDUVVOWWNsZ3NWMEZCVnl4RlFVVlljVWtzV1VGQldTeEZRVU5hYVZBc1dVRkJZU3hQUVVWaVF5eGpRVUZsTEUxQlJWaERMRWRCUVdkQ0xFTkJRM0JDU0N4VlFVRlhMRk5CUTFoeVdDeFZRVUZYTEZWQlExaHhTU3hYUVVGWkxGVkJRMXBwVUN4WlFVRmhMRzFDUVVOaVF5eGpRVUZsTEcxQ1FVbFlSU3hIUVVGdlFpeFBRVU53UWtNc1IwRkJhMElzZDBKQlJYaENMRTFCUVUxRExFZEJRMG81VUN4WlFVRlpia2tzUjBGRFZucGtMRXRCUVVzMmNVSXNVVUZCVlRkeFFpeExRVUZMT0hGQ0xGZEJRVmR5VGl4SFFVTXZRbnBrTEV0QlFVc3lNVUlzWVVGQll5eEZRVU51UWpNeFFpeExRVUZMTm14Q0xGTkJRVmNzUzBGSGJFSnJTeXhMUVVGTE5WRXNSMEZEUlc1bUxFdEJRVXMyY1VJc1VVRkJVVGxOTEZkQlMyeENMMlFzUzBGQlN6UXhRaXhWUVVWRU5URkNMRXRCUVVzMmNVSXNVVUZCVVhwRkxGbEJRMlo2U0N4SFFVRlBNMlVzUzBGQlN6WXhRaXhsUVVka056RkNMRXRCUVVzMk1VSXNZMEZCWTNoWUxGVkJRVlYwUlN4SlFVRkplV0lzU1VGRmFrTjRNVUlzUzBGQlN6Z3hRaXh0UWtGQmEwSXNTMEZEY2tKdVZ5eEhRVUZSVWl4UFFXSlNVU3hIUVVGUlVpeEhRV2xDV2pKUkxFdEJRVXN6VVN4SFFVTkZibVlzUzBGQlN6WnhRaXhSUVVGUk9VMHNWMEZMYkVJdlpDeExRVUZMTmpGQ0xHTkJRV040V0N4VlFVRlZiMGdzVDBGQlR5dFFMRWxCUlhCRGVERkNMRXRCUVVzNE1VSXNiVUpCUVd0Q0xFdEJRM0pDT1RGQ0xFdEJRVXNyYkVJc1ZVRkRUSEJITEVkQlFWRlNMRTlCVWxKUkxFZEJRVkZTTEVkQllWb3dWeXhqUVVORkxFbEJRVXMzTVVJc1MwRkJTelpzUWl4VFFVRlZMRU5CUTJ4Q0xFMUJRVTFyVVN4RlFVRlhjblJDTEZOQlFWTnpkRUlzWTBGQll5eFBRVU40UTBRc1JVRkJVMWdzVlVGQldYQXhRaXhMUVVGTE5uRkNMRkZCUVZGMVN5eFZRVVU1UW5BeFFpeExRVUZMTm5GQ0xGRkJRVkY2UlN4WlFVTm1NbEFzUlVGQlV6RllMRlZCUVZWMFJTeEpRVzVFUkN4UlFYTkVjRUl2V2l4TFFVRkxObXhDTEZOQlFWZHJVU3hGUVVkc1FpeFBRVUZQTHpGQ0xFdEJRVXMyYkVJc1UwRkhaR2xHTEZkQlFWZHlUaXhIUVU5VUxFOUJUa0ZCTEVWQlFWTXNTVUZCU3pCWUxFMUJRMVVzYVVKQlFWZ3hXQ3hGUVVGelFrRXNSVUZCVXl4TFFVZHlRelJZTEZsQlFXTXZXQ3hIUVVGWFJ5eEZRVUZQTkZnc1lVRkRka001V0N4SFFXNUZWeXhYUVcxRllVVXNSVUZCVVRoWUxFbEJRM3BDT1Znc1JVRkhWRzFaTEZWQlEwMDFNVUlzUzBGQlN6SXhRaXhqUVVsVU16RkNMRXRCUVVzMmNVSXNVVUZCVVhkTExGbEJRVmxaTEU5QlFVOXFNa0lzUzBGQlN6WXhRaXhsUVVWeVF6VlRMRWRCUVdGUkxFZEJRVWQ2YWtJc1MwRkJTell4UWl4alFVRmxTaXhKUVVGcFFpeExRVU51UkRsV0xFZEJRVkV6Wml4TFFVRkxObkZDTEZGQlFWRjVTeXhyUWtGRmRrSjBNVUlzUzBGQlN6SXhRaXhoUVVGakxFZEJSM0pDTlZBc1ZVRkRUeTlzUWl4TFFVRkxNakZDTEdOQlNWWXhVeXhIUVVGaFF5eEpRVUZKYkdwQ0xFdEJRVXMyYkVJc1UwRkJWVFJRTEVsQlJXaERlakZDTEV0QlFVczJiRUlzVTBGQlUwb3NVMEZGWkhwc1FpeExRVUZMTWpGQ0xHRkJRV01zUjBGSGNrSkhMR3RDUVVGclFqTlhMRWRCUTJoQ1V5eEhRVUYxUWxRc1JVRkJWVzVtTEV0QlFVczJNVUlzWTBGQlpUY3hRaXhMUVVGTE5uRkNMRkZCUVZGNlJTeGhRVmQwUlN4TlFVRk5PRkFzUjBGQldTeERRVU5vUWtNc1dVRkJZU3hMUVVWaVF5eFhRVUZYTEVkQlJWQkRMRWRCUVdkQ0xFTkJRM0JDUml4WlFVRmhMRlZCUTJKRExGVkJRVmNzVjBGSlVFVXNSMEZCWXl4blFrRkxaRU1zUjBGQmJVSXNWMEZGZWtJc1RVRkJUVU1zUjBGRFNqVlJMRmxCUVZsdVNTeEhRVU5XZW1Rc1MwRkJTelp4UWl4UlFVRlZOM0ZDTEV0QlFVczRjVUlzVjBGQlYzSk9MRWRCUXk5Q2VtUXNTMEZCUzNreVFpeFhRVUZaTEVWQlEycENlakpDTEV0QlFVc3dNa0lzY1VKQlFYVkNMRXRCUnpsQ1F5eFhRVU5GTEUxQlFVMHNXVUZEU2xJc1JVRkJWeXhWUVVOWVF5eEhRVU5GY0RKQ0xFdEJRVXMyY1VJc1VVRkZURGR4UWl4TFFVRkxlVEpDTEZsQlNVeE1MRWRCUTBaRUxFVkJRVmw0UkN4UlFVZGtNVkFzUjBGQllVTXNTVUZCU1hoaExGTkJRVlUwZEVJc1NVRkZNMEp5VkN4SFFVRmhVU3hIUVVGSEwyRXNVMEUzUWtrc2QwSkJOa0oxUW5OYUxFZEJRVk5vYVVJc1MwRkJTelF5UWl4bFFVRmxOVlVzUzBGRGVFVnBRaXhIUVVGaFVTeEhRVUZITDJFc1UwRTNRazBzTkVKQk5rSjFRbk5hTEVkQlFWTm9hVUlzUzBGQlN6WXlRaXhsUVVGbE4xVXNTMEZETVVWb2FVSXNTMEZCUzNreVFpeFhRVUZaTEVkQlIyNUNTeXhoUVVOUE9USkNMRXRCUVV0NU1rSXNXVUZKVm5veVFpeExRVUZMZVRKQ0xGZEJRVmtzUlVGRGFrSjRWQ3hIUVVGaFF5eEpRVUZKZUdFc1UwRkJWVFIwUWl4TFFVazNRazBzWlVGQlpUVlZMRWRCUTJJc1RVRkJUU3hQUVVOS2FsTXNSMEZEUldsVExFZEJRMFVzV1VGRFNtMVZMRWRCUTBWdU1rSXNTMEZCU3paeFFpeFJRVVZVTEVkQlFVazVZU3hKUVVGWGNrZ3NWVUZCV1hGSUxFbEJRVmR2YlVJc1IwRkJaVUVzUlVGQldYUjFRaXhUUVVGVGEwa3NSMEZEZUVVc1QwRkhSaXhOUVVGTk5Vc3NSVUZCVjJscVFpeEhRVUZsVlN4clFrRkJhMEp4VGl4SFFVVXhRaXhKUVVGd1FtaDRRaXhGUVVGVE5FOHNUMEZEV0c5cFFpeEZRVUZaZUVRc1VVRkRTRE41UWl4TFFVRkxNREpDTEhWQ1FVRjVRa2dzUjBGRGRrTndlRUlzUlVGQlUwRXNSVUZCVXpSUExFOUJRVk1zUjBGQlJ6UmxMRkZCUlRsQ2VIUkNMRVZCUVZNc1IwRkJSM2QwUWl4UlFVbG9RbXRGTEdWQlFXVTNWU3hIUVdwRlJDeFJRV3RGVWtFc1JVRkJUVE5uUWl4TlFVbFdja0lzUzBGQlN6QXlRaXh4UWtGQmRVSXhWU3hGUVVGTksxVXNVMEZCVjFJc1IwRnlSWHBDTEZkQmQwVjBRbnBNTEZkQlFWZHlUaXhIUVV0VUxFOUJTa0ZCTEVWQlFWTXNTVUZCUzNsWkxFMUJRMVVzYVVKQlFWaDZXU3hGUVVGelFrRXNSVUZCVXl4SlFVVTFRMFlzUjBGc1JsY3NXVUZyUm1GRkxFVkJRVkUwV1N4SlFVTjZRalZaTEVkQmFVSllMRTFCUVUxMVdpeEhRVUZUTEZGQlNWUkRMRWRCUVdVc1UwRkRaa01zUjBGQldTeERRVU5vUW01Q0xGVkJRVlVzUlVGRFZqRk5MRlZCUVZVc1JVRkRWbk5LTEU5QlFVOHNSMEZGU0hkRkxFZEJRV2RDTEVOQlEzQkNjRUlzVTBGQlZTeHRRa0ZEVmpGTkxGTkJRVlVzVlVGRFZuTktMRTFCUVU4c1YwRkpTSGxGTEVkQlFXbENMR3RDUVVOcVFrTXNSMEZCWlN4blFrRkZaa01zUjBGQlpTeHJRa0ZEWmtNc1IwRkJjMElzZVVKQlEzUkNReXhIUVVFd1Fpd3lRa0ZGTVVKRExFZEJRVEJDTERaQ1FVVXhRa01zUjBGQmEwSXNZVUZGYkVKRExFZEJRVzlDTEU5QlEzQkNReXhIUVVGdlFpeGxRVmN4UWl4TlFVRk5ReXhYUVVGamJGTXNSMEZEYkVKRExGbEJRVms1YUVJc1JVRkJVekphTEVkQlEyNUNNazBzVFVGQlRYUnRRaXhIUVVOT09VUXNTMEZCU3paeFFpeFJRVUZWTjNGQ0xFdEJRVXM0Y1VJc1YwRkJWM0pPTEVkQlF5OUNlbVFzUzBGQlN6Z3pRaXhSUVVGVk1WQXNSMEZCWlVNc1VVRmlWaXhuUWtGaGJVTnliMElzUzBGQlN6WnNRaXhWUVVNMVJEZHNRaXhMUVVGTEt6TkNMRlZCUVZrdk0wSXNTMEZCUzJjMFFpeHpRa0ZEZEVKb05FSXNTMEZCUzJrMFFpeFhRVUZoYWpSQ0xFdEJRVXRyTkVJc2RVSkJRM1pDYkRSQ0xFdEJRVXMyZGtJc1ZVRkJWeXhGUVVOb1FqZDJRaXhMUVVGTGJUUkNMSE5DUVVGMVFpeEZRVU0xUW00MFFpeExRVUZMYjNaQ0xHdENRVUZ0UWl4RlFVTjRRbkIyUWl4TFFVRkxielJDTEZkQlFXRXNTVUZCU1dwRkxFZEJTV0k1U1N4eFFrRkRWQ3hQUVVGUE5rd3NSMEZIUlRkWUxHdENRVU5VTEU5QlFVOHlXQ3hIUVVsVU1WQXNUMEZCVHpORkxFZEJRMHdzVDBGQlR6TnBRaXhMUVVGTE5uWkNMRk5CUVZjM2RrSXNTMEZCU3poMlFpeFBRVUZUT1haQ0xFdEJRVXNyZGtJc1MwRkJTM0JPTEVkQlIycEViMDRzUzBGQlMzQk9MRWRCUTBNemFVSXNTMEZCU3paMlFpeFZRVUZaTjNaQ0xFdEJRVXR2ZGtJc2EwSkJTVkp1VFN4SFFVRmhhMElzVVVGQlVXNXJRaXhMUVVGTE5teENMRk5CUVZWM1VpeEhRVUZqTEVOQlEyeEZNVlVzWTBGQlFVRXNTVUZIV1RaQ0xHMUNRVWxrZUd0Q0xFdEJRVXMyZGtJc1ZVRkJWeXhGUVVWYU4zWkNMRXRCUVV0eE5FSXNaMEpCUTFCeU5FSXNTMEZCUzI5MlFpeHJRa0ZCYlVJc1IwRkhNVUp3ZGtJc1MwRkJTMjgwUWl4WFFVRlhkRWtzVDBGRmFFSndia0lzVTBGQlUyZElMRXRCUVVzeVR5eFZRVUZWZEVVc1NVRkJTVEprTEVsQlJUVkNNVE5DTEV0QlFVdHpORUlzWjBKQlJVeDBORUlzUzBGQlMzVTBRaXhyUWtGRlRIWTBRaXhMUVVGTGR6UkNMR3RDUVVWTWRsWXNSMEZCWVZFc1IwRkJSM3BxUWl4TFFVRkxPRE5DTEZGQlFWTk1MRWxCUVhsQ0xFdEJRM0pFZUZVc1IwRkJZVk1zU1VGQlNURnFRaXhMUVVGTE5teENMRk5CTVVWRkxEUkNRVEJGSzBJM1JDeEpRVU5xUkVFc1JVRkJUV3BUTEZOQlFWY3ZVQ3hMUVVGTE5teENMRmRCUTNoQ04yeENMRXRCUVV0dE5FSXNjMEpCUVhWQ0xGTkJTMnhEYmpSQ0xFdEJRVXQ1TkVJc1pVRkJZeXhKUVVGTmVqUkNMRXRCUVVzd05FSXNZVUZCWVM5V0xFMUJSemREYlU0c1QwRkRSU3hKUVVGTE9YWkNMRXRCUVVzMmRrSXNWVUZCV1RkMlFpeExRVUZMYjNaQ0xHbENRVU42UWl4UFFVdEdMRWRCUm10Q2JrMHNSMEZCWVd0Q0xGRkJRVkZ1YTBJc1MwRkJTelpzUWl4VFFXcEhNMElzYVVKQmJVZElja0lzYVVKQlExb3NUMEZIUm5oclFpeExRVUZMTm5aQ0xGVkJRVmNzUlVGRmFFSXNUVUZCVFhwS0xFVkJRV0Z3YlVJc1MwRkJTM0UwUWl4alFVVndRbXBUTEVsQlEwWndiVUlzUzBGQlMyOTJRaXhyUWtGQmJVSXNSMEZITVVKd2RrSXNTMEZCUzNVMFFpeHJRa0ZGVEhZMFFpeExRVUZMZHpSQ0xHdENRVVZNZURSQ0xFdEJRVXRwTkVJc1YwRkJWMjVDTEdGQlJXaENPVEpDTEV0QlFVczJiRUlzVTBGQlUzaElMRlZCUVZWdlNDeFBRVUZQYTFNc1NVRkZMMEl4VlN4SFFVRmhReXhKUVVGSmJHcENMRXRCUVVzMmJFSXNVMEZCVlRCU0xFbEJRMmhEZEZVc1IwRkJZVU1zU1VGQlNXeHFRaXhMUVVGTE9ETkNMRkZCUVZOTUxFbEJSUzlDZWpOQ0xFdEJRVXR0YlVJc1owSkJRV1VzU1VGQlRXNXRRaXhMUVVGTE1qUkNMR05CUVdNek5FSXNTMEZCU3pac1FpeFRRVUZWVHl4SFFVYzVSRXdzVlVGRFJTeERRVUZETjJoQ0xFOUJRVkZzUlN4TFFVRkxPRE5DTEZOQlFWTXhlVUlzVTBGQlVYZDZRaXhIUVVGbE0xWXNSMEZCWVVNc1NVRkJTVEJXTEVWQk0wa3ZReXhsUVRaSmFFSTFORUlzUzBGQlN5c3pRaXhWUVVGVmFGTXNWVUZGWmk5c1FpeExRVUZMYVRSQ0xGZEJRVmR1UWl4aFFVVm9RakZOTEUxQlFVMXlSU3hWUVVkU09GTXNaVUZEUlRjMFFpeExRVUZMY3pSQ0xHZENRVWxRVGl4elFrRkRSU3hQUVVGUExFbEJRVWwwUXl4SFFVRlRMRU5CUTJ4Q00xZ3NWVUZCVjNsR0xGRkJRVkY0YWtJc1MwRkJTelp4UWl4UlFVRlJhMHdzVlVGRmFFTXpVQ3hYUVVGWmNHMUNMRXRCUVV0eE5FSXNaMEpCU1hKQ1NDeDFRa0ZEUlN4UFFVRlBMRWxCUVVreFFpeEhRVUZWTEVOQlEyNUNUQ3haUVVGaGJqSkNMRXRCUVVzMmJFSXNWMEZKZEVKcFJpeFhRVUZYY2s0c1IwRk5WQ3hQUVV4QlFTeEZRVUZUTEVsQlFVdDVXaXhOUVVOVWRGQXNSMEZCV1Vjc2EwSkJRV3RDTDI1Q0xFdEJRVXMyYkVJc1lVRkRhRUlzYVVKQlFWaHdTU3hGUVVGelFrRXNSVUZCVXl4SlFVVTFRMFlzUjBGQlowSjVXaXhIUVVGUmRsb3NSVUZCVVRCYUxFbEJRM3BDTVZvc1JVRkhWR2xpTEdGQlFXRXZWaXhIUVVOWUxFMUJRVTE1UkN4RlFVRmhjRzFDTEV0QlFVdHhORUlzWTBGRmJFSlRMRVZCUVZreFVTeEhRVUZsUXl4UlFYSktWQ3hqUVhGS2MwTnliMElzUzBGQlN6Z3pRaXhUUVVVNVJEa3pRaXhMUVVGTE5teENMRk5CUVZONlpDeFpRVUZqY0Vrc1MwRkJTelpzUWl4VFFVRlRlbVFzVjBGQlYybFdMRmRCUVdGakxFdEJRVXRETEdOQlJURkZNVllzVTBGQlUyZElMRXRCUVV0MWJVSXNUMEZCVDJveVFpeExRVUZMTm14Q0xGVkJSelZDTjJ4Q0xFdEJRVXMyYkVJc1UwRkJVM2huUWl4TlFVRk5lWE5DTEZGQlFWVXNVVUZGT1VJNWVFSXNTMEZCU3pac1FpeFRRVUZUY0dkQ0xHZENRVUZuUWl4bFFVVTVRbnBHTEV0QlFVczJiRUlzVTBGQlUyNW5RaXhoUVVGaExHTkJRV01zUjBGRmVrTXhSaXhMUVVGTE5teENMRk5CUVZOdVowSXNZVUZCWVN4UFFVRlJMRlZCUlc1RE1VWXNTMEZCU3pac1FpeFRRVUZUTjFjc1ZVRkJXU3hGUVVWMFFqaHdRaXhKUVVOR1FTeEZRVUZWT1hCQ0xGVkJRVmtzUjBGSGNFSnZXQ3hIUVVOR2VrZ3NSMEZCVHpObExFdEJRVXMyYkVJc1ZVRkhaRGRzUWl4TFFVRkxObXhDTEZOQlFWTjRTQ3hWUVVGVmRFVXNTVUZCU1RSa0xFbEJZVFZDTXpOQ0xFdEJRVXR0YlVJc1owSkJXSE5DTEV0QlEzSkNibTFDTEV0QlFVczJjVUlzVVVGQlVUaElMRTlCUTJZemVVSXNTMEZCUzJrMFFpeFhRVUZYZEVJc1YwRkhiRUl6TWtJc1MwRkJTMjkyUWl4clFrRkJiVUlzUlVGRGVFSnVUU3hIUVVGaGEwSXNVVUZCVVc1clFpeExRVUZMTm14Q0xGTkJiazFXTEdsQ1FXMU5iVU1zUTBGRGFrUnNSQ3hqUVVGQlFTeE5RVWx2UXpOcFFpeExRVUZMT0ROQ0xGRkJRVk14VWl4SFFVZDRSRzFUTEd0Q1FVTk5kalJDTEV0QlFVczJka0lzVTBGRFVEVk5MRWRCUVdGUkxFZEJRVWQ2YWtJc1MwRkJTelpzUWl4VFFVRlZNbElzU1VGQmVVSjRWaXhKUVVOc1JHaHBRaXhMUVVGTE5uRkNMRkZCUVZGNFFpeFZRVUZaY2tnc1JVRkJUVE5uUWl4TlFVRlJOREZDTEVsQlEzcERhbFlzUlVGQlRXbEVMR2xDUVVOT2FteENMRXRCUVVzNGRrSXNVVUZEU3psMlFpeExRVUZMTm5GQ0xGRkJRVkY0UWl4VlFVRlpja2dzUlVGQlRUTm5RaXhOUVVGUk5ERkNMRWxCUTJwRWFqTkNMRXRCUVVzck5FSXNaME5CU1ZRNVZpeEhRVUZoUXl4SlFVRkpiR3BDTEV0QlFVczJiRUlzVTBGQlZUSlNMRWxCU1hCRFowSXNhMEpCUTAxNE5FSXNTMEZCU3paMlFpeFRRVU5RTlUwc1IwRkJZVkVzUjBGQlIzWm1MRTlCUVZGdmVrSXNTVUZCWXl4SlFVRk5kRE5DTEV0QlFVdHpORUlzYTBKQlJXcEVjbFlzUjBGQllVTXNTVUZCU1dobUxFOUJRVkZ2ZWtJc1NVRkpOMEp4UWl4aFFVTkZNelJDTEV0QlFVczJiRUlzVTBGQlUzaG5RaXhOUVVGTmVYTkNMRkZCUVZVc1QwRkZPVUk1ZUVJc1MwRkJTelpzUWl4VFFVRlRibWRDTEdGQlFXRXNaVUZCWlN4SFFVVXhRekZHTEV0QlFVczJiRUlzVTBGQlUzQm5RaXhuUWtGQlowSXNZMEZGT1VKNlJpeExRVUZMTm14Q0xGTkJRVk53WjBJc1owSkJRV2RDTEZGQlJUbENla1lzUzBGQlMyOTJRaXhyUWtGQmJVSXNSVUZGZUVKd2RrSXNTMEZCU3lzelFpeFZRVUZWYWtrc1RVRkJTeXhMUVVOc1FuQnVRaXhUUVVGVFowZ3NTMEZCU3pKUExGVkJRVlZ2U0N4UFFVRlBhVk1zU1VGRkwwSXhNMElzUzBGQlMyYzFRaXh2UWtGRlRHZzFRaXhMUVVGTGJ6UkNMRmRCUVZjeGFVSXNVVUZGYUVKMVRpeEhRVUZoYTBJc1VVRkJVVzVyUWl4TFFVRkxObXhDTEZOQlFWVjFVaXhQUVVsNFEzRkNMR05CUVdOMFdpeEhRVU5hT0VRc1IwRkJZVkVzUjBGQlIzcHFRaXhMUVVGTE5teENMRk5CUVZVd1VpeEpRVUZ4UW5aV0xFbEJRemxEYUdsQ0xFdEJRVXR0TkVJc2NVSkJRMUJ1TkVJc1MwRkJTMjAwUWl4elFrRkJkVUlzUlVGSk1VSnVWeXhGUVVGTmFsTXNVMEZCVjJsVExFVkJRVTFwV0N4cFFrRkpSeXhKUVVFeFFtbzFRaXhMUVVGTE5uRkNMRkZCUVZGclRDeFRRVU5tTHpGQ0xFdEJRVXM0ZGtJc1QwRkRPRUlzVjBGQk1VSTVka0lzUzBGQlN6WnhRaXhSUVVGUmEwd3NWVUZEZEVJdk1VSXNTMEZCU3lzMFFpeHBRMEZKVkM4MFFpeExRVUZMS3pOQ0xGVkJRVlZvU1N4TFFVRkxOVkVzUjBGSGRFSnJXaXhqUVVORkxFOUJRVTl5TkVJc1MwRkJTelpzUWl4VFFVRlRlRWdzVlVGQlZYaFhMRk5CZEZGVUxGRkJlVkY0UW10NFFpdzJRa0ZIUlN4SFFVWnJRamxXTEVkQlFXRnJRaXhSUVVGUmJtdENMRXRCUVVzMmJFSXNVMEZ5VW01Q0xEQkNRWFZTV0hKQ0xHbENRVU5hTEU5QlIwWXNUVUZCVFN4VlFVTktia2NzUlVGQlV5eGhRVU5VTVU0c1JVRkJXU3hOUVVOYWRFd3NSMEZEUlhKR0xFdEJRVXMyYkVJc1UwRkRTSEZVTEVWQlFYRkNkbTlDTEVWQlFXVnFTU3hUUVVGVFF5eG5Ra0ZCWjBKM1F5eGpRVVU1UkN0MFFpeEhRVUV3UXl4WFFVRndRamQ2UWl4RlFVRk5hMHNzVjBGQk1FSTRUeXhGUVVGVmVGY3NVMEZCVXl0MlFpeE5RVWw2UlhOQ0xFbEJRMGczZWtJc1JVRkJUV3RMTEZWQlFWa3NWVUZIY0VJNFR5eEZRVUZWZEVVc1NVRkJTVFprTEVsQlJXUTFNMElzUzBGQlMyMXRRaXhuUWtGQlpTeExRVU5zUWpsSUxFVkJRVlZ2U0N4UFFVRlBiVk1zU1VGRlduTkNMRWRCUTBoc05VSXNTMEZCUzIxdFFpeG5Ra0ZCWlN4TFFVTnNRamxuUWl4RlFVRk5hMHNzVlVGQldTeExRVU5xUW5aUUxFdEJRVXM0TTBJc1YwRkZWRGt6UWl4TFFVRkxPRE5DTEZOQlJWSTVNMElzUzBGQlN6WnNRaXhUUVVGVE9FMHNVMEZOYUVJeVJpeG5Ra0ZEUlN4TlFVRk5XU3hGUVVGeFFtdzFRaXhMUVVGTE5teENMRk5CUVZOc1ZpeGhRVUZsYWtrc1UwRkJVME1zWjBKQlFXZENkME1zWVVGRk0wVjVjRUlzUlVGQmFVSTFNRUlzUzBGQlMyODBRaXhYUVVGWGFFVXNWMEZGYWtNclJTeEZRVUZ2UW5aRkxFVkJRV2xDTEVsQlJYUkRkVVVzUjBGQmNVSkVMRWxCUVhWQ2JtRXNUVUZCVjI5aExFbEJRWE5DUkN4SFFVRnpRbTVoTEZGQlEzUkhMMlVzUzBGQlN6WnNRaXhUUVVGVGVHZENMRTFCUVUwcmVrSXNXVUZCWXl4SFFVRkhlRVVzVVVGSGJrTjFSU3hKUVVGelFrUXNTVUZCZFVKdVlTeFBRVUZaYjJFc1IwRkJjVUpFTEVkQlFYTkNibUVzVVVGRGRFY3ZaU3hMUVVGTE5teENMRk5CUVZONFowSXNUVUZCVFdjd1FpeGhRVUZsTEVkQlFVZDZSU3hQUVVreFEyOUZMRzlDUVVORmFEVkNMRXRCUVVzMmJFSXNVMEZCVTNoblFpeE5RVUZOSzNwQ0xGbEJRV01zUjBGRGJFTndOVUlzUzBGQlN6WnNRaXhUUVVGVGVHZENMRTFCUVUxbk1FSXNZVUZCWlN4SFFVbHlRMmhVTEhWQ1FVRjFRalZKTEVWQlFWRnJSaXhIUVVNM1FpeFBRVUZQTTJsQ0xFdEJRVXR0YmtJc1RVRkJTeXhYUVVObUxFMUJRVTEwV2l4RlFVRlBaM0ZDTEVkQlFVMDVVU3h2UWtGQmIwSXZiVUlzUzBGQlRYbGtMRWRCUlRkRExFZEJRWE5DTEdsQ1FVRllRU3hGUVVGWUxFTkJTVUVzVVVGQk5FSXNTVUZCYWtJMVVDeEZRVUZMTkZBc1IwRkRaQ3hOUVVGTkxFbEJRVWxMTEZWQlFWVXNiMEpCUVc5Q1RDeE5RVWN4UXpWUUxFVkJRVXMwVUN4SFFVRlJhMFlzVVVGWmJrSk5MRWRCUVdGUkxFZEJRVWN2WVN4VFFXcFhaU3d3UWtGUlFTdzBRa0Y1VmpKRExGTkJRVlZ6V2l4SFFVTnNSaXhOUVVGTmFsTXNSVUZCVTJsT0xFZEJRWFZDYUdRc1RVRkZiRU1zUTBGQlF5eEpRVUZMTEZGQlFWRTBZeXhUUVVGVE5XTXNTMEZCU3padFFpeFZRVU01UWpkRkxFVkJRVTFwUkN4cFFrRkhVbWhETEVkQlFXRlRMRWxCUVVrelZDeEZRVUZSYzI1Q0xFbEJRV05wUXl4SlFVTnFRMEVzUlVGQlZUbFZMR3RDUVV0a2RrSXNSMEZCWVZNc1NVRkJTVE5VTEVWQlFWRnhia0lzU1VGQlowSXNTMEZEYmtOeVdpeEhRVUZWTDJRc1QwRkRXa0VzUzBGQlN6SjVRaXhqUVV0WUxFMUJRVTAwUnl4RlFVRmxibElzUjBGQlpVTXNVVUZvV0dRc1pVRnJXR3hDYTFJc1IwRkRSakZDTEVkQlFVMTJVaXhaUVVGWmFWUXNSMEZCWTNwS0xFOUJSM0pDSzBnc1IwRkJUVGxSTEc5Q1FVRnZRbWhZTEVkQlEyeERkVmdzVDBGQlQzUnVRaXhUUVVWa2VXMUNMRWRCUVhGQ2IxSXNTVUZSY2tJMVdTeEhRVUZ0UWpSWkxFbEJZMjVDTEUxQlFVMHlRaXhIUVVGVExGbEJUVlJETEVkQlFWa3NRMEZEYUVJeFJDeFZRVUZWTEVWQlExWXhUU3hWUVVGVkxFVkJRMVp3WWl4UlFVRlJMRWRCUlVwNWNrSXNSMEZCWjBJc1EwRkRjRUl6UkN4VFFVRlZMRlZCUTFZeFRTeFRRVUZWTEZWQlExWndZaXhQUVVGUkxGZEJSVW93Y2tJc1IwRkJiMElzVDBGRmNFSkRMRWRCUVdkQ0xHdENRVWxvUWtNc1IwRkJhVUlzYzBKQlZYWkNMRTFCUVUxRExGZEJRV3RDYmxVc1IwRkRkRUpETEZsQlFWazVhRUlzUlVGQlV6SmFMRWRCUTI1Q01rMHNUVUZCVFhSdFFpeEhRVU5PT1VRc1MwRkJTelp4UWl4UlFVRlZOM0ZDTEV0QlFVczRjVUlzVjBGQlYzSk9MRWRCUXk5Q2VtUXNTMEZCU3paMlFpeFZRVUZYTEVWQlEyaENOM1pDTEV0QlFVc3JNMElzVlVGQldTOHpRaXhMUVVGTFp6UkNMSE5DUVVOMFFtZzBRaXhMUVVGTGFUUkNMRmRCUVdGcU5FSXNTMEZCUzJzMFFpeDFRa0ZGZGtKc05FSXNTMEZCUzI5eVFpeHhRa0ZKU1M5TUxHdENRVU5VTEU5QlFVOXRZU3hIUVVkRmJrOHNjVUpCUTFRc1QwRkJUMjlQTEVkQlNWUnVVeXhQUVVGUE0wVXNSMEZEVEN4UFFVRlBNMmxDTEV0QlFVczJka0lzVTBGQlZ6ZDJRaXhMUVVGTE9IWkNMRTlCUVZNNWRrSXNTMEZCU3l0MlFpeExRVUZMY0U0c1IwRkhha1J2VGl4TFFVRkxjRTRzUjBGRFF6TnBRaXhMUVVGTE5uWkNMRlZCU1ZNMVRTeEhRVUZoYTBJc1VVRkJVVzVyUWl4TFFVRkxObXhDTEZOQk0wTXpRaXh2UWtFeVEyMUVMRU5CUTJ4RmJFUXNZMEZCUVVFc1NVRkhXVFpDTEcxQ1FVbGtlR3RDTEV0QlFVczJka0lzVlVGQlZ5eEZRVU5vUWpkMlFpeExRVUZMTm14Q0xGTkJRVk40WjBJc1RVRkJUVEF3UWl4WFFVRmhMRlZCUldwREx6VkNMRXRCUVVzck0wSXNWVUZCVldoSkxFOUJSVll2ZGtJc1MwRkJTelp4UWl4UlFVRlJOV01zVTBGRGFFSXNTVUZCU1d0dFFpeEpRVUZyUW5KRkxFOUJSM2hDT1haQ0xFdEJRVXMyYkVJc1UwRkJVM0JuUWl4blFrRkJaMElzWlVGRk9VSjZSaXhMUVVGTE5teENMRk5CUVZOdVowSXNZVUZCWVN4alFVRmpMRWRCUlhwRE1VWXNTMEZCU3pac1FpeFRRVUZUYm1kQ0xHRkJRV0VzVDBGQlVTeFZRVVZ1UXpGR0xFdEJRVXMyYkVJc1UwRkJVM2hJTEZWQlFWVjBSU3hKUVVGSk5HWXNTVUZaTlVJek5VSXNTMEZCUzIxdFFpeG5Ra0ZXYjBJc1MwRkRiRUp1YlVJc1MwRkJTelp4UWl4UlFVRlJOV01zVVVGRGFFSnFUeXhMUVVGTGFUUkNMRmRCUVZkMFFpeFhRVWRzUWpGVUxFZEJRV0ZyUWl4UlFVRlJibXRDTEV0QlFVczJiRUlzVTBGNFJWWXNjVUpCZDBWdFF5eERRVU5xUkd4RUxHTkJRVUZCTEUxQlNXdERNMmxDTEV0QlFVczJiRUlzVlVGQlZTeEpRVWQyUkdsTExFOUJRMDg1ZGtJc1MwRkJTeloyUWl4WFFVbFJOVTBzUjBGQllXdENMRkZCUVZGdWEwSXNTMEZCU3pac1FpeFRRWEJHTTBJc2NVSkJjMFpJY2tJc2JVSkJTV1I0YTBJc1MwRkJTMmswUWl4WFFVRlhia0lzWVVGRmFFSTVNa0lzUzBGQlN6WnNRaXhUUVVGVGJWVXNUMEZGWkdnMlFpeExRVUZMTm5aQ0xGVkJRVmNzUlVGRmFFSTNka0lzUzBGQlN6WnNRaXhUUVVGVGVFZ3NWVUZCVlc5SUxFOUJRVTlyVlN4SlFVVXZRak0xUWl4TFFVRkxLek5DTEZWQlFWVnFTU3hQUVd0Q1pqbDJRaXhMUVVGTGJXMUNMR2RDUVdoQ2IwSXNTMEZEZGtKdWJVSXNTMEZCU3pac1FpeFRRVUZUYm1kQ0xHRkJRV0VzWlVGQlpTeEhRVVV4UXpGR0xFdEJRVXMyYkVJc1UwRkJVM0JuUWl4blFrRkJaMElzWTBGRk9VSjZSaXhMUVVGTE5teENMRk5CUVZOd1owSXNaMEpCUVdkQ0xGRkJSVGxDZWtZc1MwRkJTelpzUWl4VFFVRlRlR2RDTEUxQlFVMHdNRUlzVjBGQllTeFRRVVUxUWk4MVFpeExRVUZMTm5GQ0xGRkJRVkUxWXl4VFFVTm9RaXhKUVVGSmEyMUNMRWxCUVd0Q2VtVXNVVUZIZUVKMVRpeEhRVUZoYTBJc1VVRkJVVzVyUWl4TFFVRkxObXhDTEZOQlFWVm5WU3hOUVVkQk56VkNMRXRCUVVzMmJFSXNWVUZCVlN4TFFVZDJSRVVzVlVGRFJTOXNRaXhMUVVGTEt6TkNMRlZCUVZWb1V5eFZRVVZtTDJ4Q0xFdEJRVXRwTkVJc1YwRkJWMjVDTEdGQlJXaENNVTBzVFVGQlRYSkZMRlZCU1ZJclJTeFhRVUZYY2s0c1IwRk5WQ3hQUVV4QlFTeEZRVUZUTEVsQlFVdG5ZeXhOUVVOVU4xSXNSMEZCV1Vjc2EwSkJRV3RDTDI1Q0xFdEJRVXMyYkVJc1lVRkRhRUlzYVVKQlFWaHdTU3hGUVVGelFrRXNSVUZCVXl4SlFVVTFRMFlzUjBGQlowSnBZeXhIUVVGUkwySXNSVUZCVVdsakxFbEJRM3BDYW1Nc1JVRkhWSFZoTEhOQ1FVTkZMRTlCUVU4c1NVRkJTWFJETEVkQlFWTXNRMEZEYkVKT0xGVkJMMGx6UWl4eFFrRm5TblJDY2xnc1ZVRkJWeTlrTEV0QlFVczJjVUlzVVVGQlVXdE1MRk5CUTNoQ00xQXNXVUZCV1N4RlFVTmFhVkFzV1VGQllYSXhRaXhMUVVGTE5teENMRk5CUVZONlpDeFhRVU16UW10MFFpeGpRVUZsTEVsQlFVMTBNVUlzUzBGQlN6aDJRaXhUUVVrNVFtOUpMSFZDUVVORkxFOUJRVThzU1VGQlNURkNMRWRCUVZVc1EwRkRia0pNTEZsQlFXRnVNa0lzUzBGQlN6WnNRaXhYUVVsMFFuVkdMSEZDUVVORmJra3NSMEZCWVZFc1IwRkJSM3BxUWl4TFFVRkxObXhDTEZOQmRrcExMR2REUVhWS05FSTNSQ3hKUVVOb1JHaHBRaXhMUVVGTE5uRkNMRkZCUVZGNFFpeFZRVE5MU2l4WFFUSkxaMEp5U0N4RlFVRk5NMmRDTEV0QlEycERja0lzUzBGQlN6aDJRaXhWUVUxWWVrb3NkVUpCUVhWQ05Va3NSMEZEY2tJc1QwRkJUM3BrTEV0QlFVdHRia0lzVFVGQlN5eFhRVU5tTEUxQlFVMTBXaXhGUVVGUGFYTkNMRWRCUVZVdlV5eHZRa0ZCYjBJdmJVSXNTMEZCVFhsa0xFZEJSV3BFTEVkQlFYTkNMR2xDUVVGWVFTeEZRVUZZTEVOQlNVRXNVVUZCY1VKNFl5eEpRVUZxUWpSTkxFVkJRVXMwVUN4SlFVRjVRa0VzUlVGQlQxb3NWMEZCVnl4TlFVRnRRaXhuUWtGQldGa3NSVUZETVVRc1RVRkJUU3hKUVVGSlN5eFZRVUZWTEc5Q1FVRnZRa3dzVFVGSE1VTTFVQ3hGUVVGTE5GQXNSMEZCVVhwa0xGZEJXVzVDYVdwQ0xFZEJRV0ZSTEVkQlFVY3ZZU3hUUVhoTVpTdzRRa0ZGUVN4blEwRnpUREpETEZOQlFWVnpXaXhIUVVOc1JpeE5RVUZOYWxNc1JVRkJVMmxPTEVkQlFYVkNhR1FzVFVGTmRFTXNSMEZLU1N4RFFVRkRMRWxCUVVzc1VVRkJVVFJqTEZOQlFWTTFZeXhMUVVGTE5tMUNMRlZCUXpsQ04wVXNSVUZCVFdsRUxHbENRVWRLTDBjc1IwRkJWMnhsTEUxQlEySXNUMEZIUm1scVFpeEhRVUZoVXl4SlFVRkpNMVFzUlVGQlVUaHdRaXhKUVVGblFpeExRVVZ1UXpsaUxFZEJRVlV2WkN4UFFVTmFRU3hMUVVGTE1ubENMRmRCU1ZRc1RVRkJUVFJITEVWQlFXVnVVaXhIUVVGbFF5eFJRVUZSZFZJc1NVRkZlRU5NTEVkQlFXZENRU3hKUVVGcFFuaHdRaXhIUVVOdVF5dHdRaXhIUVVGVmVGUXNXVUZCV1dsVUxFZEJRV042U2l4UFFVZDZRbWRMTEVkQlFWVXZVeXh2UWtGQmIwSm9XQ3hIUVVOMFEzVllMRTlCUVU5MGJrSXNVMEZGWkdscVFpeEhRVUZoVVN4SFFVRkhkbVlzVDBGMFQyTXNPRUpCYzA5cFFpeEpRVUZOYTJ0Q0xFZEJRV1UxVXl4TFFVRkxiMnRDTEVsQlFXVjRNRUlzVTBGQlVUWnFRaXhIUVVGTk5sRXNSMEZCVlM5VExHOUNRVUZ2UW10RExFZEJRVWs0Unl4WFFVTjRTWFJLTEVkQlFYRkNjVlFzU1VGUGNrSTNZU3hIUVVGdFFqWmhMRWxCVVc1Q0xFMUJRVTFITEVkQlFXZENMRWxCUVVseVowSXNTVUZCU1N4RFFVRkRMR0ZCUVdNc1QwRkJVU3hQUVVGUkxGZEJRVmtzVjBGQldTeFRRVUZWTEUxQlFVOHNaVUZSYUVkelowSXNSMEZCYlVJc2FVVkJUMjVDUXl4SFFVRnRRaXh4U1VGRmJrSkRMRWRCUVcxQ0xFTkJRVU12ZWtJc1JVRkJWMmN3UWl4TFFVTnVReXhOUVVGTlF5eEZRVUZuUW1vd1FpeEZRVUZWZEVNc1UwRkJVek5FTEdOQlJYcERMRWRCUVVscE5rSXNSVUZCY1VKNlpDeFRRVUZUTUdRc1IwRkRhRU1zVDBGQlNVd3NSMEZCWTJoblFpeEpRVUZKY1dkQ0xFbEJRMkk1Vnl4UlFVRlJNRmNzUjBGQmFVSXhjVUlzUzBGQlMyNUtMRVZCUVZWck1FSXNXVUZCWTBvc1IwRkJhVUl6Y1VJc1MwRkJTMjVLTEVWQlFWVnJNRUlzV1VGTmFrY3NUVUZCVFVNc1JVRkJVMGdzUlVGQmNVSXpkMElzVVVGQlR5dDNRaXhIUVVGclFrRXNZVUZCTUVJMVl5eFRRVVYyUml4SlFVRkxMRWxCUVVsdVNpeEZRVUZKTEVWQlFVZHNTeXhGUVVGTlozZENMRVZCUVU5NmJVSXNUMEZCVVZjc1JVRkJTV3hMTEVWQlFVdHJTeXhKUVVNMVF5eEhRVUZKT0d4Q0xFVkJRVTg1YkVJc1IwRkJSMnhHTEV0QlFVczRjVUlzUjBGRGFrSXNUMEZCVHl4RlFVbFlMRTlCUVU4c1IwRnZRMVFzVTBGQlUwa3NSMEZCWVVNc1JVRkJXVU1zUlVGQlYwTXNSMEZETTBNc1NVRkJTMFlzUlVGQlZ6VnRRaXhQUVVOa0xFOUJRVTgwYlVJc1JVRkhWQ3hIUVVGSlJTeEhRVUZ2UXl4dFFrRkJaa0VzUlVGRGRrSXNUMEZCVDBFc1JVRkJWMFlzUjBGSGNFSXNUVUZEVFVjc1IwRkVXU3hKUVVGSk5USkNMRTlCUVU4Mk1rSXNWMEZEUzBNc1owSkJRV2RDVEN4RlFVRlpMR0ZCUTNoRWVERkNMRVZCUVZjc1IwRkJSMnBETEZWQlFWVTBNMElzUlVGQlowSndja0lzUzBGQlMzTlVMR2xDUVVGcFFpeE5RVVZ3UlN4SlFVRkxMRWxCUVVsMFR5eEZRVUZKTEVWQlFVZHNTeXhGUVVGTmNrWXNSVUZCVXpSUExFOUJRVkZYTEVWQlFVbHNTeXhGUVVGTGEwc3NTVUZCU3l4RFFVTnVSQ3hOUVVGTk5WRXNSVUZCVlhGQ0xFVkJRVk4xVUN4SFFVTnVRblZ0UWl4RlFVRmpiak5DTEVWQlFWRkRMRk5CUVZNelJDeGpRVVZ5UXl4SlFVRkxiVUlzVDBGQlR6SkVMRXRCUVVzd01VSXNSMEZCVjJobExGTkJRVk54WlN4SFFVRmpMRU5CUTJwRWJqTkNMRVZCUVZFeWFFSXNVMEZEVWl4VFFVZEdMRTFCUVUxNVZpeEZRVUZuUWl4SFFVRkhhRFJDTEZWQlFWVlpMRVZCUVZGNVFpeFpRVU55UXpReFFpeEZRVUZ2UWl4SFFVRkhhalJDTEU5QlFVOHdNMElzUlVGQlZTeE5RVUZSTEVkQlFVbEJMRVZCUVZWTExFbEJRV2RDTEVsQlEzQkdReXhGUVVGak9URkNMRk5CUVZGcFFpeEpRVU5tSzNwQ0xFZEJRV2xDTDNwQ0xFVkJRVmM0TUVJc1NVRkRMMEp5TTBJc1JVRkJVVEpDTEdkQ1FVRm5RbGtzUlVGQlZYUkRMR0ZCUzNoRExFOUJRVThyTWtJc1JVRkJaMEp3Y2tJc1MwRkJTekJ5UWl4VlFXVTVRaXhOUVVGTlF5eEhRVUZUTEZWQlNWUkRMRWRCUVhkQ0xFbEJRVWt4YUVJc1NVRkJTU3hEUVVGRExGZEJRVmtzV1VGQllTeGxRVU14UkRKb1FpeEhRVUZuUWl4RFFVTndRa01zVlVGQlZ5eFZRVU5ZUXl4VFFVRlZMRk5CUTFaRExFMUJRVThzTkVKQlExQjJXQ3hSUVVGVExGTkJRMVIzV0N4TlFVRlBMR3RDUVVOUWRuSkNMRXRCUVUwc1ZVRkRUbkZOTEZOQlFWVXNiVUpCUTFaNFdpeFZRVUZYTEc5Q1FVTlljMGtzVDBGQlVTd3dRa0ZEVWpKclFpeFZRVUZYTERKQ1FVTllOMk1zYlVKQlFXOUNMRkZCUTNCQ0wwSXNVMEZCVlN4dFFrRkRWbk54UWl4WlFVRmhMRzlDUVVOaVF5eFRRVUZWTEZWQlExWm9RaXhYUVVGWkxHdENRVU5hUkN4VlFVRlhMRk5CUTFnM1NTeGhRVUZqTERCQ1FVVldLMG9zUjBGQlowSXNRMEZEY0VKRExFdEJRVTBzVDBGRFRrTXNTVUZCU3l4TlFVTk1ReXhOUVVGUGJHUXNTMEZCVlN4UFFVRlRMRkZCUXpGQ2JXUXNUMEZCVVN4VFFVTlNReXhMUVVGTmNHUXNTMEZCVlN4UlFVRlZMRkZCUlhSQ2NXUXNSMEZCV1N4RFFVTm9RbG9zVjBGQlZ5eEZRVU5ZUXl4VFFVRlZMQ3RIUVVOV2RGZ3NVVUZCVXl4alFVTlVkVmdzVFVGQlR5eEhRVU5RUXl4TlFVRlBMRVZCUTFCMmNrSXNUVUZCVFN4RlFVTk9jVTBzVlVGQlZTeEZRVU5XZUZvc1ZVRkJWeXhOUVVOWWMwa3NUMEZCVVN4RFFVRkRMRVZCUVVjc1IwRkRXakpyUWl4WFFVRlhMRVZCUTFnM1l5eHRRa0ZCYjBJc1EwRkJReXhOUVVGUExGRkJRVk1zVTBGQlZTeFJRVU12UXk5Q0xGTkJRVlVzYTBKQlExWnpjVUlzV1VGQllTeEhRVU5pUXl4VlFVRlZMRVZCUTFab1FpeFhRVUZaTEV0QlExcEVMRlZCT1VoMVFpeERRVVYyUWl4SlFVRkxMRU5CUVVNc1VVRkJVeXhOUVVGUExFdEJRVTBzVDBGQlVTeFBRWGhEVUN4clFrRjVRemRDTVcxQ0xFVkJRVWNzUTBGQlF5eFRRVUZWTEU5QlFWRXNVVUZCVXl4UFFVTXZRbTF2UWl4TFFVRk5MRWRCUTA1c2IwSXNSVUZCUnl4SFFVTkliVzlDTEVkQlFVa3NSMEZEU2tNc1NVRkJTeXhIUVVOTVF5eExRVUZOTEVkQlEwNURMRWxCUVVzc1IwRkRURU1zUjBGQlNTeEhRVU5LUXl4SFFVRkpMRWRCUTBwRExFZEJRVWtzUjBGRFNrTXNSMEZCU1N4SFFVTktReXhIUVVGSkxFZEJRMHBETEVkQlFVa3NSMEZEU2tNc1IwRkJTU3hIUVVOS1F5eEhRVUZKTEVkQlEwcDJiMElzUlVGQlJ5eEhRVU5JZDI5Q0xFbEJRVXNzUTBGQlF5eE5RVUZQTEZOQlFWVXNUVUZCVHl4UlFVRlRMRkZCUVZNc1ZVRkRhRVJETEVkQlFVa3NSMEZEU2tNc1IwRkJTU3hIUVVOS1F5eEZRVUZITEVkQlEwaERMRWxCUVVzc1IwRkRURU1zUlVGQlJ5eEhRVU5JUXl4TlFVRlBMRWRCUTFCRExFdEJRVTBzUjBGRFRrTXNTVUZCU3l4SFFVTk1ReXhKUVVGTExFZEJRMHhETEU5QlFWRXNSMEZEVWtNc1JVRkJSeXhIUVVOSVF5eEhRVUZKTEVsQlowZEtMMHdzWVVGQll5eE5RVVZXWjAwc1IwRkJWU3hEUVVOa1F5eExRVUZOTEd0Q1FVTk9ReXhQUVVGUkxHOUNRVU5TUXl4TFFVRk5MR3RDUVVOT1F5eE5RVUZQTEcxQ1FVTlFReXhUUVVGVkxITkNRVU5XUXl4TlFVRlBMRzFDUVVOUVF5eFJRVUZUTEhGQ1FVTlVReXhUUVVGVkxITkNRVU5XUXl4WFFVRlpMSGRDUVVOYVF5eFhRVUZaTEhsQ1FVVlNReXhIUVVGdlFpeFBRVVZ3UWtNc1IwRkJiMElzVDBGRGNFSkRMRWRCUVcxQ0xFOUJRMjVDUXl4SFFVRnJRaXhOUVVOc1FrTXNSMEZCZVVJc2FVSkJRM3BDUXl4SFFVRnBRaXhUUVVOcVFrTXNSMEZCYlVJc1owSkJRMjVDUXl4SFFVRm5RaXhSUVVOb1FrTXNSMEZCWjBJc1VVRlRkRUlzVFVGQlRVTXNWMEZCWjBKNFdpeEhRVU53UWtNc1dVRkJXVGxvUWl4RlFVRlRNbG9zUjBGRGJrSXNVVUZCYzBJc1NVRkJXQ3hGUVVOVUxFMUJRVTBzU1VGQlNVc3NWVUZCVlN3clJFRkhkRUp6VFN4TlFVRk5kRzFDTEVkQlJVNDVSQ3hMUVVGTGJ5OUNMRmxCUVdFc1JVRkRiRUp3TDBJc1MwRkJTM0V2UWl4VFFVRlhMRVZCUTJoQ2NpOUNMRXRCUVV0ekwwSXNXVUZCWXl4SFFVTnVRblF2UWl4TFFVRkxkUzlDTEdWQlFXbENMRWRCUTNSQ2RpOUNMRXRCUVV0dGVVSXNVVUZCVlN4TFFVVm1ibmxDTEV0QlFVczJjVUlzVVVGQlZUZHhRaXhMUVVGTE9IRkNMRmRCUVZkeVRpeEhRVU12UW5wa0xFdEJRVXQzTDBJc1NVRkJUU3hMUVVWWWVDOUNMRXRCUVV0NUwwSXNaMEpCU1Vsd1ZTeHhRa0ZEVkN4UFFVRlBLMUVzUjBGSFJTOWpMR3RDUVVOVUxFOUJRVTluWXl4SFFVZEZiR1VzYlVKQlExUXNUMEZCVHpSblFpeEhRVWRGZGt3c2VVSkJRMVFzVDBGQlR5dEpMRWRCU1ZSdFJTeFRRVU5GTVM5Q0xFdEJRVXR2TDBJc1dVRkJZU3hGUVVkd1FrOHNWVUZEUlRNdlFpeExRVUZMYnk5Q0xGbEJRV0VzUlVGSGNFSlJMR2RDUVVORk5TOUNMRXRCUVV0dkwwSXNXVUZCWTNBdlFpeExRVUZMYnk5Q0xGZEJSekZDT1Znc1QwRkJUM1JHTEVkQlEwd3NSMEZCUzJocFFpeExRVUZMYnk5Q0xGZEJTVllzUjBGQlNYQmtMRVZCUVU4c1EwRkRWQ3hOUVVGTmVWSXNSVUZCVlhwNlFpeExRVUZMTmk5Q0xEWkNRVUUyUWpka0xFZEJSV3hFZVZJc1JVRkJVVGhNTEdWQlFXVlBMRTlCUVZOeVRTeEZRVUZST0V3c1pVRkJaVThzVFVGRmJrUnlUU3hGUVVGUmMwMHNkVUpCUTFaMFRTeEZRVUZSZFUwc1QwRkJUeXhMUVVGTmRrMHNSMEZGY2tKQkxFVkJRVkYzVFN4UFFVRlBMRXRCUVUxNFRTeFBRVVZzUWl4RFFVTk1MRWRCUVVsNmVrSXNTMEZCUzJ0blF5eG5Ra0ZCWjBJM2FFSXNWVUZCVlhoWExGTkJRVk00TWtJc1NVRkhNVU1zV1VGR1FUTXJRaXhMUVVGTGFXZERMRTlCUVU4c1MwRkJUV3BuUXl4TlFVdHdRa0VzUzBGQlMyZG5ReXhQUVVGUExFdEJRVTFvWjBNc1QwRkpkRUlyYkVJc1ZVRkRSVFJITEdGQlFXRXpjMElzUzBGQlMzRXZRaXhWUVVOc1FuQmpMRWRCUVdGRExFbEJRVWxzYWtJc1MwRkJTelpzUWl4VFFVRlRhVUlzVVVGQlVXbFpMRWxCUVdsQ1F5eEhRVUZyUW1ndlFpeExRVUZMYldkRExHMUNRVVV6Ulc1blF5eExRVUZMZHk5Q0xFdEJRMUI0TDBJc1MwRkJTM2N2UWl4SlFVRkpMMW9zVTBGSFdIcHNRaXhMUVVGTGIyZERMR2xDUVVWTWFGY3NUVUZCVFhKRkxGVkJSMUpuU3l4UFFVTkZMRWRCUVc5RExGTkJRV2hETDNaQ0xFdEJRVXMyYkVJc1UwRkJVM2huUWl4TlFVRk5lWE5DTEZGQlEzUkNMRTFCUVUwc1NVRkJTWFJNTEUxQlFVMHNkVU5CUjJ4Q0xFbEJRVTE0YlVJc1MwRkJTM0ZuUXl4clFrRkJiVUp5WjBNc1MwRkJTMjh2UWl4WFFVTnFReXhQUVVkR0xFMUJRVTA1Uml4RlFVRlpjbGNzUjBGQllXdENMRkZCUVZGdWEwSXNTMEZCU3pac1FpeFRRVUZWTjJ4Q0xFdEJRVXMwYkVJc1dVRkJXWHBKTEUxQlFVMHJaMElzVFVGRGRrVnZReXhGUVVGaE9XaENMRWRCUVdWNFpTeExRVUZMTm14Q0xGVkJRMnBETUdFc1JVRkJORUlzVDBGQlprUXNSVUZCYzBKMFowTXNTMEZCU3pac1FpeFRRVUZUZW1oQ0xHTkJRV04xUlN4blFrRkJaMEprTEZOQlFWTTNTQ3hMUVVGTE5teENMRlZCUVZsNVlTeEZRVUZYZWpSQ0xGTkJRVk0zU0N4TFFVRkxObXhDTEZWQlJYaEpMRWRCUVVsNVZDeEZRVUZWT1ZVc2JVSkJRWEZDSzJJc1JVRkRha01zVDBGTE5FSXNXVUZCTVVKMlowTXNTMEZCU3pSc1FpeFpRVUZaZGtjc1RVRkJjMEp5Wml4TFFVRkxkeTlDTEV0QlFVOTRMMElzUzBGQlMzZG5ReXhoUVVGbGVHZERMRXRCUVV0M0wwSXNTVUZCU1RkNlFpeGpRVUZqYlhwQ0xFbEJRWGRDTVVRc1dVRkRlRWh3TjBJc1MwRkJTMjluUXl4cFFrRkZUSEJuUXl4TFFVRkxkeTlDTEVsQlFVa3ZXaXhUUVVOVWVteENMRXRCUVV0M0wwSXNTVUZCVFN4TlFVZGlMRTFCUVUxQkxFVkJRVTE0TDBJc1MwRkJTMnRuUXl4blFrRkRXRThzUlVFemJVaExReXhEUVVGQlFTeEpRVU5pTEVkQlEwVkJMRWRCUVZWcU5rSXNTMEZCUzJzMlFpeE5RWEJDU0N4SlFXOUNVMncyUWl4TFFVRkxiVFpDTEdkQ1FVTnVRbXcwUWl4VFFVRlRiVFJDTEdWQlFXVklMRWxCUldwRExFOUJRVTlCTEVkQmMyMUlVMGtzUTBGQlR6bG5ReXhMUVVGTE5HeENMRmxCUVZsMlJ5eE5RVU4wUTIxblFpeEZRVUZKT1RWQ0xHRkJRV0VzUzBGQlRTczJRaXhIUVVWMlFucG5ReXhMUVVGTE5teENMRk5CUVZOdVowSXNZVUZCWVN4dFFrRkJiMElyTmtJc1IwRkZNME42WjBNc1MwRkJTelp4UWl4UlFVRlJNbEVzVjBGRFptZEZMRVZCUVVsdWFFSXNWVUZCVlhSRkxFbEJRVWt5YTBJc1NVRkhjRUlzVFVGQlRYbzNRaXhGUVVFNFF5eHRRa0ZCTTBKcVJDeExRVUZMTm5GQ0xGRkJRVkUxYmtJc1ZVRkJNa0pxUkN4TFFVRkxObkZDTEZGQlFWRTFia0lzVlVGQlZXNUNMRXRCUVVzNVFpeExRVUZOZHk5Q0xFVkJRVXQ0TDBJc1MwRkJTelpzUWl4VlFVRlpOMnhDTEV0QlFVczJjVUlzVVVGQlVUVnVRaXhWUVVWb1NUZzVRaXhGUVVGaEwyZERMRXRCUVV0bmFFTXNaVUZCWlM4NVFpeEhRVVYyUTJwRUxFdEJRVXRwYUVNc2IwSkJRVzlDUml4SFFVVjZRaXhOUVVGTkxGVkJRMG8zVVN4SFFVTkZiSGRDTEV0QlFVczJjVUlzVVVGRFZERkdMRWRCUVVzdlVDeEpRVUZKYjNGQ0xFVkJRVXQ0TDBJc1MwRkJTelJzUWl4WlFVRlpSU3hUUVVGVk9XeENMRTFCUlhCRFFTeExRVUZMTm14Q0xGTkJRVk42YUVJc1kwRkJZM1ZGTEdkQ1FVRm5RbVFzVTBGQlV6ZElMRXRCUVV0M0wwSXNUMEZETjBSMFVDeEZRVUZWSzBZc1QwRkJUM1ZLTEVkQlEycENkbU1zUjBGQllXdENMRkZCUVZGdWEwSXNTMEZCU3pac1FpeFRRVUZWTjJ4Q0xFdEJRVXMwYkVJc1dVRkJXWHBKTEUxQlFVMXBhRUlzVjBGSGVrUndLMElzUzBGQlMyMTVRaXhSUVVOUWJubENMRXRCUVV0dGVVSXNVVUZCVVRWcVFpeFRRVVZpZGs4c1MwRkJTMjE1UWl4UlFVRlZMRWRCUVc5Q2JubENMRXRCUVVzMmJFSXNVMEZCVlRKYUxFVkJRVXQ0TDBJc1MwRkJTemg1UWl4cFFrRkJhVUpwVHl4SlFVY3ZSWFpDTEVWQlFVbHVhRUlzVlVGQlZYUkZMRWxCUVVrMGEwSXNTVUZGYkVJc1RVRkJUUzlETEVWQlFXTTFOMElzUzBGQlMydG9ReXg1UWtGQmVVSnNhRU1zUzBGQlN6WnhRaXhSUVVGUksxRXNZVUZGTTBSQkxFZEJRMFkwUkN4RlFVRkpibWhDTEZWQlFWVjBSU3hQUVVGUE5taENMRVZCUVZsd01VSXNUVUZCVFN4TlFVOXlReXhwUWtGQmEwSnJReXhUUVVGVFF5eHBRa0ZETjBJc1IwRkJSM3BHTEZWQlFWVjNSaXhUUVVGVFowZ3NTMEZCU3pSWkxGVkJRVlZzYWtJc1UwRkJVWFJDTEVsQlF6TkRiV1lzUjBGQllWRXNSMEZCUnpObUxFVkJRVk1zV1VGQllUUmhMRTlCU1RGRExFMUJWVTB3U0N4RlFVRmhjRzFDTEV0QlFVdDNMMElzU1VGQlNXNW9RaXhWUVVGVmVGY3NVMEZCVXpZeVFpeEpRVVV2UXpFclFpeExRVUZMYlcxQ0xHZENRVnBaTEV0QlEyWXNUVUZCVFdkaUxFVkJRV2xDYm1oRExFdEJRVXR6TDBJc1dVRkROVUowTDBJc1MwRkJTM012UWl4WlFVRmpMRXRCUTI1Q2NtTXNSMEZCWVd0Q0xGRkJRVkZ1YTBJc1MwRkJTelpzUWl4VFFVRlZOMnhDTEV0QlFVczBiRUlzV1VGQldYcEpMRTFCUVUxbmFFSXNUMEZGZGtSblJDeEpRVUZ0UW5SRExFbEJRM0pDTnl0Q0xFdEJRVXRwWjBNc1QwRkJUeXhMUVVGTmFtZERMRkZCVFZGQkxFdEJRVXQzTDBJc1NVRkJTM0JhTEVkQlJ6RkRNRW9zVDBGRFJTeEpRVUZMT1haQ0xFdEJRVXR0ZVVJc1VVRkRVaXhQUVVkR0xFMUJRVTF4VGl4RlFVRk5lQzlDTEV0QlFVdHJaME1zWjBKQmMwSnFRaXhIUVVaclFtcGtMRWRCUVdGclFpeFJRVUZSYm10Q0xFdEJRVXMyYkVJc1UwRkJWVGRzUWl4TFFVRkxOR3hDTEZsQlFWbDZTU3hOUVVGTk5tZENMRTFCUlM5RWVGb3NhVUpCUTFvc1QwRkhSbWRpTEVWQlFVbHVhRUlzVlVGQlZXOUlMRTlCUVU5cldpeEpRVWRxUWl4cFFrRkJhMEpxTWtJc1UwRkJVME1zYVVKQlF6ZENMRWRCUVVkNlJpeFZRVUZWZDBZc1UwRkJVMmRJTEV0QlFVczBXU3hWUVVGVmJHcENMRk5CUVZGMFFpeEhRVUZYYldZc1IwRkJZVU1zU1VGQlNYQm1MRVZCUVZNc1dVRkJZVFJoTEUxQlIycEhNV1VzUzBGQlMzVXZRaXhsUVVFMFFpeFBRVUZKTEVWQlEzSkRkaTlDTEV0QlFVdDFMMElzWlVGQk5FSXNUMEZCU1N4RlFVTnlRM1l2UWl4TFFVRkxkUzlDTEdWQlFUUkNMRTlCUVVrc1JVRkRja01zVFVGQlRXNWFMRVZCUVdGd2JVSXNTMEZCUzNjdlFpeEpRVUZKYm1oQ0xGVkJRVlY0Vnl4VFFVRlROakpDTEVsQlJTOURNU3RDTEV0QlFVdHRiVUlzWjBKQmNFTlpMRXRCUTFodWJVSXNTMEZCU3lzdlFpeDVRa0ZKVEM4dlFpeExRVUZMY3k5Q0xHTkJRV2RDVml4SlFVTjJRbGtzUlVGQlNTOWFMRk5CUjA1NmJFSXNTMEZCUzI5b1F5eHBRa0ZGVEhCb1F5eExRVUZMTm14Q0xGTkJRVk53WjBJc1owSkJRV2RDTEc5Q1FVVTVRbmRrTEVkQlFXRnJRaXhSUVVGUmJtdENMRXRCUVVzMmJFSXNVMEZCVlRkc1FpeExRVUZMTkd4Q0xGbEJRVmw2U1N4TlFVRk5PR2RDTEZGQlJUTkVhaXRDTEV0QlFVdHZaME1zYjBKQmNVSjFRbkJuUXl4TFFVRkxkeTlDTEVsQlFVdHdXaXhIUVVWNFEzQnRRaXhMUVVGTGN5OUNMRmxCUVdNc1IwRkhja0l2ZDBJc1UwRkRkVUlzVDBGQmFrSjJUeXhMUVVGTGJYbENMRk5CUTFCdWVVSXNTMEZCUzIxNVFpeFJRVUZSTldwQ0xGTkJTMnBDT0hoQ0xHZENRVU5GTEU5QlFVODNZeXhSUVVGUmVHcENMRXRCUVV0M1owTXNXVUZIZEVKT0xHZENRVU5GTEVkQlFVbHNaME1zUzBGQlMzY3ZRaXhKUVVOUUxFOUJRVTk0TDBJc1MwRkJTM2N2UWl4SlFVZGtMRTFCUVUweE4wSXNSVUZCVlRSRkxGTkJRVk56ZEVJc1kwRkJZeXhQUVVOMlEyeDVRaXhGUVVGUmN6TkNMRlZCUVZsd04wSXNTMEZCU3paeFFpeFJRVUZSTkZFc1UwRkRha01zVFVGQlRTdEVMRVZCUVUweE4wSXNSVUZCVVhkclFpeFRRVUZUTEVkQlNUZENMRTlCU0VGMGIwSXNTMEZCUzNGb1F5eFhRVUZYTjBJc1IwRkRhRUpCTEVWQlFVbHVhRUlzVlVGQlZXOUlMRTlCUVU5cFdpeEhRVUZ0UWtNc1NVRkRlRU16SzBJc1MwRkJTM2N2UWl4SlFVRk5RU3hGUVVOS2VDOUNMRXRCUVV0M0wwSXNTVUZIWkRaQ0xGZEJRVmMzUWl4SFFVTlVlQzlDTEV0QlFVdHphRU1zZFVKQlFYVkNPVUlzUlVGQlMzZ3ZRaXhMUVVGTGQyZERMRmRCUVZreFFpeEpRVWR3UkhkRExIVkNRVUYxUWpkR0xFVkJRVlU0Uml4RlFVRlRPV3RDTEVkQlEzaERMRTFCUVUwcmEwSXNSVUZCYTBKd1dpeEhRVUZsUXl4UlFVRlJOVXdzUlVGQlZXZG1MRWRCUlhCRU9FWXNTVUZCVjBNc1JVRk5hRUo0YUVNc1MwRkJTM2xvUXl4clFrRkJhMEpFTEVWQlFXbENSQ3hIUVV4MFEwTXNSVUZCWjBJdllpeFRRVkZ3UW1kakxHdENRVUZyUWpNNVFpeEZRVUZUZVRsQ0xFZEJRM3BDTEVkQlFXZENMRTlCUVZwNk9VSXNSVUZKU2l4UFFVRkpMRWRCUVZWNU9VSXNTVUZEV2tFc1JVRkJWV3ByUWl4SFFVRlhhV3RDTEZGQlJXcENkbWhETEV0QlFVczJjVUlzVVVGQlVYcGhMRXRCUTFodGVFSXNSVUZCVVc0MVFpeGhRVUZsZEVVc1NVRkRla0pCTEVWQlFWRnpNMElzVlVGQldTeEhRVU53UW5RelFpeEZRVUZSYlhsQ0xFOUJRVTl6VEN4SlFVZHFRbm81UWl4RlFVRlJORGxDTEZsQlFXTklMRVZCUVZGSExHMUNRVTA1UWpGb1F5eExRVUZMTm5GQ0xGRkJRVkY2WVN4TlFVTlljRkVzUzBGQlN6WnhRaXhSUVVGUloxSXNWMEZEWmpCR0xFVkJRVlUzUnl4SFFVRmhOa2NzUlVGQlUzWm9ReXhMUVVGTE5uRkNMRkZCUVZFclVDeFZRVUZYTlRaQ0xFdEJRVXMyY1VJc1VVRkJVV2RSTEdGQlIzWkZMekpDTEVWQlFWRnpNMElzVlVGQldXMUhMRWRCUlhCQ2VqbENMRVZCUVZFME9VSXNXVUZCWTBnc1IwRkpNVUptTEZkQlEwVXNUVUZCVFRsRkxFVkJRVkV4TjBJc1MwRkJTelpzUWl4VFFVRlRia29zWVVGQllTd3lRa0ZCTmtJeFl5eExRVUZMTm5GQ0xGRkJRVkUyVVN4TlFVVnVSaXhQUVVGUE1UZENMRXRCUVV0cmFFTXNlVUpCUVhsQ2VFWXNSMEZIZGtOcFJ5eHBRa0ZCYVVKYUxFZEJRMllzVFVGQmJVSXNWVUZCWmtFc1JVRkRTeXhOUVVkVkxGTkJRV1pCTEVWQlEwc3NVVUZIUmtFc1JVRkpWR3hDTERaQ1FVRTJRamRrTEVWQlFVOTVVaXhIUVVOc1F5eFBRVUZQUVN4SFFVRlhlbnBDTEV0QlFVczBiRUlzV1VGQldXMUNMRzlDUVVGdlFpOUZMRVZCUVUxWkxHVkJRV2RDTldsQ0xFdEJRVXMwYUVNc2MwSkJSM0JHZWs4c1lVRkRSU3hOUVVGTkxFOUJRMG8xYmtJc1IwRkRSWFpNTEV0QlFVczJjVUlzVVVGRlZDeE5RVUZ6UWl4cFFrRkJXSFJtTEVWQlEwWkJMRVZCUVU4dlJTeE5RVUZOTEV0QlFVdHJWQ3hMUVVGSk9FNHNSMEZCVDNKSUxFOUJRVTl0VGl4VFFVRlRPVVlzUlVGQlN5eE5RVWR5UXl4dFFrRkJXR3BqTEVWQlEwWTJia0lzUjBGQll6ZHVRaXhGUVVGUE5tNUNMRVZCUVZsd2VrSXNTMEZCU3pac1FpeFZRVWQ0UTNSaExFVkJSMVF5TVVJc2VVSkJRWGxDU3l4SFFVTjJRaXhOUVVFd1FpeHRRa0ZCV2tFc1JVRkJlVUpCTEVWQlFWRjZMMElzUzBGQlN6bENMRXRCUVVzMmJFSXNWVUZCV1RCaUxFVkJSM1pGZWs4c2FVSkJRV2xDYVU4c1IwRkRaaXhOUVVGTk1VNHNSVUZCZDBJc1EwRkROVUp3ZDBJc1ZVRkJWemc1UWl4RlFVTllkRzVDTEZWQlFWY3NRMEZCUXl4RFFVTldOMVVzUzBGQlRTeFBRVU5PYlVJc1VVRkJVeXhEUVVOUWMwNHNiVUpCUVc5Q2NsUXNTMEZCU3paeFFpeFJRVUZSZUZnc2NVSkJSV3hETEVOQlEwUjZUeXhMUVVGTkxGTkJRMDV0UWl4UlFVRlRMRU5CUTFCM1JpeFBRVUZSZGt3c1MwRkJTMjE2UWl4bFFVVmtMRU5CUTBSMmRVSXNTMEZCVFN4clFrRkRUbTFDTEZGQlFWTXNRMEZEVUhWTUxGTkJRVlYwVWl4TFFVRkxObkZDTEZGQlFWRjJXaXhYUVVWNFFpeERRVU5FTVUwc1MwRkJUU3hSUVVOT2JVSXNVVUZCVXl4RFFVTlFha01zVVVGQlV5eEpRVUZKT1VRc1MwRkJTelJzUWl4WlFVRlpka2NzWlVGRkwwSXNRMEZEUkhwaExFdEJRVTBzVjBGRFRrTXNVMEZCVXl4RlFVTlVReXhOUVVGUExHRkJRMUJETEVkQlFVazRTU3hIUVVGUk4wNHNTMEZCU3pab1F5dzJRa0ZCTmtKb01FSXNTMEZGYUVSMVR5eGpRVUZsZGs4c1NVRkRWRUVzUlVGQlN6bElMRkZCUVZFNVF5eFpRVUZqTkVzc1JVRkJTelZMTEZkQlEyeERha1FzUzBGQlN6Wm9ReXcyUWtGQk5rSm9NRUlzUzBGSmVFTXNUVUZCVHl4SlFVRkxkMnhDTEV0QlF5dENMRzFDUVVFNVFuSjZRaXhMUVVGTE5uRkNMRkZCUVZGclNDeGhRVUU0UWk5NFFpeExRVUZMTm5GQ0xGRkJRVkZyU0N4aFFVRmhjMElzUjBGQmVVSnlla0lzUzBGQlN6WnhRaXhSUVVGUmEwZ3NZMEZKTVVoclVDeHZRa0ZCYjBKR0xFZEJRMnhDTDJkRExFdEJRVXRyWjBNc1owSkJRV2RDTjJoQ0xGVkJRVlYwUlN4SlFVRkpMRWRCUVVjdldpeExRVUZMT0doRExEQkNRVUV3UWpsb1F5eExRVUZMTW1oRExHbENRVUZwUWxvc1RVRkhOMFpETEdWQlFXVXZPVUlzUjBGRFlpeFBRVUZQTmpSQ0xFZEJRV00zTkVJc1JVRkJWVFZETEdWQlIycERieTlDTEdkQ1FVTnRRbm92UWl4TFFVRkxObkZDTEZGQlFWRXhSeXhSUVVGUk0yUXNUVUZCVFN4TFFVVnVRM0JDTEZOQlFWRXJaU3hKUVVObUxFZEJRV2RDTEZWQlFWcEJMRVZCUTBac1FpeEhRVUZoVVN4SFFVRkhlbXBDTEV0QlFVczJiRUlzVTBGQlZUZHNRaXhMUVVGTE5HeENMRmxCUVZsNlNTeE5RVUZOYTJoQ0xFMUJRVTl5SzBJc1MwRkJTelp4UWl4UlFVRlJjRThzVlVGQlZYVkdMRWRCUVZOb2FVSXNTMEZCUzNOdVFpeFBRVUZQZEVZc1ZVRkRjRWNzUjBGd1dsVXNWMEZ2V2s1dFF5eEZRVUUwUWl4RFFVTnlReXhOUVVGTk5HUXNSVUZCVlRWa0xFbEJRVms0WVN4SFFVRm5RbW92UWl4TFFVRkxOR3hDTEZsQlFWbDZTU3hOUVVGTmNXaENMRmRCUVdGNEswSXNTMEZCU3pSc1FpeFpRVUZaZWtrc1RVRkJUVzFvUWl4UlFVTnFSekJFTEVWQlFWYzNaQ3hKUVVGWk9HRXNSMEZCWjBKcUwwSXNTMEZCU3pSc1FpeFpRVUZaZWtrc1RVRkJUWE5vUWl4WFFVRmhlaXRDTEV0QlFVczBiRUlzV1VGQldYcEpMRTFCUVUxdmFFSXNVMEZEZUVkMFlpeEhRVUZoVVN4SFFVRkhlbXBDTEV0QlFVczJiRUlzVTBGQlZXdGpMRVZCUVZNdmFFTXNTMEZCU3paeFFpeFJRVUZSY0U4c1ZVRkJWWFZHTEVkQlFWTm9hVUlzUzBGQlMyZG5ReXhQUVVGUGFHVXNTMEZEY0VacFFpeEhRVUZoVVN4SFFVRkhlbXBDTEV0QlFVczJiRUlzVTBGQlZXMWpMRVZCUVZWb2FVTXNTMEZCU3paeFFpeFJRVUZSY0U4c1ZVRkJWWFZHTEVkQlFWTm9hVUlzUzBGQlMybG5ReXhQUVVGUGFtVXNVMEZKZWtab2FVSXNTMEZCUzIxblF5eHJRa0ZCYjBJc1MwRkRia0p1WjBNc1MwRkJTelpzUWl4VlFVTlFOMnhDTEV0QlFVczRka0lzVVVGSlZEZE5MRWRCUVdGUkxFZEJRVWQ2YWtJc1MwRkJTelpzUWl4VFFVRlRhVUlzVVVGQlVXbFpMRWxCUVdsQ1F5eEhRVUZyUW1ndlFpeExRVUZMYldkRExHMUNRVVV4Ulc1blF5eExRVUZMTm5GQ0xGRkJRVkZ3VHl4VFFVTm1lbU1zUzBGQlN6WnhRaXhSUVVGVkxFbEJRVXMzY1VJc1MwRkJTelp4UWl4UlFVTjJRakZITEZGQlFWTXNVMEZEVkRGSUxGTkJRVlVzU1VGSFducGpMRXRCUVV0cGFVTXNXVUZKVkVFc1dVRkRSU3hOUVVGTmRrY3NSVUZCVVRFM1FpeExRVUZMTm14Q0xGTkJRVk51U2l4aFFVRmhMRk5CUlc1RGQyeENMRk5CUVRKQ2JHbERMRXRCUVVzMmJFSXNVMEZCVTI1S0xHRkJRV0VzTWtKQlJYaEVaMllzUjBGQkswSXNWMEZCZEVKM1J5eExRVU5ZYkdsRExFdEJRVXMyYkVJc1UwRkJVMjVuUWl4aFFVRmhMSGxDUVVFd1FtY3lRaXhIUVVGVExFdEJSVEZFUVN4SFFVRlZNVGRDTEV0QlFVczJiRUlzVTBGQlUyNUtMR0ZCUVdFc1pVRkJhMEl4WXl4TFFVRkxObXhDTEZOQlFWTTJZaXhoUVVOMlJURm9ReXhMUVVGTE5teENMRk5CUVZOdVowSXNZVUZCWVN4aFFVRmpaekpDTEVkQlJ6TkRNVGRDTEV0QlFVczJiRUlzVTBGQlUyNW5RaXhoUVVGaExGRkJRVk1zUzBGSmVFTnpOa0lzVDBGQlQyaGxMRVZCUVU5NVVpeEhRVU5hUVN4RlFVRlZlbnBDTEV0QlFVczJMMElzTmtKQlFUWkNOMlFzUlVGQlQzbFNMRWRCUlM5RGVsSXNTVUZEUm5sU0xFVkJRVkU0VEN4bFFVRTRRaXhaUVVGbWRtUXNSVUZCVFcxQ0xFdEJRWEZDSzJJc1IwRkJaMEpFTEV0QlFXbENMRWRCUjJwR2VFd3NSVUZCVVhsTkxHZENRVUZuUWpkb1FpeFZRVUZWZUZjc1UwRkJVemd5UWl4TFFVRnpRbXhNTEVWQlFWRTJUQ3hqUVVGblFsWXNSMEZETTBadVRDeEZRVUZSTmt3c1dVRkJZMVlzU1VGSmVFSnFVeXhoUVVGaE9FY3NSVUZCVVRSTUxGVkJRM0pDTlV3c1JVRkJVVFpNTEZsQlFXTldMRWRCUldwQ2Jrd3NSVUZCVVRWSkxGRkJRVkU0VVN4UFFVRlZiRWtzUlVGQlVUVkpMRkZCUVZFNFVTeE5RVUZOTlV3c1MwRkxja1F3UkN4RlFVRlJORXdzVTBGQlZ6VmxMRmxCUVZjc1MwRkRlRUpuVkN4RlFVRlJOa3dzWTBGQlowSldMRWxCUXpGQ2Jrd3NSVUZCVVRGRUxGTkJSVlF3UkN4RlFVRlJOVWtzVVVGQlVUaFJMRTFCUVUwMVRDeE5RVkoyUWpCRUxFVkJRVkV4UkN4UlFWZGFhMUVzVDBGQlQycGxMRVZCUVU5NVVpeEhRVU5hUVN4RlFVRlZlbnBDTEV0QlFVczJMMElzTmtKQlFUWkNOMlFzUlVGQlQzbFNMRWRCUlM5RGVsSXNTVUZEUm5sU0xFVkJRVkU0VEN4bFFVRTRRaXhoUVVGbWRtUXNSVUZCVFcxQ0xFdEJRWE5DSzJJc1IwRkJaMEpFTEVsQlFXbENlRXdzUlVGQlVUVk9MRk5CUVZOb1pTeFRRVUZUYldFc1JVRkJUVmNzWjBKQlIyeElPRkVzUlVGQlVYTk5MSGxDUVVsYWNGUXNZVUZCWVRoSExFVkJRVkUwVEN4VlFVTnlRalZNTEVWQlFWRTJUQ3haUVVGalZDeEhRVVZxUW5CTUxFVkJRVkUxU1N4UlFVRlJPRkVzVDBGQlZXeEpMRVZCUVZFMVNTeFJRVUZST0ZFc1RVRkJUVGRNTEV0QlMzSkVNa1FzUlVGQlVUUk1MRk5CUVZjMVpTeFpRVUZYTEV0QlEzaENaMVFzUlVGQlVUWk1MR05CUVdkQ1ZDeEpRVU14UW5CTUxFVkJRVkV6UkN4VFFVVlVNa1FzUlVGQlVUVkpMRkZCUVZFNFVTeE5RVUZOTjB3c1RVRlNka0l5UkN4RlFVRlJNMFFzVVVGWFdtbFJMSFZDUVVORkxFbEJRVXNzVFVGQlRUVmlMRXRCUVZkdWEwSXNTMEZCUzNVdlFpeGxRVU42UWl4SFFVRkpkaTlDTEV0QlFVdDFMMElzWlVGQlpYQmlMRWRCUTNSQ0xFOUJRVThzUlVGSldDeFBRVUZQTEVWQlIxUXlSeXhYUVVGWGNrNHNSMEZEVkN4TlFVRk5NR3RDTEVWQlFXbENkbUVzUjBGQldVY3NhMEpCUVd0Q0wyNUNMRXRCUVVzMmJFSXNWVUZwUXpGRUxFOUJhRU5CZEd0Q0xFOUJRVTh5UkN4TFFVRkxhVGxDTEVkQlFXZENMemhDTEZOQlFWRm5PVUlzU1VGRE9VSTVSeXhIUVVGelFuSm9RaXhKUVVGSmJXOUNMRmRCUTNKQ1JDeEZRVUZsUXl4UFFVY3hRak5yUWl4RlFVRlRMRWxCUVV0NlpDeExRVUZMTkd4Q0xGbEJRVmw1Uml4WFFVTXhRamhYTEV0QlEyMUNMR2xDUVVGWU1XdENMRWRCUVhWQ1FTeEZRVUZUUVN4RlFVRlRMRXRCUlM5RGVWTXNWMEZCYVVNc1NVRkJja0o2VXl4RlFVRlBlVk1zVlVGQmMwSjRia0lzVTBGQlUyZElMRXRCUVU4MFRpeEhRVUZYUnl4RlFVRlBlVk1zVjBGRmRFUXNhVUpCUVdwQ2VsTXNSVUZCVDJ0bExGRkJRMmhDYkdVc1JVRkJUMnRsTEUxQlFWRXNRMEZEWWpWTUxFdEJRVTEwVXl4RlFVRlBhMlVzVFVGRFlqZE1MRXRCUVUxeVV5eEZRVUZQYTJVc1VVRkpWeXhwUWtGQmFrSnNaU3hGUVVGUGFXVXNVVUZEYUVKcVpTeEZRVUZQYVdVc1RVRkJVV3BsTEVWQlFVOXBaU3hOUVVGTmRqTkNMRmxCUjBFc2FVSkJRVzVDYzFvc1JVRkJUemhxUWl4VlFVTm9RamxxUWl4RlFVRlBPR3BDTEZGQlFWVTVha0lzUlVGQlR6aHFRaXhSUVVGUmNEbENMRmxCUjJ4RGIxb3NSMEZCWjBJNFpDeEhRVUZSTldRc1JVRkJVWHBrTEV0QlFVczBiRUlzV1VGQldUUk5MR0ZCUlRkREwxVXNSVUZCVDI5bExGZEJRMVJ3WlN4RlFVRlBaMlVzVTBGQlYyWXNSMEZCWVdwa0xFVkJRVTluWlN4VFFVRlZhR1VzUlVGQlQyMWtMRlZCUVZkdVpDeEZRVUZQYjJRc1lVRkhjRVZ3WkN4RlFVZFViV3RDTEhGQ1FVTkZMRTFCUVUxdWEwSXNSVUZCVXl4SFFVVm1MRWxCUVVzc1RVRkJUWEJqTEV0QlFVOXlRaXhMUVVGTE5uRkNMRkZCUTJwQ04zRkNMRXRCUVVzMGJFSXNXVUZCV1hsR0xGRkJRVkZvY1VJc1MwRkJVM0pDTEV0QlFVczJjVUlzVVVGQlVYaHdRaXhMUVVOcVJHOWpMRVZCUVU5d1l5eEhRVUZQY2tJc1MwRkJTelp4UWl4UlFVRlJlSEJDTEVsQlR5OUNMRTlCUVU5dll5eEZRVWRVTW1wQ0xHbENRVU5GTEUxQlFVMDFRaXhGUVVGTmVDOUNMRXRCUVV0clowTXNaMEpCUTFodFF5eEZRVUYzUWl4SlFVRkplR3RDTEU5QlFVOHNWVUZCVlRka0xFdEJRVXM0YUVNc05rSkJRVGhDTEV0QlEyaEdVU3hGUVVGWE9VTXNSVUZCU1RscFFpeGhRVUZoTEZOQlFWTXZZaXhOUVVGTk1HaERMRWRCUldoRExFOUJRV0pETEVkQlFYRkNRU3hGUVVGVGRuVkNMRTlCUVZNc1IwRkRla04xZFVJc1JVRkJVelZ2UWl4TFFVRkpObTlDTEVkQlFWTkJMRVZCUVUxNmJFSXNVMEZCVVRGWUxGTkJRVkZ2T1VJc1IwRkJWV2hFTEVWQlFVbHVhRUlzVlVGQlZXOUlMRTlCUVU4cll5eExRVWt2UlZZc2RVSkJRMFVzVFVGc2IwSnRRaXhoUVhGdlFuSkNSQ3cyUWtGQk5rSjZUeXhIUVVNelFpeE5RVUZOTEUxQlEwcHVkVUlzUjBGRFJXMTFRaXhGUVVWRGJuVkNMRWxCU1V4cVJpeExRVUZMZHk5Q0xFbEJRVTEyTmtJc1JVRkJUVVVzVTBGQlUzWkRMRTlCUlRGQ05VTXNTMEZCUzI5b1F5eHBRa0ZGVEhCb1F5eExRVUZMYVdoRExHOUNRVUZ2UW1wb1F5eExRVUZMWjJoRExHVkJRV1V2TjBJc1JVRkJUV2hETEdGQlIzSkViVGxDTEdsQ1FVTk5jR2RETEV0QlFVdHRlVUlzVlVGRFVHNTVRaXhMUVVGTGJYbENMRkZCUVZGb1Z5eFZRVVZpYm1Nc1MwRkJTMjE1UWl4UlFVRlZMRTFCUzI1Q09Vd3NkVUpCUVhWQ05Va3NSMEZEY2tJc1QwRkJUM3BrTEV0QlFVdHRia0lzVFVGQlN5eFhRVU5tTEUxQlFVMTBXaXhGUVVGUGMzaENMRWRCUVZGd1dTeHZRa0ZCYjBJdmJVSXNTMEZCVFhsa0xFZEJSUzlETEVkQlFYTkNMR2xDUVVGWVFTeEZRVUZ4UWl4RFFVTTVRaXhSUVVFMFFpeEpRVUZxUWpWUUxFVkJRVXMwVUN4SFFVTmtMRTFCUVUwc1NVRkJTVXNzVlVGQlZTeHZRa0ZCYjBKTUxFMUJSekZETlZBc1JVRkJTelJRTEZWQlkySjNRaXhIUVVGdFFtdG5RaXhKUVdOdVFpeE5RVWxOYzBRc1IwRkJXU3hKUVVGTGRFUXNSMEZCVVRsVUxGRkJRemRDY0c5Q0xGVkJRVmNzVVVGRFdITkpMRTlCUVZFc1EwRkJReXhGUVVGSExFZEJRMW8wV1N4UlFVRlRMRkZCUTFSdlpDeFJRVUZUTEVkQlExUTVSaXhUUVVGVkxDdEpRVVZPYVVnc1IwRkJaMElzU1VGQlMzWkVMRWRCUVZFelRTeFpRVU5xUXl0UExGRkJRVk1zTmtKQlJVeHZRaXhIUVVGVkxFTkJRMlF6UlN4TFFVRk5MR3RDUVVOT1F5eFBRVUZSTEc5Q1FVTlNReXhMUVVGTkxHdENRVU5PUXl4TlFVRlBMRzFDUVVOUVF5eFRRVUZWTEhOQ1FVTldReXhOUVVGUExHMUNRVU5RUXl4UlFVRlRMSEZDUVVOVVF5eFRRVUZWTEhOQ1FVTldReXhYUVVGWkxIZENRVU5hUXl4WFFVRlpMSGxDUVZWa0xFMUJRVTF0UlN4WFFVRm5RbnBFTEVkQlJWUTVWQ3h4UWtGRFZDeFBRVUZQYjFnc1IwRkhSWEJxUWl4clFrRkRWQ3hOUVhwRFZ5eFZRVFJEUm14RExHMUNRVU5VTEU5QlFVOTNiRUlzUjBGSFJXNVJMSGxDUVVOVUxFOUJRVTlyVVN4SFFVbFVja01zWjBKQlEwVXNUMEZCVDNKblF5eExRVUZMZDJkRExGbEJRV040WjBNc1MwRkJTelpwUXl4alFVZHFRM2hDTEZkQlFWYzNRaXhIUVVOVWVDOUNMRXRCUVV0emFFTXNkVUpCUVhWQ09VSXNSVUZCUzNndlFpeExRVUZMZDJkRExGZEJhRU51UWl4dFFrRnJRMjVDZUdkRExFdEJRVXR6YUVNc2RVSkJRWFZDT1VJc1JVRkJTM2d2UWl4TFFVRkxObWxETEdOQmFrTnFRaXhwUWtGeFEzWkNRU3hqUVVORkxFOUJRVTgzYVVNc1MwRkJTMnRvUXl4NVFrRkJlVUpzYUVNc1MwRkJTelp4UWl4UlFVRlJNRmNzVTBGSGNFUlBMSFZDUVVORkxFMUJiRVZwUWl4aFFYTkZia0o2WWl4MVFrRkJkVUkxU1N4SFFVTnlRaXhQUVVGUGVtUXNTMEZCUzIxdVFpeE5RVUZMTEZkQlEyWXNUVUZCVFhSYUxFVkJRVThyTUVJc1IwRkJVVGRpTEc5Q1FVRnZRaTl0UWl4TFFVRk5lV1FzUjBGRkwwTXNSMEZCYzBJc2FVSkJRVmhCTEVWQlFYRkNMRU5CUXpsQ0xGRkJRVFJDTEVsQlFXcENOVkFzUlVGQlN6UlFMRWRCUTJRc1RVRkJUU3hKUVVGSlN5eFZRVUZWTEc5Q1FVRnZRa3dzVFVGSE1VTTFVQ3hGUVVGTE5GQXNWVUZqWW5kQ0xFZEJRVzFDTW1wQ0xFbEJZMjVDTEUxQlFVMUZMRWRCUVZNc1dVRkpWRU1zUjBGQldTeERRVU5vUW5nelFpeFBRVUZSTEVkQlExSnZZaXhQUVVGUkxFOUJRMUkxVnl4UFFVRlJMRWxCUlVwcGVrSXNSMEZCWjBJc1EwRkRjRUo2TTBJc1QwRkJVU3hUUVVOU2IySXNUMEZCVVN4VFFVTlNOVmNzVDBGQlVTeHZRa0ZOU210NlFpeEhRVUZ6UWl4VFFVMTBRa01zUjBGQmMwSXNPRU5CU1hSQ1F5eEhRVUZyUWl4WFFVOTRRaXhOUVVGTlF5eFhRVUZyUW5wa0xFZEJRM1JDUXl4WlFVRlpPV2hDTEVWQlFWTXlXaXhIUVVOdVFqSk5MRTFCUVUxMGJVSXNSMEZEVGpsRUxFdEJRVXR4YWtNc1pVRkJNa01zVTBGQk1VSnlha01zUzBGQlN6WnNRaXhUUVVGVFowSXNVVUZCY1VJemFVSXNUMEZCVTJ4RkxFdEJRVXMyYkVJc1UwRkRka1UzYkVJc1MwRkJTelp4UWl4UlFVRlZOM0ZDTEV0QlFVczRjVUlzVjBGQlYzSk9MRWRCUXk5Q2VtUXNTMEZCUzNOcVF5eFRRVUZYTEVkQlEyaENkR3BETEV0QlFVdDFha01zVTBGQlZ5eEhRVU5vUW5acVF5eExRVUZMZDJwRExHTkJRV2RDTEV0QlEzSkNlR3BETEV0QlFVdDVha01zWTBGQlowSXNSVUZEY2tKNFowSXNSMEZCWVZFc1IwRkJSM3BxUWl4TFFVRkxjV3BETEdWQk4wSktMSFZDUVRaQ2EwTXNTVUZCVFhKcVF5eExRVUZMTUdwRExHRkJRemxFTVdwRExFdEJRVXN5YWtNc1ZVRkZURE5xUXl4TFFVRkxNR3BETEZkQlNVbHlXU3h4UWtGRFZDeFBRVUZQTUZnc1IwRkhSVEZxUWl4clFrRkRWQ3hQUVVGUGVXcENMRWRCU1ZSaExGVkJRMFVzVFVGQlRVTXNSVUZCWVRWcVF5eExRVUZMY1dwRExHbENRVUZ0UW5KcVF5eExRVUZMY1dwRExHVkJRV1Z1TDBJc1QwRnNRemRETEZOQmEwTnpSV2t2UWl4SFFVTnNSbFVzUlVGQmRVTXNVMEZCZUVJM2FrTXNTMEZCU3paeFFpeFJRVUZSYkVVc1QwRkJiMEpwWkN4RlFVRmhOV3BETEV0QlFVczJjVUlzVVVGQlVXeEZMRTlCUXpGRmJXUXNSVUZCWVVRc1NVRkJhVUpXTEVkQlFXdENibXBETEV0QlFVc3Jha01zWjBKQlFXdENMRVZCUXpkRkwycERMRXRCUVV0emFrTXNVMEZCVnl4SFFVTm9RblJxUXl4TFFVRkxkV3BETEZOQlFWY3NSMEZEYUVKMmFrTXNTMEZCUzNscVF5eGpRVUZuUW5wcVF5eExRVUZMWjJ0RExHMUNRVU5XTldJc1IwRkJaVFZUTEV0QlFVc3dkRUlzUjBGQmNVSnNha01zUzBGQlN6WnhRaXhSUVVGUk9XRXNVVUZET1VReVNpeExRVUZKTlZZc1NVRkRWaXhOUVVGTmJXZERMRVZCUVdsQ2JHNUNMRWRCUVhWQ2Fsb3NSMEZEZUVOcFRTeEZRVUZUYXpCQ0xFVkJRV2xDTjJJc1IwRkJaVU1zVVVGQlVUUmlMRWRCUVd0Q0xFdEJSWHBGTEVkQlFVbHNNRUlzUlVGQlVTeERRVU5XTEUxQlFVMXRNRUlzUlVGQldXNHdRaXhGUVVGUGJFb3NkMEpCUlhwQ0xFZEJRVWx4T1VJc1JVRkJWVGs0UWl4UFFVRlRPRGhDTEVWQlFWVTNPRUlzVDBGREwwSXNUVUZCVHl4RFFVRkRkV2RDTEVkQlFWbHBZeXhIUVVGak9YcENMRWRCUVZFNVNpeEpRVUZOTmpsQ0xFVkJRVmxITEVkQlNXaEZMRTlCUVU4c1VVRkRUblkyUWl4UlFVRlBlVFpDTEVkQlFWRkJMRWxCUVUxc2QwSXNUVUZCU3l4RFFVRkRReXhGUVVGSFF5eEpRVUZOUkN4RlFVRkZMRWRCUVV0RExFVkJRVVVzUzBGQlNTOVBMRk5CUVZFckswSXNTVUZETVVSdWEwTXNTMEZCUzNOcVF5eFRRVUZUY25WQ0xFdEJRVXRyZGtJc1JVRkJTeXhKUVVWNFFtNXJReXhMUVVGTGRXcERMRk5CUVZOMGRVSXNTMEZCUzJ0MlFpeEZRVUZMTEU5QlNUVkNjR1VzVlVGRFJUbERMRWRCUVdGRExFbEJRVWxzYWtJc1MwRkJTM0ZxUXl4bFFYWkdUaXhwUWtGM1JtaENhbG9zVFVGQlRYSkZMRlZCU1ZJclJTeFhRVUZYY2s0c1IwRlBWQ3hQUVU1QlFTeEZRVUZUTEVsQlFVdHpiRUlzVFVGRFZHNWlMRWRCUVZsSExHdENRVUZyUWk5dVFpeExRVUZMTm14Q0xHRkJRMmhDTEdsQ1FVRlljRWtzUjBGQmRVSkJMRVZCUVZOQkxFVkJRVk1zUzBGRkwwTXhUaXhQUVVGVGRVNHNSMEZCVjBjc1JVRkJUekZPTEZOQlFWZHlTQ3hUUVVGVFF5eG5Ra0ZEZEVRMFZTeEhRVUZuUW5Wc1FpeEhRVUZSY214Q0xFVkJRVkYxYkVJc1NVRkRla0oyYkVJc1JVRkhWSE50UWl4blFrRkRSU3hQUVVGUEwycERMRXRCUVV0eGFrTXNhVUpCUVcxQ2JpOUNMRTlCUVZOc1JTeExRVUZMY1dwRExHVkJRV1Z3TUVJc1dVRkJZMnBRTEV0QlFVdHhha01zWlVGQlpYSXdRaXhWUVVkb1IyY3hRaXh0UWtGRFJTeFBRVUZQYUd0RExFdEJRVXR4YWtNc1pVRkJaVEY1UWl4alFVRm5RbXhMTEV0QlFVdERMRWxCUVVsblF5eFRRVUZUWjBnc1MwRkJTMmxDTEdGQlFXTnFTU3hUUVVGVFF5eG5Ra0ZCWjBKblNTeGpRVWN6UjNsNlFpeHRRa0ZEUlN4UFFVRlBjR3RETEV0QlFVdHhha01zYVVKQlFXMUNiaTlDTEU5QlFWTkJMRTlCUVU5dFowTXNXVUZCWTNKclF5eExRVUZMY1dwRExHVkJRV1Y0T0VJc2QwSkJRWGRDVVN4UFFVY3pSM0U0UWl4WFFVTkZMRTFCUVUweE1FSXNSVUZCV1doUUxFdEJRVXNyYWtNc1owSkJRV3RDTDJwRExFdEJRVXMyY1VJc1VVRkJVWFJtTEU5QlJXaEViMFlzUlVGQlpUTlJMRXRCUVV0bmEwTXNiVUpCUlhCQ1RTeEZRVUZaZEd0RExFdEJRVXMyY1VJc1VVRkJVWFJtTEU5QlFWTnZSaXhGUVVGbE0xRXNTMEZCUzI5clF5eHRRa0ZOTlVRc1IwRktTWEJyUXl4TFFVRkxlV3BETEdkQ1FVRnJRamw1UWl4SFFVTjZRak5STEV0QlFVc3lha01zVlVGSFNETXdRaXhIUVVGaGN6RkNMRVZCUVdwQ0xFTkJRMFVzVFVGQlRYWXdRaXhGUVVGVEwxQXNTMEZCUzNWcVF5eFRRVUZUZG1wRExFdEJRVXQxYWtNc1UwRkJVM2gyUWl4UFFVRlRMRWRCUldoRUwxUXNTMEZCUzNkcVF5eG5Ra0ZCYTBKNmVrSXNSMEZEZWtJdlVDeExRVUZMZFd0RExGVkJRVlY0TUVJc1QwRktia0lzUTBGVlFTeEhRVUZKTDFBc1MwRkJTM2RxUXl4bFFVRnBRbmd3UWl4RlFVRlphRkFzUzBGQlMzTnFReXhUUVVGVExFbEJRVTEwYWtNc1MwRkJTM05xUXl4VFFVRlRMRWRCUVVzc1JVRkxNMFVzVDBGS1FYUnFReXhMUVVGTGQycERMR05CUVdkQ0xGVkJSWEpDZUdwRExFdEJRVXQzYTBNc1UwRkxVQ3hKUVVGTExFbEJRVWs1ZGtJc1JVRkJTVEZWTEV0QlFVdHpha01zVTBGQlUzWjJRaXhQUVVGUlZ5eExRVU5XTVZVc1MwRkJTM2RxUXl4blFrRkJhMEo0YWtNc1MwRkJTM1ZxUXl4VFFVRlROM1ZDTEVsQlFVMHhSaXhIUVVGaGFGQXNTMEZCUzNOcVF5eFRRVUZUTlhWQ0xGVkJRWFZETEVsQlFYcENNVlVzUzBGQlMzTnFReXhUUVVGVE5YVkNMRVZCUVVrc1NVRkJjMEl4Uml4RlFVRlphRkFzUzBGQlMzTnFReXhUUVVGVE5YVkNMRVZCUVVrc1MwRkhMMHN4VlN4TFFVRkxkV3RETEZWQlFWVjJhME1zUzBGQlMzVnFReXhUUVVGVE4zVkNMRXRCUzI1RE5uWkNMRlZCUVZWNE1FSXNSMEZEVWk5UUxFdEJRVXQzYWtNc1kwRkJaMEo2ZWtJc1JVRkZja0l2VUN4TFFVRkxkMnRETEZOQlJVd3NUVUZCVFVNc1JVRkJWWFpDTEVkQlFXOUNNVGhDTEUxQlFVMHNTMEZCUzJ0VUxFdEJRVWtyUXl4SFFVRlpMRWRCUVVkQkxIRkNRVUUwUWpGTkxFOUJRVmt3VFN4WFFVRnJRakZOTEZGQlEzUklNakJDTEVWQlFVOTBZeXhIUVVGbFF5eFJRVUZSYjJNc1JVRkJVWHBpTEV0QlFVc3NTMEZCVFdod1FpeExRVUZMTm5GQ0xGRkJRVkU1WVN4UlFVTndSVEl3UWl4RlFVRkxjbTFDTEZWQlFWVjBSU3hKUVVGSmEzQkNMRWxCUldaNVFpeEZRVUZMY20xQ0xGVkJRVlY0Vnl4VFFXeEtWU3hwUWtGdFNqTkNkV2RDTEVkQlFXVkRMRkZCTVVsakxHMUNRVEJKYzBKeFl5eEZRVUZMTldRc1VVRXpTV3hETEdOQk1rbG5SWHBKTEZWQlFWVjBSU3hKUVVGSmEzQkNMRWxCUlhCSE4yRXNSMEZCWlVrc1VVRkJVV3RqTEVWQmJFcExMSEZDUVd0S05FSjBMMElzVTBGQlVYVXZRaXhKUVVjNVJIWmpMRWRCUVdWTkxFdEJRVXRwWXl4RlFVRlhMQ3RDUVVGcFJIWXZRaXhUUVVGUkt5dENMRWRCUVZGQkxFVkJRVXM1YkVJc1ZVRkJWWFJGTEVsQlFVbHJjRUlzVFVGRmJrZzNZU3hIUVVGbFRTeExRVUZMYVdNc1JVRnlTa1FzWVVGeFNtZERkaTlDTEZOQlFWRjNMMElzU1VGRGVrUjRZeXhIUVVGbFJTeFRRVUZUYzJNc1JVRjJTbEFzWVVGMVNtOURlQzlDTEZOQlFWRXJLMElzUjBGQlVVRXNSVUZCU3psc1FpeFZRVUZWZEVVc1NVRkJTV3R3UWl4WlFVczVSbWhuUWl4SFFVRmhhMElzVVVGQlVXNXJRaXhMUVVGTGNXcERMR1ZCYmt0UUxIZENRVzFMZFVNc1EwRkRlRVF4WjBJc1kwRkJaVFZUTEVsQlNXNUNlVEJDTEZOQlEwVndZeXhIUVVGbE5WTXNTMEZCU3pCMFFpeEhRVUZ4UW14cVF5eExRVUZMTm5GQ0xGRkJRVkU1WVN4UlFVRlJja2NzVVVGQlQzcEdMRWRCUVZGQkxFVkJRVXR2WVN4VlFVRlZlRmNzVTBGQlUyODNRaXhOUVVGelFqYzVRaXhUUVVGUmJrSXNSMEZCVVVFc1JVRkJTMjloTEZWQlFWVnZTQ3hQUVVGUGQyUXNUVUZKYmtzMVl5eDFRa0ZCZFVJMVNTeEhRVU55UWl4UFFVRlBlbVFzUzBGQlMyMXVRaXhOUVVGTExGZEJRMllzVFVGQlRYUmFMRVZCUVU5MU1VSXNSMEZCVlhKakxHOUNRVUZ2UWk5dFFpeExRVUZOZVdRc1IwRkZha1FzUjBGQmMwSXNhVUpCUVZoQkxFVkJRVmdzUTBGSlFTeFJRVUUwUWl4SlFVRnFRalZRTEVWQlFVczBVQ3hIUVVOa0xFMUJRVTBzU1VGQlNVc3NWVUZCVlN4dlFrRkJiMEpNTEUxQlJ6RkROVkFzUlVGQlN6UlFMRlZCV1ZoM1JpeEhRVUZoVVN4SFFVRkhkbVlzVDBGdVRWa3NPRUpCYlUxcFFpeExRVU16UTJ0clFpeEhRVUZsTlZNc1MwRnFUVk1zTUVKQmFVMWxjRkVzVTBGQlVYa3ZRaXhIUVVGUExFbEJRVWw2UWl4SFFVRlZlVUlzVVVGVGRFVTFiRUlzUjBGQmJVSnRhMElzU1VGamJrSXNUVUZWVFRCQ0xFZEJRVzlDTEZOQlEzQkNReXhIUVVGdlFpeFBRVU53UWtNc1IwRkJiMElzVDBGSGNFSkRMRWRCUVd0Q0xGVkJRMnhDUXl4SFFVRnhRaXgzUWtGVk0wSXNUVUZCVFVNc1YwRkJXWGhtTEVkQlJVeDBSeXhyUWtGRFZDeE5RVGRDVnl4TlFXbERZakJSTEU5QlEwVXNSMEZCU1M5MlFpeExRVUZMTm14Q0xGTkJRVk42WkN4WlFVRmpjRWtzUzBGQlN6WnNRaXhUUVVGVGVtUXNWMEZCVjJsV0xGZEJRV0ZqTEV0QlFVdERMR05CUVdkQ2NHVXNTMEZCU3pac1FpeFRRVUZUZUVnc1ZVRkJWWGhYTEZOQlFWTnBPVUlzU1VGRE1VZ3NUMEZIUml4SlFVRkpibU1zUlVGRFNpeE5RVUZOTlZrc1JVRkJVMmxPTEVkQlFYVkNhR1FzUzBGQlN6WnNRaXhWUVVWeVEzVm1MRVZCUVdOd2JFTXNTMEZCU3pac1FpeFRRVUZUYVVJc1VVRXpRazRzY1VKQk5rSTFRaXhIUVVGSmMyVXNSVUZCWVN4RFFVTm1MRTFCUVUxRExFVkJRWGRETEU5QlFYcENSQ3hGUVVGWmNtaERMRlZCUVRoRExFOUJRWHBDY1doRExFVkJRVmx5YUVNc1UwRkJiMEp0YUVNc1IwRkJjVUpFTEVkQlF6TkhkR01zUlVGQlYxQXNSMEZCWlRWVExFdEJRVXMyZGtJc1JVRkJZMFFzUjBGRE4wTjZZeXhGUVVGWFFTeEZRVUZUUVN4RlFVRlROVlVzVDBGQlV5eEhRVWQ0UXl4TlFVRk5kWGhDTEVWQlFWa3pZeXhGUVVGWE1VWXNSMEZCWVd0Q0xGRkJRVkYzUlN4RlFUZERha01zWTBFMlEzbEVMRU5CUTNoRmFFY3NZMEZCWlROcFFpeExRVUZMTm14Q0xGZEJRMnBDTEV0QlMwd3NSMEZLYTBJMVF5eEhRVUZoYTBJc1VVRkJVVzVyUWl4TFFVRkxObXhDTEZOQk9VTXpRaXhqUVRoRGJVUXNRMEZEYkVWc1JDeGpRVUZsWjBjc1NVRkhTRzVGTEd0Q1FVRnJReXhQUVVGa09HZENMRWRCUVhOQ1FTeEZRVUZWT1dkQ0xHbENRVU5vUlN4UFFVZEdlR3RDTEV0QlFVdDFhME1zVlVGQlZYWnJReXhMUVVGTE5teENMRk5CUVZWMVppeEhRVVU1UWl4TlFVRk5SeXhGUVVGWExFdEJRMlowYVVJc1IwRkJZV3RDTEZGQlFWRjNSU3hGUVRGRVNpeG5Ra0V3UkRoQ0xFTkJRemREYUVjc1kwRkJaVE5wUWl4TFFVRkxObXhDTEZkQlJYUkNOVU1zUjBGQllXdENMRkZCUVZGdWEwSXNTMEZCU3pac1FpeFRRVE5FVml4bFFUSkViVU1zUTBGRGFrUnNSQ3hqUVVGbFowY3NTMEZKWmpWWkxFVkJRMFl2VUN4TFFVRkxkV3RETEZWQlFWVjRNRUlzUlVGQlVVRXNSVUZCVHpOSUxGZEJRVmx0T1VJc1IwRkZNVU5CTEVsQlMwcG9RaXhWUVVGVmVtZERMRVZCUVZOdmMwSXNSVUZCVnk5UkxFZEJRelZDTEUxQlEwMXhiVUlzU1VGRWFVSjBWaXhIUVVGeFF5eFBRVUYyUWtFc1JVRkJWVzV6UWl4VlFVRTBReXhQUVVGMlFtMXpRaXhGUVVGVmJuTkNMRk5CUVRCRmNXdENMRWRCUVdWRkxGTkJRVk0wU0N4RlFVRlhLMVVzU1VGQmVFWTNZeXhIUVVGbE5WTXNTMEZCU3pCMlFpeEhRVUZ2UW1oV0xFbEJRemRITEVkQlEzaENkVllzUlVGQmEwSjBiVUlzUjBGQldYRnRRaXhIUVVGVlFTeEZRVUZQYm01Q0xGVkJRVlY0Vnl4VFFVRlRhemxDTEVsQlJXeEZVU3hGUVVGWExFbEJRVTEyYkVNc1MwRkJTekJzUXl4dlFrRkJiMEkxYUVNc1JVRkJVekJvUXl4RlFVRlJjbTFDTEVkQlJUZEVjVzFDTEVkQlFWVkRMRWRCUTFwRUxFVkJRVTl1YmtJc1ZVRkJWVzlJTEU5QlFVOTFaaXhKUVVWNFFtaHNReXhMUVVGTGJXMUNMR1ZCUVdWdlppeEZRVUZWZW1oRExFZEJRVk1zU1VGRmRrTjVhRU1zU1VGSlNrY3NiMEpCUVc5Q05XaERMRVZCUVZNd2FFTXNSVUZCVVhKdFFpeEhRVU51UXl4SFFVRkpjVzFDTEVWQlFWRXNRMEZEVmtFc1JVRkJUMjV1UWl4VlFVRlZiMGdzVDBGQlQzRm1MRWxCUTNoQ0xFMUJRVTFoTEVWQlFXZENkbVFzUjBGQlpVTXNVVUV2UlVvc2EwTkJLMFUwUTIxa0xFVkJRVTl3T1VJc1dVRkZhRVoxT1VJc1IwRkRSa0VzUlVGQlkzUnVRaXhWUVVGVmIwZ3NUMEZCVDNGbUxFbEJSMGNzVVVGQmFFTlZMRVZCUVU4NWIwSXNZVUZCWVN4VFFVTjBRamh2UWl4RlFVRlBPUzlDTEdGQlFXRXNhVUpCUVdsQ0xFZEJTWHBETlVJc1JVRkJVWFZoTEZWQlFWVjBSU3hKUVVGSkszRkNMRWxCUldVc1VVRkJha05vYUVNc1JVRkJVVFJaTEdGQlFXRXNVMEZEZGtJMVdTeEZRVUZSTkVJc1lVRkJZU3hwUWtGQmFVSXNSMEZIZUVOcFdpeEhRVUZQTjJFc1IwRkZTRUVzUlVGQlVYVmhMRlZCUVZWNFZ5eFRRVUZUYXpsQ0xFdEJRemRDYW1oRExFVkJRVkYxWVN4VlFVRlZkRVVzU1VGQlNXbHlRaXhKUVVkNFFpeEpRVUZKYkRsQ0xFVkJRVk5vUlN4RlFVRlJjMFVzVjBGTmNrSXNSMEZLU1U0c1IwRkJPRUlzVDBGQmNFSkJMRVZCUVU4dlJDeFhRVU51UWl0RUxFVkJRVk5CTEVWQlFVOU5MRmxCUjJST0xFZEJRVlZCTEVWQlFVOTFWeXhWUVVGVmVGY3NVMEYwU0VZc2FVSkJjMGh6UXl4RFFVTnFSU3hOUVVGTkt6bENMRVZCUVd0Q09XaERMRVZCUVZGbmFrSXNVVUZ1U0Zvc1lVRnhTR2hDT0dVc1IwRkRSbmhrTEVkQlFXVTFVeXhMUVdwSVZTeHRRa0ZwU0hGQ2IzZENMRWRCUVdsQ2VHZERMRk5CUVZGNVowTXNSMEZCV1VFc1JVRkJVM2h1UWl4VlFVRlZkRVVzU1VGQlNTdHhRaXhOUVVjMVIyaG9ReXhGUVVGUk5FSXNZVUZCWVN4cFFrRkJhVUlzUjBGSGNFTjVXaXhIUVVOR1FTeEpRVXRLYTBnc2RVSkJRWFZDTlVrc1IwRkRja0lzVDBGQlQzcGtMRXRCUVV0dGJrSXNUVUZCU3l4WFFVTm1MRTFCUVUxMFdpeEZRVUZQY3pOQ0xFZEJRVWx3WlN4dlFrRkJiMEl2YlVJc1RVRkZja01zUjBGQmMwSXNhVUpCUVZoNVpDeEZRVUZ4UWl4RFFVTTVRaXhSUVVFMFFpeEpRVUZxUWpWUUxFVkJRVXMwVUN4SFFVTmtMRTFCUVUwc1NVRkJTVXNzVlVGQlZTeHZRa0ZCYjBKTUxFMUJSekZETlZBc1JVRkJTelJRTEZWQllXSjNSaXhIUVVGaFVTeEhRVUZITDJFc1UwRTNTbUVzZDBKQlUwRXNORVZCYjBwNVF5eFRRVUZWYzFvc1IwRkRNVVVzUTBGQlF5eEpRVUZMTEZGQlFWRndSaXhUUVVGVE5XTXNTMEZCU3padFFpeFZRVU01UWpkRkxFVkJRVTFwUkN4cFFrRkhTaTlITEVkQlFWZHNaU3hQUVVsR2JXeERMRWRCUVVsd1pTeHZRa0ZCYjBJdmJVSXNUVUZEYUVNcmRrSXNWVUZUVURsUkxFZEJRVzFDYTIxQ0xFbEJZMjVDTEUxQlFVMDViRUlzUjBGQlR5eFJRVmxRZVcxQ0xFZEJRV3RDTEU5QlJXeENReXhIUVVGclFpeFBRVU5zUWtNc1IwRkJjVUlzVlVGRGNrSjRWQ3hIUVVGakxFTkJRMnhDWjBvc1ZVRkJWeXhWUVVOWWVVc3NVMEZCVlN4VlFVTldkRXNzVFVGQlR5eFZRVVZJZEZFc1IwRkJWU3hEUVVOa2JWRXNWMEZCVnl4RlFVTlllVXNzVlVGQlZTeEZRVU5XZEVzc1RVRkJUeXhMUVZGVUxFMUJRVTExU3l4WFFVRmpkbWRDTEVkQlEyeENReXhaUVVGWk9XaENMRVZCUVZNeVdpeEhRVU51UWpKTkxFMUJRVTEwYlVJc1IwRkRUamxFTEV0QlFVczJjVUlzVVVGQlZUZHhRaXhMUVVGTE9IRkNMRmRCUVZkeVRpeEhRVU12UW5wa0xFdEJRVXR4TDBJc1UwRkJWeXhMUVVOb1FuSXZRaXhMUVVGTGJXMURMSE5DUVVGMVFpeEZRVU0xUW01dFF5eExRVUZMYjIxRExIbENRVUV3UWl4RlFVVXZRbkJ0UXl4TFFVRkxlUzlDTEdkQ1FVbEphazRzZVVKQlExUXNUMEZCVDBFc1IwRkhSVzVJTEhGQ1FVTlVMRTlCUVU5QkxFZEJSMFZvVFN4clFrRkRWQ3hQUVVGUFFTeEhRVWxVTUZFc1QwRkRiMEk1VFN4SFFVRmhhMElzVVVGQlVXNXJRaXhMUVVGTE5teENMRk5CYWtRM1FpeHBRa0Z0UkVSeVFpeHRRa0ZKWkhoclFpeExRVUZMY1cxRExHZENRVVZFY20xRExFdEJRVXMyY1VJc1VVRkJVVEpSTEZkQlEyWjROMElzUzBGQlN6WnNRaXhUUVVGVGVFZ3NWVUZCVlhSRkxFbEJlRVJPTEZGQmJVVndRaTlhTEV0QlFVczJiRUlzVTBGQlUzaElMRlZCUVZWdlNDeFBRVUZQY1dkQ0xFbEJSeTlDYm01Q0xFZEJRVTh6WlN4TFFVRkxObXhDTEZWQlJWbzNiRUlzUzBGQlN6WnNRaXhUUVVGVGVFZ3NWVUZCVlhSRkxFbEJRVWxuYzBJc1NVRkZOVUl2YkVNc1MwRkJTelpzUWl4VFFVRlRlRWdzVlVGQlZYUkZMRWxCUVVscGMwSXNTVUZGTlVKb2JVTXNTMEZCUzIxdFFpeG5Ra0ZxUWxrc1MwRkRabTV0UWl4TFFVRkxObXhDTEZOQlFWTjRTQ3hWUVVGVmIwZ3NUMEZCVDNWblFpeEpRVVV2UWk5cFFpeEhRVUZoYTBJc1VVRkJVVzVyUWl4TFFVRkxObXhDTEZOQkwwUmFMR3RDUVdsRlpEZHNRaXhMUVVGTGMyMURMSFZDUVZsMVFuUnRReXhMUVVGTE5teENMRk5CUVZVM2JFSXNTMEZCU3paeFFpeFJRVUZSTWxFc1dVRkhOVVF4VEN4UFFVTlBPWFpDTEV0QlFVczJiRUlzVTBGQlUzaElMRlZCUVZWNFZ5eFRRVUZUYXl0Q0xFMUJTWEJDT1dsQ0xFZEJRV0ZyUWl4UlFVRlJibXRDTEV0QlFVczJiRUlzVTBGNFJqZENMR2xDUVRCR1JISkNMRzFDUVdWa2VHdENMRXRCUVVzMmJFSXNVMEZCVTNoSUxGVkJRVlYwUlN4SlFVRkphWE5DTEVsQlJUVkNhRzFETEV0QlFVdHRiVUlzWjBKQllsa3NTMEZEWm01dFFpeExRVUZMTm14Q0xGTkJRVk40U0N4VlFVRlZkRVVzU1VGQlNTdHlRaXhKUVVjMVFqbHNReXhMUVVGTE5teENMRk5CUVZONFNDeFZRVUZWYjBnc1QwRkJUM1ZuUWl4SlFVVXZRbWh0UXl4TFFVRkxObXhDTEZOQlFWTjRTQ3hWUVVGVmIwZ3NUMEZCVDNOblFpeEpRVVV2UWpscFFpeEhRVUZoYTBJc1VVRkJVVzVyUWl4TFFVRkxObXhDTEZOQmNrZFlMSEZDUVRCSFlUZHNRaXhMUVVGTE5teENMRk5CUVZVM2JFSXNTMEZCU3paeFFpeFJRVUZSTWxFc1lVRkhOVVI2Vml4VlFVTkZMMnhDTEV0QlFVdHhiVU1zWjBKQlJVUnliVU1zUzBGQlN6WnNRaXhUUVVGVGVFZ3NWVUZCVlhoWExGTkJRVk5ySzBJc1MwRkRia012YkVNc1MwRkJTelpzUWl4VFFVRlRlRWdzVlVGQlZXOUlMRTlCUVU5elowSXNTVUZIYWtNellpeE5RVUZOY2tVc1ZVRkpVaXRGTEZkQlFWZHlUaXhIUVUxVUxFOUJURUZCTEVWQlFWTXNTVUZCU3pST0xFMUJRMVI2UkN4SFFVRlpSeXhyUWtGQmEwSXZia0lzUzBGQlN6WnNRaXhoUVVOb1FpeHBRa0ZCV0hCSkxFZEJRWFZDUVN4RlFVRlRRU3hGUVVGVExFbEJSWFJFUml4SFFVRm5RamhDTEVkQlFVMDFRaXhGUVVGUmVtUXNTMEZCU3pSc1FpeFpRVUZaTkUwc1lVRkRlRU12VlN4RlFVZFVObTlDTEhGQ1FVTlBkRzFETEV0QlFVczJjVUlzVVVGQlVXOWlMRmRCU1dScWJVTXNTMEZCUzIxdFF5eHpRa0ZCZDBKdWJVTXNTMEZCUzI5dFF5d3dRa0ZKZEVOd2JVTXNTMEZCUzNFdlFpeFRRVUZYTldVc1dVRkJWeXhMUVVONlFucG5RaXhMUVVGTE9IWkNMRk5CUTBvNWRrSXNTMEZCU3paeFFpeFJRVUZST0ZFc1UwRkhiRUkwU3l4bFFVRmxkbXRDTEVWQlFVOTNhMElzUjBGRGNFSXNUMEZCVVhoclFpeEZRVUZOYlVJc1RVRkRXaXhKUVVGTExGbEJRMHdzU1VGQlN5eFhRVU5JYm1wQ0xFdEJRVXR0YlVNc2NVSkJRWFZDU3l4RlFVTTFRaXhOUVVWR0xFbEJRVXNzVlVGRFRDeEpRVUZMTEZkQlEwaDRiVU1zUzBGQlMyOXRReXgzUWtGQk1FSkpMRVZCU1c1RExFZEJRVWxCTEVWQlIwWXNXVUZHUVhodFF5eExRVUZMY1cxRExHZENRVXRRTEUxQlFVMTZXU3hGUVVGak5Vd3NSVUZCVFZjc1kwRkZkRUl6YVVJc1MwRkJTelpzUWl4WFFVRmhLMGdzUjBGQlpUVjBRaXhMUVVGTE5teENMRk5CUVZOb1pTeFRRVUZUSzJ4Q0xFbEJTVFZFTlhSQ0xFdEJRVXR6YlVNc2NVSkJSMUEzUnl4blFrRkRSWGhqTEVkQlFXRlJMRWRCUVVkNmFrSXNTMEZCU3pac1FpeFRRV3BNUkN4elFrRnBURFJDTjBRc1IwRkJVMmhwUWl4TFFVRkxkVzFETEdWQlFXVjJhMElzUjBGQlR5eExRVU53Um1sQ0xFZEJRV0ZSTEVkQlFVZDZha0lzUzBGQlN6WnNRaXhUUVdwTVJpeHhRa0ZwVERSQ04wUXNSMEZCVTJocFFpeExRVUZMZFcxRExHVkJRV1YyYTBJc1IwRkJUeXhMUVVOdVJtbENMRWRCUVdGUkxFZEJRVWQ2YWtJc1MwRkJTelpzUWl4VFFXcE1TQ3h2UWtGcFREUkNOMFFzUjBGQlUyaHBRaXhMUVVGTGRXMURMR1ZCUVdWMmEwSXNSMEZCVHl4TFFVTnNSbWxDTEVkQlFXRlJMRWRCUVVkNmFrSXNTMEZCU3pac1FpeFRRV3BNUml4eFFrRnBURFJDTjBRc1IwRkJVMmhwUWl4TFFVRkxkVzFETEdWQlFXVjJhMElzUjBGQlR5eExRVWR5Um5GclFpeG5Ra0ZEUlRGYUxHRkJRV0V6YzBJc1MwRkJTM0V2UWl4VlFVTnNRbkl2UWl4TFFVRkxjUzlDTEZOQlFWY3NTMEZKYkVKb1dpeDFRa0ZCZFVJMVNTeEhRVU55UWl4UFFVRlBlbVFzUzBGQlMyMXVRaXhOUVVGTExGZEJRMllzVFVGQlRYUmFMRVZCUVU5eE5FSXNSMEZCVFc1bUxHOUNRVUZ2UWk5dFFpeExRVUZOZVdRc1IwRkZOME1zUjBGQmMwSXNhVUpCUVZoQkxFVkJRWEZDTEVOQlF6bENMRkZCUVRSQ0xFbEJRV3BDTlZBc1JVRkJTelJRTEVkQlEyUXNUVUZCVFN4SlFVRkpTeXhWUVVGVkxHOUNRVUZ2UWt3c1RVRkhNVU0xVUN4RlFVRkxORkFzUjBGQlVYcGtMRmRCVDNKQ2VXMUNMRWRCUVhGQ2VXWXNTVUZSY2tKcWJrSXNSMEZCYlVKcGJrSXNTVU12TTBwdVFpeHhRa0ZMU1N4aFFVTkpiRzFETEV0QlFVdHpiMElzVTBGQlZ5eEhRVGhUZUVJc1QwRjRVMGtzV1VGQlFXMWxMR2RDUVVGQkxGTkJRV2RDUXl4RlFVRnRRbXh0UWl4SFFVVXZRbmhuUWl4TFFVRkxPRVFzVVVGQlVYZExMR2xDUVVGcFFtODBRaXhGUVVGWGJHMUNMRWxCUnpkRExITkNRVUZKTEc5Q1FVRkxMRXRCU1ZRc1YwRkRTU3hQUVVGUGVHZENMRXRCUVVzNFJDeFJRVUZSTkROQ0xGZEJUSGhDTEZOQlFWVnNWU3hIUVVOT2VHNUNMRXRCUVVzNFJDeFJRVUZSTkROQ0xFMUJRVkZzVlN4dFEwRlRla0lzYzBKQlFVa3NOa0pCUVdNc1MwRkJiRUlzVjBGRFNTeFBRVUZQZUc1Q0xFdEJRVXN5YlVNc2NVSkJSMmhDTEZOQlFXMUNNWFJDTEVkQlEyWnFXaXhMUVVGTE1tMURMR2RDUVVGclFqRjBRaXh0UTBGSk0wSXNjMEpCUVVrc2VVSkJRVlVzUzBGQlpDeFhRVU5KTEU5QlFVOXFXaXhMUVVGTE5HMURMR2xDUVVkb1FpeFRRVUZsTTNSQ0xFZEJRMWhxV2l4TFFVRkxORzFETEZsQlFXTXpkRUlzYlVOQlIzWkNMSE5DUVVGSkxHOUNRVUZMTEV0QlFWUXNWMEZEU1N4UFFVRlBhbG9zUzBGQlN6aEVMRkZCUVZGMVFpeE5RVUZOSzBJc1YwRkZPVUlzVTBGQlZVRXNSMEZEVG5CSUxFdEJRVXM0UkN4UlFVRlJkVUlzVFVGQlRTdENMRTFCUVZGQkxHMURRVWN2UWl4elFrRkJTU3h6UWtGQlR5eExRVUZZTEZkQlJVa3NUMEZCSzBJc1NVRkJlRUp3U0N4TFFVRkxPRVFzVVVGQlVUQnVRaXhaUVVWNFFpeFRRVUZaYUVVc1IwRkZVbmh1UWl4TFFVRkxPRVFzVVVGQlVUQnVRaXhSUVVGcFFpeEpRVUZTYUVVc2JVTkJTVEZDTEZsQlFVRnhaaXhQUVVGQkxGTkJRVTlETEVkQlEwZ3NUMEZCVHpsdFF5eExRVUZMT0VRc1VVRkJVWFZDTEUxQlFVMTVhRU1zU1VGSE9VSXNXVUZCUVVNc1QwRkJRU3hUUVVGUFF5eEZRVUZYTDNSQ0xFZEJSV1JxV2l4TFFVRkxPRVFzVVVGQlVYVkNMRTFCUVUweWFFTXNSMEZCU3k5MFFpeEhRVWMxUWl4elFrRkJTU3hyUWtGQlJ5eExRVUZRTEZOQlFWRTFVQ3hIUVVGU0xGZEJRM1ZDTEdsQ1FVRlNRU3hIUVVFMFFpeFBRVUZTUVN4SlFVRjVReXhKUVVGNlFuSktMRXRCUVV0cGJrTXNWMEZCVnpVNVFpeEpRVU5vUkRsSUxFOUJRVTh5UkN4TFFVRkxiVVVzUjBGRGJFSnFSU3hUUVVGUkxGTkJRVU0wYUVNc1IwRkRWaXhGUVVGTGJHcERMRkZCUVZGMVFpeE5RVUZOTW1oRExFZEJRVXN6T1VJc1JVRkJTVEk1UWl4MVEwRlRlRU1zV1VGQlFVVXNUVUZCUVN4VFFVRk5RU3hIUVVOR0xFbEJRVWxETEVWQlFWRnVia01zUzBGRFdtdHVReXhGUVVGTk9XaERMRk5CUVZFc1UwRkJRMmswUWl4SFFVRk5MRTlCUVVFNFNpeEZRVUZOZG14RExFdEJRVXQ1TjBJc1JVRkJSV2c0UWl4SlFVRkxaemhDTEVWQlFVVnVOMElzVjBGVE4wTXNXVUZCUVU0c1MwRkJRU3hUUVVGTFVDeEZRVUZoWVN4SFFVZGtMRTlCUkVGc1F5eExRVUZMT0VRc1VVRkJVVFJDTEdGQlFXRnlSU3hGUVVGTFlTeEhRVU40UW14RExFdEJRVXM0UkN4VFFVZG9RaXhaUVVGQmMycERMRkZCUVVFc1UwRkJVUzlzUXl4SFFVTktMRTlCUVU5eVFpeExRVUZMT0VRc1VVRkJVVFJaTEdGQlFXRnlZaXhKUVU5eVF5eFpRVUZCWjIxRExHRkJRVUVzVTBGQllUVnhRaXhIUVVOVUxFOUJRVTk2WXl4TFFVRkxPRVFzVVVGQlVXdG1MR2xDUVVGcFFuWkhMRWxCUjNwRExGbEJRVUUyY1VJc1UwRkJRU3hUUVVGVFF5eEhRVU5NTEU5QlFVODNLMElzVTBGQlUyMDBRaXhsUVVGbE1FY3NTVUZIYmtNc1dVRkJRVU1zWTBGQlFTeFRRVUZqZG1Vc1IwRkRSMEVzUlVGQlIzZGxMR05CUTFSRExGbEJRVmw2WlN4SlFVZDJRaXhaUVVGQk1HVXNVMEZCUVN4VFFVRlRReXhUUVVORWNHaERMRVZCUVZGdmFFTXNSVUZCVTNCb1F5eE5RVUZOTEV0QlJ6TkNMRTlCUkVFc1JVRkJRWGhITEV0QlFVczRSQ3hSUVVGUmRXRXNWMEZCVlhSRkxFbEJRVWNzVVVGQlNYWlVMRWRCUTNaQ2VFY3NUVUZIV0N4WlFVRkJObTVETEZsQlFVRXNVMEZCV1VRc1IwRkZVaXhQUVVSQk5XNURMRXRCUVVzNFJDeFJRVUZSZFdFc1ZVRkJWVzlJTEU5QlFVOXRhVUlzUjBGRGRrSTFia01zVFVGSFdDeFpRVUZCT0c1RExGTkJRVUVzVTBGQlUwWXNSMEZEVEN4UFFVRlBOVzVETEV0QlFVczRSQ3hSUVVGUmRXRXNWVUZCVlhoWExGTkJRVk1yTDBJc1NVRkhNME1zV1VGQlFVY3NWMEZCUVN4VFFVRlhReXhIUVVGWUxGZEJRMGtzV1VGRGJVVXZiVU1zU1VGRU5VUXJiVU1zUlVGQlYzaG9ReXhOUVVGTkxFdEJRMjVDWjFBc1RVRkJTeXhUUVVGRGJFOHNSMEZCVFN4UFFVRjFReXhKUVVGMlF5eEZRVUZMZUVRc1VVRkJVWFZoTEZWQlFWVjRWeXhUUVVGVFVDeFBRVWR5UkN4WlFVRkJNbWRETEZGQlFVRXNVMEZCVVVNc1IwRkZTaXhQUVVSQmJHOURMRXRCUVVzNFJDeFJRVUZSTkRsQ0xGbEJRV04zUnl4RlFVTndRbXh2UXl4TlFVZFlMRmxCUVVGdGIwTXNVVUZCUVN4WFFVTkpMRTlCUVU5dWIwTXNTMEZCU3poRUxGRkJRVkUwT1VJc1lVRlBlRUlzV1VGQlFYcE1MRTlCUVVFc1UwRkJUekZITEVWQlFYVkNObGtzUjBGUE1VSXNXVUZRTUVJc1NVRkJRVUVzU1VGQlFVRXNSMEZCUVN4SFFVVjBRa0VzUjBGRFFYQnZReXhMUVVGTGMyOUNMRk5CUVZOeVZDeExRVUZMYzJFc1IwRkhka0oyZGtJc1MwRkJTemhFTEZGQlFWRjFhME1zV1VGQldUbFpMRVZCUVV0NmNrSXNVMEZEZGtJNVJDeE5RVWRZTEZsQlFVRXllVUlzVFVGQlFTeFhRVU5KTTNsQ0xFdEJRVXM0UkN4UlFVRlJOblZDTEZOQlIycENMRmxCUVVGelZTeFhRVUZCTEZOQlFWZDBiRU1zUjBGRFVDeFBRVUZ0UXl4SlFVRTFRa29zVDBGQlR6SkVMRXRCUVV0MlJDeEhRVUZMYjFNc1VVRkhOVUlzYzBKQlFVa3NhVUpCUVVVc1MwRkJUaXhYUVVOSkxFOUJRVTh2VkN4TFFVRkxiMjVETEZGQlFWRXNWMEZIZUVJc1UwRkJUMjUxUWl4SFFVTklhbG9zUzBGQlN6UkNMRXRCUVVzc1MwRkJUWEZZTEc5RFFVZHdRaXhaUVVGQmNYWkNMRTFCUVVFc1YwRkZTU3hKUVVGSlF5eEZRVUZKTEVsQlFVbERMRVZCUlZKc2FFTXNSVUZCU1hSSUxFdEJRVXM0UkN4UlFVRlJNbXRETEZsQlRYSkNMRWRCVEVsdWFFTXNZVUZCWVRkRExHTkJRMkk0YWtNc1JVRkJSWHByUXl4UlFVRlZkMFFzUjBGSlduUklMRXRCUVV0emIwSXNVMEZCVTNaVkxFOUJRVk1zUlVGQlJ5eERRVU14UWl4SlFVRkpia1VzUlVGQlR6VlFMRXRCUVV0emIwSXNVMEZCVXpWUExFdEJRVWtzVTBGQlExUXNSMEZETVVJc1NVRkJTWGwyUWl4RlFVRkxlblpDTEVWQlFVVnhka0lzVVVGRldDeFBRVVJCUXl4RlFVRkZlbXRETEZGQlFWRnRlVUlzVDBGQlQzbFRMRVZCUVVjMWEwTXNVMEZEWWpSclF5eExRVVZZU0N4RlFVRkZhbWRDTEZOQlFWY3hXU3hGUVVkcVFpeFBRVUZQTWpSQ0xFZEJVVmdzV1VGQlFVa3NVVUZCUVN4VFFVRlJhRzVETEVkQlEwb3NUMEZCUzBFc1JVRkRSVW9zVDBGQlQybEZMRTlCUVU5cVJTeFBRVUZQY1c1RExFOUJRVTl5YmtNc1QwRkJUM051UXl4bFFVRmxiRzVETEVsQlFVOUJMRWRCUkM5RFFTeEhRVWx5UWl4WlFVRkJiVzVETEdOQlFVRXNWMEZEU1N4UFFVRlBPVzlETEV0QlFVczRSQ3hSUVVGUmQydENMRlZCUjNoQ0xGbEJRVUVyWml4WlFVRkJMRk5CUVZsd2EwTXNSMEZEVW1wRkxFdEJRVXM0UkN4UlFVRlJkV3RETEZsQlFWbHdhME1zU1VGSE4wSXNXVUZCUVhWc1FpeExRVUZCTEZOQlFVdDFaaXhGUVVGclFrTXNSMEZIYmtJc1NVRkJTVllzUlVGQlVWTXNSVUZCVVU0c1dVRkZjRUlzUjBGQlNVOHNZVUZCYVVKNmEwTXNVVUZCVXl4RFFVTXhRaXhKUVVGSmRVUXNSVUZCVTJ0b1F5eEZRVUZOZGtJc1kwRkRia0poTEVWQlFVMUVMRmxCUVZsWExFZEJRMnhDYkdoRExFVkJRVTkxWjBNc1dVRkJXVU1zVDBGRmJFSXNRMEZEUkN4SFFVRkpWU3hGUVVGTmFqRkNMRkZCUVZVc1JVRkJSeXhQUVVOdVFtcE5MRVZCUVZOcmFFTXNSVUZCVFN4SFFVRkhka0lzWTBGRmRFSXNTVUZHUVN4SlFVVlRkRzVETEVWQlFWRXNSVUZCUjBFc1JVRkJVVFp2UXl4RlFVRk5hakZDTEU5QlFWRTFWQ3hKUVVGVExFTkJReTlETEVsQlFVMHlSQ3hGUVVGVmEyeERMRVZCUVUwM2IwTXNSMEZEZEVKdGIwTXNSVUZCVFVRc1dVRkJXWFpyUXl4SFFVZDBRbWRGTEVWQlFVOTFaME1zV1VGQldVTXNTMEZKTTBJc1dVRkJRVmNzWjBKQlFVRXNVMEZCWjBKb2JFTXNSVUZCWldsc1F5eEhRVk4wUWtFc1NVRkJaMEpzY0VNc1MwRkJTMmx1UXl4WFFVRlhhVU1zUzBGRmFrTkJMRVZCUVdGRExGZEJRMkpzYkVNc1JVRkJTM0ZMTEdsQ1FVRnBRaXhaUVVGaE5EWkNMRVZCUVdGRExGZEJSMmhFUkN4RlFVRmhSU3hYUVVOaWJteERMRVZCUVV0eFN5eHBRa0ZCYVVJc1dVRkJZVFEyUWl4RlFVRmhSU3hYUVVkb1JFWXNSVUZCWVVjc1YwRkRZbkJzUXl4RlFVRkxjVXNzYVVKQlFXbENMRmxCUVdFME5rSXNSVUZCWVVjc1YwRkhhRVJJTEVWQlFXRkpMRlZCUTJKeWJFTXNSVUZCUzNGTExHbENRVUZwUWl4WFFVRlpORFpDTEVWQlFXRkpMRlZCUnk5RFNpeEZRVUZoU3l4VFFVTmlkR3hETEVWQlFVdHhTeXhwUWtGQmFVSXNWVUZCVnpRMlFpeEZRVUZoU3l4VFFVYzVRMHdzUlVGQllVMHNUVUZEWW5ac1F5eEZRVUZMY1Vzc2FVSkJRV2xDTEU5QlFWRTBOa0lzUlVGQllVMHNVVUZMYmtRc1dVRkJRV3BvUWl4UlFVRkJMRk5CUVZGblNDeEZRVUZsTjJ4Q0xFZEJRMjVDTEZOQlFVazJiRUlzUjBGQk1FSXNTVUZCYkVKQkxFVkJRVXRzVXl4aFFVTlVNMVFzUjBGRFR6WnNRaXhGUVVGTGFFZ3NVVUZCVVRkbExFdEJUMmhETEZsQlFVRXJMMElzVTBGQlFTeFRRVUZUYUhSQ0xFZEJRVlFzVjBGRFVUZE5MRVZCUVU4c1IwRkRXQ3hQUVVGTE5WQXNTMEZCU3poRUxGRkJRVkZ6UlN4WlFVTnNRbkJKTEV0QlFVczRSQ3hSUVVGUmMwVXNWMEZCVjNOb1F5eFhRVUZYZEd0RExGTkJRVkVzVTBGQlEzVnJReXhIUVVOd1EwRXNTVUZCVHl4RlFVRkxOMnhETEZOQlJWb3NSVUZCUzNsclFpeFJRVUZSYjJoQ0xFVkJRVzFDYkhSQ0xFbEJRMmhETjAwc1JVRkJTM0ZHTEV0QlFVc3dNRUlzVFVGSldDODFRaXhIUVZRNFFrRXNSMEZsTjBNc1JVRndWRUVzSzA1RGVVTmhaelpDTEVkQlFXVXNTVUY0UXpWQ0xIbENRWE5EUVN4UFFYSkRTU3haUVVGQmJHOURMRWxCUVVFc1UwRkJTV3RFTEVkQlEwRXNTVUZCU1RKcVF5eEZRVUZKTnk5Q0xGTkJRVk50YUVNc1QwRkJUMnh3UXl4TlFVRk5MSGRDUVVGcFFtbEZMRVZCUVVrc01FSkJRWGxDTEVkQlF6VkZMRWRCUVVreWFrTXNSVUZCUnl4UFFVRlBkVUlzYlVKQlFXMUNka0lzU1VGSGNrTXNXVUZCUVc1NlFpeEpRVUZCTEZOQlFVbDRVU3hGUVVGak1VTXNSVUZCV1RadVF5eFJRVUZCTEVsQlFVRkJMRWxCUVVGQkxFVkJRVUVzU1VGRmRFSkJMRVZCUVV0RExFOUJRMHhFTEVWQlFVc3NWMEZCZVVJc1IwRkJXa0VzUlVGQlMwTXNTMEZCV1N4SFFVRkxMRlZCUjJwRFJDeEZRVUZMUXl4TlFVbG9Ra1FzUlVGQlQzaHZReXhQUVVGUE1HOURMRkZCUVZGR0xFZEJRVTFvYmtNc1VVRkRlRUlzVTBGQlEyMXVReXhGUVVGblFpeFBRVUZEYkVRc1JVRkJReXhMUVVGRkwzUkNMRVZCUVVNc1MwRkJUU3huUWtGQlIybDRRaXhGUVVGakxHRkJRVXRzUkN4RlFVRkRMRmxCUVVrdmRFSXNTMEZCU3l4SlFVbG9SWFpSTEZOQlFWTnRhRU1zVDBGQlUycHNReXhGUVVGUExFbEJRVTExYkVNc2JVSkJRVzFDYW05RExFZEJRVk0yYmtNc1IwRkhMMFFzV1VGQlFYSnJRaXhQUVVGQkxGTkJRVTg1WjBJc1JVRkJZMjFzUXl4SFFVTnFRaTl3UXl4TFFVRkxiMVlzU1VGQlNYaFJMRVZCUVUwc1IwRkJTU3hIUVVGR0xFTkJRVWtzVjBGQldTeEhRVUZOYld4RExFdEJTVE5ETEZsQlFVRkxMRkZCUVVFc1UwRkJVWGhzUXl4SFFVTktMRWxCUVVscFZpeEZRVUZUTjFvc1MwRkJTekJDTEVsQlFVbHJSQ3hIUVVOMFFpeFBRVUZMYVZZc1JVRkRSWGQzUWl4TFFVRkxReXhOUVVGTmVuZENMRWRCUkVVc1NVRkplRUlzV1VGQlFUQjNRaXhSUVVGQkxGTkJRVkV6YkVNc1JVRkJZekZETEVWQlFWazJia01zUjBGRE9VSXZjRU1zUzBGQlMyOVdMRWxCUVVsNFVTeEZRVUZOZVd4RExFdEJRVXRITEZWQlFWVjBiME1zUjBGQlVUWnVReXhKUVVVNVF5eEZRWFJEUVN4SlEwUkJMRFJDUVV0QkxFOUJTbTFDTEVWQlFVRlZMRmxCUVdNc1kwRkRaQ3hGUVVGQlF5eFpRVUZqTEdOQlEyUXNSVUZCUVVNc1kwRkJaMElzWjBKQlEyaENMRVZCUVVGRExGbEJRV01zWTBGRGFrTXNSVUZNUVN4SFFWVkJMRFJDUVhsQ1FTeFBRWFpDYlVJc1JVRkJRVU1zVlVGQldTeFpRVU5hTEVWQlFVRkRMR1ZCUVdsQ0xHbENRVU5xUWl4RlFVRkJReXhsUVVGcFFpeHBRa0ZEYWtJc1JVRkJRVU1zWlVGQmFVSXNhVUpCUTJwQ0xFVkJRVUZETEdsQ1FVRnRRaXh0UWtGRGJrSXNSVUZCUVVNc1pVRkJhVUlzYVVKQlEycENMRVZCUVVGRExHZENRVUZyUWl4clFrRkRiRUlzUlVGQlFVTXNZMEZCWjBJc1owSkJRMmhDTEVWQlFVRkRMR2RDUVVGclFpeHJRa0ZEYkVJc1JVRkJRVU1zYzBKQlFYZENMSGRDUVVONFFpeEZRVUZCUXl4eFFrRkJkVUlzZFVKQlEzWkNMRVZCUVVGRExESkNRVUUyUWl3MlFrRkROMElzUlVGQlFVTXNjVUpCUVhWQ0xIVkNRVU4yUWl4RlFVRkJReXhuUWtGQmEwSXNhMEpCUTJ4Q0xFVkJRVUZETEdOQlFXZENMR2RDUVVOb1FpeEZRVUZCUXl4eFFrRkJkVUlzZFVKQlEzWkNMRVZCUVVGRExHdENRVUZ2UWl4dlFrRkRjRUlzUlVGQlFVTXNiVUpCUVhGQ0xIRkNRVU55UWl4RlFVRkJReXgxUWtGQmVVSXNlVUpCUTNwQ0xFVkJRVUZETEdOQlFXZENMR2RDUVVOb1FpeEZRVUZCUXl4bFFVRnBRaXhwUWtGRGFrSXNSVUZCUVVNc2FVSkJRVzFDTEcxQ1FVTnVRaXhGUVVGQlF5eHpRa0ZCZDBJc2QwSkJRek5ETEVWQmVrSkJMRWRETmtOaFF5eEhRVUZ2UWl4SlFYWkVha01zVjBGRlNTeGhRVU5KY0hORExFdEJRVXR4YzBNc1ZVRkJXU3hIUVVOcVFuSnpReXhMUVVGTGMzTkRMSE5DUVdsRVlpeFBRVGREU1N4WlFVRkJRU3h2UWtGQlFTeHpRa0ZEU1hCdlF5eFBRVUZQY1c5RExGZEJRV0VzVTBGQlEwTXNSMEZEYWtJc1IwRkJTVUVzUlVGQlJYWnVReXhQUVVGVGRXNURMRVZCUVVWMmJrTXNUVUZCVFhkdVF5eFZRVUZYTEVOQlF6bENibTVDTEZGQlFWRnZia0lzU1VGQlNVWXNSVUZCUlhadVF5eFBRVU5rTEVsQlFVa3dia01zUlVGQmIwSXNRMEZCUlVNc1ZVRkJWMG9zUlVGQlJYWnVReXhOUVVGTmQyNURMRlZCUVZkSkxGVkJRVlVzUlVGQlRVTXNaVUZCWjBJc1NVRkRlRVlzUlVGQlMwTXNTMEZCUzBNc1IwRkJZek5DTEdkQ1FVRnBRbTV1UXl4UFFVRlJlVzlETEUxQlN6ZEVMRmxCUVVGSkxFdEJRVUVzVTBGQlMzSkhMRVZCUVcxQ2RVY3NSVUZCWVVNc1IwRkRha01zUjBGQlMzaEhMRVZCUTB3c1NVRkZTVEZ0UXl4TFFVRkxjWE5ETEZWQlFWVnFia01zVTBGQlVTeFRRVUZESzI1RExFZEJRMmhDUVN4RlFVRkhReXhaUVVGak1VY3NSMEZCWTNsSExFVkJRVWRNTEdsQ1FVRnRRa2tzUlVGQlZVb3NhVUpCUVRoRExFbEJRVFZDU3l4RlFVRkhSU3h6UWtGSmVFWkdMRVZCUVVkSExGTkJRVk5NTEVWQlFWRkRMRTFCUnpGQ0xFMUJRVTh6YmtJc1IwRkRURVFzVVVGQlVVTXNUVUZCVFVFc1MwRkpkRUlzV1VGQlFXZHZRaXhaUVVGQkxGTkJRVmxETEVkQlJWSXNTVUZCU1VNc1JVRkJWM3AwUXl4TFFVRkxjWE5ETEZWQlEyWXphVU1zVVVGQlR5eFRRVUZEZVdwRExFZEJRVThzVDBGRmRVTXNTVUZHZEVOQkxFVkJRVWRQTEUxQlFWRkdMRVZCUVUxRkxFdEJRek5DVUN4RlFVRkhReXhaUVVGalNTeEZRVUZOU2l4WFFVTjJRa1FzUlVGQlIwd3NhVUpCUVcxQ1ZTeEZRVUZOVml4dFFrRkZka001YzBNc1MwRkJTM0Z6UXl4VlFVRlpiMElzUjBGSmNrSXNXVUZCUVVVc1ZVRkJRU3hUUVVGVlNDeEhRVWxFUVN4RlFVRk5TaXhYUVVOWWNIUkRMRXRCUVV0eGMwTXNWVUZCVlhBelFpeExRVUZMZFRSQ0xFbEJSVFZDTEVWQmNrUkJMRWxEUmtFc1kwRkRTU3hqUVdkSFNpeFBRVFZHU1N4WlFVRkJTU3hSUVVGQkxGTkJRVkYyYzBNc1JVRkJZV0VzUlVGQldUSnlReXhIUVUwM1FpeEpRVUZKTVVvc1JVRkJiVUlzUTBGQlJXcHBReXhOUVVGUFFTeEZRVUZQYVdoQ0xFdEJRVTBzVDBGQlVUQnhRaXhQUVVGUlFTeEZRVUZQUXl4WFFVVXZReXhwUWtGQlZqVnlReXhSUVVGblEycENMRWxCUVZacFFpeEpRVU0zUW1scFF5eEZRVUZMYUdoQ0xFdEJRVThzVlVGSGFFSTBjVUlzWlVGQlpVTXNVVUZCVVROelF5eEZRVUZMWjNCRExFdEJRVXRITEZWQlFWVnlSeXhMUVVjdlF5eFpRVUZCT0Vvc1YwRkJRU3hUUVVGWE5YTkRMRVZCUVdFMmMwTXNSMEZEY0VJc1NVRkRTU3hKUVVGSkwwb3NSVUZCVDI1clF5eExRVUZMYlhWRExGZEJRVmM1YzBNc1IwRkRNMElzUjBGQlNUaHBReXhGUVVGTkxFTkJRMDRzU1VGQlNXbExMRVZCUVZkR0xFVkJRV012U2l4RlFVRkxhbWxETEU5QlEyeERiRU1zUzBGQlN6UjBReXhSUVVGUmRuTkRMRVZCUVVzcmMwTXNSVUZCVlN4SlFVRkpReXhMUVVGTGJFc3NSVUZCU3pCS0xGVkJSV2hFTEUxQlFVOTBiMElzUjBGRFRFUXNVVUZCVVVNc1RVRkJUVUVzUzBGSmRFSXNXVUZCUVN0dlFpeG5Ra0ZCUVN4VFFVRm5RbXAwUXl4SFFVTmFMRTlCUVU5QkxFVkJRVTBzVjBGSGFrSXNXVUZCUVRoelF5eFhRVUZCTEZOQlFWYzVjME1zUjBGRFVDeEpRVUZKYTNSRExFVkJRVkZTTEdWQlFXVlRMRkZCUVZGdWRFTXNSMEZEYmtNc1IwRkJTV3QwUXl4RlFVRlBMRU5CUlZBc1NVRkJTWEJMTEVWQlFXMUNhMGNzUzBGQlMwTXNUVUZCVFdsRkxFZEJSV3hETEU5QlFVbEdMRXRCUVV0SkxFMUJRVkYwU3l4RlFVRkxNRW9zVVVGRGJFSTNkRU1zUzBGQlN6QjFReXhYUVVGWGNuUkRMRkZCUTJoQ2FXdENMRkZCUVZGdmJrSXNTVUZCU1N4cFEwRkJhME4yU1N4SlFVa3pRMEVzUlVGRldDeFBRVUZQTEUxQlIxZ3NXVUZCUVhGTExGRkJRVUVzVTBGQlVXNTBReXhIUVVOS0xFbEJRVWs0YVVNc1JVRkJUMjVyUXl4TFFVRkxiWFZETEZkQlFWYzVjME1zUjBGRE0wSXNUMEZCU1RocFF5eEZRVU5QUVN4RlFVRkxhbWxETEUxQlJWUXNUVUZIV0N4WlFVRkJkM05ETEZkQlFVRXNVMEZCVjNKMFF5eEhRVU5RTUhORExHVkJRV1ZYTEZkQlFWZHlkRU1zU1VGVE9VSXNXVUZCUVhOMFF5eFZRVUZCTEZOQlFWVnFUeXhIUVVWT0xFZEJRVXRCTEVWQlFVd3NRMEZOUVN4SlFVRkpNM05DTEVWQlFWTm5Oa0lzWlVGQlpXZzJRaXhQUVVNMVFpeExRVUZKUVN4SFFVRlZMRWRCUVdRc1EwRkxRU3hKUVVaQkxFbEJRVWszVHl4RlFVRnBRaXhIUVVWYUwwVXNSVUZCVVN4RlFVRkhRU3hGUVVGUk5GUXNSVUZCVVRWVUxFdEJRelZDYTBJc1JVRkJUVEJ6UXl4bFFVRmxNWE5ETEVsQlFVbHNRaXhKUVVOd1FqQmpMRmRCUVZjMmFrSXNTVUZGY0VKNE4wSXNSVUZCU3l0UUxFdEJRVXMxVkN4SFFVZGtMRWxCUVZOc1FpeEZRVUZSTEVWQlFVZEJMRVZCUVZFclJTeEZRVUZMTms4c1QwRkJVVFZVTEVsQlFWTXNRMEZET1VNc1NVRkJTV3RDTEVWQlFVMDJSQ3hGUVVGTEwwVXNSMEZEWmpSMFF5eGxRVUZsVnl4WFFVRlhjblJETEZWQmNFSXhRakJ6UXl4bFFVRmxXU3hoUVhWQ00wSXNSVUZxUjBFc1IwTXlRMDFETEVkQlFUaENMRWxCZEVOd1F5eDNRa0ZGU1N4TFFVRkJReXhYUVVFMFFpeEhRVFpDYUVNc1QwRXpRa2tzV1VGQlFVTXNTVUZCUVN4VFFVRkpReXhIUVVOQkwzVkRMRXRCUVVzMmRVTXNWMEZCVnpVMVFpeExRVUZMT0RWQ0xFbEJSM3BDTEZsQlFVRkRMRTlCUVVFc1YwRkRTU3hKUVVGSmJqRkNMRVZCUVRSQ0xFZEJVV2hETEU5QlVFRTNXaXhMUVVGTE5uVkRMRmRCUVZkNmNFTXNVMEZCVVN4VFFVRkRObkJETEVkQlEzSkNMRWxCUVVsQkxFVkJRVWRETEZkQlFWQXNRMEZGUVN4SlFVRkpNVUlzUlVGQmVVSXNRMEZCUlZZc1pVRkJaMEp0UXl4RlFVRkhSU3hsUVVGblFtaHhRaXhMUVVGTk9IQkNMRVZCUVVkSExHTkJRek5GZGpGQ0xFVkJRVTgxUlN4TFFVRkxkVFJDTEU5QlIxUXpla0lzUjBGUFdDeFpRVUZCZHpGQ0xGbEJRVUVzVTBGQldVTXNSMEZEVWl4SlFVRkpPVFZDTEVWQlFVOTRWaXhMUVVGTE5uVkRMRmRCUVZkeU5VSXNUVUZCU3l4VFFVRkRlVFZDTEVkQlFVOHNUMEZCUVVFc1JVRkJSMFVzYVVKQlFXMUNSeXhMUVVNNVJDeEhRVUZKT1RWQ0xFVkJRMEVzVFVGQlR5eERRVUZGY3pOQ0xHVkJRV2RDZEROQ0xFVkJRVXN5TlVJc1pVRkJaMEpvY1VJc1MwRkJUVE5RTEVWQlFVczBOVUlzWlVGSmNrVXNSVUV2UWtFc05HTkRTRUVzWlVGSFNTeFhRVUZaY25CRExFZEJRVm9zVFVGRFNTeGpRVUZQTEZsQlExQXNSVUZCUzBFc1VVRkJWVUVzUlVGRFppeEZRVUZMYjNCRExHVkJRV2xDY0hCRExFVkJRVkVyYlVNc2FVSkJaMGwwUXl4UFFYUkpLMElzVVVGVE0wSXNXVUZCUVhsRExHZENRVUZCTEZOQlFXZENReXhGUVVGdFFrTXNSMEZETDBKeVJDeEhRVUZyUWxjc1MwRkJTM2xETEVWQlFWZDRka01zUzBGQlRYbDJReXhKUVVjMVF5eFpRVUZCUXl4UFFVRkJMRzFDUVVWSkxFZEJRU3RDTEZkQlFUTkNNWFpETEV0QlFVc3JSaXhSUVVGUk5IQkRMRlZCUTJJemRrTXNTMEZCU3poRUxGRkJRVlUwUlN4VFFVRlRjM1JDTEdOQlFXTXNaVUZGY2tNc1IwRkJLMElzVjBGQk0wSm9Na0lzUzBGQlN5dEdMRkZCUVZFMGNFTXNWVUZCZDBJc1EwRkRNVU1zU1VGQlNVTXNSVUZCVFd4dVF5eFRRVUZUYzNSQ0xHTkJRV01zVlVGRGFrTTBXaXhGUVVGSmVuTkNMRXRCUVU5dWFrSXNTMEZCU3l0R0xGRkJRVkUwY0VNc1ZVRkRlRUl6ZGtNc1MwRkJTemhFTEZGQlFWVTRja01zVFVGRlpDeERRVU5FTEVsQlFVbERMRVZCUVZGdWJrTXNVMEZCVTNOMFFpeGpRVUZqTEZOQlEyNURObG9zUlVGQlRURnpRaXhMUVVGUGJtcENMRXRCUVVzclJpeFJRVUZSTkhCRExGVkJRekZDTTNaRExFdEJRVXM0UkN4UlFVRlZLM0pETEVWQlIyNUNOM1pETEV0QlFVczRSQ3hSUVVGUmVXcERMRWRCUVRKQ0xGRkJRWFJDTEVWQlFVRjJia01zUzBGQlN5dEdMRkZCUVZFcmNFTXNhVUpCUVZNc1VVRkJTVGwyUXl4TFFVRkxLMFlzVVVGQlVUUndReXhWUVVGWkxFbEJRVTB6ZGtNc1MwRkJTeXRHTEZGQlFWRXJiVU1zWlVGQmFVSXNTVUZCVFRselF5eExRVUZMSzBZc1VVRkJVV2R4UXl4VlFVTTFTQzkyUXl4TFFVRkxNRGRDTEUxQlFUQkNMRkZCUVd4Q0xFVkJRVUV4TjBJc1MwRkJTeXRHTEZGQlFWRnBjVU1zWVVGQlN5eFJRVUZKTEVsQlIzWkRMSE5DUVVGSkxHdENRVUZITEV0QlFWQXNWMEZGU1N4SFFVRkxhSGRETEV0QlFVczRSQ3hSUVVWV0xFOUJRVWs1UkN4TFFVRkxPRVFzYlVKQlFXMUNiWE5ETEdsQ1FVTlBMR0ZCUVROQ2FuZERMRXRCUVVzclJpeFJRVUZSTkhCRExGVkJRMDR6ZGtNc1MwRkJTemhFTEZGQlFWRnZjME1zVVVGRFdTeFhRVUV6UW14M1F5eExRVUZMSzBZc1VVRkJVVFJ3UXl4VlFVTllNM1pETEV0QlFVczRSQ3hSUVVGUmNYTkRMR05CUTFwdWQwTXNTMEZCU3poRUxGRkJRVkUxUWl4TlFVZDBRbXhETEV0QlFVczRSQ3hSUVVGbExGZEJSeTlDTEZOQlFWRnRWaXhIUVVWRGFsb3NTMEZCU3poRUxGVkJSWEZDTEdGQlFUTkNPVVFzUzBGQlN5dEdMRkZCUVZFMGNFTXNWVUZEWWpOMlF5eExRVUZMT0VRc1VVRkJhVUlzVVVGQlNXMVdMRVZCUlRGQ2Fsb3NTMEZCU3poRUxGRkJRV1VzVFVGQlNXMVdMRVZCUjBjc1YwRkJNMEpxV2l4TFFVRkxLMFlzVVVGQlVUUndReXhYUVVOaU0zWkRMRXRCUVV0dmQwTXNNa05CVTJJc2MwSkJRVWtzY1VKQlFVMHNTMEZCVml4VFFVRlhiak5DTEVkQlExQnFXaXhMUVVGTGQyNUNMRWxCUVUxMlR5eEZRVU5ZYWxvc1MwRkJTMjkzUXl3d1EwRkhWQ3h6UWtGQlNTeDFRa0ZCVVN4TFFVRmFMRmRCUTBrc1QwRkJTWEIzUXl4TFFVRkxPRVFzYlVKQlFXMUNiWE5ETEd0Q1FVTnFRbXAzUXl4TFFVRkxPRVFzVVVGQlVYVnpReXhqUVVzMVFpeFRRVUZoY0ROQ0xFZEJRMHhxV2l4TFFVRkxPRVFzYlVKQlFXMUNiWE5ETEcxQ1FVTjRRbXAzUXl4TFFVRkxPRVFzVVVGQlVYVnpReXhUUVVGWGNETkNMRzlEUVV0b1F5eHpRa0ZCU1N4MVFrRkJVU3hMUVVGYUxGZEJRMGtzVDBGQlNXcGFMRXRCUVVzNFJDeHRRa0ZCYlVKdGMwTXNhMEpCUVc5Q2FuZERMRXRCUVVzNFJDeHRRa0ZCYlVKM2MwTXNhMEpCUXpkRWRIZERMRXRCUVVzNFJDeFJRVUZSZDJFc1UwRkhaU3hUUVVFM1FuUmxMRXRCUVV0dmJrTXNVVUZCVVN4cFFrRkxNMElzVTBGQllXNTFRaXhIUVVWVUxFZEJRVWxxV2l4TFFVRkxPRVFzYlVKQlFXMUNiWE5ETEd0Q1FVRnZRbXAzUXl4TFFVRkxPRVFzYlVKQlFXMUNkM05ETEd0Q1FVTndSWFIzUXl4TFFVRkxPRVFzVVVGQlVYZGhMRk5CUVZkeVJpeE5RVVExUWl4RFFVdEJMRWxCUVVsMVR5eEhRVUZaTEVsQlFVNTJUeXhGUVVGaExFOUJRVk1zVVVGRGFFTnFXaXhMUVVGTE5FSXNTMEZCU3l4WFFVRlpOR3hDTEhGRFFVY3hRaXh6UWtGQlNTeHZRa0ZCU3l4TFFVRlVMRmRCUTBrc1RVRkJNRU1zVTBGQmJrTjRia0lzUzBGQlMyOXVReXhSUVVGUkxIVkNRVWw0UWl4VFFVRlZiblZDTEVkQlEwNXFXaXhMUVVGTE5FSXNTMEZCU3l4cFFrRkJhMEp4V0N4dlEwRkhhRU1zV1VGQlFYTXpRaXh2UWtGQlFTeHpRa0ZEU1haM1F5eExRVUZMT0VRc1VVRkJVWGRMTEdsQ1FVRnBRaXhaUVVGWkxGTkJRVU5ySzBJc1IwRkRka01zUlVGQlN5dERMR2RDUVVGblFuWkRMRWRCUVdOaUxITkNRVUYxUWl4RFFVTjBSRk1zVlVGQlZ5eERRVUZGZW5aQ0xFMUJRVTl4ZGtJc1IwRkRjRUpOTEdWQlFXZENMRVZCUVVzdmJVTXNVVUZCVVN0dFF5eHhRa0ZMZWtNc1dVRkJRWE5FTEU5QlFVRXNWMEZEU1hCM1F5eExRVUZMT0VRc1VVRkJVVzlhTEdOQlFXTXNTVUZCU1VNc1RVRkJUU3haUVVkNlF5eFpRVUZCYlhKQ0xFMUJRVUVzVjBGRFNTeFBRVUZQTEZsQlFVMUJMRTFCUVVzc1dVRkhNVUlzUlVGMFNVRXNRMEZCSzBKRkxDdGtRMFF2UWl4bFFVTkpMRmRCUVZsNmFVTXNSMEZCV2l4clFrRkRTVUVzUlVGQlVUUndReXhWUVVGWkxHTkJRM0JDTEZsQlFVMDFjRU1zU1VGQlVTeE5RVU5VTW5CRExGZEJWMklzVDBGbWVVTXNVVUZQY2tNc1dVRkJRWEJJTEUxQlFVRXNWMEZEU1N4SlFVRkphMGtzUlVGQlN5eFpRVUZOYkVrc1RVRkJTeXhYUVVOb1FrTXNSVUZCU1N4SlFVRkphMGtzUlVGQmIwSjZkME1zUzBGQlN6SnZReXhSUVVGUk0yOURMRXRCUVVzclJpeFZRVWxzUkN4UFFVaEJkMmxETEVWQlFVVjZhME1zVVVGQlZUQnpReXhGUVVGSE1YTkRMRkZCUTJaNWEwTXNSVUZCUldwblFpeFRRVUZYYTI5Q0xFVkJRVWRzYjBJc1UwRkRhRUowYjBJc1MwRkJTM1YzUXl4elFrRkRSV2hKTEVkQlJXWXNSVUZtUVN4RFFVRjVRMjFKTEN0a1EwRjZReXhsUVU5SkxGZEJRVmt6Y1VNc1IwRkJXaXhOUVVOSkxHTkJRVThzV1VGRFVDeEZRVUZMUVN4UlFVRlZRU3hGUVVObUxFVkJRVXN5Y0VNc1YwRnJRbUlzVDBFMVFqWkRMRkZCWVhwRExGbEJRVUZCTEU5QlFVRXNWMEZEU1N4SlFVRkphVUlzUlVGQlRXcHZReXhUUVVGVGMzUkNMR05CUVdNc1ZVRkRha015WVN4RlFVRkplblZETEUxQlFWRnNReXhMUVVGTEswWXNVVUZCVVRkRUxFMUJRM3BDZVhWRExFVkJRVWxETEV0QlFVODFkME1zUzBGQlN5dEdMRkZCUVZFMmNVTXNTMEZEY0VJMWQwTXNTMEZCU3l0R0xGRkJRVkU0Y1VNc1lVRkRZa1lzUlVGQlNXeG5RaXhWUVVGWExFZEJSVzVDZW5kQ0xFdEJRVXM0UkN4UlFVRlZObk5ETEVkQlIyNUNMRmxCUVVGeVNTeE5RVUZCTEZkQlEwa3NTVUZCU1VFc1JVRkJVU3haUVVGTlFTeE5RVUZMTEZkQlJYWkNMRTlCUkVGQkxFVkJRVTFNTEZGQlFWRnFiME1zUzBGQlN5dEdMRkZCUVZFMmNVTXNUVUZEY0VKMFNTeEhRVVZtTEVWQk5VSkJMRU5CUVRaRFJTd3JaRU5ETjBNc1pVRkhTU3hYUVVGWmVtbERMRWRCUVZvc2EwSkJRMGxCTEVWQlFWRTBjRU1zVlVGQldTeFpRVU53UWl4WlFVRk5OWEJETEVsQlFWRXNUVUZEVkRKd1F5eFhRV2xDWWl4UFFYWkNkVU1zVVVGVGJrTXNXVUZCUVVFc1QwRkJRU3h6UWtGRFNTeFpRVUZOUVN4UFFVRk5MRmRCUTFveGRrTXNTMEZCU3l0R0xGRkJRVkVyY1VNc1kwRkJZekZ5UXl4VFFVRlJMRk5CUVVOMWNrTXNSMEZCVVN4VFFVRkxNV0VzVDBGQlR5eEpRVUZKT0dFc1IwRkJkMEpLTEU5QlEzQkdNM2RETEV0QlFVc3lia01zVTBGQlV5d3JRa0ZIYkVJc1dVRkJRVmNzVFVGQlFTeFhRVU5KTEVsQlFVbHJTU3hGUVVGTExGbEJRVTFzU1N4TlFVRkxMRmRCUTJoQ1F5eEZRVUZKTEVsQlFVbDVTU3hGUVVGclFtaDRReXhMUVVGTE1tOURMRkZCUVZFemIwTXNTMEZCU3l0R0xGVkJTV2hFTEU5QlNFRjNhVU1zUlVGQlJYcHJReXhSUVVGVk1ITkRMRVZCUVVjeGMwTXNVVUZEWm5sclF5eEZRVUZGYW1kQ0xGTkJRVmRyYjBJc1JVRkJSMnh2UWl4VFFVTm9RblJ2UWl4TFFVRkxkWGRETEhOQ1FVTkZhRWtzUjBGRlppeEZRWFpDUVN4RFFVRjFRMjFKTEN0a1EwUjJReXhsUVVOSkxGZEJRVmt6Y1VNc1IwRkJXaXh2UWtGRFNVRXNSVUZCVVRSd1F5eFZRVUUyUWl4UlFVRnFRaXhGUVVGQk5YQkRMRVZCUVZFMGNFTXNhVUpCUVZNc1VVRkJTU3hWUVVONlF5eFpRVUZOTlhCRExFbEJRVkVzVFVGRFZESndReXhYUVhkQ1lpeFBRVFZDTUVNc1VVRlBkRU1zV1VGQlFVRXNUMEZCUVN4dFFrRkRTU3haUVVGTlFTeFBRVUZOTEZkQlExb3hka01zUzBGQlN6SnVReXhUUVVFMlFpeFJRVUZ3UWl4RlFVRkJNMjVETEV0QlFVc3JSaXhSUVVGUmEzSkRMR1ZCUVU4c1VVRkJTU3huUTBGRGRFTnFlRU1zUzBGQlMydDRReXhaUVVGelF5eFJRVUY0UWl4RlFVRkJiSGhETEV0QlFVc3JSaXhSUVVGUmIzSkRMRzFDUVVGWExGRkJRVWx1ZUVNc1MwRkJTeXRHTEZGQlFWRm5jVU1zVjBGSGFFVXNjMEpCUVVrc01FSkJRVmNzUzBGQlppeFRRVUZuUW5adlFpeEhRVU5RUVN4SFFVTkVlRzVDTEV0QlFVczRSQ3h0UWtGQmJVSnRjME1zYlVKQlEzaENhbmRETEV0QlFVczRSQ3hSUVVGUmMzUkRMRmxCUVdNMWNFSXNiME5CU1c1RExGbEJRVUU0WjBJc1RVRkJRU3hYUVVOSkxFbEJRVWxyU1N4RlFVRkxMRmxCUVUxc1NTeE5RVUZMTEZkQlEyaENReXhGUVVGSkxFbEJRVWs0U1N4RlFVRnhRbko0UXl4TFFVRkxNbTlETEZGQlFWRXpiME1zUzBGQlN5dEdMRlZCU1c1RUxFOUJTRUYzYVVNc1JVRkJSWHByUXl4UlFVRlZNSE5ETEVWQlFVY3hjME1zVVVGRFpubHJReXhGUVVGRmFtZENMRk5CUVZkcmIwSXNSVUZCUjJ4dlFpeFRRVU5vUW1sblFpeEZRVUZGWjBrc2MwSkJRMHRvU1N4SFFVVm1MRVZCTlVKQkxFTkJRVEJEYlVrc0syUkRRVEZETEdWQlNVa3NWMEZCV1ROeFF5eEhRVUZhTEd0Q1FVTkpRU3hGUVVGUk5IQkRMRlZCUVZrc1dVRkRjRUlzV1VGQlRUVndReXhKUVVGUkxFMUJRMVJCTEZGQlFWVkJMRVZCUTJZc1JVRkJTekp3UXl4WFFUUkNZaXhQUVhCRGRVTXNVVUZYYmtNc1dVRkJRVUVzVDBGQlFTeHBRa0ZKU1N4SFFVaEJMRmxCUVUxQkxFOUJRVTBzVjBGRldqRjJReXhMUVVGTE1tNURMRk5CUVRaQ0xGRkJRWEJDTEVWQlFVRXpia01zUzBGQlN5dEdMRkZCUVZGcmNrTXNaVUZCVHl4UlFVRkpMREpDUVVOc1EycDRReXhMUVVGTEswWXNVVUZCVVhWeVF5eExRVUZOTEVOQlEyNUNMRWxCUVVsRExFVkJRVTgzYjBNc1UwRkJVM04wUWl4alFVRmpMRXRCUTJ4RGRXSXNSVUZCUzJ4NlFpeFZRVUZWZEVVc1NVRkJTU3hMUVVGTkxHRkJRVTB2V2l4TFFVRkxLMFlzVVVGQlVYVnlReXhQUVVNMVEzUjRReXhMUVVGTE9FUXNVVUZCVVhWclF5eFpRVUZaYTBvc1IwRkhla0oyZUVNc1MwRkJTeXRHTEZGQlFWRjVja01zVTBGRFluaDRReXhMUVVGTGVYaERMR2RDUVVGblFucDRReXhMUVVGTEswWXNVVUZCVVhseVF5eFZRVWN4UXl4WlFVRkJReXhuUWtGQlFTeFRRVUZuUW1wNFFpeEhRVU5hZUdkQ0xFdEJRVXM0UkN4UlFVRlJkMHNzYVVKQlFXbENMRk5CUVZNc1UwRkJRMnNyUWl4SFFVRk5MRTlCUVVGb2MwSXNSVUZCVVdkelFpeFBRVWN4UkN4WlFVRkJiRVVzVFVGQlFTeFhRVU5KTEVsQlFVbHJTU3hGUVVGTExGbEJRVTFzU1N4TlFVRkxMRmRCUTJoQ2MwZ3NSVUZCVFN4SlFVRkpPRUlzUlVGQmEwSXhlRU1zUzBGQlN6SnZReXhSUVVGUk0yOURMRXRCUVVzclJpeFZRVWRzUkN4UFFVWkJObkJETEVWQlFVbDBia0lzVTBGQlYydHZRaXhGUVVGSGJHOUNMRk5CUlZoemJrSXNSMEZGWml4RlFYQkRRU3hEUVVGMVEyTXNLMlJEU1haRExHVkJaMEpKTEZkQlFWa3pjVU1zUjBGQldpeE5RVU5KTEdOQlFVOHNXVUZEVUN4RlFVRkxRU3hSUVVGVlFTeEZRVU5tTEVWQlFVczBja01zYTBKQlFXOUNMRVZCUVVzMWNrTXNVVUZCVVRaeVF5eFpRVU4wUXl4RlFVRkxReXhSUVVGVkxGVkJRVWNzUlVGQlMwWXNhMEpCUVdsQ0xHVkJRVThzUlVGQlN6VnlReXhSUVVGUlozRkRMRmRCUXpWRUxFVkJRVXNyUWl4aFFVRmxMRlZCUVVjc1JVRkJTMGdzYTBKQlFXbENMR2RDUVVGUkxFVkJRVXMxY2tNc1VVRkJVV2R4UXl4WFFVTnNSU3hGUVVGTFowTXNXVUZCWXl4VlFVRkhMRVZCUVV0S0xHdENRVUZwUWl4blFrRkJVU3hGUVVGTE5YSkRMRkZCUVZGbmNVTXNWMEZEYWtVc1JVRkJTMmxETEU5QlFWTXNWVUZCUnl4RlFVRkxUQ3hyUWtGQmFVSXNZMEZCVFN4RlFVRkxOWEpETEZGQlFWRm5jVU1zVjBGRE1VUXNSVUZCUzB3c1UwRkRUQ3hGUVVGTGRVTXNTMEZCVHl4RlFVRkxReXhoUVVOcVFpeEZRVUZMUXl4bFFVRnBRaXhUUVVFMFFrTXNSVUZCZDBNMVJpeEhRVUZoYkc1Q0xGRkJRVkZ2YmtJc1UwRnRSM1pJTEU5Qk4wZ3JReXhSUVRoQ00wTXNXVUZCUVdkRUxFOUJRVUVzYzBKQlJWRXlReXhGUVVGUk0zQkRMRk5CUVZOdE5FSXNaVUZCWlRkblF5eExRVUZMTm5oRExGTkJSWHBETEVkQlFVbFJMRVZCUTBGeWVVTXNTMEZCU3poRUxGRkJRVlYxZFVNc1JVRkRabko1UXl4TFFVRkxjM2xETEdOQlFXZENlbUVzUjBGQlRUbFJMRzlDUVVGdlFuTnlRaXhQUVVVNVF5eERRVU5FY25sRExFdEJRVXM0UkN4UlFVRlZORVVzVTBGQlUzTjBRaXhqUVVGakxFOUJRM1JEYURKQ0xFdEJRVXM0UkN4UlFVRlJlV3BETEVkQlFVdDJia01zUzBGQlN6WjRReXhSUVVOMlFqZDRReXhMUVVGTE9FUXNVVUZCVVhWaExGVkJRVlYwUlN4SlFVRkpMRk5CUlROQ0wxb3NTMEZCU3poRUxGRkJRVkZ6TTBJc1ZVRkJXU3d5VVVGSGNVTndOMElzUzBGQlN6aDRReXhoUVVGWkxHMVdRVWx3UXpsNFF5eExRVUZMSzNoRExGbEJRVmNzYldKQlZUTkVMRWxCUVVsUkxFVkJRV3RDTjNCRExGTkJRVk50TkVJc1pVRkJaVGRuUXl4TFFVRkxNbmhETEcxQ1FVTXZRMWtzUjBGRFFVRXNSVUZCWjBKc1N5eFpRVUZaY205RExFdEJRVXM0UkN4VFFVZHlRemxFTEV0QlFVdHplVU1zWTBGQlowSXNTVUZCU1hwaExFZEJRVTAzTTBJc1MwRkJTemhFTEZOQlJYQkRPVVFzUzBGQlN6aEVMRkZCUVZGM1N5eHBRa0ZCYVVJc2EwSkJRV3RDTEZOQlFVTnJLMElzUjBGRE4wTXNSVUZCUzNsR0xFdEJRVXRQTEZsQlExWXNSVUZCUzFBc1MwRkJTMUVzYVVKQlFXbENReXhaUVVGakxFVkJRM3BETEVWQlFVdFVMRXRCUVV0VkxHTkJRV01zUjBGRmNFSXNSVUZCUzBNc1pVRkRUQ3hGUVVGTFFTeGpRVUZqTEZGQlMyNURMRmxCUVVFM2FVSXNTMEZCUVN4WFFVTkpMM1pDTEV0QlFVdHplVU1zWTBGQlkzWnBRaXhSUVVkMlFpeFpRVUZCYldsQ0xGZEJRVUVzVjBGTFNTeEpRVUZKYkhsRExFdEJRVXR6YmtNc1UwRkJVM1J1UXl4TFFVRkxaM2xETEZGQlFYWkNMRU5CUzBFc1NVRkJTV0VzUlVGQmIwTXNRMEZEY0VOcWRVTXNTMEZCVFRWRkxFdEJRVXNyUml4UlFVRlJLMjFETEdWQlFXbENMRWxCUVUwNWMwTXNTMEZCU3l0R0xGRkJRVkZuY1VNc1ZVRkRka1FyUXl4VlFVRlZMRVZCUTFaRExFbEJRVXN2ZVVNc1MwRkJTeXRHTEZGQlFWRnBkRU1zVDBGSGJFSkRMRVZCUVhsQ0xFTkJRM3BDYWtJc1QwRkJVV2g1UXl4TFFVRkxaM2xETEU5QlFWRkVMRmxCUVdFdmVFTXNTMEZCU3l0NFF5eFpRVU4yUTIxQ0xHTkJRV1ZzZWtNc1MwRkJTeXRHTEZGQlFWRnZkRU1zVTBGRE5VSk9MRmRCUVZsQkxFVkJRMXBQTEZsQlFWa3NSVUZEV2tNc2MwSkJRWE5DTEVkQlIzUkNjRUlzUlVGQlR5eEpRVUZKY1VJc1IwRkJXVXdzUjBGcFFqTkNMRTlCYUVKQmFFSXNSVUZCUzNOQ0xHOUNRVTFNZEVJc1JVRkJTekYxUWl4alFVRmplWEJDTEVkQlFXTnVReXhYUVVOcVEyOUlMRVZCUVVzeGRVSXNZMEZCWTNsd1FpeEhRVUZqTlVJc1pVRkRha00yUnl4RlFVRkxNWFZDTEdOQlFXTjVjRUlzUjBGQll6TkNMR2xDUVVOcVF6UkhMRVZCUVVzeGRVSXNZMEZCWTNsd1FpeEhRVUZqYUVNc1owSkJRMnBEYVVnc1JVRkJTekYxUWl4alFVRmplWEJDTEVkQlFXTnlRaXhsUVVWcVEzTkhMRVZCUVV0MVFpeFRRVWRNZGtJc1JVRkJTM2RDTEZsQlFWbERMRk5CUVZVc1JVRkRjRUo2UWl4SlFVVm1MRVZCTjBoQkxFTkJRU3REZWtvc0syUkRRUzlETEdWQlpVa3NWMEZCV1hwcFF5eEZRVUUwUWpSMFF5eEhRVUY0UXl4TlFVTkpMRmxCUVUwMWRFTXNTVUZCVVN4WlFVTmtMRVZCUVV0QkxGRkJRVlZCTEVWQlEyWXNSVUZCU3pSMFF5eGxRVUZwUWtFc1JVRkRkRUlzUlVGQlMycEZMRmRCSzBSaUxFOUJiRVo1UXl4UlFUQkNja01zV1VGQlFYbERMR1ZCUVVFc1UwRkJaVU1zUlVGQmJVTTFSaXhIUVVrNVF5eEpRVU5KYjBnc1JVRkVUWGhDTEVWQlFVOUlMRXRCUVV0MmFVTXNTMEZCUzIxclF5eHBRa0ZEU0VNc1dVRkJXWFFyUWl4TlFVRkxMRk5CUVVOeE5rSXNSMEZCVlN4UFFVRkJRU3hGUVVGTmEwVXNVMEZEZEVSSUxFbEJSMEUxZWtNc1MwRkJTMmN3UXl4WFFVRlhlSE5DTEVsQlFVMXZjMElzUlVGQlkzQnpRaXhKUVVOd1EzaHVRaXhMUVVGTFp6QkRMRmRCUVZjMVJDeFZRVVZ3UW1kRExFVkJRVTlGTEdOQlFXTjRhVUlzVVVGSGVrSXNXVUZCUVRSbUxFOUJRVUVzYzBKQlJVa3NTVUZCU3pGMlF5eExRVUZMTW5wRExHVkJRV2RDTEVOQlEzUkNMRWxCUVVsTkxFVkJRVlVzU1VGQlNVTXNSMEZCTUVKc01FTXNTMEZCU3l0R0xGTkJRMnBFTDBZc1MwRkJTeko2UXl4bFFVRnBRazBzUlVGaE1VSnFNRU1zUzBGQlMyY3dReXhYUVVGaExFbEJRVWt6UXl4SFFVRnhRbko0UXl4TFFVRkxLMFlzVTBGRGFFUXZSaXhMUVVGTGJUQkRMRmRCUVdFc1NVRkJTWHBETEVkQlFXdENMRU5CUTNCRE5VVXNaVUZCWjBJNWMwTXNTMEZCU3l0R0xGRkJRVkVyYlVNc1pVRkROMEozUlN4TFFVRk5MRk5CUTA1RkxGRkJRVk1zVTBGQlEyaEdMRWRCUVUwc1QwRmtSalJHTEVWQlkyRXNSVUZVTTBJc1JVRkJTM1ZDTEdWQlFXVXhRaXhMUVVGTE1YVkNMR05CUVdONWNFSXNSMEZCWTJJc2RVSkJRM0pFTEVWQlFVdDNTQ3hsUVVGbE1VSXNTMEZCUzNwMlFpeFhRVUZYZDNGQ0xFZEJRV05pTEhWQ1FVRjFRaXhUUVVGRE5VOHNSVUZCUjI5UUxFZEJRVThzVDBGQlFYbEdMRVZCUVU5RUxHVkJRV1VzUlVGQlMzZENMR1ZCUVdkQ2FFZ3NWMEZETDBnc1JVRkJTMmRJTEdWQlFXVTFha0lzVDBGUVVDeEpRVUZEY1dsQ0xFdEJhVUpzUWl4SlFVRkpja29zUlVGQlZYSm5ReXhUUVVGVGMzUkNMR05CUVdNc1QwRkRja01yVXl4RlFVRlJNWEZDTEZWQlFWVjBSU3hKUVVGSkxHTkJRV1VzYTBKQlEzSkRaM1pDTEVWQlFWRldMRmxCUVZseWIwTXNTMEZCUzJjd1F5eFhRVUZYYkhkRExGTkJRM0JEYVd4RExFVkJRVkZXTEZsQlFWbHliME1zUzBGQlMyMHdReXhYUVVGWGNuZERMRk5CUlhCRE9VUXNTMEZCU3poRUxGRkJRVlZwYkVNc1IwRkhia0lzV1VGQlFWUXNUVUZCUVN4WFFVVkpMRWxCUVVsclNTeEZRVUZMTEZsQlFVMXNTU3hOUVVGTExGZEJRMmhDY1Vrc1JVRkJlVUl6ZDBNc1MwRkJTekp2UXl4UlFVRlJNMjlETEV0QlFVc3JSaXhUUVVNdlF6UnhReXhGUVVGSmVVUXNZMEZCWlN4RlFVTnVRaXhKUVVGSk4wd3NSVUZCU1N4SlFVRkpPRXdzUlVGQmIwSXhSQ3hGUVVGTE0zZERMRXRCUVVzeWVrTXNaMEpCUlRGRExFOUJSRUZ3VEN4RlFVRkZhbWRDTEZOQlFWZHJiMElzUlVGQlIyeHZRaXhUUVVOVWFXZENMRWRCUldZc1JVRnNSa0VzUTBGQmVVTnRTU3hyY2tKRFEzcERMR1ZCVjBrc1YwRkJXVE54UXl4RlFVRnZRM1YxUXl4UlFVRkJMRWxCUVVGQkxFbEJRVUZCTEVkQlFVRXNSMEZCYUVRc1RVRkRTU3hqUVVGUExGbEJRMUFzUlVGQlMzWjFReXhSUVVGVlFTeEhRVUZYTEVkQlF6RkNMRVZCUVV0MWRVTXNVMEZCVjBFc1JVRkRhRUlzUlVGQlN6VkZMRmRCZVVsaUxFOUJlRXB4UXl4UlFXdENha01zV1VGQlFVRXNUMEZCUVN4WFFVTkpMRWxCUVVrMlJTeEZRVUZWZGpCRExFdEJRVXNyUml4UlFVRlZMMFlzUzBGQlN5dEdMRkZCUVZGNWRVTXNZVUZCVlhaNlF5eEZRVU5vUkhkNlF5eEZRVUZWZWpCRExFdEJRVXNyUml4UlFVRlZMMFlzUzBGQlN5dEdMRkZCUVZFeWRVTXNZVUZCVlhwNlF5eEZRVVZ3UkdwQ0xFdEJRVXM0UkN4VFFVTnBRaXhKUVVGc1FqbEVMRXRCUVV0ek1FTXNVMEZEUXpWeVF5eFRRVUZUYzNSQ0xHTkJRV01zVFVGRGRrSjBkRUlzVTBGQlUzTjBRaXhqUVVGakxFMUJSVGRDYURKQ0xFdEJRVXR6TUVNc1YwRkRUSFF3UXl4TFFVRkxPRVFzVVVGQlVYVmhMRlZCUVZWMFJTeEpRVUZKTEZWQlFWY3NWVUZGYkVNdldpeExRVUZMSzBZc1VVRkJVVFIxUXl4aFFVTmlNekJETEV0QlFVdHBiME1zVVVGQlVXcHZReXhMUVVGTEswWXNVVUZCVVRSMVF5eGpRVWs1UWtvc1IwRkRRWFl3UXl4TFFVRkxORUlzUzBGQlN5eFZRVUZYTW5sRExFZEJSWEpDUlN4SFFVTkJlakJETEV0QlFVczBRaXhMUVVGTExGVkJRVmMyZVVNc1IwRkhla0o2TUVNc1MwRkJTelF3UXl4dFFrRkhWQ3haUVVGQlFTeG5Ra0ZCUVN4WFFVTkpMRWxCUVVsd1NDeEZRVUZSZUhSRExFdEJRVXNyUml4UlFVTnFRaXhKUVVGSkwwWXNTMEZCUzNNd1F5eFZRVUZoT1Vjc1JVRkJUVzFJTEdGQlFXZENia2dzUlVGQlRYRklMRk5CUVd4RUxFTkJSVUVzU1VGRlNXaEdMRVZCUVZFc1MwRkRVbWxHTEVWQlFTdENMRU5CUXk5Q2FFa3NaVUZLUzFVc1JVRkJUVllzWlVGTFdHbEVMRlZCUVZkMlF5eEZRVUZOY1Vnc1UwRkRha0l4UkN4WlFVRmhNMFFzUlVGQlRXMUlMRmxCUTI1Q00wVXNUVUZCVDNoRExFVkJRVTF0U0N4WlFVTmlhRVlzVlVGQlYyNURMRVZCUVUxMVNDeFZRVWx5UWl4SFFVRjFRaXhYUVVGdVFuWklMRVZCUVUxMVNDeFRRVUYxUWl4RFFVTTNRaXhKUVVGSlF5eEZRVUZoTEZOQlFYbENSaXhIUVVGWkxFTkJRVVZvUlN4alFVRmxkRVFzUlVGQlRYbElMR0ZCUXpkRmNFWXNSVUZCVVN4SlFVRkpiVUlzUjBGQmEwSm5SU3hSUVVVM1FpeEhRVUYxUWl4aFFVRnVRbmhJTEVWQlFVMTFTQ3hUUVVOWWJFWXNSVUZCVVN4SlFVRkpXU3hIUVVGdlFuRkZMRkZCUlM5Q0xFZEJRWFZDTEdGQlFXNUNkRWdzUlVGQlRYVklMRk5CUVhsQ0xFTkJSWEJETEVsQlFVbEhMRVZCUVZjc1UwRkRVa29zUjBGQldTeERRVU5tYkVRc1dVRkJZWEJGTEVWQlFVMXZSU3haUVVOdVFtOUNMRTFCUVU5NFJpeEZRVUZOTWtnc1pVRkRZbWhETEZOQlFWVXpSaXhGUVVGTk5FZ3NaVUZGY0VKMlJpeEZRVUZSTEVsQlFVbDNSU3hIUVVGdlFtRXNVVUZKYUVOeVJpeEZRVUZSTEVsQlFVbDNRaXhIUVVGeFFubEVMRWxCUjJwQ0xFbEJRV2hDZEVnc1JVRkJUVFpJTEZGQlEwNTRSaXhGUVVGTmVVWXNWVUZCVnl4RlFVTnFRbnBHTEVWQlFVMXJSU3hQUVVGUkxFbEJSMDhzU1VGQmNrSjJSeXhGUVVGTkswZ3NZVUZEVGpGR0xFVkJRVTE1Uml4VlFVRlhMRVZCUTJwQ2VrWXNSVUZCVFRsSkxFOUJRVThzVTBGQlZTeFhRVU4yUWpoSkxFVkJRVTA1U1N4UFFVRlBMR05CUVdVc1UwRkphRU12YlVNc1MwRkJTMmt5UWl4UFFVRlBORm9zUzBGSGFFSXNXVUZCUVRKR0xHbENRVUZCTEZkQlMwa3NTVUZCYzBJc1NVRkJiRUo0TVVNc1MwRkJTM013UXl4VFFVRnRRaXhOUVVGUExFZEJSVzVETEVsQlFVbHRRaXhGUVVFMlFpeEhRVVUzUW01MFFpeEZRVUZYZEc5Q0xFdEJRVXR6YjBJc1UwRlRjRUlzVDBGU1NVRXNSVUZCVTNaVkxFOUJRVk1zUjBGRGJFSjFWU3hGUVVGVGJHcENMRk5CUVZFc1UwRkJRelpVTEVWQlFVZDJSU3hIUVVOaWRVVXNZVUZCWVc4M1FpeEhRVU5pYjBJc1JVRkJUM2huUXl4TFFVRkxaMFVzUlVGQlJTczJRaXhaUVVOVUx6WkNMR0ZCUVdGNU0wSXNTVUZEYkVJclJTeEZRVUZQZUdkRExFdEJRVXRuUlN4TlFVZHFRbmM0UWl4SFFVZFlMRmxCUVVGRExGbEJRVUVzVjBGRlNTeEhRVUZKTVRGRExFdEJRVXR6TUVNc1UwRkJWU3hQUVVGUGREQkRMRXRCUVV0dGIwTXNWVUZGTDBJc1NVRkJTWEJuUXl4RlFVRlJMMGdzUzBGQlMzTnZRaXhUUVVGVExFZEJRekZDTEVsQlFVdDJaMElzUlVGQlR5eE5RVUZQTEVkQlJXNUNMRWRCUVVsQkxFVkJRVTFxUlN4dFFrRkJiVUp0YzBNc2FVSkJRV3RDTEVOQlF6TkRMRWRCUVVsc2IwTXNZVUZCYVVJd2IwTXNSMEZEYWtJc1QwRkJUekZ2UXl4RlFVRk5ha1VzVVVGQlVXOXpReXhSUVVGVkxFZEJSVGxDTEVkQlFVbHViME1zWVVGQmFVSXliME1zUjBGRGRFSXNUMEZCVHpOdlF5eEZRVUZOZVdZc1NVRkpja0lzVDBGQlQzcG1MRVZCUVUxdlowTXNWMEZMYWtJc1dVRkJRVWNzVFVGQlFTeFhRVVZKTEVsQlFVbHJTU3hGUVVGTExGbEJRVTFzU1N4TlFVRkxMRmRCUTJoQ1F5eEZRVUZKTEVsQlFVbHZUaXhGUVVGblFqTXhReXhMUVVGTE1tOURMRkZCUVZFemIwTXNTMEZCU3l0R0xGTkJRVlV2Uml4TFFVRkxjekJETEZWQlEzcEVjRTBzUlVGQlRVc3NSVUZCUlVvc1ZVRk5XaXhQUVV4QlNTeEZRVUZGYW1kQ0xGTkJRVmRyYjBJc1JVRkJSMnh2UWl4VFFVTm9RbWxuUWl4RlFVRkZlbXRETEZGQlFWVXdjME1zUlVGQlJ6RnpReXhSUVVOWU9VUXNTMEZCUzNNd1F5eFZRVU5NTDB3c1JVRkJSVTRzVVVGQlVVTXNSMEZGVUVzc1IwRkZaaXhGUVhoS1FTeERRVUZ4UTBNc1NVTjFUWEpETEVkQlRVa3NVMEZCV1c5T0xFVkJRWFZDUXl4RlFVRjFRa01zVVVGQk9VTXNTVUZCUVVZc1NVRkJRVUVzUlVGQlFTeFJRVUYxUWl4SlFVRkJReXhKUVVGQlFTeEZRVUZCTEZOQlFYVkNMRWxCUVVGRExFbEJRVUZCTEVWQlFVRXNTVUZEZEVRNU1VTXNTMEZCU3pReFF5eFZRVUZaUVN4RlFVTnFRalV4UXl4TFFVRkxOakZETEZWQlFWbEJMRWRCUVZsQkxFZEJRVmtzUlVGQlNTeEhRVUZMUVN4RlFVTnNSRGN4UXl4TFFVRkxPREZETEdGQlFXVkJMRVZCUTNCQ09URkRMRXRCUVVzck1VTXNWMEZCWVhSMlF5eExRVUZMZFhaRExFdEJRVXRvTWtNc1MwRkJTemd4UXl4aFFVRmxPVEZETEV0QlFVczJNVU1zYzJWRGNrNDNSQ3hsUVVsSkxGZEJRVmt4Unl4RlFVRjNRamhITEZGQlFVRXNTVUZCUVVFc1NVRkJRVUVzUjBGQlFTeEhRVUZ3UXl4TlFVTkpMR05CUVU4c1dVRkRVQ3hGUVVGTGJFa3NaVUZCYVVJc1NVRkJTVzFKTEVkQlF6RkNMRVZCUVVzdlJ5eGxRVUZwUWtFc1JVRkRkRUlzUlVGQlN6aEhMR05CUVdkQ1FTeEpRU3RFTjBJc1QwRjJSVEpETEZGQlYzWkRMRmxCUVVFeFJ5eG5Ra0ZCUVN4VFFVRm5Ra01zUlVGQmJVSkRMRWRCUXk5Q2NrUXNSMEZCYTBKWExFdEJRVXQ1UXl4RlFVRlhlSFpETEV0QlFVMTVka01zU1VGSE5VTXNXVUZCUVM5MFF5eEpRVUZCTEZOQlFVbHhSU3hUUVVWSmIyaERMRVZCUVZGdWJrTXNTMEZEVW0weVF5eEZRVUZSYUZBc1JVRkJUVGhQTEdOQlEyeENMRWxCUVdNc1NVRkJWa1VzUlVGQlowSXNRMEZEYUVJc1NVRkJTVGt3UXl4RlFVRk5aM0JETEV0QlFVdEhMRlZCUVZWNmEwTXNSMEZEY2tJM1JDeEZRVUZSYkVNc1MwRkJTeXQwUXl4bFFVRmxVeXhSUVVGUmJuUkRMRWRCUTNoRExFZEJRVWxoTEVWQlJVRXNUMEZFUVdsc1F5eEZRVUZOYVZBc1pVRkJaV3d3UXl4RlFVRlBOa1FzUjBGRGNrSnBWeXhSUVVGUlF5eFZRVWwyUWl4SlFVRkpielpDTEVWQlFWVXNRMEZEVmpGMlFpeFBRVUZ6UWl4UlFVRmtMRVZCUVVFMVowSXNSVUZCVVRSblFpeGpRVUZOTEZGQlFVa3NUVUZETVVJeWRrSXNVVUZCVTNaM1F5eEZRVUZSZFhkRExGRkJRVlYyZDBNc1JVRkJVWFYzUXl4UlFVRlZMRWxCUjJwRUxFOUJRVTlETEUxQlFVMTRkME1zUlVGQlVXZDBReXhKUVVGTGMwUXNSMEZEY2tKdU5rSXNUVUZCU3l4VFFVRkJjelpDTEVkQlFWa3NUMEZCUVVFc1JVRkJVME1zVlVGRE1VSjJOa0lzVFVGQlN5eFRRVUZCY2s4c1NVRkRXU3hKUVVGV2MyOURMRWRCUTBGb1VDeEZRVUZOTkVjc1pVRkJaVWdzVVVGQlVYWnpReXhGUVVGTGQwMHNSVUZCVFN4SlFVRkpkMmRETEV0QlFVdEJMRXRCUVV0SkxFMUJRVkVzVFVGRmJFVjBTQ3hGUVVGTmFWQXNaVUZCWlhadlF5eEZRVUZOT1Vnc1RVRkZPVUl5ZDBNc1QwRkJUU3hUUVVGQmJuaENMRWRCUTBnMGFFSXNSVUZCVFhkUUxGbEJRVmx3ZUVJc1JVRkJUM2htTEU5QlMzSkRMRmxCUVVGeGQwTXNaVUZCUVN4VFFVRmxTU3hGUVVGbGVuZERMRWRCUlRGQ0xFbEJRMGtzU1VGQlNUWjNReXhGUVVGMVF5eERRVU4yUXpsS0xHVkJRV2RDT1hORExFdEJRVXR0ZGtNc1pVRkRja0oyUXl4VlFVRlhMRU5CUTFCNmJrSXNTMEZCVFhGNFFpeEZRVUZUYW1wQ0xFMUJRMlp6YWtJc1UwRkJWU3hKUVVGSlF5eEhRVUV3UWs0c1JVRkJVMDhzVTBGQlUyNUNMRlZCUVZkWkxFVkJRVk5QTEZOQlFWTnNRaXhUUVVGVlZ5eEZRVUZUVHl4VFFVRlRha0lzWjBKQlJ6ZElMRTFCUVU5MmQwSXNSMEZKVEN4WlFVUkJkbXhDTEV0QlFVc3lNa01zV1VGR1VTeDFTRUZGV1RWM1F5eEhRVWszUWk5R0xFdEJRVXQxZGtNc1owSkJRV2RDZGtNc1IwRkJZM3BDTEhGQ1FVRnpRbkZNTEVsQlJ6ZEVMRmxCUVVGRUxGbEJRVUVzVTBGQldYQjRRaXhGUVVGWmVHWXNSMEZEY0VJc1NVRkJTV2w0UXl4RlFVRnZReXhEUVVGRmJFc3NaVUZCWjBJNWMwTXNTMEZCUzIxMlF5eGxRVUZuUW5aRExGVkJRVmNzUTBGQlJYcDJRaXhOUVVGUGIwa3NSVUZCVHpCNFFpeFRRVUZWYkhoRExFVkJRVkZ0ZUVNc1YwRkROVWhzTTBNc1MwRkJTM1YyUXl4blFrRkJaMEoyUXl4SFFVRmplRUlzTWtKQlFUUkNkMHdzU1VGRmRrVXNSVUYyUlVFc1EwRkJNa040VHl3clpFTkVNME1zWlVGRlNTeFhRVUZaZW1sRExFZEJRVm9zVFVGRFNTeGpRVUZQTEZsQlExQXNSVUZCUzBFc1VVRkJWVUVzUlVGRFppeEZRVUZMTW5CRExGZEJkVUppTEU5Qk5VSXdReXhSUVZGMFF5eFpRVUZCUVN4UFFVRkJMRmRCUTBrc1NVRkJTVzVuUWl4RlFVRlBOMjFDTEZOQlFWTnpkRUlzWTBGQll5eExRVVU1UW1neVFpeExRVUZMSzBZc1VVRkJVVFp4UXl4UFFVTmljbWhDTEVWQlFVdHhhRUlzUzBGQlR6VjNReXhMUVVGTEswWXNVVUZCVVRaeFF5eE5RVWQ2UWpWM1F5eExRVUZMSzBZc1VVRkJVVzk0UXl4UFFVTmlOVzVDTEVWQlFVczBia0lzUzBGQlQyNHpReXhMUVVGTEswWXNVVUZCVVc5NFF5eE5RVWMzUW00elF5eExRVUZMT0VRc1VVRkJWWGx5UWl4RlFVVllkblpDTEV0QlFVc3JSaXhSUVVGUmNYaERMRk5CUTJKd00wTXNTMEZCU3pKdVF5eFRRVUZUTTI1RExFdEJRVXNyUml4UlFVRlJjWGhETEZOQlJUTkNjRE5ETEV0QlFVc3JSaXhSUVVGUmMzaERMR05CUTJKeU0wTXNTMEZCU3poRUxGRkJRVkYzU3l4cFFrRkJhVUlzVVVGQlUzUlBMRXRCUVVzclJpeFJRVUZSYzNoRExHVkJSMmhGTEVWQk5VSkJMRU5CUVRCRE4wOHNLMlJEUXpGRExHVkJVMGtzVjBGQldYcHBReXhIUVVGYUxFMUJRMGtzWTBGQlR5eFpRVTVZTEVWQlFVRjFlRU1zVlVGQmIwTXNSMEZQYUVNc1JVRkJTM1o0UXl4UlFVRlZRU3hGUVVObUxFVkJRVXQzZUVNc1QwRkJVeXhyUWtGQlZ5eEZRVUZMZUhoRExGRkJRVkZ2Y0VNc1owSkJRM1JETEVWQlFVczBReXhaUVVGakxIVkNRVUZuUWl4RlFVRkxhSE5ETEZGQlFWRnZjRU1zYTBKQmEwWjRSQ3hQUVM5R01rTXNVVUZuUW5aRExGbEJRVUZQTEU5QlFVRXNkMEpCUlZGblJDeEZRVUUyUXl4UlFVRXZRaXhGUVVGQk1YbERMRXRCUVVzclJpeFJRVUZSWjNoRExGTkJRVk51UWl4cFFrRkJVeXhSUVVGSkxFVkJSV3BFTlRGRExFdEJRVXM0UkN4VFFVTk1PVVFzUzBGQlN6aEVMRkZCUVZFeWFFSXNVMEZGYWtKNmJFSXNTMEZCUzNNelF5eFZRVUZaTEVkQlJXcENkRE5ETEV0QlFVczRSQ3hSUVVGVk5FVXNVMEZCVTNOMFFpeGpRVUZqTEU5QlEzUkRhREpDTEV0QlFVczRSQ3hSUVVGUmVXcERMRWRCUVV0MmJrTXNTMEZCU3l0NFF5eFpRVU4yUWk5NFF5eExRVUZMTW01RExGTkJRVk1zYVVKQlJXUXNTVUZCU1RaUUxFVkJRVkU1ZFVNc1UwRkJVM04wUWl4alFVRmpMRTlCUTI1RGQyaENMRVZCUVUwNWVFTXNZVUZCWVN4aFFVRmpMRzFDUVVWcVF6RkdMRXRCUVVzNFJDeFJRVUZSZFd0RExGbEJRVmx0VUN4SFFVVjZRaXhKUVVGSlF5eEZRVUZYTDNWRExGTkJRVk56ZEVJc1kwRkJZeXhOUVVOMFEzbG9RaXhGUVVGVGJGRXNSMEZCUzNadVF5eExRVUZMZFRORExFOUJRMjVDUlN4RlFVRlRjRFZDTEZWQlFWVjBSU3hKUVVGSkxHRkJRV01zZFVKQlIzSkRMRWxCUVVzc1NVRkJTVFZhTEVWQlFWRXNSVUZCUjBFc1IwRkJVMGdzUzBGQlN5dEdMRkZCUVZGbmVFTXNVMEZCVTJoQ0xGbEJRV00xTVVNc1IwRkJVeXhGUVVGSFFTeEpRVUZUTEVOQlEyeEdMRWxCUVVsbk9VSXNSVUZCUzNvd1FpeFRRVUZUYzNSQ0xHTkJRV01zVFVGRGFFTnRTQ3hGUVVGSE9XVXNWVUZCVlhSRkxFbEJRVWtzWVVGRFlqSTBRaXhKUVVGblFuWjVReXhIUVVOb1FtYzVRaXhGUVVGSE9XVXNWVUZCVlhSRkxFbEJRVWtzVlVGSGNrSXNTVUZCU1RKeFFpeEZRVUZQTEVsQlFVbG5WQ3hIUVVGeFFpeERRVU5vUTNaSkxHVkJRV2RDYm5aRExFdEJRVXNyUml4UlFVRlJiM0JETEdWQlF6ZENhVWtzVVVGQlV5eFpRVU5VUkN4TFFVRk5MRWxCUTA1MlJ5eExRVUZOTEZWQlFVZDZkME1zUjBGRFZHc3pReXhoUVVGakxGTkJRVU0zU3l4SFFVVllMRWRCUkVGQkxFVkJRVVYyYmtJc2FVSkJRMFYxYmtJc1JVRkJSWG80UWl4clFrRkJhMEowVEN4aFFVTm9RaXhGUVVGTGMwSXNVVUZCVVRSNFF5eHBRa0ZCYTBJc1EwRkRMMElzU1VGQlNYZ3pReXhGUVVGUmNYTkRMRVZCUVVWNk9FSXNUMEZCVHpKTkxHRkJRV0VzWjBKQlEyeERMRVZCUVVzelZ5eFJRVUZSTkhoRExHbENRVUZwUW5KeFFpeFRRVUZUYm5SQ0xFbEJRM1pETEVWQlFVdDVNME1zWlVGQlpYb3pReXhQUVUxd1EzVnJReXhGUVVGTE9XbERMRXRCUVVzc1pVRkJaMElzVlVGQlIzcENMRWxCUXpkQ1NDeExRVUZMY3pORExGVkJRVlZ5YVVNc1MwRkJTM2wyUWl4SFFVTndRblpJTEVWQlFVZHJUQ3haUVVGWk0wUXNSVUZCU3pWblF5eFRRVU53UWpKNlF5eEZRVUZUY0ZBc1dVRkJXV3hNTEVkQlIzcENjV0VzUlVGQlRXNVFMRmxCUVZsdlVDeEpRVWQwUWl4WlFVRkJSeXhsUVVGQkxGTkJRV1Y2TTBNc1IwRkRXRWdzUzBGQlMzTXpReXhWUVVGVmJIbERMRk5CUVZFc1UwRkJRMnRETEVkQlEzQkNMRWxCUVVrMk1VSXNSVUZCU3pjeFFpeEZRVUZGZUVRc1VVRkJVV2RxUWl4UlFVRlJMR05CUTNSQ2NWY3NTVUZGUkRjeFFpeEZRVUZGT0M5Q0xGRkJRVkVzYTBKQlFXOUNhbTVETEVkQlExVXNTVUZCY0VObk9VSXNSVUZCUnpsbExGVkJRVlY0Vnl4VFFVRlRMRmRCUTNSQ2N6RkNMRVZCUVVjNVpTeFZRVUZWZEVVc1NVRkJTU3hWUVVkeVFtOXFRaXhGUVVGSE9XVXNWVUZCVlc5SUxFOUJRVThzWlVGTGFFTXNXVUZCUVc5NVFpeE5RVUZCTEZkQlEwa3NTVUZCU1dwdlF5eEZRVUZQTlZBc1MwRkJTemhFTEZGQlFWRTJTQ3hqUVVGakxFbEJRVTB6VEN4TFFVRkxkVE5ETEZGQlEycEVkak5ETEV0QlFVdHpNME1zVlVGQldTeEhRVWxxUWpGdVF5eEZRVUZMYTI5RExHMUNRVVZpTEVWQkwwWkJMRU5CUVRKRGRGQXNLMlJEUkRORExHVkJiMEpKTEZkQlFWbDZhVU1zUjBGQldpeE5RVU5KTEdOQlFVOHNXVUZEVUN4RlFVRkxaM2xETEZsQlFXTm9lVU1zUlVGQlVXZDVReXhaUVVNelFpeEZRVUZMUXl4WFFVRmhhbmxETEVWQlFWRnBlVU1zVjBGRk1VSXNSVUZCUzBNc1QwRkJVeXhMUVVOa0xFVkJRVXRETEZOQlFWY3NTMEZEYUVJc1JVRkJTMjV2UXl4UFFVRlRMRXRCUjJRc1JVRkJTekpwUXl4WlFVRmpMRVZCUTI1Q0xFVkJRVXQ1Uml4VFFVRlhMRXRCUTJoQ0xFVkJRVXRETEdGQlFXVXNTMEZEY0VJc1JVRkJTMVFzYVVKQlFXMUNMRTlCTmtSb1F5eFBRVGxHSzBNc1VVRjVRek5ETEZsQlFVRlZMRmRCUVVFc1UwRkJWM0JQTEVWQlFYTkRiVWtzU1VGSGFFSXNTVUZHYWtKdVNTeEZRVUZSTEVkQlJWWnhUeXhuUWtGUFJuUTBReXhMUVVGTE1IbERMRmxCUVdNeGVVTXNTMEZCUzI4MFF5eGhRVUZoY2tNc1lVRkRja042ZDBJc1VVRkJVVzl1UWl4SlFVRkpMSGxEUVVFd1F6RnpReXhMUVVGTE1IbERMRmxCUVdNc1IwRkRla1V4ZVVNc1MwRkJTekI1UXl4alFVTk1NWGxETEV0QlFVc3lNME1zYVVKQlFXbENNek5ETEV0QlFVc3dlVU1zWlVGTGRrTXNXVUZCUVRaR0xGRkJRVUVzVTBGQlVYUjJRaXhIUVVOS2FuQkNMRXRCUVVzclVDeFBRVUZUYTFvc1JVRkRaR3B3UWl4TFFVRkxhelJETEZOQlFWTkxMRkZCUVZGMGRrSXNTVUZITVVJc1dVRkJRWFYyUWl4VlFVRkJMRmRCUTBsNE5FTXNTMEZCUzJzMFF5eFRRVUZUVFN4VlFVRlZlRFJETEV0QlFVc3JVQ3hUUVVkcVF5eFpRVUZCTW5aQ0xFOUJRVUVzYzBKQlEwa3hMMElzUzBGQlMyazBReXhQUVVGVExHVkJRV2xDYWpSRExFdEJRVXNyTTBNc1dVRkJXWGhSTEVkQlJXaEVMRWxCUVVsclVpeEZRVUZoTDNaRExGTkJRVk56ZEVJc1kwRkJZeXhQUVVONFEzbHBRaXhGUVVGWGJGSXNSMEZCUzNadVF5eExRVUZMYVRSRExFOUJSWEpDVVN4RlFVRlhjRFpDTEZWQlFWVjBSU3hKUVVGSkxFMUJRVThzWVVGRmFFTXZXaXhMUVVGTGQzQkNMRXRCUVV0cGRrSXNSVUZCV1hvMFF5eExRVUZMS3pORExHRkJSVE5DTEVsQlEwbG9lVU1zUlVGQlZTeERRVU5XZWtjc1MwRkdUMjlLTEZOQlFWTnRORUlzWlVGQlpUZG5ReXhMUVVGTGFUUkRMRkZCUjNCRFV5eFhRVUZaTEUxQlExcERMRlZCUVZjc1IwRkRXRU1zYVVKQlFXbENMRWRCUjNKQ05UUkRMRXRCUVV0ck5FTXNVMEZCVnl4SlFVRkpWeXh6UWtGQmNVSXNVMEZCUXpWUExFVkJRVk50U1N4SFFVRlhMRk5CUVV0cFJ5eFhRVUZYY0U4c1JVRkJVMjFKTEV0QlFWTnljME1zUjBGRmFFY3NTVUZCU1N0NVF5eEZRVUZQT1RSRExFdEJRVXNyTTBNc1dVRkJXUzh3UWl4cFFrRkJhVUlzVFVGRmVrTnFWQ3hGUVVSVksyOURMRVZCUVV0QkxFVkJRVXN2YTBNc1QwRkJVeXhIUVVkcVF5OVVMRXRCUVV0MU5FTXNVVUZCVVhodlF5eEpRVVZ5UWl4RlFUbEdRU3hEUVVFclEzazBRaXdyWkVORUwwTXNaVUZEU1N4dFFrRkRTU3hqUVVGUExGbEJRMUFzUlVGQlMydElMRmRCVjJJc1QwRmtkVU1zVVVGTmJrTXNXVUZCUVVFc1QwRkJRU3hYUVVOSk1YWkRMRXRCUVVzNFJDeFJRVUZWTkVVc1UwRkJVM04wUWl4alFVRmpMRXRCUTNSRGFESkNMRXRCUVVzNFJDeFJRVUZSZFdFc1ZVRkJWWFJGTEVsQlFVa3NTMEZCVFN4cFFrRkJhMElzWlVGSGRrUXNXVUZCUVhWMVFpeE5RVUZCTEZkQlEwa3NUMEZCVHl4WlFVRk5RU3hOUVVGTExGbEJSVEZDTEVWQlpFRXNRMEZCZFVORkxDdGtRME4yUXl4bFFVVkpMRzFDUVVOSkxHTkJRVThzV1VGRFVDeEZRVUZMYTBnc1YwRnBSR0lzVDBGeVJIZERMRkZCVDNCRExGbEJRVUZCTEU5QlFVRXNWMEZEU1RGMlF5eExRVUZMT0VRc1VVRkJWVFJGTEZOQlFWTnpkRUlzWTBGQll5eFBRVU4wUTJneVFpeExRVUZMTW01RExGTkJRVk1zTUVKQlIyeENMRmxCUVVGdlVpeFZRVUZCTEZOQlFWVjRVaXhGUVVGWmNHdENMRVZCUVdOdmRVSXNSVUZCWTNCNVFpeEZRVUZyUTNaaExGRkJRVUVzU1VGQlFVRXNTVUZCUVVFc1JVRkJRU3hKUVVOb1JpeEpRVUZKWjNKRExFVkJRVTAxZGtNc1MwRkJTMmMxUXl4VlFVRlZlbElzUlVGQlNYQnJRaXhGUVVGTmIzVkNMRVZCUVUwemMwTXNSMEZIZWtNc1QwRkdRV2R5UXl4RlFVRkpOa0lzWjBKQlFXZENkSGxDTEVkQlEzQkNibVlzUzBGQlMya3lRaXhQUVVGUE1sb3NSMEZCU3l4SFFVTldOWFpETEUxQlRWZ3NXVUZCUVdrMVF5eG5Ra0ZCUVN4VFFVRm5RamsxUWl4SFFVTmFMRTlCUVU5dVppeExRVUZMS3pSRExGVkJRVlVzWlVGQlowSXNVMEZCVlN4UlFVRlROVFZDTEVWQlFWVXNWMEZOZGtVc1dVRkJRU3MxUWl4dFFrRkJRU3hUUVVGdFFpODFRaXhIUVVObUxFOUJRVTl1Wml4TFFVRkxLelJETEZWQlFWVXNXVUZCWVN4VlFVRlhMR05CUVdVMU5VSXNSVUZCVlN4UlFVY3pSU3haUVVGQlp6WkNMSE5DUVVGQkxGZEJRMGtzU1VGQlNYWktMRVZCUVUwMWRrTXNTMEZCUzJjMVF5eFZRVUZWTEdOQlFXVXNWVUZCVnl4UFFVRlJMRmxCU1RORUxFOUJTRUZ3U2l4RlFVRkphSFZETEV0QlFVc3NhVUpCUVd0Q0xGTkJRek5DWjNWRExFVkJRVWxvZFVNc1MwRkJTeXhwUWtGQmEwSXNNRUpCUVcxQ05VSXNTMEZCUzIxMlF5eHBRa0ZEYmtSdWRrTXNTMEZCUzJreVFpeFBRVUZQTWxvc1IwRkJTeXhIUVVOV05YWkRMRTFCUjFnc1dVRkJRV2MxUXl4VlFVRkJMRk5CUVZWNlVpeEZRVUZaY0d0Q0xFVkJRV052ZFVJc1JVRkJZek56UXl4SFFWVTVReXhQUVZKVkxFbEJRVWs0YzBNc1IwRkJhMElzUTBGRE5VSTFSU3hsUVVGblFqbHpReXhMUVVGTGJYWkRMR1ZCUTNKQ09FSXNVVUZCVXl4cFEwRkJNRUk1ZEVJc1JVRkJTU3gzUWtGRGRrTXljMElzVlVGQlZ5eFZRVUZIZGtrc1JVRkJSU3haUVVGSmRtNURMRXRCUVV0dGRrTXNaMEpCUTNwQ2JVTXNTMEZCVFVNc1JVRkRUblpDTEUxQlFVOXdja01zUzBGTGJrSXNSVUZ5UkVFc1EwRkJkME0wYWtNc0syUkRSWGhETEdWQlVVa3NWMEZCV1hwcFF5eEhRVUZhTEUxQlEwa3NZMEZCVHl4WlFVcFlMRVZCUVVGeGVrTXNUVUZCTWtJc1IwRkxka0lzUlVGQlMzSjZReXhSUVVGVlFTeEZRVU5tTEVWQlFVc3ljRU1zVjBGelMySXNUMEZxVEc5RExGRkJZMmhETEZsQlFVRkJMRTlCUVVFc1YwRkRVekYyUXl4TFFVRkxPRVFzVlVGRFRqbEVMRXRCUVVzNFJDeFJRVUZWTkVVc1UwRkJVM04wUWl4alFVRmpMRkZCUlZZc1NVRkJOVUpvTWtJc1MwRkJTeXRHTEZGQlFWRnpla01zVjBGRFluSTFReXhMUVVGTE1tNURMRk5CUVZNc1lVRkRWRUVzVTBGQlV5eGhRVWRrTTI1RExFdEJRVXN5YmtNc1UwRkJVeXhoUVVkcFFpeEpRVUV2UWpOdVF5eExRVUZMSzBZc1VVRkJVWFY2UXl4blFrRkZZblExUXl4TFFVRkxjVW9zU1VGQlRTeERRVUZGTEZGQlFWY3NVVUZEZUVKeVNpeExRVUZMTUhwRExGTkJRVlVzU1VGTGRrSXNjMEpCUVVrc01FSkJRVmNzUzBGQlppeFhRVU5KTEU5QlFVOHhla01zUzBGQlMyOXVReXhSUVVGUkxIbENRVWQ0UWl4VFFVRm5RbTUxUWl4SFFVTmFhbG9zUzBGQlN6UkNMRXRCUVVzc2JVSkJRVzlDY1Znc2IwTkJUMnhETEZsQlFVRnpaME1zVVVGQlFTeFRRVUZSUXl4SFFVTktlRFZETEV0QlFVczRSQ3hSUVVGUmJYbENMRTlCUVU5MWFrSXNSVUZCU3pFeFF5eFRRVU42UWpsRUxFdEJRVXR2TlVNc1RVRkJUVzVyUXl4TFFVRkxkV3RETEVsQlRYQkNMRmxCUVVGRExGTkJRVUVzVTBGQlUwd3NSMEZCVkN4WFFVTkpRU3hGUVVGTmFEQkRMRk5CUVZFc1UwRkJRMjh3UXl4SFFVRlRMRk5CUVV0RUxGRkJRVkZETEU5QlIzcERMRmxCUVVGRkxGTkJRVUVzVjBGRFNURTFReXhMUVVGTE5tNURMRmxCUVZrc1owSkJRMXBHTEZOQlFWTXNhVUpCUjJ4Q0xGbEJRVUZ0VFN4VlFVRkJMRmRCUlVrc1NVRkJaME1zU1VGQk5VSTVla01zUzBGQlN5dEdMRkZCUVZGemVrTXNWMEZCY1VJc1RVRkJUeXhIUVVVM1F5eEpRVUZKTlVRc1JVRkJOa0lzUjBGTmFrTXNUMEZLUVhveFF5eExRVUZMYnpWRExFMUJRVTFvTUVNc1UwRkJVU3hUUVVGRGJ6QkRMRVZCUVUxSExFZEJRM1JDTEVsQlFVbERMRVZCUVZkS0xFVkJRVXRvUlN4dFFrRkRjRUpETEVWQlFWTkJMRVZCUVU5MmVVTXNUMEZCVHpBeVF5eE5RVVZ3UW01RkxFZEJSMWdzV1VGQlFXOUZMR1ZCUVVFc1UwRkJaWEpOTEVWQlFXbERPRWdzUjBGTE5VTXNUMEZJUVRsSUxFVkJRVTFXTEdWQlFXbENPWE5ETEV0QlFVc3JSaXhSUVVGUmIzQkRMR1ZCUTNCRE0wSXNSVUZCVFN0SUxGZEJRV0ZFTEVWQlEyNUNPVWdzUlVGQlRXOUZMRmxCUVdNMWVFTXNTMEZCU3l0R0xGRkJRVkZuYzBNc1dVRkRNVUlzU1VGQlNUUkVMRWRCUVdkQ2Jra3NSMEZCVHl4SlFVMTBReXhaUVVGQmMwMHNaMEpCUVVFc1UwRkJaMEowVFN4SFFVTmFMRTlCUVU4c1NVRkJTVzFKTEVkQlFXZENia2tzUjBGQlR5eEpRVWQwUXl4WlFVRkJkVTBzYVVKQlFVRXNWMEZGU1N4UFFVUmhMelZETEV0QlFVczRla01zV1VGRFNuQnhReXhSUVVGUExGTkJRVU50YlVNc1IwRkJWU3hQUVVGclFpeEpRVUZzUWtFc1JVRkJUVFpFTEZsQlR6RkRMRmxCUVVGelJ5eGpRVUZCTEZkQlEwa3NTVUZCU1VNc1JVRkJXV28yUXl4TFFVRkxPSHBETEZsQlEycENiMGNzUlVGQlV5eEhRVXRpTEU5QlNrRkVMRVZCUVZVM01FTXNVMEZCVVN4VFFVRkRLekJETEVWQlFWVjZiRU1zUjBGRGVrSXNTVUZCU1RCc1F5eEZRVUZsUkN4RlFVRlRjREJETEZGQlFWRm5jVU1zVlVGRGNFTnRTeXhGUVVGUFJTeEhRVUZuUWtRc1MwRkZjRUpFTEVkQlIxZ3NjMEpCUVVrc2IwSkJRVXNzUzBGQlZDeFhRVU5KTEU5QlFXMURMRWxCUVRWQ2JEWkRMRXRCUVVzclJpeFJRVUZSYzNwRExGZEJRWE5DTEU5QlFWTXNkME5CU1haRUxITkNRVUZKTEhWQ1FVRlJMRXRCUVZvc1YwRkRTU3hKUVVGSlowSXNSVUZCVjNJMlF5eExRVUZMYjI1RExGRkJRVkZ3YmtNc1MwRkJTM00yUXl4TlFVRlJMR0ZCUTNwRExFOUJRVTlvZEVJc1UwRkJVeXR6UWl4UlFVZHdRaXhUUVVGaGJEWkRMRWRCUTFSSUxFdEJRVXMwUWl4TFFVRkxOVUlzUzBGQlMzTTJReXhOUVVGUkxGbEJRV0Z1TmtNc2IwTkJUM2hETEZsQlFVRnZOa01zVjBGQlFTeFhRVU5KTEVsQlFVbE9MRVZCUVZscU5rTXNTMEZCU3poNlF5eFpRVU5xUW05SExFVkJRVk1zUjBGRFZFMHNSVUZCVTNnMlF5eExRVUZMZVRaRExGbEJVMnhDTEU5QlVrRlFMRVZCUVc5Q0xGbEJRVWxOTEVWQlJYaENVQ3hGUVVGVk56QkRMRk5CUVZFc1UwRkJReXN3UXl4RlFVRlZlbXhETEVkQlEzcENMRWxCUVVrd2JFTXNSVUZCWlVRc1JVRkJVM0F3UXl4UlFVRlJaM0ZETEZWQlEzQkRiVXNzUlVGQlQwVXNSMEZCWjBKRUxFVkJRVk16ZVVJc1QwRkZjRU13ZVVJc1JVRkJkMElzWjBKQlFVbHNOa01zUzBGQlMzRTJReXhUUVVVeFFrZ3NSMEZIV0N4elFrRkJTU3g1UWtGQlZTeExRVUZrTEZkQlEwa3NUVUZCZDBNc1UwRkJha05zTmtNc1MwRkJTMjl1UXl4UlFVRlJMSEZDUVVkNFFpeFRRVUZsTldZc1IwRkRXSGh1UWl4TFFVRkxORUlzUzBGQlN5eG5Ra0ZCZDBJc1NVRkJValJzUWl4RlFVRmxMRTlCUVZNc01FTkJUM1JFTEZsQlFVRTRaMElzVFVGQlFTeFhRVXRKTEVsQlFVbHZVeXhGUVVGakxGbEJRVTF3VXl4TlFVRkxMRmRCUlhwQ2NWTXNSVUZCZVVJek5rTXNTMEZCU3pKdlF5eFJRVUZSTTI5RExFdEJRVXNyUml4VFFVTXZRelF3UXl4RlFVRlRja0lzWlVGQlowSXNSVUZEZWtJc1NVRkJTWE5DTEVWQlFWY3NTVUZCU1VNc1JVRkJaVVlzUjBGVGJFTXNUMEZTUVVNc1JVRkJVemt5UXl4UlFVRlZOREpETEVWQlFWazFNa01zVVVGREwwSTRNa01zUlVGQlUzUjVRaXhUUVVGWGIzbENMRVZCUVZsd2VVSXNVMEZEYUVOemVVSXNSVUZCVTNoQ0xFMUJRVkZ3TlVNc1MwRkJTMjgxUXl4TlFVRk5NUzlDTEV0QlFVa3NVMEZCUTFRc1IwRkROMElzU1VGQlNUWm9ReXhGUVVGWk4yaERMRVZCUVVWeGRrSXNVVUZGYkVJc1QwRkVRWE5UTEVWQlFWTTVNa01zVVVGQlVXMTVRaXhQUVVGUE5tdENMRVZCUVZWb00wTXNVMEZETTBKbk0wTXNTMEZIU2tZc1IwRkpaaXhGUVdwTVFTeERRVUZ2UTNCVExDdGtRMFp3UXl4bFFVMUpMRzFDUVVOSkxHTkJRVThzV1VGSVdDeEZRVUZCYzFFc1MwRkJlVUlzUzBGblF6ZENMRTlCY0VNNFF5eFJRV014UXl4WlFVRkJhVU1zVDBGQlFTeFRRVUZQUXl4SFFVTklhRGRETEV0QlFVdHBNa0lzVDBGQlR5dHJRaXhIUVVOYUxFbEJRVWszTmtNc1JVRkJVVWdzUzBGQlMyazNReXhyUWtGRGFrSkVMRVZCUVVsWUxGTkJRVmRzTmtNc1JVRkZaaXhKUVVGSmJUWkRMRWRCUVcxRExFbEJRVE5DVlN4RlFVRkphakZETEZGQlFWRnpla01zVjBGQmMwSXNUMEZCVXl4UFFVZDJSQ3hQUVVaQk1rSXNSVUZCU1hwVUxFZEJRVXNzVlVGQlIzbFVMRVZCUVVscU1VTXNVVUZCVVdselF5eFBRVUZOTEZsQlFVbHpTU3hGUVVGTExGbEJRVWx1TmtNc1IwRkRNME5JTEV0QlFVczRORU1zUzBGQlN6ZHFReXhMUVVGTEsyeERMRWRCUTFKb04wTXNUVUZIV0N4WlFVRkJhemRETEdWQlFVRXNWMEZEU1N4UFFVRlBiRGRETEV0QlFVczRORU1zUzBGQlMzQjJReXhSUVVGUExGTkJRVU56ZUVNc1IwRkJVU3hQUVVGblFpeEpRVUZvUWtFc1JVRkJTWFJJTEZsQlIzcERMRmxCUVVGMVNDeG5Ra0ZCUVN4WFFVTkpMRTlCUVU5cU4wTXNTMEZCU3pnMFF5eExRVUZMTDJ0RExFOUJRVk1zUjBGSE9VSXNXVUZCUVc5dVF5eHBRa0ZCUVN4WFFVTkpMRTlCUVU5dU4wTXNTMEZCU3pnMFF5eExRVUZMZEdwRExFMUJRVXNzVTBGQlEzZHNReXhIUVVGUkxFOUJRVEpDTEVsQlFUTkNRU3hGUVVGSmFqRkRMRkZCUVZGemVrTXNaVUZGYmtRc1JVRndRMEVzUTBGQk9FTTNVU3dyWkVORU9VTXNaVUZIU1N4dFFrRkRTU3hqUVVGUExGbEJRMUFzUlVGQlMydElMRmRCVDJJc1QwRmFkVU1zVVVGUmJrTXNXVUZCUVVFc1QwRkJRU3hYUVVOSk1YWkRMRXRCUVVzNFJDeFJRVUZWTkVVc1UwRkJVM04wUWl4alFVRmpMRk5CUTNSRGFESkNMRXRCUVVzeWJrTXNVMEZCVXl4blFrRkZkRUlzUlVGYVFTeERRVUYxUTNsVUxDdGtRMGQyUXl4bFFVVkpMRzFDUVVOSkxHTkJRVThzV1VGRFVDeEZRVUZMTVV3c1YwRXJSMklzVDBGdVNIRkRMRkZCVDJwRExGbEJRVUZCTEU5QlFVRXNWMEZEU1RGMlF5eExRVUZMT0VRc1VVRkJWVFJGTEZOQlFWTnpkRUlzWTBGQll5eFZRVWN4UXl4WlFVRkJkVm9zWjBKQlFVRXNVMEZCWjBKRExFVkJRVzFDUXl4SFFVTXZRbkpFTEVkQlFXdENWeXhMUVVGTGVVTXNSVUZCVjNoMlF5eExRVUZOZVhaRExFbEJUVFZETEZsQlFVRTBUQ3haUVVGQkxGTkJRVmxNTEVkQlExSXNUMEZCVDJnM1F5eExRVUZMT0RSRExFdEJRVXR3ZGtNc1VVRkJUeXhUUVVGRGRWQXNSVUZCUjNaRkxFZEJRM2hDTEVkQlFVbDFSU3hKUVVGTksyaERMRVZCUTA0c1QwRkJUeTlvUXl4TlFVOXVRaXhaUVVGQmVXZERMRk5CUVVFc1UwRkJVM05DTEVkQlNVeEJMRVZCUVVsMFFpeFhRVU5YTVRWRExFdEJRVXR4TjBNc1dVRkJXVXdzUjBGRGRrSTFNVU1zVTBGQlVTeFRRVUZETmxRc1JVRkJSM1pGTEVkQlFVMHNUMEZCUVhWRkxFVkJRVVUwZFVJc1dVRkJXU3h2UWtGSE4wTXNXVUZCUVhsVUxHVkJRVUVzVjBGRFNTeFBRVUZQZERkRExFdEJRVXM0TkVNc1MwRkJTM1JxUXl4TlFVRkxMRk5CUVVONVJDeEhRVUZOTEU5QlFUUkNMRWxCUVRWQ1FTeEZRVUZGYkZRc1VVRkJVWFY2UXl4clFrRkhNME1zV1VGQlFXbERMR0ZCUVVFc1YwRkRTU3hQUVVGUGRqZERMRXRCUVVzNE5FTXNTMEZCUzNCMlF5eFJRVUZQTEZOQlFVTnplRU1zUjBGQlVTeFBRVUZ0UWl4SlFVRnVRa0VzUlVGQlNWRXNaVUZIZWtNc1dVRkJRVU1zWjBKQlFVRXNWMEZEU1N4SlFVRkpReXhGUVVGWk1UZERMRXRCUVV0MU4wTXNaVUZGY2tJc1IwRkJlVUlzU1VGQmNrSkhMRVZCUVZVemJrTXNUMEZEVml4TlFVRlBMRWRCUlZnc1NVRkJTVFJ1UXl4RlFVRlZMRWRCUzJRc1QwRktRVVFzUlVGQlZYUXlReXhUUVVGUkxGTkJRVU0wTVVNc1JVRkJTM1J0UXl4SFFVTndRbWx1UXl4RlFVRlJNVzFETEV0QlFVc3JiRU1zUlVGQlNWUXNhVUpCUjJSdlFpeEhRVWRZTEZsQlFVRkRMR05CUVVFc1YwRkxTU3hKUVVGSk9VTXNSVUZCVHprMFF5eExRVUZMT0RSRExFdEJRVXR3ZGtNc1VVRkJUeXhUUVVGRGMzaERMRWRCUVZFc1QwRkJPRUlzU1VGQk9VSkJMRVZCUVVscU1VTXNVVUZCVVhWNlF5eHBRa0ZETjBOeFF5eEZRVUZWTEVkQlMyUXNUMEZLUVRkRExFVkJRVXN4ZWtNc1UwRkJVU3hUUVVGRE5ERkRMRWRCUTFaWExFVkJRVkV4YlVNc1MwRkJTeXRzUXl4RlFVRkpWQ3hwUWtGSFpHOUNMRWRCUjFnc1dVRkJRVGxJTEdWQlFVRXNWMEZEU1N4UFFVRlBOM3BETEV0QlFVczRORU1zUzBGQlMzUnFReXhOUVVGTExGTkJRVU41UkN4RlFVRkhka1VzUjBGQlRTeFBRVUVyUWl4SlFVRXZRblZGTEVWQlFVVTJkVUlzVTBGQlV5eHZRa0ZITDBNc1dVRkJRU3RVTEZsQlFVRXNWMEZEU1N4SlFVRkpZaXhGUVVGTmFEZERMRXRCUVVzMmVrTXNhVUpCUTJZc1IwRkJTMjFJTEVWQlFVd3NRMEZIUVN4SlFVRkpkbElzUlVGQlYzcHdReXhMUVVGTGNUZERMRmxCUVZsTUxFZEJRelZDWXl4RlFVRmpjbE1zUlVGQlUwRXNSVUZCVXpFeFFpeFBRVUZUTEVkQlF6ZERhVzVETEVWQlFVbHVWQ3haUVVGWkxHZENRVU5vUW0xVUxFVkJRVWxSTEZsQlFXRXNSVUZEYWtKU0xFVkJRVWt6ZUVNc1NVRkJUU3hEUVVGRkxGRkJRVmNzVVVGRGRrSXllRU1zUlVGQlNYUklMRk5CUVZVc1JVRkZaQ3hKUVVGSk9FY3NSVUZCVTFFc1JVRkJTVkFzV1VGRllrOHNSVUZCU1ZBc1dVRkVUeXhWUVVGWVJDeEZRVU5yUWl4blFrRkhRU3hWUVVkMFFuZzJReXhMUVVGTGRYWkRMR2RDUVVGblFuWkRMRWRCUVdOMFFpeG5Ra0ZCYVVJc1EwRkJSVzlDTEdWQlFXZENhMDhzUlVGQlNXb3hReXhSUVVGUmIzQkRMR1ZCUVdkQ2RrTXNWVUZCVnl4RFFVRkZlblpDTEUxQlFVODJPVUlzUzBGRmRFaG9OME1zUzBGQlN6QTFReXhUUVVGVGIwTXNTMEZQYkVJc1dVRkJRVU1zVlVGQlFTeFRRVUZWWml4SFFVZE9RU3hGUVVGSmJETkRMRkZCUVZFeWFFSXNVMEZGV2l4SlFVRkpkR3hDTEVWQlFWRklMRXRCUVVzNE5FTXNTMEZCUzNSM1F5eFJRVUZSZDNsRExFZEJRekZDTnpaRExFZEJRVk1zUjBGRFZFZ3NTMEZCU3pnMFF5eExRVUZMYTBRc1QwRkJUemMzUXl4RlFVRlBMRWxCUlhCRExFVkJia2hCTEVOQlFYRkRhVGRETEd0eFFrTjVRbkpETEdWQldVa3NWMEZCV1hJeFF5eEhRVUZhTEUxQlEwa3NZMEZCVHl4WlFVVlFMRVZCUVV0QkxGRkJRVlZCTEVWQlEyWXNSVUZCUzJzeVF5eExRVUZQTEVsQlFVbERMRWRCUTJoQ0xFVkJRVXQ0YzBNc1MwRkJUeXhKUVVGSmVYTkRMRWRCUTJoQ0xFVkJRVXRETEZWQlFWa3NTVUZCU1VNc1IwRkJjMElzUTBGRGRrTnNUaXhsUVVGblFpeEZRVUZMY0hCRExGRkJRVkU0YzBNc1YwRkJWMnAxUXl4TFFVTjRReXQ1UXl4cFFrRkJhMElzVTBGQlF6SkZMRWRCUVZNc1UwRkJTME1zYTBKQlFXdENSQ3hOUVVkMlJDeEZRVUZMZEVVc1YwRkJZU3hKUVVGSmQwVXNSMEZCYzBJc1JVRkJTM295UXl4UlFVRlJPSE5ETEZkQlFWZHFkVU1zUzBGQlRTeEZRVUZMYlVJc1VVRkJVVEF5UXl4blFrRkZka1lzUlVGQlMyaExMR2xDUVVGdFFpeExRVU40UWl4RlFVRkxaMElzV1VGQll5eExRVU51UWl4RlFVRkxhVW9zWTBGQlpTeEZRVU53UWl4RlFVRkxReXhwUWtGQmJVSnFNRU1zVTBGQlUyMDBRaXhsUVVGbExFVkJRVXM1TmtJc1VVRkJVV2R6UXl4bFFYRXhRM0pGTEU5QmFqTkRhVU1zUjBGQlFYVkNMRVZCUVVFc1IwRXJRblJDTEVWQlFVRnpTaXhQUVVGUUxGTkJRV051TDBJc1MwRkpaQ3haUVVGQk9IaENMR2RDUVVGQkxGTkJRV2RDUXl4RlFVRnRRa01zUjBGREwwSnlSQ3hIUVVGclFsY3NTMEZCUzNsRExFVkJRVmQ0ZGtNc1MwRkJUWGwyUXl4SlFVYzFReXhaUVVGQmIwNHNaMEpCUVVFc1YwRkRTV3BQTEVkQlFUUkNSU3hKUVVGSk9YVkRMRTlCUjNCRExITkNRVUZKTERaQ1FVRmpMRXRCUVd4Q0xGZEJRMGtzVDBGQlQwRXNTMEZCU3l0R0xGRkJRVkU0YzBNc1YwRkJWMnAxUXl4elEwRkhia01zYzBKQlFVa3NlVUpCUVZVc1MwRkJaQ3hYUVVOSkxFOUJRVTgxUlN4TFFVRkxLMFlzVVVGQlVYRjBReXcwUTBGSGVFSXNjMEpCUVVrc01rSkJRVmtzUzBGQmFFSXNWMEZEU1N4UFFVRlBjSHBETEV0QlFVc3dVQ3hMUVVGTEszSkRMRzFFUVVkeVFpeHpRa0ZCU1N4NVFrRkJWU3hMUVVGa0xGZEJRMGtzVDBGQlQzbzNReXhMUVVGTE1GQXNTMEZCUzJ0elF5eHBSRUZOY2tJc1dVRkJRVmNzYTBKQlFVRXNVMEZCYTBKRUxFZEJSV1IwT0VNc1MwRkJTeko1UXl4alFVRmpNa29zU1VGSGRrSXNXVUZCUVZFc1lVRkJRU3hYUVVOSk9UaERMRXRCUVVzNFJDeFJRVUZSYlhsQ0xFOUJRVTlxTWtJc1MwRkJTMms0UXl4TFFVRkxialJETEZWQlIyeERMRmxCUVVGcE5VTXNWMEZCUVN4WFFVTkpMemhETEV0QlFVczRSQ3hSUVVGUmJYbENMRTlCUVU5cU1rSXNTMEZCU3pCUUxFdEJRVXMxVEN4VlFVZHNReXhaUVVGQmF6VkRMR2RDUVVGQkxGTkJRV2RDYUV3c1IwRkRXaXhKUVV0SkxFOUJTRzFDY0Vrc1IwRkJZVkVzVVVGQlVUUklMRWRCU3pGRExFMUJRVTk2YzBJc1IwRkZUQ3haUVVSQlJDeFJRVUZSYjI1Q0xFbEJRVWx1YmtJc1MwRkxjRUlzV1VGQlFXbDFRaXhQUVVGQkxITkNRVVZKZUhwRExFdEJRVXM0UkN4UlFVRlZORVVzVTBGQlUzTjBRaXhqUVVGakxGTkJRM1JEYURKQ0xFdEJRVXM0UkN4UlFVRlJkV0VzVlVGQlZYUkZMRWxCUVVrc1VVRkJVeXhwUWtGQmEwSXNZMEZEYUVRc1YwRkJXU3haUVVGaExGZEJRVmtzVTBGQlZTeFpRVWR5UkM5YUxFdEJRVXQxYmtNc1IwRkJTM1p1UXl4TFFVRkxLMFlzVVVGQlVXbHpReXhQUVVOMlFtaDVReXhMUVVGTE5FSXNTMEZCU3l4clFrRkJiVUkxUWl4TFFVRkxLMFlzVVVGQlVUaHpReXhYUVVGWGFuVkRMRTFCUlhKRUxFbEJRVWx4TkVNc1JVRkJWMm81UXl4TFFVRkxaemxETEdkQ1FVRm5RbWc1UXl4TFFVRkxLMFlzVVVGQlVXbHpReXhUUVVGWExFZEJRelZFYUhsRExFdEJRVXR4U2l4SlFVRk5MRU5CUVVVc1RVRkJVeXhYUVVWMFFpeEpRVUZKTm5wRExFVkJRV2RDTEVsQlFVbHlReXhIUVVGbExFTkJRMjVETVV3c1pVRkJaMEp1ZGtNc1MwRkJTeXRHTEZGQlFWRTRjME1zVjBGQlYycDFReXhMUVVONFEyOTBReXhQUVVGUmFIbERMRXRCUVVzclJpeFJRVUZSYVhORExFOUJRM0pDY1Vnc1dVRkJXU3hKUVVkYU9FUXNSVUZCVlN4SlFVRkpkRU1zUjBGQlpTeERRVU0zUW5aQ0xHVkJRV1VzUlVGRFptNUxMR1ZCUVdkQ2JuWkRMRXRCUVVzclJpeFJRVUZST0hORExGZEJRVmRxZFVNc1MwRkRlRU52ZEVNc1QwRkJVV2g1UXl4TFFVRkxLMFlzVVVGQlVXbHpReXhQUVVOeVFrUXNXVUZCWVM5NFF5eExRVUZMSzBZc1VVRkJVV2R6UXl4alFVY3hRbkZNTEVWQlFXTndPVU1zUzBGQlMzRTVReXhwUWtGQmFVSktMRWRCUzNCRFN5eEZRVUZMTEVsQlFVa3pTQ3hIUVVGblFpeEpRVUZKTEVkQlJUZENORWdzUlVGQlV5eEpRVUZKUXl4SFFVTmlReXhGUVVGTExFbEJRVWs1U0N4SFFYbEVZaXhIUVhoRVFUaElMRVZCUVVkNGJrSXNUMEZCVDNOdVFpeEhRVVZXVEN4RlFVRmpNMFFzVVVGQlVTdEVMRWRCUTNSQ1NDeEZRVUZSTlVRc1VVRkJVV3RGTEVkQlJXaENUQ3hGUVVGWmFEUkRMRk5CUVZFc1UwRkJRM00wUXl4SFFVOXFRaXhIUVVGTFFTeEZRVUZITjBrc1UwRkJVaXhEUVVWQkxFbEJRVWs0U1N4RlFVRmpWaXhGUVVGVFV5eEZRVUZITjBrc1ZVRkZNVUlyU1N4RlFVRkxWaXhGUVVGamNFUXNaMEpCUVdkQ05FUXNSMEZEYmtOSExFVkJRVXRXTEVWQlFWRjBSQ3hsUVVGbE5rUXNSVUZCU1N4RlFVRkxlRThzV1VGTGVrTXNSVUZCU3pSUExGZEJRVmRHTEVkQlEyaENMRVZCUVV0SExHbENRVUZwUWtnc1JVRkJTVVFzUjBGRE1VSXNSVUZCUzBrc2FVSkJRV2xDUml4RlFVRkpSaXhIUVVNeFFsUXNSVUZCWXpORUxGRkJRVkZ4UlN4SFFVTjBRbFFzUlVGQlVUVkVMRkZCUVZGelJTeFBRVWR3UWpjNVF5eExRVUZMYVRoRExFdEJRVXRzUWl4UFFVRlBiVU1zUjBGRGFrSnNPVU1zUzBGQlN6QlFMRXRCUVV0eGNrTXNUMEZCVDI5RExFZEJTMnBDYmpsRExFdEJRVXRuSzBNc1owSkJTMHhvSzBNc1MwRkJTemc0UXl4bFFVTk1PVGhETEV0QlFVc3JPRU1zWVVGTFRDODRReXhMUVVGTE1qaERMR2xDUVVGcFFuUlZMRmxCUVZseWIwTXNTMEZCU3poRUxGTkJTM1pET1VRc1MwRkJTMmtyUXl4dlFrRkxSR29yUXl4TFFVRkxLMFlzVVVGQlVUaHpReXhYUVVGWGFHeERMRXRCUVUwc1EwRkRPVUlzU1VGQlNVRXNSVUZCVHpkT0xFdEJRVXNyUml4UlFVRlJPSE5ETEZkQlFWZG9iRU1zUzBGQlMzTnhReXhUUVVOd1F5dEdMRVZCUVZGc0swTXNTMEZCU3l0R0xGRkJRVkU0YzBNc1YwRkJWMmhzUXl4TFFVRkxhM0JETEZOQlIzSkRiMGdzUlVGQmNVTXNRMEZEY2tOeVVpeGxRVUZuUWpselF5eExRVUZMSzBZc1VVRkJVVGh6UXl4WFFVRlhhblZETEV0QlFVMW5iME1zVlVGQlZ5eERRVU55UkhwdVFpeExRVUZOZEZnc1JVRkRUbWR3UXl4VFFVRlZjVWdzU1VGSGJFSnNLME1zUzBGQlMzVjJReXhuUWtGQlowSjJReXhIUVVGamVrSXNjVUpCUVhOQ05GTXNSMEZwUWpkRUxFOUJWa0Z1SzBNc1MwRkJTM1YyUXl4blFrRkJaMEoyUXl4SFFVRmpiRUlzYlVKQlF5OUNMRU5CUTBsblFpeGxRVUZuUWpselF5eExRVUZMSzBZc1VVRkJVVGh6UXl4WFFVRlhhblZETEV0QlEzaERaMjlETEZWQlFWY3NUVUZIVHl4SlFVRjBRalZ6UXl4TFFVRkxNRGhETEdOQlEwd3hPRU1zUzBGQlN6WTRReXhyUWtGSFJqYzRReXhOUVVkWUxGbEJRVUZwSzBNc2EwSkJRVUVzZFVKQlF6aERMRWxCUVhSRGFpdERMRXRCUVVzclJpeFJRVUZSYzNSRExIVkNRVU5pY25wRExFdEJRVXQ1ZVVNc2FVSkJRVzFDTEVsQlFVa3lUQ3hIUVVFd1FpeERRVUZGY2tjc1dVRkJZUzh6UXl4TFFVRkxPRVFzVVVGQlUyc3dReXhYUVVGWmFEUkRMRXRCUVV0bk5FTXNZVUZEY0Vkb05FTXNTMEZCUzNsNVF5eHBRa0ZCYVVKclJpeHBRa0ZCYlVJc1UwRkJRekpGTEVkQlFWTXNVMEZCUzBNc2EwSkJRV3RDUkN4SlFVTXhSWFE0UXl4TFFVRkxlWGxETEdsQ1FVRnBRaTlUTEZkQlNUbENMRmxCUVVGelpTeGpRVUZCTEhOQ1FVTkphQ3RETEV0QlFVdDVla01zV1VGQll5eEpRVUZKTkVzc1IwRkRka0p5SzBNc1MwRkJTM2w2UXl4WlFVRlpkRVVzWlVGQmFVSnVka01zUzBGQlN5dEdMRkZCUVZFNGMwTXNWMEZCVjJwMVF5eExRVU14UkRWRkxFdEJRVXQ1ZWtNc1dVRkJXWGxHTEc5Q1FVRnRRaXhUUVVGRE1VMHNSMEZCVFN4VFFVRkxPRklzYVVKQlF6TkRja1lzYVVKQlFXZENMRk5CUVVONlRTeEhRVUZOTEZOQlFVczVPRUlzUzBGQlMyMXpReXhwUWtGRGFrTXhReXgzUWtGTFRHNDFReXhMUVVGTE1qaERMR2xDUVVGcFFuUlZMRmxCUVZseWIwTXNTMEZCUzNsNlF5eFpRVUZaTTNaRExGVkJUM1pFTEZsQlFVRm5Oa01zVjBGQlFTeFRRVUZYUml4SFFVbFFMRWxCUVVsNlZ5eEZRVUZSYm01RExFdEJRMW8wT1VNc1JVRkJSMjVZTEdkQ1FVRm5RaXhUUVVGVExGTkJRVlVyUml4SFFVVnNReXhKUVVGSksxSXNSMEZCVFN4RlFVTk9XQ3hGUVVGSE9WWXNVMEZCVXl4blFrRkRXamhXTEVWQlFVY3ZWaXhaUVVGWkxHVkJRV1ZHTEZOQlFWTXNaMEpCUTNaRE5GY3NSMEZCVFN4SFFVZE9XQ3hGUVVGSEwxWXNXVUZCV1N4blFrRkJaMEpHTEZOQlFWTXNaVUZOTlVOcFZ5eEZRVUZIYmxVc1UwRkJVeXhOUVVGTmNtdERMRk5CUVZFc1UwRkJRMnRETEVkQlEzWkNRU3hGUVVGRksxY3NWVUZCVlc5SUxFOUJRVThzWTBGQlpTeHRRa0ZOZEVNc1NVRkxTWHBFTEVWQlFTdENMRU5CUVVVMGNVSXNWVUZCVnl4RFFVRkZlblpDTEUxQlFVOXhka0lzUlVGQlIzRkpMRk5CVEdwRUswa3NSVUZCUnpjelF5eFJRVUZST0hWRExGTkJTM05FTWtvc1NVRkJTMFFzUjBGQlQzcFNMR1ZCUVdkQ00wWXNSVUZCVFhCb1F5eFJRVUZST0hORExGZEJRVmRxZFVNc1RVRkZha2wxYVVNc1JVRkJUVzlKTEdkQ1FVRm5RblpETEVkQlFXTndRaXh4UWtGQmMwSTFjRUlzVDBGTGJFVXNXVUZCUVhkM1FpeFZRVUZCTEhOQ1FVVmxlSGxETEV0QlFVdHhia01zWVVGQllTeGhRVU40UW1wcFF5eFRRVUZSTEZOQlFVTTBNVU1zUjBGQlVTeFRRVUZMZUZRc1kwRkJZM2RVTEUxQlIzcERMRWxCUVVsNVJDeEZRVUZqZWl0RExFdEJRVXN3VUN4TFFVRkxOSEpETEdsQ1FVTTFRblEzUXl4TFFVRkxNRkFzUzBGQlMyOXdReXhMUVVGUExFTkJRVU15Uml4SlFWTjBRaXhaUVVGQlZpeHBRa0ZCUVN4VFFVRnBRbmhvUWl4RlFVRnpRakJuUWl4SFFVVTVRa0VzU1VGQldXbzVReXhMUVVGTGFXNURMRmRCUVZkblZ5eE5RVVZTTEVsQlFYSkNRU3hGUVVGVGVVSXNWVUZEVkc1cFFpeEZRVUZKYlZnc1UwRkJWU3hIUVVka2RVb3NSVUZCVXpCQ0xGRkJRMVJ3YVVJc1JVRkJTV3g2UWl4SlFVRk5MRU5CUVVVc1UwRkJXU3hYUVVGWkxFMUJRVk0wZWtNc1JVRkJVekJDTEZWQlZUbEVMRmxCUVVGMFFpeHBRa0ZCUVN4VFFVRnBRa29zUjBGRllpeEpRVUZMUVN4SFFVRlphamxETEV0QlFVdHBia01zVjBGQlYyZFhMRWRCUVZjc1QwRkJUMm81UXl4TFFVRkxLMFlzVVVGQlVXMTBReXhqUVVOb1JTeEpRVUZKTUV3c1JVRkJZeXhIUVZOc1FpeFBRVkJCTlN0RExFdEJRVXNyUml4UlFVRlJiWFJETEdOQlFXTTVkRU1zVTBGQlVTeFRRVUZEZVRWRExFVkJRVkZ1Y1VNc1IwRkRlRU1zU1VGQlNXOXhReXhGUVVFclFqZENMRVZCUVZNMFFpeEZRVUZQYUVzc1ZVRkRPVU5wU3l4SlFVTk1SaXhGUVVGWlJTeEZRVUZYUXl4VlFVRlpSaXhOUVVsdVEwUXNSVUZCV1RkeFF5eFRRVUZYTDFRc1MwRkJTeXRHTEZGQlFWRnRkRU1zWTBGQlkyNHZRaXhQUVVGbEwxUXNTMEZCU3l0R0xGRkJRVkZ0ZEVNc1kwRkZNMFV3VEN4SFFWRllMRmxCUVVGSkxHVkJRVUVzVTBGQlpXNTRReXhGUVVGblFtdHdReXhIUVVFdlFpeFhRVWRKTEVkQlFVdHNjRU1zUzBGQlVVRXNSVUZCUzJ0SExGRkJRVlVzUjBGQk5VSXNRMEZGUVN4SlFVRkphM0pETEVWQlFWbHdlRU1zUjBGRGVVSXNTVUZCY2tNM1RpeExRVUZMSzBZc1VVRkJVVGh6UXl4WFFVRlhReXhYUVVONFFtMU5MRVZCUVZscUwwTXNTMEZCU3l0R0xGRkJRVkU0YzBNc1YwRkJWM0ZOTEdsQ1FVRnBRbTVKTEVWQlFWTnVRaXhWUVVGWE5URkRMRXRCUVVzclJpeFJRVUZST0hORExGZEJRVmRvYkVNc1MwRkJTM054UXl4VFFVRlZjRUlzU1VGTmNFZ3NTVUZCU1c5SkxFVkJRVEJDTEV0QlF6bENSaXhGUVVGVk56VkRMRk5CUVZFc1UwRkJRelpVTEVWQlFVZDJSU3hIUVVOc1FpeEpRVUZKYzIxRExFVkJRVTBzUlVGQlMyOUZMRlZCUVZWdWJVTXNSMEZCUnl4SFFVTTFRaXRvUXl4RlFVRkpVQ3haUVVGakxGZEJRMnhDTUVVc1JVRkJWVzVGTEUxQlRUUkNMRWxCUVhSRGFEZERMRXRCUVVzclJpeFJRVUZSYzNSRExIRkNRVU5pY25wRExFdEJRVXR4TDBNc1kwRkJZM1JKTEVsQlJXNUNMekpETEV0QlFVdDVlVU1zYVVKQlFXbENNa1lzWVVGQlpYSkNMRVZCUTNKREx6SkRMRXRCUVV0NWVVTXNhVUpCUVdsQ01FWXNVMEZCVnpoSExFVkJRemRDUlN4SlFVVkJiaTlETEV0QlFVdDVlVU1zYVVKQlFXbENLMFlzV1VGRGRFSjRORU1zUzBGQlMzbDVReXhwUWtGQmFVSTRSaXhSUVVGUk5FY3NSVUZCVVhJM1F5eGhRVk5zUkN4WlFVRkJkVGRETEdOQlFVRXNVMEZCWTBNc1VVRkJRU3hKUVVGQlFTeEpRVUZCUVN4RlFVRkJMRWxCUVdsRWVFa3NTVUZGZEVRNU1rTXNTMEZCUzI4NFF5eFZRVUZWZERSRExGTkJRVms1UkN4TFFVRkxiemhETEZWQlFWVnlNa01zVVVGQlVXZDRReXhUUVVGVGFrSXNaVUZCYVVKM1NpeEZRVUZuUW5oS0xHVkJRemRHT1RGRExFdEJRVXR2T0VNc1ZVRkJWWEl5UXl4UlFVRlJaM2hETEZOQlFWZDFTU3hGUVVOc1EzUXZReXhMUVVGTGJ6aERMRlZCUVZVeFRTeFRRVU5tTVhaRExFdEJRVXN5T0VNc2FVSkJRV2xDZEZVc1dVRkJXWEp2UXl4TFFVRkxiemhETEZWQlFWVjBORU1zVjBGVGVrUXNXVUZCUVhNM1F5eFZRVUZCTEZOQlFWVkhMRVZCUVdsQ1F5eEhRVUV6UWl4WFFVTlJReXhGUVVGWmVpOURMRXRCUVVzd1VDeExRVUZMZFhKRExHdENRVU4wUWtRc1JVRkJUV2czUXl4TFFVRkxNRkFzUzBGQlN6UnlReXhwUWtGQmFVSm9WQ3hSUVVOeVF6QlRMRVZCUVVscU1VTXNVVUZCVVhWNlF5eGxRVUZuUWl4RlFVVTFRakJDTEVWQlFVa3plRU1zU1VGQlRTeERRVUZGTEZGQlFWY3NZVUZEZGtJeWVFTXNSVUZCU1hSSUxGTkJRVlVzUlVGRlpDeEpRVUZKZGswc1JVRkJVVzV1UXl4TFFVVkRaemRETEVWQlFVbHNTQ3haUVVsV01YVkRMRk5CUVZFc1UwRkJWVFpVTEVWQlFVZDJSU3hIUVVONFFpeEpRVUZKYlRkQ0xFVkJRVkUxTWtJc1JVRkZVbmx0UXl4RlFVRlJOMUFzUlVGQlRYUkpMRWRCUTJ4Q2Mwa3NSVUZCVFhSSkxFZEJRVXR0V1N4RlFVRlJMRWxCUVUxRUxFVkJSWHBDTEVsQlFVbHlSaXhGUVVGbGRrc3NSVUZCVFRsd1F5eFJRVUZSWjNGRExGVkJSemRDTkZBc1JVRkJWVW9zUlVGQlVXNUdMRWRCUlhSQ0xFZEJRV2RETEZOQlFUVkNka3NzUlVGQlRUbHdReXhSUVVGUk5IQkRMRmRCUVhkQ1oxRXNSVUZCVXl4RFFVTXZReXhKUVVGSlF5eEZRVUZQTEVsQlFVbDJVaXhMUVVGTGMxSXNSMEZGY0VJNVVDeEZRVUZOY205Q0xFbEJRVTB5Wml4RlFVRk5NRmtzYjBKQlFXOUNSQ3hSUVVWcVF5OVFMR0ZCUVdsQ1dTeExRVU5PTEZOQlFWcHJVQ3hIUVVGclF5eFRRVUZhUVN4SlFVRnJReXhKUVVGYVFTeEhRVU5vUkRsUUxFVkJRVTF5YjBJc1MwRkJUU3hQUVVWTGRtMUNMRWxCUVZvd0swTXNTVUZEVERsUUxFVkJRVTF5YjBJc1NVRkJUVzAwUWl4SlFVdFRMRWxCUVhKQ1NDeEpRVU5CTTFBc1JVRkJUWFo0UWl4VlFVRlhMRVZCUTJwQ2RYaENMRVZCUVUxNVJpeFZRVUZYTEVkQlIzSkNla1lzUlVGQlRTOXlReXhSUVVGUmQwc3NhVUpCUVdsQ0xGVkJRVlVzVTBGQlEyc3JRaXhIUVVWMFEzZFBMRVZCUVVsUkxGbEJRV0VzUlVGSFJpeFZRVVJHVWl4RlFVRkpVQ3hqUVVWaVR5eEZRVUZKVUN4WlFVRmpMRmRCU1hSQ05Vc3NSVUZCVFdoSkxGbEJRVmtzWTBGQlkycHRReXhMUVVGTExGRkJRVk1zU1VGRk9VTXNTVUZCU1dzclF5eEZRVUZWTTJkQ0xFZEJRVkUzV1N4WlFVRlphMjFDTEVWQlFVVjZPRUlzVVVGRGFFTXJka01zUjBGRFFVRXNSVUZCVVM4MVFpeFZRVVZhTEVsQlFVbDNOVUlzUlVGQlZYWkZMRVZCUVVsb1FpeG5Ra0ZEWkN0R0xFVkJRVXMxV1N4RlFVRk5jR2hETEZGQlFWRTRjME1zVjBGQlYycDFReXhMUVVVNVFtODNReXhGUVVGelF5eERRVUZGY0ZRc1ZVRkJWeXhEUVVGRmVuWkNMRTFCUVU5eGRrSXNSVUZCUjNsVUxFdEJRVTA1V1N4SFFVRlRNa1lzWlVGQlowSnBWQ3hIUVVNNVJrY3NSVUZCY1VNc1EwRkJSWFJVTEZWQlFWY3NRMEZCUlhwMlFpeE5RVUZQY1haQ0xFVkJRVWN5VkN4SlFVRkxXaXhIUVVGWGVsTXNaVUZCWjBKcFZDeEhRVU01Umtzc1JVRkJlVU1zUTBGQlJYaFVMRlZCUVZjc1EwRkJSWHAyUWl4TlFVRlBjWFpDTEVWQlFVY3lWQ3hKUVVGTFdpeEZRVUZUWXl4TlFVRlBlRkVzUjBGQlV5OURMR1ZCUVdkQ2FWUXNSMEZIY0VnMVdTeEZRVUZOYjBrc1owSkJRV2RDZGtNc1IwRkJZM1JDTEdkQ1FVRnBRbk5WTEVkQlEzSkVOMWtzUlVGQlRXOUpMR2RDUVVGblFuWkRMRWRCUVdOa0xHbENRVUZyUW10VkxFZEJRM1JFYWxvc1JVRkJUVzlKTEdkQ1FVRm5RblpETEVkQlFXTm1MR1ZCUVdkQ2FWVXNUVUZKZUVSeVVTeEZRVUZOTDNKRExGRkJRVkYzU3l4cFFrRkJhVUlzVTBGQlV5eFRRVUZWYXl0Q0xFZEJRemxEY2tZc1JVRkJUWG96UWl4TFFVRkxaM0ZETEZOQlFWTnpRaXhUUVVrMVFrRXNSVUZCU1d3elF5eFJRVUZSZDBzc2FVSkJRV2xDTEZOQlFWTXNVMEZCVldzclFpeEhRVU0xUTNKR0xFVkJRVTE2TTBJc1MwRkJTMmR4UXl4VFFVRlRjMElzVFVGSGVFSm9OME1zUzBGQlN6QlFMRXRCUVV0eGNrTXNUMEZCVDBNc1IwRkZha0lzU1VGQlNYTkdMRVZCUVdkQ2RFWXNSVUZCU1dwQ0xHMUNRVTk0UWl4UFFVeEpkVWNzUlVGQlkzWnpReXhQUVVGVExFZEJRMUIxYzBNc1JVRkJZMEVzUlVGQlkzWnpReXhQUVVGVExFZEJRek5EYWxFc1VVRkJVWGRMTEdsQ1FVRnBRaXhYUVVGWExGTkJRVU5ySzBJc1IwRkJUU3hUUVVGTEsxUXNhMEpCUjNaRWRrWXNSMEZKV0N4WlFVRkJOa1VzYjBKQlFVRXNVMEZCYjBKRUxFZEJSV2hDTEVsQlFVbFpMRVZCUVUxYUxFVkJRVXRoTEZWQlExaERMRVZCUVZGa0xFVkJRVXRsTEZkQlFXRXNSVUZOT1VJc1QwRk1WMllzUlVGQlMyZENMR05CUzBZc1MwRklSVVlzUlVGQlVTeEhRVUZMTEVsQlFVMHNTVUZCVFVFc1JVRkhWaXhMUVVacVFrWXNSVUZCVFN4SFFVRkxMRWxCUVUwc1NVRkJUVUVzUjBGTGVrTXNXVUZCUVVzc2IwSkJRVUVzVTBGQmIwSnFRaXhIUVVOb1FpeEpRVUZKYTBJc1JVRkJUMnhDTEVWQlFVdHRRaXhYUVVOYWNEWkRMRVZCUVUxcE5VTXNSVUZCUzI5Q0xHRkJTMllzVDBGSVpVWXNSVUZCVHl4SFFVRkxMRWxCUVUwc1NVRkJUVUVzUlVGSGRFSXNTMEZHU0c0MlF5eEZRVUZOTEVkQlFVc3NTVUZCVFN4SlFVRk5RU3hIUVZkNlF5eFpRVUZCTkRWRExHVkJRVUVzVTBGQlpTOVVMRWRCVFZnc1IwRkJaMElzU1VGQldrRXNSVUZCUlhsVkxGRkJRVGhDTEVsQlFXWjZWU3hGUVVGRmVsWXNVMEZCZGtJc1EwRkZRU3hKUVVGSmJYRkNMRVZCUVdOc2FFUXNTMEZCU3pCUUxFdEJRVXQzY2tNc2FVSkJRelZDTEV0QlFVbG5SeXhGUVVGWmJuUkRMRkZCUVZVc1IwRkJNVUlzUTBGRFFTeEpRVUZKYjNSRExFVkJRV1ZFTEVWQlFWbEJMRVZCUVZsdWRFTXNUMEZCVXl4SFFVRkhjMjFETEZOQlJXNUVWeXhGUVVGUGVFOHNSVUZCUlhvNFFpeFBRVUZ0UWl0WExGRkJRVkVzVFVGRGJrTnJNRUlzUjBGTFJHMUhMRWxCU0dNM2VrSXNVMEZCVXpCMFFpeEZRVUZKZEN0Q0xHRkJRV0VzYlVKQlNUZENNV01zUzBGQlMzTXJReXhwUWtGSmVFSXNXVUZCUVVFc1dVRkJRU3hYUVVOSkxFbEJRVWs0UXl4RlFVRlhjR2hFTEV0QlFVdHZMME1zVlVGQlZYQXZReXhMUVVGTGNXaEVMSE5DUVVGelFpeEhRVVZ5UkRWTUxFVkJRVk15VEN4RlFVRlRja2dzYlVKQlEyeENkRVVzUlVGQlR6Rm9ReXhQUVVGVExFZEJRMmhDTUdoRExFVkJRVThzUjBGQlJ6bHBRaXhSUVVka2VYVkNMRVZCUVZNelJ5eFpRVUZqTEZGQlEzWkNNa2NzUlVGQlV6VkdMRmxCUVdFc1JVRkZkRUlzU1VGQlNYZEZMRVZCUVhORExFTkJRVVZ3VkN4VlFVRlhMRU5CUVVWeFZDeExRVUZOYW1kRUxFdEJRVTF0WkN4TlFVRlBhV3RETEVkQlFWbDBWU3hsUVVGblFqbHpReXhMUVVGTEswWXNVVUZCVVRoelF5eFhRVUZYYW5WRExFMUJVV2hKTEU5QlVFRTFSU3hMUVVGTGRYWkRMR2RDUVVGblFuWkRMRWRCUVdOMFFpeG5Ra0ZCYVVKelZTeEpRVVZXTEVsQlFYUkRhR2RFTEV0QlFVc3JSaXhSUVVGUmMzUkRMSFZDUVVOaWNucERMRXRCUVV0NWVVTXNhVUpCUVdsQ0swWXNXVUZEZEVKNE5FTXNTMEZCUzNsNVF5eHBRa0ZCYVVJNFJpeFJRVUZSTmtrc1JVRkJVM1E1UXl4VlFVZHdRM001UXl4SFFVZFlMRmxCUVVGRExHMUNRVUZCTEZkQlEwa3NTVUZCU1c1SUxFVkJRVk1zUjBGSFlpeFBRVVpCYkRaRExFdEJRVXNyUml4UlFVRlJiWFJETEdOQlFXTTVkRU1zVTBGQlVTeFRRVUZETmxRc1JVRkJSM1pGTEVkQlFWRjNiRU1zUlVGQlQycG9ReXhGUVVGRk5EZENMR1ZCUVZrMWVrTXNTMEZGTjBScE5VTXNSMEZIV0N4WlFVRkJiMGdzWVVGQlFTeFRRVUZoY0ZVc1JVRkJiMEp4VlN4SFFVVjRRbkpWTEVkQlFXTkJMRVZCUVZWT0xGbEJSemRDTlhORExFdEJRVXQzYUVRc1pVRkRUSGhvUkN4TFFVRkxkM2xETEZsQlEweDRlVU1zUzBGQlMyODRReXhWUVVGVmRrVXNVMEZGUnl4SlFVRmtNRW9zU1VGSlNuWm9SQ3hMUVVGTE1ubERMR05CUVdNc1NVRkZkVUlzU1VGQmRFTXplVU1zUzBGQlN5dEdMRkZCUVZGemRFTXNkVUpCUTJKeWVrTXNTMEZCUzNsNVF5eHBRa0ZCYVVKRExGbEJRV01zVFVGUE5VTXNXVUZCUVVNc1kwRkJRU3hUUVVGamFVUXNSMEZGVml4SlFVRjVReXhKUVVGeVF6VXhReXhMUVVGTEswWXNVVUZCVVRoelF5eFhRVUZYUXl4VFFVRnRRaXhEUVVNelF5eEpRVUZKUXl4RlFVRk5MM2xETEV0QlFVc3JSaXhSUVVGUk9ITkRMRmRCUVZkRkxFbEJRVWsyUXl4SFFVTjBReXhKUVVGTE4wTXNSVUZCU3l4UFFVVldMM2xETEV0QlFVdG5ORU1zVjBGQlYzUXlReXhKUVVGSkxFTkJRVVZ4ZUVNc1NVRkJTMEVzVVVGRk1VSXNRMEZEUkN4SlFVRkpiR3hETEVWQlFVODNUaXhMUVVGTEswWXNVVUZCVVRoelF5eFhRVUZYYUd4RExFdEJRVXR6Y1VNc1UwRkRjRU1yUml4RlFVRlJiQ3RETEV0QlFVc3JSaXhSUVVGUk9ITkRMRmRCUVZkb2JFTXNTMEZCUzJ0d1F5eFRRVWR5UTBnc1JVRkJkVU1zUTBGRGRrTTVTaXhsUVVGblFqbHpReXhMUVVGTEswWXNVVUZCVVRoelF5eFhRVUZYYW5WRExFdEJRM2hEWjI5RExGVkJRVmNzUTBGRFVIcHVRaXhMUVVGTmRGZ3NSVUZEVG1kd1F5eFRRVUZWTEVsQlFVbERMRWRCUVRCQ2JFSXNSVUZCVjNOSkxFVkJRVTF5U1N4VFFVRlZjVWtzUlVGQlRYQkpMR2RDUVVkcVJqa3hReXhMUVVGTGRYWkRMR2RDUVVGblFuWkRMRWRCUVdONlFpeHhRa0ZCYzBKeFRDeExRVTFxUlN4WlFVRkJOa3NzWVVGQlFTeFRRVUZoZGxVc1IwRkJZaXhYUVZsSmJIUkRMRXRCUVVzd1VDeExRVUZMYjNCRExFdEJRMHh3ZGtNc1VVRkJUeXhUUVVGRGRWQXNSMEZCVFN4TlFVRnJRaXhaUVVGc1FrRXNSVUZCUlhkb1F5eGhRVUVyUXl4clFrRkJiRUo0YUVNc1JVRkJSWGRvUXl4bFFVTXZRM0l4UXl4VFFVRlJMRk5CUVVNMlZDeEhRVUZOTEZOQlFVdDJTaXhMUVVGTGNYTkRMRlZCUVZVNWFVTXNUVUZMZUVOcVdpeExRVUZMTUZBc1MwRkJTMjl3UXl4TFFVRkxNWHBETEZOQlFWRXNVMEZCUXpaVUxFZEJSM0JDUVN4RlFVRkZkMmhETEZsQlFXTXNWMEZIYUVKNGFFTXNSVUZCUlRZMlFpeFpRVUZaY0hGRExGRkJRVThzVTBGQlEzQkRMRWRCUVUwc1QwRkJRVUVzUlVGQlJYbHpReXhUUVVGUE0zVkRMRk5CUVZFc1UwRkJRM000UXl4SFFVRlRRU3hGUVVGSGNHcERMRlZCUVZjc1UwRkpOMFVzV1VGQlFYRnFReXhaUVVGQkxGTkJRVmw2VlN4SFFXOUNVaXhIUVVGTFFTeEhRVUZqUVN4RlFVRlZUaXhYUVVGalRTeEZRVUZWVGl4VlFVRlZlblpDTEUxQlFVMTVhME1zWVVGTmNrVXNTVUZNUVN4SlFVRkpReXhGUVVGVE0xVXNSVUZCVlU0c1ZVRkJWWHAyUWl4TlFVRk5lV3RETEdGQlEyNURkRk1zUlVGQlUzUjJReXhMUVVGTEswWXNVVUZCVVRoelF5eFhRVUZYYW5WRExFdEJSV3BET0RKRExFVkJRVmt4TjBNc1MwRkJTekJRTEV0QlFVczJja01zWlVGRmFrSTNiVU1zUlVGQlNTeEZRVUZIUVN4RlFVRkpaMjVETEVWQlFWVXpia01zVDBGQlVWY3NTVUZCU3l4RFFVVjJReXhKUVVOSmIzUkRMRVZCUVV0RUxFVkJSRTkyVXl4RlFVRlRMRWxCUVUwMU5rSXNSVUZCU1N4TFFVVnVReXhIUVVGSmIzUkRMRWRCUVUxQkxFVkJRVWN2ZEVNc1QwRkJVeXhGUVVGSExFTkJRM0pDTEVsQlFVbG5kVU1zUlVGQlkwUXNSVUZCUnl4SFFVTnFRa1VzUlVGQlkzUjBReXhGUVVWa2RYUkRMRVZCUVZkcWFVUXNTMEZCUzJ0cFJDeGpRVUZqTlRCQ0xGTkJRVk41TUVJc1NVRkRNME1zU1VGQlMwVXNSVUZCVlN4VFFVVm1hbWxFTEV0QlFVc3JSaXhSUVVGUmJYUkRMR05CUVdNNWRFTXNVMEZCVVN4VFFVRkRiVE5DTEVWQlFVczNia0lzUjBGRmNrTXNTVUZCU1hsMFF5eEZRVUZYTld4Q0xFVkJRVWx6V1N4VFFVRlRkREJETEcxQ1FVTjRRalpvUkN4RlFVRmhVQ3hGUVVGUGRsTXNSVUZCVXl4SlFVRk5NRk1zUlVGQll5eExRVUZQUnl4SFFVTTFSQ3hIUVVGSlF5eEhRVUZqUVN4RlFVRlhjblZETEU5QlFWTXNSVUZCUnl4RFFVVnlReXhKUVVGSk9EZENMRVZCUVZGdlV5eEZRVUZUYms4c1dVRkJXWFFyUWl4TlFVRkxMRk5CUVVNMmMwTXNSMEZCVVN4UFFVRkJRU3hGUVVGSmREaERMRkZCUVZGbmNVTXNXVUZCWTNoVUxFVkJRVWx6V1N4WlFVVTNSU3hIUVVGSmFFWXNSVUZCVHl4RFFVTlFRU3hGUVVGTmJFa3NVMEZCVXl4alFVVm1MRWxCUVVreVlTeEZRVUZaTEVkQlEyaENhbTlETEUxQlFVMXRUQ3hMUVVGTE5EaENMRWRCUVZsb09VTXNVMEZCVVN4VFFVRlZiVGxETEVkQlEzSkRSQ3hIUVVGaFF5eEZRVUZMTEU5QlJYUkNNVk1zUlVGQlRXcDFReXhMUVVGTExGRkJRVk13WjBRc1IwRkRUaXhKUVVGSmJtcENMRWRCUVZFd1VTeEZRVUZOTEVkQlFVa3NRMEZCUldwVkxGbEJRV0VzTUVKQlZUTkZMRmxCUVVGemJVSXNZMEZCUVN4VFFVRmpMMmhFTEVkQlExWXNUMEZCVDBnc1MwRkJTekJRTEV0QlFVdHZjRU1zUzBGQlMzUnFReXhOUVVGTExGTkJRVU41UkN4RlFVRkhka1VzUjBGQlRTeFBRVUZCZFVVc1JVRkJSVzlvUXl4WFFVRmhiRFpETEUxQlQzaEVMRmxCUVVGeGFVUXNWVUZCUVN4VFFVRlZOVVVzUlVGQmNVSTJSU3hIUVVFdlFpeEpRVmsyUWpsSkxFVkJRV0UwUlN4RlFWb3hReXhQUVVkVmJVVXNSVUZCWlN4VFFVRkRReXhGUVVGdlFtaEtMRWRCUjNSRExFOUJSbGxuU2l4RlFVRkhka29zVFVGQlRVOHNSMEZGVW1wRkxHVkJPRUppY1Vzc1JVRkJTeTh2UXl4TFFVRkxLMFlzVVVGQlVUaHpReXhYUVVGWGFuVkRMRXRCUlhSQ05VVXNTMEZCU3pCUUxFdEJRVXR2Y0VNc1MwRkJTemRyUXl4TlFURkNSREJzUXl4RlFUQkNaVE0xUXl4TFFVRkxhVGhETEV0QlFVdGtMRzFDUVVGdFFpOUNMRTFCUVUwMWQwTXNVVUZCVVc4eFF5eEhRVEZDTjBOWExFVkJNRUpyUkd0RkxFZEJRVkZCTEVWQmRrSnlSaXhUUVVGVmRuVkRMRVZCUVcxQ1F5eEhRVTFvUXl4UFFVRnBRbmwxUXl4RlFVOW1SaXhGUVVGaGJrVXNSVUZCVFhKeFF5eEZRVUZKUXl4RlFVRkhkMnhETEVkQlVGQnJTaXhGUVU5aFNDeEZRVUZoYmtVc1JVRkJUWEJ4UXl4RlFVRkpSQ3hGUVVGSGVXeERMRWRCUkdwRWFVb3NSVUZCUjNvclF5eFhRVUZYTWl0RExHTkJRV05FTEVWQlFVY3hLME1zV1VGT2JrTXNTVUZCVlhrclF5eEZRVUZKUXl4TFFXMUNlRUo2T1VNc1UwRkJVU3hUUVVGQmRUbERMRWRCUVUwc1UwRkJTMnA2UXl4TFFVRkxkVzFDTEU5QlFVOHdjMElzUjBGQlNTeE5RVWQ0UXl4SlFVRkpTU3hGUVVGclF5eERRVUZGYmxjc1ZVRkJWeXhEUVVGRmIxY3NWMEZCV1hCR0xFVkJRVWx4Uml4UFFVRlJReXhIUVVGWGVsa3NZVUZCWlhGRExHVkJRV2RDYVZRc1IwRkRia2h2UkN4RlFVRjNReXhEUVVGRmRsY3NWVUZCVnl4RFFVRkZiMWNzVjBGQldYQkdMRVZCUVVsWkxFbEJRVXRwUlN4SFFVRlJNMVlzWlVGQlowSnBWQ3hIUVVONFJ5OHZReXhMUVVGTGRYWkRMR2RDUVVGblFuWkRMRWRCUVdOdVFpeHJRa0ZCYlVKeldDeEhRVVYwUkc1cVJDeExRVUZMZFhaRExHZENRVUZuUW5aRExFZEJRV05xUWl4MVFrRkJkMEpuV0N4SlFVa3ZSQ3haUVVGQlN5eHBRa0ZCUVN4VFFVRnBRbXhYTEVkQlIySXNTVUZCU1c0NVFpeEZRVUZUYlRsQ0xFVkJRVlZPTEZWQlFWVjZka0lzVFVGQlRYQk9MRTlCU1haRExFZEJSalJETEU5QlFXcERRU3hGUVVGUE9GY3NVVUZCVVhwdFFpeGpRVVZtTEVOQlExQXNTVUZCU1hjNVF5eEZRVUZMTjNSRExFVkJRVThyVnl4UlFVRlJMRTFCUTNoQ0xFbEJRVXM0TWtJc1JVRkJTU3hQUVVWVU4zUkRMRVZCUVZNMmRFTXNSVUZGWWl4SlFVRkplVVlzUlVGQlRYSnFSQ3hMUVVGTGFUaERMRXRCUVV0a0xHMUNRVUZ0UWk5Q0xFMUJRVTAxYWtNc1RVRkJTeXhUUVVGRGVVUXNSVUZCUjNaRkxFZEJRVTBzVDBGQlFYVkZMRVZCUVVWdVZpeFZRVUZaYVUwc1MwRkRja1Z6ZWtNc1IwRkhUSEpxUkN4TFFVRkxkMmxFTEZWQlFWVmhMRVZCUVV0dVZ5eEZRVUZWVGl4VlFVRlZORklzVFVGSE5VTXNXVUZCUVdkRUxHRkJRVUVzVjBGRlNYaG9SQ3hMUVVGTGFUaERMRXRCUVV0dVJDeExRVUZMTVhwRExGTkJRVkVzVTBGQlF6WlVMRVZCUVVkMlJTeEpRVU51UW5WRkxFVkJRVVUyZFVJc1UwRkJVeXhwUWtGQmJVSTNkVUlzUlVGQlJUWjFRaXhUUVVGVExHbENRVU42UXpkMVFpeEZRVUZGTkhWQ0xGbEJRVmtzWlVGQlpVRXNXVUZCV1N4dlFrRkxja1FzV1VGQlFYbGlMR2RDUVVGQkxGTkJRV2RDY0Zjc1IwRkJhRUlzVjBGTFpXeDBReXhMUVVsT01GQXNTMEZCUzI5d1F5eExRVUZMTVhwRExGTkJRVkVzVTBGQlF6UXhReXhGUVVGTGRHMURMRWRCUlZwemJVTXNSVUZCU1d4SUxGbEJRMVl4ZFVNc1UwRkJVU3hUUVVGRGFUbERMRWRCUVZWQkxFVkJRVWwySzBNc1VVRkJVVEJMTEc5Q1FVRnZRaXhWUVVGWExFVkJRVXNyZUVNc2JVSkJRekZGTEVsQlFVbEVMRVZCUVdkQ2RFWXNSVUZCU1dwQ0xHMUNRVU53UW5WSExFVkJRV04yYzBNc1VVRkJWU3hIUVVOYWRYTkRMRVZCUVdOQkxFVkJRV04yYzBNc1QwRkJVeXhIUVVNelEycFJMRkZCUVZGM1N5eHBRa0ZCYVVJc1ZVRkJWeXhGUVVGTGFYbERMRzlDUVZjelJDeFpRVUZCTHpsQ0xGZEJRVUVzVTBGQlYydHJRaXhGUVVGdFFuWnVRaXhGUVVFd1FtOXJReXhSUVVGQkxFbEJRVUZCTEVsQlFVRkJMRWRCUVVFc1IwRkRjRVFzU1VGQlNTOVdMRVZCUVdkRExFTkJRMmhEUlN4SlFVRkxNWFJETEV0QlFVc3JSaXhSUVVGUmFYTkRMRTlCUTJ4Q05VVXNWVUZCVnpGSExFVkJRMWcwUnl4VFFVRlZiblZDTEVWQlExWXlkRUlzWlVGQlowSTVjME1zUzBGQlN5dEdMRkZCUVZFNGMwTXNWMEZCVjJwMVF5eExRVU40UTNsdlF5eHhRa0ZCYzBKclZ5eEhRVVV4UW01WUxFZEJRV3RDZFVJc1ZVRkJWVWdzU1VGSGFFTXNXVUZCUVdweFFpeGpRVUZCTEZOQlFXTnRha0lzUjBGRFZpeEpRVUZKT0Vjc1JVRkJaME1zUTBGRGFFTkZMRWxCUVVzeGRFTXNTMEZCU3l0R0xGRkJRVkZwYzBNc1QwRkRiRUkxUlN4VlFVRlhNVWNzUlVGRFdHOUhMR1ZCUVdkQ09YTkRMRXRCUVVzclJpeFJRVUZST0hORExGZEJRVmRxZFVNc1RVRkZOVU4zYmtNc1IwRkJhMEp0UWl4WlFVRlpReXhKUVVkc1F5eFpRVUZCWjFjc1dVRkJRU3hUUVVGWmRGY3NTVUZQYTBNc1NVRkJkRU5zZEVNc1MwRkJTeXRHTEZGQlFWRnpkRU1zYzBKQlEySnlla01zUzBGQlMzZDVReXhaUVVOVUxFbEJRVWxwVWl4RlFVRkxkbGNzUlVGQlZVNHNWVUZCVldsTExGTkJRM2hDTkUwc1IwRkRUSHBxUkN4TFFVRkxaeTlETEdWQlFXVTVVaXhGUVVGVlRpeFZRVUZWZW01Q0xFdEJRVTBzU1VGQlNUSjRRaXhIUVVFd1FqSk5MRVZCUVVjM1RpeFZRVUZYTms0c1JVRkJSelZPTEZOQlFWVTBUaXhGUVVGSE0wNHNaMEpCUnpsSExGbEJRVUUwVGl4cFFrRkJRU3hUUVVGcFFuaFhMRXRCU1dwQ0xGbEJRVUZ4Unl4clFrRkJRU3hUUVVGclFtZFJMRWRCUVd4Q0xGZEJkMEpKTEZsQmVFSmpMRWxCUVVGQkxFbEJRVUZCTEVkQlFVRXNSMEZGVEhacVJDeExRVUZMSzBZc1VVRkJVV2x6UXl4UFFVTmlhSGxETEV0QlFVc3JSaXhSUVVGUk9ITkRMRmRCUVZkcWRVTXNTMEZMYWtNMVJTeExRVUZMZDJsQ0xGZEJRVmQzY1VJc1IwRkJZMjVETEZkQlFWY3NVMEZCUTNWSUxFVkJRVkY2Uml4SFFVRlBMRk5CUVV0cU9VSXNTMEZCU3l0eVF5eHhRa0ZEYmtWNk4wTXNTMEZCUzNkcFFpeFhRVUZYZDNGQ0xFZEJRV00xUWl4bFFVRmxMRk5CUVVOblNDeEZRVUZSZWtZc1IwRkJUeXhUUVVGTE1sVXNZVUZCWVROVkxFZEJRVWtzVFVGRGJrWXpjME1zUzBGQlMzZHBRaXhYUVVGWGQzRkNMRWRCUVdNelFpeHBRa0ZCYVVJc1UwRkJReXRITEVWQlFWRjZSaXhIUVVGUExGTkJRVXN5VlN4aFFVRmhNMVVzUjBGQlNTeE5RVU55UmpOelF5eExRVUZMZDJsQ0xGZEJRVmQzY1VJc1IwRkJZMmhETEdkQ1FVRm5RaXhUUVVGRGIwZ3NSVUZCVVhwR0xFZEJRVThzVTBGQlN6aFZMR0ZCUVdFNVZTeE5RVU5vUmpOelF5eExRVUZMZDJsQ0xGZEJRVmQzY1VJc1IwRkJZM0pDTEdWQlFXVXNVMEZCUTNsSExFVkJRVkY2Uml4SFFVRlBMRk5CUVV0blZpeFpRVUZaYUZZc1RVRkxPVVV6YzBNc1MwRkJTM2RwUWl4WFFVRlhkM0ZDTEVkQlFXTndRaXh6UWtGQmMwSXNVMEZCUTNkSExFVkJRVkY2Uml4SFFVRlBMRk5CUVV0NVZ5eHBRa0ZCYVVKNlZ5eExRVUZMTkZjc1IwRkRMMFoyYWtRc1MwRkJTM2RwUWl4WFFVRlhkM0ZDTEVkQlFXTnVRaXh0UWtGQmJVSXNVMEZCUTNWSExFVkJRVkY2Uml4SFFVRlBMRk5CUVVzeVZ5eG5Ra0ZCWjBJelZ5eExRVUZMTkZjc1IwRkRNMFoyYWtRc1MwRkJTM2RwUWl4WFFVRlhkM0ZDTEVkQlFXTnFRaXgzUWtGQmQwSXNVMEZCUTNGSExFVkJRVkY2Uml4SFFVRlBMRk5CUVV0bldDd3lRa0ZCTWtKb1dDeExRVUZMTkZjc1IwRkRNMGQyYWtRc1MwRkJTM2RwUWl4WFFVRlhkM0ZDTEVkQlFXTnNRaXh2UWtGQmIwSXNVMEZCUTNOSExFVkJRVkY2Uml4SFFVRlBMRk5CUVV0cFdDeG5Ra0ZCWjBKcVdDeExRVUZMTkZjc1IwRkROVVoyYWtRc1MwRkJTM2RwUWl4WFFVRlhkM0ZDTEVkQlFXTjZRaXh6UWtGQmMwSXNVMEZCUXpaSExFVkJRVkY2Uml4SFFVRlBMRk5CUVVzMlZ5eFpRVUZaTjFjc1MwRkJTelJYTEVkQlF6RkdkbXBFTEV0QlFVdDNhVUlzVjBGQlYzZHhRaXhIUVVGamVFSXNORUpCUVRSQ0xGTkJRVU0wUnl4RlFVRlJla1lzUjBGQlR5eFRRVUZMSzFjc2FVSkJRV2xDTDFjc1MwRkJTelJYTEVkQlJUbEdkbXBFTEUxQlIxZ3NXVUZCUVRacVJDeHBRa0ZCUVN4elFrRkZVWFpPTEVWQlFWVjBNa01zUzBGQlMyazRReXhMUVVGTFpDeHRRa0ZCYlVJdlFpeE5RVU4yUXpKSExFVkJRVXN2TDBNc1MwRkJTeXRHTEZGQlFWRTRjME1zVjBGQlYycDFReXhMUVU4M1Ftc3ZReXhGUVVOQkxHMUZRVU0yUXk5RUxFVkJRVVVzTWxsQlMyMUNRU3hGUVVGRkxEaHVRa0ZsY0VWblJTeEZRVUZaY2pkRExGTkJRVk56ZEVJc1kwRkJZeXhQUVVOMlF5dDBRaXhGUVVGVk1XeERMRlZCUVZWMFJTeEpRVUZKTEdkQ1FVRnBRaXgzUWtGRGVrTm5jVU1zUlVGQlZUTnZRaXhWUVVGWk1HOUNMRVZCUlhSQ09XcEVMRXRCUVVzeU9FTXNhVUpCUVdsQ01XMUNMRTlCUVU4NGRFSXNSMEZGTjBJc1NVRkJTVU1zUlVGQlYwUXNSVUZCVlhBMFF5eGpRVUZqTEhGQ1FVTjJRekp4UXl4RlFVRlJiSGhETEZOQlFWRXNVMEZCUXpZclF5eEZRVUZST1dwRUxFZEJSWEpDTEVsQlFVbG5hVVFzUlVGQlZ6aENMRVZCUVU5c0swTXNVVUZCVVRoMVF5eFRRVU01UWl4SFFVRkxjMDRzUlVGQlRDeERRVVZCTEVsQlFVa3JRaXhGUVVGbGVEZERMRk5CUVZOemRFSXNZMEZCWXl4TlFVTXhRMnQxUWl4RlFVRmhOMnhETEZWQlFWVjBSU3hKUVVGSkxHMUNRVVV6UWl4SlFVRkpiM0ZETEVWQlFVMTZOME1zVTBGQlUzTjBRaXhqUVVGakxGTkJRMnBEYlhWQ0xFVkJRVWxvYUVNc1MwRkJUeXhYUVVOWVoyaERMRVZCUVVscWFVUXNUVUZCVVN4SFFVTmFhV2xFTEVWQlFVazViRU1zVlVGQlZYUkZMRWxCUVVrc2JVSkJRVzlDTEZGQlJYUkRMRWxCUVVseGNVTXNSVUZCVVN4clFrRkJiMEpxUXl4RlFVTm9RMmRETEVWQlFVbDZLME1zWVVGQllTeExRVUZOTUN0RExFZEJRM1pDUkN4RlFVRkplaXRETEdGQlFXRXNkVUpCUVhkQ2VUaERMRWxCUTJ4Q0xFbEJRVzVDT0VJc1JVRkJUM1pSTEZWQlExQjVVU3hGUVVGSmFsVXNVMEZCVlN4SFFVZHNRaXhKUVVGSmJWVXNSVUZCVXpNM1F5eFRRVUZUYzNSQ0xHTkJRV01zVTBGRGNFTnhkVUlzUlVGQlR6TXJReXhoUVVGaExFMUJRVTh3SzBNc1IwRkhNMEpETEVWQlFVOHphVUlzV1VGQlkzVnBRaXhGUVVGUE9XSXNWVUZGTlVJcllpeEZRVUZoTjJJc1dVRkJXVGhpTEVkQlEzcENSQ3hGUVVGaE4ySXNXVUZCV1dkakxFZEJRM3BDVEN4RlFVRlRNMklzV1VGQldUWmlMRWRCUlhKQ1F5eEZRVUZKTnpGRExHbENRVUZwUWl4VFFVRlRMRk5CUVVOckswSXNSMEZETTBJc1NVRkJTVGhZTEVWQlFXRTVXQ3hGUVVGRmVqaENMRTlCUldadVR5eEZRVUZQTUdsRUxFVkJRVmMxYmtNc1lVRkJZU3gzUWtGRGJrTXNSMEZCU3psaExFVkJRVXdzUTBGRlFTeEpRVUZKTW1sRUxFVkJRVmtzUlVGQlMzUkpMRXRCUVV0a0xHMUNRVU4wUWpWbExFVkJRVTFuYjBJc1JVRkJWVzVNTEUxQlFVMDFha01zVFVGQlN5eFRRVUZEWjJ0RExFZEJRVk1zVDBGQlFVRXNSVUZCUzNwNlF5eFJRVUZST0hWRExGZEJRV0ZxZWtNc1MwRkRia1VzUjBGQlN6STJRaXhGUVVGTUxFTkJSVUVzU1VGQlNXbHZRaXhGUVVGWExFVkJRVXM1TUVNc1MwRkJTMjl3UXl4TFFVVnlRa0VzUlVGQlR5eEhRVUZJTEUxQlFVOHdUQ3hIUVVGVkxFZEJRVVlzUTBGQlJVUXNTVUZCVXl4SFFVYzVRbkJyUkN4RlFVRlJiMnRFTEVWQlFWVnVUQ3hOUVVGTk5YZERMRkZCUVZFcmVrSXNSMEZEY0VNc1MwRkJTWEE0UWl4RlFVRlJMRWRCUVZvc1EwRkZRVEkwUXl4RlFVRkxNWHBETEZOQlFWRXNVMEZCUXpReFF5eEhRVVZXTEVsQlFVbDRRaXhGUVVGUGQwSXNSVUZCU1RWQ0xFMUJRVTFxTlVNc1IwRkZhRUp4TlVNc1NVRkZSRGhMTEVWQlFWZHdWU3hSUVVWWWMwb3NSVUZCU3psR0xGTkJRVlVzUlVGSlpqaEdMRVZCUVVzNVJpeFRRVUZWTEUxQlNYWkNMRVZCUVV0dVJTeG5Ra0ZCWjBKMlF5eEhRVUZqYmtJc2EwSkJRVzFDTEVOQlEyeEVhVUlzWlVGQlowSnBWQ3hGUVVOb1FtNVVMRlZCUVZjc1EwRkJSWHAyUWl4TlFVRlBjWFpDTEV0QlIzaENMRWxCUVVsMVZ5eEZRVUZyUXl4RFFVRkZibGNzVlVGQlZ5eERRVUZGZW5aQ0xFMUJRVTl4ZGtJc1JVRkJSM2xYTEU5QlFWRkRMRWRCUVZkMldTeGxRVUZwUW0xRExHVkJRV2RDYVZRc1IwRkRia2dzUlVGQlMzaFJMR2RDUVVGblFuWkRMRWRCUVdOcVFpeDFRa0ZCZDBKbldDeGpRVTEyUlN4WlFVRkJNRUlzWTBGQlFTeFhRVWRKTEVsQlFVbDBWaXhGUVVGcFFtNTJReXhMUVVGTEswWXNVVUZCVVRoelF5eFhRVUZYYW5WRExFdEJSWHBET0M5RExFVkJRVTh4YTBRc1MwRkJTMms0UXl4TFFVRkxaQ3h0UWtGQmJVSXZRaXhOUVVONFEzQTFReXhMUVVGTGNVb3NTVUZCVFN4SFFVVllja29zUzBGQlN5dHRReXhQUVVGUExGZEJRVmtzVlVGSmVFSXNTVUZHUVN4SlFVRkpOR1FzUlVGQll6TnJSQ3hMUVVGTE9FUXNVVUZCVVc5RUxHRkJSWFJDZDA0c1JVRkJTU3hGUVVGSFFTeEZRVUZKWjNkRExFVkJRVXN6ZDBNc1QwRkJVVmNzU1VGQlN5eERRVU5zUXl4SlFVRkpLMjVDTEVWQlFVMXRiMElzUlVGQlZVUXNSMEZEY0VKRUxFVkJRVXRvZDBNc1IwRkJSelZSTEZGQlFWRnRlVUlzVDBGQlQzZEhMRWRCUTNaQ2FXOUNMRVZCUVV0b2QwTXNSMEZCUjNGNVFpeFBRVUZQTEZkQlFWa3NXVUZETTBJNFpDeEZRVUZoY0c5Q0xFVkJRVXRwYjBJc1JVRkJTMmgzUXl4SFFVRkpNVlVzVFVGUkwwSXNVMEZCVXpaclJDeEZRVUZoY0c5Q0xFVkJRWEZDUml4RlFVRnpRblZ2UWl4SFFVTTNSQ3hKUVVGSlF5eEZRVU5GUXl4RlFVTkJReXhGUVVWQlF5eEZRVVZPZW05Q0xFVkJRVWx1ZFVJc2FVSkJRV2xDTEdGQlFXRXNVMEZCVldzclFpeEhRVVY0UXpCWkxFVkJRV0ZLTEVWQlFVMW9hRVFzVVVGQlVYRkVMRmxCUlROQ05qbERMRVZCUVZONmIwSXNSVUZCU1hvMFFpeFJRVU5pYVdoRUxFVkJRVkYyV1N4RlFVRkZkVmtzVFVGRlZpeEpRVUZKZERaRExFVkJNa1JhTEZOQlFYRkNPSGhDTEVkQlJXcENMRWRCUVhORExHTkJRV3hETkc5Q0xFVkJRVmsxYjBJc1JVRkJTeXhqUVVOcVFpeFBRVUZQTEVWQlIxZ3NTVUZCU1RadlFpeEZRVUZWUkN4RlFVRlpOVzlDTEVWQlFVc3NaMEpCUXpOQ09HOUNMRVZCUVZkR0xFVkJRVmsxYjBJc1JVRkJTeXhwUWtGRGFFTXNUMEZCVVdwUUxGTkJRVk00TTBJc1IwRkJWemt6UWl4VFFVRlRLek5DTEVkQmJrVnVRa01zUTBGQldVNHNSMEZGTVVKRExFVkJRV05FTEVWQlFVODNPVU1zV1VGQlkzTkVMRXRCUjNaRFozbENMRVZCUVVsdWRVSXNhVUpCUVdsQ0xHRkJRV0VzVTBGQlZXc3JRaXhIUVVONFEzaHpReXhMUVVGTGNVWXNUVUZCVFd0blJDeFpRVUZqTEhWQ1FVYzNRamx2UWl4RlFVRkpiblZDTEdsQ1FVRnBRaXhaUVVGWkxGTkJRVlZySzBJc1IwRkRka040YzBNc1MwRkJTM0ZHTEUxQlFVMXJaMFFzV1VGQll5eE5RVWMzUWpjNFF5eFRRVUZUTkVZc2FVSkJRV2xDTEdGQlFXRXNVMEZCVldzclFpeEhRVU0zUXl4SFFVRkpkMWtzUlVGQlVTeERRVU5TTEVsQlFVbFJMRVZCUVZGb1dpeEZRVUZGZFZrc1RVRkJVVUVzUlVGRmRFSkRMRVZCUVU4ekwwTXNUVUZCVFN0Q0xFMUJRVk0yT1VNc1JVRkJZMDhzUlVGQlV5eExRVU0zUTFZc1JVRkJUV2hvUkN4UlFVRlJkVUlzVFVGQlRTdENMRTFCUVZFNE9VTXNSVUZCWVUwc1JVRkJVU3hUUVV0NlJEazRReXhUUVVGVE5FWXNhVUpCUVdsQ0xGZEJRVmNzVTBGQlZXc3JRaXhIUVVVelF5eEhRVUZKZDFrc1JVRkJVU3hEUVVkU0xFbEJRVWxxUXl4RlFVRnJReXhEUVVOc1EyNVhMRlZCUVZjc1EwRkRVSHAyUWl4TlFVRlBjWFpDTEVWQlFVZDNWeXhYUVVGWlowTXNSVUZEY0VJdlFpeFBRVUZSUXl4SFFVRlhlRmtzWVVGRGRFSnZReXhsUVVGblFuRkRMRWRCUlhaQ01sWXNSVUZCVFhaV0xHZENRVUZuUW5aRExFZEJRV05xUWl4MVFrRkJkMEpuV0N4SFFVZG9SV2xETEU5QlFWTXZha1FzUlVGRFZEaHFSQ3hQUVVGUk9XcEVMRVZCUlZKbmEwUXNUMEZCWTJoclJDeExRVTkwUWl4VFFVRlRNbXBFTEVWQlFWVjJPVU1zUjBGRFppeEpRVUZKYnpGQ0xFVkJRVTB2ZWtJc1UwRkJVM04wUWl4alFVRmpMRTlCVVdwRExFOUJVRUY1Unl4RlFVRkpjRE5DTEUxQlFVMVpMRWxCUVUwc1NVRkRhRUozTWtJc1JVRkJTWEF6UWl4TlFVRk5ha1FzVFVGQlVTeEpRVU5zUW5FMlFpeEZRVUZKY0ROQ0xFMUJRVTByUWl4TlFVRlJMRTFCUTJ4Q2NURkNMRVZCUVVsd00wSXNUVUZCVFZNc1UwRkJWeXhYUVVOeVFqSXlRaXhGUVVGSmNETkNMRTFCUVUxdlowUXNUMEZCVXl4aFFVTnVRbWh3UWl4RlFVRkpjRE5DTEUxQlFVMXhaMFFzVjBGQllTeFBRVU4yUW1wd1FpeEZRVUZKY0ROQ0xFMUJRVTFuUXl4UFFVRlRRU3hGUVVGVExFdEJRM0pDYnpGQ0xFVkJaVmdzVTBGQlV6QnZRaXhGUVVGWlVTeEZRVUZMZERoRExFZEJRM1JDTEU5QlFWRnVSaXhQUVVGUGIwVXNhVUpCUVdsQ2NUbERMRVZCUVVzc1RVRkJUVEZ1UXl4cFFrRkJhVUkxVlN4TFFVdHdSU3haUVVGQmRUaERMSFZDUVVGQkxITkNRVWxSZWxjc1JVRkJhVUp1ZGtNc1MwRkJTeXRHTEZGQlFWRTRjME1zVjBGQlYycDFReXhMUVVONlEzVnBReXhGUVVGUmJtNURMRXRCWjBKU0syOURMRVZCUVZWeVowTXNVMEZCVTNOMFFpeGpRVUZqTEU5QlEzSkRLMU1zUlVGQlVUaGpMRmRCUVZrc1JVRkRjRUk1WXl4RlFVRlJNWEZDTEZWQlFWVjBSU3hKUVVGSkxHVkJSWFJDTEVsQmQwSkpLM0pETEVWQmVFSkJka0lzUlVGQldYQmtMRVZCUVUwNFZTeExRVUZMWkN4dFFrRkRka0l2UWl4RlFVRlJiVXdzUlVGQlZXNU1MRTFCUlhSQ1FTeEZRVUZOYURCRExGTkJRVkVzVTBGQlEyOHdReXhIUVVOWUxFbEJRVWwxVFN4RlFVRlRkazBzUlVGQlN6RlJMR2RDUVVWc1FpeEhRVUZ6UWl4SlFVRnNRbWxrTEVWQlFVOW9lVU1zVDBGQll5eERRVU55UWl4SlFVRkpiVEJDTEVWQlFVMXpVaXhGUVVGTGNsSXNWVUZEWm5GU0xFVkJRVXQyVWl4UlFVRlJMRWxCUldJc1NVRkJTV2htTEVWQlFVdDJaMElzVTBGQlUzTjBRaXhqUVVGakxFOUJRMmhETDAwc1JVRkJSM2xaTEZsQlFXTjNSeXhGUVVOcVFuTlNMRVZCUVV0dVVpeFpRVUZaY0dZc1IwRkZha0lzUlVGQlMwOHNTMEZCUzNWbUxFVkJRVk01Wml4UlFVZHVRaXhGUVVGTFR5eExRVUZMZFdZc1JVRkJVMmRrTEUxQlZUTkNMMnhFTEV0QlFVdHhia01zWVVGQllTeG5Ra0ZCWjBKcWFVTXNVMEZCVVN4VFFVRkRObXBDTEVkQlMzWkRMRVZCUVV0blowSXNaMEpCUVdkQ2FHZENMRVZCUVVrc1EwRkRja0pyWjBJc1ZVRkJWeXhUUVVGVmNVUXNSMEZEV25oelF5eExRVUZMY1dVc1ZVRkJWWGhYTEZOQlFWTXNaMEpCU3pkQ2FTdERMRVZCUVdFNWJFUXNTMEZEWWtFc1MwRkJTM0ZHTEUxQlFVMHlaMFFzVVVGQlZTeFBRVXhxUWtZc1QwRkJZVGRyUkN4SFFVOXlRbTF2UXl4VlFVRlhMRk5CUVZWdlJDeEhRVU5xUWtFc1JVRkJSWFp1UWl4cFFrRkRSelpuUXl4SFFVVkJPV3hFTEV0QlFVdHhaU3hWUVVGVmVGY3NVMEZCVXl4blFrRkROMEkzU0N4TFFVRkxjV1VzVlVGQlZXOUlMRTlCUVU4c1UwRkZNVUkwYWtJc1ZVRkJWeXhUUVVGVmJVUXNSMEZEYWtKQkxFVkJRVVYyYmtJc2FVSkJRMGMyWjBNc1IwRkZRVGxzUkN4TFFVRkxjV1VzVlVGQlZYaFhMRk5CUVZNc1owSkJSVGRDTjBnc1MwRkJTM0ZsTEZWQlFWVjBSU3hKUVVGSkxGTkJSM1pDZFhaQ0xGTkJRVlVzVTBGQlZXdEVMRWRCUTJoQ1FTeEZRVUZGZG01Q0xHbENRVU5ITm1kRExFZEJSVUU1YkVRc1MwRkJTM0ZsTEZWQlFWVjRWeXhUUVVGVExHZENRVU0zUWpkSUxFdEJRVXR4WlN4VlFVRlZkRVVzU1VGQlNTeFRRVWwyUW5kMlFpeFJRVUZUTEZOQlFWVnBSQ3hIUVVObVFTeEZRVUZGZG01Q0xHbENRVU5ITm1kRExFbEJRMHc1YkVRc1MwRkJTM0ZHTEUxQlFVMHlaMFFzVVVGQlZTeE5RVVY2UW5oakxFdEJRVTBzVTBGQlZXZEVMRWRCUlZvc1IwRkVRVUVzUlVGQlJYWnVRaXhwUWtGRFJ6Wm5ReXhKUVVWTU9XeEVMRXRCUVV0eFpTeFZRVUZWYjBnc1QwRkJUeXhSUVVWcVFucHNRaXhMUVVGTGNXVXNWVUZCVlhoWExGTkJRVk1zWjBKQlEzcENhU3RETEVsQlJtTTViRVFzVFVGRmJFSXNRMEZOUVN4SlFVRkphVzFFTEVWQlFXRnFiVVFzUzBGQlN6aHRRaXhSUVVGUkxFMUJRemxDTEVkQlFVdHRMMElzUlVGQlRDeERRVWRCTEVsQlFVbERMRVZCUVdkQ09VMHNSVUZCVFRWcVF5eE5RVUZMTEZOQlFVTjVWQ3hIUVVGUExFOUJRVUZCTEVWQlFVZHViRUlzVlVGQldXMXBSQ3hMUVVOMFJDeEhRVUZMUXl4RlFVRk1MRU5CUlVFc1NVRkJTVU1zUlVGQlZTOU5MRVZCUVUwMWQwTXNVVUZCVVRBNVF5eEhRVWQ0UWtVc1JVRkJXVTRzUlVGQlYyZ3ZRaXhSUVVGUkxFMUJRMjVETEVkQlFVdHpMMElzUlVGQlRDeERRVWRCTEVsQlFVbERMRVZCUVdkQ2FrNHNSVUZCVFRWcVF5eE5RVUZMTEZOQlFVTjVWQ3hIUVVGUExFOUJRVUZCTEVWQlFVZHViRUlzVlVGQldYTnBSQ3hMUVVOMFJDeEhRVUZMUml4RlFVRk1MRU5CUlVFc1NVRkJTV2cxUWl4RlFVRlphM05DTEVWQlFVMDFkME1zVVVGQlVUWTVReXhIUVVrNVFpeEhRVUZKUml4SFFVRlhhalZDTEVWQlFXWXNRMEZMUVc4MVFpeEZRVUZSTDBJc1JVRkJWMjVNTEVWQlFVOXNjMElzUlVGQlYyazFRaXhIUVVWeVF5eEpRVUZKY2s0c1JVRkJUek5TTEVWQlFVMTZNMElzUzBGQlMyOXdReXhMUVUxMFFuSTBRaXhaUVVGWExGZEJSVkFzU1VGQlN5eEpRVUZKZEdkQ0xFVkJRVkVzUlVGQlIwRXNSVUZCVVRJMFF5eEZRVUZMTDJ0RExFOUJRVkUxVkN4SlFVRlRMRU5CUlRsRExFbEJRVWsyTmtNc1JVRkJUV3hETEVWQlFVc3pORU1zUjBGRFdHazFReXhGUVVGUk5FSXNSVUZCU1RWQ0xFMUJRMmhDTEVkQlFVa3JUU3hIUVVGWGFqVkNMRVZCUVZjc1QwRkRNVUp2TlVJc1JVRkJVWFJNTEVWQlFVczFRaXhGUVVGUGJITkNMRVZCUVZkcE5VSXNSMEZQYmtOb1ppeEZRVUZOYjBrc1owSkJRV2RDZGtNc1IwRkJZMjVDTEd0Q1FVTm9ReXhEUVVGRmFVSXNaVUZCWjBKeFF5eEZRVUZuUW5aRExGVkJRVmNzUTBGQlJYcDJRaXhOUVVGUGNYWkNMRXRCUlRGRUxFbEJRVWwxVnl4RlFVRnJReXhEUVVGRmJsY3NWVUZCVnl4RFFVRkZlblpDTEUxQlFVOXhka0lzUlVGQlIzbFhMRTlCUVZGRExFZEJRVmQwV1N4aFFVRmxhME1zWlVGQlowSnhReXhIUVVOcVNHaEpMRVZCUVUxdlNTeG5Ra0ZCWjBKMlF5eEhRVUZqYWtJc2RVSkJRWGRDWjFnc1MwRkhOMFFzYVVKQlQyWXNTVUZCU1hWRUxFVkJRVlVzVTBGQmQwTjBUQ3hGUVVObU5VSXNSVUZEV0d4elFpeEZRVU5CYVRWQ0xFZEJSM2hDTEVkQlFVbHFOVUlzUjBGQllXazFRaXhGUVVGcVFpeERRVVZCTEVsQlFVbHVia01zUlVGQlRYVnVReXhGUVVGWFF5eEpRVVZxUW5RMVFpeEZRVUZaYVRWQ0xFbEJRMXB1YmtNc1JVRkJUWFZ1UXl4RlFVRlhSU3hMUVVkcVFucHVReXhKUVVGUmRXNURMRVZCUVZkRkxFbEJRMjVDUXl4RlFVRlJkRTRzUlVGQlQyeHpRaXhGUVVGWGFUVkNMRWRCUnpGQ1VTeEZRVUZSZGs0c1JVRkJUMnh6UWl4RlFVRlhhVFZDTEVkQlNUbENia3dzUlVGQlNUVkNMRTFCUVZFc1IwRkRXalJDTEVWQlFVbDJRaXhUUVVGVFRDeExRVXRpYzA0c1JVRkJWU3hUUVVFeVEzUk9MRVZCUXpkQ2JITkNMRVZCUTBGcE5VSXNSMEZEZUVJc1NVRkJTeXhKUVVGSmVuaERMRVZCUVVsM1dTeEZRVUZYZUZrc1JVRkJTWGw0UXl4RlFVRlRlbmhETEVsQlEycERhM2xETEVWQlFVdDRUaXhGUVVGUE1XdERMRVZCUVVkQkxFVkJRVWtzU1VGSmRrSnBlVU1zUlVGQlZTeFRRVUV5UTNaT0xFVkJRemRDYkhOQ0xFVkJRMEZwTlVJc1IwRkRlRUlzU1VGQlN5eEpRVUZKZW5oRExFVkJRVWwzV1N4RlFVRlhlRmtzUlVGQlNYbDRReXhGUVVGVGVuaERMRWxCUTJwRGEzbERMRVZCUVV0NFRpeEZRVUZQTVd0RExFVkJRVWRCTEVWQlFVa3NTVUZKZGtKcmVVTXNSVUZCVHl4VFFVRXlRME1zUlVGRE1VSkRMRVZCUTBGRExFZEJRM2hDTEVsQlFVbERMRVZCUVU5SUxFVkJRVWxETEVkQlEyWkVMRVZCUVVsRExFZEJRVTFFTEVWQlFVbEZMRWRCUTJSR0xFVkJRVWxGTEVkQlFVMURMRWRCUjFaVUxFVkJRV0VzUTBGQlJVVXNTVUZCU3l4blFrRkJhVUpFTEVsQlFVc3NhMEpCUjJ4RUxGbEJRVUUzUXl3eVFrRkJRU3hUUVVFeVFucFhMRWRCUzFaQkxFVkJRVlZPTEZWQlFWVnhWeXhQUVVGcVF5eEpRVU5KYWxJc1JVRkJVMmg1UXl4TFFVRkxLMFlzVVVGQlVXbHpReXhQUVVWMFFqQlRMRVZCUVU4eGEwUXNTMEZCUzJrNFF5eExRVUZMWkN4dFFrRkJiVUl2UWl4TlFVVndRelpPTEVWQlFWVXNSMEZEWkhaRExFVkJRVXQwTDBNc1UwRkJVU3hUUVVGRGJUTkNMRVZCUVV0d09FSXNSMEZGWml4SlFVRkplVUlzUlVGQlR6STJRaXhGUVVGSmVESkNMRkZCUVZFNGRVTXNVMEZEZGtJc1IwRkJTMnA2UXl4RlFVRk1MRU5CUlVFc1NVRkJTVEk0UXl4SFFVRk5MRVZCUTA1b2FVSXNSVUZCU1hWTUxGTkJRVk1zYTBKQlEySjVWeXhIUVVGTkxFZEJSVllzU1VGQlNUSkpMRVZCUVRSQ0xFTkJRVVYyU1N4TlFVRlBjR2xDTEVWQlFVbHpTeXhQUVVGUExGTkJRVlUyV0N4UlFVRlRibWxDTEVWQlFVbHRXQ3hSUVVGVGVWUXNWVUZCVnpWSkxFVkJRVXRSTEZOQlFWVTFLME1zUjBGRk9VYzRiVVFzUlVGQlVYSnNSQ3hIUVVGUmMyeEVMRTFCUzNCQ2RHUXNSMEZCUVN4UFFVRnZRbTlKTEVkQlEzQkNkbmhDTEZsQlFWY3NWMEZGVUcxd1FpeEhRVUZoVnl4UlFVRlJlVWdzUlVGQlVXbFdMRVZCUVZNc1EwRkJSV3BrTEV0QlFVMHNSMEZCU1c5a0xGRkJRVkVzUlVGQlRVTXNVMEZCVlN4aFFVTXpSU3hOUVVkUUxGbEJRVUY2UkN4blFrRkJRU3hUUVVGblFqRlhMRWRCVDFwc2RFTXNTMEZCU3pacVJDeHRRa0ZMVERkcVJDeExRVUZMTkd4RUxIbENRVXRNTld4RUxFdEJRVXQ1YTBRc2FVSkJSV0lzUlVGcU0wTkJMRU5CUVdsRGFtTXNLMlJETTBKcVF5eGxRVWxKTEcxQ1FVTkpMR05CUVU4c1dVRkRVQ3hGUVVGTGFsWXNUVUZCVVN4TFFWZHlRaXhQUVdwQ2VVUXNVVUZUY2tRc1dVRkJRWGhhTEVsQlFVRXNVMEZCU1c5eFFpeEhRVU5MYm10RExFdEJRVXR6YmtRc1UwRkJVMjVxUWl4RlFVRkxjQ3RDTEZGQlFWRm5jVU1zV1VGRE5VSXZka01zUzBGQlMzVjZRaXhOUVVGTmRHVXNTMEZCUzJ0MlFpeEpRVWQ0UWl4WlFVRkJiV3BDTEZOQlFVRXNVMEZCVTBNc1IwRkRUQ3hQUVVGUGRtNUVMRXRCUVV0MWVrSXNUVUZCVFM5a0xFMUJRVXNzVTBGQlF6SjFRaXhIUVVGVExFOUJRVUZCTEVWQlFVdHdLMElzVVVGQlVXZHhReXhaUVVGamQxZ3NUVUZGY0VVc1JVRnFRa0VzUTBGQmVVUXZaU3dyWkVOQmVrUXNaVUZGU1N4WFFVRlplbWxETEVkQlFWb3NUVUZEU1N4WlFVRk5RU3hKUVVGUkxGbEJRMlFzUlVGQlMwRXNVVUZCVlVFc1JVRkRaaXhGUVVGTE1uQkRMRmRCVFdJc1QwRlljME1zVVVGUmJFTXNXVUZCUVVFc1QwRkJRU3hYUVVOSk1YWkRMRXRCUVVzNFJDeFJRVUZWTkVVc1UwRkJVMjAwUWl4bFFVRmxOMmRETEV0QlFVc3JSaXhSUVVGUkszQkRMRmxCUlRWRUxFVkJXRUVzUTBGQmMwTlpMRWxEUTNSRExHTkJTMGtzVjBGQldUTnhReXhIUVVOU0wwWXNTMEZCU3l0R0xGRkJRVlZCTEUxQlFVRkJMRVZCUVVGQkxFVkJRVmNzUTBGRGRFSnpkRU1zYzBKQlFYTkNMRVZCUTNSQ2Iwb3NaMEpCUVdkQ0xFVkJRMmhDZWtzc1QwRkJVU3hqUVVOU1JDeFpRVUZoTEdOQlEySnhRaXhaUVVGWkxFVkJRMXBHTEdOQlFXVXNTVUZIWkd4NlF5eExRVUZMSzBZc1VVRkJVVGh6UXl4aFFVTmtOM2xETEV0QlFVc3JSaXhSUVVGUk9ITkRMRmRCUVdFc1EwRkRkRUpxZFVNc1MwRkJUU3hsUVVOT2FVb3NTMEZCVFN4RFFVTkdjM0ZETEZOQlFWVXNSMEZEVm5CQ0xGTkJRVlVzU1VGQlNVUXNTVUZGYkVKb1JTeFZRVUZWTEVWQlExWnZUU3hwUWtGQmEwSXNVMEZCUXpWRExFVkJRVTE2ZFVNc1JVRkJUWEYzUXl4SFFVa3pRaXhKUVVoQkxFbEJRVWt4TjBNc1JVRkJVV2xGTEV0QlFVdERMRWxCUVVrc1IwRkJTVFF4UXl4RlFVRlBMRWRCUVVzMFFpeEZRVUZOY2trc1ZVRkRka053ZWtNc1JVRkJUV2RGTEV0QlFVdEZMRWxCUVVsdVJTeEZRVUZSTURkRExFVkJRVTF5U1N4VFFVRlZhRzlETEVWQlFVdHJSeXhSUVVNMVEzbDZReXhGUVVGWExFZEJRMDV5YmtRc1JVRkJVWEZETEVWQlFVOXlReXhGUVVGUmMwTXNSVUZCUzNSRExFbEJRVk1zUTBGRE1VTXNTVUZCVFRoMVF5eEZRVUZMY0doRExFVkJRVXN4VGl4SFFVTm9RbkZ1UkN4RlFVRlRkbmxETEV0QlFVdG5Oa0lzUjBGRmJFSXNUMEZCVDNWWkxFdEJlVWN6UWl4UFFXeEhWeXhGUVVGQlF5eGpRVUZRTEZOQlFYRkNNV2hFTEVkQlEycENMRTlCUVU4c1NVRkJTVEpvUkN4RlFVRm5Rak5vUkN4SlFVY3ZRaXhaUVVGQk5HaEVMRTFCUVVFc1YwRkZTU3hQUVVSblFpeEpRVUZKY2xVc1IwRkJXWFI2UXl4TFFVRkxLMFlzVlVGSmVrTXNXVUZCUVRab1JDeE5RVUZCTEZOQlFVMURMRWRCUlVZc1QwRkVRVGR1UkN4TFFVRkxLMFlzVVVGQlVXbHpReXhQUVVGVE5sWXNSVUZEWmpkdVJDeE5RVWRZTEZsQlFVRTRia1FzWlVGQlFTeFRRVUZsTDFZc1IwRkZXQ3hQUVVSQkwzaERMRXRCUVVzclJpeFJRVUZSWjNORExGbEJRV05CTEVWQlEzQkNMM2hETEUxQlIxZ3NXVUZCUVN0dVJDeHJRa0ZCUVN4VFFVRnJRbWhKTEVkQlJXUXNUMEZFUVM4dlF5eExRVUZMSzBZc1VVRkJVVGh6UXl4WFFVRlhhblZETEV0QlFVOXROME1zUlVGRGVFSXZMME1zVFVGUldDeFpRVUZCWjI5RUxGTkJRVUVzVTBGQlUwTXNSMEZGVEN4WlFVWkxMRWxCUVVGQkxFbEJRVUZCTEVkQlFVRXNSMEZEVEdwdlJDeExRVUZMSzBZc1VVRkJVVGh6UXl4WFFVRlhReXhUUVVGWGJWWXNSVUZETlVKcWIwUXNUVUZSV0N4WlFVRkJhMjlFTEZkQlFVRXNVMEZCVnpWVExFZEJSVkFzV1VGR1R5eEpRVUZCUVN4SlFVRkJRU3hIUVVGQkxFZEJRMUIwTVVNc1MwRkJTeXRHTEZGQlFWRnhkRU1zVjBGQllXdERMRVZCUTI1Q2RERkRMRTFCVVZnc1dVRkJRVzF2UkN4bFFVRkJMRk5CUVdWb1V5eEhRVVZZTEZsQlJsY3NTVUZCUVVFc1NVRkJRVUVzUjBGQlFTeEhRVU5ZYmpKRExFdEJRVXNyUml4UlFVRlJNREpETEdWQlFXbENkRWNzUlVGRGRrSnVNa01zVFVGUldDeFpRVUZCYjI5RUxIRkNRVUZCTEZOQlFYRkNNVzlDTEVkQlJXcENMRmxCUm1sQ0xFbEJRVUZCTEVsQlFVRkJMRWRCUVVFc1IwRkRha0l4TDBJc1MwRkJTeXRHTEZGQlFWRnpkRU1zY1VKQlFYVkNNMVFzUlVGRE4wSXhMMElzVFVGSFdDeFpRVUZCY1c5RUxHOUNRVUZCTEZOQlFXOUNiSEJETEVkQlJXaENMRTlCUkVGdVppeExRVUZMSzBZc1VVRkJVVGh6UXl4WFFVRlhSU3hKUVVGTk5YcENMRVZCUTNaQ2JtWXNUVUZIV0N4WlFVRkJjMjlFTERKQ1FVRkJMRk5CUVRKQ2JuQkRMRWRCUlhaQ0xFOUJSRUZ1Wml4TFFVRkxLMFlzVVVGQlVUaHpReXhYUVVGWGNVMHNhVUpCUVcxQ0x5OUNMRVZCUTNCRGJtWXNUVUZIV0N4WlFVRkJkVzlFTEZWQlFVRXNVMEZCVlVNc1IwRkZUaXhIUVVGM1FpeHRRa0ZCWWtFc1JVRkJlVUlzUTBGRGFFTXNTVUZCU1dwelFpeEZRVUZuUXl4RFFVTm9RM1ZSTEdWQlFXZENPWE5ETEV0QlFVc3JSaXhSUVVGUk9ITkRMRmRCUVZkcWRVTXNTMEZEZUVNck5VTXNUVUZCVHl4UFFVTlFMMDBzV1VGQllUVjRReXhMUVVGTEswWXNVVUZCVVdkelF5eFpRVU14UW5ORUxFOUJRVThzUlVGRFVFNHNVMEZCVlN4UlFVVmtlVlFzUlVGQlZXcHpRaXhIUVVOV2RqaENMRXRCUVVzclJpeFJRVUZSYlhSRExHTkJRV05xSzBJc1MwRkJTM051UWl4UlFVZG9RM1k0UWl4TFFVRkxLMFlzVVVGQlVXMTBReXhqUVVGamFpdENMRXRCUVV0MWVrTXNSMEZGY0VNc1QwRkJUM2h2UkN4TlFVZFlMRmxCUVVGNWIwUXNXVUZCUVN4VFFVRlphSEpETEVkQlJWSXNUMEZFUVVFc1JVRkJUM3BrTEV0QlFVc3JSaXhSUVVGUk9ITkRMRmRCUVZkb2JFTXNUVUZEZUVJM1RpeE5RVWRtTEVWQmVFbEJJaXdpYzI5MWNtTmxjeUk2V3lKM1pXSndZV05yT2k4dlluTmtZWFJoZEdGaWJHVXZkMlZpY0dGamF5OTFibWwyWlhKellXeE5iMlIxYkdWRVpXWnBibWwwYVc5dUlpd2lkMlZpY0dGamF6b3ZMMkp6WkdGMFlYUmhZbXhsTHk0dmMzSmpMM05sY25acFkyVnpMM04wY21sdVp5NWxlSFJsYm5OcGIyNXpMblJ6SWl3aWQyVmljR0ZqYXpvdkwySnpaR0YwWVhSaFlteGxMM2RsWW5CaFkyc3ZZbTl2ZEhOMGNtRndJaXdpZDJWaWNHRmphem92TDJKelpHRjBZWFJoWW14bEwzZGxZbkJoWTJzdmNuVnVkR2x0WlM5a1pXWnBibVVnY0hKdmNHVnlkSGtnWjJWMGRHVnljeUlzSW5kbFluQmhZMnM2THk5aWMyUmhkR0YwWVdKc1pTOTNaV0p3WVdOckwzSjFiblJwYldVdmFHRnpUM2R1VUhKdmNHVnlkSGtnYzJodmNuUm9ZVzVrSWl3aWQyVmljR0ZqYXpvdkwySnpaR0YwWVhSaFlteGxMM2RsWW5CaFkyc3ZjblZ1ZEdsdFpTOXRZV3RsSUc1aGJXVnpjR0ZqWlNCdlltcGxZM1FpTENKM1pXSndZV05yT2k4dlluTmtZWFJoZEdGaWJHVXZMaTl1YjJSbFgyMXZaSFZzWlhNdlFIQnZjSEJsY21wekwyTnZjbVV2YkdsaUwyVnVkVzF6TG1weklpd2lkMlZpY0dGamF6b3ZMMkp6WkdGMFlYUmhZbXhsTHk0dmJtOWtaVjl0YjJSMWJHVnpMMEJ3YjNCd1pYSnFjeTlqYjNKbEwyeHBZaTlrYjIwdGRYUnBiSE12WjJWMFRtOWtaVTVoYldVdWFuTWlMQ0ozWldKd1lXTnJPaTh2WW5Oa1lYUmhkR0ZpYkdVdkxpOXViMlJsWDIxdlpIVnNaWE12UUhCdmNIQmxjbXB6TDJOdmNtVXZiR2xpTDJSdmJTMTFkR2xzY3k5blpYUlhhVzVrYjNjdWFuTWlMQ0ozWldKd1lXTnJPaTh2WW5Oa1lYUmhkR0ZpYkdVdkxpOXViMlJsWDIxdlpIVnNaWE12UUhCdmNIQmxjbXB6TDJOdmNtVXZiR2xpTDJSdmJTMTFkR2xzY3k5cGJuTjBZVzVqWlU5bUxtcHpJaXdpZDJWaWNHRmphem92TDJKelpHRjBZWFJoWW14bEx5NHZibTlrWlY5dGIyUjFiR1Z6TDBCd2IzQndaWEpxY3k5amIzSmxMMnhwWWk5dGIyUnBabWxsY25NdllYQndiSGxUZEhsc1pYTXVhbk1pTENKM1pXSndZV05yT2k4dlluTmtZWFJoZEdGaWJHVXZMaTl1YjJSbFgyMXZaSFZzWlhNdlFIQnZjSEJsY21wekwyTnZjbVV2YkdsaUwzVjBhV3h6TDJkbGRFSmhjMlZRYkdGalpXMWxiblF1YW5NaUxDSjNaV0p3WVdOck9pOHZZbk5rWVhSaGRHRmliR1V2TGk5dWIyUmxYMjF2WkhWc1pYTXZRSEJ2Y0hCbGNtcHpMMk52Y21VdmJHbGlMM1YwYVd4ekwyMWhkR2d1YW5NaUxDSjNaV0p3WVdOck9pOHZZbk5rWVhSaGRHRmliR1V2TGk5dWIyUmxYMjF2WkhWc1pYTXZRSEJ2Y0hCbGNtcHpMMk52Y21VdmJHbGlMMlJ2YlMxMWRHbHNjeTluWlhSQ2IzVnVaR2x1WjBOc2FXVnVkRkpsWTNRdWFuTWlMQ0ozWldKd1lXTnJPaTh2WW5Oa1lYUmhkR0ZpYkdVdkxpOXViMlJsWDIxdlpIVnNaWE12UUhCdmNIQmxjbXB6TDJOdmNtVXZiR2xpTDJSdmJTMTFkR2xzY3k5blpYUk1ZWGx2ZFhSU1pXTjBMbXB6SWl3aWQyVmljR0ZqYXpvdkwySnpaR0YwWVhSaFlteGxMeTR2Ym05a1pWOXRiMlIxYkdWekwwQndiM0J3WlhKcWN5OWpiM0psTDJ4cFlpOWtiMjB0ZFhScGJITXZZMjl1ZEdGcGJuTXVhbk1pTENKM1pXSndZV05yT2k4dlluTmtZWFJoZEdGaWJHVXZMaTl1YjJSbFgyMXZaSFZzWlhNdlFIQnZjSEJsY21wekwyTnZjbVV2YkdsaUwyUnZiUzExZEdsc2N5OW5aWFJEYjIxd2RYUmxaRk4wZVd4bExtcHpJaXdpZDJWaWNHRmphem92TDJKelpHRjBZWFJoWW14bEx5NHZibTlrWlY5dGIyUjFiR1Z6TDBCd2IzQndaWEpxY3k5amIzSmxMMnhwWWk5a2IyMHRkWFJwYkhNdmFYTlVZV0pzWlVWc1pXMWxiblF1YW5NaUxDSjNaV0p3WVdOck9pOHZZbk5rWVhSaGRHRmliR1V2TGk5dWIyUmxYMjF2WkhWc1pYTXZRSEJ2Y0hCbGNtcHpMMk52Y21VdmJHbGlMMlJ2YlMxMWRHbHNjeTluWlhSRWIyTjFiV1Z1ZEVWc1pXMWxiblF1YW5NaUxDSjNaV0p3WVdOck9pOHZZbk5rWVhSaGRHRmliR1V2TGk5dWIyUmxYMjF2WkhWc1pYTXZRSEJ2Y0hCbGNtcHpMMk52Y21VdmJHbGlMMlJ2YlMxMWRHbHNjeTluWlhSUVlYSmxiblJPYjJSbExtcHpJaXdpZDJWaWNHRmphem92TDJKelpHRjBZWFJoWW14bEx5NHZibTlrWlY5dGIyUjFiR1Z6TDBCd2IzQndaWEpxY3k5amIzSmxMMnhwWWk5a2IyMHRkWFJwYkhNdloyVjBUMlptYzJWMFVHRnlaVzUwTG1weklpd2lkMlZpY0dGamF6b3ZMMkp6WkdGMFlYUmhZbXhsTHk0dmJtOWtaVjl0YjJSMWJHVnpMMEJ3YjNCd1pYSnFjeTlqYjNKbEwyeHBZaTkxZEdsc2N5OW5aWFJOWVdsdVFYaHBjMFp5YjIxUWJHRmpaVzFsYm5RdWFuTWlMQ0ozWldKd1lXTnJPaTh2WW5Oa1lYUmhkR0ZpYkdVdkxpOXViMlJsWDIxdlpIVnNaWE12UUhCdmNIQmxjbXB6TDJOdmNtVXZiR2xpTDNWMGFXeHpMM2RwZEdocGJpNXFjeUlzSW5kbFluQmhZMnM2THk5aWMyUmhkR0YwWVdKc1pTOHVMMjV2WkdWZmJXOWtkV3hsY3k5QWNHOXdjR1Z5YW5NdlkyOXlaUzlzYVdJdmRYUnBiSE12YldWeVoyVlFZV1JrYVc1blQySnFaV04wTG1weklpd2lkMlZpY0dGamF6b3ZMMkp6WkdGMFlYUmhZbXhsTHk0dmJtOWtaVjl0YjJSMWJHVnpMMEJ3YjNCd1pYSnFjeTlqYjNKbEwyeHBZaTkxZEdsc2N5OW5aWFJHY21WemFGTnBaR1ZQWW1wbFkzUXVhbk1pTENKM1pXSndZV05yT2k4dlluTmtZWFJoZEdGaWJHVXZMaTl1YjJSbFgyMXZaSFZzWlhNdlFIQnZjSEJsY21wekwyTnZjbVV2YkdsaUwzVjBhV3h6TDJWNGNHRnVaRlJ2U0dGemFFMWhjQzVxY3lJc0luZGxZbkJoWTJzNkx5OWljMlJoZEdGMFlXSnNaUzh1TDI1dlpHVmZiVzlrZFd4bGN5OUFjRzl3Y0dWeWFuTXZZMjl5WlM5c2FXSXZiVzlrYVdacFpYSnpMMkZ5Y205M0xtcHpJaXdpZDJWaWNHRmphem92TDJKelpHRjBZWFJoWW14bEx5NHZibTlrWlY5dGIyUjFiR1Z6TDBCd2IzQndaWEpxY3k5amIzSmxMMnhwWWk5MWRHbHNjeTluWlhSV1lYSnBZWFJwYjI0dWFuTWlMQ0ozWldKd1lXTnJPaTh2WW5Oa1lYUmhkR0ZpYkdVdkxpOXViMlJsWDIxdlpIVnNaWE12UUhCdmNIQmxjbXB6TDJOdmNtVXZiR2xpTDIxdlpHbG1hV1Z5Y3k5amIyMXdkWFJsVTNSNWJHVnpMbXB6SWl3aWQyVmljR0ZqYXpvdkwySnpaR0YwWVhSaFlteGxMeTR2Ym05a1pWOXRiMlIxYkdWekwwQndiM0J3WlhKcWN5OWpiM0psTDJ4cFlpOXRiMlJwWm1sbGNuTXZaWFpsYm5STWFYTjBaVzVsY25NdWFuTWlMQ0ozWldKd1lXTnJPaTh2WW5Oa1lYUmhkR0ZpYkdVdkxpOXViMlJsWDIxdlpIVnNaWE12UUhCdmNIQmxjbXB6TDJOdmNtVXZiR2xpTDNWMGFXeHpMMmRsZEU5d2NHOXphWFJsVUd4aFkyVnRaVzUwTG1weklpd2lkMlZpY0dGamF6b3ZMMkp6WkdGMFlYUmhZbXhsTHk0dmJtOWtaVjl0YjJSMWJHVnpMMEJ3YjNCd1pYSnFjeTlqYjNKbEwyeHBZaTkxZEdsc2N5OW5aWFJQY0hCdmMybDBaVlpoY21saGRHbHZibEJzWVdObGJXVnVkQzVxY3lJc0luZGxZbkJoWTJzNkx5OWljMlJoZEdGMFlXSnNaUzh1TDI1dlpHVmZiVzlrZFd4bGN5OUFjRzl3Y0dWeWFuTXZZMjl5WlM5c2FXSXZaRzl0TFhWMGFXeHpMMmRsZEZkcGJtUnZkMU5qY205c2JDNXFjeUlzSW5kbFluQmhZMnM2THk5aWMyUmhkR0YwWVdKc1pTOHVMMjV2WkdWZmJXOWtkV3hsY3k5QWNHOXdjR1Z5YW5NdlkyOXlaUzlzYVdJdlpHOXRMWFYwYVd4ekwyZGxkRmRwYm1SdmQxTmpjbTlzYkVKaGNsZ3Vhbk1pTENKM1pXSndZV05yT2k4dlluTmtZWFJoZEdGaWJHVXZMaTl1YjJSbFgyMXZaSFZzWlhNdlFIQnZjSEJsY21wekwyTnZjbVV2YkdsaUwyUnZiUzExZEdsc2N5OXBjMU5qY205c2JGQmhjbVZ1ZEM1cWN5SXNJbmRsWW5CaFkyczZMeTlpYzJSaGRHRjBZV0pzWlM4dUwyNXZaR1ZmYlc5a2RXeGxjeTlBY0c5d2NHVnlhbk12WTI5eVpTOXNhV0l2Wkc5dExYVjBhV3h6TDJkbGRGTmpjbTlzYkZCaGNtVnVkQzVxY3lJc0luZGxZbkJoWTJzNkx5OWljMlJoZEdGMFlXSnNaUzh1TDI1dlpHVmZiVzlrZFd4bGN5OUFjRzl3Y0dWeWFuTXZZMjl5WlM5c2FXSXZaRzl0TFhWMGFXeHpMMnhwYzNSVFkzSnZiR3hRWVhKbGJuUnpMbXB6SWl3aWQyVmljR0ZqYXpvdkwySnpaR0YwWVhSaFlteGxMeTR2Ym05a1pWOXRiMlIxYkdWekwwQndiM0J3WlhKcWN5OWpiM0psTDJ4cFlpOTFkR2xzY3k5eVpXTjBWRzlEYkdsbGJuUlNaV04wTG1weklpd2lkMlZpY0dGamF6b3ZMMkp6WkdGMFlYUmhZbXhsTHk0dmJtOWtaVjl0YjJSMWJHVnpMMEJ3YjNCd1pYSnFjeTlqYjNKbEwyeHBZaTlrYjIwdGRYUnBiSE12WjJWMFEyeHBjSEJwYm1kU1pXTjBMbXB6SWl3aWQyVmljR0ZqYXpvdkwySnpaR0YwWVhSaFlteGxMeTR2Ym05a1pWOXRiMlIxYkdWekwwQndiM0J3WlhKcWN5OWpiM0psTDJ4cFlpOWtiMjB0ZFhScGJITXZaMlYwVm1sbGQzQnZjblJTWldOMExtcHpJaXdpZDJWaWNHRmphem92TDJKelpHRjBZWFJoWW14bEx5NHZibTlrWlY5dGIyUjFiR1Z6TDBCd2IzQndaWEpxY3k5amIzSmxMMnhwWWk5a2IyMHRkWFJwYkhNdloyVjBSRzlqZFcxbGJuUlNaV04wTG1weklpd2lkMlZpY0dGamF6b3ZMMkp6WkdGMFlYUmhZbXhsTHk0dmJtOWtaVjl0YjJSMWJHVnpMMEJ3YjNCd1pYSnFjeTlqYjNKbEwyeHBZaTkxZEdsc2N5OWpiMjF3ZFhSbFQyWm1jMlYwY3k1cWN5SXNJbmRsWW5CaFkyczZMeTlpYzJSaGRHRjBZV0pzWlM4dUwyNXZaR1ZmYlc5a2RXeGxjeTlBY0c5d2NHVnlhbk12WTI5eVpTOXNhV0l2ZFhScGJITXZaR1YwWldOMFQzWmxjbVpzYjNjdWFuTWlMQ0ozWldKd1lXTnJPaTh2WW5Oa1lYUmhkR0ZpYkdVdkxpOXViMlJsWDIxdlpIVnNaWE12UUhCdmNIQmxjbXB6TDJOdmNtVXZiR2xpTDIxdlpHbG1hV1Z5Y3k5bWJHbHdMbXB6SWl3aWQyVmljR0ZqYXpvdkwySnpaR0YwWVhSaFlteGxMeTR2Ym05a1pWOXRiMlIxYkdWekwwQndiM0J3WlhKcWN5OWpiM0psTDJ4cFlpOTFkR2xzY3k5amIyMXdkWFJsUVhWMGIxQnNZV05sYldWdWRDNXFjeUlzSW5kbFluQmhZMnM2THk5aWMyUmhkR0YwWVdKc1pTOHVMMjV2WkdWZmJXOWtkV3hsY3k5QWNHOXdjR1Z5YW5NdlkyOXlaUzlzYVdJdmJXOWthV1pwWlhKekwyaHBaR1V1YW5NaUxDSjNaV0p3WVdOck9pOHZZbk5rWVhSaGRHRmliR1V2TGk5dWIyUmxYMjF2WkhWc1pYTXZRSEJ2Y0hCbGNtcHpMMk52Y21VdmJHbGlMMjF2WkdsbWFXVnljeTl2Wm1aelpYUXVhbk1pTENKM1pXSndZV05yT2k4dlluTmtZWFJoZEdGaWJHVXZMaTl1YjJSbFgyMXZaSFZzWlhNdlFIQnZjSEJsY21wekwyTnZjbVV2YkdsaUwyMXZaR2xtYVdWeWN5OXdiM0J3WlhKUFptWnpaWFJ6TG1weklpd2lkMlZpY0dGamF6b3ZMMkp6WkdGMFlYUmhZbXhsTHk0dmJtOWtaVjl0YjJSMWJHVnpMMEJ3YjNCd1pYSnFjeTlqYjNKbEwyeHBZaTl0YjJScFptbGxjbk12Y0hKbGRtVnVkRTkyWlhKbWJHOTNMbXB6SWl3aWQyVmljR0ZqYXpvdkwySnpaR0YwWVhSaFlteGxMeTR2Ym05a1pWOXRiMlIxYkdWekwwQndiM0J3WlhKcWN5OWpiM0psTDJ4cFlpOTFkR2xzY3k5blpYUkJiSFJCZUdsekxtcHpJaXdpZDJWaWNHRmphem92TDJKelpHRjBZWFJoWW14bEx5NHZibTlrWlY5dGIyUjFiR1Z6TDBCd2IzQndaWEpxY3k5amIzSmxMMnhwWWk5a2IyMHRkWFJwYkhNdloyVjBRMjl0Y0c5emFYUmxVbVZqZEM1cWN5SXNJbmRsWW5CaFkyczZMeTlpYzJSaGRHRjBZV0pzWlM4dUwyNXZaR1ZmYlc5a2RXeGxjeTlBY0c5d2NHVnlhbk12WTI5eVpTOXNhV0l2Wkc5dExYVjBhV3h6TDJkbGRFNXZaR1ZUWTNKdmJHd3Vhbk1pTENKM1pXSndZV05yT2k4dlluTmtZWFJoZEdGaWJHVXZMaTl1YjJSbFgyMXZaSFZzWlhNdlFIQnZjSEJsY21wekwyTnZjbVV2YkdsaUwyUnZiUzExZEdsc2N5OW5aWFJJVkUxTVJXeGxiV1Z1ZEZOamNtOXNiQzVxY3lJc0luZGxZbkJoWTJzNkx5OWljMlJoZEdGMFlXSnNaUzh1TDI1dlpHVmZiVzlrZFd4bGN5OUFjRzl3Y0dWeWFuTXZZMjl5WlM5c2FXSXZkWFJwYkhNdmIzSmtaWEpOYjJScFptbGxjbk11YW5NaUxDSjNaV0p3WVdOck9pOHZZbk5rWVhSaGRHRmliR1V2TGk5dWIyUmxYMjF2WkhWc1pYTXZRSEJ2Y0hCbGNtcHpMMk52Y21VdmJHbGlMMk55WldGMFpWQnZjSEJsY2k1cWN5SXNJbmRsWW5CaFkyczZMeTlpYzJSaGRHRjBZV0pzWlM4dUwyNXZaR1ZmYlc5a2RXeGxjeTlBY0c5d2NHVnlhbk12WTI5eVpTOXNhV0l2ZFhScGJITXZaR1ZpYjNWdVkyVXVhbk1pTENKM1pXSndZV05yT2k4dlluTmtZWFJoZEdGaWJHVXZMaTl1YjJSbFgyMXZaSFZzWlhNdlFIQnZjSEJsY21wekwyTnZjbVV2YkdsaUwzVjBhV3h6TDIxbGNtZGxRbmxPWVcxbExtcHpJaXdpZDJWaWNHRmphem92TDJKelpHRjBZWFJoWW14bEx5NHZibTlrWlY5dGIyUjFiR1Z6TDBCd2IzQndaWEpxY3k5amIzSmxMMnhwWWk5d2IzQndaWEl1YW5NaUxDSjNaV0p3WVdOck9pOHZZbk5rWVhSaGRHRmliR1V2TGk5dWIyUmxYMjF2WkhWc1pYTXZRSEJ2Y0hCbGNtcHpMMk52Y21VdmJHbGlMM0J2Y0hCbGNpMXNhWFJsTG1weklpd2lkMlZpY0dGamF6b3ZMMkp6WkdGMFlYUmhZbXhsTHk0dmJtOWtaVjl0YjJSMWJHVnpMMkp2YjNSemRISmhjQzlrYVhOMEwycHpMMkp2YjNSemRISmhjQzVsYzIwdWFuTWlMQ0ozWldKd1lXTnJPaTh2WW5Oa1lYUmhkR0ZpYkdVdkxpOXpjbU12WTI5dGNHOXVaVzUwY3k5Q1UwUmhkR0ZVWVdKc1pVSmhjMlV1ZEhNaUxDSjNaV0p3WVdOck9pOHZZbk5rWVhSaGRHRmliR1V2TGk5emNtTXZjMlZ5ZG1salpYTXZRMjl2YTJsbFNHVnNjR1Z5TG5Seklpd2lkMlZpY0dGamF6b3ZMMkp6WkdGMFlYUmhZbXhsTHk0dmMzSmpMM05sY25acFkyVnpMMlJoZEdFdFpYWmxiblJ6TG5Seklpd2lkMlZpY0dGamF6b3ZMMkp6WkdGMFlYUmhZbXhsTHk0dmMzSmpMM05sY25acFkyVnpMMlJoZEdFdFpYWmxiblJ6TFhObGNuWnBZMlV1ZEhNaUxDSjNaV0p3WVdOck9pOHZZbk5rWVhSaGRHRmliR1V2TGk5emNtTXZjMlZ5ZG1salpYTXZjMlZ6YzJsdmJpMXpkRzl5WVdkbExYTmxjblpwWTJVdWRITWlMQ0ozWldKd1lXTnJPaTh2WW5Oa1lYUmhkR0ZpYkdVdkxpOXpjbU12YzJWeWRtbGpaWE12WkdGMFlTMTBZV0pzWlMxa2FYTmpiM1psY25rdGMyVnlkbWxqWlM1MGN5SXNJbmRsWW5CaFkyczZMeTlpYzJSaGRHRjBZV0pzWlM4dUwzTnlZeTlqYjIxd2IyNWxiblJ6TDBKVFJHRjBZVlJoWW14bFNXNXdkWFF1ZEhNaUxDSjNaV0p3WVdOck9pOHZZbk5rWVhSaGRHRmliR1V2TGk5emNtTXZZMjl0Y0c5dVpXNTBjeTlDVTBSaGRHRlVZV0pzWlVOb1pXTnJRbTk0TG5Seklpd2lkMlZpY0dGamF6b3ZMMkp6WkdGMFlYUmhZbXhsTHk0dmMzSmpMMk52YlhCdmJtVnVkSE12UWxORVlYUmhWR0ZpYkdWVFpXeGxZM1JQY0hScGIyNHVkSE1pTENKM1pXSndZV05yT2k4dlluTmtZWFJoZEdGaWJHVXZMaTl6Y21NdlkyOXRjRzl1Wlc1MGN5OUNVMFJoZEdGVVlXSnNaVk5sYkdWamRDNTBjeUlzSW5kbFluQmhZMnM2THk5aWMyUmhkR0YwWVdKc1pTOHVMM055WXk5amIyMXdiMjVsYm5SekwwSlRSR0YwWVZSaFlteGxWR1Y0ZEVsdWNIVjBMblJ6SWl3aWQyVmljR0ZqYXpvdkwySnpaR0YwWVhSaFlteGxMeTR2YzNKakwyTnZiWEJ2Ym1WdWRITXZRbE5FWVhSaFZHRmliR1ZDZFhSMGIyNHVkSE1pTENKM1pXSndZV05yT2k4dlluTmtZWFJoZEdGaWJHVXZMaTl6Y21NdlkyOXRjRzl1Wlc1MGN5OUNVMFJoZEdGVVlXSnNaVk5sYkdWamRHOXlWMmx1Wkc5M0xuUnpJaXdpZDJWaWNHRmphem92TDJKelpHRjBZWFJoWW14bEx5NHZjM0pqTDJOdmJYQnZibVZ1ZEhNdlFsTkVZWFJoVkdGaWJHVlRaV3hsWTNSdmNpNTBjeUlzSW5kbFluQmhZMnM2THk5aWMyUmhkR0YwWVdKc1pTOHVMM055WXk5amIyMXdiMjVsYm5SekwwSlRSR0YwWVZSaFlteGxRMlZzYkM1MGN5SXNJbmRsWW5CaFkyczZMeTlpYzJSaGRHRjBZV0pzWlM4dUwzTnlZeTlqYjIxdGIyNVVlWEJsY3k5amIyMXRiMjR0ZEhsd1pYTXVkSE1pTENKM1pXSndZV05yT2k4dlluTmtZWFJoZEdGaWJHVXZMaTl6Y21NdlkyOXRjRzl1Wlc1MGN5OUNVMFJoZEdGVVlXSnNaVWgwZEhCRGJHbGxiblF1ZEhNaUxDSjNaV0p3WVdOck9pOHZZbk5rWVhSaGRHRmliR1V2TGk5emNtTXZZMjl0Y0c5dVpXNTBjeTlDVTBSaGRHRlVZV0pzWlVoNWNHVnlUR2x1YXk1MGN5SXNJbmRsWW5CaFkyczZMeTlpYzJSaGRHRjBZV0pzWlM4dUwzTnlZeTlqYjIxd2IyNWxiblJ6TDBKVFJHRjBZVlJoWW14bFVHRm5hVzVoZEdsdmJpNTBjeUlzSW5kbFluQmhZMnM2THk5aWMyUmhkR0YwWVdKc1pTOHVMM055WXk5amIyMXdiMjVsYm5SekwwSlRSR0YwWVZSaFlteGxTVzVtYVc1cGRHVlRZM0p2Ykd3dWRITWlMQ0ozWldKd1lXTnJPaTh2WW5Oa1lYUmhkR0ZpYkdVdkxpOXpjbU12WTI5dGNHOXVaVzUwY3k5Q1UwUmhkR0ZVWVdKc1pVMWhjbXRsY2k1MGN5SXNJbmRsWW5CaFkyczZMeTlpYzJSaGRHRjBZV0pzWlM4dUwzTnlZeTlqYjIxd2IyNWxiblJ6TDBKVFJHRjBZVlJoWW14bFFXTjBhVzl1Y3k1MGN5SXNJbmRsWW5CaFkyczZMeTlpYzJSaGRHRjBZV0pzWlM4dUwzTnlZeTlqYjIxd2IyNWxiblJ6TDBKVFJHRjBZVlJoWW14bFVtOTNMblJ6SWl3aWQyVmljR0ZqYXpvdkwySnpaR0YwWVhSaFlteGxMeTR2YzNKakwyTnZiWEJ2Ym1WdWRITXZRbE5FWVhSaFZHRmliR1ZTYjNkRGIyeHNaV04wYVc5dUxuUnpJaXdpZDJWaWNHRmphem92TDJKelpHRjBZWFJoWW14bEx5NHZjM0pqTDJOdmJYQnZibVZ1ZEhNdlFsTkVZWFJoVkdGaWJHVklaV0ZrWlhJdWRITWlMQ0ozWldKd1lXTnJPaTh2WW5Oa1lYUmhkR0ZpYkdVdkxpOXpjbU12WTI5dGNHOXVaVzUwY3k5Q1UwUmhkR0ZVWVdKc1pVSnZaSGt1ZEhNaUxDSjNaV0p3WVdOck9pOHZZbk5rWVhSaGRHRmliR1V2TGk5emNtTXZZMjl0Y0c5dVpXNTBjeTlDVTBSaGRHRlVZV0pzWlM1MGN5SXNJbmRsWW5CaFkyczZMeTlpYzJSaGRHRjBZV0pzWlM4dUwzTnlZeTlqYjIxd2IyNWxiblJ6TDBKVFJHRjBZVlJoWW14bFUyVnNaV04wYjNKRGIyeHNaV04wYVc5dUxuUnpJaXdpZDJWaWNHRmphem92TDJKelpHRjBZWFJoWW14bEx5NHZjM0pqTDJOdmJYQnZibVZ1ZEhNdlFsTlVaWGgwU1c1d2RYUkZlSFF1ZEhNaUxDSjNaV0p3WVdOck9pOHZZbk5rWVhSaGRHRmliR1V2TGk5emNtTXZZMjl0Y0c5dVpXNTBjeTlDVTBac2RXVnVkRUoxYVd4a1pYSXVkSE1pWFN3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaUtHWjFibU4wYVc5dUlIZGxZbkJoWTJ0VmJtbDJaWEp6WVd4TmIyUjFiR1ZFWldacGJtbDBhVzl1S0hKdmIzUXNJR1poWTNSdmNua3BJSHRjYmx4MGFXWW9kSGx3Wlc5bUlHVjRjRzl5ZEhNZ1BUMDlJQ2R2WW1wbFkzUW5JQ1ltSUhSNWNHVnZaaUJ0YjJSMWJHVWdQVDA5SUNkdlltcGxZM1FuS1Z4dVhIUmNkRzF2WkhWc1pTNWxlSEJ2Y25SeklEMGdabUZqZEc5eWVTZ3BPMXh1WEhSbGJITmxJR2xtS0hSNWNHVnZaaUJrWldacGJtVWdQVDA5SUNkbWRXNWpkR2x2YmljZ0ppWWdaR1ZtYVc1bExtRnRaQ2xjYmx4MFhIUmtaV1pwYm1Vb1cxMHNJR1poWTNSdmNua3BPMXh1WEhSbGJITmxJR2xtS0hSNWNHVnZaaUJsZUhCdmNuUnpJRDA5UFNBbmIySnFaV04wSnlsY2JseDBYSFJsZUhCdmNuUnpXMXdpWW5Oa1lYUmhkR0ZpYkdWY0lsMGdQU0JtWVdOMGIzSjVLQ2s3WEc1Y2RHVnNjMlZjYmx4MFhIUnliMjkwVzF3aVluTmtZWFJoZEdGaWJHVmNJbDBnUFNCbVlXTjBiM0o1S0NrN1hHNTlLU2h6Wld4bUxDQm1kVzVqZEdsdmJpZ3BJSHRjYm5KbGRIVnliaUFpTENKY2NseHVhVzUwWlhKbVlXTmxJRk4wY21sdVp5QjdYSEpjYmlBZ0lDQjBiME5oYldGc1EyRnpaU2dwT2lCemRISnBibWM3WEhKY2JpQWdJQ0IwYjFCaGMyTmhiRU5oYzJVb0tUb2djM1J5YVc1bk8xeHlYRzRnSUNBZ2RHOVFZWE5qWVd4RFlYTmxTbk52YmlncE9pQnpkSEpwYm1jN1hISmNiaUFnSUNCbWIzSnRZWFFvS1RvZ2MzUnlhVzVuTzF4eVhHNTlYSEpjYmx4eVhHNWNjbHh1THlvcVhISmNiaUFxSUVOdmJuWmxjblJ6SUhOMGNtbHVaeUIwYnlCallXMWhiQ0JqWVhOcGJtZGNjbHh1SUNvZ1FISmxkSFZ5Ym5NZ1kyRnRaV3hEWVhOcGJtY2diMllnZEdobElITjBjbWx1WjF4eVhHNGdLaTljY2x4dUlGTjBjbWx1Wnk1d2NtOTBiM1I1Y0dVdWRHOURZVzFoYkVOaGMyVWdQU0JtZFc1amRHbHZiaUFvS1NCN1hISmNiaUFnSUNCeVpYUjFjbTRnZEdocGN5NXlaWEJzWVdObEtDOG9QenBlWEZ4M2ZGdEJMVnBkZkZ4Y1lseGNkeWt2Wnl3Z1puVnVZM1JwYjI0b2QyOXlaQ3dnYVc1a1pYZ3BJSHRjY2x4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnYVc1a1pYZ2dQVDA5SURBZ1B5QjNiM0prTG5SdlRHOTNaWEpEWVhObEtDa2dPaUIzYjNKa0xuUnZWWEJ3WlhKRFlYTmxLQ2s3WEhKY2JpQWdJQ0FnSUgwcExuSmxjR3hoWTJVb0wxeGNjeXN2Wnl3Z0p5Y3BPMXh5WEc1OU8xeHlYRzVjY2x4dVhISmNiaThxS2x4eVhHNGdLaUJEYjI1MlpYSjBjeUJ6ZEhKcGJtY2dkRzhnY0dGelkyRnNJR05oYzJsdVoxeHlYRzRnS2lCQWNtVjBkWEp1Y3lCUVlYTmpZV3hEWVhOcGJtY2diMllnZEdobElITjBjbWx1WjF4eVhHNGdLaTljY2x4dVUzUnlhVzVuTG5CeWIzUnZkSGx3WlM1MGIxQmhjMk5oYkVOaGMyVWdQU0JtZFc1amRHbHZiaWdwSUh0Y2NseHVJQ0FnSUhKbGRIVnliaUIwYUdsekxuSmxjR3hoWTJVb0x5Zy9PbDVjWEhkOFcwRXRXbDE4WEZ4aVhGeDNLUzluTENCbWRXNWpkR2x2YmloM2IzSmtMQ0JwYm1SbGVDa2dlMXh5WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJwYm1SbGVDQTlQVDBnTUNBL0lIZHZjbVF1ZEc5VmNIQmxja05oYzJVb0tTQTZJSGR2Y21RdWRHOU1iM2RsY2tOaGMyVW9LVHRjY2x4dUlDQWdJQ0FnZlNrdWNtVndiR0ZqWlNndlhGeHpLeTluTENBbkp5azdYSEpjYm4wN1hISmNibHh5WEc1VGRISnBibWN1Y0hKdmRHOTBlWEJsTG5SdlVHRnpZMkZzUTJGelpVcHpiMjRnUFNCbWRXNWpkR2x2YmlncElIdGNjbHh1SUNBZ0lISmxkSFZ5YmlCMGFHbHpMbkpsY0d4aFkyVW9MeWcvT2w1Y1hIZDhXMEV0V2wxOFhGeGlYRngzS1M5bkxDQm1kVzVqZEdsdmJpaDNiM0prTENCcGJtUmxlQ2tnZTF4eVhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCcGJtUmxlQ0E5UFQwZ01DQS9JSGR2Y21RdWRHOVZjSEJsY2tOaGMyVW9LU0E2SUhkdmNtUTdYSEpjYmlBZ0lDQWdJSDBwTG5KbGNHeGhZMlVvTDF4Y2N5c3ZaeXdnSnljcE8xeHlYRzU5TzF4eVhHNWNjbHh1YVdZZ0tDRlRkSEpwYm1jdWNISnZkRzkwZVhCbExtWnZjbTFoZENrZ2UxeHlYRzRnSUZOMGNtbHVaeTV3Y205MGIzUjVjR1V1Wm05eWJXRjBJRDBnWm5WdVkzUnBiMjRvS1NCN1hISmNiaUFnSUNCMllYSWdZWEpuY3lBOUlHRnlaM1Z0Wlc1MGN6dGNjbHh1SUNBZ0lISmxkSFZ5YmlCMGFHbHpMbkpsY0d4aFkyVW9MM3NvWEZ4a0t5bDlMMmNzSUdaMWJtTjBhVzl1S0cxaGRHTm9MQ0J1ZFcxaVpYSXBJSHNnWEhKY2JpQWdJQ0FnSUhKbGRIVnliaUIwZVhCbGIyWWdZWEpuYzF0dWRXMWlaWEpkSUNFOUlDZDFibVJsWm1sdVpXUW5YSEpjYmlBZ0lDQWdJQ0FnUHlCaGNtZHpXMjUxYldKbGNsMWNjbHh1SUNBZ0lDQWdJQ0E2SUcxaGRHTm9YSEpjYmlBZ0lDQWdJRHRjY2x4dUlDQWdJSDBwTzF4eVhHNGdJSDA3WEhKY2JuMWNjbHh1SWl3aUx5OGdWR2hsSUcxdlpIVnNaU0JqWVdOb1pWeHVkbUZ5SUY5ZmQyVmljR0ZqYTE5dGIyUjFiR1ZmWTJGamFHVmZYeUE5SUh0OU8xeHVYRzR2THlCVWFHVWdjbVZ4ZFdseVpTQm1kVzVqZEdsdmJseHVablZ1WTNScGIyNGdYMTkzWldKd1lXTnJYM0psY1hWcGNtVmZYeWh0YjJSMWJHVkpaQ2tnZTF4dVhIUXZMeUJEYUdWamF5QnBaaUJ0YjJSMWJHVWdhWE1nYVc0Z1kyRmphR1ZjYmx4MGRtRnlJR05oWTJobFpFMXZaSFZzWlNBOUlGOWZkMlZpY0dGamExOXRiMlIxYkdWZlkyRmphR1ZmWDF0dGIyUjFiR1ZKWkYwN1hHNWNkR2xtSUNoallXTm9aV1JOYjJSMWJHVWdJVDA5SUhWdVpHVm1hVzVsWkNrZ2UxeHVYSFJjZEhKbGRIVnliaUJqWVdOb1pXUk5iMlIxYkdVdVpYaHdiM0owY3p0Y2JseDBmVnh1WEhRdkx5QkRjbVZoZEdVZ1lTQnVaWGNnYlc5a2RXeGxJQ2hoYm1RZ2NIVjBJR2wwSUdsdWRHOGdkR2hsSUdOaFkyaGxLVnh1WEhSMllYSWdiVzlrZFd4bElEMGdYMTkzWldKd1lXTnJYMjF2WkhWc1pWOWpZV05vWlY5ZlcyMXZaSFZzWlVsa1hTQTlJSHRjYmx4MFhIUXZMeUJ1YnlCdGIyUjFiR1V1YVdRZ2JtVmxaR1ZrWEc1Y2RGeDBMeThnYm04Z2JXOWtkV3hsTG14dllXUmxaQ0J1WldWa1pXUmNibHgwWEhSbGVIQnZjblJ6T2lCN2ZWeHVYSFI5TzF4dVhHNWNkQzh2SUVWNFpXTjFkR1VnZEdobElHMXZaSFZzWlNCbWRXNWpkR2x2Ymx4dVhIUmZYM2RsWW5CaFkydGZiVzlrZFd4bGMxOWZXMjF2WkhWc1pVbGtYU2h0YjJSMWJHVXNJRzF2WkhWc1pTNWxlSEJ2Y25SekxDQmZYM2RsWW5CaFkydGZjbVZ4ZFdseVpWOWZLVHRjYmx4dVhIUXZMeUJTWlhSMWNtNGdkR2hsSUdWNGNHOXlkSE1nYjJZZ2RHaGxJRzF2WkhWc1pWeHVYSFJ5WlhSMWNtNGdiVzlrZFd4bExtVjRjRzl5ZEhNN1hHNTlYRzVjYmlJc0lpOHZJR1JsWm1sdVpTQm5aWFIwWlhJZ1puVnVZM1JwYjI1eklHWnZjaUJvWVhKdGIyNTVJR1Y0Y0c5eWRITmNibDlmZDJWaWNHRmphMTl5WlhGMWFYSmxYMTh1WkNBOUlDaGxlSEJ2Y25SekxDQmtaV1pwYm1sMGFXOXVLU0E5UGlCN1hHNWNkR1p2Y2loMllYSWdhMlY1SUdsdUlHUmxabWx1YVhScGIyNHBJSHRjYmx4MFhIUnBaaWhmWDNkbFluQmhZMnRmY21WeGRXbHlaVjlmTG04b1pHVm1hVzVwZEdsdmJpd2dhMlY1S1NBbUppQWhYMTkzWldKd1lXTnJYM0psY1hWcGNtVmZYeTV2S0dWNGNHOXlkSE1zSUd0bGVTa3BJSHRjYmx4MFhIUmNkRTlpYW1WamRDNWtaV1pwYm1WUWNtOXdaWEowZVNobGVIQnZjblJ6TENCclpYa3NJSHNnWlc1MWJXVnlZV0pzWlRvZ2RISjFaU3dnWjJWME9pQmtaV1pwYm1sMGFXOXVXMnRsZVYwZ2ZTazdYRzVjZEZ4MGZWeHVYSFI5WEc1OU95SXNJbDlmZDJWaWNHRmphMTl5WlhGMWFYSmxYMTh1YnlBOUlDaHZZbW9zSUhCeWIzQXBJRDArSUNoUFltcGxZM1F1Y0hKdmRHOTBlWEJsTG1oaGMwOTNibEJ5YjNCbGNuUjVMbU5oYkd3b2IySnFMQ0J3Y205d0tTa2lMQ0l2THlCa1pXWnBibVVnWDE5bGMwMXZaSFZzWlNCdmJpQmxlSEJ2Y25SelhHNWZYM2RsWW5CaFkydGZjbVZ4ZFdseVpWOWZMbklnUFNBb1pYaHdiM0owY3lrZ1BUNGdlMXh1WEhScFppaDBlWEJsYjJZZ1UzbHRZbTlzSUNFOVBTQW5kVzVrWldacGJtVmtKeUFtSmlCVGVXMWliMnd1ZEc5VGRISnBibWRVWVdjcElIdGNibHgwWEhSUFltcGxZM1F1WkdWbWFXNWxVSEp2Y0dWeWRIa29aWGh3YjNKMGN5d2dVM2x0WW05c0xuUnZVM1J5YVc1blZHRm5MQ0I3SUhaaGJIVmxPaUFuVFc5a2RXeGxKeUI5S1R0Y2JseDBmVnh1WEhSUFltcGxZM1F1WkdWbWFXNWxVSEp2Y0dWeWRIa29aWGh3YjNKMGN5d2dKMTlmWlhOTmIyUjFiR1VuTENCN0lIWmhiSFZsT2lCMGNuVmxJSDBwTzF4dWZUc2lMQ0psZUhCdmNuUWdkbUZ5SUhSdmNDQTlJQ2QwYjNBbk8xeHVaWGh3YjNKMElIWmhjaUJpYjNSMGIyMGdQU0FuWW05MGRHOXRKenRjYm1WNGNHOXlkQ0IyWVhJZ2NtbG5hSFFnUFNBbmNtbG5hSFFuTzF4dVpYaHdiM0owSUhaaGNpQnNaV1owSUQwZ0oyeGxablFuTzF4dVpYaHdiM0owSUhaaGNpQmhkWFJ2SUQwZ0oyRjFkRzhuTzF4dVpYaHdiM0owSUhaaGNpQmlZWE5sVUd4aFkyVnRaVzUwY3lBOUlGdDBiM0FzSUdKdmRIUnZiU3dnY21sbmFIUXNJR3hsWm5SZE8xeHVaWGh3YjNKMElIWmhjaUJ6ZEdGeWRDQTlJQ2R6ZEdGeWRDYzdYRzVsZUhCdmNuUWdkbUZ5SUdWdVpDQTlJQ2RsYm1Rbk8xeHVaWGh3YjNKMElIWmhjaUJqYkdsd2NHbHVaMUJoY21WdWRITWdQU0FuWTJ4cGNIQnBibWRRWVhKbGJuUnpKenRjYm1WNGNHOXlkQ0IyWVhJZ2RtbGxkM0J2Y25RZ1BTQW5kbWxsZDNCdmNuUW5PMXh1Wlhod2IzSjBJSFpoY2lCd2IzQndaWElnUFNBbmNHOXdjR1Z5Snp0Y2JtVjRjRzl5ZENCMllYSWdjbVZtWlhKbGJtTmxJRDBnSjNKbFptVnlaVzVqWlNjN1hHNWxlSEJ2Y25RZ2RtRnlJSFpoY21saGRHbHZibEJzWVdObGJXVnVkSE1nUFNBdktpTmZYMUJWVWtWZlh5b3ZZbUZ6WlZCc1lXTmxiV1Z1ZEhNdWNtVmtkV05sS0daMWJtTjBhVzl1SUNoaFkyTXNJSEJzWVdObGJXVnVkQ2tnZTF4dUlDQnlaWFIxY200Z1lXTmpMbU52Ym1OaGRDaGJjR3hoWTJWdFpXNTBJQ3NnWENJdFhDSWdLeUJ6ZEdGeWRDd2djR3hoWTJWdFpXNTBJQ3NnWENJdFhDSWdLeUJsYm1SZEtUdGNibjBzSUZ0ZEtUdGNibVY0Y0c5eWRDQjJZWElnY0d4aFkyVnRaVzUwY3lBOUlDOHFJMTlmVUZWU1JWOWZLaTliWFM1amIyNWpZWFFvWW1GelpWQnNZV05sYldWdWRITXNJRnRoZFhSdlhTa3VjbVZrZFdObEtHWjFibU4wYVc5dUlDaGhZMk1zSUhCc1lXTmxiV1Z1ZENrZ2UxeHVJQ0J5WlhSMWNtNGdZV05qTG1OdmJtTmhkQ2hiY0d4aFkyVnRaVzUwTENCd2JHRmpaVzFsYm5RZ0t5QmNJaTFjSWlBcklITjBZWEowTENCd2JHRmpaVzFsYm5RZ0t5QmNJaTFjSWlBcklHVnVaRjBwTzF4dWZTd2dXMTBwT3lBdkx5QnRiMlJwWm1sbGNuTWdkR2hoZENCdVpXVmtJSFJ2SUhKbFlXUWdkR2hsSUVSUFRWeHVYRzVsZUhCdmNuUWdkbUZ5SUdKbFptOXlaVkpsWVdRZ1BTQW5ZbVZtYjNKbFVtVmhaQ2M3WEc1bGVIQnZjblFnZG1GeUlISmxZV1FnUFNBbmNtVmhaQ2M3WEc1bGVIQnZjblFnZG1GeUlHRm1kR1Z5VW1WaFpDQTlJQ2RoWm5SbGNsSmxZV1FuT3lBdkx5QndkWEpsTFd4dloybGpJRzF2WkdsbWFXVnljMXh1WEc1bGVIQnZjblFnZG1GeUlHSmxabTl5WlUxaGFXNGdQU0FuWW1WbWIzSmxUV0ZwYmljN1hHNWxlSEJ2Y25RZ2RtRnlJRzFoYVc0Z1BTQW5iV0ZwYmljN1hHNWxlSEJ2Y25RZ2RtRnlJR0ZtZEdWeVRXRnBiaUE5SUNkaFpuUmxjazFoYVc0bk95QXZMeUJ0YjJScFptbGxjaUIzYVhSb0lIUm9aU0J3ZFhKd2IzTmxJSFJ2SUhkeWFYUmxJSFJ2SUhSb1pTQkVUMDBnS0c5eUlIZHlhWFJsSUdsdWRHOGdZU0JtY21GdFpYZHZjbXNnYzNSaGRHVXBYRzVjYm1WNGNHOXlkQ0IyWVhJZ1ltVm1iM0psVjNKcGRHVWdQU0FuWW1WbWIzSmxWM0pwZEdVbk8xeHVaWGh3YjNKMElIWmhjaUIzY21sMFpTQTlJQ2QzY21sMFpTYzdYRzVsZUhCdmNuUWdkbUZ5SUdGbWRHVnlWM0pwZEdVZ1BTQW5ZV1owWlhKWGNtbDBaU2M3WEc1bGVIQnZjblFnZG1GeUlHMXZaR2xtYVdWeVVHaGhjMlZ6SUQwZ1cySmxabTl5WlZKbFlXUXNJSEpsWVdRc0lHRm1kR1Z5VW1WaFpDd2dZbVZtYjNKbFRXRnBiaXdnYldGcGJpd2dZV1owWlhKTllXbHVMQ0JpWldadmNtVlhjbWwwWlN3Z2QzSnBkR1VzSUdGbWRHVnlWM0pwZEdWZE95SXNJbVY0Y0c5eWRDQmtaV1poZFd4MElHWjFibU4wYVc5dUlHZGxkRTV2WkdWT1lXMWxLR1ZzWlcxbGJuUXBJSHRjYmlBZ2NtVjBkWEp1SUdWc1pXMWxiblFnUHlBb1pXeGxiV1Z1ZEM1dWIyUmxUbUZ0WlNCOGZDQW5KeWt1ZEc5TWIzZGxja05oYzJVb0tTQTZJRzUxYkd3N1hHNTlJaXdpWlhod2IzSjBJR1JsWm1GMWJIUWdablZ1WTNScGIyNGdaMlYwVjJsdVpHOTNLRzV2WkdVcElIdGNiaUFnYVdZZ0tHNXZaR1VnUFQwZ2JuVnNiQ2tnZTF4dUlDQWdJSEpsZEhWeWJpQjNhVzVrYjNjN1hHNGdJSDFjYmx4dUlDQnBaaUFvYm05a1pTNTBiMU4wY21sdVp5Z3BJQ0U5UFNBblcyOWlhbVZqZENCWGFXNWtiM2RkSnlrZ2UxeHVJQ0FnSUhaaGNpQnZkMjVsY2tSdlkzVnRaVzUwSUQwZ2JtOWtaUzV2ZDI1bGNrUnZZM1Z0Wlc1ME8xeHVJQ0FnSUhKbGRIVnliaUJ2ZDI1bGNrUnZZM1Z0Wlc1MElEOGdiM2R1WlhKRWIyTjFiV1Z1ZEM1a1pXWmhkV3gwVm1sbGR5QjhmQ0IzYVc1a2IzY2dPaUIzYVc1a2IzYzdYRzRnSUgxY2JseHVJQ0J5WlhSMWNtNGdibTlrWlR0Y2JuMGlMQ0pwYlhCdmNuUWdaMlYwVjJsdVpHOTNJR1p5YjIwZ1hDSXVMMmRsZEZkcGJtUnZkeTVxYzF3aU8xeHVYRzVtZFc1amRHbHZiaUJwYzBWc1pXMWxiblFvYm05a1pTa2dlMXh1SUNCMllYSWdUM2R1Uld4bGJXVnVkQ0E5SUdkbGRGZHBibVJ2ZHlodWIyUmxLUzVGYkdWdFpXNTBPMXh1SUNCeVpYUjFjbTRnYm05a1pTQnBibk4wWVc1alpXOW1JRTkzYmtWc1pXMWxiblFnZkh3Z2JtOWtaU0JwYm5OMFlXNWpaVzltSUVWc1pXMWxiblE3WEc1OVhHNWNibVoxYm1OMGFXOXVJR2x6U0ZSTlRFVnNaVzFsYm5Rb2JtOWtaU2tnZTF4dUlDQjJZWElnVDNkdVJXeGxiV1Z1ZENBOUlHZGxkRmRwYm1SdmR5aHViMlJsS1M1SVZFMU1SV3hsYldWdWREdGNiaUFnY21WMGRYSnVJRzV2WkdVZ2FXNXpkR0Z1WTJWdlppQlBkMjVGYkdWdFpXNTBJSHg4SUc1dlpHVWdhVzV6ZEdGdVkyVnZaaUJJVkUxTVJXeGxiV1Z1ZER0Y2JuMWNibHh1Wm5WdVkzUnBiMjRnYVhOVGFHRmtiM2RTYjI5MEtHNXZaR1VwSUh0Y2JpQWdMeThnU1VVZ01URWdhR0Z6SUc1dklGTm9ZV1J2ZDFKdmIzUmNiaUFnYVdZZ0tIUjVjR1Z2WmlCVGFHRmtiM2RTYjI5MElEMDlQU0FuZFc1a1pXWnBibVZrSnlrZ2UxeHVJQ0FnSUhKbGRIVnliaUJtWVd4elpUdGNiaUFnZlZ4dVhHNGdJSFpoY2lCUGQyNUZiR1Z0Wlc1MElEMGdaMlYwVjJsdVpHOTNLRzV2WkdVcExsTm9ZV1J2ZDFKdmIzUTdYRzRnSUhKbGRIVnliaUJ1YjJSbElHbHVjM1JoYm1ObGIyWWdUM2R1Uld4bGJXVnVkQ0I4ZkNCdWIyUmxJR2x1YzNSaGJtTmxiMllnVTJoaFpHOTNVbTl2ZER0Y2JuMWNibHh1Wlhod2IzSjBJSHNnYVhORmJHVnRaVzUwTENCcGMwaFVUVXhGYkdWdFpXNTBMQ0JwYzFOb1lXUnZkMUp2YjNRZ2ZUc2lMQ0pwYlhCdmNuUWdaMlYwVG05a1pVNWhiV1VnWm5KdmJTQmNJaTR1TDJSdmJTMTFkR2xzY3k5blpYUk9iMlJsVG1GdFpTNXFjMXdpTzF4dWFXMXdiM0owSUhzZ2FYTklWRTFNUld4bGJXVnVkQ0I5SUdaeWIyMGdYQ0l1TGk5a2IyMHRkWFJwYkhNdmFXNXpkR0Z1WTJWUFppNXFjMXdpT3lBdkx5QlVhR2x6SUcxdlpHbG1hV1Z5SUhSaGEyVnpJSFJvWlNCemRIbHNaWE1nY0hKbGNHRnlaV1FnWW5rZ2RHaGxJR0JqYjIxd2RYUmxVM1I1YkdWellDQnRiMlJwWm1sbGNseHVMeThnWVc1a0lHRndjR3hwWlhNZ2RHaGxiU0IwYnlCMGFHVWdTRlJOVEVWc1pXMWxiblJ6SUhOMVkyZ2dZWE1nY0c5d2NHVnlJR0Z1WkNCaGNuSnZkMXh1WEc1bWRXNWpkR2x2YmlCaGNIQnNlVk4wZVd4bGN5aGZjbVZtS1NCN1hHNGdJSFpoY2lCemRHRjBaU0E5SUY5eVpXWXVjM1JoZEdVN1hHNGdJRTlpYW1WamRDNXJaWGx6S0hOMFlYUmxMbVZzWlcxbGJuUnpLUzVtYjNKRllXTm9LR1oxYm1OMGFXOXVJQ2h1WVcxbEtTQjdYRzRnSUNBZ2RtRnlJSE4wZVd4bElEMGdjM1JoZEdVdWMzUjViR1Z6VzI1aGJXVmRJSHg4SUh0OU8xeHVJQ0FnSUhaaGNpQmhkSFJ5YVdKMWRHVnpJRDBnYzNSaGRHVXVZWFIwY21saWRYUmxjMXR1WVcxbFhTQjhmQ0I3ZlR0Y2JpQWdJQ0IyWVhJZ1pXeGxiV1Z1ZENBOUlITjBZWFJsTG1Wc1pXMWxiblJ6VzI1aGJXVmRPeUF2THlCaGNuSnZkeUJwY3lCdmNIUnBiMjVoYkNBcklIWnBjblIxWVd3Z1pXeGxiV1Z1ZEhOY2JseHVJQ0FnSUdsbUlDZ2hhWE5JVkUxTVJXeGxiV1Z1ZENobGJHVnRaVzUwS1NCOGZDQWhaMlYwVG05a1pVNWhiV1VvWld4bGJXVnVkQ2twSUh0Y2JpQWdJQ0FnSUhKbGRIVnlianRjYmlBZ0lDQjlJQzh2SUVac2IzY2daRzlsYzI0bmRDQnpkWEJ3YjNKMElIUnZJR1Y0ZEdWdVpDQjBhR2x6SUhCeWIzQmxjblI1TENCaWRYUWdhWFFuY3lCMGFHVWdiVzl6ZEZ4dUlDQWdJQzh2SUdWbVptVmpkR2wyWlNCM1lYa2dkRzhnWVhCd2JIa2djM1I1YkdWeklIUnZJR0Z1SUVoVVRVeEZiR1Z0Wlc1MFhHNGdJQ0FnTHk4Z0pFWnNiM2RHYVhoTlpWdGpZVzV1YjNRdGQzSnBkR1ZkWEc1Y2JseHVJQ0FnSUU5aWFtVmpkQzVoYzNOcFoyNG9aV3hsYldWdWRDNXpkSGxzWlN3Z2MzUjViR1VwTzF4dUlDQWdJRTlpYW1WamRDNXJaWGx6S0dGMGRISnBZblYwWlhNcExtWnZja1ZoWTJnb1puVnVZM1JwYjI0Z0tHNWhiV1VwSUh0Y2JpQWdJQ0FnSUhaaGNpQjJZV3gxWlNBOUlHRjBkSEpwWW5WMFpYTmJibUZ0WlYwN1hHNWNiaUFnSUNBZ0lHbG1JQ2gyWVd4MVpTQTlQVDBnWm1Gc2MyVXBJSHRjYmlBZ0lDQWdJQ0FnWld4bGJXVnVkQzV5WlcxdmRtVkJkSFJ5YVdKMWRHVW9ibUZ0WlNrN1hHNGdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNCbGJHVnRaVzUwTG5ObGRFRjBkSEpwWW5WMFpTaHVZVzFsTENCMllXeDFaU0E5UFQwZ2RISjFaU0EvSUNjbklEb2dkbUZzZFdVcE8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgwcE8xeHVJQ0I5S1R0Y2JuMWNibHh1Wm5WdVkzUnBiMjRnWldabVpXTjBLRjl5WldZeUtTQjdYRzRnSUhaaGNpQnpkR0YwWlNBOUlGOXlaV1l5TG5OMFlYUmxPMXh1SUNCMllYSWdhVzVwZEdsaGJGTjBlV3hsY3lBOUlIdGNiaUFnSUNCd2IzQndaWEk2SUh0Y2JpQWdJQ0FnSUhCdmMybDBhVzl1T2lCemRHRjBaUzV2Y0hScGIyNXpMbk4wY21GMFpXZDVMRnh1SUNBZ0lDQWdiR1ZtZERvZ0p6QW5MRnh1SUNBZ0lDQWdkRzl3T2lBbk1DY3NYRzRnSUNBZ0lDQnRZWEpuYVc0NklDY3dKMXh1SUNBZ0lIMHNYRzRnSUNBZ1lYSnliM2M2SUh0Y2JpQWdJQ0FnSUhCdmMybDBhVzl1T2lBbllXSnpiMngxZEdVblhHNGdJQ0FnZlN4Y2JpQWdJQ0J5WldabGNtVnVZMlU2SUh0OVhHNGdJSDA3WEc0Z0lFOWlhbVZqZEM1aGMzTnBaMjRvYzNSaGRHVXVaV3hsYldWdWRITXVjRzl3Y0dWeUxuTjBlV3hsTENCcGJtbDBhV0ZzVTNSNWJHVnpMbkJ2Y0hCbGNpazdYRzRnSUhOMFlYUmxMbk4wZVd4bGN5QTlJR2x1YVhScFlXeFRkSGxzWlhNN1hHNWNiaUFnYVdZZ0tITjBZWFJsTG1Wc1pXMWxiblJ6TG1GeWNtOTNLU0I3WEc0Z0lDQWdUMkpxWldOMExtRnpjMmxuYmloemRHRjBaUzVsYkdWdFpXNTBjeTVoY25KdmR5NXpkSGxzWlN3Z2FXNXBkR2xoYkZOMGVXeGxjeTVoY25KdmR5azdYRzRnSUgxY2JseHVJQ0J5WlhSMWNtNGdablZ1WTNScGIyNGdLQ2tnZTF4dUlDQWdJRTlpYW1WamRDNXJaWGx6S0hOMFlYUmxMbVZzWlcxbGJuUnpLUzVtYjNKRllXTm9LR1oxYm1OMGFXOXVJQ2h1WVcxbEtTQjdYRzRnSUNBZ0lDQjJZWElnWld4bGJXVnVkQ0E5SUhOMFlYUmxMbVZzWlcxbGJuUnpXMjVoYldWZE8xeHVJQ0FnSUNBZ2RtRnlJR0YwZEhKcFluVjBaWE1nUFNCemRHRjBaUzVoZEhSeWFXSjFkR1Z6VzI1aGJXVmRJSHg4SUh0OU8xeHVJQ0FnSUNBZ2RtRnlJSE4wZVd4bFVISnZjR1Z5ZEdsbGN5QTlJRTlpYW1WamRDNXJaWGx6S0hOMFlYUmxMbk4wZVd4bGN5NW9ZWE5QZDI1UWNtOXdaWEowZVNodVlXMWxLU0EvSUhOMFlYUmxMbk4wZVd4bGMxdHVZVzFsWFNBNklHbHVhWFJwWVd4VGRIbHNaWE5iYm1GdFpWMHBPeUF2THlCVFpYUWdZV3hzSUhaaGJIVmxjeUIwYnlCaGJpQmxiWEIwZVNCemRISnBibWNnZEc4Z2RXNXpaWFFnZEdobGJWeHVYRzRnSUNBZ0lDQjJZWElnYzNSNWJHVWdQU0J6ZEhsc1pWQnliM0JsY25ScFpYTXVjbVZrZFdObEtHWjFibU4wYVc5dUlDaHpkSGxzWlN3Z2NISnZjR1Z5ZEhrcElIdGNiaUFnSUNBZ0lDQWdjM1I1YkdWYmNISnZjR1Z5ZEhsZElEMGdKeWM3WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJ6ZEhsc1pUdGNiaUFnSUNBZ0lIMHNJSHQ5S1RzZ0x5OGdZWEp5YjNjZ2FYTWdiM0IwYVc5dVlXd2dLeUIyYVhKMGRXRnNJR1ZzWlcxbGJuUnpYRzVjYmlBZ0lDQWdJR2xtSUNnaGFYTklWRTFNUld4bGJXVnVkQ2hsYkdWdFpXNTBLU0I4ZkNBaFoyVjBUbTlrWlU1aGJXVW9aV3hsYldWdWRDa3BJSHRjYmlBZ0lDQWdJQ0FnY21WMGRYSnVPMXh1SUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0JQWW1wbFkzUXVZWE56YVdkdUtHVnNaVzFsYm5RdWMzUjViR1VzSUhOMGVXeGxLVHRjYmlBZ0lDQWdJRTlpYW1WamRDNXJaWGx6S0dGMGRISnBZblYwWlhNcExtWnZja1ZoWTJnb1puVnVZM1JwYjI0Z0tHRjBkSEpwWW5WMFpTa2dlMXh1SUNBZ0lDQWdJQ0JsYkdWdFpXNTBMbkpsYlc5MlpVRjBkSEpwWW5WMFpTaGhkSFJ5YVdKMWRHVXBPMXh1SUNBZ0lDQWdmU2s3WEc0Z0lDQWdmU2s3WEc0Z0lIMDdYRzU5SUM4dklHVnpiR2x1ZEMxa2FYTmhZbXhsTFc1bGVIUXRiR2x1WlNCcGJYQnZjblF2Ym04dGRXNTFjMlZrTFcxdlpIVnNaWE5jYmx4dVhHNWxlSEJ2Y25RZ1pHVm1ZWFZzZENCN1hHNGdJRzVoYldVNklDZGhjSEJzZVZOMGVXeGxjeWNzWEc0Z0lHVnVZV0pzWldRNklIUnlkV1VzWEc0Z0lIQm9ZWE5sT2lBbmQzSnBkR1VuTEZ4dUlDQm1iam9nWVhCd2JIbFRkSGxzWlhNc1hHNGdJR1ZtWm1WamREb2daV1ptWldOMExGeHVJQ0J5WlhGMWFYSmxjem9nV3lkamIyMXdkWFJsVTNSNWJHVnpKMTFjYm4wN0lpd2lhVzF3YjNKMElIc2dZWFYwYnlCOUlHWnliMjBnWENJdUxpOWxiblZ0Y3k1cWMxd2lPMXh1Wlhod2IzSjBJR1JsWm1GMWJIUWdablZ1WTNScGIyNGdaMlYwUW1GelpWQnNZV05sYldWdWRDaHdiR0ZqWlcxbGJuUXBJSHRjYmlBZ2NtVjBkWEp1SUhCc1lXTmxiV1Z1ZEM1emNHeHBkQ2duTFNjcFd6QmRPMXh1ZlNJc0ltVjRjRzl5ZENCMllYSWdiV0Y0SUQwZ1RXRjBhQzV0WVhnN1hHNWxlSEJ2Y25RZ2RtRnlJRzFwYmlBOUlFMWhkR2d1YldsdU8xeHVaWGh3YjNKMElIWmhjaUJ5YjNWdVpDQTlJRTFoZEdndWNtOTFibVE3SWl3aWFXMXdiM0owSUhzZ2FYTklWRTFNUld4bGJXVnVkQ0I5SUdaeWIyMGdYQ0l1TDJsdWMzUmhibU5sVDJZdWFuTmNJanRjYm1sdGNHOXlkQ0I3SUhKdmRXNWtJSDBnWm5KdmJTQmNJaTR1TDNWMGFXeHpMMjFoZEdndWFuTmNJanRjYm1WNGNHOXlkQ0JrWldaaGRXeDBJR1oxYm1OMGFXOXVJR2RsZEVKdmRXNWthVzVuUTJ4cFpXNTBVbVZqZENobGJHVnRaVzUwTENCcGJtTnNkV1JsVTJOaGJHVXBJSHRjYmlBZ2FXWWdLR2x1WTJ4MVpHVlRZMkZzWlNBOVBUMGdkbTlwWkNBd0tTQjdYRzRnSUNBZ2FXNWpiSFZrWlZOallXeGxJRDBnWm1Gc2MyVTdYRzRnSUgxY2JseHVJQ0IyWVhJZ2NtVmpkQ0E5SUdWc1pXMWxiblF1WjJWMFFtOTFibVJwYm1kRGJHbGxiblJTWldOMEtDazdYRzRnSUhaaGNpQnpZMkZzWlZnZ1BTQXhPMXh1SUNCMllYSWdjMk5oYkdWWklEMGdNVHRjYmx4dUlDQnBaaUFvYVhOSVZFMU1SV3hsYldWdWRDaGxiR1Z0Wlc1MEtTQW1KaUJwYm1Oc2RXUmxVMk5oYkdVcElIdGNiaUFnSUNCMllYSWdiMlptYzJWMFNHVnBaMmgwSUQwZ1pXeGxiV1Z1ZEM1dlptWnpaWFJJWldsbmFIUTdYRzRnSUNBZ2RtRnlJRzltWm5ObGRGZHBaSFJvSUQwZ1pXeGxiV1Z1ZEM1dlptWnpaWFJYYVdSMGFEc2dMeThnUkc4Z2JtOTBJR0YwZEdWdGNIUWdkRzhnWkdsMmFXUmxJR0o1SURBc0lHOTBhR1Z5ZDJselpTQjNaU0JuWlhRZ1lFbHVabWx1YVhSNVlDQmhjeUJ6WTJGc1pWeHVJQ0FnSUM4dklFWmhiR3hpWVdOcklIUnZJREVnYVc0Z1kyRnpaU0JpYjNSb0lIWmhiSFZsY3lCaGNtVWdZREJnWEc1Y2JpQWdJQ0JwWmlBb2IyWm1jMlYwVjJsa2RHZ2dQaUF3S1NCN1hHNGdJQ0FnSUNCelkyRnNaVmdnUFNCeWIzVnVaQ2h5WldOMExuZHBaSFJvS1NBdklHOW1abk5sZEZkcFpIUm9JSHg4SURFN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnYVdZZ0tHOW1abk5sZEVobGFXZG9kQ0ErSURBcElIdGNiaUFnSUNBZ0lITmpZV3hsV1NBOUlISnZkVzVrS0hKbFkzUXVhR1ZwWjJoMEtTQXZJRzltWm5ObGRFaGxhV2RvZENCOGZDQXhPMXh1SUNBZ0lIMWNiaUFnZlZ4dVhHNGdJSEpsZEhWeWJpQjdYRzRnSUNBZ2QybGtkR2c2SUhKbFkzUXVkMmxrZEdnZ0x5QnpZMkZzWlZnc1hHNGdJQ0FnYUdWcFoyaDBPaUJ5WldOMExtaGxhV2RvZENBdklITmpZV3hsV1N4Y2JpQWdJQ0IwYjNBNklISmxZM1F1ZEc5d0lDOGdjMk5oYkdWWkxGeHVJQ0FnSUhKcFoyaDBPaUJ5WldOMExuSnBaMmgwSUM4Z2MyTmhiR1ZZTEZ4dUlDQWdJR0p2ZEhSdmJUb2djbVZqZEM1aWIzUjBiMjBnTHlCelkyRnNaVmtzWEc0Z0lDQWdiR1ZtZERvZ2NtVmpkQzVzWldaMElDOGdjMk5oYkdWWUxGeHVJQ0FnSUhnNklISmxZM1F1YkdWbWRDQXZJSE5qWVd4bFdDeGNiaUFnSUNCNU9pQnlaV04wTG5SdmNDQXZJSE5qWVd4bFdWeHVJQ0I5TzF4dWZTSXNJbWx0Y0c5eWRDQm5aWFJDYjNWdVpHbHVaME5zYVdWdWRGSmxZM1FnWm5KdmJTQmNJaTR2WjJWMFFtOTFibVJwYm1kRGJHbGxiblJTWldOMExtcHpYQ0k3SUM4dklGSmxkSFZ5Ym5NZ2RHaGxJR3hoZVc5MWRDQnlaV04wSUc5bUlHRnVJR1ZzWlcxbGJuUWdjbVZzWVhScGRtVWdkRzhnYVhSeklHOW1abk5sZEZCaGNtVnVkQzRnVEdGNWIzVjBYRzR2THlCdFpXRnVjeUJwZENCa2IyVnpiaWQwSUhSaGEyVWdhVzUwYnlCaFkyTnZkVzUwSUhSeVlXNXpabTl5YlhNdVhHNWNibVY0Y0c5eWRDQmtaV1poZFd4MElHWjFibU4wYVc5dUlHZGxkRXhoZVc5MWRGSmxZM1FvWld4bGJXVnVkQ2tnZTF4dUlDQjJZWElnWTJ4cFpXNTBVbVZqZENBOUlHZGxkRUp2ZFc1a2FXNW5RMnhwWlc1MFVtVmpkQ2hsYkdWdFpXNTBLVHNnTHk4Z1ZYTmxJSFJvWlNCamJHbGxiblJTWldOMElITnBlbVZ6SUdsbUlHbDBKM01nYm05MElHSmxaVzRnZEhKaGJuTm1iM0p0WldRdVhHNGdJQzh2SUVacGVHVnpJR2gwZEhCek9pOHZaMmwwYUhWaUxtTnZiUzl3YjNCd1pYSnFjeTl3YjNCd1pYSXRZMjl5WlM5cGMzTjFaWE12TVRJeU0xeHVYRzRnSUhaaGNpQjNhV1IwYUNBOUlHVnNaVzFsYm5RdWIyWm1jMlYwVjJsa2RHZzdYRzRnSUhaaGNpQm9aV2xuYUhRZ1BTQmxiR1Z0Wlc1MExtOW1abk5sZEVobGFXZG9kRHRjYmx4dUlDQnBaaUFvVFdGMGFDNWhZbk1vWTJ4cFpXNTBVbVZqZEM1M2FXUjBhQ0F0SUhkcFpIUm9LU0E4UFNBeEtTQjdYRzRnSUNBZ2QybGtkR2dnUFNCamJHbGxiblJTWldOMExuZHBaSFJvTzF4dUlDQjlYRzVjYmlBZ2FXWWdLRTFoZEdndVlXSnpLR05zYVdWdWRGSmxZM1F1YUdWcFoyaDBJQzBnYUdWcFoyaDBLU0E4UFNBeEtTQjdYRzRnSUNBZ2FHVnBaMmgwSUQwZ1kyeHBaVzUwVW1WamRDNW9aV2xuYUhRN1hHNGdJSDFjYmx4dUlDQnlaWFIxY200Z2UxeHVJQ0FnSUhnNklHVnNaVzFsYm5RdWIyWm1jMlYwVEdWbWRDeGNiaUFnSUNCNU9pQmxiR1Z0Wlc1MExtOW1abk5sZEZSdmNDeGNiaUFnSUNCM2FXUjBhRG9nZDJsa2RHZ3NYRzRnSUNBZ2FHVnBaMmgwT2lCb1pXbG5hSFJjYmlBZ2ZUdGNibjBpTENKcGJYQnZjblFnZXlCcGMxTm9ZV1J2ZDFKdmIzUWdmU0JtY205dElGd2lMaTlwYm5OMFlXNWpaVTltTG1welhDSTdYRzVsZUhCdmNuUWdaR1ZtWVhWc2RDQm1kVzVqZEdsdmJpQmpiMjUwWVdsdWN5aHdZWEpsYm5Rc0lHTm9hV3hrS1NCN1hHNGdJSFpoY2lCeWIyOTBUbTlrWlNBOUlHTm9hV3hrTG1kbGRGSnZiM1JPYjJSbElDWW1JR05vYVd4a0xtZGxkRkp2YjNST2IyUmxLQ2s3SUM4dklFWnBjbk4wTENCaGRIUmxiWEIwSUhkcGRHZ2dabUZ6ZEdWeUlHNWhkR2wyWlNCdFpYUm9iMlJjYmx4dUlDQnBaaUFvY0dGeVpXNTBMbU52Ym5SaGFXNXpLR05vYVd4a0tTa2dlMXh1SUNBZ0lISmxkSFZ5YmlCMGNuVmxPMXh1SUNCOUlDOHZJSFJvWlc0Z1ptRnNiR0poWTJzZ2RHOGdZM1Z6ZEc5dElHbHRjR3hsYldWdWRHRjBhVzl1SUhkcGRHZ2dVMmhoWkc5M0lFUlBUU0J6ZFhCd2IzSjBYRzRnSUdWc2MyVWdhV1lnS0hKdmIzUk9iMlJsSUNZbUlHbHpVMmhoWkc5M1VtOXZkQ2h5YjI5MFRtOWtaU2twSUh0Y2JpQWdJQ0FnSUhaaGNpQnVaWGgwSUQwZ1kyaHBiR1E3WEc1Y2JpQWdJQ0FnSUdSdklIdGNiaUFnSUNBZ0lDQWdhV1lnS0c1bGVIUWdKaVlnY0dGeVpXNTBMbWx6VTJGdFpVNXZaR1VvYm1WNGRDa3BJSHRjYmlBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEhKMVpUdGNiaUFnSUNBZ0lDQWdmU0F2THlBa1JteHZkMFpwZUUxbFczQnliM0F0YldsemMybHVaMTA2SUc1bFpXUWdZU0JpWlhSMFpYSWdkMkY1SUhSdklHaGhibVJzWlNCMGFHbHpMaTR1WEc1Y2JseHVJQ0FnSUNBZ0lDQnVaWGgwSUQwZ2JtVjRkQzV3WVhKbGJuUk9iMlJsSUh4OElHNWxlSFF1YUc5emREdGNiaUFnSUNBZ0lIMGdkMmhwYkdVZ0tHNWxlSFFwTzF4dUlDQWdJSDBnTHk4Z1IybDJaU0IxY0N3Z2RHaGxJSEpsYzNWc2RDQnBjeUJtWVd4elpWeHVYRzVjYmlBZ2NtVjBkWEp1SUdaaGJITmxPMXh1ZlNJc0ltbHRjRzl5ZENCblpYUlhhVzVrYjNjZ1puSnZiU0JjSWk0dloyVjBWMmx1Wkc5M0xtcHpYQ0k3WEc1bGVIQnZjblFnWkdWbVlYVnNkQ0JtZFc1amRHbHZiaUJuWlhSRGIyMXdkWFJsWkZOMGVXeGxLR1ZzWlcxbGJuUXBJSHRjYmlBZ2NtVjBkWEp1SUdkbGRGZHBibVJ2ZHlobGJHVnRaVzUwS1M1blpYUkRiMjF3ZFhSbFpGTjBlV3hsS0dWc1pXMWxiblFwTzF4dWZTSXNJbWx0Y0c5eWRDQm5aWFJPYjJSbFRtRnRaU0JtY205dElGd2lMaTluWlhST2IyUmxUbUZ0WlM1cWMxd2lPMXh1Wlhod2IzSjBJR1JsWm1GMWJIUWdablZ1WTNScGIyNGdhWE5VWVdKc1pVVnNaVzFsYm5Rb1pXeGxiV1Z1ZENrZ2UxeHVJQ0J5WlhSMWNtNGdXeWQwWVdKc1pTY3NJQ2QwWkNjc0lDZDBhQ2RkTG1sdVpHVjRUMllvWjJWMFRtOWtaVTVoYldVb1pXeGxiV1Z1ZENrcElENDlJREE3WEc1OUlpd2lhVzF3YjNKMElIc2dhWE5GYkdWdFpXNTBJSDBnWm5KdmJTQmNJaTR2YVc1emRHRnVZMlZQWmk1cWMxd2lPMXh1Wlhod2IzSjBJR1JsWm1GMWJIUWdablZ1WTNScGIyNGdaMlYwUkc5amRXMWxiblJGYkdWdFpXNTBLR1ZzWlcxbGJuUXBJSHRjYmlBZ0x5OGdKRVpzYjNkR2FYaE5aVnRwYm1OdmJYQmhkR2xpYkdVdGNtVjBkWEp1WFRvZ1lYTnpkVzFsSUdKdlpIa2dhWE1nWVd4M1lYbHpJR0YyWVdsc1lXSnNaVnh1SUNCeVpYUjFjbTRnS0NocGMwVnNaVzFsYm5Rb1pXeGxiV1Z1ZENrZ1B5QmxiR1Z0Wlc1MExtOTNibVZ5Ukc5amRXMWxiblFnT2lBdkx5QWtSbXh2ZDBacGVFMWxXM0J5YjNBdGJXbHpjMmx1WjExY2JpQWdaV3hsYldWdWRDNWtiMk4xYldWdWRDa2dmSHdnZDJsdVpHOTNMbVJ2WTNWdFpXNTBLUzVrYjJOMWJXVnVkRVZzWlcxbGJuUTdYRzU5SWl3aWFXMXdiM0owSUdkbGRFNXZaR1ZPWVcxbElHWnliMjBnWENJdUwyZGxkRTV2WkdWT1lXMWxMbXB6WENJN1hHNXBiWEJ2Y25RZ1oyVjBSRzlqZFcxbGJuUkZiR1Z0Wlc1MElHWnliMjBnWENJdUwyZGxkRVJ2WTNWdFpXNTBSV3hsYldWdWRDNXFjMXdpTzF4dWFXMXdiM0owSUhzZ2FYTlRhR0ZrYjNkU2IyOTBJSDBnWm5KdmJTQmNJaTR2YVc1emRHRnVZMlZQWmk1cWMxd2lPMXh1Wlhod2IzSjBJR1JsWm1GMWJIUWdablZ1WTNScGIyNGdaMlYwVUdGeVpXNTBUbTlrWlNobGJHVnRaVzUwS1NCN1hHNGdJR2xtSUNoblpYUk9iMlJsVG1GdFpTaGxiR1Z0Wlc1MEtTQTlQVDBnSjJoMGJXd25LU0I3WEc0Z0lDQWdjbVYwZFhKdUlHVnNaVzFsYm5RN1hHNGdJSDFjYmx4dUlDQnlaWFIxY200Z0tDOHZJSFJvYVhNZ2FYTWdZU0J4ZFdsamEyVnlJQ2hpZFhRZ2JHVnpjeUIwZVhCbElITmhabVVwSUhkaGVTQjBieUJ6WVhabElIRjFhWFJsSUhOdmJXVWdZbmwwWlhNZ1puSnZiU0IwYUdVZ1luVnVaR3hsWEc0Z0lDQWdMeThnSkVac2IzZEdhWGhOWlZ0cGJtTnZiWEJoZEdsaWJHVXRjbVYwZFhKdVhWeHVJQ0FnSUM4dklDUkdiRzkzUm1sNFRXVmJjSEp2Y0MxdGFYTnphVzVuWFZ4dUlDQWdJR1ZzWlcxbGJuUXVZWE56YVdkdVpXUlRiRzkwSUh4OElDOHZJSE4wWlhBZ2FXNTBieUIwYUdVZ2MyaGhaRzkzSUVSUFRTQnZaaUIwYUdVZ2NHRnlaVzUwSUc5bUlHRWdjMnh2ZEhSbFpDQnViMlJsWEc0Z0lDQWdaV3hsYldWdWRDNXdZWEpsYm5ST2IyUmxJSHg4SUNnZ0x5OGdSRTlOSUVWc1pXMWxiblFnWkdWMFpXTjBaV1JjYmlBZ0lDQnBjMU5vWVdSdmQxSnZiM1FvWld4bGJXVnVkQ2tnUHlCbGJHVnRaVzUwTG1odmMzUWdPaUJ1ZFd4c0tTQjhmQ0F2THlCVGFHRmtiM2RTYjI5MElHUmxkR1ZqZEdWa1hHNGdJQ0FnTHk4Z0pFWnNiM2RHYVhoTlpWdHBibU52YlhCaGRHbGliR1V0WTJGc2JGMDZJRWhVVFV4RmJHVnRaVzUwSUdseklHRWdUbTlrWlZ4dUlDQWdJR2RsZEVSdlkzVnRaVzUwUld4bGJXVnVkQ2hsYkdWdFpXNTBLU0F2THlCbVlXeHNZbUZqYTF4dVhHNGdJQ2s3WEc1OUlpd2lhVzF3YjNKMElHZGxkRmRwYm1SdmR5Qm1jbTl0SUZ3aUxpOW5aWFJYYVc1a2IzY3Vhbk5jSWp0Y2JtbHRjRzl5ZENCblpYUk9iMlJsVG1GdFpTQm1jbTl0SUZ3aUxpOW5aWFJPYjJSbFRtRnRaUzVxYzF3aU8xeHVhVzF3YjNKMElHZGxkRU52YlhCMWRHVmtVM1I1YkdVZ1puSnZiU0JjSWk0dloyVjBRMjl0Y0hWMFpXUlRkSGxzWlM1cWMxd2lPMXh1YVcxd2IzSjBJSHNnYVhOSVZFMU1SV3hsYldWdWRDQjlJR1p5YjIwZ1hDSXVMMmx1YzNSaGJtTmxUMll1YW5OY0lqdGNibWx0Y0c5eWRDQnBjMVJoWW14bFJXeGxiV1Z1ZENCbWNtOXRJRndpTGk5cGMxUmhZbXhsUld4bGJXVnVkQzVxYzF3aU8xeHVhVzF3YjNKMElHZGxkRkJoY21WdWRFNXZaR1VnWm5KdmJTQmNJaTR2WjJWMFVHRnlaVzUwVG05a1pTNXFjMXdpTzF4dVhHNW1kVzVqZEdsdmJpQm5aWFJVY25WbFQyWm1jMlYwVUdGeVpXNTBLR1ZzWlcxbGJuUXBJSHRjYmlBZ2FXWWdLQ0ZwYzBoVVRVeEZiR1Z0Wlc1MEtHVnNaVzFsYm5RcElIeDhJQzh2SUdoMGRIQnpPaTh2WjJsMGFIVmlMbU52YlM5d2IzQndaWEpxY3k5d2IzQndaWEl0WTI5eVpTOXBjM04xWlhNdk9ETTNYRzRnSUdkbGRFTnZiWEIxZEdWa1UzUjViR1VvWld4bGJXVnVkQ2t1Y0c5emFYUnBiMjRnUFQwOUlDZG1hWGhsWkNjcElIdGNiaUFnSUNCeVpYUjFjbTRnYm5Wc2JEdGNiaUFnZlZ4dVhHNGdJSEpsZEhWeWJpQmxiR1Z0Wlc1MExtOW1abk5sZEZCaGNtVnVkRHRjYm4wZ0x5OGdZQzV2Wm1aelpYUlFZWEpsYm5SZ0lISmxjRzl5ZEhNZ1lHNTFiR3hnSUdadmNpQm1hWGhsWkNCbGJHVnRaVzUwY3l3Z2QyaHBiR1VnWVdKemIyeDFkR1VnWld4bGJXVnVkSE5jYmk4dklISmxkSFZ5YmlCMGFHVWdZMjl1ZEdGcGJtbHVaeUJpYkc5amExeHVYRzVjYm1aMWJtTjBhVzl1SUdkbGRFTnZiblJoYVc1cGJtZENiRzlqYXlobGJHVnRaVzUwS1NCN1hHNGdJSFpoY2lCcGMwWnBjbVZtYjNnZ1BTQnVZWFpwWjJGMGIzSXVkWE5sY2tGblpXNTBMblJ2VEc5M1pYSkRZWE5sS0NrdWFXNWtaWGhQWmlnblptbHlaV1p2ZUNjcElDRTlQU0F0TVR0Y2JpQWdkbUZ5SUdselNVVWdQU0J1WVhacFoyRjBiM0l1ZFhObGNrRm5aVzUwTG1sdVpHVjRUMllvSjFSeWFXUmxiblFuS1NBaFBUMGdMVEU3WEc1Y2JpQWdhV1lnS0dselNVVWdKaVlnYVhOSVZFMU1SV3hsYldWdWRDaGxiR1Z0Wlc1MEtTa2dlMXh1SUNBZ0lDOHZJRWx1SUVsRklEa3NJREV3SUdGdVpDQXhNU0JtYVhobFpDQmxiR1Z0Wlc1MGN5QmpiMjUwWVdsdWFXNW5JR0pzYjJOcklHbHpJR0ZzZDJGNWN5QmxjM1JoWW14cGMyaGxaQ0JpZVNCMGFHVWdkbWxsZDNCdmNuUmNiaUFnSUNCMllYSWdaV3hsYldWdWRFTnpjeUE5SUdkbGRFTnZiWEIxZEdWa1UzUjViR1VvWld4bGJXVnVkQ2s3WEc1Y2JpQWdJQ0JwWmlBb1pXeGxiV1Z1ZEVOemN5NXdiM05wZEdsdmJpQTlQVDBnSjJacGVHVmtKeWtnZTF4dUlDQWdJQ0FnY21WMGRYSnVJRzUxYkd3N1hHNGdJQ0FnZlZ4dUlDQjlYRzVjYmlBZ2RtRnlJR04xY25KbGJuUk9iMlJsSUQwZ1oyVjBVR0Z5Wlc1MFRtOWtaU2hsYkdWdFpXNTBLVHRjYmx4dUlDQjNhR2xzWlNBb2FYTklWRTFNUld4bGJXVnVkQ2hqZFhKeVpXNTBUbTlrWlNrZ0ppWWdXeWRvZEcxc0p5d2dKMkp2WkhrblhTNXBibVJsZUU5bUtHZGxkRTV2WkdWT1lXMWxLR04xY25KbGJuUk9iMlJsS1NrZ1BDQXdLU0I3WEc0Z0lDQWdkbUZ5SUdOemN5QTlJR2RsZEVOdmJYQjFkR1ZrVTNSNWJHVW9ZM1Z5Y21WdWRFNXZaR1VwT3lBdkx5QlVhR2x6SUdseklHNXZiaTFsZUdoaGRYTjBhWFpsSUdKMWRDQmpiM1psY25NZ2RHaGxJRzF2YzNRZ1kyOXRiVzl1SUVOVFV5QndjbTl3WlhKMGFXVnpJSFJvWVhSY2JpQWdJQ0F2THlCamNtVmhkR1VnWVNCamIyNTBZV2x1YVc1bklHSnNiMk5yTGx4dUlDQWdJQzh2SUdoMGRIQnpPaTh2WkdWMlpXeHZjR1Z5TG0xdmVtbHNiR0V1YjNKbkwyVnVMVlZUTDJSdlkzTXZWMlZpTDBOVFV5OURiMjUwWVdsdWFXNW5YMkpzYjJOckkybGtaVzUwYVdaNWFXNW5YM1JvWlY5amIyNTBZV2x1YVc1blgySnNiMk5yWEc1Y2JpQWdJQ0JwWmlBb1kzTnpMblJ5WVc1elptOXliU0FoUFQwZ0oyNXZibVVuSUh4OElHTnpjeTV3WlhKemNHVmpkR2wyWlNBaFBUMGdKMjV2Ym1VbklIeDhJR056Y3k1amIyNTBZV2x1SUQwOVBTQW5jR0ZwYm5RbklIeDhJRnNuZEhKaGJuTm1iM0p0Snl3Z0ozQmxjbk53WldOMGFYWmxKMTB1YVc1a1pYaFBaaWhqYzNNdWQybHNiRU5vWVc1blpTa2dJVDA5SUMweElIeDhJR2x6Um1seVpXWnZlQ0FtSmlCamMzTXVkMmxzYkVOb1lXNW5aU0E5UFQwZ0oyWnBiSFJsY2ljZ2ZId2dhWE5HYVhKbFptOTRJQ1ltSUdOemN5NW1hV3gwWlhJZ0ppWWdZM056TG1acGJIUmxjaUFoUFQwZ0oyNXZibVVuS1NCN1hHNGdJQ0FnSUNCeVpYUjFjbTRnWTNWeWNtVnVkRTV2WkdVN1hHNGdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJR04xY25KbGJuUk9iMlJsSUQwZ1kzVnljbVZ1ZEU1dlpHVXVjR0Z5Wlc1MFRtOWtaVHRjYmlBZ0lDQjlYRzRnSUgxY2JseHVJQ0J5WlhSMWNtNGdiblZzYkR0Y2JuMGdMeThnUjJWMGN5QjBhR1VnWTJ4dmMyVnpkQ0JoYm1ObGMzUnZjaUJ3YjNOcGRHbHZibVZrSUdWc1pXMWxiblF1SUVoaGJtUnNaWE1nYzI5dFpTQmxaR2RsSUdOaGMyVnpMRnh1THk4Z2MzVmphQ0JoY3lCMFlXSnNaU0JoYm1ObGMzUnZjbk1nWVc1a0lHTnliM056SUdKeWIzZHpaWElnWW5WbmN5NWNibHh1WEc1bGVIQnZjblFnWkdWbVlYVnNkQ0JtZFc1amRHbHZiaUJuWlhSUFptWnpaWFJRWVhKbGJuUW9aV3hsYldWdWRDa2dlMXh1SUNCMllYSWdkMmx1Wkc5M0lEMGdaMlYwVjJsdVpHOTNLR1ZzWlcxbGJuUXBPMXh1SUNCMllYSWdiMlptYzJWMFVHRnlaVzUwSUQwZ1oyVjBWSEoxWlU5bVpuTmxkRkJoY21WdWRDaGxiR1Z0Wlc1MEtUdGNibHh1SUNCM2FHbHNaU0FvYjJabWMyVjBVR0Z5Wlc1MElDWW1JR2x6VkdGaWJHVkZiR1Z0Wlc1MEtHOW1abk5sZEZCaGNtVnVkQ2tnSmlZZ1oyVjBRMjl0Y0hWMFpXUlRkSGxzWlNodlptWnpaWFJRWVhKbGJuUXBMbkJ2YzJsMGFXOXVJRDA5UFNBbmMzUmhkR2xqSnlrZ2UxeHVJQ0FnSUc5bVpuTmxkRkJoY21WdWRDQTlJR2RsZEZSeWRXVlBabVp6WlhSUVlYSmxiblFvYjJabWMyVjBVR0Z5Wlc1MEtUdGNiaUFnZlZ4dVhHNGdJR2xtSUNodlptWnpaWFJRWVhKbGJuUWdKaVlnS0dkbGRFNXZaR1ZPWVcxbEtHOW1abk5sZEZCaGNtVnVkQ2tnUFQwOUlDZG9kRzFzSnlCOGZDQm5aWFJPYjJSbFRtRnRaU2h2Wm1aelpYUlFZWEpsYm5RcElEMDlQU0FuWW05a2VTY2dKaVlnWjJWMFEyOXRjSFYwWldSVGRIbHNaU2h2Wm1aelpYUlFZWEpsYm5RcExuQnZjMmwwYVc5dUlEMDlQU0FuYzNSaGRHbGpKeWtwSUh0Y2JpQWdJQ0J5WlhSMWNtNGdkMmx1Wkc5M08xeHVJQ0I5WEc1Y2JpQWdjbVYwZFhKdUlHOW1abk5sZEZCaGNtVnVkQ0I4ZkNCblpYUkRiMjUwWVdsdWFXNW5RbXh2WTJzb1pXeGxiV1Z1ZENrZ2ZId2dkMmx1Wkc5M08xeHVmU0lzSW1WNGNHOXlkQ0JrWldaaGRXeDBJR1oxYm1OMGFXOXVJR2RsZEUxaGFXNUJlR2x6Um5KdmJWQnNZV05sYldWdWRDaHdiR0ZqWlcxbGJuUXBJSHRjYmlBZ2NtVjBkWEp1SUZzbmRHOXdKeXdnSjJKdmRIUnZiU2RkTG1sdVpHVjRUMllvY0d4aFkyVnRaVzUwS1NBK1BTQXdJRDhnSjNnbklEb2dKM2tuTzF4dWZTSXNJbWx0Y0c5eWRDQjdJRzFoZUNCaGN5QnRZWFJvVFdGNExDQnRhVzRnWVhNZ2JXRjBhRTFwYmlCOUlHWnliMjBnWENJdUwyMWhkR2d1YW5OY0lqdGNibVY0Y0c5eWRDQm1kVzVqZEdsdmJpQjNhWFJvYVc0b2JXbHVMQ0IyWVd4MVpTd2diV0Y0S1NCN1hHNGdJSEpsZEhWeWJpQnRZWFJvVFdGNEtHMXBiaXdnYldGMGFFMXBiaWgyWVd4MVpTd2diV0Y0S1NrN1hHNTlYRzVsZUhCdmNuUWdablZ1WTNScGIyNGdkMmwwYUdsdVRXRjRRMnhoYlhBb2JXbHVMQ0IyWVd4MVpTd2diV0Y0S1NCN1hHNGdJSFpoY2lCMklEMGdkMmwwYUdsdUtHMXBiaXdnZG1Gc2RXVXNJRzFoZUNrN1hHNGdJSEpsZEhWeWJpQjJJRDRnYldGNElEOGdiV0Y0SURvZ2RqdGNibjBpTENKcGJYQnZjblFnWjJWMFJuSmxjMmhUYVdSbFQySnFaV04wSUdaeWIyMGdYQ0l1TDJkbGRFWnlaWE5vVTJsa1pVOWlhbVZqZEM1cWMxd2lPMXh1Wlhod2IzSjBJR1JsWm1GMWJIUWdablZ1WTNScGIyNGdiV1Z5WjJWUVlXUmthVzVuVDJKcVpXTjBLSEJoWkdScGJtZFBZbXBsWTNRcElIdGNiaUFnY21WMGRYSnVJRTlpYW1WamRDNWhjM05wWjI0b2UzMHNJR2RsZEVaeVpYTm9VMmxrWlU5aWFtVmpkQ2dwTENCd1lXUmthVzVuVDJKcVpXTjBLVHRjYm4waUxDSmxlSEJ2Y25RZ1pHVm1ZWFZzZENCbWRXNWpkR2x2YmlCblpYUkdjbVZ6YUZOcFpHVlBZbXBsWTNRb0tTQjdYRzRnSUhKbGRIVnliaUI3WEc0Z0lDQWdkRzl3T2lBd0xGeHVJQ0FnSUhKcFoyaDBPaUF3TEZ4dUlDQWdJR0p2ZEhSdmJUb2dNQ3hjYmlBZ0lDQnNaV1owT2lBd1hHNGdJSDA3WEc1OUlpd2laWGh3YjNKMElHUmxabUYxYkhRZ1puVnVZM1JwYjI0Z1pYaHdZVzVrVkc5SVlYTm9UV0Z3S0haaGJIVmxMQ0JyWlhsektTQjdYRzRnSUhKbGRIVnliaUJyWlhsekxuSmxaSFZqWlNobWRXNWpkR2x2YmlBb2FHRnphRTFoY0N3Z2EyVjVLU0I3WEc0Z0lDQWdhR0Z6YUUxaGNGdHJaWGxkSUQwZ2RtRnNkV1U3WEc0Z0lDQWdjbVYwZFhKdUlHaGhjMmhOWVhBN1hHNGdJSDBzSUh0OUtUdGNibjBpTENKcGJYQnZjblFnWjJWMFFtRnpaVkJzWVdObGJXVnVkQ0JtY205dElGd2lMaTR2ZFhScGJITXZaMlYwUW1GelpWQnNZV05sYldWdWRDNXFjMXdpTzF4dWFXMXdiM0owSUdkbGRFeGhlVzkxZEZKbFkzUWdabkp2YlNCY0lpNHVMMlJ2YlMxMWRHbHNjeTluWlhSTVlYbHZkWFJTWldOMExtcHpYQ0k3WEc1cGJYQnZjblFnWTI5dWRHRnBibk1nWm5KdmJTQmNJaTR1TDJSdmJTMTFkR2xzY3k5amIyNTBZV2x1Y3k1cWMxd2lPMXh1YVcxd2IzSjBJR2RsZEU5bVpuTmxkRkJoY21WdWRDQm1jbTl0SUZ3aUxpNHZaRzl0TFhWMGFXeHpMMmRsZEU5bVpuTmxkRkJoY21WdWRDNXFjMXdpTzF4dWFXMXdiM0owSUdkbGRFMWhhVzVCZUdselJuSnZiVkJzWVdObGJXVnVkQ0JtY205dElGd2lMaTR2ZFhScGJITXZaMlYwVFdGcGJrRjRhWE5HY205dFVHeGhZMlZ0Wlc1MExtcHpYQ0k3WEc1cGJYQnZjblFnZXlCM2FYUm9hVzRnZlNCbWNtOXRJRndpTGk0dmRYUnBiSE12ZDJsMGFHbHVMbXB6WENJN1hHNXBiWEJ2Y25RZ2JXVnlaMlZRWVdSa2FXNW5UMkpxWldOMElHWnliMjBnWENJdUxpOTFkR2xzY3k5dFpYSm5aVkJoWkdScGJtZFBZbXBsWTNRdWFuTmNJanRjYm1sdGNHOXlkQ0JsZUhCaGJtUlViMGhoYzJoTllYQWdabkp2YlNCY0lpNHVMM1YwYVd4ekwyVjRjR0Z1WkZSdlNHRnphRTFoY0M1cWMxd2lPMXh1YVcxd2IzSjBJSHNnYkdWbWRDd2djbWxuYUhRc0lHSmhjMlZRYkdGalpXMWxiblJ6TENCMGIzQXNJR0p2ZEhSdmJTQjlJR1p5YjIwZ1hDSXVMaTlsYm5WdGN5NXFjMXdpTzF4dWFXMXdiM0owSUhzZ2FYTklWRTFNUld4bGJXVnVkQ0I5SUdaeWIyMGdYQ0l1TGk5a2IyMHRkWFJwYkhNdmFXNXpkR0Z1WTJWUFppNXFjMXdpT3lBdkx5QmxjMnhwYm5RdFpHbHpZV0pzWlMxdVpYaDBMV3hwYm1VZ2FXMXdiM0owTDI1dkxYVnVkWE5sWkMxdGIyUjFiR1Z6WEc1Y2JuWmhjaUIwYjFCaFpHUnBibWRQWW1wbFkzUWdQU0JtZFc1amRHbHZiaUIwYjFCaFpHUnBibWRQWW1wbFkzUW9jR0ZrWkdsdVp5d2djM1JoZEdVcElIdGNiaUFnY0dGa1pHbHVaeUE5SUhSNWNHVnZaaUJ3WVdSa2FXNW5JRDA5UFNBblpuVnVZM1JwYjI0bklEOGdjR0ZrWkdsdVp5aFBZbXBsWTNRdVlYTnphV2R1S0h0OUxDQnpkR0YwWlM1eVpXTjBjeXdnZTF4dUlDQWdJSEJzWVdObGJXVnVkRG9nYzNSaGRHVXVjR3hoWTJWdFpXNTBYRzRnSUgwcEtTQTZJSEJoWkdScGJtYzdYRzRnSUhKbGRIVnliaUJ0WlhKblpWQmhaR1JwYm1kUFltcGxZM1FvZEhsd1pXOW1JSEJoWkdScGJtY2dJVDA5SUNkdWRXMWlaWEluSUQ4Z2NHRmtaR2x1WnlBNklHVjRjR0Z1WkZSdlNHRnphRTFoY0Nod1lXUmthVzVuTENCaVlYTmxVR3hoWTJWdFpXNTBjeWtwTzF4dWZUdGNibHh1Wm5WdVkzUnBiMjRnWVhKeWIzY29YM0psWmlrZ2UxeHVJQ0IyWVhJZ1gzTjBZWFJsSkcxdlpHbG1hV1Z5YzBSaGRHRWtPMXh1WEc0Z0lIWmhjaUJ6ZEdGMFpTQTlJRjl5WldZdWMzUmhkR1VzWEc0Z0lDQWdJQ0J1WVcxbElEMGdYM0psWmk1dVlXMWxMRnh1SUNBZ0lDQWdiM0IwYVc5dWN5QTlJRjl5WldZdWIzQjBhVzl1Y3p0Y2JpQWdkbUZ5SUdGeWNtOTNSV3hsYldWdWRDQTlJSE4wWVhSbExtVnNaVzFsYm5SekxtRnljbTkzTzF4dUlDQjJZWElnY0c5d2NHVnlUMlptYzJWMGN5QTlJSE4wWVhSbExtMXZaR2xtYVdWeWMwUmhkR0V1Y0c5d2NHVnlUMlptYzJWMGN6dGNiaUFnZG1GeUlHSmhjMlZRYkdGalpXMWxiblFnUFNCblpYUkNZWE5sVUd4aFkyVnRaVzUwS0hOMFlYUmxMbkJzWVdObGJXVnVkQ2s3WEc0Z0lIWmhjaUJoZUdseklEMGdaMlYwVFdGcGJrRjRhWE5HY205dFVHeGhZMlZ0Wlc1MEtHSmhjMlZRYkdGalpXMWxiblFwTzF4dUlDQjJZWElnYVhOV1pYSjBhV05oYkNBOUlGdHNaV1owTENCeWFXZG9kRjB1YVc1a1pYaFBaaWhpWVhObFVHeGhZMlZ0Wlc1MEtTQStQU0F3TzF4dUlDQjJZWElnYkdWdUlEMGdhWE5XWlhKMGFXTmhiQ0EvSUNkb1pXbG5hSFFuSURvZ0ozZHBaSFJvSnp0Y2JseHVJQ0JwWmlBb0lXRnljbTkzUld4bGJXVnVkQ0I4ZkNBaGNHOXdjR1Z5VDJabWMyVjBjeWtnZTF4dUlDQWdJSEpsZEhWeWJqdGNiaUFnZlZ4dVhHNGdJSFpoY2lCd1lXUmthVzVuVDJKcVpXTjBJRDBnZEc5UVlXUmthVzVuVDJKcVpXTjBLRzl3ZEdsdmJuTXVjR0ZrWkdsdVp5d2djM1JoZEdVcE8xeHVJQ0IyWVhJZ1lYSnliM2RTWldOMElEMGdaMlYwVEdGNWIzVjBVbVZqZENoaGNuSnZkMFZzWlcxbGJuUXBPMXh1SUNCMllYSWdiV2x1VUhKdmNDQTlJR0Y0YVhNZ1BUMDlJQ2Q1SnlBL0lIUnZjQ0E2SUd4bFpuUTdYRzRnSUhaaGNpQnRZWGhRY205d0lEMGdZWGhwY3lBOVBUMGdKM2tuSUQ4Z1ltOTBkRzl0SURvZ2NtbG5hSFE3WEc0Z0lIWmhjaUJsYm1SRWFXWm1JRDBnYzNSaGRHVXVjbVZqZEhNdWNtVm1aWEpsYm1ObFcyeGxibDBnS3lCemRHRjBaUzV5WldOMGN5NXlaV1psY21WdVkyVmJZWGhwYzEwZ0xTQndiM0J3WlhKUFptWnpaWFJ6VzJGNGFYTmRJQzBnYzNSaGRHVXVjbVZqZEhNdWNHOXdjR1Z5VzJ4bGJsMDdYRzRnSUhaaGNpQnpkR0Z5ZEVScFptWWdQU0J3YjNCd1pYSlBabVp6WlhSelcyRjRhWE5kSUMwZ2MzUmhkR1V1Y21WamRITXVjbVZtWlhKbGJtTmxXMkY0YVhOZE8xeHVJQ0IyWVhJZ1lYSnliM2RQWm1aelpYUlFZWEpsYm5RZ1BTQm5aWFJQWm1aelpYUlFZWEpsYm5Rb1lYSnliM2RGYkdWdFpXNTBLVHRjYmlBZ2RtRnlJR05zYVdWdWRGTnBlbVVnUFNCaGNuSnZkMDltWm5ObGRGQmhjbVZ1ZENBL0lHRjRhWE1nUFQwOUlDZDVKeUEvSUdGeWNtOTNUMlptYzJWMFVHRnlaVzUwTG1Oc2FXVnVkRWhsYVdkb2RDQjhmQ0F3SURvZ1lYSnliM2RQWm1aelpYUlFZWEpsYm5RdVkyeHBaVzUwVjJsa2RHZ2dmSHdnTUNBNklEQTdYRzRnSUhaaGNpQmpaVzUwWlhKVWIxSmxabVZ5Wlc1alpTQTlJR1Z1WkVScFptWWdMeUF5SUMwZ2MzUmhjblJFYVdabUlDOGdNanNnTHk4Z1RXRnJaU0J6ZFhKbElIUm9aU0JoY25KdmR5QmtiMlZ6YmlkMElHOTJaWEptYkc5M0lIUm9aU0J3YjNCd1pYSWdhV1lnZEdobElHTmxiblJsY2lCd2IybHVkQ0JwYzF4dUlDQXZMeUJ2ZFhSemFXUmxJRzltSUhSb1pTQndiM0J3WlhJZ1ltOTFibVJ6WEc1Y2JpQWdkbUZ5SUcxcGJpQTlJSEJoWkdScGJtZFBZbXBsWTNSYmJXbHVVSEp2Y0YwN1hHNGdJSFpoY2lCdFlYZ2dQU0JqYkdsbGJuUlRhWHBsSUMwZ1lYSnliM2RTWldOMFcyeGxibDBnTFNCd1lXUmthVzVuVDJKcVpXTjBXMjFoZUZCeWIzQmRPMXh1SUNCMllYSWdZMlZ1ZEdWeUlEMGdZMnhwWlc1MFUybDZaU0F2SURJZ0xTQmhjbkp2ZDFKbFkzUmJiR1Z1WFNBdklESWdLeUJqWlc1MFpYSlViMUpsWm1WeVpXNWpaVHRjYmlBZ2RtRnlJRzltWm5ObGRDQTlJSGRwZEdocGJpaHRhVzRzSUdObGJuUmxjaXdnYldGNEtUc2dMeThnVUhKbGRtVnVkSE1nWW5KbFlXdHBibWNnYzNsdWRHRjRJR2hwWjJoc2FXZG9kR2x1Wnk0dUxseHVYRzRnSUhaaGNpQmhlR2x6VUhKdmNDQTlJR0Y0YVhNN1hHNGdJSE4wWVhSbExtMXZaR2xtYVdWeWMwUmhkR0ZiYm1GdFpWMGdQU0FvWDNOMFlYUmxKRzF2WkdsbWFXVnljMFJoZEdFa0lEMGdlMzBzSUY5emRHRjBaU1J0YjJScFptbGxjbk5FWVhSaEpGdGhlR2x6VUhKdmNGMGdQU0J2Wm1aelpYUXNJRjl6ZEdGMFpTUnRiMlJwWm1sbGNuTkVZWFJoSkM1alpXNTBaWEpQWm1aelpYUWdQU0J2Wm1aelpYUWdMU0JqWlc1MFpYSXNJRjl6ZEdGMFpTUnRiMlJwWm1sbGNuTkVZWFJoSkNrN1hHNTlYRzVjYm1aMWJtTjBhVzl1SUdWbVptVmpkQ2hmY21WbU1pa2dlMXh1SUNCMllYSWdjM1JoZEdVZ1BTQmZjbVZtTWk1emRHRjBaU3hjYmlBZ0lDQWdJRzl3ZEdsdmJuTWdQU0JmY21WbU1pNXZjSFJwYjI1ek8xeHVJQ0IyWVhJZ1gyOXdkR2x2Ym5Na1pXeGxiV1Z1ZENBOUlHOXdkR2x2Ym5NdVpXeGxiV1Z1ZEN4Y2JpQWdJQ0FnSUdGeWNtOTNSV3hsYldWdWRDQTlJRjl2Y0hScGIyNXpKR1ZzWlcxbGJuUWdQVDA5SUhadmFXUWdNQ0EvSUNkYlpHRjBZUzF3YjNCd1pYSXRZWEp5YjNkZEp5QTZJRjl2Y0hScGIyNXpKR1ZzWlcxbGJuUTdYRzVjYmlBZ2FXWWdLR0Z5Y205M1JXeGxiV1Z1ZENBOVBTQnVkV3hzS1NCN1hHNGdJQ0FnY21WMGRYSnVPMXh1SUNCOUlDOHZJRU5UVXlCelpXeGxZM1J2Y2x4dVhHNWNiaUFnYVdZZ0tIUjVjR1Z2WmlCaGNuSnZkMFZzWlcxbGJuUWdQVDA5SUNkemRISnBibWNuS1NCN1hHNGdJQ0FnWVhKeWIzZEZiR1Z0Wlc1MElEMGdjM1JoZEdVdVpXeGxiV1Z1ZEhNdWNHOXdjR1Z5TG5GMVpYSjVVMlZzWldOMGIzSW9ZWEp5YjNkRmJHVnRaVzUwS1R0Y2JseHVJQ0FnSUdsbUlDZ2hZWEp5YjNkRmJHVnRaVzUwS1NCN1hHNGdJQ0FnSUNCeVpYUjFjbTQ3WEc0Z0lDQWdmVnh1SUNCOVhHNWNiaUFnYVdZZ0tIQnliMk5sYzNNdVpXNTJMazVQUkVWZlJVNVdJQ0U5UFNCY0luQnliMlIxWTNScGIyNWNJaWtnZTF4dUlDQWdJR2xtSUNnaGFYTklWRTFNUld4bGJXVnVkQ2hoY25KdmQwVnNaVzFsYm5RcEtTQjdYRzRnSUNBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0ZzblVHOXdjR1Z5T2lCY0ltRnljbTkzWENJZ1pXeGxiV1Z1ZENCdGRYTjBJR0psSUdGdUlFaFVUVXhGYkdWdFpXNTBJQ2h1YjNRZ1lXNGdVMVpIUld4bGJXVnVkQ2t1Snl3Z0oxUnZJSFZ6WlNCaGJpQlRWa2NnWVhKeWIzY3NJSGR5WVhBZ2FYUWdhVzRnWVc0Z1NGUk5URVZzWlcxbGJuUWdkR2hoZENCM2FXeHNJR0psSUhWelpXUWdZWE1uTENBbmRHaGxJR0Z5Y205M0xpZGRMbXB2YVc0b0p5QW5LU2s3WEc0Z0lDQWdmVnh1SUNCOVhHNWNiaUFnYVdZZ0tDRmpiMjUwWVdsdWN5aHpkR0YwWlM1bGJHVnRaVzUwY3k1d2IzQndaWElzSUdGeWNtOTNSV3hsYldWdWRDa3BJSHRjYmlBZ0lDQnBaaUFvY0hKdlkyVnpjeTVsYm5ZdVRrOUVSVjlGVGxZZ0lUMDlJRndpY0hKdlpIVmpkR2x2Ymx3aUtTQjdYRzRnSUNBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0ZzblVHOXdjR1Z5T2lCY0ltRnljbTkzWENJZ2JXOWthV1pwWlhKY1hDZHpJR0JsYkdWdFpXNTBZQ0J0ZFhOMElHSmxJR0VnWTJocGJHUWdiMllnZEdobElIQnZjSEJsY2ljc0lDZGxiR1Z0Wlc1MExpZGRMbXB2YVc0b0p5QW5LU2s3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdjbVYwZFhKdU8xeHVJQ0I5WEc1Y2JpQWdjM1JoZEdVdVpXeGxiV1Z1ZEhNdVlYSnliM2NnUFNCaGNuSnZkMFZzWlcxbGJuUTdYRzU5SUM4dklHVnpiR2x1ZEMxa2FYTmhZbXhsTFc1bGVIUXRiR2x1WlNCcGJYQnZjblF2Ym04dGRXNTFjMlZrTFcxdlpIVnNaWE5jYmx4dVhHNWxlSEJ2Y25RZ1pHVm1ZWFZzZENCN1hHNGdJRzVoYldVNklDZGhjbkp2ZHljc1hHNGdJR1Z1WVdKc1pXUTZJSFJ5ZFdVc1hHNGdJSEJvWVhObE9pQW5iV0ZwYmljc1hHNGdJR1p1T2lCaGNuSnZkeXhjYmlBZ1pXWm1aV04wT2lCbFptWmxZM1FzWEc0Z0lISmxjWFZwY21Wek9pQmJKM0J2Y0hCbGNrOW1abk5sZEhNblhTeGNiaUFnY21WeGRXbHlaWE5KWmtWNGFYTjBjem9nV3lkd2NtVjJaVzUwVDNabGNtWnNiM2NuWFZ4dWZUc2lMQ0psZUhCdmNuUWdaR1ZtWVhWc2RDQm1kVzVqZEdsdmJpQm5aWFJXWVhKcFlYUnBiMjRvY0d4aFkyVnRaVzUwS1NCN1hHNGdJSEpsZEhWeWJpQndiR0ZqWlcxbGJuUXVjM0JzYVhRb0p5MG5LVnN4WFR0Y2JuMGlMQ0pwYlhCdmNuUWdleUIwYjNBc0lHeGxablFzSUhKcFoyaDBMQ0JpYjNSMGIyMHNJR1Z1WkNCOUlHWnliMjBnWENJdUxpOWxiblZ0Y3k1cWMxd2lPMXh1YVcxd2IzSjBJR2RsZEU5bVpuTmxkRkJoY21WdWRDQm1jbTl0SUZ3aUxpNHZaRzl0TFhWMGFXeHpMMmRsZEU5bVpuTmxkRkJoY21WdWRDNXFjMXdpTzF4dWFXMXdiM0owSUdkbGRGZHBibVJ2ZHlCbWNtOXRJRndpTGk0dlpHOXRMWFYwYVd4ekwyZGxkRmRwYm1SdmR5NXFjMXdpTzF4dWFXMXdiM0owSUdkbGRFUnZZM1Z0Wlc1MFJXeGxiV1Z1ZENCbWNtOXRJRndpTGk0dlpHOXRMWFYwYVd4ekwyZGxkRVJ2WTNWdFpXNTBSV3hsYldWdWRDNXFjMXdpTzF4dWFXMXdiM0owSUdkbGRFTnZiWEIxZEdWa1UzUjViR1VnWm5KdmJTQmNJaTR1TDJSdmJTMTFkR2xzY3k5blpYUkRiMjF3ZFhSbFpGTjBlV3hsTG1welhDSTdYRzVwYlhCdmNuUWdaMlYwUW1GelpWQnNZV05sYldWdWRDQm1jbTl0SUZ3aUxpNHZkWFJwYkhNdloyVjBRbUZ6WlZCc1lXTmxiV1Z1ZEM1cWMxd2lPMXh1YVcxd2IzSjBJR2RsZEZaaGNtbGhkR2x2YmlCbWNtOXRJRndpTGk0dmRYUnBiSE12WjJWMFZtRnlhV0YwYVc5dUxtcHpYQ0k3WEc1cGJYQnZjblFnZXlCeWIzVnVaQ0I5SUdaeWIyMGdYQ0l1TGk5MWRHbHNjeTl0WVhSb0xtcHpYQ0k3SUM4dklHVnpiR2x1ZEMxa2FYTmhZbXhsTFc1bGVIUXRiR2x1WlNCcGJYQnZjblF2Ym04dGRXNTFjMlZrTFcxdlpIVnNaWE5jYmx4dWRtRnlJSFZ1YzJWMFUybGtaWE1nUFNCN1hHNGdJSFJ2Y0RvZ0oyRjFkRzhuTEZ4dUlDQnlhV2RvZERvZ0oyRjFkRzhuTEZ4dUlDQmliM1IwYjIwNklDZGhkWFJ2Snl4Y2JpQWdiR1ZtZERvZ0oyRjFkRzhuWEc1OU95QXZMeUJTYjNWdVpDQjBhR1VnYjJabWMyVjBjeUIwYnlCMGFHVWdibVZoY21WemRDQnpkV2wwWVdKc1pTQnpkV0p3YVhobGJDQmlZWE5sWkNCdmJpQjBhR1VnUkZCU0xseHVMeThnV205dmJXbHVaeUJqWVc0Z1kyaGhibWRsSUhSb1pTQkVVRklzSUdKMWRDQnBkQ0J6WldWdGN5QjBieUJ5WlhCdmNuUWdZU0IyWVd4MVpTQjBhR0YwSUhkcGJHeGNiaTh2SUdOc1pXRnViSGtnWkdsMmFXUmxJSFJvWlNCMllXeDFaWE1nYVc1MGJ5QjBhR1VnWVhCd2NtOXdjbWxoZEdVZ2MzVmljR2w0Wld4ekxseHVYRzVtZFc1amRHbHZiaUJ5YjNWdVpFOW1abk5sZEhOQ2VVUlFVaWhmY21WbUtTQjdYRzRnSUhaaGNpQjRJRDBnWDNKbFppNTRMRnh1SUNBZ0lDQWdlU0E5SUY5eVpXWXVlVHRjYmlBZ2RtRnlJSGRwYmlBOUlIZHBibVJ2ZHp0Y2JpQWdkbUZ5SUdSd2NpQTlJSGRwYmk1a1pYWnBZMlZRYVhobGJGSmhkR2x2SUh4OElERTdYRzRnSUhKbGRIVnliaUI3WEc0Z0lDQWdlRG9nY205MWJtUW9lQ0FxSUdSd2Npa2dMeUJrY0hJZ2ZId2dNQ3hjYmlBZ0lDQjVPaUJ5YjNWdVpDaDVJQ29nWkhCeUtTQXZJR1J3Y2lCOGZDQXdYRzRnSUgwN1hHNTlYRzVjYm1WNGNHOXlkQ0JtZFc1amRHbHZiaUJ0WVhCVWIxTjBlV3hsY3loZmNtVm1NaWtnZTF4dUlDQjJZWElnWDA5aWFtVmpkQ1JoYzNOcFoyNHlPMXh1WEc0Z0lIWmhjaUJ3YjNCd1pYSWdQU0JmY21WbU1pNXdiM0J3WlhJc1hHNGdJQ0FnSUNCd2IzQndaWEpTWldOMElEMGdYM0psWmpJdWNHOXdjR1Z5VW1WamRDeGNiaUFnSUNBZ0lIQnNZV05sYldWdWRDQTlJRjl5WldZeUxuQnNZV05sYldWdWRDeGNiaUFnSUNBZ0lIWmhjbWxoZEdsdmJpQTlJRjl5WldZeUxuWmhjbWxoZEdsdmJpeGNiaUFnSUNBZ0lHOW1abk5sZEhNZ1BTQmZjbVZtTWk1dlptWnpaWFJ6TEZ4dUlDQWdJQ0FnY0c5emFYUnBiMjRnUFNCZmNtVm1NaTV3YjNOcGRHbHZiaXhjYmlBZ0lDQWdJR2R3ZFVGalkyVnNaWEpoZEdsdmJpQTlJRjl5WldZeUxtZHdkVUZqWTJWc1pYSmhkR2x2Yml4Y2JpQWdJQ0FnSUdGa1lYQjBhWFpsSUQwZ1gzSmxaakl1WVdSaGNIUnBkbVVzWEc0Z0lDQWdJQ0J5YjNWdVpFOW1abk5sZEhNZ1BTQmZjbVZtTWk1eWIzVnVaRTltWm5ObGRITXNYRzRnSUNBZ0lDQnBjMFpwZUdWa0lEMGdYM0psWmpJdWFYTkdhWGhsWkR0Y2JpQWdkbUZ5SUY5dlptWnpaWFJ6SkhnZ1BTQnZabVp6WlhSekxuZ3NYRzRnSUNBZ0lDQjRJRDBnWDI5bVpuTmxkSE1rZUNBOVBUMGdkbTlwWkNBd0lEOGdNQ0E2SUY5dlptWnpaWFJ6Skhnc1hHNGdJQ0FnSUNCZmIyWm1jMlYwY3lSNUlEMGdiMlptYzJWMGN5NTVMRnh1SUNBZ0lDQWdlU0E5SUY5dlptWnpaWFJ6SkhrZ1BUMDlJSFp2YVdRZ01DQS9JREFnT2lCZmIyWm1jMlYwY3lSNU8xeHVYRzRnSUhaaGNpQmZjbVZtTXlBOUlIUjVjR1Z2WmlCeWIzVnVaRTltWm5ObGRITWdQVDA5SUNkbWRXNWpkR2x2YmljZ1B5QnliM1Z1WkU5bVpuTmxkSE1vZTF4dUlDQWdJSGc2SUhnc1hHNGdJQ0FnZVRvZ2VWeHVJQ0I5S1NBNklIdGNiaUFnSUNCNE9pQjRMRnh1SUNBZ0lIazZJSGxjYmlBZ2ZUdGNibHh1SUNCNElEMGdYM0psWmpNdWVEdGNiaUFnZVNBOUlGOXlaV1l6TG5rN1hHNGdJSFpoY2lCb1lYTllJRDBnYjJabWMyVjBjeTVvWVhOUGQyNVFjbTl3WlhKMGVTZ25lQ2NwTzF4dUlDQjJZWElnYUdGeldTQTlJRzltWm5ObGRITXVhR0Z6VDNkdVVISnZjR1Z5ZEhrb0oza25LVHRjYmlBZ2RtRnlJSE5wWkdWWUlEMGdiR1ZtZER0Y2JpQWdkbUZ5SUhOcFpHVlpJRDBnZEc5d08xeHVJQ0IyWVhJZ2QybHVJRDBnZDJsdVpHOTNPMXh1WEc0Z0lHbG1JQ2hoWkdGd2RHbDJaU2tnZTF4dUlDQWdJSFpoY2lCdlptWnpaWFJRWVhKbGJuUWdQU0JuWlhSUFptWnpaWFJRWVhKbGJuUW9jRzl3Y0dWeUtUdGNiaUFnSUNCMllYSWdhR1ZwWjJoMFVISnZjQ0E5SUNkamJHbGxiblJJWldsbmFIUW5PMXh1SUNBZ0lIWmhjaUIzYVdSMGFGQnliM0FnUFNBblkyeHBaVzUwVjJsa2RHZ25PMXh1WEc0Z0lDQWdhV1lnS0c5bVpuTmxkRkJoY21WdWRDQTlQVDBnWjJWMFYybHVaRzkzS0hCdmNIQmxjaWtwSUh0Y2JpQWdJQ0FnSUc5bVpuTmxkRkJoY21WdWRDQTlJR2RsZEVSdlkzVnRaVzUwUld4bGJXVnVkQ2h3YjNCd1pYSXBPMXh1WEc0Z0lDQWdJQ0JwWmlBb1oyVjBRMjl0Y0hWMFpXUlRkSGxzWlNodlptWnpaWFJRWVhKbGJuUXBMbkJ2YzJsMGFXOXVJQ0U5UFNBbmMzUmhkR2xqSnlBbUppQndiM05wZEdsdmJpQTlQVDBnSjJGaWMyOXNkWFJsSnlrZ2UxeHVJQ0FnSUNBZ0lDQm9aV2xuYUhSUWNtOXdJRDBnSjNOamNtOXNiRWhsYVdkb2RDYzdYRzRnSUNBZ0lDQWdJSGRwWkhSb1VISnZjQ0E5SUNkelkzSnZiR3hYYVdSMGFDYzdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZTQXZMeUFrUm14dmQwWnBlRTFsVzJsdVkyOXRjR0YwYVdKc1pTMWpZWE4wWFRvZ1ptOXlZMlVnZEhsd1pTQnlaV1pwYm1WdFpXNTBMQ0IzWlNCamIyMXdZWEpsSUc5bVpuTmxkRkJoY21WdWRDQjNhWFJvSUhkcGJtUnZkeUJoWW05MlpTd2dZblYwSUVac2IzY2daRzlsYzI0bmRDQmtaWFJsWTNRZ2FYUmNibHh1WEc0Z0lDQWdiMlptYzJWMFVHRnlaVzUwSUQwZ2IyWm1jMlYwVUdGeVpXNTBPMXh1WEc0Z0lDQWdhV1lnS0hCc1lXTmxiV1Z1ZENBOVBUMGdkRzl3SUh4OElDaHdiR0ZqWlcxbGJuUWdQVDA5SUd4bFpuUWdmSHdnY0d4aFkyVnRaVzUwSUQwOVBTQnlhV2RvZENrZ0ppWWdkbUZ5YVdGMGFXOXVJRDA5UFNCbGJtUXBJSHRjYmlBZ0lDQWdJSE5wWkdWWklEMGdZbTkwZEc5dE8xeHVJQ0FnSUNBZ2RtRnlJRzltWm5ObGRGa2dQU0JwYzBacGVHVmtJQ1ltSUhkcGJpNTJhWE4xWVd4V2FXVjNjRzl5ZENBL0lIZHBiaTUyYVhOMVlXeFdhV1YzY0c5eWRDNW9aV2xuYUhRZ09pQXZMeUFrUm14dmQwWnBlRTFsVzNCeWIzQXRiV2x6YzJsdVoxMWNiaUFnSUNBZ0lHOW1abk5sZEZCaGNtVnVkRnRvWldsbmFIUlFjbTl3WFR0Y2JpQWdJQ0FnSUhrZ0xUMGdiMlptYzJWMFdTQXRJSEJ2Y0hCbGNsSmxZM1F1YUdWcFoyaDBPMXh1SUNBZ0lDQWdlU0FxUFNCbmNIVkJZMk5sYkdWeVlYUnBiMjRnUHlBeElEb2dMVEU3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdhV1lnS0hCc1lXTmxiV1Z1ZENBOVBUMGdiR1ZtZENCOGZDQW9jR3hoWTJWdFpXNTBJRDA5UFNCMGIzQWdmSHdnY0d4aFkyVnRaVzUwSUQwOVBTQmliM1IwYjIwcElDWW1JSFpoY21saGRHbHZiaUE5UFQwZ1pXNWtLU0I3WEc0Z0lDQWdJQ0J6YVdSbFdDQTlJSEpwWjJoME8xeHVJQ0FnSUNBZ2RtRnlJRzltWm5ObGRGZ2dQU0JwYzBacGVHVmtJQ1ltSUhkcGJpNTJhWE4xWVd4V2FXVjNjRzl5ZENBL0lIZHBiaTUyYVhOMVlXeFdhV1YzY0c5eWRDNTNhV1IwYUNBNklDOHZJQ1JHYkc5M1JtbDRUV1ZiY0hKdmNDMXRhWE56YVc1blhWeHVJQ0FnSUNBZ2IyWm1jMlYwVUdGeVpXNTBXM2RwWkhSb1VISnZjRjA3WEc0Z0lDQWdJQ0I0SUMwOUlHOW1abk5sZEZnZ0xTQndiM0J3WlhKU1pXTjBMbmRwWkhSb08xeHVJQ0FnSUNBZ2VDQXFQU0JuY0hWQlkyTmxiR1Z5WVhScGIyNGdQeUF4SURvZ0xURTdYRzRnSUNBZ2ZWeHVJQ0I5WEc1Y2JpQWdkbUZ5SUdOdmJXMXZibE4wZVd4bGN5QTlJRTlpYW1WamRDNWhjM05wWjI0b2UxeHVJQ0FnSUhCdmMybDBhVzl1T2lCd2IzTnBkR2x2Ymx4dUlDQjlMQ0JoWkdGd2RHbDJaU0FtSmlCMWJuTmxkRk5wWkdWektUdGNibHh1SUNCMllYSWdYM0psWmpRZ1BTQnliM1Z1WkU5bVpuTmxkSE1nUFQwOUlIUnlkV1VnUHlCeWIzVnVaRTltWm5ObGRITkNlVVJRVWloN1hHNGdJQ0FnZURvZ2VDeGNiaUFnSUNCNU9pQjVYRzRnSUgwcElEb2dlMXh1SUNBZ0lIZzZJSGdzWEc0Z0lDQWdlVG9nZVZ4dUlDQjlPMXh1WEc0Z0lIZ2dQU0JmY21WbU5DNTRPMXh1SUNCNUlEMGdYM0psWmpRdWVUdGNibHh1SUNCcFppQW9aM0IxUVdOalpXeGxjbUYwYVc5dUtTQjdYRzRnSUNBZ2RtRnlJRjlQWW1wbFkzUWtZWE56YVdkdU8xeHVYRzRnSUNBZ2NtVjBkWEp1SUU5aWFtVmpkQzVoYzNOcFoyNG9lMzBzSUdOdmJXMXZibE4wZVd4bGN5d2dLRjlQWW1wbFkzUWtZWE56YVdkdUlEMGdlMzBzSUY5UFltcGxZM1FrWVhOemFXZHVXM05wWkdWWlhTQTlJR2hoYzFrZ1B5QW5NQ2NnT2lBbkp5d2dYMDlpYW1WamRDUmhjM05wWjI1YmMybGtaVmhkSUQwZ2FHRnpXQ0EvSUNjd0p5QTZJQ2NuTENCZlQySnFaV04wSkdGemMybG5iaTUwY21GdWMyWnZjbTBnUFNBb2QybHVMbVJsZG1salpWQnBlR1ZzVW1GMGFXOGdmSHdnTVNrZ1BEMGdNU0EvSUZ3aWRISmhibk5zWVhSbEtGd2lJQ3NnZUNBcklGd2ljSGdzSUZ3aUlDc2dlU0FySUZ3aWNIZ3BYQ0lnT2lCY0luUnlZVzV6YkdGMFpUTmtLRndpSUNzZ2VDQXJJRndpY0hnc0lGd2lJQ3NnZVNBcklGd2ljSGdzSURBcFhDSXNJRjlQWW1wbFkzUWtZWE56YVdkdUtTazdYRzRnSUgxY2JseHVJQ0J5WlhSMWNtNGdUMkpxWldOMExtRnpjMmxuYmloN2ZTd2dZMjl0Ylc5dVUzUjViR1Z6TENBb1gwOWlhbVZqZENSaGMzTnBaMjR5SUQwZ2UzMHNJRjlQWW1wbFkzUWtZWE56YVdkdU1sdHphV1JsV1YwZ1BTQm9ZWE5aSUQ4Z2VTQXJJRndpY0hoY0lpQTZJQ2NuTENCZlQySnFaV04wSkdGemMybG5iakpiYzJsa1pWaGRJRDBnYUdGeldDQS9JSGdnS3lCY0luQjRYQ0lnT2lBbkp5d2dYMDlpYW1WamRDUmhjM05wWjI0eUxuUnlZVzV6Wm05eWJTQTlJQ2NuTENCZlQySnFaV04wSkdGemMybG5iaklwS1R0Y2JuMWNibHh1Wm5WdVkzUnBiMjRnWTI5dGNIVjBaVk4wZVd4bGN5aGZjbVZtTlNrZ2UxeHVJQ0IyWVhJZ2MzUmhkR1VnUFNCZmNtVm1OUzV6ZEdGMFpTeGNiaUFnSUNBZ0lHOXdkR2x2Ym5NZ1BTQmZjbVZtTlM1dmNIUnBiMjV6TzF4dUlDQjJZWElnWDI5d2RHbHZibk1rWjNCMVFXTmpaV3hsY21GMElEMGdiM0IwYVc5dWN5NW5jSFZCWTJObGJHVnlZWFJwYjI0c1hHNGdJQ0FnSUNCbmNIVkJZMk5sYkdWeVlYUnBiMjRnUFNCZmIzQjBhVzl1Y3lSbmNIVkJZMk5sYkdWeVlYUWdQVDA5SUhadmFXUWdNQ0EvSUhSeWRXVWdPaUJmYjNCMGFXOXVjeVJuY0hWQlkyTmxiR1Z5WVhRc1hHNGdJQ0FnSUNCZmIzQjBhVzl1Y3lSaFpHRndkR2wyWlNBOUlHOXdkR2x2Ym5NdVlXUmhjSFJwZG1Vc1hHNGdJQ0FnSUNCaFpHRndkR2wyWlNBOUlGOXZjSFJwYjI1ekpHRmtZWEIwYVhabElEMDlQU0IyYjJsa0lEQWdQeUIwY25WbElEb2dYMjl3ZEdsdmJuTWtZV1JoY0hScGRtVXNYRzRnSUNBZ0lDQmZiM0IwYVc5dWN5UnliM1Z1WkU5bVpuTmxkSE1nUFNCdmNIUnBiMjV6TG5KdmRXNWtUMlptYzJWMGN5eGNiaUFnSUNBZ0lISnZkVzVrVDJabWMyVjBjeUE5SUY5dmNIUnBiMjV6SkhKdmRXNWtUMlptYzJWMGN5QTlQVDBnZG05cFpDQXdJRDhnZEhKMVpTQTZJRjl2Y0hScGIyNXpKSEp2ZFc1a1QyWm1jMlYwY3p0Y2JseHVJQ0JwWmlBb2NISnZZMlZ6Y3k1bGJuWXVUazlFUlY5RlRsWWdJVDA5SUZ3aWNISnZaSFZqZEdsdmJsd2lLU0I3WEc0Z0lDQWdkbUZ5SUhSeVlXNXphWFJwYjI1UWNtOXdaWEowZVNBOUlHZGxkRU52YlhCMWRHVmtVM1I1YkdVb2MzUmhkR1V1Wld4bGJXVnVkSE11Y0c5d2NHVnlLUzUwY21GdWMybDBhVzl1VUhKdmNHVnlkSGtnZkh3Z0p5YzdYRzVjYmlBZ0lDQnBaaUFvWVdSaGNIUnBkbVVnSmlZZ1d5ZDBjbUZ1YzJadmNtMG5MQ0FuZEc5d0p5d2dKM0pwWjJoMEp5d2dKMkp2ZEhSdmJTY3NJQ2RzWldaMEoxMHVjMjl0WlNobWRXNWpkR2x2YmlBb2NISnZjR1Z5ZEhrcElIdGNiaUFnSUNBZ0lISmxkSFZ5YmlCMGNtRnVjMmwwYVc5dVVISnZjR1Z5ZEhrdWFXNWtaWGhQWmlod2NtOXdaWEowZVNrZ1BqMGdNRHRjYmlBZ0lDQjlLU2tnZTF4dUlDQWdJQ0FnWTI5dWMyOXNaUzUzWVhKdUtGc25VRzl3Y0dWeU9pQkVaWFJsWTNSbFpDQkRVMU1nZEhKaGJuTnBkR2x2Ym5NZ2IyNGdZWFFnYkdWaGMzUWdiMjVsSUc5bUlIUm9aU0JtYjJ4c2IzZHBibWNuTENBblExTlRJSEJ5YjNCbGNuUnBaWE02SUZ3aWRISmhibk5tYjNKdFhDSXNJRndpZEc5d1hDSXNJRndpY21sbmFIUmNJaXdnWENKaWIzUjBiMjFjSWl3Z1hDSnNaV1owWENJdUp5d2dKMXhjYmx4Y2JpY3NJQ2RFYVhOaFlteGxJSFJvWlNCY0ltTnZiWEIxZEdWVGRIbHNaWE5jSWlCdGIyUnBabWxsY2x4Y0ozTWdZR0ZrWVhCMGFYWmxZQ0J2Y0hScGIyNGdkRzhnWVd4c2IzY25MQ0FuWm05eUlITnRiMjkwYUNCMGNtRnVjMmwwYVc5dWN5d2diM0lnY21WdGIzWmxJSFJvWlhObElIQnliM0JsY25ScFpYTWdabkp2YlNCMGFHVWdRMU5USnl3Z0ozUnlZVzV6YVhScGIyNGdaR1ZqYkdGeVlYUnBiMjRnYjI0Z2RHaGxJSEJ2Y0hCbGNpQmxiR1Z0Wlc1MElHbG1JRzl1YkhrZ2RISmhibk5wZEdsdmJtbHVaeWNzSUNkdmNHRmphWFI1SUc5eUlHSmhZMnRuY205MWJtUXRZMjlzYjNJZ1ptOXlJR1Y0WVcxd2JHVXVKeXdnSjF4Y2JseGNiaWNzSUNkWFpTQnlaV052YlcxbGJtUWdkWE5wYm1jZ2RHaGxJSEJ2Y0hCbGNpQmxiR1Z0Wlc1MElHRnpJR0VnZDNKaGNIQmxjaUJoY205MWJtUWdZVzRnYVc1dVpYSW5MQ0FuWld4bGJXVnVkQ0IwYUdGMElHTmhiaUJvWVhabElHRnVlU0JEVTFNZ2NISnZjR1Z5ZEhrZ2RISmhibk5wZEdsdmJtVmtJR1p2Y2lCaGJtbHRZWFJwYjI1ekxpZGRMbXB2YVc0b0p5QW5LU2s3WEc0Z0lDQWdmVnh1SUNCOVhHNWNiaUFnZG1GeUlHTnZiVzF2YmxOMGVXeGxjeUE5SUh0Y2JpQWdJQ0J3YkdGalpXMWxiblE2SUdkbGRFSmhjMlZRYkdGalpXMWxiblFvYzNSaGRHVXVjR3hoWTJWdFpXNTBLU3hjYmlBZ0lDQjJZWEpwWVhScGIyNDZJR2RsZEZaaGNtbGhkR2x2YmloemRHRjBaUzV3YkdGalpXMWxiblFwTEZ4dUlDQWdJSEJ2Y0hCbGNqb2djM1JoZEdVdVpXeGxiV1Z1ZEhNdWNHOXdjR1Z5TEZ4dUlDQWdJSEJ2Y0hCbGNsSmxZM1E2SUhOMFlYUmxMbkpsWTNSekxuQnZjSEJsY2l4Y2JpQWdJQ0JuY0hWQlkyTmxiR1Z5WVhScGIyNDZJR2R3ZFVGalkyVnNaWEpoZEdsdmJpeGNiaUFnSUNCcGMwWnBlR1ZrT2lCemRHRjBaUzV2Y0hScGIyNXpMbk4wY21GMFpXZDVJRDA5UFNBblptbDRaV1FuWEc0Z0lIMDdYRzVjYmlBZ2FXWWdLSE4wWVhSbExtMXZaR2xtYVdWeWMwUmhkR0V1Y0c5d2NHVnlUMlptYzJWMGN5QWhQU0J1ZFd4c0tTQjdYRzRnSUNBZ2MzUmhkR1V1YzNSNWJHVnpMbkJ2Y0hCbGNpQTlJRTlpYW1WamRDNWhjM05wWjI0b2UzMHNJSE4wWVhSbExuTjBlV3hsY3k1d2IzQndaWElzSUcxaGNGUnZVM1I1YkdWektFOWlhbVZqZEM1aGMzTnBaMjRvZTMwc0lHTnZiVzF2YmxOMGVXeGxjeXdnZTF4dUlDQWdJQ0FnYjJabWMyVjBjem9nYzNSaGRHVXViVzlrYVdacFpYSnpSR0YwWVM1d2IzQndaWEpQWm1aelpYUnpMRnh1SUNBZ0lDQWdjRzl6YVhScGIyNDZJSE4wWVhSbExtOXdkR2x2Ym5NdWMzUnlZWFJsWjNrc1hHNGdJQ0FnSUNCaFpHRndkR2wyWlRvZ1lXUmhjSFJwZG1Vc1hHNGdJQ0FnSUNCeWIzVnVaRTltWm5ObGRITTZJSEp2ZFc1a1QyWm1jMlYwYzF4dUlDQWdJSDBwS1NrN1hHNGdJSDFjYmx4dUlDQnBaaUFvYzNSaGRHVXViVzlrYVdacFpYSnpSR0YwWVM1aGNuSnZkeUFoUFNCdWRXeHNLU0I3WEc0Z0lDQWdjM1JoZEdVdWMzUjViR1Z6TG1GeWNtOTNJRDBnVDJKcVpXTjBMbUZ6YzJsbmJpaDdmU3dnYzNSaGRHVXVjM1I1YkdWekxtRnljbTkzTENCdFlYQlViMU4wZVd4bGN5aFBZbXBsWTNRdVlYTnphV2R1S0h0OUxDQmpiMjF0YjI1VGRIbHNaWE1zSUh0Y2JpQWdJQ0FnSUc5bVpuTmxkSE02SUhOMFlYUmxMbTF2WkdsbWFXVnljMFJoZEdFdVlYSnliM2NzWEc0Z0lDQWdJQ0J3YjNOcGRHbHZiam9nSjJGaWMyOXNkWFJsSnl4Y2JpQWdJQ0FnSUdGa1lYQjBhWFpsT2lCbVlXeHpaU3hjYmlBZ0lDQWdJSEp2ZFc1a1QyWm1jMlYwY3pvZ2NtOTFibVJQWm1aelpYUnpYRzRnSUNBZ2ZTa3BLVHRjYmlBZ2ZWeHVYRzRnSUhOMFlYUmxMbUYwZEhKcFluVjBaWE11Y0c5d2NHVnlJRDBnVDJKcVpXTjBMbUZ6YzJsbmJpaDdmU3dnYzNSaGRHVXVZWFIwY21saWRYUmxjeTV3YjNCd1pYSXNJSHRjYmlBZ0lDQW5aR0YwWVMxd2IzQndaWEl0Y0d4aFkyVnRaVzUwSnpvZ2MzUmhkR1V1Y0d4aFkyVnRaVzUwWEc0Z0lIMHBPMXh1ZlNBdkx5QmxjMnhwYm5RdFpHbHpZV0pzWlMxdVpYaDBMV3hwYm1VZ2FXMXdiM0owTDI1dkxYVnVkWE5sWkMxdGIyUjFiR1Z6WEc1Y2JseHVaWGh3YjNKMElHUmxabUYxYkhRZ2UxeHVJQ0J1WVcxbE9pQW5ZMjl0Y0hWMFpWTjBlV3hsY3ljc1hHNGdJR1Z1WVdKc1pXUTZJSFJ5ZFdVc1hHNGdJSEJvWVhObE9pQW5ZbVZtYjNKbFYzSnBkR1VuTEZ4dUlDQm1iam9nWTI5dGNIVjBaVk4wZVd4bGN5eGNiaUFnWkdGMFlUb2dlMzFjYm4wN0lpd2lhVzF3YjNKMElHZGxkRmRwYm1SdmR5Qm1jbTl0SUZ3aUxpNHZaRzl0TFhWMGFXeHpMMmRsZEZkcGJtUnZkeTVxYzF3aU95QXZMeUJsYzJ4cGJuUXRaR2x6WVdKc1pTMXVaWGgwTFd4cGJtVWdhVzF3YjNKMEwyNXZMWFZ1ZFhObFpDMXRiMlIxYkdWelhHNWNiblpoY2lCd1lYTnphWFpsSUQwZ2UxeHVJQ0J3WVhOemFYWmxPaUIwY25WbFhHNTlPMXh1WEc1bWRXNWpkR2x2YmlCbFptWmxZM1FvWDNKbFppa2dlMXh1SUNCMllYSWdjM1JoZEdVZ1BTQmZjbVZtTG5OMFlYUmxMRnh1SUNBZ0lDQWdhVzV6ZEdGdVkyVWdQU0JmY21WbUxtbHVjM1JoYm1ObExGeHVJQ0FnSUNBZ2IzQjBhVzl1Y3lBOUlGOXlaV1l1YjNCMGFXOXVjenRjYmlBZ2RtRnlJRjl2Y0hScGIyNXpKSE5qY205c2JDQTlJRzl3ZEdsdmJuTXVjMk55YjJ4c0xGeHVJQ0FnSUNBZ2MyTnliMnhzSUQwZ1gyOXdkR2x2Ym5Na2MyTnliMnhzSUQwOVBTQjJiMmxrSURBZ1B5QjBjblZsSURvZ1gyOXdkR2x2Ym5Na2MyTnliMnhzTEZ4dUlDQWdJQ0FnWDI5d2RHbHZibk1rY21WemFYcGxJRDBnYjNCMGFXOXVjeTV5WlhOcGVtVXNYRzRnSUNBZ0lDQnlaWE5wZW1VZ1BTQmZiM0IwYVc5dWN5UnlaWE5wZW1VZ1BUMDlJSFp2YVdRZ01DQS9JSFJ5ZFdVZ09pQmZiM0IwYVc5dWN5UnlaWE5wZW1VN1hHNGdJSFpoY2lCM2FXNWtiM2NnUFNCblpYUlhhVzVrYjNjb2MzUmhkR1V1Wld4bGJXVnVkSE11Y0c5d2NHVnlLVHRjYmlBZ2RtRnlJSE5qY205c2JGQmhjbVZ1ZEhNZ1BTQmJYUzVqYjI1allYUW9jM1JoZEdVdWMyTnliMnhzVUdGeVpXNTBjeTV5WldabGNtVnVZMlVzSUhOMFlYUmxMbk5qY205c2JGQmhjbVZ1ZEhNdWNHOXdjR1Z5S1R0Y2JseHVJQ0JwWmlBb2MyTnliMnhzS1NCN1hHNGdJQ0FnYzJOeWIyeHNVR0Z5Wlc1MGN5NW1iM0pGWVdOb0tHWjFibU4wYVc5dUlDaHpZM0p2Ykd4UVlYSmxiblFwSUh0Y2JpQWdJQ0FnSUhOamNtOXNiRkJoY21WdWRDNWhaR1JGZG1WdWRFeHBjM1JsYm1WeUtDZHpZM0p2Ykd3bkxDQnBibk4wWVc1alpTNTFjR1JoZEdVc0lIQmhjM05wZG1VcE8xeHVJQ0FnSUgwcE8xeHVJQ0I5WEc1Y2JpQWdhV1lnS0hKbGMybDZaU2tnZTF4dUlDQWdJSGRwYm1SdmR5NWhaR1JGZG1WdWRFeHBjM1JsYm1WeUtDZHlaWE5wZW1VbkxDQnBibk4wWVc1alpTNTFjR1JoZEdVc0lIQmhjM05wZG1VcE8xeHVJQ0I5WEc1Y2JpQWdjbVYwZFhKdUlHWjFibU4wYVc5dUlDZ3BJSHRjYmlBZ0lDQnBaaUFvYzJOeWIyeHNLU0I3WEc0Z0lDQWdJQ0J6WTNKdmJHeFFZWEpsYm5SekxtWnZja1ZoWTJnb1puVnVZM1JwYjI0Z0tITmpjbTlzYkZCaGNtVnVkQ2tnZTF4dUlDQWdJQ0FnSUNCelkzSnZiR3hRWVhKbGJuUXVjbVZ0YjNabFJYWmxiblJNYVhOMFpXNWxjaWduYzJOeWIyeHNKeXdnYVc1emRHRnVZMlV1ZFhCa1lYUmxMQ0J3WVhOemFYWmxLVHRjYmlBZ0lDQWdJSDBwTzF4dUlDQWdJSDFjYmx4dUlDQWdJR2xtSUNoeVpYTnBlbVVwSUh0Y2JpQWdJQ0FnSUhkcGJtUnZkeTV5WlcxdmRtVkZkbVZ1ZEV4cGMzUmxibVZ5S0NkeVpYTnBlbVVuTENCcGJuTjBZVzVqWlM1MWNHUmhkR1VzSUhCaGMzTnBkbVVwTzF4dUlDQWdJSDFjYmlBZ2ZUdGNibjBnTHk4Z1pYTnNhVzUwTFdScGMyRmliR1V0Ym1WNGRDMXNhVzVsSUdsdGNHOXlkQzl1YnkxMWJuVnpaV1F0Ylc5a2RXeGxjMXh1WEc1Y2JtVjRjRzl5ZENCa1pXWmhkV3gwSUh0Y2JpQWdibUZ0WlRvZ0oyVjJaVzUwVEdsemRHVnVaWEp6Snl4Y2JpQWdaVzVoWW14bFpEb2dkSEoxWlN4Y2JpQWdjR2hoYzJVNklDZDNjbWwwWlNjc1hHNGdJR1p1T2lCbWRXNWpkR2x2YmlCbWJpZ3BJSHQ5TEZ4dUlDQmxabVpsWTNRNklHVm1abVZqZEN4Y2JpQWdaR0YwWVRvZ2UzMWNibjA3SWl3aWRtRnlJR2hoYzJnZ1BTQjdYRzRnSUd4bFpuUTZJQ2R5YVdkb2RDY3NYRzRnSUhKcFoyaDBPaUFuYkdWbWRDY3NYRzRnSUdKdmRIUnZiVG9nSjNSdmNDY3NYRzRnSUhSdmNEb2dKMkp2ZEhSdmJTZGNibjA3WEc1bGVIQnZjblFnWkdWbVlYVnNkQ0JtZFc1amRHbHZiaUJuWlhSUGNIQnZjMmwwWlZCc1lXTmxiV1Z1ZENod2JHRmpaVzFsYm5RcElIdGNiaUFnY21WMGRYSnVJSEJzWVdObGJXVnVkQzV5WlhCc1lXTmxLQzlzWldaMGZISnBaMmgwZkdKdmRIUnZiWHgwYjNBdlp5d2dablZ1WTNScGIyNGdLRzFoZEdOb1pXUXBJSHRjYmlBZ0lDQnlaWFIxY200Z2FHRnphRnR0WVhSamFHVmtYVHRjYmlBZ2ZTazdYRzU5SWl3aWRtRnlJR2hoYzJnZ1BTQjdYRzRnSUhOMFlYSjBPaUFuWlc1a0p5eGNiaUFnWlc1a09pQW5jM1JoY25RblhHNTlPMXh1Wlhod2IzSjBJR1JsWm1GMWJIUWdablZ1WTNScGIyNGdaMlYwVDNCd2IzTnBkR1ZXWVhKcFlYUnBiMjVRYkdGalpXMWxiblFvY0d4aFkyVnRaVzUwS1NCN1hHNGdJSEpsZEhWeWJpQndiR0ZqWlcxbGJuUXVjbVZ3YkdGalpTZ3ZjM1JoY25SOFpXNWtMMmNzSUdaMWJtTjBhVzl1SUNodFlYUmphR1ZrS1NCN1hHNGdJQ0FnY21WMGRYSnVJR2hoYzJoYmJXRjBZMmhsWkYwN1hHNGdJSDBwTzF4dWZTSXNJbWx0Y0c5eWRDQm5aWFJYYVc1a2IzY2dabkp2YlNCY0lpNHZaMlYwVjJsdVpHOTNMbXB6WENJN1hHNWxlSEJ2Y25RZ1pHVm1ZWFZzZENCbWRXNWpkR2x2YmlCblpYUlhhVzVrYjNkVFkzSnZiR3dvYm05a1pTa2dlMXh1SUNCMllYSWdkMmx1SUQwZ1oyVjBWMmx1Wkc5M0tHNXZaR1VwTzF4dUlDQjJZWElnYzJOeWIyeHNUR1ZtZENBOUlIZHBiaTV3WVdkbFdFOW1abk5sZER0Y2JpQWdkbUZ5SUhOamNtOXNiRlJ2Y0NBOUlIZHBiaTV3WVdkbFdVOW1abk5sZER0Y2JpQWdjbVYwZFhKdUlIdGNiaUFnSUNCelkzSnZiR3hNWldaME9pQnpZM0p2Ykd4TVpXWjBMRnh1SUNBZ0lITmpjbTlzYkZSdmNEb2djMk55YjJ4c1ZHOXdYRzRnSUgwN1hHNTlJaXdpYVcxd2IzSjBJR2RsZEVKdmRXNWthVzVuUTJ4cFpXNTBVbVZqZENCbWNtOXRJRndpTGk5blpYUkNiM1Z1WkdsdVowTnNhV1Z1ZEZKbFkzUXVhbk5jSWp0Y2JtbHRjRzl5ZENCblpYUkViMk4xYldWdWRFVnNaVzFsYm5RZ1puSnZiU0JjSWk0dloyVjBSRzlqZFcxbGJuUkZiR1Z0Wlc1MExtcHpYQ0k3WEc1cGJYQnZjblFnWjJWMFYybHVaRzkzVTJOeWIyeHNJR1p5YjIwZ1hDSXVMMmRsZEZkcGJtUnZkMU5qY205c2JDNXFjMXdpTzF4dVpYaHdiM0owSUdSbFptRjFiSFFnWm5WdVkzUnBiMjRnWjJWMFYybHVaRzkzVTJOeWIyeHNRbUZ5V0NobGJHVnRaVzUwS1NCN1hHNGdJQzh2SUVsbUlEeG9kRzFzUGlCb1lYTWdZU0JEVTFNZ2QybGtkR2dnWjNKbFlYUmxjaUIwYUdGdUlIUm9aU0IyYVdWM2NHOXlkQ3dnZEdobGJpQjBhR2x6SUhkcGJHd2dZbVZjYmlBZ0x5OGdhVzVqYjNKeVpXTjBJR1p2Y2lCU1ZFd3VYRzRnSUM4dklGQnZjSEJsY2lBeElHbHpJR0p5YjJ0bGJpQnBiaUIwYUdseklHTmhjMlVnWVc1a0lHNWxkbVZ5SUdoaFpDQmhJR0oxWnlCeVpYQnZjblFnYzI4Z2JHVjBKM01nWVhOemRXMWxYRzRnSUM4dklHbDBKM01nYm05MElHRnVJR2x6YzNWbExpQkpJR1J2YmlkMElIUm9hVzVySUdGdWVXOXVaU0JsZG1WeUlITndaV05wWm1sbGN5QjNhV1IwYUNCdmJpQThhSFJ0YkQ1Y2JpQWdMeThnWVc1NWQyRjVMbHh1SUNBdkx5QkNjbTkzYzJWeWN5QjNhR1Z5WlNCMGFHVWdiR1ZtZENCelkzSnZiR3hpWVhJZ1pHOWxjMjRuZENCallYVnpaU0JoYmlCcGMzTjFaU0J5WlhCdmNuUWdZREJnSUdadmNseHVJQ0F2THlCMGFHbHpJQ2hsTG1jdUlFVmtaMlVnTWpBeE9Td2dTVVV4TVN3Z1UyRm1ZWEpwS1Z4dUlDQnlaWFIxY200Z1oyVjBRbTkxYm1ScGJtZERiR2xsYm5SU1pXTjBLR2RsZEVSdlkzVnRaVzUwUld4bGJXVnVkQ2hsYkdWdFpXNTBLU2t1YkdWbWRDQXJJR2RsZEZkcGJtUnZkMU5qY205c2JDaGxiR1Z0Wlc1MEtTNXpZM0p2Ykd4TVpXWjBPMXh1ZlNJc0ltbHRjRzl5ZENCblpYUkRiMjF3ZFhSbFpGTjBlV3hsSUdaeWIyMGdYQ0l1TDJkbGRFTnZiWEIxZEdWa1UzUjViR1V1YW5OY0lqdGNibVY0Y0c5eWRDQmtaV1poZFd4MElHWjFibU4wYVc5dUlHbHpVMk55YjJ4c1VHRnlaVzUwS0dWc1pXMWxiblFwSUh0Y2JpQWdMeThnUm1seVpXWnZlQ0IzWVc1MGN5QjFjeUIwYnlCamFHVmpheUJnTFhoZ0lHRnVaQ0JnTFhsZ0lIWmhjbWxoZEdsdmJuTWdZWE1nZDJWc2JGeHVJQ0IyWVhJZ1gyZGxkRU52YlhCMWRHVmtVM1I1YkdVZ1BTQm5aWFJEYjIxd2RYUmxaRk4wZVd4bEtHVnNaVzFsYm5RcExGeHVJQ0FnSUNBZ2IzWmxjbVpzYjNjZ1BTQmZaMlYwUTI5dGNIVjBaV1JUZEhsc1pTNXZkbVZ5Wm14dmR5eGNiaUFnSUNBZ0lHOTJaWEptYkc5M1dDQTlJRjluWlhSRGIyMXdkWFJsWkZOMGVXeGxMbTkyWlhKbWJHOTNXQ3hjYmlBZ0lDQWdJRzkyWlhKbWJHOTNXU0E5SUY5blpYUkRiMjF3ZFhSbFpGTjBlV3hsTG05MlpYSm1iRzkzV1R0Y2JseHVJQ0J5WlhSMWNtNGdMMkYxZEc5OGMyTnliMnhzZkc5MlpYSnNZWGw4YUdsa1pHVnVMeTUwWlhOMEtHOTJaWEptYkc5M0lDc2diM1psY21ac2IzZFpJQ3NnYjNabGNtWnNiM2RZS1R0Y2JuMGlMQ0pwYlhCdmNuUWdaMlYwVUdGeVpXNTBUbTlrWlNCbWNtOXRJRndpTGk5blpYUlFZWEpsYm5ST2IyUmxMbXB6WENJN1hHNXBiWEJ2Y25RZ2FYTlRZM0p2Ykd4UVlYSmxiblFnWm5KdmJTQmNJaTR2YVhOVFkzSnZiR3hRWVhKbGJuUXVhbk5jSWp0Y2JtbHRjRzl5ZENCblpYUk9iMlJsVG1GdFpTQm1jbTl0SUZ3aUxpOW5aWFJPYjJSbFRtRnRaUzVxYzF3aU8xeHVhVzF3YjNKMElIc2dhWE5JVkUxTVJXeGxiV1Z1ZENCOUlHWnliMjBnWENJdUwybHVjM1JoYm1ObFQyWXVhbk5jSWp0Y2JtVjRjRzl5ZENCa1pXWmhkV3gwSUdaMWJtTjBhVzl1SUdkbGRGTmpjbTlzYkZCaGNtVnVkQ2h1YjJSbEtTQjdYRzRnSUdsbUlDaGJKMmgwYld3bkxDQW5ZbTlrZVNjc0lDY2paRzlqZFcxbGJuUW5YUzVwYm1SbGVFOW1LR2RsZEU1dlpHVk9ZVzFsS0c1dlpHVXBLU0ErUFNBd0tTQjdYRzRnSUNBZ0x5OGdKRVpzYjNkR2FYaE5aVnRwYm1OdmJYQmhkR2xpYkdVdGNtVjBkWEp1WFRvZ1lYTnpkVzFsSUdKdlpIa2dhWE1nWVd4M1lYbHpJR0YyWVdsc1lXSnNaVnh1SUNBZ0lISmxkSFZ5YmlCdWIyUmxMbTkzYm1WeVJHOWpkVzFsYm5RdVltOWtlVHRjYmlBZ2ZWeHVYRzRnSUdsbUlDaHBjMGhVVFV4RmJHVnRaVzUwS0c1dlpHVXBJQ1ltSUdselUyTnliMnhzVUdGeVpXNTBLRzV2WkdVcEtTQjdYRzRnSUNBZ2NtVjBkWEp1SUc1dlpHVTdYRzRnSUgxY2JseHVJQ0J5WlhSMWNtNGdaMlYwVTJOeWIyeHNVR0Z5Wlc1MEtHZGxkRkJoY21WdWRFNXZaR1VvYm05a1pTa3BPMXh1ZlNJc0ltbHRjRzl5ZENCblpYUlRZM0p2Ykd4UVlYSmxiblFnWm5KdmJTQmNJaTR2WjJWMFUyTnliMnhzVUdGeVpXNTBMbXB6WENJN1hHNXBiWEJ2Y25RZ1oyVjBVR0Z5Wlc1MFRtOWtaU0JtY205dElGd2lMaTluWlhSUVlYSmxiblJPYjJSbExtcHpYQ0k3WEc1cGJYQnZjblFnWjJWMFYybHVaRzkzSUdaeWIyMGdYQ0l1TDJkbGRGZHBibVJ2ZHk1cWMxd2lPMXh1YVcxd2IzSjBJR2x6VTJOeWIyeHNVR0Z5Wlc1MElHWnliMjBnWENJdUwybHpVMk55YjJ4c1VHRnlaVzUwTG1welhDSTdYRzR2S2x4dVoybDJaVzRnWVNCRVQwMGdaV3hsYldWdWRDd2djbVYwZFhKdUlIUm9aU0JzYVhOMElHOW1JR0ZzYkNCelkzSnZiR3dnY0dGeVpXNTBjeXdnZFhBZ2RHaGxJR3hwYzNRZ2IyWWdZVzVqWlhOdmNuTmNiblZ1ZEdsc0lIZGxJR2RsZENCMGJ5QjBhR1VnZEc5d0lIZHBibVJ2ZHlCdlltcGxZM1F1SUZSb2FYTWdiR2x6ZENCcGN5QjNhR0YwSUhkbElHRjBkR0ZqYUNCelkzSnZiR3dnYkdsemRHVnVaWEp6WEc1MGJ5d2dZbVZqWVhWelpTQnBaaUJoYm5rZ2IyWWdkR2hsYzJVZ2NHRnlaVzUwSUdWc1pXMWxiblJ6SUhOamNtOXNiQ3dnZDJVbmJHd2dibVZsWkNCMGJ5QnlaUzFqWVd4amRXeGhkR1VnZEdobFhHNXlaV1psY21WdVkyVWdaV3hsYldWdWRDZHpJSEJ2YzJsMGFXOXVMbHh1S2k5Y2JseHVaWGh3YjNKMElHUmxabUYxYkhRZ1puVnVZM1JwYjI0Z2JHbHpkRk5qY205c2JGQmhjbVZ1ZEhNb1pXeGxiV1Z1ZEN3Z2JHbHpkQ2tnZTF4dUlDQjJZWElnWDJWc1pXMWxiblFrYjNkdVpYSkViMk4xYldWdU8xeHVYRzRnSUdsbUlDaHNhWE4wSUQwOVBTQjJiMmxrSURBcElIdGNiaUFnSUNCc2FYTjBJRDBnVzEwN1hHNGdJSDFjYmx4dUlDQjJZWElnYzJOeWIyeHNVR0Z5Wlc1MElEMGdaMlYwVTJOeWIyeHNVR0Z5Wlc1MEtHVnNaVzFsYm5RcE8xeHVJQ0IyWVhJZ2FYTkNiMlI1SUQwZ2MyTnliMnhzVUdGeVpXNTBJRDA5UFNBb0tGOWxiR1Z0Wlc1MEpHOTNibVZ5Ukc5amRXMWxiaUE5SUdWc1pXMWxiblF1YjNkdVpYSkViMk4xYldWdWRDa2dQVDBnYm5Wc2JDQS9JSFp2YVdRZ01DQTZJRjlsYkdWdFpXNTBKRzkzYm1WeVJHOWpkVzFsYmk1aWIyUjVLVHRjYmlBZ2RtRnlJSGRwYmlBOUlHZGxkRmRwYm1SdmR5aHpZM0p2Ykd4UVlYSmxiblFwTzF4dUlDQjJZWElnZEdGeVoyVjBJRDBnYVhOQ2IyUjVJRDhnVzNkcGJsMHVZMjl1WTJGMEtIZHBiaTUyYVhOMVlXeFdhV1YzY0c5eWRDQjhmQ0JiWFN3Z2FYTlRZM0p2Ykd4UVlYSmxiblFvYzJOeWIyeHNVR0Z5Wlc1MEtTQS9JSE5qY205c2JGQmhjbVZ1ZENBNklGdGRLU0E2SUhOamNtOXNiRkJoY21WdWREdGNiaUFnZG1GeUlIVndaR0YwWldSTWFYTjBJRDBnYkdsemRDNWpiMjVqWVhRb2RHRnlaMlYwS1R0Y2JpQWdjbVYwZFhKdUlHbHpRbTlrZVNBL0lIVndaR0YwWldSTWFYTjBJRG9nTHk4Z0pFWnNiM2RHYVhoTlpWdHBibU52YlhCaGRHbGliR1V0WTJGc2JGMDZJR2x6UW05a2VTQjBaV3hzY3lCMWN5QjBZWEpuWlhRZ2QybHNiQ0JpWlNCaGJpQklWRTFNUld4bGJXVnVkQ0JvWlhKbFhHNGdJSFZ3WkdGMFpXUk1hWE4wTG1OdmJtTmhkQ2hzYVhOMFUyTnliMnhzVUdGeVpXNTBjeWhuWlhSUVlYSmxiblJPYjJSbEtIUmhjbWRsZENrcEtUdGNibjBpTENKbGVIQnZjblFnWkdWbVlYVnNkQ0JtZFc1amRHbHZiaUJ5WldOMFZHOURiR2xsYm5SU1pXTjBLSEpsWTNRcElIdGNiaUFnY21WMGRYSnVJRTlpYW1WamRDNWhjM05wWjI0b2UzMHNJSEpsWTNRc0lIdGNiaUFnSUNCc1pXWjBPaUJ5WldOMExuZ3NYRzRnSUNBZ2RHOXdPaUJ5WldOMExua3NYRzRnSUNBZ2NtbG5hSFE2SUhKbFkzUXVlQ0FySUhKbFkzUXVkMmxrZEdnc1hHNGdJQ0FnWW05MGRHOXRPaUJ5WldOMExua2dLeUJ5WldOMExtaGxhV2RvZEZ4dUlDQjlLVHRjYm4waUxDSnBiWEJ2Y25RZ2V5QjJhV1YzY0c5eWRDQjlJR1p5YjIwZ1hDSXVMaTlsYm5WdGN5NXFjMXdpTzF4dWFXMXdiM0owSUdkbGRGWnBaWGR3YjNKMFVtVmpkQ0JtY205dElGd2lMaTluWlhSV2FXVjNjRzl5ZEZKbFkzUXVhbk5jSWp0Y2JtbHRjRzl5ZENCblpYUkViMk4xYldWdWRGSmxZM1FnWm5KdmJTQmNJaTR2WjJWMFJHOWpkVzFsYm5SU1pXTjBMbXB6WENJN1hHNXBiWEJ2Y25RZ2JHbHpkRk5qY205c2JGQmhjbVZ1ZEhNZ1puSnZiU0JjSWk0dmJHbHpkRk5qY205c2JGQmhjbVZ1ZEhNdWFuTmNJanRjYm1sdGNHOXlkQ0JuWlhSUFptWnpaWFJRWVhKbGJuUWdabkp2YlNCY0lpNHZaMlYwVDJabWMyVjBVR0Z5Wlc1MExtcHpYQ0k3WEc1cGJYQnZjblFnWjJWMFJHOWpkVzFsYm5SRmJHVnRaVzUwSUdaeWIyMGdYQ0l1TDJkbGRFUnZZM1Z0Wlc1MFJXeGxiV1Z1ZEM1cWMxd2lPMXh1YVcxd2IzSjBJR2RsZEVOdmJYQjFkR1ZrVTNSNWJHVWdabkp2YlNCY0lpNHZaMlYwUTI5dGNIVjBaV1JUZEhsc1pTNXFjMXdpTzF4dWFXMXdiM0owSUhzZ2FYTkZiR1Z0Wlc1MExDQnBjMGhVVFV4RmJHVnRaVzUwSUgwZ1puSnZiU0JjSWk0dmFXNXpkR0Z1WTJWUFppNXFjMXdpTzF4dWFXMXdiM0owSUdkbGRFSnZkVzVrYVc1blEyeHBaVzUwVW1WamRDQm1jbTl0SUZ3aUxpOW5aWFJDYjNWdVpHbHVaME5zYVdWdWRGSmxZM1F1YW5OY0lqdGNibWx0Y0c5eWRDQm5aWFJRWVhKbGJuUk9iMlJsSUdaeWIyMGdYQ0l1TDJkbGRGQmhjbVZ1ZEU1dlpHVXVhbk5jSWp0Y2JtbHRjRzl5ZENCamIyNTBZV2x1Y3lCbWNtOXRJRndpTGk5amIyNTBZV2x1Y3k1cWMxd2lPMXh1YVcxd2IzSjBJR2RsZEU1dlpHVk9ZVzFsSUdaeWIyMGdYQ0l1TDJkbGRFNXZaR1ZPWVcxbExtcHpYQ0k3WEc1cGJYQnZjblFnY21WamRGUnZRMnhwWlc1MFVtVmpkQ0JtY205dElGd2lMaTR2ZFhScGJITXZjbVZqZEZSdlEyeHBaVzUwVW1WamRDNXFjMXdpTzF4dWFXMXdiM0owSUhzZ2JXRjRMQ0J0YVc0Z2ZTQm1jbTl0SUZ3aUxpNHZkWFJwYkhNdmJXRjBhQzVxYzF3aU8xeHVYRzVtZFc1amRHbHZiaUJuWlhSSmJtNWxja0p2ZFc1a2FXNW5RMnhwWlc1MFVtVmpkQ2hsYkdWdFpXNTBLU0I3WEc0Z0lIWmhjaUJ5WldOMElEMGdaMlYwUW05MWJtUnBibWREYkdsbGJuUlNaV04wS0dWc1pXMWxiblFwTzF4dUlDQnlaV04wTG5SdmNDQTlJSEpsWTNRdWRHOXdJQ3NnWld4bGJXVnVkQzVqYkdsbGJuUlViM0E3WEc0Z0lISmxZM1F1YkdWbWRDQTlJSEpsWTNRdWJHVm1kQ0FySUdWc1pXMWxiblF1WTJ4cFpXNTBUR1ZtZER0Y2JpQWdjbVZqZEM1aWIzUjBiMjBnUFNCeVpXTjBMblJ2Y0NBcklHVnNaVzFsYm5RdVkyeHBaVzUwU0dWcFoyaDBPMXh1SUNCeVpXTjBMbkpwWjJoMElEMGdjbVZqZEM1c1pXWjBJQ3NnWld4bGJXVnVkQzVqYkdsbGJuUlhhV1IwYUR0Y2JpQWdjbVZqZEM1M2FXUjBhQ0E5SUdWc1pXMWxiblF1WTJ4cFpXNTBWMmxrZEdnN1hHNGdJSEpsWTNRdWFHVnBaMmgwSUQwZ1pXeGxiV1Z1ZEM1amJHbGxiblJJWldsbmFIUTdYRzRnSUhKbFkzUXVlQ0E5SUhKbFkzUXViR1ZtZER0Y2JpQWdjbVZqZEM1NUlEMGdjbVZqZEM1MGIzQTdYRzRnSUhKbGRIVnliaUJ5WldOME8xeHVmVnh1WEc1bWRXNWpkR2x2YmlCblpYUkRiR2xsYm5SU1pXTjBSbkp2YlUxcGVHVmtWSGx3WlNobGJHVnRaVzUwTENCamJHbHdjR2x1WjFCaGNtVnVkQ2tnZTF4dUlDQnlaWFIxY200Z1kyeHBjSEJwYm1kUVlYSmxiblFnUFQwOUlIWnBaWGR3YjNKMElEOGdjbVZqZEZSdlEyeHBaVzUwVW1WamRDaG5aWFJXYVdWM2NHOXlkRkpsWTNRb1pXeGxiV1Z1ZENrcElEb2dhWE5GYkdWdFpXNTBLR05zYVhCd2FXNW5VR0Z5Wlc1MEtTQS9JR2RsZEVsdWJtVnlRbTkxYm1ScGJtZERiR2xsYm5SU1pXTjBLR05zYVhCd2FXNW5VR0Z5Wlc1MEtTQTZJSEpsWTNSVWIwTnNhV1Z1ZEZKbFkzUW9aMlYwUkc5amRXMWxiblJTWldOMEtHZGxkRVJ2WTNWdFpXNTBSV3hsYldWdWRDaGxiR1Z0Wlc1MEtTa3BPMXh1ZlNBdkx5QkJJRndpWTJ4cGNIQnBibWNnY0dGeVpXNTBYQ0lnYVhNZ1lXNGdiM1psY21ac2IzZGhZbXhsSUdOdmJuUmhhVzVsY2lCM2FYUm9JSFJvWlNCamFHRnlZV04wWlhKcGMzUnBZeUJ2Wmx4dUx5OGdZMnhwY0hCcGJtY2dLRzl5SUdocFpHbHVaeWtnYjNabGNtWnNiM2RwYm1jZ1pXeGxiV1Z1ZEhNZ2QybDBhQ0JoSUhCdmMybDBhVzl1SUdScFptWmxjbVZ1ZENCbWNtOXRYRzR2THlCZ2FXNXBkR2xoYkdCY2JseHVYRzVtZFc1amRHbHZiaUJuWlhSRGJHbHdjR2x1WjFCaGNtVnVkSE1vWld4bGJXVnVkQ2tnZTF4dUlDQjJZWElnWTJ4cGNIQnBibWRRWVhKbGJuUnpJRDBnYkdsemRGTmpjbTlzYkZCaGNtVnVkSE1vWjJWMFVHRnlaVzUwVG05a1pTaGxiR1Z0Wlc1MEtTazdYRzRnSUhaaGNpQmpZVzVGYzJOaGNHVkRiR2x3Y0dsdVp5QTlJRnNuWVdKemIyeDFkR1VuTENBblptbDRaV1FuWFM1cGJtUmxlRTltS0dkbGRFTnZiWEIxZEdWa1UzUjViR1VvWld4bGJXVnVkQ2t1Y0c5emFYUnBiMjRwSUQ0OUlEQTdYRzRnSUhaaGNpQmpiR2x3Y0dWeVJXeGxiV1Z1ZENBOUlHTmhia1Z6WTJGd1pVTnNhWEJ3YVc1bklDWW1JR2x6U0ZSTlRFVnNaVzFsYm5Rb1pXeGxiV1Z1ZENrZ1B5Qm5aWFJQWm1aelpYUlFZWEpsYm5Rb1pXeGxiV1Z1ZENrZ09pQmxiR1Z0Wlc1ME8xeHVYRzRnSUdsbUlDZ2hhWE5GYkdWdFpXNTBLR05zYVhCd1pYSkZiR1Z0Wlc1MEtTa2dlMXh1SUNBZ0lISmxkSFZ5YmlCYlhUdGNiaUFnZlNBdkx5QWtSbXh2ZDBacGVFMWxXMmx1WTI5dGNHRjBhV0pzWlMxeVpYUjFjbTVkT2lCb2RIUndjem92TDJkcGRHaDFZaTVqYjIwdlptRmpaV0p2YjJzdlpteHZkeTlwYzNOMVpYTXZNVFF4TkZ4dVhHNWNiaUFnY21WMGRYSnVJR05zYVhCd2FXNW5VR0Z5Wlc1MGN5NW1hV3gwWlhJb1puVnVZM1JwYjI0Z0tHTnNhWEJ3YVc1blVHRnlaVzUwS1NCN1hHNGdJQ0FnY21WMGRYSnVJR2x6Uld4bGJXVnVkQ2hqYkdsd2NHbHVaMUJoY21WdWRDa2dKaVlnWTI5dWRHRnBibk1vWTJ4cGNIQnBibWRRWVhKbGJuUXNJR05zYVhCd1pYSkZiR1Z0Wlc1MEtTQW1KaUJuWlhST2IyUmxUbUZ0WlNoamJHbHdjR2x1WjFCaGNtVnVkQ2tnSVQwOUlDZGliMlI1Snp0Y2JpQWdmU2s3WEc1OUlDOHZJRWRsZEhNZ2RHaGxJRzFoZUdsdGRXMGdZWEpsWVNCMGFHRjBJSFJvWlNCbGJHVnRaVzUwSUdseklIWnBjMmxpYkdVZ2FXNGdaSFZsSUhSdklHRnVlU0J1ZFcxaVpYSWdiMlpjYmk4dklHTnNhWEJ3YVc1bklIQmhjbVZ1ZEhOY2JseHVYRzVsZUhCdmNuUWdaR1ZtWVhWc2RDQm1kVzVqZEdsdmJpQm5aWFJEYkdsd2NHbHVaMUpsWTNRb1pXeGxiV1Z1ZEN3Z1ltOTFibVJoY25rc0lISnZiM1JDYjNWdVpHRnllU2tnZTF4dUlDQjJZWElnYldGcGJrTnNhWEJ3YVc1blVHRnlaVzUwY3lBOUlHSnZkVzVrWVhKNUlEMDlQU0FuWTJ4cGNIQnBibWRRWVhKbGJuUnpKeUEvSUdkbGRFTnNhWEJ3YVc1blVHRnlaVzUwY3lobGJHVnRaVzUwS1NBNklGdGRMbU52Ym1OaGRDaGliM1Z1WkdGeWVTazdYRzRnSUhaaGNpQmpiR2x3Y0dsdVoxQmhjbVZ1ZEhNZ1BTQmJYUzVqYjI1allYUW9iV0ZwYmtOc2FYQndhVzVuVUdGeVpXNTBjeXdnVzNKdmIzUkNiM1Z1WkdGeWVWMHBPMXh1SUNCMllYSWdabWx5YzNSRGJHbHdjR2x1WjFCaGNtVnVkQ0E5SUdOc2FYQndhVzVuVUdGeVpXNTBjMXN3WFR0Y2JpQWdkbUZ5SUdOc2FYQndhVzVuVW1WamRDQTlJR05zYVhCd2FXNW5VR0Z5Wlc1MGN5NXlaV1IxWTJVb1puVnVZM1JwYjI0Z0tHRmpZMUpsWTNRc0lHTnNhWEJ3YVc1blVHRnlaVzUwS1NCN1hHNGdJQ0FnZG1GeUlISmxZM1FnUFNCblpYUkRiR2xsYm5SU1pXTjBSbkp2YlUxcGVHVmtWSGx3WlNobGJHVnRaVzUwTENCamJHbHdjR2x1WjFCaGNtVnVkQ2s3WEc0Z0lDQWdZV05qVW1WamRDNTBiM0FnUFNCdFlYZ29jbVZqZEM1MGIzQXNJR0ZqWTFKbFkzUXVkRzl3S1R0Y2JpQWdJQ0JoWTJOU1pXTjBMbkpwWjJoMElEMGdiV2x1S0hKbFkzUXVjbWxuYUhRc0lHRmpZMUpsWTNRdWNtbG5hSFFwTzF4dUlDQWdJR0ZqWTFKbFkzUXVZbTkwZEc5dElEMGdiV2x1S0hKbFkzUXVZbTkwZEc5dExDQmhZMk5TWldOMExtSnZkSFJ2YlNrN1hHNGdJQ0FnWVdOalVtVmpkQzVzWldaMElEMGdiV0Y0S0hKbFkzUXViR1ZtZEN3Z1lXTmpVbVZqZEM1c1pXWjBLVHRjYmlBZ0lDQnlaWFIxY200Z1lXTmpVbVZqZER0Y2JpQWdmU3dnWjJWMFEyeHBaVzUwVW1WamRFWnliMjFOYVhobFpGUjVjR1VvWld4bGJXVnVkQ3dnWm1seWMzUkRiR2x3Y0dsdVoxQmhjbVZ1ZENrcE8xeHVJQ0JqYkdsd2NHbHVaMUpsWTNRdWQybGtkR2dnUFNCamJHbHdjR2x1WjFKbFkzUXVjbWxuYUhRZ0xTQmpiR2x3Y0dsdVoxSmxZM1F1YkdWbWREdGNiaUFnWTJ4cGNIQnBibWRTWldOMExtaGxhV2RvZENBOUlHTnNhWEJ3YVc1blVtVmpkQzVpYjNSMGIyMGdMU0JqYkdsd2NHbHVaMUpsWTNRdWRHOXdPMXh1SUNCamJHbHdjR2x1WjFKbFkzUXVlQ0E5SUdOc2FYQndhVzVuVW1WamRDNXNaV1owTzF4dUlDQmpiR2x3Y0dsdVoxSmxZM1F1ZVNBOUlHTnNhWEJ3YVc1blVtVmpkQzUwYjNBN1hHNGdJSEpsZEhWeWJpQmpiR2x3Y0dsdVoxSmxZM1E3WEc1OUlpd2lhVzF3YjNKMElHZGxkRmRwYm1SdmR5Qm1jbTl0SUZ3aUxpOW5aWFJYYVc1a2IzY3Vhbk5jSWp0Y2JtbHRjRzl5ZENCblpYUkViMk4xYldWdWRFVnNaVzFsYm5RZ1puSnZiU0JjSWk0dloyVjBSRzlqZFcxbGJuUkZiR1Z0Wlc1MExtcHpYQ0k3WEc1cGJYQnZjblFnWjJWMFYybHVaRzkzVTJOeWIyeHNRbUZ5V0NCbWNtOXRJRndpTGk5blpYUlhhVzVrYjNkVFkzSnZiR3hDWVhKWUxtcHpYQ0k3WEc1bGVIQnZjblFnWkdWbVlYVnNkQ0JtZFc1amRHbHZiaUJuWlhSV2FXVjNjRzl5ZEZKbFkzUW9aV3hsYldWdWRDa2dlMXh1SUNCMllYSWdkMmx1SUQwZ1oyVjBWMmx1Wkc5M0tHVnNaVzFsYm5RcE8xeHVJQ0IyWVhJZ2FIUnRiQ0E5SUdkbGRFUnZZM1Z0Wlc1MFJXeGxiV1Z1ZENobGJHVnRaVzUwS1R0Y2JpQWdkbUZ5SUhacGMzVmhiRlpwWlhkd2IzSjBJRDBnZDJsdUxuWnBjM1ZoYkZacFpYZHdiM0owTzF4dUlDQjJZWElnZDJsa2RHZ2dQU0JvZEcxc0xtTnNhV1Z1ZEZkcFpIUm9PMXh1SUNCMllYSWdhR1ZwWjJoMElEMGdhSFJ0YkM1amJHbGxiblJJWldsbmFIUTdYRzRnSUhaaGNpQjRJRDBnTUR0Y2JpQWdkbUZ5SUhrZ1BTQXdPeUF2THlCT1Fqb2dWR2hwY3lCcGMyNG5kQ0J6ZFhCd2IzSjBaV1FnYjI0Z2FVOVRJRHc5SURFeUxpQkpaaUIwYUdVZ2EyVjVZbTloY21RZ2FYTWdiM0JsYml3Z2RHaGxJSEJ2Y0hCbGNseHVJQ0F2THlCallXNGdZbVVnYjJKelkzVnlaV1FnZFc1a1pYSnVaV0YwYUNCcGRDNWNiaUFnTHk4Z1FXeHpieXdnWUdoMGJXd3VZMnhwWlc1MFNHVnBaMmgwWUNCaFpHUnpJSFJvWlNCaWIzUjBiMjBnWW1GeUlHaGxhV2RvZENCcGJpQlRZV1poY21rZ2FVOVRMQ0JsZG1WdVhHNGdJQzh2SUdsbUlHbDBJR2x6YmlkMElHOXdaVzRzSUhOdklHbG1JSFJvYVhNZ2FYTnVKM1FnWVhaaGFXeGhZbXhsTENCMGFHVWdjRzl3Y0dWeUlIZHBiR3dnWW1VZ1pHVjBaV04wWldSY2JpQWdMeThnZEc4Z2IzWmxjbVpzYjNjZ2RHaGxJR0p2ZEhSdmJTQnZaaUIwYUdVZ2MyTnlaV1Z1SUhSdmJ5QmxZWEpzZVM1Y2JseHVJQ0JwWmlBb2RtbHpkV0ZzVm1sbGQzQnZjblFwSUh0Y2JpQWdJQ0IzYVdSMGFDQTlJSFpwYzNWaGJGWnBaWGR3YjNKMExuZHBaSFJvTzF4dUlDQWdJR2hsYVdkb2RDQTlJSFpwYzNWaGJGWnBaWGR3YjNKMExtaGxhV2RvZERzZ0x5OGdWWE5sY3lCTVlYbHZkWFFnVm1sbGQzQnZjblFnS0d4cGEyVWdRMmh5YjIxbE95QlRZV1poY21rZ1pHOWxjeUJ1YjNRZ1kzVnljbVZ1ZEd4NUtWeHVJQ0FnSUM4dklFbHVJRU5vY205dFpTd2dhWFFnY21WMGRYSnVjeUJoSUhaaGJIVmxJSFpsY25rZ1kyeHZjMlVnZEc4Z01DQW9LeTh0S1NCaWRYUWdZMjl1ZEdGcGJuTWdjbTkxYm1ScGJtZGNiaUFnSUNBdkx5Qmxjbkp2Y25NZ1pIVmxJSFJ2SUdac2IyRjBhVzVuSUhCdmFXNTBJRzUxYldKbGNuTXNJSE52SUhkbElHNWxaV1FnZEc4Z1kyaGxZMnNnY0hKbFkybHphVzl1TGx4dUlDQWdJQzh2SUZOaFptRnlhU0J5WlhSMWNtNXpJR0VnYm5WdFltVnlJRHc5SURBc0lIVnpkV0ZzYkhrZ1BDQXRNU0IzYUdWdUlIQnBibU5vTFhwdmIyMWxaRnh1SUNBZ0lDOHZJRVpsWVhSMWNtVWdaR1YwWldOMGFXOXVJR1poYVd4eklHbHVJRzF2WW1sc1pTQmxiWFZzWVhScGIyNGdiVzlrWlNCcGJpQkRhSEp2YldVdVhHNGdJQ0FnTHk4Z1RXRjBhQzVoWW5Nb2QybHVMbWx1Ym1WeVYybGtkR2dnTHlCMmFYTjFZV3hXYVdWM2NHOXlkQzV6WTJGc1pTQXRJSFpwYzNWaGJGWnBaWGR3YjNKMExuZHBaSFJvS1NBOFhHNGdJQ0FnTHk4Z01DNHdNREZjYmlBZ0lDQXZMeUJHWVd4c1ltRmpheUJvWlhKbE9pQmNJazV2ZENCVFlXWmhjbWxjSWlCMWMyVnlRV2RsYm5SY2JseHVJQ0FnSUdsbUlDZ2hMMTRvS0Q4aFkyaHliMjFsZkdGdVpISnZhV1FwTGlrcWMyRm1ZWEpwTDJrdWRHVnpkQ2h1WVhacFoyRjBiM0l1ZFhObGNrRm5aVzUwS1NrZ2UxeHVJQ0FnSUNBZ2VDQTlJSFpwYzNWaGJGWnBaWGR3YjNKMExtOW1abk5sZEV4bFpuUTdYRzRnSUNBZ0lDQjVJRDBnZG1semRXRnNWbWxsZDNCdmNuUXViMlptYzJWMFZHOXdPMXh1SUNBZ0lIMWNiaUFnZlZ4dVhHNGdJSEpsZEhWeWJpQjdYRzRnSUNBZ2QybGtkR2c2SUhkcFpIUm9MRnh1SUNBZ0lHaGxhV2RvZERvZ2FHVnBaMmgwTEZ4dUlDQWdJSGc2SUhnZ0t5Qm5aWFJYYVc1a2IzZFRZM0p2Ykd4Q1lYSllLR1ZzWlcxbGJuUXBMRnh1SUNBZ0lIazZJSGxjYmlBZ2ZUdGNibjBpTENKcGJYQnZjblFnWjJWMFJHOWpkVzFsYm5SRmJHVnRaVzUwSUdaeWIyMGdYQ0l1TDJkbGRFUnZZM1Z0Wlc1MFJXeGxiV1Z1ZEM1cWMxd2lPMXh1YVcxd2IzSjBJR2RsZEVOdmJYQjFkR1ZrVTNSNWJHVWdabkp2YlNCY0lpNHZaMlYwUTI5dGNIVjBaV1JUZEhsc1pTNXFjMXdpTzF4dWFXMXdiM0owSUdkbGRGZHBibVJ2ZDFOamNtOXNiRUpoY2xnZ1puSnZiU0JjSWk0dloyVjBWMmx1Wkc5M1UyTnliMnhzUW1GeVdDNXFjMXdpTzF4dWFXMXdiM0owSUdkbGRGZHBibVJ2ZDFOamNtOXNiQ0JtY205dElGd2lMaTluWlhSWGFXNWtiM2RUWTNKdmJHd3Vhbk5jSWp0Y2JtbHRjRzl5ZENCN0lHMWhlQ0I5SUdaeWIyMGdYQ0l1TGk5MWRHbHNjeTl0WVhSb0xtcHpYQ0k3SUM4dklFZGxkSE1nZEdobElHVnVkR2x5WlNCemFYcGxJRzltSUhSb1pTQnpZM0p2Ykd4aFlteGxJR1J2WTNWdFpXNTBJR0Z5WldFc0lHVjJaVzRnWlhoMFpXNWthVzVuSUc5MWRITnBaR1ZjYmk4dklHOW1JSFJvWlNCZ1BHaDBiV3crWUNCaGJtUWdZRHhpYjJSNVBtQWdjbVZqZENCaWIzVnVaSE1nYVdZZ2FHOXlhWHB2Ym5SaGJHeDVJSE5qY205c2JHRmliR1ZjYmx4dVpYaHdiM0owSUdSbFptRjFiSFFnWm5WdVkzUnBiMjRnWjJWMFJHOWpkVzFsYm5SU1pXTjBLR1ZzWlcxbGJuUXBJSHRjYmlBZ2RtRnlJRjlsYkdWdFpXNTBKRzkzYm1WeVJHOWpkVzFsYmp0Y2JseHVJQ0IyWVhJZ2FIUnRiQ0E5SUdkbGRFUnZZM1Z0Wlc1MFJXeGxiV1Z1ZENobGJHVnRaVzUwS1R0Y2JpQWdkbUZ5SUhkcGJsTmpjbTlzYkNBOUlHZGxkRmRwYm1SdmQxTmpjbTlzYkNobGJHVnRaVzUwS1R0Y2JpQWdkbUZ5SUdKdlpIa2dQU0FvWDJWc1pXMWxiblFrYjNkdVpYSkViMk4xYldWdUlEMGdaV3hsYldWdWRDNXZkMjVsY2tSdlkzVnRaVzUwS1NBOVBTQnVkV3hzSUQ4Z2RtOXBaQ0F3SURvZ1gyVnNaVzFsYm5Ra2IzZHVaWEpFYjJOMWJXVnVMbUp2WkhrN1hHNGdJSFpoY2lCM2FXUjBhQ0E5SUcxaGVDaG9kRzFzTG5OamNtOXNiRmRwWkhSb0xDQm9kRzFzTG1Oc2FXVnVkRmRwWkhSb0xDQmliMlI1SUQ4Z1ltOWtlUzV6WTNKdmJHeFhhV1IwYUNBNklEQXNJR0p2WkhrZ1B5QmliMlI1TG1Oc2FXVnVkRmRwWkhSb0lEb2dNQ2s3WEc0Z0lIWmhjaUJvWldsbmFIUWdQU0J0WVhnb2FIUnRiQzV6WTNKdmJHeElaV2xuYUhRc0lHaDBiV3d1WTJ4cFpXNTBTR1ZwWjJoMExDQmliMlI1SUQ4Z1ltOWtlUzV6WTNKdmJHeElaV2xuYUhRZ09pQXdMQ0JpYjJSNUlEOGdZbTlrZVM1amJHbGxiblJJWldsbmFIUWdPaUF3S1R0Y2JpQWdkbUZ5SUhnZ1BTQXRkMmx1VTJOeWIyeHNMbk5qY205c2JFeGxablFnS3lCblpYUlhhVzVrYjNkVFkzSnZiR3hDWVhKWUtHVnNaVzFsYm5RcE8xeHVJQ0IyWVhJZ2VTQTlJQzEzYVc1VFkzSnZiR3d1YzJOeWIyeHNWRzl3TzF4dVhHNGdJR2xtSUNoblpYUkRiMjF3ZFhSbFpGTjBlV3hsS0dKdlpIa2dmSHdnYUhSdGJDa3VaR2x5WldOMGFXOXVJRDA5UFNBbmNuUnNKeWtnZTF4dUlDQWdJSGdnS3owZ2JXRjRLR2gwYld3dVkyeHBaVzUwVjJsa2RHZ3NJR0p2WkhrZ1B5QmliMlI1TG1Oc2FXVnVkRmRwWkhSb0lEb2dNQ2tnTFNCM2FXUjBhRHRjYmlBZ2ZWeHVYRzRnSUhKbGRIVnliaUI3WEc0Z0lDQWdkMmxrZEdnNklIZHBaSFJvTEZ4dUlDQWdJR2hsYVdkb2REb2dhR1ZwWjJoMExGeHVJQ0FnSUhnNklIZ3NYRzRnSUNBZ2VUb2dlVnh1SUNCOU8xeHVmU0lzSW1sdGNHOXlkQ0JuWlhSQ1lYTmxVR3hoWTJWdFpXNTBJR1p5YjIwZ1hDSXVMMmRsZEVKaGMyVlFiR0ZqWlcxbGJuUXVhbk5jSWp0Y2JtbHRjRzl5ZENCblpYUldZWEpwWVhScGIyNGdabkp2YlNCY0lpNHZaMlYwVm1GeWFXRjBhVzl1TG1welhDSTdYRzVwYlhCdmNuUWdaMlYwVFdGcGJrRjRhWE5HY205dFVHeGhZMlZ0Wlc1MElHWnliMjBnWENJdUwyZGxkRTFoYVc1QmVHbHpSbkp2YlZCc1lXTmxiV1Z1ZEM1cWMxd2lPMXh1YVcxd2IzSjBJSHNnZEc5d0xDQnlhV2RvZEN3Z1ltOTBkRzl0TENCc1pXWjBMQ0J6ZEdGeWRDd2daVzVrSUgwZ1puSnZiU0JjSWk0dUwyVnVkVzF6TG1welhDSTdYRzVsZUhCdmNuUWdaR1ZtWVhWc2RDQm1kVzVqZEdsdmJpQmpiMjF3ZFhSbFQyWm1jMlYwY3loZmNtVm1LU0I3WEc0Z0lIWmhjaUJ5WldabGNtVnVZMlVnUFNCZmNtVm1MbkpsWm1WeVpXNWpaU3hjYmlBZ0lDQWdJR1ZzWlcxbGJuUWdQU0JmY21WbUxtVnNaVzFsYm5Rc1hHNGdJQ0FnSUNCd2JHRmpaVzFsYm5RZ1BTQmZjbVZtTG5Cc1lXTmxiV1Z1ZER0Y2JpQWdkbUZ5SUdKaGMyVlFiR0ZqWlcxbGJuUWdQU0J3YkdGalpXMWxiblFnUHlCblpYUkNZWE5sVUd4aFkyVnRaVzUwS0hCc1lXTmxiV1Z1ZENrZ09pQnVkV3hzTzF4dUlDQjJZWElnZG1GeWFXRjBhVzl1SUQwZ2NHeGhZMlZ0Wlc1MElEOGdaMlYwVm1GeWFXRjBhVzl1S0hCc1lXTmxiV1Z1ZENrZ09pQnVkV3hzTzF4dUlDQjJZWElnWTI5dGJXOXVXQ0E5SUhKbFptVnlaVzVqWlM1NElDc2djbVZtWlhKbGJtTmxMbmRwWkhSb0lDOGdNaUF0SUdWc1pXMWxiblF1ZDJsa2RHZ2dMeUF5TzF4dUlDQjJZWElnWTI5dGJXOXVXU0E5SUhKbFptVnlaVzVqWlM1NUlDc2djbVZtWlhKbGJtTmxMbWhsYVdkb2RDQXZJRElnTFNCbGJHVnRaVzUwTG1obGFXZG9kQ0F2SURJN1hHNGdJSFpoY2lCdlptWnpaWFJ6TzF4dVhHNGdJSE4zYVhSamFDQW9ZbUZ6WlZCc1lXTmxiV1Z1ZENrZ2UxeHVJQ0FnSUdOaGMyVWdkRzl3T2x4dUlDQWdJQ0FnYjJabWMyVjBjeUE5SUh0Y2JpQWdJQ0FnSUNBZ2VEb2dZMjl0Ylc5dVdDeGNiaUFnSUNBZ0lDQWdlVG9nY21WbVpYSmxibU5sTG5rZ0xTQmxiR1Z0Wlc1MExtaGxhV2RvZEZ4dUlDQWdJQ0FnZlR0Y2JpQWdJQ0FnSUdKeVpXRnJPMXh1WEc0Z0lDQWdZMkZ6WlNCaWIzUjBiMjA2WEc0Z0lDQWdJQ0J2Wm1aelpYUnpJRDBnZTF4dUlDQWdJQ0FnSUNCNE9pQmpiMjF0YjI1WUxGeHVJQ0FnSUNBZ0lDQjVPaUJ5WldabGNtVnVZMlV1ZVNBcklISmxabVZ5Wlc1alpTNW9aV2xuYUhSY2JpQWdJQ0FnSUgwN1hHNGdJQ0FnSUNCaWNtVmhhenRjYmx4dUlDQWdJR05oYzJVZ2NtbG5hSFE2WEc0Z0lDQWdJQ0J2Wm1aelpYUnpJRDBnZTF4dUlDQWdJQ0FnSUNCNE9pQnlaV1psY21WdVkyVXVlQ0FySUhKbFptVnlaVzVqWlM1M2FXUjBhQ3hjYmlBZ0lDQWdJQ0FnZVRvZ1kyOXRiVzl1V1Z4dUlDQWdJQ0FnZlR0Y2JpQWdJQ0FnSUdKeVpXRnJPMXh1WEc0Z0lDQWdZMkZ6WlNCc1pXWjBPbHh1SUNBZ0lDQWdiMlptYzJWMGN5QTlJSHRjYmlBZ0lDQWdJQ0FnZURvZ2NtVm1aWEpsYm1ObExuZ2dMU0JsYkdWdFpXNTBMbmRwWkhSb0xGeHVJQ0FnSUNBZ0lDQjVPaUJqYjIxdGIyNVpYRzRnSUNBZ0lDQjlPMXh1SUNBZ0lDQWdZbkpsWVdzN1hHNWNiaUFnSUNCa1pXWmhkV3gwT2x4dUlDQWdJQ0FnYjJabWMyVjBjeUE5SUh0Y2JpQWdJQ0FnSUNBZ2VEb2djbVZtWlhKbGJtTmxMbmdzWEc0Z0lDQWdJQ0FnSUhrNklISmxabVZ5Wlc1alpTNTVYRzRnSUNBZ0lDQjlPMXh1SUNCOVhHNWNiaUFnZG1GeUlHMWhhVzVCZUdseklEMGdZbUZ6WlZCc1lXTmxiV1Z1ZENBL0lHZGxkRTFoYVc1QmVHbHpSbkp2YlZCc1lXTmxiV1Z1ZENoaVlYTmxVR3hoWTJWdFpXNTBLU0E2SUc1MWJHdzdYRzVjYmlBZ2FXWWdLRzFoYVc1QmVHbHpJQ0U5SUc1MWJHd3BJSHRjYmlBZ0lDQjJZWElnYkdWdUlEMGdiV0ZwYmtGNGFYTWdQVDA5SUNkNUp5QS9JQ2RvWldsbmFIUW5JRG9nSjNkcFpIUm9KenRjYmx4dUlDQWdJSE4zYVhSamFDQW9kbUZ5YVdGMGFXOXVLU0I3WEc0Z0lDQWdJQ0JqWVhObElITjBZWEowT2x4dUlDQWdJQ0FnSUNCdlptWnpaWFJ6VzIxaGFXNUJlR2x6WFNBOUlHOW1abk5sZEhOYmJXRnBia0Y0YVhOZElDMGdLSEpsWm1WeVpXNWpaVnRzWlc1ZElDOGdNaUF0SUdWc1pXMWxiblJiYkdWdVhTQXZJRElwTzF4dUlDQWdJQ0FnSUNCaWNtVmhhenRjYmx4dUlDQWdJQ0FnWTJGelpTQmxibVE2WEc0Z0lDQWdJQ0FnSUc5bVpuTmxkSE5iYldGcGJrRjRhWE5kSUQwZ2IyWm1jMlYwYzF0dFlXbHVRWGhwYzEwZ0t5QW9jbVZtWlhKbGJtTmxXMnhsYmwwZ0x5QXlJQzBnWld4bGJXVnVkRnRzWlc1ZElDOGdNaWs3WEc0Z0lDQWdJQ0FnSUdKeVpXRnJPMXh1WEc0Z0lDQWdJQ0JrWldaaGRXeDBPbHh1SUNBZ0lIMWNiaUFnZlZ4dVhHNGdJSEpsZEhWeWJpQnZabVp6WlhSek8xeHVmU0lzSW1sdGNHOXlkQ0JuWlhSRGJHbHdjR2x1WjFKbFkzUWdabkp2YlNCY0lpNHVMMlJ2YlMxMWRHbHNjeTluWlhSRGJHbHdjR2x1WjFKbFkzUXVhbk5jSWp0Y2JtbHRjRzl5ZENCblpYUkViMk4xYldWdWRFVnNaVzFsYm5RZ1puSnZiU0JjSWk0dUwyUnZiUzExZEdsc2N5OW5aWFJFYjJOMWJXVnVkRVZzWlcxbGJuUXVhbk5jSWp0Y2JtbHRjRzl5ZENCblpYUkNiM1Z1WkdsdVowTnNhV1Z1ZEZKbFkzUWdabkp2YlNCY0lpNHVMMlJ2YlMxMWRHbHNjeTluWlhSQ2IzVnVaR2x1WjBOc2FXVnVkRkpsWTNRdWFuTmNJanRjYm1sdGNHOXlkQ0JqYjIxd2RYUmxUMlptYzJWMGN5Qm1jbTl0SUZ3aUxpOWpiMjF3ZFhSbFQyWm1jMlYwY3k1cWMxd2lPMXh1YVcxd2IzSjBJSEpsWTNSVWIwTnNhV1Z1ZEZKbFkzUWdabkp2YlNCY0lpNHZjbVZqZEZSdlEyeHBaVzUwVW1WamRDNXFjMXdpTzF4dWFXMXdiM0owSUhzZ1kyeHBjSEJwYm1kUVlYSmxiblJ6TENCeVpXWmxjbVZ1WTJVc0lIQnZjSEJsY2l3Z1ltOTBkRzl0TENCMGIzQXNJSEpwWjJoMExDQmlZWE5sVUd4aFkyVnRaVzUwY3l3Z2RtbGxkM0J2Y25RZ2ZTQm1jbTl0SUZ3aUxpNHZaVzUxYlhNdWFuTmNJanRjYm1sdGNHOXlkQ0I3SUdselJXeGxiV1Z1ZENCOUlHWnliMjBnWENJdUxpOWtiMjB0ZFhScGJITXZhVzV6ZEdGdVkyVlBaaTVxYzF3aU8xeHVhVzF3YjNKMElHMWxjbWRsVUdGa1pHbHVaMDlpYW1WamRDQm1jbTl0SUZ3aUxpOXRaWEpuWlZCaFpHUnBibWRQWW1wbFkzUXVhbk5jSWp0Y2JtbHRjRzl5ZENCbGVIQmhibVJVYjBoaGMyaE5ZWEFnWm5KdmJTQmNJaTR2Wlhod1lXNWtWRzlJWVhOb1RXRndMbXB6WENJN0lDOHZJR1Z6YkdsdWRDMWthWE5oWW14bExXNWxlSFF0YkdsdVpTQnBiWEJ2Y25RdmJtOHRkVzUxYzJWa0xXMXZaSFZzWlhOY2JseHVaWGh3YjNKMElHUmxabUYxYkhRZ1puVnVZM1JwYjI0Z1pHVjBaV04wVDNabGNtWnNiM2NvYzNSaGRHVXNJRzl3ZEdsdmJuTXBJSHRjYmlBZ2FXWWdLRzl3ZEdsdmJuTWdQVDA5SUhadmFXUWdNQ2tnZTF4dUlDQWdJRzl3ZEdsdmJuTWdQU0I3ZlR0Y2JpQWdmVnh1WEc0Z0lIWmhjaUJmYjNCMGFXOXVjeUE5SUc5d2RHbHZibk1zWEc0Z0lDQWdJQ0JmYjNCMGFXOXVjeVJ3YkdGalpXMWxiblFnUFNCZmIzQjBhVzl1Y3k1d2JHRmpaVzFsYm5Rc1hHNGdJQ0FnSUNCd2JHRmpaVzFsYm5RZ1BTQmZiM0IwYVc5dWN5UndiR0ZqWlcxbGJuUWdQVDA5SUhadmFXUWdNQ0EvSUhOMFlYUmxMbkJzWVdObGJXVnVkQ0E2SUY5dmNIUnBiMjV6SkhCc1lXTmxiV1Z1ZEN4Y2JpQWdJQ0FnSUY5dmNIUnBiMjV6SkdKdmRXNWtZWEo1SUQwZ1gyOXdkR2x2Ym5NdVltOTFibVJoY25rc1hHNGdJQ0FnSUNCaWIzVnVaR0Z5ZVNBOUlGOXZjSFJwYjI1ekpHSnZkVzVrWVhKNUlEMDlQU0IyYjJsa0lEQWdQeUJqYkdsd2NHbHVaMUJoY21WdWRITWdPaUJmYjNCMGFXOXVjeVJpYjNWdVpHRnllU3hjYmlBZ0lDQWdJRjl2Y0hScGIyNXpKSEp2YjNSQ2IzVnVaR0Z5ZVNBOUlGOXZjSFJwYjI1ekxuSnZiM1JDYjNWdVpHRnllU3hjYmlBZ0lDQWdJSEp2YjNSQ2IzVnVaR0Z5ZVNBOUlGOXZjSFJwYjI1ekpISnZiM1JDYjNWdVpHRnllU0E5UFQwZ2RtOXBaQ0F3SUQ4Z2RtbGxkM0J2Y25RZ09pQmZiM0IwYVc5dWN5UnliMjkwUW05MWJtUmhjbmtzWEc0Z0lDQWdJQ0JmYjNCMGFXOXVjeVJsYkdWdFpXNTBRMjl1ZEdVZ1BTQmZiM0IwYVc5dWN5NWxiR1Z0Wlc1MFEyOXVkR1Y0ZEN4Y2JpQWdJQ0FnSUdWc1pXMWxiblJEYjI1MFpYaDBJRDBnWDI5d2RHbHZibk1rWld4bGJXVnVkRU52Ym5SbElEMDlQU0IyYjJsa0lEQWdQeUJ3YjNCd1pYSWdPaUJmYjNCMGFXOXVjeVJsYkdWdFpXNTBRMjl1ZEdVc1hHNGdJQ0FnSUNCZmIzQjBhVzl1Y3lSaGJIUkNiM1Z1WkdGeWVTQTlJRjl2Y0hScGIyNXpMbUZzZEVKdmRXNWtZWEo1TEZ4dUlDQWdJQ0FnWVd4MFFtOTFibVJoY25rZ1BTQmZiM0IwYVc5dWN5UmhiSFJDYjNWdVpHRnllU0E5UFQwZ2RtOXBaQ0F3SUQ4Z1ptRnNjMlVnT2lCZmIzQjBhVzl1Y3lSaGJIUkNiM1Z1WkdGeWVTeGNiaUFnSUNBZ0lGOXZjSFJwYjI1ekpIQmhaR1JwYm1jZ1BTQmZiM0IwYVc5dWN5NXdZV1JrYVc1bkxGeHVJQ0FnSUNBZ2NHRmtaR2x1WnlBOUlGOXZjSFJwYjI1ekpIQmhaR1JwYm1jZ1BUMDlJSFp2YVdRZ01DQS9JREFnT2lCZmIzQjBhVzl1Y3lSd1lXUmthVzVuTzF4dUlDQjJZWElnY0dGa1pHbHVaMDlpYW1WamRDQTlJRzFsY21kbFVHRmtaR2x1WjA5aWFtVmpkQ2gwZVhCbGIyWWdjR0ZrWkdsdVp5QWhQVDBnSjI1MWJXSmxjaWNnUHlCd1lXUmthVzVuSURvZ1pYaHdZVzVrVkc5SVlYTm9UV0Z3S0hCaFpHUnBibWNzSUdKaGMyVlFiR0ZqWlcxbGJuUnpLU2s3WEc0Z0lIWmhjaUJoYkhSRGIyNTBaWGgwSUQwZ1pXeGxiV1Z1ZEVOdmJuUmxlSFFnUFQwOUlIQnZjSEJsY2lBL0lISmxabVZ5Wlc1alpTQTZJSEJ2Y0hCbGNqdGNiaUFnZG1GeUlIQnZjSEJsY2xKbFkzUWdQU0J6ZEdGMFpTNXlaV04wY3k1d2IzQndaWEk3WEc0Z0lIWmhjaUJsYkdWdFpXNTBJRDBnYzNSaGRHVXVaV3hsYldWdWRITmJZV3gwUW05MWJtUmhjbmtnUHlCaGJIUkRiMjUwWlhoMElEb2daV3hsYldWdWRFTnZiblJsZUhSZE8xeHVJQ0IyWVhJZ1kyeHBjSEJwYm1kRGJHbGxiblJTWldOMElEMGdaMlYwUTJ4cGNIQnBibWRTWldOMEtHbHpSV3hsYldWdWRDaGxiR1Z0Wlc1MEtTQS9JR1ZzWlcxbGJuUWdPaUJsYkdWdFpXNTBMbU52Ym5SbGVIUkZiR1Z0Wlc1MElIeDhJR2RsZEVSdlkzVnRaVzUwUld4bGJXVnVkQ2h6ZEdGMFpTNWxiR1Z0Wlc1MGN5NXdiM0J3WlhJcExDQmliM1Z1WkdGeWVTd2djbTl2ZEVKdmRXNWtZWEo1S1R0Y2JpQWdkbUZ5SUhKbFptVnlaVzVqWlVOc2FXVnVkRkpsWTNRZ1BTQm5aWFJDYjNWdVpHbHVaME5zYVdWdWRGSmxZM1FvYzNSaGRHVXVaV3hsYldWdWRITXVjbVZtWlhKbGJtTmxLVHRjYmlBZ2RtRnlJSEJ2Y0hCbGNrOW1abk5sZEhNZ1BTQmpiMjF3ZFhSbFQyWm1jMlYwY3loN1hHNGdJQ0FnY21WbVpYSmxibU5sT2lCeVpXWmxjbVZ1WTJWRGJHbGxiblJTWldOMExGeHVJQ0FnSUdWc1pXMWxiblE2SUhCdmNIQmxjbEpsWTNRc1hHNGdJQ0FnYzNSeVlYUmxaM2s2SUNkaFluTnZiSFYwWlNjc1hHNGdJQ0FnY0d4aFkyVnRaVzUwT2lCd2JHRmpaVzFsYm5SY2JpQWdmU2s3WEc0Z0lIWmhjaUJ3YjNCd1pYSkRiR2xsYm5SU1pXTjBJRDBnY21WamRGUnZRMnhwWlc1MFVtVmpkQ2hQWW1wbFkzUXVZWE56YVdkdUtIdDlMQ0J3YjNCd1pYSlNaV04wTENCd2IzQndaWEpQWm1aelpYUnpLU2s3WEc0Z0lIWmhjaUJsYkdWdFpXNTBRMnhwWlc1MFVtVmpkQ0E5SUdWc1pXMWxiblJEYjI1MFpYaDBJRDA5UFNCd2IzQndaWElnUHlCd2IzQndaWEpEYkdsbGJuUlNaV04wSURvZ2NtVm1aWEpsYm1ObFEyeHBaVzUwVW1WamREc2dMeThnY0c5emFYUnBkbVVnUFNCdmRtVnlabXh2ZDJsdVp5QjBhR1VnWTJ4cGNIQnBibWNnY21WamRGeHVJQ0F2THlBd0lHOXlJRzVsWjJGMGFYWmxJRDBnZDJsMGFHbHVJSFJvWlNCamJHbHdjR2x1WnlCeVpXTjBYRzVjYmlBZ2RtRnlJRzkyWlhKbWJHOTNUMlptYzJWMGN5QTlJSHRjYmlBZ0lDQjBiM0E2SUdOc2FYQndhVzVuUTJ4cFpXNTBVbVZqZEM1MGIzQWdMU0JsYkdWdFpXNTBRMnhwWlc1MFVtVmpkQzUwYjNBZ0t5QndZV1JrYVc1blQySnFaV04wTG5SdmNDeGNiaUFnSUNCaWIzUjBiMjA2SUdWc1pXMWxiblJEYkdsbGJuUlNaV04wTG1KdmRIUnZiU0F0SUdOc2FYQndhVzVuUTJ4cFpXNTBVbVZqZEM1aWIzUjBiMjBnS3lCd1lXUmthVzVuVDJKcVpXTjBMbUp2ZEhSdmJTeGNiaUFnSUNCc1pXWjBPaUJqYkdsd2NHbHVaME5zYVdWdWRGSmxZM1F1YkdWbWRDQXRJR1ZzWlcxbGJuUkRiR2xsYm5SU1pXTjBMbXhsWm5RZ0t5QndZV1JrYVc1blQySnFaV04wTG14bFpuUXNYRzRnSUNBZ2NtbG5hSFE2SUdWc1pXMWxiblJEYkdsbGJuUlNaV04wTG5KcFoyaDBJQzBnWTJ4cGNIQnBibWREYkdsbGJuUlNaV04wTG5KcFoyaDBJQ3NnY0dGa1pHbHVaMDlpYW1WamRDNXlhV2RvZEZ4dUlDQjlPMXh1SUNCMllYSWdiMlptYzJWMFJHRjBZU0E5SUhOMFlYUmxMbTF2WkdsbWFXVnljMFJoZEdFdWIyWm1jMlYwT3lBdkx5QlBabVp6WlhSeklHTmhiaUJpWlNCaGNIQnNhV1ZrSUc5dWJIa2dkRzhnZEdobElIQnZjSEJsY2lCbGJHVnRaVzUwWEc1Y2JpQWdhV1lnS0dWc1pXMWxiblJEYjI1MFpYaDBJRDA5UFNCd2IzQndaWElnSmlZZ2IyWm1jMlYwUkdGMFlTa2dlMXh1SUNBZ0lIWmhjaUJ2Wm1aelpYUWdQU0J2Wm1aelpYUkVZWFJoVzNCc1lXTmxiV1Z1ZEYwN1hHNGdJQ0FnVDJKcVpXTjBMbXRsZVhNb2IzWmxjbVpzYjNkUFptWnpaWFJ6S1M1bWIzSkZZV05vS0daMWJtTjBhVzl1SUNoclpYa3BJSHRjYmlBZ0lDQWdJSFpoY2lCdGRXeDBhWEJzZVNBOUlGdHlhV2RvZEN3Z1ltOTBkRzl0WFM1cGJtUmxlRTltS0d0bGVTa2dQajBnTUNBL0lERWdPaUF0TVR0Y2JpQWdJQ0FnSUhaaGNpQmhlR2x6SUQwZ1czUnZjQ3dnWW05MGRHOXRYUzVwYm1SbGVFOW1LR3RsZVNrZ1BqMGdNQ0EvSUNkNUp5QTZJQ2Q0Snp0Y2JpQWdJQ0FnSUc5MlpYSm1iRzkzVDJabWMyVjBjMXRyWlhsZElDczlJRzltWm5ObGRGdGhlR2x6WFNBcUlHMTFiSFJwY0d4NU8xeHVJQ0FnSUgwcE8xeHVJQ0I5WEc1Y2JpQWdjbVYwZFhKdUlHOTJaWEptYkc5M1QyWm1jMlYwY3p0Y2JuMGlMQ0pwYlhCdmNuUWdaMlYwVDNCd2IzTnBkR1ZRYkdGalpXMWxiblFnWm5KdmJTQmNJaTR1TDNWMGFXeHpMMmRsZEU5d2NHOXphWFJsVUd4aFkyVnRaVzUwTG1welhDSTdYRzVwYlhCdmNuUWdaMlYwUW1GelpWQnNZV05sYldWdWRDQm1jbTl0SUZ3aUxpNHZkWFJwYkhNdloyVjBRbUZ6WlZCc1lXTmxiV1Z1ZEM1cWMxd2lPMXh1YVcxd2IzSjBJR2RsZEU5d2NHOXphWFJsVm1GeWFXRjBhVzl1VUd4aFkyVnRaVzUwSUdaeWIyMGdYQ0l1TGk5MWRHbHNjeTluWlhSUGNIQnZjMmwwWlZaaGNtbGhkR2x2YmxCc1lXTmxiV1Z1ZEM1cWMxd2lPMXh1YVcxd2IzSjBJR1JsZEdWamRFOTJaWEptYkc5M0lHWnliMjBnWENJdUxpOTFkR2xzY3k5a1pYUmxZM1JQZG1WeVpteHZkeTVxYzF3aU8xeHVhVzF3YjNKMElHTnZiWEIxZEdWQmRYUnZVR3hoWTJWdFpXNTBJR1p5YjIwZ1hDSXVMaTkxZEdsc2N5OWpiMjF3ZFhSbFFYVjBiMUJzWVdObGJXVnVkQzVxYzF3aU8xeHVhVzF3YjNKMElIc2dZbTkwZEc5dExDQjBiM0FzSUhOMFlYSjBMQ0J5YVdkb2RDd2diR1ZtZEN3Z1lYVjBieUI5SUdaeWIyMGdYQ0l1TGk5bGJuVnRjeTVxYzF3aU8xeHVhVzF3YjNKMElHZGxkRlpoY21saGRHbHZiaUJtY205dElGd2lMaTR2ZFhScGJITXZaMlYwVm1GeWFXRjBhVzl1TG1welhDSTdJQzh2SUdWemJHbHVkQzFrYVhOaFlteGxMVzVsZUhRdGJHbHVaU0JwYlhCdmNuUXZibTh0ZFc1MWMyVmtMVzF2WkhWc1pYTmNibHh1Wm5WdVkzUnBiMjRnWjJWMFJYaHdZVzVrWldSR1lXeHNZbUZqYTFCc1lXTmxiV1Z1ZEhNb2NHeGhZMlZ0Wlc1MEtTQjdYRzRnSUdsbUlDaG5aWFJDWVhObFVHeGhZMlZ0Wlc1MEtIQnNZV05sYldWdWRDa2dQVDA5SUdGMWRHOHBJSHRjYmlBZ0lDQnlaWFIxY200Z1cxMDdYRzRnSUgxY2JseHVJQ0IyWVhJZ2IzQndiM05wZEdWUWJHRmpaVzFsYm5RZ1BTQm5aWFJQY0hCdmMybDBaVkJzWVdObGJXVnVkQ2h3YkdGalpXMWxiblFwTzF4dUlDQnlaWFIxY200Z1cyZGxkRTl3Y0c5emFYUmxWbUZ5YVdGMGFXOXVVR3hoWTJWdFpXNTBLSEJzWVdObGJXVnVkQ2tzSUc5d2NHOXphWFJsVUd4aFkyVnRaVzUwTENCblpYUlBjSEJ2YzJsMFpWWmhjbWxoZEdsdmJsQnNZV05sYldWdWRDaHZjSEJ2YzJsMFpWQnNZV05sYldWdWRDbGRPMXh1ZlZ4dVhHNW1kVzVqZEdsdmJpQm1iR2x3S0Y5eVpXWXBJSHRjYmlBZ2RtRnlJSE4wWVhSbElEMGdYM0psWmk1emRHRjBaU3hjYmlBZ0lDQWdJRzl3ZEdsdmJuTWdQU0JmY21WbUxtOXdkR2x2Ym5Nc1hHNGdJQ0FnSUNCdVlXMWxJRDBnWDNKbFppNXVZVzFsTzF4dVhHNGdJR2xtSUNoemRHRjBaUzV0YjJScFptbGxjbk5FWVhSaFcyNWhiV1ZkTGw5emEybHdLU0I3WEc0Z0lDQWdjbVYwZFhKdU8xeHVJQ0I5WEc1Y2JpQWdkbUZ5SUY5dmNIUnBiMjV6SkcxaGFXNUJlR2x6SUQwZ2IzQjBhVzl1Y3k1dFlXbHVRWGhwY3l4Y2JpQWdJQ0FnSUdOb1pXTnJUV0ZwYmtGNGFYTWdQU0JmYjNCMGFXOXVjeVJ0WVdsdVFYaHBjeUE5UFQwZ2RtOXBaQ0F3SUQ4Z2RISjFaU0E2SUY5dmNIUnBiMjV6SkcxaGFXNUJlR2x6TEZ4dUlDQWdJQ0FnWDI5d2RHbHZibk1rWVd4MFFYaHBjeUE5SUc5d2RHbHZibk11WVd4MFFYaHBjeXhjYmlBZ0lDQWdJR05vWldOclFXeDBRWGhwY3lBOUlGOXZjSFJwYjI1ekpHRnNkRUY0YVhNZ1BUMDlJSFp2YVdRZ01DQS9JSFJ5ZFdVZ09pQmZiM0IwYVc5dWN5UmhiSFJCZUdsekxGeHVJQ0FnSUNBZ2MzQmxZMmxtYVdWa1JtRnNiR0poWTJ0UWJHRmpaVzFsYm5SeklEMGdiM0IwYVc5dWN5NW1ZV3hzWW1GamExQnNZV05sYldWdWRITXNYRzRnSUNBZ0lDQndZV1JrYVc1bklEMGdiM0IwYVc5dWN5NXdZV1JrYVc1bkxGeHVJQ0FnSUNBZ1ltOTFibVJoY25rZ1BTQnZjSFJwYjI1ekxtSnZkVzVrWVhKNUxGeHVJQ0FnSUNBZ2NtOXZkRUp2ZFc1a1lYSjVJRDBnYjNCMGFXOXVjeTV5YjI5MFFtOTFibVJoY25rc1hHNGdJQ0FnSUNCaGJIUkNiM1Z1WkdGeWVTQTlJRzl3ZEdsdmJuTXVZV3gwUW05MWJtUmhjbmtzWEc0Z0lDQWdJQ0JmYjNCMGFXOXVjeVJtYkdsd1ZtRnlhV0YwYVc4Z1BTQnZjSFJwYjI1ekxtWnNhWEJXWVhKcFlYUnBiMjV6TEZ4dUlDQWdJQ0FnWm14cGNGWmhjbWxoZEdsdmJuTWdQU0JmYjNCMGFXOXVjeVJtYkdsd1ZtRnlhV0YwYVc4Z1BUMDlJSFp2YVdRZ01DQS9JSFJ5ZFdVZ09pQmZiM0IwYVc5dWN5Um1iR2x3Vm1GeWFXRjBhVzhzWEc0Z0lDQWdJQ0JoYkd4dmQyVmtRWFYwYjFCc1lXTmxiV1Z1ZEhNZ1BTQnZjSFJwYjI1ekxtRnNiRzkzWldSQmRYUnZVR3hoWTJWdFpXNTBjenRjYmlBZ2RtRnlJSEJ5WldabGNuSmxaRkJzWVdObGJXVnVkQ0E5SUhOMFlYUmxMbTl3ZEdsdmJuTXVjR3hoWTJWdFpXNTBPMXh1SUNCMllYSWdZbUZ6WlZCc1lXTmxiV1Z1ZENBOUlHZGxkRUpoYzJWUWJHRmpaVzFsYm5Rb2NISmxabVZ5Y21Wa1VHeGhZMlZ0Wlc1MEtUdGNiaUFnZG1GeUlHbHpRbUZ6WlZCc1lXTmxiV1Z1ZENBOUlHSmhjMlZRYkdGalpXMWxiblFnUFQwOUlIQnlaV1psY25KbFpGQnNZV05sYldWdWREdGNiaUFnZG1GeUlHWmhiR3hpWVdOclVHeGhZMlZ0Wlc1MGN5QTlJSE53WldOcFptbGxaRVpoYkd4aVlXTnJVR3hoWTJWdFpXNTBjeUI4ZkNBb2FYTkNZWE5sVUd4aFkyVnRaVzUwSUh4OElDRm1iR2x3Vm1GeWFXRjBhVzl1Y3lBL0lGdG5aWFJQY0hCdmMybDBaVkJzWVdObGJXVnVkQ2h3Y21WbVpYSnlaV1JRYkdGalpXMWxiblFwWFNBNklHZGxkRVY0Y0dGdVpHVmtSbUZzYkdKaFkydFFiR0ZqWlcxbGJuUnpLSEJ5WldabGNuSmxaRkJzWVdObGJXVnVkQ2twTzF4dUlDQjJZWElnY0d4aFkyVnRaVzUwY3lBOUlGdHdjbVZtWlhKeVpXUlFiR0ZqWlcxbGJuUmRMbU52Ym1OaGRDaG1ZV3hzWW1GamExQnNZV05sYldWdWRITXBMbkpsWkhWalpTaG1kVzVqZEdsdmJpQW9ZV05qTENCd2JHRmpaVzFsYm5RcElIdGNiaUFnSUNCeVpYUjFjbTRnWVdOakxtTnZibU5oZENoblpYUkNZWE5sVUd4aFkyVnRaVzUwS0hCc1lXTmxiV1Z1ZENrZ1BUMDlJR0YxZEc4Z1B5QmpiMjF3ZFhSbFFYVjBiMUJzWVdObGJXVnVkQ2h6ZEdGMFpTd2dlMXh1SUNBZ0lDQWdjR3hoWTJWdFpXNTBPaUJ3YkdGalpXMWxiblFzWEc0Z0lDQWdJQ0JpYjNWdVpHRnllVG9nWW05MWJtUmhjbmtzWEc0Z0lDQWdJQ0J5YjI5MFFtOTFibVJoY25rNklISnZiM1JDYjNWdVpHRnllU3hjYmlBZ0lDQWdJSEJoWkdScGJtYzZJSEJoWkdScGJtY3NYRzRnSUNBZ0lDQm1iR2x3Vm1GeWFXRjBhVzl1Y3pvZ1pteHBjRlpoY21saGRHbHZibk1zWEc0Z0lDQWdJQ0JoYkd4dmQyVmtRWFYwYjFCc1lXTmxiV1Z1ZEhNNklHRnNiRzkzWldSQmRYUnZVR3hoWTJWdFpXNTBjMXh1SUNBZ0lIMHBJRG9nY0d4aFkyVnRaVzUwS1R0Y2JpQWdmU3dnVzEwcE8xeHVJQ0IyWVhJZ2NtVm1aWEpsYm1ObFVtVmpkQ0E5SUhOMFlYUmxMbkpsWTNSekxuSmxabVZ5Wlc1alpUdGNiaUFnZG1GeUlIQnZjSEJsY2xKbFkzUWdQU0J6ZEdGMFpTNXlaV04wY3k1d2IzQndaWEk3WEc0Z0lIWmhjaUJqYUdWamEzTk5ZWEFnUFNCdVpYY2dUV0Z3S0NrN1hHNGdJSFpoY2lCdFlXdGxSbUZzYkdKaFkydERhR1ZqYTNNZ1BTQjBjblZsTzF4dUlDQjJZWElnWm1seWMzUkdhWFIwYVc1blVHeGhZMlZ0Wlc1MElEMGdjR3hoWTJWdFpXNTBjMXN3WFR0Y2JseHVJQ0JtYjNJZ0tIWmhjaUJwSUQwZ01Ec2dhU0E4SUhCc1lXTmxiV1Z1ZEhNdWJHVnVaM1JvT3lCcEt5c3BJSHRjYmlBZ0lDQjJZWElnY0d4aFkyVnRaVzUwSUQwZ2NHeGhZMlZ0Wlc1MGMxdHBYVHRjYmx4dUlDQWdJSFpoY2lCZlltRnpaVkJzWVdObGJXVnVkQ0E5SUdkbGRFSmhjMlZRYkdGalpXMWxiblFvY0d4aFkyVnRaVzUwS1R0Y2JseHVJQ0FnSUhaaGNpQnBjMU4wWVhKMFZtRnlhV0YwYVc5dUlEMGdaMlYwVm1GeWFXRjBhVzl1S0hCc1lXTmxiV1Z1ZENrZ1BUMDlJSE4wWVhKME8xeHVJQ0FnSUhaaGNpQnBjMVpsY25ScFkyRnNJRDBnVzNSdmNDd2dZbTkwZEc5dFhTNXBibVJsZUU5bUtGOWlZWE5sVUd4aFkyVnRaVzUwS1NBK1BTQXdPMXh1SUNBZ0lIWmhjaUJzWlc0Z1BTQnBjMVpsY25ScFkyRnNJRDhnSjNkcFpIUm9KeUE2SUNkb1pXbG5hSFFuTzF4dUlDQWdJSFpoY2lCdmRtVnlabXh2ZHlBOUlHUmxkR1ZqZEU5MlpYSm1iRzkzS0hOMFlYUmxMQ0I3WEc0Z0lDQWdJQ0J3YkdGalpXMWxiblE2SUhCc1lXTmxiV1Z1ZEN4Y2JpQWdJQ0FnSUdKdmRXNWtZWEo1T2lCaWIzVnVaR0Z5ZVN4Y2JpQWdJQ0FnSUhKdmIzUkNiM1Z1WkdGeWVUb2djbTl2ZEVKdmRXNWtZWEo1TEZ4dUlDQWdJQ0FnWVd4MFFtOTFibVJoY25rNklHRnNkRUp2ZFc1a1lYSjVMRnh1SUNBZ0lDQWdjR0ZrWkdsdVp6b2djR0ZrWkdsdVoxeHVJQ0FnSUgwcE8xeHVJQ0FnSUhaaGNpQnRZV2x1Vm1GeWFXRjBhVzl1VTJsa1pTQTlJR2x6Vm1WeWRHbGpZV3dnUHlCcGMxTjBZWEowVm1GeWFXRjBhVzl1SUQ4Z2NtbG5hSFFnT2lCc1pXWjBJRG9nYVhOVGRHRnlkRlpoY21saGRHbHZiaUEvSUdKdmRIUnZiU0E2SUhSdmNEdGNibHh1SUNBZ0lHbG1JQ2h5WldabGNtVnVZMlZTWldOMFcyeGxibDBnUGlCd2IzQndaWEpTWldOMFcyeGxibDBwSUh0Y2JpQWdJQ0FnSUcxaGFXNVdZWEpwWVhScGIyNVRhV1JsSUQwZ1oyVjBUM0J3YjNOcGRHVlFiR0ZqWlcxbGJuUW9iV0ZwYmxaaGNtbGhkR2x2YmxOcFpHVXBPMXh1SUNBZ0lIMWNibHh1SUNBZ0lIWmhjaUJoYkhSV1lYSnBZWFJwYjI1VGFXUmxJRDBnWjJWMFQzQndiM05wZEdWUWJHRmpaVzFsYm5Rb2JXRnBibFpoY21saGRHbHZibE5wWkdVcE8xeHVJQ0FnSUhaaGNpQmphR1ZqYTNNZ1BTQmJYVHRjYmx4dUlDQWdJR2xtSUNoamFHVmphMDFoYVc1QmVHbHpLU0I3WEc0Z0lDQWdJQ0JqYUdWamEzTXVjSFZ6YUNodmRtVnlabXh2ZDF0ZlltRnpaVkJzWVdObGJXVnVkRjBnUEQwZ01DazdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2FXWWdLR05vWldOclFXeDBRWGhwY3lrZ2UxeHVJQ0FnSUNBZ1kyaGxZMnR6TG5CMWMyZ29iM1psY21ac2IzZGJiV0ZwYmxaaGNtbGhkR2x2YmxOcFpHVmRJRHc5SURBc0lHOTJaWEptYkc5M1cyRnNkRlpoY21saGRHbHZibE5wWkdWZElEdzlJREFwTzF4dUlDQWdJSDFjYmx4dUlDQWdJR2xtSUNoamFHVmphM011WlhabGNua29ablZ1WTNScGIyNGdLR05vWldOcktTQjdYRzRnSUNBZ0lDQnlaWFIxY200Z1kyaGxZMnM3WEc0Z0lDQWdmU2twSUh0Y2JpQWdJQ0FnSUdacGNuTjBSbWwwZEdsdVoxQnNZV05sYldWdWRDQTlJSEJzWVdObGJXVnVkRHRjYmlBZ0lDQWdJRzFoYTJWR1lXeHNZbUZqYTBOb1pXTnJjeUE5SUdaaGJITmxPMXh1SUNBZ0lDQWdZbkpsWVdzN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnWTJobFkydHpUV0Z3TG5ObGRDaHdiR0ZqWlcxbGJuUXNJR05vWldOcmN5azdYRzRnSUgxY2JseHVJQ0JwWmlBb2JXRnJaVVpoYkd4aVlXTnJRMmhsWTJ0ektTQjdYRzRnSUNBZ0x5OGdZREpnSUcxaGVTQmlaU0JrWlhOcGNtVmtJR2x1SUhOdmJXVWdZMkZ6WlhNZzRvQ1RJSEpsYzJWaGNtTm9JR3hoZEdWeVhHNGdJQ0FnZG1GeUlHNTFiV0psY2s5bVEyaGxZMnR6SUQwZ1pteHBjRlpoY21saGRHbHZibk1nUHlBeklEb2dNVHRjYmx4dUlDQWdJSFpoY2lCZmJHOXZjQ0E5SUdaMWJtTjBhVzl1SUY5c2IyOXdLRjlwS1NCN1hHNGdJQ0FnSUNCMllYSWdabWwwZEdsdVoxQnNZV05sYldWdWRDQTlJSEJzWVdObGJXVnVkSE11Wm1sdVpDaG1kVzVqZEdsdmJpQW9jR3hoWTJWdFpXNTBLU0I3WEc0Z0lDQWdJQ0FnSUhaaGNpQmphR1ZqYTNNZ1BTQmphR1ZqYTNOTllYQXVaMlYwS0hCc1lXTmxiV1Z1ZENrN1hHNWNiaUFnSUNBZ0lDQWdhV1lnS0dOb1pXTnJjeWtnZTF4dUlDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCamFHVmphM011YzJ4cFkyVW9NQ3dnWDJrcExtVjJaWEo1S0daMWJtTjBhVzl1SUNoamFHVmpheWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHTm9aV05yTzF4dUlDQWdJQ0FnSUNBZ0lIMHBPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0I5S1R0Y2JseHVJQ0FnSUNBZ2FXWWdLR1pwZEhScGJtZFFiR0ZqWlcxbGJuUXBJSHRjYmlBZ0lDQWdJQ0FnWm1seWMzUkdhWFIwYVc1blVHeGhZMlZ0Wlc1MElEMGdabWwwZEdsdVoxQnNZV05sYldWdWREdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlGd2lZbkpsWVd0Y0lqdGNiaUFnSUNBZ0lIMWNiaUFnSUNCOU8xeHVYRzRnSUNBZ1ptOXlJQ2gyWVhJZ1gya2dQU0J1ZFcxaVpYSlBaa05vWldOcmN6c2dYMmtnUGlBd095QmZhUzB0S1NCN1hHNGdJQ0FnSUNCMllYSWdYM0psZENBOUlGOXNiMjl3S0Y5cEtUdGNibHh1SUNBZ0lDQWdhV1lnS0Y5eVpYUWdQVDA5SUZ3aVluSmxZV3RjSWlrZ1luSmxZV3M3WEc0Z0lDQWdmVnh1SUNCOVhHNWNiaUFnYVdZZ0tITjBZWFJsTG5Cc1lXTmxiV1Z1ZENBaFBUMGdabWx5YzNSR2FYUjBhVzVuVUd4aFkyVnRaVzUwS1NCN1hHNGdJQ0FnYzNSaGRHVXViVzlrYVdacFpYSnpSR0YwWVZ0dVlXMWxYUzVmYzJ0cGNDQTlJSFJ5ZFdVN1hHNGdJQ0FnYzNSaGRHVXVjR3hoWTJWdFpXNTBJRDBnWm1seWMzUkdhWFIwYVc1blVHeGhZMlZ0Wlc1ME8xeHVJQ0FnSUhOMFlYUmxMbkpsYzJWMElEMGdkSEoxWlR0Y2JpQWdmVnh1ZlNBdkx5QmxjMnhwYm5RdFpHbHpZV0pzWlMxdVpYaDBMV3hwYm1VZ2FXMXdiM0owTDI1dkxYVnVkWE5sWkMxdGIyUjFiR1Z6WEc1Y2JseHVaWGh3YjNKMElHUmxabUYxYkhRZ2UxeHVJQ0J1WVcxbE9pQW5abXhwY0Njc1hHNGdJR1Z1WVdKc1pXUTZJSFJ5ZFdVc1hHNGdJSEJvWVhObE9pQW5iV0ZwYmljc1hHNGdJR1p1T2lCbWJHbHdMRnh1SUNCeVpYRjFhWEpsYzBsbVJYaHBjM1J6T2lCYkoyOW1abk5sZENkZExGeHVJQ0JrWVhSaE9pQjdYRzRnSUNBZ1gzTnJhWEE2SUdaaGJITmxYRzRnSUgxY2JuMDdJaXdpYVcxd2IzSjBJR2RsZEZaaGNtbGhkR2x2YmlCbWNtOXRJRndpTGk5blpYUldZWEpwWVhScGIyNHVhbk5jSWp0Y2JtbHRjRzl5ZENCN0lIWmhjbWxoZEdsdmJsQnNZV05sYldWdWRITXNJR0poYzJWUWJHRmpaVzFsYm5SekxDQndiR0ZqWlcxbGJuUnpJR0Z6SUdGc2JGQnNZV05sYldWdWRITWdmU0JtY205dElGd2lMaTR2Wlc1MWJYTXVhbk5jSWp0Y2JtbHRjRzl5ZENCa1pYUmxZM1JQZG1WeVpteHZkeUJtY205dElGd2lMaTlrWlhSbFkzUlBkbVZ5Wm14dmR5NXFjMXdpTzF4dWFXMXdiM0owSUdkbGRFSmhjMlZRYkdGalpXMWxiblFnWm5KdmJTQmNJaTR2WjJWMFFtRnpaVkJzWVdObGJXVnVkQzVxYzF3aU8xeHVaWGh3YjNKMElHUmxabUYxYkhRZ1puVnVZM1JwYjI0Z1kyOXRjSFYwWlVGMWRHOVFiR0ZqWlcxbGJuUW9jM1JoZEdVc0lHOXdkR2x2Ym5NcElIdGNiaUFnYVdZZ0tHOXdkR2x2Ym5NZ1BUMDlJSFp2YVdRZ01Da2dlMXh1SUNBZ0lHOXdkR2x2Ym5NZ1BTQjdmVHRjYmlBZ2ZWeHVYRzRnSUhaaGNpQmZiM0IwYVc5dWN5QTlJRzl3ZEdsdmJuTXNYRzRnSUNBZ0lDQndiR0ZqWlcxbGJuUWdQU0JmYjNCMGFXOXVjeTV3YkdGalpXMWxiblFzWEc0Z0lDQWdJQ0JpYjNWdVpHRnllU0E5SUY5dmNIUnBiMjV6TG1KdmRXNWtZWEo1TEZ4dUlDQWdJQ0FnY205dmRFSnZkVzVrWVhKNUlEMGdYMjl3ZEdsdmJuTXVjbTl2ZEVKdmRXNWtZWEo1TEZ4dUlDQWdJQ0FnY0dGa1pHbHVaeUE5SUY5dmNIUnBiMjV6TG5CaFpHUnBibWNzWEc0Z0lDQWdJQ0JtYkdsd1ZtRnlhV0YwYVc5dWN5QTlJRjl2Y0hScGIyNXpMbVpzYVhCV1lYSnBZWFJwYjI1ekxGeHVJQ0FnSUNBZ1gyOXdkR2x2Ym5Na1lXeHNiM2RsWkVGMWRHOVFJRDBnWDI5d2RHbHZibk11WVd4c2IzZGxaRUYxZEc5UWJHRmpaVzFsYm5SekxGeHVJQ0FnSUNBZ1lXeHNiM2RsWkVGMWRHOVFiR0ZqWlcxbGJuUnpJRDBnWDI5d2RHbHZibk1rWVd4c2IzZGxaRUYxZEc5UUlEMDlQU0IyYjJsa0lEQWdQeUJoYkd4UWJHRmpaVzFsYm5SeklEb2dYMjl3ZEdsdmJuTWtZV3hzYjNkbFpFRjFkRzlRTzF4dUlDQjJZWElnZG1GeWFXRjBhVzl1SUQwZ1oyVjBWbUZ5YVdGMGFXOXVLSEJzWVdObGJXVnVkQ2s3WEc0Z0lIWmhjaUJ3YkdGalpXMWxiblJ6SUQwZ2RtRnlhV0YwYVc5dUlEOGdabXhwY0ZaaGNtbGhkR2x2Ym5NZ1B5QjJZWEpwWVhScGIyNVFiR0ZqWlcxbGJuUnpJRG9nZG1GeWFXRjBhVzl1VUd4aFkyVnRaVzUwY3k1bWFXeDBaWElvWm5WdVkzUnBiMjRnS0hCc1lXTmxiV1Z1ZENrZ2UxeHVJQ0FnSUhKbGRIVnliaUJuWlhSV1lYSnBZWFJwYjI0b2NHeGhZMlZ0Wlc1MEtTQTlQVDBnZG1GeWFXRjBhVzl1TzF4dUlDQjlLU0E2SUdKaGMyVlFiR0ZqWlcxbGJuUnpPMXh1SUNCMllYSWdZV3hzYjNkbFpGQnNZV05sYldWdWRITWdQU0J3YkdGalpXMWxiblJ6TG1acGJIUmxjaWhtZFc1amRHbHZiaUFvY0d4aFkyVnRaVzUwS1NCN1hHNGdJQ0FnY21WMGRYSnVJR0ZzYkc5M1pXUkJkWFJ2VUd4aFkyVnRaVzUwY3k1cGJtUmxlRTltS0hCc1lXTmxiV1Z1ZENrZ1BqMGdNRHRjYmlBZ2ZTazdYRzVjYmlBZ2FXWWdLR0ZzYkc5M1pXUlFiR0ZqWlcxbGJuUnpMbXhsYm1kMGFDQTlQVDBnTUNrZ2UxeHVJQ0FnSUdGc2JHOTNaV1JRYkdGalpXMWxiblJ6SUQwZ2NHeGhZMlZ0Wlc1MGN6dGNibHh1SUNBZ0lHbG1JQ2h3Y205alpYTnpMbVZ1ZGk1T1QwUkZYMFZPVmlBaFBUMGdYQ0p3Y205a2RXTjBhVzl1WENJcElIdGNiaUFnSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvV3lkUWIzQndaWEk2SUZSb1pTQmdZV3hzYjNkbFpFRjFkRzlRYkdGalpXMWxiblJ6WUNCdmNIUnBiMjRnWkdsa0lHNXZkQ0JoYkd4dmR5QmhibmtuTENBbmNHeGhZMlZ0Wlc1MGN5NGdSVzV6ZFhKbElIUm9aU0JnY0d4aFkyVnRaVzUwWUNCdmNIUnBiMjRnYldGMFkyaGxjeUIwYUdVZ2RtRnlhV0YwYVc5dUp5d2dKMjltSUhSb1pTQmhiR3h2ZDJWa0lIQnNZV05sYldWdWRITXVKeXdnSjBadmNpQmxlR0Z0Y0d4bExDQmNJbUYxZEc5Y0lpQmpZVzV1YjNRZ1ltVWdkWE5sWkNCMGJ5QmhiR3h2ZHlCY0ltSnZkSFJ2YlMxemRHRnlkRndpTGljc0lDZFZjMlVnWENKaGRYUnZMWE4wWVhKMFhDSWdhVzV6ZEdWaFpDNG5YUzVxYjJsdUtDY2dKeWtwTzF4dUlDQWdJSDFjYmlBZ2ZTQXZMeUFrUm14dmQwWnBlRTFsVzJsdVkyOXRjR0YwYVdKc1pTMTBlWEJsWFRvZ1JteHZkeUJ6WldWdGN5QjBieUJvWVhabElIQnliMkpzWlcxeklIZHBkR2dnZEhkdklHRnljbUY1SUhWdWFXOXVjeTR1TGx4dVhHNWNiaUFnZG1GeUlHOTJaWEptYkc5M2N5QTlJR0ZzYkc5M1pXUlFiR0ZqWlcxbGJuUnpMbkpsWkhWalpTaG1kVzVqZEdsdmJpQW9ZV05qTENCd2JHRmpaVzFsYm5RcElIdGNiaUFnSUNCaFkyTmJjR3hoWTJWdFpXNTBYU0E5SUdSbGRHVmpkRTkyWlhKbWJHOTNLSE4wWVhSbExDQjdYRzRnSUNBZ0lDQndiR0ZqWlcxbGJuUTZJSEJzWVdObGJXVnVkQ3hjYmlBZ0lDQWdJR0p2ZFc1a1lYSjVPaUJpYjNWdVpHRnllU3hjYmlBZ0lDQWdJSEp2YjNSQ2IzVnVaR0Z5ZVRvZ2NtOXZkRUp2ZFc1a1lYSjVMRnh1SUNBZ0lDQWdjR0ZrWkdsdVp6b2djR0ZrWkdsdVoxeHVJQ0FnSUgwcFcyZGxkRUpoYzJWUWJHRmpaVzFsYm5Rb2NHeGhZMlZ0Wlc1MEtWMDdYRzRnSUNBZ2NtVjBkWEp1SUdGall6dGNiaUFnZlN3Z2UzMHBPMXh1SUNCeVpYUjFjbTRnVDJKcVpXTjBMbXRsZVhNb2IzWmxjbVpzYjNkektTNXpiM0owS0daMWJtTjBhVzl1SUNoaExDQmlLU0I3WEc0Z0lDQWdjbVYwZFhKdUlHOTJaWEptYkc5M2MxdGhYU0F0SUc5MlpYSm1iRzkzYzF0aVhUdGNiaUFnZlNrN1hHNTlJaXdpYVcxd2IzSjBJSHNnZEc5d0xDQmliM1IwYjIwc0lHeGxablFzSUhKcFoyaDBJSDBnWm5KdmJTQmNJaTR1TDJWdWRXMXpMbXB6WENJN1hHNXBiWEJ2Y25RZ1pHVjBaV04wVDNabGNtWnNiM2NnWm5KdmJTQmNJaTR1TDNWMGFXeHpMMlJsZEdWamRFOTJaWEptYkc5M0xtcHpYQ0k3WEc1Y2JtWjFibU4wYVc5dUlHZGxkRk5wWkdWUFptWnpaWFJ6S0c5MlpYSm1iRzkzTENCeVpXTjBMQ0J3Y21WMlpXNTBaV1JQWm1aelpYUnpLU0I3WEc0Z0lHbG1JQ2h3Y21WMlpXNTBaV1JQWm1aelpYUnpJRDA5UFNCMmIybGtJREFwSUh0Y2JpQWdJQ0J3Y21WMlpXNTBaV1JQWm1aelpYUnpJRDBnZTF4dUlDQWdJQ0FnZURvZ01DeGNiaUFnSUNBZ0lIazZJREJjYmlBZ0lDQjlPMXh1SUNCOVhHNWNiaUFnY21WMGRYSnVJSHRjYmlBZ0lDQjBiM0E2SUc5MlpYSm1iRzkzTG5SdmNDQXRJSEpsWTNRdWFHVnBaMmgwSUMwZ2NISmxkbVZ1ZEdWa1QyWm1jMlYwY3k1NUxGeHVJQ0FnSUhKcFoyaDBPaUJ2ZG1WeVpteHZkeTV5YVdkb2RDQXRJSEpsWTNRdWQybGtkR2dnS3lCd2NtVjJaVzUwWldSUFptWnpaWFJ6TG5nc1hHNGdJQ0FnWW05MGRHOXRPaUJ2ZG1WeVpteHZkeTVpYjNSMGIyMGdMU0J5WldOMExtaGxhV2RvZENBcklIQnlaWFpsYm5SbFpFOW1abk5sZEhNdWVTeGNiaUFnSUNCc1pXWjBPaUJ2ZG1WeVpteHZkeTVzWldaMElDMGdjbVZqZEM1M2FXUjBhQ0F0SUhCeVpYWmxiblJsWkU5bVpuTmxkSE11ZUZ4dUlDQjlPMXh1ZlZ4dVhHNW1kVzVqZEdsdmJpQnBjMEZ1ZVZOcFpHVkdkV3hzZVVOc2FYQndaV1FvYjNabGNtWnNiM2NwSUh0Y2JpQWdjbVYwZFhKdUlGdDBiM0FzSUhKcFoyaDBMQ0JpYjNSMGIyMHNJR3hsWm5SZExuTnZiV1VvWm5WdVkzUnBiMjRnS0hOcFpHVXBJSHRjYmlBZ0lDQnlaWFIxY200Z2IzWmxjbVpzYjNkYmMybGtaVjBnUGowZ01EdGNiaUFnZlNrN1hHNTlYRzVjYm1aMWJtTjBhVzl1SUdocFpHVW9YM0psWmlrZ2UxeHVJQ0IyWVhJZ2MzUmhkR1VnUFNCZmNtVm1Mbk4wWVhSbExGeHVJQ0FnSUNBZ2JtRnRaU0E5SUY5eVpXWXVibUZ0WlR0Y2JpQWdkbUZ5SUhKbFptVnlaVzVqWlZKbFkzUWdQU0J6ZEdGMFpTNXlaV04wY3k1eVpXWmxjbVZ1WTJVN1hHNGdJSFpoY2lCd2IzQndaWEpTWldOMElEMGdjM1JoZEdVdWNtVmpkSE11Y0c5d2NHVnlPMXh1SUNCMllYSWdjSEpsZG1WdWRHVmtUMlptYzJWMGN5QTlJSE4wWVhSbExtMXZaR2xtYVdWeWMwUmhkR0V1Y0hKbGRtVnVkRTkyWlhKbWJHOTNPMXh1SUNCMllYSWdjbVZtWlhKbGJtTmxUM1psY21ac2IzY2dQU0JrWlhSbFkzUlBkbVZ5Wm14dmR5aHpkR0YwWlN3Z2UxeHVJQ0FnSUdWc1pXMWxiblJEYjI1MFpYaDBPaUFuY21WbVpYSmxibU5sSjF4dUlDQjlLVHRjYmlBZ2RtRnlJSEJ2Y0hCbGNrRnNkRTkyWlhKbWJHOTNJRDBnWkdWMFpXTjBUM1psY21ac2IzY29jM1JoZEdVc0lIdGNiaUFnSUNCaGJIUkNiM1Z1WkdGeWVUb2dkSEoxWlZ4dUlDQjlLVHRjYmlBZ2RtRnlJSEpsWm1WeVpXNWpaVU5zYVhCd2FXNW5UMlptYzJWMGN5QTlJR2RsZEZOcFpHVlBabVp6WlhSektISmxabVZ5Wlc1alpVOTJaWEptYkc5M0xDQnlaV1psY21WdVkyVlNaV04wS1R0Y2JpQWdkbUZ5SUhCdmNIQmxja1Z6WTJGd1pVOW1abk5sZEhNZ1BTQm5aWFJUYVdSbFQyWm1jMlYwY3lod2IzQndaWEpCYkhSUGRtVnlabXh2ZHl3Z2NHOXdjR1Z5VW1WamRDd2djSEpsZG1WdWRHVmtUMlptYzJWMGN5azdYRzRnSUhaaGNpQnBjMUpsWm1WeVpXNWpaVWhwWkdSbGJpQTlJR2x6UVc1NVUybGtaVVoxYkd4NVEyeHBjSEJsWkNoeVpXWmxjbVZ1WTJWRGJHbHdjR2x1WjA5bVpuTmxkSE1wTzF4dUlDQjJZWElnYUdGelVHOXdjR1Z5UlhOallYQmxaQ0E5SUdselFXNTVVMmxrWlVaMWJHeDVRMnhwY0hCbFpDaHdiM0J3WlhKRmMyTmhjR1ZQWm1aelpYUnpLVHRjYmlBZ2MzUmhkR1V1Ylc5a2FXWnBaWEp6UkdGMFlWdHVZVzFsWFNBOUlIdGNiaUFnSUNCeVpXWmxjbVZ1WTJWRGJHbHdjR2x1WjA5bVpuTmxkSE02SUhKbFptVnlaVzVqWlVOc2FYQndhVzVuVDJabWMyVjBjeXhjYmlBZ0lDQndiM0J3WlhKRmMyTmhjR1ZQWm1aelpYUnpPaUJ3YjNCd1pYSkZjMk5oY0dWUFptWnpaWFJ6TEZ4dUlDQWdJR2x6VW1WbVpYSmxibU5sU0dsa1pHVnVPaUJwYzFKbFptVnlaVzVqWlVocFpHUmxiaXhjYmlBZ0lDQm9ZWE5RYjNCd1pYSkZjMk5oY0dWa09pQm9ZWE5RYjNCd1pYSkZjMk5oY0dWa1hHNGdJSDA3WEc0Z0lITjBZWFJsTG1GMGRISnBZblYwWlhNdWNHOXdjR1Z5SUQwZ1QySnFaV04wTG1GemMybG5iaWg3ZlN3Z2MzUmhkR1V1WVhSMGNtbGlkWFJsY3k1d2IzQndaWElzSUh0Y2JpQWdJQ0FuWkdGMFlTMXdiM0J3WlhJdGNtVm1aWEpsYm1ObExXaHBaR1JsYmljNklHbHpVbVZtWlhKbGJtTmxTR2xrWkdWdUxGeHVJQ0FnSUNka1lYUmhMWEJ2Y0hCbGNpMWxjMk5oY0dWa0p6b2dhR0Z6VUc5d2NHVnlSWE5qWVhCbFpGeHVJQ0I5S1R0Y2JuMGdMeThnWlhOc2FXNTBMV1JwYzJGaWJHVXRibVY0ZEMxc2FXNWxJR2x0Y0c5eWRDOXVieTExYm5WelpXUXRiVzlrZFd4bGMxeHVYRzVjYm1WNGNHOXlkQ0JrWldaaGRXeDBJSHRjYmlBZ2JtRnRaVG9nSjJocFpHVW5MRnh1SUNCbGJtRmliR1ZrT2lCMGNuVmxMRnh1SUNCd2FHRnpaVG9nSjIxaGFXNG5MRnh1SUNCeVpYRjFhWEpsYzBsbVJYaHBjM1J6T2lCYkozQnlaWFpsYm5SUGRtVnlabXh2ZHlkZExGeHVJQ0JtYmpvZ2FHbGtaVnh1ZlRzaUxDSnBiWEJ2Y25RZ1oyVjBRbUZ6WlZCc1lXTmxiV1Z1ZENCbWNtOXRJRndpTGk0dmRYUnBiSE12WjJWMFFtRnpaVkJzWVdObGJXVnVkQzVxYzF3aU8xeHVhVzF3YjNKMElIc2dkRzl3TENCc1pXWjBMQ0J5YVdkb2RDd2djR3hoWTJWdFpXNTBjeUI5SUdaeWIyMGdYQ0l1TGk5bGJuVnRjeTVxYzF3aU95QXZMeUJsYzJ4cGJuUXRaR2x6WVdKc1pTMXVaWGgwTFd4cGJtVWdhVzF3YjNKMEwyNXZMWFZ1ZFhObFpDMXRiMlIxYkdWelhHNWNibVY0Y0c5eWRDQm1kVzVqZEdsdmJpQmthWE4wWVc1alpVRnVaRk5yYVdSa2FXNW5WRzlZV1Nod2JHRmpaVzFsYm5Rc0lISmxZM1J6TENCdlptWnpaWFFwSUh0Y2JpQWdkbUZ5SUdKaGMyVlFiR0ZqWlcxbGJuUWdQU0JuWlhSQ1lYTmxVR3hoWTJWdFpXNTBLSEJzWVdObGJXVnVkQ2s3WEc0Z0lIWmhjaUJwYm5abGNuUkVhWE4wWVc1alpTQTlJRnRzWldaMExDQjBiM0JkTG1sdVpHVjRUMllvWW1GelpWQnNZV05sYldWdWRDa2dQajBnTUNBL0lDMHhJRG9nTVR0Y2JseHVJQ0IyWVhJZ1gzSmxaaUE5SUhSNWNHVnZaaUJ2Wm1aelpYUWdQVDA5SUNkbWRXNWpkR2x2YmljZ1B5QnZabVp6WlhRb1QySnFaV04wTG1GemMybG5iaWg3ZlN3Z2NtVmpkSE1zSUh0Y2JpQWdJQ0J3YkdGalpXMWxiblE2SUhCc1lXTmxiV1Z1ZEZ4dUlDQjlLU2tnT2lCdlptWnpaWFFzWEc0Z0lDQWdJQ0J6YTJsa1pHbHVaeUE5SUY5eVpXWmJNRjBzWEc0Z0lDQWdJQ0JrYVhOMFlXNWpaU0E5SUY5eVpXWmJNVjA3WEc1Y2JpQWdjMnRwWkdScGJtY2dQU0J6YTJsa1pHbHVaeUI4ZkNBd08xeHVJQ0JrYVhOMFlXNWpaU0E5SUNoa2FYTjBZVzVqWlNCOGZDQXdLU0FxSUdsdWRtVnlkRVJwYzNSaGJtTmxPMXh1SUNCeVpYUjFjbTRnVzJ4bFpuUXNJSEpwWjJoMFhTNXBibVJsZUU5bUtHSmhjMlZRYkdGalpXMWxiblFwSUQ0OUlEQWdQeUI3WEc0Z0lDQWdlRG9nWkdsemRHRnVZMlVzWEc0Z0lDQWdlVG9nYzJ0cFpHUnBibWRjYmlBZ2ZTQTZJSHRjYmlBZ0lDQjRPaUJ6YTJsa1pHbHVaeXhjYmlBZ0lDQjVPaUJrYVhOMFlXNWpaVnh1SUNCOU8xeHVmVnh1WEc1bWRXNWpkR2x2YmlCdlptWnpaWFFvWDNKbFpqSXBJSHRjYmlBZ2RtRnlJSE4wWVhSbElEMGdYM0psWmpJdWMzUmhkR1VzWEc0Z0lDQWdJQ0J2Y0hScGIyNXpJRDBnWDNKbFpqSXViM0IwYVc5dWN5eGNiaUFnSUNBZ0lHNWhiV1VnUFNCZmNtVm1NaTV1WVcxbE8xeHVJQ0IyWVhJZ1gyOXdkR2x2Ym5Na2IyWm1jMlYwSUQwZ2IzQjBhVzl1Y3k1dlptWnpaWFFzWEc0Z0lDQWdJQ0J2Wm1aelpYUWdQU0JmYjNCMGFXOXVjeVJ2Wm1aelpYUWdQVDA5SUhadmFXUWdNQ0EvSUZzd0xDQXdYU0E2SUY5dmNIUnBiMjV6Skc5bVpuTmxkRHRjYmlBZ2RtRnlJR1JoZEdFZ1BTQndiR0ZqWlcxbGJuUnpMbkpsWkhWalpTaG1kVzVqZEdsdmJpQW9ZV05qTENCd2JHRmpaVzFsYm5RcElIdGNiaUFnSUNCaFkyTmJjR3hoWTJWdFpXNTBYU0E5SUdScGMzUmhibU5sUVc1a1UydHBaR1JwYm1kVWIxaFpLSEJzWVdObGJXVnVkQ3dnYzNSaGRHVXVjbVZqZEhNc0lHOW1abk5sZENrN1hHNGdJQ0FnY21WMGRYSnVJR0ZqWXp0Y2JpQWdmU3dnZTMwcE8xeHVJQ0IyWVhJZ1gyUmhkR0VrYzNSaGRHVWtjR3hoWTJWdFpXNTBJRDBnWkdGMFlWdHpkR0YwWlM1d2JHRmpaVzFsYm5SZExGeHVJQ0FnSUNBZ2VDQTlJRjlrWVhSaEpITjBZWFJsSkhCc1lXTmxiV1Z1ZEM1NExGeHVJQ0FnSUNBZ2VTQTlJRjlrWVhSaEpITjBZWFJsSkhCc1lXTmxiV1Z1ZEM1NU8xeHVYRzRnSUdsbUlDaHpkR0YwWlM1dGIyUnBabWxsY25ORVlYUmhMbkJ2Y0hCbGNrOW1abk5sZEhNZ0lUMGdiblZzYkNrZ2UxeHVJQ0FnSUhOMFlYUmxMbTF2WkdsbWFXVnljMFJoZEdFdWNHOXdjR1Z5VDJabWMyVjBjeTU0SUNzOUlIZzdYRzRnSUNBZ2MzUmhkR1V1Ylc5a2FXWnBaWEp6UkdGMFlTNXdiM0J3WlhKUFptWnpaWFJ6TG5rZ0t6MGdlVHRjYmlBZ2ZWeHVYRzRnSUhOMFlYUmxMbTF2WkdsbWFXVnljMFJoZEdGYmJtRnRaVjBnUFNCa1lYUmhPMXh1ZlNBdkx5QmxjMnhwYm5RdFpHbHpZV0pzWlMxdVpYaDBMV3hwYm1VZ2FXMXdiM0owTDI1dkxYVnVkWE5sWkMxdGIyUjFiR1Z6WEc1Y2JseHVaWGh3YjNKMElHUmxabUYxYkhRZ2UxeHVJQ0J1WVcxbE9pQW5iMlptYzJWMEp5eGNiaUFnWlc1aFlteGxaRG9nZEhKMVpTeGNiaUFnY0doaGMyVTZJQ2R0WVdsdUp5eGNiaUFnY21WeGRXbHlaWE02SUZzbmNHOXdjR1Z5VDJabWMyVjBjeWRkTEZ4dUlDQm1iam9nYjJabWMyVjBYRzU5T3lJc0ltbHRjRzl5ZENCamIyMXdkWFJsVDJabWMyVjBjeUJtY205dElGd2lMaTR2ZFhScGJITXZZMjl0Y0hWMFpVOW1abk5sZEhNdWFuTmNJanRjYmx4dVpuVnVZM1JwYjI0Z2NHOXdjR1Z5VDJabWMyVjBjeWhmY21WbUtTQjdYRzRnSUhaaGNpQnpkR0YwWlNBOUlGOXlaV1l1YzNSaGRHVXNYRzRnSUNBZ0lDQnVZVzFsSUQwZ1gzSmxaaTV1WVcxbE8xeHVJQ0F2THlCUFptWnpaWFJ6SUdGeVpTQjBhR1VnWVdOMGRXRnNJSEJ2YzJsMGFXOXVJSFJvWlNCd2IzQndaWElnYm1WbFpITWdkRzhnYUdGMlpTQjBieUJpWlZ4dUlDQXZMeUJ3Y205d1pYSnNlU0J3YjNOcGRHbHZibVZrSUc1bFlYSWdhWFJ6SUhKbFptVnlaVzVqWlNCbGJHVnRaVzUwWEc0Z0lDOHZJRlJvYVhNZ2FYTWdkR2hsSUcxdmMzUWdZbUZ6YVdNZ2NHeGhZMlZ0Wlc1MExDQmhibVFnZDJsc2JDQmlaU0JoWkdwMWMzUmxaQ0JpZVZ4dUlDQXZMeUIwYUdVZ2JXOWthV1pwWlhKeklHbHVJSFJvWlNCdVpYaDBJSE4wWlhCY2JpQWdjM1JoZEdVdWJXOWthV1pwWlhKelJHRjBZVnR1WVcxbFhTQTlJR052YlhCMWRHVlBabVp6WlhSektIdGNiaUFnSUNCeVpXWmxjbVZ1WTJVNklITjBZWFJsTG5KbFkzUnpMbkpsWm1WeVpXNWpaU3hjYmlBZ0lDQmxiR1Z0Wlc1ME9pQnpkR0YwWlM1eVpXTjBjeTV3YjNCd1pYSXNYRzRnSUNBZ2MzUnlZWFJsWjNrNklDZGhZbk52YkhWMFpTY3NYRzRnSUNBZ2NHeGhZMlZ0Wlc1ME9pQnpkR0YwWlM1d2JHRmpaVzFsYm5SY2JpQWdmU2s3WEc1OUlDOHZJR1Z6YkdsdWRDMWthWE5oWW14bExXNWxlSFF0YkdsdVpTQnBiWEJ2Y25RdmJtOHRkVzUxYzJWa0xXMXZaSFZzWlhOY2JseHVYRzVsZUhCdmNuUWdaR1ZtWVhWc2RDQjdYRzRnSUc1aGJXVTZJQ2R3YjNCd1pYSlBabVp6WlhSekp5eGNiaUFnWlc1aFlteGxaRG9nZEhKMVpTeGNiaUFnY0doaGMyVTZJQ2R5WldGa0p5eGNiaUFnWm00NklIQnZjSEJsY2s5bVpuTmxkSE1zWEc0Z0lHUmhkR0U2SUh0OVhHNTlPeUlzSW1sdGNHOXlkQ0I3SUhSdmNDd2diR1ZtZEN3Z2NtbG5hSFFzSUdKdmRIUnZiU3dnYzNSaGNuUWdmU0JtY205dElGd2lMaTR2Wlc1MWJYTXVhbk5jSWp0Y2JtbHRjRzl5ZENCblpYUkNZWE5sVUd4aFkyVnRaVzUwSUdaeWIyMGdYQ0l1TGk5MWRHbHNjeTluWlhSQ1lYTmxVR3hoWTJWdFpXNTBMbXB6WENJN1hHNXBiWEJ2Y25RZ1oyVjBUV0ZwYmtGNGFYTkdjbTl0VUd4aFkyVnRaVzUwSUdaeWIyMGdYQ0l1TGk5MWRHbHNjeTluWlhSTllXbHVRWGhwYzBaeWIyMVFiR0ZqWlcxbGJuUXVhbk5jSWp0Y2JtbHRjRzl5ZENCblpYUkJiSFJCZUdseklHWnliMjBnWENJdUxpOTFkR2xzY3k5blpYUkJiSFJCZUdsekxtcHpYQ0k3WEc1cGJYQnZjblFnZXlCM2FYUm9hVzRzSUhkcGRHaHBiazFoZUVOc1lXMXdJSDBnWm5KdmJTQmNJaTR1TDNWMGFXeHpMM2RwZEdocGJpNXFjMXdpTzF4dWFXMXdiM0owSUdkbGRFeGhlVzkxZEZKbFkzUWdabkp2YlNCY0lpNHVMMlJ2YlMxMWRHbHNjeTluWlhSTVlYbHZkWFJTWldOMExtcHpYQ0k3WEc1cGJYQnZjblFnWjJWMFQyWm1jMlYwVUdGeVpXNTBJR1p5YjIwZ1hDSXVMaTlrYjIwdGRYUnBiSE12WjJWMFQyWm1jMlYwVUdGeVpXNTBMbXB6WENJN1hHNXBiWEJ2Y25RZ1pHVjBaV04wVDNabGNtWnNiM2NnWm5KdmJTQmNJaTR1TDNWMGFXeHpMMlJsZEdWamRFOTJaWEptYkc5M0xtcHpYQ0k3WEc1cGJYQnZjblFnWjJWMFZtRnlhV0YwYVc5dUlHWnliMjBnWENJdUxpOTFkR2xzY3k5blpYUldZWEpwWVhScGIyNHVhbk5jSWp0Y2JtbHRjRzl5ZENCblpYUkdjbVZ6YUZOcFpHVlBZbXBsWTNRZ1puSnZiU0JjSWk0dUwzVjBhV3h6TDJkbGRFWnlaWE5vVTJsa1pVOWlhbVZqZEM1cWMxd2lPMXh1YVcxd2IzSjBJSHNnYldsdUlHRnpJRzFoZEdoTmFXNHNJRzFoZUNCaGN5QnRZWFJvVFdGNElIMGdabkp2YlNCY0lpNHVMM1YwYVd4ekwyMWhkR2d1YW5OY0lqdGNibHh1Wm5WdVkzUnBiMjRnY0hKbGRtVnVkRTkyWlhKbWJHOTNLRjl5WldZcElIdGNiaUFnZG1GeUlITjBZWFJsSUQwZ1gzSmxaaTV6ZEdGMFpTeGNiaUFnSUNBZ0lHOXdkR2x2Ym5NZ1BTQmZjbVZtTG05d2RHbHZibk1zWEc0Z0lDQWdJQ0J1WVcxbElEMGdYM0psWmk1dVlXMWxPMXh1SUNCMllYSWdYMjl3ZEdsdmJuTWtiV0ZwYmtGNGFYTWdQU0J2Y0hScGIyNXpMbTFoYVc1QmVHbHpMRnh1SUNBZ0lDQWdZMmhsWTJ0TllXbHVRWGhwY3lBOUlGOXZjSFJwYjI1ekpHMWhhVzVCZUdseklEMDlQU0IyYjJsa0lEQWdQeUIwY25WbElEb2dYMjl3ZEdsdmJuTWtiV0ZwYmtGNGFYTXNYRzRnSUNBZ0lDQmZiM0IwYVc5dWN5UmhiSFJCZUdseklEMGdiM0IwYVc5dWN5NWhiSFJCZUdsekxGeHVJQ0FnSUNBZ1kyaGxZMnRCYkhSQmVHbHpJRDBnWDI5d2RHbHZibk1rWVd4MFFYaHBjeUE5UFQwZ2RtOXBaQ0F3SUQ4Z1ptRnNjMlVnT2lCZmIzQjBhVzl1Y3lSaGJIUkJlR2x6TEZ4dUlDQWdJQ0FnWW05MWJtUmhjbmtnUFNCdmNIUnBiMjV6TG1KdmRXNWtZWEo1TEZ4dUlDQWdJQ0FnY205dmRFSnZkVzVrWVhKNUlEMGdiM0IwYVc5dWN5NXliMjkwUW05MWJtUmhjbmtzWEc0Z0lDQWdJQ0JoYkhSQ2IzVnVaR0Z5ZVNBOUlHOXdkR2x2Ym5NdVlXeDBRbTkxYm1SaGNua3NYRzRnSUNBZ0lDQndZV1JrYVc1bklEMGdiM0IwYVc5dWN5NXdZV1JrYVc1bkxGeHVJQ0FnSUNBZ1gyOXdkR2x2Ym5Na2RHVjBhR1Z5SUQwZ2IzQjBhVzl1Y3k1MFpYUm9aWElzWEc0Z0lDQWdJQ0IwWlhSb1pYSWdQU0JmYjNCMGFXOXVjeVIwWlhSb1pYSWdQVDA5SUhadmFXUWdNQ0EvSUhSeWRXVWdPaUJmYjNCMGFXOXVjeVIwWlhSb1pYSXNYRzRnSUNBZ0lDQmZiM0IwYVc5dWN5UjBaWFJvWlhKUFptWnpaWFFnUFNCdmNIUnBiMjV6TG5SbGRHaGxjazltWm5ObGRDeGNiaUFnSUNBZ0lIUmxkR2hsY2s5bVpuTmxkQ0E5SUY5dmNIUnBiMjV6SkhSbGRHaGxjazltWm5ObGRDQTlQVDBnZG05cFpDQXdJRDhnTUNBNklGOXZjSFJwYjI1ekpIUmxkR2hsY2s5bVpuTmxkRHRjYmlBZ2RtRnlJRzkyWlhKbWJHOTNJRDBnWkdWMFpXTjBUM1psY21ac2IzY29jM1JoZEdVc0lIdGNiaUFnSUNCaWIzVnVaR0Z5ZVRvZ1ltOTFibVJoY25rc1hHNGdJQ0FnY205dmRFSnZkVzVrWVhKNU9pQnliMjkwUW05MWJtUmhjbmtzWEc0Z0lDQWdjR0ZrWkdsdVp6b2djR0ZrWkdsdVp5eGNiaUFnSUNCaGJIUkNiM1Z1WkdGeWVUb2dZV3gwUW05MWJtUmhjbmxjYmlBZ2ZTazdYRzRnSUhaaGNpQmlZWE5sVUd4aFkyVnRaVzUwSUQwZ1oyVjBRbUZ6WlZCc1lXTmxiV1Z1ZENoemRHRjBaUzV3YkdGalpXMWxiblFwTzF4dUlDQjJZWElnZG1GeWFXRjBhVzl1SUQwZ1oyVjBWbUZ5YVdGMGFXOXVLSE4wWVhSbExuQnNZV05sYldWdWRDazdYRzRnSUhaaGNpQnBjMEpoYzJWUWJHRmpaVzFsYm5RZ1BTQWhkbUZ5YVdGMGFXOXVPMXh1SUNCMllYSWdiV0ZwYmtGNGFYTWdQU0JuWlhSTllXbHVRWGhwYzBaeWIyMVFiR0ZqWlcxbGJuUW9ZbUZ6WlZCc1lXTmxiV1Z1ZENrN1hHNGdJSFpoY2lCaGJIUkJlR2x6SUQwZ1oyVjBRV3gwUVhocGN5aHRZV2x1UVhocGN5azdYRzRnSUhaaGNpQndiM0J3WlhKUFptWnpaWFJ6SUQwZ2MzUmhkR1V1Ylc5a2FXWnBaWEp6UkdGMFlTNXdiM0J3WlhKUFptWnpaWFJ6TzF4dUlDQjJZWElnY21WbVpYSmxibU5sVW1WamRDQTlJSE4wWVhSbExuSmxZM1J6TG5KbFptVnlaVzVqWlR0Y2JpQWdkbUZ5SUhCdmNIQmxjbEpsWTNRZ1BTQnpkR0YwWlM1eVpXTjBjeTV3YjNCd1pYSTdYRzRnSUhaaGNpQjBaWFJvWlhKUFptWnpaWFJXWVd4MVpTQTlJSFI1Y0dWdlppQjBaWFJvWlhKUFptWnpaWFFnUFQwOUlDZG1kVzVqZEdsdmJpY2dQeUIwWlhSb1pYSlBabVp6WlhRb1QySnFaV04wTG1GemMybG5iaWg3ZlN3Z2MzUmhkR1V1Y21WamRITXNJSHRjYmlBZ0lDQndiR0ZqWlcxbGJuUTZJSE4wWVhSbExuQnNZV05sYldWdWRGeHVJQ0I5S1NrZ09pQjBaWFJvWlhKUFptWnpaWFE3WEc0Z0lIWmhjaUJ1YjNKdFlXeHBlbVZrVkdWMGFHVnlUMlptYzJWMFZtRnNkV1VnUFNCMGVYQmxiMllnZEdWMGFHVnlUMlptYzJWMFZtRnNkV1VnUFQwOUlDZHVkVzFpWlhJbklEOGdlMXh1SUNBZ0lHMWhhVzVCZUdsek9pQjBaWFJvWlhKUFptWnpaWFJXWVd4MVpTeGNiaUFnSUNCaGJIUkJlR2x6T2lCMFpYUm9aWEpQWm1aelpYUldZV3gxWlZ4dUlDQjlJRG9nVDJKcVpXTjBMbUZ6YzJsbmJpaDdYRzRnSUNBZ2JXRnBia0Y0YVhNNklEQXNYRzRnSUNBZ1lXeDBRWGhwY3pvZ01GeHVJQ0I5TENCMFpYUm9aWEpQWm1aelpYUldZV3gxWlNrN1hHNGdJSFpoY2lCdlptWnpaWFJOYjJScFptbGxjbE4wWVhSbElEMGdjM1JoZEdVdWJXOWthV1pwWlhKelJHRjBZUzV2Wm1aelpYUWdQeUJ6ZEdGMFpTNXRiMlJwWm1sbGNuTkVZWFJoTG05bVpuTmxkRnR6ZEdGMFpTNXdiR0ZqWlcxbGJuUmRJRG9nYm5Wc2JEdGNiaUFnZG1GeUlHUmhkR0VnUFNCN1hHNGdJQ0FnZURvZ01DeGNiaUFnSUNCNU9pQXdYRzRnSUgwN1hHNWNiaUFnYVdZZ0tDRndiM0J3WlhKUFptWnpaWFJ6S1NCN1hHNGdJQ0FnY21WMGRYSnVPMXh1SUNCOVhHNWNiaUFnYVdZZ0tHTm9aV05yVFdGcGJrRjRhWE1wSUh0Y2JpQWdJQ0IyWVhJZ1gyOW1abk5sZEUxdlpHbG1hV1Z5VTNSaGRHVWtPMXh1WEc0Z0lDQWdkbUZ5SUcxaGFXNVRhV1JsSUQwZ2JXRnBia0Y0YVhNZ1BUMDlJQ2Q1SnlBL0lIUnZjQ0E2SUd4bFpuUTdYRzRnSUNBZ2RtRnlJR0ZzZEZOcFpHVWdQU0J0WVdsdVFYaHBjeUE5UFQwZ0oza25JRDhnWW05MGRHOXRJRG9nY21sbmFIUTdYRzRnSUNBZ2RtRnlJR3hsYmlBOUlHMWhhVzVCZUdseklEMDlQU0FuZVNjZ1B5QW5hR1ZwWjJoMEp5QTZJQ2QzYVdSMGFDYzdYRzRnSUNBZ2RtRnlJRzltWm5ObGRDQTlJSEJ2Y0hCbGNrOW1abk5sZEhOYmJXRnBia0Y0YVhOZE8xeHVJQ0FnSUhaaGNpQnRhVzRnUFNCdlptWnpaWFFnS3lCdmRtVnlabXh2ZDF0dFlXbHVVMmxrWlYwN1hHNGdJQ0FnZG1GeUlHMWhlQ0E5SUc5bVpuTmxkQ0F0SUc5MlpYSm1iRzkzVzJGc2RGTnBaR1ZkTzF4dUlDQWdJSFpoY2lCaFpHUnBkR2wyWlNBOUlIUmxkR2hsY2lBL0lDMXdiM0J3WlhKU1pXTjBXMnhsYmwwZ0x5QXlJRG9nTUR0Y2JpQWdJQ0IyWVhJZ2JXbHVUR1Z1SUQwZ2RtRnlhV0YwYVc5dUlEMDlQU0J6ZEdGeWRDQS9JSEpsWm1WeVpXNWpaVkpsWTNSYmJHVnVYU0E2SUhCdmNIQmxjbEpsWTNSYmJHVnVYVHRjYmlBZ0lDQjJZWElnYldGNFRHVnVJRDBnZG1GeWFXRjBhVzl1SUQwOVBTQnpkR0Z5ZENBL0lDMXdiM0J3WlhKU1pXTjBXMnhsYmwwZ09pQXRjbVZtWlhKbGJtTmxVbVZqZEZ0c1pXNWRPeUF2THlCWFpTQnVaV1ZrSUhSdklHbHVZMngxWkdVZ2RHaGxJR0Z5Y205M0lHbHVJSFJvWlNCallXeGpkV3hoZEdsdmJpQnpieUIwYUdVZ1lYSnliM2NnWkc5bGMyNG5kQ0JuYjF4dUlDQWdJQzh2SUc5MWRITnBaR1VnZEdobElISmxabVZ5Wlc1alpTQmliM1Z1WkhOY2JseHVJQ0FnSUhaaGNpQmhjbkp2ZDBWc1pXMWxiblFnUFNCemRHRjBaUzVsYkdWdFpXNTBjeTVoY25KdmR6dGNiaUFnSUNCMllYSWdZWEp5YjNkU1pXTjBJRDBnZEdWMGFHVnlJQ1ltSUdGeWNtOTNSV3hsYldWdWRDQS9JR2RsZEV4aGVXOTFkRkpsWTNRb1lYSnliM2RGYkdWdFpXNTBLU0E2SUh0Y2JpQWdJQ0FnSUhkcFpIUm9PaUF3TEZ4dUlDQWdJQ0FnYUdWcFoyaDBPaUF3WEc0Z0lDQWdmVHRjYmlBZ0lDQjJZWElnWVhKeWIzZFFZV1JrYVc1blQySnFaV04wSUQwZ2MzUmhkR1V1Ylc5a2FXWnBaWEp6UkdGMFlWc25ZWEp5YjNjamNHVnljMmx6ZEdWdWRDZGRJRDhnYzNSaGRHVXViVzlrYVdacFpYSnpSR0YwWVZzbllYSnliM2NqY0dWeWMybHpkR1Z1ZENkZExuQmhaR1JwYm1jZ09pQm5aWFJHY21WemFGTnBaR1ZQWW1wbFkzUW9LVHRjYmlBZ0lDQjJZWElnWVhKeWIzZFFZV1JrYVc1blRXbHVJRDBnWVhKeWIzZFFZV1JrYVc1blQySnFaV04wVzIxaGFXNVRhV1JsWFR0Y2JpQWdJQ0IyWVhJZ1lYSnliM2RRWVdSa2FXNW5UV0Y0SUQwZ1lYSnliM2RRWVdSa2FXNW5UMkpxWldOMFcyRnNkRk5wWkdWZE95QXZMeUJKWmlCMGFHVWdjbVZtWlhKbGJtTmxJR3hsYm1kMGFDQnBjeUJ6YldGc2JHVnlJSFJvWVc0Z2RHaGxJR0Z5Y205M0lHeGxibWQwYUN3Z2QyVWdaRzl1SjNRZ2QyRnVkRnh1SUNBZ0lDOHZJSFJ2SUdsdVkyeDFaR1VnYVhSeklHWjFiR3dnYzJsNlpTQnBiaUIwYUdVZ1kyRnNZM1ZzWVhScGIyNHVJRWxtSUhSb1pTQnlaV1psY21WdVkyVWdhWE1nYzIxaGJHeGNiaUFnSUNBdkx5QmhibVFnYm1WaGNpQjBhR1VnWldSblpTQnZaaUJoSUdKdmRXNWtZWEo1TENCMGFHVWdjRzl3Y0dWeUlHTmhiaUJ2ZG1WeVpteHZkeUJsZG1WdUlHbG1JSFJvWlZ4dUlDQWdJQzh2SUhKbFptVnlaVzVqWlNCcGN5QnViM1FnYjNabGNtWnNiM2RwYm1jZ1lYTWdkMlZzYkNBb1pTNW5MaUIyYVhKMGRXRnNJR1ZzWlcxbGJuUnpJSGRwZEdnZ2JtOWNiaUFnSUNBdkx5QjNhV1IwYUNCdmNpQm9aV2xuYUhRcFhHNWNiaUFnSUNCMllYSWdZWEp5YjNkTVpXNGdQU0IzYVhSb2FXNG9NQ3dnY21WbVpYSmxibU5sVW1WamRGdHNaVzVkTENCaGNuSnZkMUpsWTNSYmJHVnVYU2s3WEc0Z0lDQWdkbUZ5SUcxcGJrOW1abk5sZENBOUlHbHpRbUZ6WlZCc1lXTmxiV1Z1ZENBL0lISmxabVZ5Wlc1alpWSmxZM1JiYkdWdVhTQXZJRElnTFNCaFpHUnBkR2wyWlNBdElHRnljbTkzVEdWdUlDMGdZWEp5YjNkUVlXUmthVzVuVFdsdUlDMGdibTl5YldGc2FYcGxaRlJsZEdobGNrOW1abk5sZEZaaGJIVmxMbTFoYVc1QmVHbHpJRG9nYldsdVRHVnVJQzBnWVhKeWIzZE1aVzRnTFNCaGNuSnZkMUJoWkdScGJtZE5hVzRnTFNCdWIzSnRZV3hwZW1Wa1ZHVjBhR1Z5VDJabWMyVjBWbUZzZFdVdWJXRnBia0Y0YVhNN1hHNGdJQ0FnZG1GeUlHMWhlRTltWm5ObGRDQTlJR2x6UW1GelpWQnNZV05sYldWdWRDQS9JQzF5WldabGNtVnVZMlZTWldOMFcyeGxibDBnTHlBeUlDc2dZV1JrYVhScGRtVWdLeUJoY25KdmQweGxiaUFySUdGeWNtOTNVR0ZrWkdsdVowMWhlQ0FySUc1dmNtMWhiR2w2WldSVVpYUm9aWEpQWm1aelpYUldZV3gxWlM1dFlXbHVRWGhwY3lBNklHMWhlRXhsYmlBcklHRnljbTkzVEdWdUlDc2dZWEp5YjNkUVlXUmthVzVuVFdGNElDc2dibTl5YldGc2FYcGxaRlJsZEdobGNrOW1abk5sZEZaaGJIVmxMbTFoYVc1QmVHbHpPMXh1SUNBZ0lIWmhjaUJoY25KdmQwOW1abk5sZEZCaGNtVnVkQ0E5SUhOMFlYUmxMbVZzWlcxbGJuUnpMbUZ5Y205M0lDWW1JR2RsZEU5bVpuTmxkRkJoY21WdWRDaHpkR0YwWlM1bGJHVnRaVzUwY3k1aGNuSnZkeWs3WEc0Z0lDQWdkbUZ5SUdOc2FXVnVkRTltWm5ObGRDQTlJR0Z5Y205M1QyWm1jMlYwVUdGeVpXNTBJRDhnYldGcGJrRjRhWE1nUFQwOUlDZDVKeUEvSUdGeWNtOTNUMlptYzJWMFVHRnlaVzUwTG1Oc2FXVnVkRlJ2Y0NCOGZDQXdJRG9nWVhKeWIzZFBabVp6WlhSUVlYSmxiblF1WTJ4cFpXNTBUR1ZtZENCOGZDQXdJRG9nTUR0Y2JpQWdJQ0IyWVhJZ2IyWm1jMlYwVFc5a2FXWnBaWEpXWVd4MVpTQTlJQ2hmYjJabWMyVjBUVzlrYVdacFpYSlRkR0YwWlNRZ1BTQnZabVp6WlhSTmIyUnBabWxsY2xOMFlYUmxJRDA5SUc1MWJHd2dQeUIyYjJsa0lEQWdPaUJ2Wm1aelpYUk5iMlJwWm1sbGNsTjBZWFJsVzIxaGFXNUJlR2x6WFNrZ0lUMGdiblZzYkNBL0lGOXZabVp6WlhSTmIyUnBabWxsY2xOMFlYUmxKQ0E2SURBN1hHNGdJQ0FnZG1GeUlIUmxkR2hsY2sxcGJpQTlJRzltWm5ObGRDQXJJRzFwYms5bVpuTmxkQ0F0SUc5bVpuTmxkRTF2WkdsbWFXVnlWbUZzZFdVZ0xTQmpiR2xsYm5SUFptWnpaWFE3WEc0Z0lDQWdkbUZ5SUhSbGRHaGxjazFoZUNBOUlHOW1abk5sZENBcklHMWhlRTltWm5ObGRDQXRJRzltWm5ObGRFMXZaR2xtYVdWeVZtRnNkV1U3WEc0Z0lDQWdkbUZ5SUhCeVpYWmxiblJsWkU5bVpuTmxkQ0E5SUhkcGRHaHBiaWgwWlhSb1pYSWdQeUJ0WVhSb1RXbHVLRzFwYml3Z2RHVjBhR1Z5VFdsdUtTQTZJRzFwYml3Z2IyWm1jMlYwTENCMFpYUm9aWElnUHlCdFlYUm9UV0Y0S0cxaGVDd2dkR1YwYUdWeVRXRjRLU0E2SUcxaGVDazdYRzRnSUNBZ2NHOXdjR1Z5VDJabWMyVjBjMXR0WVdsdVFYaHBjMTBnUFNCd2NtVjJaVzUwWldSUFptWnpaWFE3WEc0Z0lDQWdaR0YwWVZ0dFlXbHVRWGhwYzEwZ1BTQndjbVYyWlc1MFpXUlBabVp6WlhRZ0xTQnZabVp6WlhRN1hHNGdJSDFjYmx4dUlDQnBaaUFvWTJobFkydEJiSFJCZUdsektTQjdYRzRnSUNBZ2RtRnlJRjl2Wm1aelpYUk5iMlJwWm1sbGNsTjBZWFJsSkRJN1hHNWNiaUFnSUNCMllYSWdYMjFoYVc1VGFXUmxJRDBnYldGcGJrRjRhWE1nUFQwOUlDZDRKeUEvSUhSdmNDQTZJR3hsWm5RN1hHNWNiaUFnSUNCMllYSWdYMkZzZEZOcFpHVWdQU0J0WVdsdVFYaHBjeUE5UFQwZ0ozZ25JRDhnWW05MGRHOXRJRG9nY21sbmFIUTdYRzVjYmlBZ0lDQjJZWElnWDI5bVpuTmxkQ0E5SUhCdmNIQmxjazltWm5ObGRITmJZV3gwUVhocGMxMDdYRzVjYmlBZ0lDQjJZWElnWDJ4bGJpQTlJR0ZzZEVGNGFYTWdQVDA5SUNkNUp5QS9JQ2RvWldsbmFIUW5JRG9nSjNkcFpIUm9KenRjYmx4dUlDQWdJSFpoY2lCZmJXbHVJRDBnWDI5bVpuTmxkQ0FySUc5MlpYSm1iRzkzVzE5dFlXbHVVMmxrWlYwN1hHNWNiaUFnSUNCMllYSWdYMjFoZUNBOUlGOXZabVp6WlhRZ0xTQnZkbVZ5Wm14dmQxdGZZV3gwVTJsa1pWMDdYRzVjYmlBZ0lDQjJZWElnYVhOUGNtbG5hVzVUYVdSbElEMGdXM1J2Y0N3Z2JHVm1kRjB1YVc1a1pYaFBaaWhpWVhObFVHeGhZMlZ0Wlc1MEtTQWhQVDBnTFRFN1hHNWNiaUFnSUNCMllYSWdYMjltWm5ObGRFMXZaR2xtYVdWeVZtRnNkV1VnUFNBb1gyOW1abk5sZEUxdlpHbG1hV1Z5VTNSaGRHVWtNaUE5SUc5bVpuTmxkRTF2WkdsbWFXVnlVM1JoZEdVZ1BUMGdiblZzYkNBL0lIWnZhV1FnTUNBNklHOW1abk5sZEUxdlpHbG1hV1Z5VTNSaGRHVmJZV3gwUVhocGMxMHBJQ0U5SUc1MWJHd2dQeUJmYjJabWMyVjBUVzlrYVdacFpYSlRkR0YwWlNReUlEb2dNRHRjYmx4dUlDQWdJSFpoY2lCZmRHVjBhR1Z5VFdsdUlEMGdhWE5QY21sbmFXNVRhV1JsSUQ4Z1gyMXBiaUE2SUY5dlptWnpaWFFnTFNCeVpXWmxjbVZ1WTJWU1pXTjBXMTlzWlc1ZElDMGdjRzl3Y0dWeVVtVmpkRnRmYkdWdVhTQXRJRjl2Wm1aelpYUk5iMlJwWm1sbGNsWmhiSFZsSUNzZ2JtOXliV0ZzYVhwbFpGUmxkR2hsY2s5bVpuTmxkRlpoYkhWbExtRnNkRUY0YVhNN1hHNWNiaUFnSUNCMllYSWdYM1JsZEdobGNrMWhlQ0E5SUdselQzSnBaMmx1VTJsa1pTQS9JRjl2Wm1aelpYUWdLeUJ5WldabGNtVnVZMlZTWldOMFcxOXNaVzVkSUNzZ2NHOXdjR1Z5VW1WamRGdGZiR1Z1WFNBdElGOXZabVp6WlhSTmIyUnBabWxsY2xaaGJIVmxJQzBnYm05eWJXRnNhWHBsWkZSbGRHaGxjazltWm5ObGRGWmhiSFZsTG1Gc2RFRjRhWE1nT2lCZmJXRjRPMXh1WEc0Z0lDQWdkbUZ5SUY5d2NtVjJaVzUwWldSUFptWnpaWFFnUFNCMFpYUm9aWElnSmlZZ2FYTlBjbWxuYVc1VGFXUmxJRDhnZDJsMGFHbHVUV0Y0UTJ4aGJYQW9YM1JsZEdobGNrMXBiaXdnWDI5bVpuTmxkQ3dnWDNSbGRHaGxjazFoZUNrZ09pQjNhWFJvYVc0b2RHVjBhR1Z5SUQ4Z1gzUmxkR2hsY2sxcGJpQTZJRjl0YVc0c0lGOXZabVp6WlhRc0lIUmxkR2hsY2lBL0lGOTBaWFJvWlhKTllYZ2dPaUJmYldGNEtUdGNibHh1SUNBZ0lIQnZjSEJsY2s5bVpuTmxkSE5iWVd4MFFYaHBjMTBnUFNCZmNISmxkbVZ1ZEdWa1QyWm1jMlYwTzF4dUlDQWdJR1JoZEdGYllXeDBRWGhwYzEwZ1BTQmZjSEpsZG1WdWRHVmtUMlptYzJWMElDMGdYMjltWm5ObGREdGNiaUFnZlZ4dVhHNGdJSE4wWVhSbExtMXZaR2xtYVdWeWMwUmhkR0ZiYm1GdFpWMGdQU0JrWVhSaE8xeHVmU0F2THlCbGMyeHBiblF0WkdsellXSnNaUzF1WlhoMExXeHBibVVnYVcxd2IzSjBMMjV2TFhWdWRYTmxaQzF0YjJSMWJHVnpYRzVjYmx4dVpYaHdiM0owSUdSbFptRjFiSFFnZTF4dUlDQnVZVzFsT2lBbmNISmxkbVZ1ZEU5MlpYSm1iRzkzSnl4Y2JpQWdaVzVoWW14bFpEb2dkSEoxWlN4Y2JpQWdjR2hoYzJVNklDZHRZV2x1Snl4Y2JpQWdabTQ2SUhCeVpYWmxiblJQZG1WeVpteHZkeXhjYmlBZ2NtVnhkV2x5WlhOSlprVjRhWE4wY3pvZ1d5ZHZabVp6WlhRblhWeHVmVHNpTENKbGVIQnZjblFnWkdWbVlYVnNkQ0JtZFc1amRHbHZiaUJuWlhSQmJIUkJlR2x6S0dGNGFYTXBJSHRjYmlBZ2NtVjBkWEp1SUdGNGFYTWdQVDA5SUNkNEp5QS9JQ2Q1SnlBNklDZDRKenRjYm4waUxDSnBiWEJ2Y25RZ1oyVjBRbTkxYm1ScGJtZERiR2xsYm5SU1pXTjBJR1p5YjIwZ1hDSXVMMmRsZEVKdmRXNWthVzVuUTJ4cFpXNTBVbVZqZEM1cWMxd2lPMXh1YVcxd2IzSjBJR2RsZEU1dlpHVlRZM0p2Ykd3Z1puSnZiU0JjSWk0dloyVjBUbTlrWlZOamNtOXNiQzVxYzF3aU8xeHVhVzF3YjNKMElHZGxkRTV2WkdWT1lXMWxJR1p5YjIwZ1hDSXVMMmRsZEU1dlpHVk9ZVzFsTG1welhDSTdYRzVwYlhCdmNuUWdleUJwYzBoVVRVeEZiR1Z0Wlc1MElIMGdabkp2YlNCY0lpNHZhVzV6ZEdGdVkyVlBaaTVxYzF3aU8xeHVhVzF3YjNKMElHZGxkRmRwYm1SdmQxTmpjbTlzYkVKaGNsZ2dabkp2YlNCY0lpNHZaMlYwVjJsdVpHOTNVMk55YjJ4c1FtRnlXQzVxYzF3aU8xeHVhVzF3YjNKMElHZGxkRVJ2WTNWdFpXNTBSV3hsYldWdWRDQm1jbTl0SUZ3aUxpOW5aWFJFYjJOMWJXVnVkRVZzWlcxbGJuUXVhbk5jSWp0Y2JtbHRjRzl5ZENCcGMxTmpjbTlzYkZCaGNtVnVkQ0JtY205dElGd2lMaTlwYzFOamNtOXNiRkJoY21WdWRDNXFjMXdpTzF4dWFXMXdiM0owSUhzZ2NtOTFibVFnZlNCbWNtOXRJRndpTGk0dmRYUnBiSE12YldGMGFDNXFjMXdpTzF4dVhHNW1kVzVqZEdsdmJpQnBjMFZzWlcxbGJuUlRZMkZzWldRb1pXeGxiV1Z1ZENrZ2UxeHVJQ0IyWVhJZ2NtVmpkQ0E5SUdWc1pXMWxiblF1WjJWMFFtOTFibVJwYm1kRGJHbGxiblJTWldOMEtDazdYRzRnSUhaaGNpQnpZMkZzWlZnZ1BTQnliM1Z1WkNoeVpXTjBMbmRwWkhSb0tTQXZJR1ZzWlcxbGJuUXViMlptYzJWMFYybGtkR2dnZkh3Z01UdGNiaUFnZG1GeUlITmpZV3hsV1NBOUlISnZkVzVrS0hKbFkzUXVhR1ZwWjJoMEtTQXZJR1ZzWlcxbGJuUXViMlptYzJWMFNHVnBaMmgwSUh4OElERTdYRzRnSUhKbGRIVnliaUJ6WTJGc1pWZ2dJVDA5SURFZ2ZId2djMk5oYkdWWklDRTlQU0F4TzF4dWZTQXZMeUJTWlhSMWNtNXpJSFJvWlNCamIyMXdiM05wZEdVZ2NtVmpkQ0J2WmlCaGJpQmxiR1Z0Wlc1MElISmxiR0YwYVhabElIUnZJR2wwY3lCdlptWnpaWFJRWVhKbGJuUXVYRzR2THlCRGIyMXdiM05wZEdVZ2JXVmhibk1nYVhRZ2RHRnJaWE1nYVc1MGJ5QmhZMk52ZFc1MElIUnlZVzV6Wm05eWJYTWdZWE1nZDJWc2JDQmhjeUJzWVhsdmRYUXVYRzVjYmx4dVpYaHdiM0owSUdSbFptRjFiSFFnWm5WdVkzUnBiMjRnWjJWMFEyOXRjRzl6YVhSbFVtVmpkQ2hsYkdWdFpXNTBUM0pXYVhKMGRXRnNSV3hsYldWdWRDd2diMlptYzJWMFVHRnlaVzUwTENCcGMwWnBlR1ZrS1NCN1hHNGdJR2xtSUNocGMwWnBlR1ZrSUQwOVBTQjJiMmxrSURBcElIdGNiaUFnSUNCcGMwWnBlR1ZrSUQwZ1ptRnNjMlU3WEc0Z0lIMWNibHh1SUNCMllYSWdhWE5QWm1aelpYUlFZWEpsYm5SQmJrVnNaVzFsYm5RZ1BTQnBjMGhVVFV4RmJHVnRaVzUwS0c5bVpuTmxkRkJoY21WdWRDazdYRzRnSUhaaGNpQnZabVp6WlhSUVlYSmxiblJKYzFOallXeGxaQ0E5SUdselNGUk5URVZzWlcxbGJuUW9iMlptYzJWMFVHRnlaVzUwS1NBbUppQnBjMFZzWlcxbGJuUlRZMkZzWldRb2IyWm1jMlYwVUdGeVpXNTBLVHRjYmlBZ2RtRnlJR1J2WTNWdFpXNTBSV3hsYldWdWRDQTlJR2RsZEVSdlkzVnRaVzUwUld4bGJXVnVkQ2h2Wm1aelpYUlFZWEpsYm5RcE8xeHVJQ0IyWVhJZ2NtVmpkQ0E5SUdkbGRFSnZkVzVrYVc1blEyeHBaVzUwVW1WamRDaGxiR1Z0Wlc1MFQzSldhWEowZFdGc1JXeGxiV1Z1ZEN3Z2IyWm1jMlYwVUdGeVpXNTBTWE5UWTJGc1pXUXBPMXh1SUNCMllYSWdjMk55YjJ4c0lEMGdlMXh1SUNBZ0lITmpjbTlzYkV4bFpuUTZJREFzWEc0Z0lDQWdjMk55YjJ4c1ZHOXdPaUF3WEc0Z0lIMDdYRzRnSUhaaGNpQnZabVp6WlhSeklEMGdlMXh1SUNBZ0lIZzZJREFzWEc0Z0lDQWdlVG9nTUZ4dUlDQjlPMXh1WEc0Z0lHbG1JQ2hwYzA5bVpuTmxkRkJoY21WdWRFRnVSV3hsYldWdWRDQjhmQ0FoYVhOUFptWnpaWFJRWVhKbGJuUkJia1ZzWlcxbGJuUWdKaVlnSVdselJtbDRaV1FwSUh0Y2JpQWdJQ0JwWmlBb1oyVjBUbTlrWlU1aGJXVW9iMlptYzJWMFVHRnlaVzUwS1NBaFBUMGdKMkp2WkhrbklIeDhJQzh2SUdoMGRIQnpPaTh2WjJsMGFIVmlMbU52YlM5d2IzQndaWEpxY3k5d2IzQndaWEl0WTI5eVpTOXBjM04xWlhNdk1UQTNPRnh1SUNBZ0lHbHpVMk55YjJ4c1VHRnlaVzUwS0dSdlkzVnRaVzUwUld4bGJXVnVkQ2twSUh0Y2JpQWdJQ0FnSUhOamNtOXNiQ0E5SUdkbGRFNXZaR1ZUWTNKdmJHd29iMlptYzJWMFVHRnlaVzUwS1R0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JwWmlBb2FYTklWRTFNUld4bGJXVnVkQ2h2Wm1aelpYUlFZWEpsYm5RcEtTQjdYRzRnSUNBZ0lDQnZabVp6WlhSeklEMGdaMlYwUW05MWJtUnBibWREYkdsbGJuUlNaV04wS0c5bVpuTmxkRkJoY21WdWRDd2dkSEoxWlNrN1hHNGdJQ0FnSUNCdlptWnpaWFJ6TG5nZ0t6MGdiMlptYzJWMFVHRnlaVzUwTG1Oc2FXVnVkRXhsWm5RN1hHNGdJQ0FnSUNCdlptWnpaWFJ6TG5rZ0t6MGdiMlptYzJWMFVHRnlaVzUwTG1Oc2FXVnVkRlJ2Y0R0Y2JpQWdJQ0I5SUdWc2MyVWdhV1lnS0dSdlkzVnRaVzUwUld4bGJXVnVkQ2tnZTF4dUlDQWdJQ0FnYjJabWMyVjBjeTU0SUQwZ1oyVjBWMmx1Wkc5M1UyTnliMnhzUW1GeVdDaGtiMk4xYldWdWRFVnNaVzFsYm5RcE8xeHVJQ0FnSUgxY2JpQWdmVnh1WEc0Z0lISmxkSFZ5YmlCN1hHNGdJQ0FnZURvZ2NtVmpkQzVzWldaMElDc2djMk55YjJ4c0xuTmpjbTlzYkV4bFpuUWdMU0J2Wm1aelpYUnpMbmdzWEc0Z0lDQWdlVG9nY21WamRDNTBiM0FnS3lCelkzSnZiR3d1YzJOeWIyeHNWRzl3SUMwZ2IyWm1jMlYwY3k1NUxGeHVJQ0FnSUhkcFpIUm9PaUJ5WldOMExuZHBaSFJvTEZ4dUlDQWdJR2hsYVdkb2REb2djbVZqZEM1b1pXbG5hSFJjYmlBZ2ZUdGNibjBpTENKcGJYQnZjblFnWjJWMFYybHVaRzkzVTJOeWIyeHNJR1p5YjIwZ1hDSXVMMmRsZEZkcGJtUnZkMU5qY205c2JDNXFjMXdpTzF4dWFXMXdiM0owSUdkbGRGZHBibVJ2ZHlCbWNtOXRJRndpTGk5blpYUlhhVzVrYjNjdWFuTmNJanRjYm1sdGNHOXlkQ0I3SUdselNGUk5URVZzWlcxbGJuUWdmU0JtY205dElGd2lMaTlwYm5OMFlXNWpaVTltTG1welhDSTdYRzVwYlhCdmNuUWdaMlYwU0ZSTlRFVnNaVzFsYm5SVFkzSnZiR3dnWm5KdmJTQmNJaTR2WjJWMFNGUk5URVZzWlcxbGJuUlRZM0p2Ykd3dWFuTmNJanRjYm1WNGNHOXlkQ0JrWldaaGRXeDBJR1oxYm1OMGFXOXVJR2RsZEU1dlpHVlRZM0p2Ykd3b2JtOWtaU2tnZTF4dUlDQnBaaUFvYm05a1pTQTlQVDBnWjJWMFYybHVaRzkzS0c1dlpHVXBJSHg4SUNGcGMwaFVUVXhGYkdWdFpXNTBLRzV2WkdVcEtTQjdYRzRnSUNBZ2NtVjBkWEp1SUdkbGRGZHBibVJ2ZDFOamNtOXNiQ2h1YjJSbEtUdGNiaUFnZlNCbGJITmxJSHRjYmlBZ0lDQnlaWFIxY200Z1oyVjBTRlJOVEVWc1pXMWxiblJUWTNKdmJHd29ibTlrWlNrN1hHNGdJSDFjYm4waUxDSmxlSEJ2Y25RZ1pHVm1ZWFZzZENCbWRXNWpkR2x2YmlCblpYUklWRTFNUld4bGJXVnVkRk5qY205c2JDaGxiR1Z0Wlc1MEtTQjdYRzRnSUhKbGRIVnliaUI3WEc0Z0lDQWdjMk55YjJ4c1RHVm1kRG9nWld4bGJXVnVkQzV6WTNKdmJHeE1aV1owTEZ4dUlDQWdJSE5qY205c2JGUnZjRG9nWld4bGJXVnVkQzV6WTNKdmJHeFViM0JjYmlBZ2ZUdGNibjBpTENKcGJYQnZjblFnZXlCdGIyUnBabWxsY2xCb1lYTmxjeUI5SUdaeWIyMGdYQ0l1TGk5bGJuVnRjeTVxYzF3aU95QXZMeUJ6YjNWeVkyVTZJR2gwZEhCek9pOHZjM1JoWTJ0dmRtVnlabXh2ZHk1amIyMHZjWFZsYzNScGIyNXpMelE1T0RjMU1qVTFYRzVjYm1aMWJtTjBhVzl1SUc5eVpHVnlLRzF2WkdsbWFXVnljeWtnZTF4dUlDQjJZWElnYldGd0lEMGdibVYzSUUxaGNDZ3BPMXh1SUNCMllYSWdkbWx6YVhSbFpDQTlJRzVsZHlCVFpYUW9LVHRjYmlBZ2RtRnlJSEpsYzNWc2RDQTlJRnRkTzF4dUlDQnRiMlJwWm1sbGNuTXVabTl5UldGamFDaG1kVzVqZEdsdmJpQW9iVzlrYVdacFpYSXBJSHRjYmlBZ0lDQnRZWEF1YzJWMEtHMXZaR2xtYVdWeUxtNWhiV1VzSUcxdlpHbG1hV1Z5S1R0Y2JpQWdmU2s3SUM4dklFOXVJSFpwYzJsMGFXNW5JRzlpYW1WamRDd2dZMmhsWTJzZ1ptOXlJR2wwY3lCa1pYQmxibVJsYm1OcFpYTWdZVzVrSUhacGMybDBJSFJvWlcwZ2NtVmpkWEp6YVhabGJIbGNibHh1SUNCbWRXNWpkR2x2YmlCemIzSjBLRzF2WkdsbWFXVnlLU0I3WEc0Z0lDQWdkbWx6YVhSbFpDNWhaR1FvYlc5a2FXWnBaWEl1Ym1GdFpTazdYRzRnSUNBZ2RtRnlJSEpsY1hWcGNtVnpJRDBnVzEwdVkyOXVZMkYwS0cxdlpHbG1hV1Z5TG5KbGNYVnBjbVZ6SUh4OElGdGRMQ0J0YjJScFptbGxjaTV5WlhGMWFYSmxjMGxtUlhocGMzUnpJSHg4SUZ0ZEtUdGNiaUFnSUNCeVpYRjFhWEpsY3k1bWIzSkZZV05vS0daMWJtTjBhVzl1SUNoa1pYQXBJSHRjYmlBZ0lDQWdJR2xtSUNnaGRtbHphWFJsWkM1b1lYTW9aR1Z3S1NrZ2UxeHVJQ0FnSUNBZ0lDQjJZWElnWkdWd1RXOWthV1pwWlhJZ1BTQnRZWEF1WjJWMEtHUmxjQ2s3WEc1Y2JpQWdJQ0FnSUNBZ2FXWWdLR1JsY0UxdlpHbG1hV1Z5S1NCN1hHNGdJQ0FnSUNBZ0lDQWdjMjl5ZENoa1pYQk5iMlJwWm1sbGNpazdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlLVHRjYmlBZ0lDQnlaWE4xYkhRdWNIVnphQ2h0YjJScFptbGxjaWs3WEc0Z0lIMWNibHh1SUNCdGIyUnBabWxsY25NdVptOXlSV0ZqYUNobWRXNWpkR2x2YmlBb2JXOWthV1pwWlhJcElIdGNiaUFnSUNCcFppQW9JWFpwYzJsMFpXUXVhR0Z6S0cxdlpHbG1hV1Z5TG01aGJXVXBLU0I3WEc0Z0lDQWdJQ0F2THlCamFHVmpheUJtYjNJZ2RtbHphWFJsWkNCdlltcGxZM1JjYmlBZ0lDQWdJSE52Y25Rb2JXOWthV1pwWlhJcE8xeHVJQ0FnSUgxY2JpQWdmU2s3WEc0Z0lISmxkSFZ5YmlCeVpYTjFiSFE3WEc1OVhHNWNibVY0Y0c5eWRDQmtaV1poZFd4MElHWjFibU4wYVc5dUlHOXlaR1Z5VFc5a2FXWnBaWEp6S0cxdlpHbG1hV1Z5Y3lrZ2UxeHVJQ0F2THlCdmNtUmxjaUJpWVhObFpDQnZiaUJrWlhCbGJtUmxibU5wWlhOY2JpQWdkbUZ5SUc5eVpHVnlaV1JOYjJScFptbGxjbk1nUFNCdmNtUmxjaWh0YjJScFptbGxjbk1wT3lBdkx5QnZjbVJsY2lCaVlYTmxaQ0J2YmlCd2FHRnpaVnh1WEc0Z0lISmxkSFZ5YmlCdGIyUnBabWxsY2xCb1lYTmxjeTV5WldSMVkyVW9ablZ1WTNScGIyNGdLR0ZqWXl3Z2NHaGhjMlVwSUh0Y2JpQWdJQ0J5WlhSMWNtNGdZV05qTG1OdmJtTmhkQ2h2Y21SbGNtVmtUVzlrYVdacFpYSnpMbVpwYkhSbGNpaG1kVzVqZEdsdmJpQW9iVzlrYVdacFpYSXBJSHRjYmlBZ0lDQWdJSEpsZEhWeWJpQnRiMlJwWm1sbGNpNXdhR0Z6WlNBOVBUMGdjR2hoYzJVN1hHNGdJQ0FnZlNrcE8xeHVJQ0I5TENCYlhTazdYRzU5SWl3aWFXMXdiM0owSUdkbGRFTnZiWEJ2YzJsMFpWSmxZM1FnWm5KdmJTQmNJaTR2Wkc5dExYVjBhV3h6TDJkbGRFTnZiWEJ2YzJsMFpWSmxZM1F1YW5OY0lqdGNibWx0Y0c5eWRDQm5aWFJNWVhsdmRYUlNaV04wSUdaeWIyMGdYQ0l1TDJSdmJTMTFkR2xzY3k5blpYUk1ZWGx2ZFhSU1pXTjBMbXB6WENJN1hHNXBiWEJ2Y25RZ2JHbHpkRk5qY205c2JGQmhjbVZ1ZEhNZ1puSnZiU0JjSWk0dlpHOXRMWFYwYVd4ekwyeHBjM1JUWTNKdmJHeFFZWEpsYm5SekxtcHpYQ0k3WEc1cGJYQnZjblFnWjJWMFQyWm1jMlYwVUdGeVpXNTBJR1p5YjIwZ1hDSXVMMlJ2YlMxMWRHbHNjeTluWlhSUFptWnpaWFJRWVhKbGJuUXVhbk5jSWp0Y2JtbHRjRzl5ZENCblpYUkRiMjF3ZFhSbFpGTjBlV3hsSUdaeWIyMGdYQ0l1TDJSdmJTMTFkR2xzY3k5blpYUkRiMjF3ZFhSbFpGTjBlV3hsTG1welhDSTdYRzVwYlhCdmNuUWdiM0prWlhKTmIyUnBabWxsY25NZ1puSnZiU0JjSWk0dmRYUnBiSE12YjNKa1pYSk5iMlJwWm1sbGNuTXVhbk5jSWp0Y2JtbHRjRzl5ZENCa1pXSnZkVzVqWlNCbWNtOXRJRndpTGk5MWRHbHNjeTlrWldKdmRXNWpaUzVxYzF3aU8xeHVhVzF3YjNKMElIWmhiR2xrWVhSbFRXOWthV1pwWlhKeklHWnliMjBnWENJdUwzVjBhV3h6TDNaaGJHbGtZWFJsVFc5a2FXWnBaWEp6TG1welhDSTdYRzVwYlhCdmNuUWdkVzVwY1hWbFFua2dabkp2YlNCY0lpNHZkWFJwYkhNdmRXNXBjWFZsUW5rdWFuTmNJanRjYm1sdGNHOXlkQ0JuWlhSQ1lYTmxVR3hoWTJWdFpXNTBJR1p5YjIwZ1hDSXVMM1YwYVd4ekwyZGxkRUpoYzJWUWJHRmpaVzFsYm5RdWFuTmNJanRjYm1sdGNHOXlkQ0J0WlhKblpVSjVUbUZ0WlNCbWNtOXRJRndpTGk5MWRHbHNjeTl0WlhKblpVSjVUbUZ0WlM1cWMxd2lPMXh1YVcxd2IzSjBJR1JsZEdWamRFOTJaWEptYkc5M0lHWnliMjBnWENJdUwzVjBhV3h6TDJSbGRHVmpkRTkyWlhKbWJHOTNMbXB6WENJN1hHNXBiWEJ2Y25RZ2V5QnBjMFZzWlcxbGJuUWdmU0JtY205dElGd2lMaTlrYjIwdGRYUnBiSE12YVc1emRHRnVZMlZQWmk1cWMxd2lPMXh1YVcxd2IzSjBJSHNnWVhWMGJ5QjlJR1p5YjIwZ1hDSXVMMlZ1ZFcxekxtcHpYQ0k3WEc1MllYSWdTVTVXUVV4SlJGOUZURVZOUlU1VVgwVlNVazlTSUQwZ0oxQnZjSEJsY2pvZ1NXNTJZV3hwWkNCeVpXWmxjbVZ1WTJVZ2IzSWdjRzl3Y0dWeUlHRnlaM1Z0Wlc1MElIQnliM1pwWkdWa0xpQlVhR1Y1SUcxMWMzUWdZbVVnWldsMGFHVnlJR0VnUkU5TklHVnNaVzFsYm5RZ2IzSWdkbWx5ZEhWaGJDQmxiR1Z0Wlc1MExpYzdYRzUyWVhJZ1NVNUdTVTVKVkVWZlRFOVBVRjlGVWxKUFVpQTlJQ2RRYjNCd1pYSTZJRUZ1SUdsdVptbHVhWFJsSUd4dmIzQWdhVzRnZEdobElHMXZaR2xtYVdWeWN5QmplV05zWlNCb1lYTWdZbVZsYmlCa1pYUmxZM1JsWkNFZ1ZHaGxJR041WTJ4bElHaGhjeUJpWldWdUlHbHVkR1Z5Y25Wd2RHVmtJSFJ2SUhCeVpYWmxiblFnWVNCaWNtOTNjMlZ5SUdOeVlYTm9MaWM3WEc1MllYSWdSRVZHUVZWTVZGOVBVRlJKVDA1VElEMGdlMXh1SUNCd2JHRmpaVzFsYm5RNklDZGliM1IwYjIwbkxGeHVJQ0J0YjJScFptbGxjbk02SUZ0ZExGeHVJQ0J6ZEhKaGRHVm5lVG9nSjJGaWMyOXNkWFJsSjF4dWZUdGNibHh1Wm5WdVkzUnBiMjRnWVhKbFZtRnNhV1JGYkdWdFpXNTBjeWdwSUh0Y2JpQWdabTl5SUNoMllYSWdYMnhsYmlBOUlHRnlaM1Z0Wlc1MGN5NXNaVzVuZEdnc0lHRnlaM01nUFNCdVpYY2dRWEp5WVhrb1gyeGxiaWtzSUY5clpYa2dQU0F3T3lCZmEyVjVJRHdnWDJ4bGJqc2dYMnRsZVNzcktTQjdYRzRnSUNBZ1lYSm5jMXRmYTJWNVhTQTlJR0Z5WjNWdFpXNTBjMXRmYTJWNVhUdGNiaUFnZlZ4dVhHNGdJSEpsZEhWeWJpQWhZWEpuY3k1emIyMWxLR1oxYm1OMGFXOXVJQ2hsYkdWdFpXNTBLU0I3WEc0Z0lDQWdjbVYwZFhKdUlDRW9aV3hsYldWdWRDQW1KaUIwZVhCbGIyWWdaV3hsYldWdWRDNW5aWFJDYjNWdVpHbHVaME5zYVdWdWRGSmxZM1FnUFQwOUlDZG1kVzVqZEdsdmJpY3BPMXh1SUNCOUtUdGNibjFjYmx4dVpYaHdiM0owSUdaMWJtTjBhVzl1SUhCdmNIQmxja2RsYm1WeVlYUnZjaWhuWlc1bGNtRjBiM0pQY0hScGIyNXpLU0I3WEc0Z0lHbG1JQ2huWlc1bGNtRjBiM0pQY0hScGIyNXpJRDA5UFNCMmIybGtJREFwSUh0Y2JpQWdJQ0JuWlc1bGNtRjBiM0pQY0hScGIyNXpJRDBnZTMwN1hHNGdJSDFjYmx4dUlDQjJZWElnWDJkbGJtVnlZWFJ2Y2s5d2RHbHZibk1nUFNCblpXNWxjbUYwYjNKUGNIUnBiMjV6TEZ4dUlDQWdJQ0FnWDJkbGJtVnlZWFJ2Y2s5d2RHbHZibk1rWkdWbUlEMGdYMmRsYm1WeVlYUnZjazl3ZEdsdmJuTXVaR1ZtWVhWc2RFMXZaR2xtYVdWeWN5eGNiaUFnSUNBZ0lHUmxabUYxYkhSTmIyUnBabWxsY25NZ1BTQmZaMlZ1WlhKaGRHOXlUM0IwYVc5dWN5UmtaV1lnUFQwOUlIWnZhV1FnTUNBL0lGdGRJRG9nWDJkbGJtVnlZWFJ2Y2s5d2RHbHZibk1rWkdWbUxGeHVJQ0FnSUNBZ1gyZGxibVZ5WVhSdmNrOXdkR2x2Ym5Na1pHVm1NaUE5SUY5blpXNWxjbUYwYjNKUGNIUnBiMjV6TG1SbFptRjFiSFJQY0hScGIyNXpMRnh1SUNBZ0lDQWdaR1ZtWVhWc2RFOXdkR2x2Ym5NZ1BTQmZaMlZ1WlhKaGRHOXlUM0IwYVc5dWN5UmtaV1l5SUQwOVBTQjJiMmxrSURBZ1B5QkVSVVpCVlV4VVgwOVFWRWxQVGxNZ09pQmZaMlZ1WlhKaGRHOXlUM0IwYVc5dWN5UmtaV1l5TzF4dUlDQnlaWFIxY200Z1puVnVZM1JwYjI0Z1kzSmxZWFJsVUc5d2NHVnlLSEpsWm1WeVpXNWpaU3dnY0c5d2NHVnlMQ0J2Y0hScGIyNXpLU0I3WEc0Z0lDQWdhV1lnS0c5d2RHbHZibk1nUFQwOUlIWnZhV1FnTUNrZ2UxeHVJQ0FnSUNBZ2IzQjBhVzl1Y3lBOUlHUmxabUYxYkhSUGNIUnBiMjV6TzF4dUlDQWdJSDFjYmx4dUlDQWdJSFpoY2lCemRHRjBaU0E5SUh0Y2JpQWdJQ0FnSUhCc1lXTmxiV1Z1ZERvZ0oySnZkSFJ2YlNjc1hHNGdJQ0FnSUNCdmNtUmxjbVZrVFc5a2FXWnBaWEp6T2lCYlhTeGNiaUFnSUNBZ0lHOXdkR2x2Ym5NNklFOWlhbVZqZEM1aGMzTnBaMjRvZTMwc0lFUkZSa0ZWVEZSZlQxQlVTVTlPVXl3Z1pHVm1ZWFZzZEU5d2RHbHZibk1wTEZ4dUlDQWdJQ0FnYlc5a2FXWnBaWEp6UkdGMFlUb2dlMzBzWEc0Z0lDQWdJQ0JsYkdWdFpXNTBjem9nZTF4dUlDQWdJQ0FnSUNCeVpXWmxjbVZ1WTJVNklISmxabVZ5Wlc1alpTeGNiaUFnSUNBZ0lDQWdjRzl3Y0dWeU9pQndiM0J3WlhKY2JpQWdJQ0FnSUgwc1hHNGdJQ0FnSUNCaGRIUnlhV0oxZEdWek9pQjdmU3hjYmlBZ0lDQWdJSE4wZVd4bGN6b2dlMzFjYmlBZ0lDQjlPMXh1SUNBZ0lIWmhjaUJsWm1abFkzUkRiR1ZoYm5Wd1JtNXpJRDBnVzEwN1hHNGdJQ0FnZG1GeUlHbHpSR1Z6ZEhKdmVXVmtJRDBnWm1Gc2MyVTdYRzRnSUNBZ2RtRnlJR2x1YzNSaGJtTmxJRDBnZTF4dUlDQWdJQ0FnYzNSaGRHVTZJSE4wWVhSbExGeHVJQ0FnSUNBZ2MyVjBUM0IwYVc5dWN6b2dablZ1WTNScGIyNGdjMlYwVDNCMGFXOXVjeWh6WlhSUGNIUnBiMjV6UVdOMGFXOXVLU0I3WEc0Z0lDQWdJQ0FnSUhaaGNpQnZjSFJwYjI1eklEMGdkSGx3Wlc5bUlITmxkRTl3ZEdsdmJuTkJZM1JwYjI0Z1BUMDlJQ2RtZFc1amRHbHZiaWNnUHlCelpYUlBjSFJwYjI1elFXTjBhVzl1S0hOMFlYUmxMbTl3ZEdsdmJuTXBJRG9nYzJWMFQzQjBhVzl1YzBGamRHbHZianRjYmlBZ0lDQWdJQ0FnWTJ4bFlXNTFjRTF2WkdsbWFXVnlSV1ptWldOMGN5Z3BPMXh1SUNBZ0lDQWdJQ0J6ZEdGMFpTNXZjSFJwYjI1eklEMGdUMkpxWldOMExtRnpjMmxuYmloN2ZTd2daR1ZtWVhWc2RFOXdkR2x2Ym5Nc0lITjBZWFJsTG05d2RHbHZibk1zSUc5d2RHbHZibk1wTzF4dUlDQWdJQ0FnSUNCemRHRjBaUzV6WTNKdmJHeFFZWEpsYm5SeklEMGdlMXh1SUNBZ0lDQWdJQ0FnSUhKbFptVnlaVzVqWlRvZ2FYTkZiR1Z0Wlc1MEtISmxabVZ5Wlc1alpTa2dQeUJzYVhOMFUyTnliMnhzVUdGeVpXNTBjeWh5WldabGNtVnVZMlVwSURvZ2NtVm1aWEpsYm1ObExtTnZiblJsZUhSRmJHVnRaVzUwSUQ4Z2JHbHpkRk5qY205c2JGQmhjbVZ1ZEhNb2NtVm1aWEpsYm1ObExtTnZiblJsZUhSRmJHVnRaVzUwS1NBNklGdGRMRnh1SUNBZ0lDQWdJQ0FnSUhCdmNIQmxjam9nYkdsemRGTmpjbTlzYkZCaGNtVnVkSE1vY0c5d2NHVnlLVnh1SUNBZ0lDQWdJQ0I5T3lBdkx5QlBjbVJsY25NZ2RHaGxJRzF2WkdsbWFXVnljeUJpWVhObFpDQnZiaUIwYUdWcGNpQmtaWEJsYm1SbGJtTnBaWE1nWVc1a0lHQndhR0Z6WldCY2JpQWdJQ0FnSUNBZ0x5OGdjSEp2Y0dWeWRHbGxjMXh1WEc0Z0lDQWdJQ0FnSUhaaGNpQnZjbVJsY21Wa1RXOWthV1pwWlhKeklEMGdiM0prWlhKTmIyUnBabWxsY25Nb2JXVnlaMlZDZVU1aGJXVW9XMTB1WTI5dVkyRjBLR1JsWm1GMWJIUk5iMlJwWm1sbGNuTXNJSE4wWVhSbExtOXdkR2x2Ym5NdWJXOWthV1pwWlhKektTa3BPeUF2THlCVGRISnBjQ0J2ZFhRZ1pHbHpZV0pzWldRZ2JXOWthV1pwWlhKelhHNWNiaUFnSUNBZ0lDQWdjM1JoZEdVdWIzSmtaWEpsWkUxdlpHbG1hV1Z5Y3lBOUlHOXlaR1Z5WldSTmIyUnBabWxsY25NdVptbHNkR1Z5S0daMWJtTjBhVzl1SUNodEtTQjdYRzRnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRzB1Wlc1aFlteGxaRHRjYmlBZ0lDQWdJQ0FnZlNrN0lDOHZJRlpoYkdsa1lYUmxJSFJvWlNCd2NtOTJhV1JsWkNCdGIyUnBabWxsY25NZ2MyOGdkR2hoZENCMGFHVWdZMjl1YzNWdFpYSWdkMmxzYkNCblpYUWdkMkZ5Ym1Wa1hHNGdJQ0FnSUNBZ0lDOHZJR2xtSUc5dVpTQnZaaUIwYUdVZ2JXOWthV1pwWlhKeklHbHpJR2x1ZG1Gc2FXUWdabTl5SUdGdWVTQnlaV0Z6YjI1Y2JseHVJQ0FnSUNBZ0lDQnBaaUFvY0hKdlkyVnpjeTVsYm5ZdVRrOUVSVjlGVGxZZ0lUMDlJRndpY0hKdlpIVmpkR2x2Ymx3aUtTQjdYRzRnSUNBZ0lDQWdJQ0FnZG1GeUlHMXZaR2xtYVdWeWN5QTlJSFZ1YVhGMVpVSjVLRnRkTG1OdmJtTmhkQ2h2Y21SbGNtVmtUVzlrYVdacFpYSnpMQ0J6ZEdGMFpTNXZjSFJwYjI1ekxtMXZaR2xtYVdWeWN5a3NJR1oxYm1OMGFXOXVJQ2hmY21WbUtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMllYSWdibUZ0WlNBOUlGOXlaV1l1Ym1GdFpUdGNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1WVcxbE8xeHVJQ0FnSUNBZ0lDQWdJSDBwTzF4dUlDQWdJQ0FnSUNBZ0lIWmhiR2xrWVhSbFRXOWthV1pwWlhKektHMXZaR2xtYVdWeWN5azdYRzVjYmlBZ0lDQWdJQ0FnSUNCcFppQW9aMlYwUW1GelpWQnNZV05sYldWdWRDaHpkR0YwWlM1dmNIUnBiMjV6TG5Cc1lXTmxiV1Z1ZENrZ1BUMDlJR0YxZEc4cElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhaaGNpQm1iR2x3VFc5a2FXWnBaWElnUFNCemRHRjBaUzV2Y21SbGNtVmtUVzlrYVdacFpYSnpMbVpwYm1Rb1puVnVZM1JwYjI0Z0tGOXlaV1l5S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGNpQnVZVzFsSUQwZ1gzSmxaakl1Ym1GdFpUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1aGJXVWdQVDA5SUNkbWJHbHdKenRjYmlBZ0lDQWdJQ0FnSUNBZ0lIMHBPMXh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvSVdac2FYQk5iMlJwWm1sbGNpa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0ZzblVHOXdjR1Z5T2lCY0ltRjFkRzljSWlCd2JHRmpaVzFsYm5SeklISmxjWFZwY21VZ2RHaGxJRndpWm14cGNGd2lJRzF2WkdsbWFXVnlJR0psSnl3Z0ozQnlaWE5sYm5RZ1lXNWtJR1Z1WVdKc1pXUWdkRzhnZDI5eWF5NG5YUzVxYjJsdUtDY2dKeWtwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQWdJSFpoY2lCZloyVjBRMjl0Y0hWMFpXUlRkSGxzWlNBOUlHZGxkRU52YlhCMWRHVmtVM1I1YkdVb2NHOXdjR1Z5S1N4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnYldGeVoybHVWRzl3SUQwZ1gyZGxkRU52YlhCMWRHVmtVM1I1YkdVdWJXRnlaMmx1Vkc5d0xGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNCdFlYSm5hVzVTYVdkb2RDQTlJRjluWlhSRGIyMXdkWFJsWkZOMGVXeGxMbTFoY21kcGJsSnBaMmgwTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0J0WVhKbmFXNUNiM1IwYjIwZ1BTQmZaMlYwUTI5dGNIVjBaV1JUZEhsc1pTNXRZWEpuYVc1Q2IzUjBiMjBzWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJRzFoY21kcGJreGxablFnUFNCZloyVjBRMjl0Y0hWMFpXUlRkSGxzWlM1dFlYSm5hVzVNWldaME95QXZMeUJYWlNCdWJ5QnNiMjVuWlhJZ2RHRnJaU0JwYm5SdklHRmpZMjkxYm5RZ1lHMWhjbWRwYm5OZ0lHOXVJSFJvWlNCd2IzQndaWElzSUdGdVpDQnBkQ0JqWVc1Y2JpQWdJQ0FnSUNBZ0lDQXZMeUJqWVhWelpTQmlkV2R6SUhkcGRHZ2djRzl6YVhScGIyNXBibWNzSUhOdklIZGxKMnhzSUhkaGNtNGdkR2hsSUdOdmJuTjFiV1Z5WEc1Y2JseHVJQ0FnSUNBZ0lDQWdJR2xtSUNoYmJXRnlaMmx1Vkc5d0xDQnRZWEpuYVc1U2FXZG9kQ3dnYldGeVoybHVRbTkwZEc5dExDQnRZWEpuYVc1TVpXWjBYUzV6YjIxbEtHWjFibU4wYVc5dUlDaHRZWEpuYVc0cElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJ3WVhKelpVWnNiMkYwS0cxaGNtZHBiaWs3WEc0Z0lDQWdJQ0FnSUNBZ2ZTa3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWhiSjFCdmNIQmxjam9nUTFOVElGd2liV0Z5WjJsdVhDSWdjM1I1YkdWeklHTmhibTV2ZENCaVpTQjFjMlZrSUhSdklHRndjR3g1SUhCaFpHUnBibWNuTENBblltVjBkMlZsYmlCMGFHVWdjRzl3Y0dWeUlHRnVaQ0JwZEhNZ2NtVm1aWEpsYm1ObElHVnNaVzFsYm5RZ2IzSWdZbTkxYm1SaGNua3VKeXdnSjFSdklISmxjR3hwWTJGMFpTQnRZWEpuYVc0c0lIVnpaU0IwYUdVZ1lHOW1abk5sZEdBZ2JXOWthV1pwWlhJc0lHRnpJSGRsYkd3Z1lYTW5MQ0FuZEdobElHQndZV1JrYVc1bllDQnZjSFJwYjI0Z2FXNGdkR2hsSUdCd2NtVjJaVzUwVDNabGNtWnNiM2RnSUdGdVpDQmdabXhwY0dBbkxDQW5iVzlrYVdacFpYSnpMaWRkTG1wdmFXNG9KeUFuS1NrN1hHNGdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ2NuVnVUVzlrYVdacFpYSkZabVpsWTNSektDazdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQnBibk4wWVc1alpTNTFjR1JoZEdVb0tUdGNiaUFnSUNBZ0lIMHNYRzRnSUNBZ0lDQXZMeUJUZVc1aklIVndaR0YwWlNEaWdKTWdhWFFnZDJsc2JDQmhiSGRoZVhNZ1ltVWdaWGhsWTNWMFpXUXNJR1YyWlc0Z2FXWWdibTkwSUc1bFkyVnpjMkZ5ZVM0Z1ZHaHBjMXh1SUNBZ0lDQWdMeThnYVhNZ2RYTmxablZzSUdadmNpQnNiM2NnWm5KbGNYVmxibU41SUhWd1pHRjBaWE1nZDJobGNtVWdjM2x1WXlCaVpXaGhkbWx2Y2lCemFXMXdiR2xtYVdWeklIUm9aVnh1SUNBZ0lDQWdMeThnYkc5bmFXTXVYRzRnSUNBZ0lDQXZMeUJHYjNJZ2FHbG5hQ0JtY21WeGRXVnVZM2tnZFhCa1lYUmxjeUFvWlM1bkxpQmdjbVZ6YVhwbFlDQmhibVFnWUhOamNtOXNiR0FnWlhabGJuUnpLU3dnWVd4M1lYbHpYRzRnSUNBZ0lDQXZMeUJ3Y21WbVpYSWdkR2hsSUdGemVXNWpJRkJ2Y0hCbGNpTjFjR1JoZEdVZ2JXVjBhRzlrWEc0Z0lDQWdJQ0JtYjNKalpWVndaR0YwWlRvZ1puVnVZM1JwYjI0Z1ptOXlZMlZWY0dSaGRHVW9LU0I3WEc0Z0lDQWdJQ0FnSUdsbUlDaHBjMFJsYzNSeWIzbGxaQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lISmxkSFZ5Ymp0Y2JpQWdJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQWdJSFpoY2lCZmMzUmhkR1VrWld4bGJXVnVkSE1nUFNCemRHRjBaUzVsYkdWdFpXNTBjeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxabVZ5Wlc1alpTQTlJRjl6ZEdGMFpTUmxiR1Z0Wlc1MGN5NXlaV1psY21WdVkyVXNYRzRnSUNBZ0lDQWdJQ0FnSUNCd2IzQndaWElnUFNCZmMzUmhkR1VrWld4bGJXVnVkSE11Y0c5d2NHVnlPeUF2THlCRWIyNG5kQ0J3Y205alpXVmtJR2xtSUdCeVpXWmxjbVZ1WTJWZ0lHOXlJR0J3YjNCd1pYSmdJR0Z5WlNCdWIzUWdkbUZzYVdRZ1pXeGxiV1Z1ZEhOY2JpQWdJQ0FnSUNBZ0x5OGdZVzU1Ylc5eVpWeHVYRzRnSUNBZ0lDQWdJR2xtSUNnaFlYSmxWbUZzYVdSRmJHVnRaVzUwY3loeVpXWmxjbVZ1WTJVc0lIQnZjSEJsY2lrcElIdGNiaUFnSUNBZ0lDQWdJQ0JwWmlBb2NISnZZMlZ6Y3k1bGJuWXVUazlFUlY5RlRsWWdJVDA5SUZ3aWNISnZaSFZqZEdsdmJsd2lLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0VsT1ZrRk1TVVJmUlV4RlRVVk9WRjlGVWxKUFVpazdYRzRnSUNBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lDQWdjbVYwZFhKdU8xeHVJQ0FnSUNBZ0lDQjlJQzh2SUZOMGIzSmxJSFJvWlNCeVpXWmxjbVZ1WTJVZ1lXNWtJSEJ2Y0hCbGNpQnlaV04wY3lCMGJ5QmlaU0J5WldGa0lHSjVJRzF2WkdsbWFXVnljMXh1WEc1Y2JpQWdJQ0FnSUNBZ2MzUmhkR1V1Y21WamRITWdQU0I3WEc0Z0lDQWdJQ0FnSUNBZ2NtVm1aWEpsYm1ObE9pQm5aWFJEYjIxd2IzTnBkR1ZTWldOMEtISmxabVZ5Wlc1alpTd2daMlYwVDJabWMyVjBVR0Z5Wlc1MEtIQnZjSEJsY2lrc0lITjBZWFJsTG05d2RHbHZibk11YzNSeVlYUmxaM2tnUFQwOUlDZG1hWGhsWkNjcExGeHVJQ0FnSUNBZ0lDQWdJSEJ2Y0hCbGNqb2daMlYwVEdGNWIzVjBVbVZqZENod2IzQndaWElwWEc0Z0lDQWdJQ0FnSUgwN0lDOHZJRTF2WkdsbWFXVnljeUJvWVhabElIUm9aU0JoWW1sc2FYUjVJSFJ2SUhKbGMyVjBJSFJvWlNCamRYSnlaVzUwSUhWd1pHRjBaU0JqZVdOc1pTNGdWR2hsWEc0Z0lDQWdJQ0FnSUM4dklHMXZjM1FnWTI5dGJXOXVJSFZ6WlNCallYTmxJR1p2Y2lCMGFHbHpJR2x6SUhSb1pTQmdabXhwY0dBZ2JXOWthV1pwWlhJZ1kyaGhibWRwYm1jZ2RHaGxYRzRnSUNBZ0lDQWdJQzh2SUhCc1lXTmxiV1Z1ZEN3Z2QyaHBZMmdnZEdobGJpQnVaV1ZrY3lCMGJ5QnlaUzF5ZFc0Z1lXeHNJSFJvWlNCdGIyUnBabWxsY25Nc0lHSmxZMkYxYzJVZ2RHaGxYRzRnSUNBZ0lDQWdJQzh2SUd4dloybGpJSGRoY3lCd2NtVjJhVzkxYzJ4NUlISmhiaUJtYjNJZ2RHaGxJSEJ5WlhacGIzVnpJSEJzWVdObGJXVnVkQ0JoYm1RZ2FYTWdkR2hsY21WbWIzSmxYRzRnSUNBZ0lDQWdJQzh2SUhOMFlXeGxMMmx1WTI5eWNtVmpkRnh1WEc0Z0lDQWdJQ0FnSUhOMFlYUmxMbkpsYzJWMElEMGdabUZzYzJVN1hHNGdJQ0FnSUNBZ0lITjBZWFJsTG5Cc1lXTmxiV1Z1ZENBOUlITjBZWFJsTG05d2RHbHZibk11Y0d4aFkyVnRaVzUwT3lBdkx5QlBiaUJsWVdOb0lIVndaR0YwWlNCamVXTnNaU3dnZEdobElHQnRiMlJwWm1sbGNuTkVZWFJoWUNCd2NtOXdaWEowZVNCbWIzSWdaV0ZqYUNCdGIyUnBabWxsY2x4dUlDQWdJQ0FnSUNBdkx5QnBjeUJtYVd4c1pXUWdkMmwwYUNCMGFHVWdhVzVwZEdsaGJDQmtZWFJoSUhOd1pXTnBabWxsWkNCaWVTQjBhR1VnYlc5a2FXWnBaWEl1SUZSb2FYTWdiV1ZoYm5OY2JpQWdJQ0FnSUNBZ0x5OGdhWFFnWkc5bGMyNG5kQ0J3WlhKemFYTjBJR0Z1WkNCcGN5Qm1jbVZ6YUNCdmJpQmxZV05vSUhWd1pHRjBaUzVjYmlBZ0lDQWdJQ0FnTHk4Z1ZHOGdaVzV6ZFhKbElIQmxjbk5wYzNSbGJuUWdaR0YwWVN3Z2RYTmxJR0FrZTI1aGJXVjlJM0JsY25OcGMzUmxiblJnWEc1Y2JpQWdJQ0FnSUNBZ2MzUmhkR1V1YjNKa1pYSmxaRTF2WkdsbWFXVnljeTVtYjNKRllXTm9LR1oxYm1OMGFXOXVJQ2h0YjJScFptbGxjaWtnZTF4dUlDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCemRHRjBaUzV0YjJScFptbGxjbk5FWVhSaFcyMXZaR2xtYVdWeUxtNWhiV1ZkSUQwZ1QySnFaV04wTG1GemMybG5iaWg3ZlN3Z2JXOWthV1pwWlhJdVpHRjBZU2s3WEc0Z0lDQWdJQ0FnSUgwcE8xeHVJQ0FnSUNBZ0lDQjJZWElnWDE5a1pXSjFaMTlzYjI5d2MxOWZJRDBnTUR0Y2JseHVJQ0FnSUNBZ0lDQm1iM0lnS0haaGNpQnBibVJsZUNBOUlEQTdJR2x1WkdWNElEd2djM1JoZEdVdWIzSmtaWEpsWkUxdlpHbG1hV1Z5Y3k1c1pXNW5kR2c3SUdsdVpHVjRLeXNwSUh0Y2JpQWdJQ0FnSUNBZ0lDQnBaaUFvY0hKdlkyVnpjeTVsYm5ZdVRrOUVSVjlGVGxZZ0lUMDlJRndpY0hKdlpIVmpkR2x2Ymx3aUtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCZlgyUmxZblZuWDJ4dmIzQnpYMThnS3owZ01UdGNibHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRjlmWkdWaWRXZGZiRzl2Y0hOZlh5QStJREV3TUNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG1WeWNtOXlLRWxPUmtsT1NWUkZYMHhQVDFCZlJWSlNUMUlwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6dGNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnSUNCcFppQW9jM1JoZEdVdWNtVnpaWFFnUFQwOUlIUnlkV1VwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSE4wWVhSbExuSmxjMlYwSUQwZ1ptRnNjMlU3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBibVJsZUNBOUlDMHhPMXh1SUNBZ0lDQWdJQ0FnSUNBZ1kyOXVkR2x1ZFdVN1hHNGdJQ0FnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUNBZ2RtRnlJRjl6ZEdGMFpTUnZjbVJsY21Wa1RXOWthV1pwWlNBOUlITjBZWFJsTG05eVpHVnlaV1JOYjJScFptbGxjbk5iYVc1a1pYaGRMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iaUE5SUY5emRHRjBaU1J2Y21SbGNtVmtUVzlrYVdacFpTNW1iaXhjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdYM04wWVhSbEpHOXlaR1Z5WldSTmIyUnBabWxsTWlBOUlGOXpkR0YwWlNSdmNtUmxjbVZrVFc5a2FXWnBaUzV2Y0hScGIyNXpMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQmZiM0IwYVc5dWN5QTlJRjl6ZEdGMFpTUnZjbVJsY21Wa1RXOWthV1pwWlRJZ1BUMDlJSFp2YVdRZ01DQS9JSHQ5SURvZ1gzTjBZWFJsSkc5eVpHVnlaV1JOYjJScFptbGxNaXhjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdibUZ0WlNBOUlGOXpkR0YwWlNSdmNtUmxjbVZrVFc5a2FXWnBaUzV1WVcxbE8xeHVYRzRnSUNBZ0lDQWdJQ0FnYVdZZ0tIUjVjR1Z2WmlCbWJpQTlQVDBnSjJaMWJtTjBhVzl1SnlrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYzNSaGRHVWdQU0JtYmloN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUhOMFlYUmxPaUJ6ZEdGMFpTeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ2IzQjBhVzl1Y3pvZ1gyOXdkR2x2Ym5Nc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUc1aGJXVTZJRzVoYldVc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUdsdWMzUmhibU5sT2lCcGJuTjBZVzVqWlZ4dUlDQWdJQ0FnSUNBZ0lDQWdmU2tnZkh3Z2MzUmhkR1U3WEc0Z0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQjlMRnh1SUNBZ0lDQWdMeThnUVhONWJtTWdZVzVrSUc5d2RHbHRhWE4wYVdOaGJHeDVJRzl3ZEdsdGFYcGxaQ0IxY0dSaGRHVWc0b0NUSUdsMElIZHBiR3dnYm05MElHSmxJR1Y0WldOMWRHVmtJR2xtWEc0Z0lDQWdJQ0F2THlCdWIzUWdibVZqWlhOellYSjVJQ2hrWldKdmRXNWpaV1FnZEc4Z2NuVnVJR0YwSUcxdmMzUWdiMjVqWlMxd1pYSXRkR2xqYXlsY2JpQWdJQ0FnSUhWd1pHRjBaVG9nWkdWaWIzVnVZMlVvWm5WdVkzUnBiMjRnS0NrZ2UxeHVJQ0FnSUNBZ0lDQnlaWFIxY200Z2JtVjNJRkJ5YjIxcGMyVW9ablZ1WTNScGIyNGdLSEpsYzI5c2RtVXBJSHRjYmlBZ0lDQWdJQ0FnSUNCcGJuTjBZVzVqWlM1bWIzSmpaVlZ3WkdGMFpTZ3BPMXh1SUNBZ0lDQWdJQ0FnSUhKbGMyOXNkbVVvYzNSaGRHVXBPMXh1SUNBZ0lDQWdJQ0I5S1R0Y2JpQWdJQ0FnSUgwcExGeHVJQ0FnSUNBZ1pHVnpkSEp2ZVRvZ1puVnVZM1JwYjI0Z1pHVnpkSEp2ZVNncElIdGNiaUFnSUNBZ0lDQWdZMnhsWVc1MWNFMXZaR2xtYVdWeVJXWm1aV04wY3lncE8xeHVJQ0FnSUNBZ0lDQnBjMFJsYzNSeWIzbGxaQ0E5SUhSeWRXVTdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZUdGNibHh1SUNBZ0lHbG1JQ2doWVhKbFZtRnNhV1JGYkdWdFpXNTBjeWh5WldabGNtVnVZMlVzSUhCdmNIQmxjaWtwSUh0Y2JpQWdJQ0FnSUdsbUlDaHdjbTlqWlhOekxtVnVkaTVPVDBSRlgwVk9WaUFoUFQwZ1hDSndjbTlrZFdOMGFXOXVYQ0lwSUh0Y2JpQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1bGNuSnZjaWhKVGxaQlRFbEVYMFZNUlUxRlRsUmZSVkpTVDFJcE8xeHVJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQnlaWFIxY200Z2FXNXpkR0Z1WTJVN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnYVc1emRHRnVZMlV1YzJWMFQzQjBhVzl1Y3lodmNIUnBiMjV6S1M1MGFHVnVLR1oxYm1OMGFXOXVJQ2h6ZEdGMFpTa2dlMXh1SUNBZ0lDQWdhV1lnS0NGcGMwUmxjM1J5YjNsbFpDQW1KaUJ2Y0hScGIyNXpMbTl1Um1seWMzUlZjR1JoZEdVcElIdGNiaUFnSUNBZ0lDQWdiM0IwYVc5dWN5NXZia1pwY25OMFZYQmtZWFJsS0hOMFlYUmxLVHRjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlLVHNnTHk4Z1RXOWthV1pwWlhKeklHaGhkbVVnZEdobElHRmlhV3hwZEhrZ2RHOGdaWGhsWTNWMFpTQmhjbUpwZEhKaGNua2dZMjlrWlNCaVpXWnZjbVVnZEdobElHWnBjbk4wWEc0Z0lDQWdMeThnZFhCa1lYUmxJR041WTJ4bElISjFibk11SUZSb1pYa2dkMmxzYkNCaVpTQmxlR1ZqZFhSbFpDQnBiaUIwYUdVZ2MyRnRaU0J2Y21SbGNpQmhjeUIwYUdVZ2RYQmtZWFJsWEc0Z0lDQWdMeThnWTNsamJHVXVJRlJvYVhNZ2FYTWdkWE5sWm5Wc0lIZG9aVzRnWVNCdGIyUnBabWxsY2lCaFpHUnpJSE52YldVZ2NHVnljMmx6ZEdWdWRDQmtZWFJoSUhSb1lYUmNiaUFnSUNBdkx5QnZkR2hsY2lCdGIyUnBabWxsY25NZ2JtVmxaQ0IwYnlCMWMyVXNJR0oxZENCMGFHVWdiVzlrYVdacFpYSWdhWE1nY25WdUlHRm1kR1Z5SUhSb1pTQmtaWEJsYm1SbGJuUmNiaUFnSUNBdkx5QnZibVV1WEc1Y2JpQWdJQ0JtZFc1amRHbHZiaUJ5ZFc1TmIyUnBabWxsY2tWbVptVmpkSE1vS1NCN1hHNGdJQ0FnSUNCemRHRjBaUzV2Y21SbGNtVmtUVzlrYVdacFpYSnpMbVp2Y2tWaFkyZ29ablZ1WTNScGIyNGdLRjl5WldZektTQjdYRzRnSUNBZ0lDQWdJSFpoY2lCdVlXMWxJRDBnWDNKbFpqTXVibUZ0WlN4Y2JpQWdJQ0FnSUNBZ0lDQWdJRjl5WldZekpHOXdkR2x2Ym5NZ1BTQmZjbVZtTXk1dmNIUnBiMjV6TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdiM0IwYVc5dWN5QTlJRjl5WldZekpHOXdkR2x2Ym5NZ1BUMDlJSFp2YVdRZ01DQS9JSHQ5SURvZ1gzSmxaak1rYjNCMGFXOXVjeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHVm1abVZqZENBOUlGOXlaV1l6TG1WbVptVmpkRHRjYmx4dUlDQWdJQ0FnSUNCcFppQW9kSGx3Wlc5bUlHVm1abVZqZENBOVBUMGdKMloxYm1OMGFXOXVKeWtnZTF4dUlDQWdJQ0FnSUNBZ0lIWmhjaUJqYkdWaGJuVndSbTRnUFNCbFptWmxZM1FvZTF4dUlDQWdJQ0FnSUNBZ0lDQWdjM1JoZEdVNklITjBZWFJsTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdibUZ0WlRvZ2JtRnRaU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lHbHVjM1JoYm1ObE9pQnBibk4wWVc1alpTeGNiaUFnSUNBZ0lDQWdJQ0FnSUc5d2RHbHZibk02SUc5d2RHbHZibk5jYmlBZ0lDQWdJQ0FnSUNCOUtUdGNibHh1SUNBZ0lDQWdJQ0FnSUhaaGNpQnViMjl3Um00Z1BTQm1kVzVqZEdsdmJpQnViMjl3Um00b0tTQjdmVHRjYmx4dUlDQWdJQ0FnSUNBZ0lHVm1abVZqZEVOc1pXRnVkWEJHYm5NdWNIVnphQ2hqYkdWaGJuVndSbTRnZkh3Z2JtOXZjRVp1S1R0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ2ZTazdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ1puVnVZM1JwYjI0Z1kyeGxZVzUxY0UxdlpHbG1hV1Z5UldabVpXTjBjeWdwSUh0Y2JpQWdJQ0FnSUdWbVptVmpkRU5zWldGdWRYQkdibk11Wm05eVJXRmphQ2htZFc1amRHbHZiaUFvWm00cElIdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlHWnVLQ2s3WEc0Z0lDQWdJQ0I5S1R0Y2JpQWdJQ0FnSUdWbVptVmpkRU5zWldGdWRYQkdibk1nUFNCYlhUdGNiaUFnSUNCOVhHNWNiaUFnSUNCeVpYUjFjbTRnYVc1emRHRnVZMlU3WEc0Z0lIMDdYRzU5WEc1bGVIQnZjblFnZG1GeUlHTnlaV0YwWlZCdmNIQmxjaUE5SUM4cUkxOWZVRlZTUlY5ZktpOXdiM0J3WlhKSFpXNWxjbUYwYjNJb0tUc2dMeThnWlhOc2FXNTBMV1JwYzJGaWJHVXRibVY0ZEMxc2FXNWxJR2x0Y0c5eWRDOXVieTExYm5WelpXUXRiVzlrZFd4bGMxeHVYRzVsZUhCdmNuUWdleUJrWlhSbFkzUlBkbVZ5Wm14dmR5QjlPeUlzSW1WNGNHOXlkQ0JrWldaaGRXeDBJR1oxYm1OMGFXOXVJR1JsWW05MWJtTmxLR1p1S1NCN1hHNGdJSFpoY2lCd1pXNWthVzVuTzF4dUlDQnlaWFIxY200Z1puVnVZM1JwYjI0Z0tDa2dlMXh1SUNBZ0lHbG1JQ2doY0dWdVpHbHVaeWtnZTF4dUlDQWdJQ0FnY0dWdVpHbHVaeUE5SUc1bGR5QlFjbTl0YVhObEtHWjFibU4wYVc5dUlDaHlaWE52YkhabEtTQjdYRzRnSUNBZ0lDQWdJRkJ5YjIxcGMyVXVjbVZ6YjJ4MlpTZ3BMblJvWlc0b1puVnVZM1JwYjI0Z0tDa2dlMXh1SUNBZ0lDQWdJQ0FnSUhCbGJtUnBibWNnUFNCMWJtUmxabWx1WldRN1hHNGdJQ0FnSUNBZ0lDQWdjbVZ6YjJ4MlpTaG1iaWdwS1R0Y2JpQWdJQ0FnSUNBZ2ZTazdYRzRnSUNBZ0lDQjlLVHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQnlaWFIxY200Z2NHVnVaR2x1Wnp0Y2JpQWdmVHRjYm4waUxDSmxlSEJ2Y25RZ1pHVm1ZWFZzZENCbWRXNWpkR2x2YmlCdFpYSm5aVUo1VG1GdFpTaHRiMlJwWm1sbGNuTXBJSHRjYmlBZ2RtRnlJRzFsY21kbFpDQTlJRzF2WkdsbWFXVnljeTV5WldSMVkyVW9ablZ1WTNScGIyNGdLRzFsY21kbFpDd2dZM1Z5Y21WdWRDa2dlMXh1SUNBZ0lIWmhjaUJsZUdsemRHbHVaeUE5SUcxbGNtZGxaRnRqZFhKeVpXNTBMbTVoYldWZE8xeHVJQ0FnSUcxbGNtZGxaRnRqZFhKeVpXNTBMbTVoYldWZElEMGdaWGhwYzNScGJtY2dQeUJQWW1wbFkzUXVZWE56YVdkdUtIdDlMQ0JsZUdsemRHbHVaeXdnWTNWeWNtVnVkQ3dnZTF4dUlDQWdJQ0FnYjNCMGFXOXVjem9nVDJKcVpXTjBMbUZ6YzJsbmJpaDdmU3dnWlhocGMzUnBibWN1YjNCMGFXOXVjeXdnWTNWeWNtVnVkQzV2Y0hScGIyNXpLU3hjYmlBZ0lDQWdJR1JoZEdFNklFOWlhbVZqZEM1aGMzTnBaMjRvZTMwc0lHVjRhWE4wYVc1bkxtUmhkR0VzSUdOMWNuSmxiblF1WkdGMFlTbGNiaUFnSUNCOUtTQTZJR04xY25KbGJuUTdYRzRnSUNBZ2NtVjBkWEp1SUcxbGNtZGxaRHRjYmlBZ2ZTd2dlMzBwT3lBdkx5QkpSVEV4SUdSdlpYTWdibTkwSUhOMWNIQnZjblFnVDJKcVpXTjBMblpoYkhWbGMxeHVYRzRnSUhKbGRIVnliaUJQWW1wbFkzUXVhMlY1Y3lodFpYSm5aV1FwTG0xaGNDaG1kVzVqZEdsdmJpQW9hMlY1S1NCN1hHNGdJQ0FnY21WMGRYSnVJRzFsY21kbFpGdHJaWGxkTzF4dUlDQjlLVHRjYm4waUxDSnBiWEJ2Y25RZ2V5QndiM0J3WlhKSFpXNWxjbUYwYjNJc0lHUmxkR1ZqZEU5MlpYSm1iRzkzSUgwZ1puSnZiU0JjSWk0dlkzSmxZWFJsVUc5d2NHVnlMbXB6WENJN1hHNXBiWEJ2Y25RZ1pYWmxiblJNYVhOMFpXNWxjbk1nWm5KdmJTQmNJaTR2Ylc5a2FXWnBaWEp6TDJWMlpXNTBUR2x6ZEdWdVpYSnpMbXB6WENJN1hHNXBiWEJ2Y25RZ2NHOXdjR1Z5VDJabWMyVjBjeUJtY205dElGd2lMaTl0YjJScFptbGxjbk12Y0c5d2NHVnlUMlptYzJWMGN5NXFjMXdpTzF4dWFXMXdiM0owSUdOdmJYQjFkR1ZUZEhsc1pYTWdabkp2YlNCY0lpNHZiVzlrYVdacFpYSnpMMk52YlhCMWRHVlRkSGxzWlhNdWFuTmNJanRjYm1sdGNHOXlkQ0JoY0hCc2VWTjBlV3hsY3lCbWNtOXRJRndpTGk5dGIyUnBabWxsY25NdllYQndiSGxUZEhsc1pYTXVhbk5jSWp0Y2JtbHRjRzl5ZENCdlptWnpaWFFnWm5KdmJTQmNJaTR2Ylc5a2FXWnBaWEp6TDI5bVpuTmxkQzVxYzF3aU8xeHVhVzF3YjNKMElHWnNhWEFnWm5KdmJTQmNJaTR2Ylc5a2FXWnBaWEp6TDJac2FYQXVhbk5jSWp0Y2JtbHRjRzl5ZENCd2NtVjJaVzUwVDNabGNtWnNiM2NnWm5KdmJTQmNJaTR2Ylc5a2FXWnBaWEp6TDNCeVpYWmxiblJQZG1WeVpteHZkeTVxYzF3aU8xeHVhVzF3YjNKMElHRnljbTkzSUdaeWIyMGdYQ0l1TDIxdlpHbG1hV1Z5Y3k5aGNuSnZkeTVxYzF3aU8xeHVhVzF3YjNKMElHaHBaR1VnWm5KdmJTQmNJaTR2Ylc5a2FXWnBaWEp6TDJocFpHVXVhbk5jSWp0Y2JuWmhjaUJrWldaaGRXeDBUVzlrYVdacFpYSnpJRDBnVzJWMlpXNTBUR2x6ZEdWdVpYSnpMQ0J3YjNCd1pYSlBabVp6WlhSekxDQmpiMjF3ZFhSbFUzUjViR1Z6TENCaGNIQnNlVk4wZVd4bGN5d2diMlptYzJWMExDQm1iR2x3TENCd2NtVjJaVzUwVDNabGNtWnNiM2NzSUdGeWNtOTNMQ0JvYVdSbFhUdGNiblpoY2lCamNtVmhkR1ZRYjNCd1pYSWdQU0F2S2lOZlgxQlZVa1ZmWHlvdmNHOXdjR1Z5UjJWdVpYSmhkRzl5S0h0Y2JpQWdaR1ZtWVhWc2RFMXZaR2xtYVdWeWN6b2daR1ZtWVhWc2RFMXZaR2xtYVdWeWMxeHVmU2s3SUM4dklHVnpiR2x1ZEMxa2FYTmhZbXhsTFc1bGVIUXRiR2x1WlNCcGJYQnZjblF2Ym04dGRXNTFjMlZrTFcxdlpIVnNaWE5jYmx4dVpYaHdiM0owSUhzZ1kzSmxZWFJsVUc5d2NHVnlMQ0J3YjNCd1pYSkhaVzVsY21GMGIzSXNJR1JsWm1GMWJIUk5iMlJwWm1sbGNuTXNJR1JsZEdWamRFOTJaWEptYkc5M0lIMDdJQzh2SUdWemJHbHVkQzFrYVhOaFlteGxMVzVsZUhRdGJHbHVaU0JwYlhCdmNuUXZibTh0ZFc1MWMyVmtMVzF2WkhWc1pYTmNibHh1Wlhod2IzSjBJSHNnWTNKbFlYUmxVRzl3Y0dWeUlHRnpJR055WldGMFpWQnZjSEJsY2t4cGRHVWdmU0JtY205dElGd2lMaTl3YjNCd1pYSXRiR2wwWlM1cWMxd2lPeUF2THlCbGMyeHBiblF0WkdsellXSnNaUzF1WlhoMExXeHBibVVnYVcxd2IzSjBMMjV2TFhWdWRYTmxaQzF0YjJSMWJHVnpYRzVjYm1WNGNHOXlkQ0FxSUdaeWIyMGdYQ0l1TDIxdlpHbG1hV1Z5Y3k5cGJtUmxlQzVxYzF3aU95SXNJbWx0Y0c5eWRDQjdJSEJ2Y0hCbGNrZGxibVZ5WVhSdmNpd2daR1YwWldOMFQzWmxjbVpzYjNjZ2ZTQm1jbTl0SUZ3aUxpOWpjbVZoZEdWUWIzQndaWEl1YW5OY0lqdGNibWx0Y0c5eWRDQmxkbVZ1ZEV4cGMzUmxibVZ5Y3lCbWNtOXRJRndpTGk5dGIyUnBabWxsY25NdlpYWmxiblJNYVhOMFpXNWxjbk11YW5OY0lqdGNibWx0Y0c5eWRDQndiM0J3WlhKUFptWnpaWFJ6SUdaeWIyMGdYQ0l1TDIxdlpHbG1hV1Z5Y3k5d2IzQndaWEpQWm1aelpYUnpMbXB6WENJN1hHNXBiWEJ2Y25RZ1kyOXRjSFYwWlZOMGVXeGxjeUJtY205dElGd2lMaTl0YjJScFptbGxjbk12WTI5dGNIVjBaVk4wZVd4bGN5NXFjMXdpTzF4dWFXMXdiM0owSUdGd2NHeDVVM1I1YkdWeklHWnliMjBnWENJdUwyMXZaR2xtYVdWeWN5OWhjSEJzZVZOMGVXeGxjeTVxYzF3aU8xeHVkbUZ5SUdSbFptRjFiSFJOYjJScFptbGxjbk1nUFNCYlpYWmxiblJNYVhOMFpXNWxjbk1zSUhCdmNIQmxjazltWm5ObGRITXNJR052YlhCMWRHVlRkSGxzWlhNc0lHRndjR3g1VTNSNWJHVnpYVHRjYm5aaGNpQmpjbVZoZEdWUWIzQndaWElnUFNBdktpTmZYMUJWVWtWZlh5b3ZjRzl3Y0dWeVIyVnVaWEpoZEc5eUtIdGNiaUFnWkdWbVlYVnNkRTF2WkdsbWFXVnljem9nWkdWbVlYVnNkRTF2WkdsbWFXVnljMXh1ZlNrN0lDOHZJR1Z6YkdsdWRDMWthWE5oWW14bExXNWxlSFF0YkdsdVpTQnBiWEJ2Y25RdmJtOHRkVzUxYzJWa0xXMXZaSFZzWlhOY2JseHVaWGh3YjNKMElIc2dZM0psWVhSbFVHOXdjR1Z5TENCd2IzQndaWEpIWlc1bGNtRjBiM0lzSUdSbFptRjFiSFJOYjJScFptbGxjbk1zSUdSbGRHVmpkRTkyWlhKbWJHOTNJSDA3SWl3aUx5b2hYRzRnSUNvZ1FtOXZkSE4wY21Gd0lIWTFMakV1TXlBb2FIUjBjSE02THk5blpYUmliMjkwYzNSeVlYQXVZMjl0THlsY2JpQWdLaUJEYjNCNWNtbG5hSFFnTWpBeE1TMHlNREl4SUZSb1pTQkNiMjkwYzNSeVlYQWdRWFYwYUc5eWN5QW9hSFIwY0hNNkx5OW5hWFJvZFdJdVkyOXRMM1IzWW5NdlltOXZkSE4wY21Gd0wyZHlZWEJvY3k5amIyNTBjbWxpZFhSdmNuTXBYRzRnSUNvZ1RHbGpaVzV6WldRZ2RXNWtaWElnVFVsVUlDaG9kSFJ3Y3pvdkwyZHBkR2gxWWk1amIyMHZkSGRpY3k5aWIyOTBjM1J5WVhBdllteHZZaTl0WVdsdUwweEpRMFZPVTBVcFhHNGdJQ292WEc1cGJYQnZjblFnS2lCaGN5QlFiM0J3WlhJZ1puSnZiU0FuUUhCdmNIQmxjbXB6TDJOdmNtVW5PMXh1WEc0dktpcGNiaUFxSUMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdFhHNGdLaUJDYjI5MGMzUnlZWEFnS0hZMUxqRXVNeWs2SUhWMGFXd3ZhVzVrWlhndWFuTmNiaUFxSUV4cFkyVnVjMlZrSUhWdVpHVnlJRTFKVkNBb2FIUjBjSE02THk5bmFYUm9kV0l1WTI5dEwzUjNZbk12WW05dmRITjBjbUZ3TDJKc2IySXZiV0ZwYmk5TVNVTkZUbE5GS1Z4dUlDb2dMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzFjYmlBcUwxeHVZMjl1YzNRZ1RVRllYMVZKUkNBOUlERXdNREF3TURBN1hHNWpiMjV6ZENCTlNVeE1TVk5GUTA5T1JGTmZUVlZNVkVsUVRFbEZVaUE5SURFd01EQTdYRzVqYjI1emRDQlVVa0ZPVTBsVVNVOU9YMFZPUkNBOUlDZDBjbUZ1YzJsMGFXOXVaVzVrSnpzZ0x5OGdVMmh2ZFhSdmRYUWdRVzVuZFhORGNtOXNiQ0FvYUhSMGNITTZMeTluYjI4dVoyd3ZjSGgzVVVkd0tWeHVYRzVqYjI1emRDQjBiMVI1Y0dVZ1BTQnZZbW9nUFQ0Z2UxeHVJQ0JwWmlBb2IySnFJRDA5UFNCdWRXeHNJSHg4SUc5aWFpQTlQVDBnZFc1a1pXWnBibVZrS1NCN1hHNGdJQ0FnY21WMGRYSnVJR0FrZTI5aWFuMWdPMXh1SUNCOVhHNWNiaUFnY21WMGRYSnVJSHQ5TG5SdlUzUnlhVzVuTG1OaGJHd29iMkpxS1M1dFlYUmphQ2d2WEZ4ektGdGhMWHBkS3lrdmFTbGJNVjB1ZEc5TWIzZGxja05oYzJVb0tUdGNibjA3WEc0dktpcGNiaUFxSUMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdFhHNGdLaUJRZFdKc2FXTWdWWFJwYkNCQmNHbGNiaUFxSUMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdFhHNGdLaTljYmx4dVhHNWpiMjV6ZENCblpYUlZTVVFnUFNCd2NtVm1hWGdnUFQ0Z2UxeHVJQ0JrYnlCN1hHNGdJQ0FnY0hKbFptbDRJQ3M5SUUxaGRHZ3VabXh2YjNJb1RXRjBhQzV5WVc1a2IyMG9LU0FxSUUxQldGOVZTVVFwTzF4dUlDQjlJSGRvYVd4bElDaGtiMk4xYldWdWRDNW5aWFJGYkdWdFpXNTBRbmxKWkNod2NtVm1hWGdwS1R0Y2JseHVJQ0J5WlhSMWNtNGdjSEpsWm1sNE8xeHVmVHRjYmx4dVkyOXVjM1FnWjJWMFUyVnNaV04wYjNJZ1BTQmxiR1Z0Wlc1MElEMCtJSHRjYmlBZ2JHVjBJSE5sYkdWamRHOXlJRDBnWld4bGJXVnVkQzVuWlhSQmRIUnlhV0oxZEdVb0oyUmhkR0V0WW5NdGRHRnlaMlYwSnlrN1hHNWNiaUFnYVdZZ0tDRnpaV3hsWTNSdmNpQjhmQ0J6Wld4bFkzUnZjaUE5UFQwZ0p5TW5LU0I3WEc0Z0lDQWdiR1YwSUdoeVpXWkJkSFJ5SUQwZ1pXeGxiV1Z1ZEM1blpYUkJkSFJ5YVdKMWRHVW9KMmh5WldZbktUc2dMeThnVkdobElHOXViSGtnZG1Gc2FXUWdZMjl1ZEdWdWRDQjBhR0YwSUdOdmRXeGtJR1J2ZFdKc1pTQmhjeUJoSUhObGJHVmpkRzl5SUdGeVpTQkpSSE1nYjNJZ1kyeGhjM05sY3l4Y2JpQWdJQ0F2THlCemJ5QmxkbVZ5ZVhSb2FXNW5JSE4wWVhKMGFXNW5JSGRwZEdnZ1lDTmdJRzl5SUdBdVlDNGdTV1lnWVNCY0luSmxZV3hjSWlCVlVrd2dhWE1nZFhObFpDQmhjeUIwYUdVZ2MyVnNaV04wYjNJc1hHNGdJQ0FnTHk4Z1lHUnZZM1Z0Wlc1MExuRjFaWEo1VTJWc1pXTjBiM0pnSUhkcGJHd2djbWxuYUhSbWRXeHNlU0JqYjIxd2JHRnBiaUJwZENCcGN5QnBiblpoYkdsa0xseHVJQ0FnSUM4dklGTmxaU0JvZEhSd2N6b3ZMMmRwZEdoMVlpNWpiMjB2ZEhkaWN5OWliMjkwYzNSeVlYQXZhWE56ZFdWekx6TXlNamN6WEc1Y2JpQWdJQ0JwWmlBb0lXaHlaV1pCZEhSeUlIeDhJQ0ZvY21WbVFYUjBjaTVwYm1Oc2RXUmxjeWduSXljcElDWW1JQ0ZvY21WbVFYUjBjaTV6ZEdGeWRITlhhWFJvS0NjdUp5a3BJSHRjYmlBZ0lDQWdJSEpsZEhWeWJpQnVkV3hzTzF4dUlDQWdJSDBnTHk4Z1NuVnpkQ0JwYmlCallYTmxJSE52YldVZ1EwMVRJSEIxZEhNZ2IzVjBJR0VnWm5Wc2JDQlZVa3dnZDJsMGFDQjBhR1VnWVc1amFHOXlJR0Z3Y0dWdVpHVmtYRzVjYmx4dUlDQWdJR2xtSUNob2NtVm1RWFIwY2k1cGJtTnNkV1JsY3lnbkl5Y3BJQ1ltSUNGb2NtVm1RWFIwY2k1emRHRnlkSE5YYVhSb0tDY2pKeWtwSUh0Y2JpQWdJQ0FnSUdoeVpXWkJkSFJ5SUQwZ1lDTWtlMmh5WldaQmRIUnlMbk53YkdsMEtDY2pKeWxiTVYxOVlEdGNiaUFnSUNCOVhHNWNiaUFnSUNCelpXeGxZM1J2Y2lBOUlHaHlaV1pCZEhSeUlDWW1JR2h5WldaQmRIUnlJQ0U5UFNBbkl5Y2dQeUJvY21WbVFYUjBjaTUwY21sdEtDa2dPaUJ1ZFd4c08xeHVJQ0I5WEc1Y2JpQWdjbVYwZFhKdUlITmxiR1ZqZEc5eU8xeHVmVHRjYmx4dVkyOXVjM1FnWjJWMFUyVnNaV04wYjNKR2NtOXRSV3hsYldWdWRDQTlJR1ZzWlcxbGJuUWdQVDRnZTF4dUlDQmpiMjV6ZENCelpXeGxZM1J2Y2lBOUlHZGxkRk5sYkdWamRHOXlLR1ZzWlcxbGJuUXBPMXh1WEc0Z0lHbG1JQ2h6Wld4bFkzUnZjaWtnZTF4dUlDQWdJSEpsZEhWeWJpQmtiMk4xYldWdWRDNXhkV1Z5ZVZObGJHVmpkRzl5S0hObGJHVmpkRzl5S1NBL0lITmxiR1ZqZEc5eUlEb2diblZzYkR0Y2JpQWdmVnh1WEc0Z0lISmxkSFZ5YmlCdWRXeHNPMXh1ZlR0Y2JseHVZMjl1YzNRZ1oyVjBSV3hsYldWdWRFWnliMjFUWld4bFkzUnZjaUE5SUdWc1pXMWxiblFnUFQ0Z2UxeHVJQ0JqYjI1emRDQnpaV3hsWTNSdmNpQTlJR2RsZEZObGJHVmpkRzl5S0dWc1pXMWxiblFwTzF4dUlDQnlaWFIxY200Z2MyVnNaV04wYjNJZ1B5QmtiMk4xYldWdWRDNXhkV1Z5ZVZObGJHVmpkRzl5S0hObGJHVmpkRzl5S1NBNklHNTFiR3c3WEc1OU8xeHVYRzVqYjI1emRDQm5aWFJVY21GdWMybDBhVzl1UkhWeVlYUnBiMjVHY205dFJXeGxiV1Z1ZENBOUlHVnNaVzFsYm5RZ1BUNGdlMXh1SUNCcFppQW9JV1ZzWlcxbGJuUXBJSHRjYmlBZ0lDQnlaWFIxY200Z01EdGNiaUFnZlNBdkx5QkhaWFFnZEhKaGJuTnBkR2x2Ymkxa2RYSmhkR2x2YmlCdlppQjBhR1VnWld4bGJXVnVkRnh1WEc1Y2JpQWdiR1YwSUh0Y2JpQWdJQ0IwY21GdWMybDBhVzl1UkhWeVlYUnBiMjRzWEc0Z0lDQWdkSEpoYm5OcGRHbHZia1JsYkdGNVhHNGdJSDBnUFNCM2FXNWtiM2N1WjJWMFEyOXRjSFYwWldSVGRIbHNaU2hsYkdWdFpXNTBLVHRjYmlBZ1kyOXVjM1FnWm14dllYUlVjbUZ1YzJsMGFXOXVSSFZ5WVhScGIyNGdQU0JPZFcxaVpYSXVjR0Z5YzJWR2JHOWhkQ2gwY21GdWMybDBhVzl1UkhWeVlYUnBiMjRwTzF4dUlDQmpiMjV6ZENCbWJHOWhkRlJ5WVc1emFYUnBiMjVFWld4aGVTQTlJRTUxYldKbGNpNXdZWEp6WlVac2IyRjBLSFJ5WVc1emFYUnBiMjVFWld4aGVTazdJQzh2SUZKbGRIVnliaUF3SUdsbUlHVnNaVzFsYm5RZ2IzSWdkSEpoYm5OcGRHbHZiaUJrZFhKaGRHbHZiaUJwY3lCdWIzUWdabTkxYm1SY2JseHVJQ0JwWmlBb0lXWnNiMkYwVkhKaGJuTnBkR2x2YmtSMWNtRjBhVzl1SUNZbUlDRm1iRzloZEZSeVlXNXphWFJwYjI1RVpXeGhlU2tnZTF4dUlDQWdJSEpsZEhWeWJpQXdPMXh1SUNCOUlDOHZJRWxtSUcxMWJIUnBjR3hsSUdSMWNtRjBhVzl1Y3lCaGNtVWdaR1ZtYVc1bFpDd2dkR0ZyWlNCMGFHVWdabWx5YzNSY2JseHVYRzRnSUhSeVlXNXphWFJwYjI1RWRYSmhkR2x2YmlBOUlIUnlZVzV6YVhScGIyNUVkWEpoZEdsdmJpNXpjR3hwZENnbkxDY3BXekJkTzF4dUlDQjBjbUZ1YzJsMGFXOXVSR1ZzWVhrZ1BTQjBjbUZ1YzJsMGFXOXVSR1ZzWVhrdWMzQnNhWFFvSnl3bktWc3dYVHRjYmlBZ2NtVjBkWEp1SUNoT2RXMWlaWEl1Y0dGeWMyVkdiRzloZENoMGNtRnVjMmwwYVc5dVJIVnlZWFJwYjI0cElDc2dUblZ0WW1WeUxuQmhjbk5sUm14dllYUW9kSEpoYm5OcGRHbHZia1JsYkdGNUtTa2dLaUJOU1V4TVNWTkZRMDlPUkZOZlRWVk1WRWxRVEVsRlVqdGNibjA3WEc1Y2JtTnZibk4wSUhSeWFXZG5aWEpVY21GdWMybDBhVzl1Ulc1a0lEMGdaV3hsYldWdWRDQTlQaUI3WEc0Z0lHVnNaVzFsYm5RdVpHbHpjR0YwWTJoRmRtVnVkQ2h1WlhjZ1JYWmxiblFvVkZKQlRsTkpWRWxQVGw5RlRrUXBLVHRjYm4wN1hHNWNibU52Ym5OMElHbHpSV3hsYldWdWRDQTlJRzlpYWlBOVBpQjdYRzRnSUdsbUlDZ2hiMkpxSUh4OElIUjVjR1Z2WmlCdlltb2dJVDA5SUNkdlltcGxZM1FuS1NCN1hHNGdJQ0FnY21WMGRYSnVJR1poYkhObE8xeHVJQ0I5WEc1Y2JpQWdhV1lnS0hSNWNHVnZaaUJ2WW1vdWFuRjFaWEo1SUNFOVBTQW5kVzVrWldacGJtVmtKeWtnZTF4dUlDQWdJRzlpYWlBOUlHOWlhbHN3WFR0Y2JpQWdmVnh1WEc0Z0lISmxkSFZ5YmlCMGVYQmxiMllnYjJKcUxtNXZaR1ZVZVhCbElDRTlQU0FuZFc1a1pXWnBibVZrSnp0Y2JuMDdYRzVjYm1OdmJuTjBJR2RsZEVWc1pXMWxiblFnUFNCdlltb2dQVDRnZTF4dUlDQnBaaUFvYVhORmJHVnRaVzUwS0c5aWFpa3BJSHRjYmlBZ0lDQXZMeUJwZENkeklHRWdhbEYxWlhKNUlHOWlhbVZqZENCdmNpQmhJRzV2WkdVZ1pXeGxiV1Z1ZEZ4dUlDQWdJSEpsZEhWeWJpQnZZbW91YW5GMVpYSjVJRDhnYjJKcVd6QmRJRG9nYjJKcU8xeHVJQ0I5WEc1Y2JpQWdhV1lnS0hSNWNHVnZaaUJ2WW1vZ1BUMDlJQ2R6ZEhKcGJtY25JQ1ltSUc5aWFpNXNaVzVuZEdnZ1BpQXdLU0I3WEc0Z0lDQWdjbVYwZFhKdUlHUnZZM1Z0Wlc1MExuRjFaWEo1VTJWc1pXTjBiM0lvYjJKcUtUdGNiaUFnZlZ4dVhHNGdJSEpsZEhWeWJpQnVkV3hzTzF4dWZUdGNibHh1WTI5dWMzUWdkSGx3WlVOb1pXTnJRMjl1Wm1sbklEMGdLR052YlhCdmJtVnVkRTVoYldVc0lHTnZibVpwWnl3Z1kyOXVabWxuVkhsd1pYTXBJRDArSUh0Y2JpQWdUMkpxWldOMExtdGxlWE1vWTI5dVptbG5WSGx3WlhNcExtWnZja1ZoWTJnb2NISnZjR1Z5ZEhrZ1BUNGdlMXh1SUNBZ0lHTnZibk4wSUdWNGNHVmpkR1ZrVkhsd1pYTWdQU0JqYjI1bWFXZFVlWEJsYzF0d2NtOXdaWEowZVYwN1hHNGdJQ0FnWTI5dWMzUWdkbUZzZFdVZ1BTQmpiMjVtYVdkYmNISnZjR1Z5ZEhsZE8xeHVJQ0FnSUdOdmJuTjBJSFpoYkhWbFZIbHdaU0E5SUhaaGJIVmxJQ1ltSUdselJXeGxiV1Z1ZENoMllXeDFaU2tnUHlBblpXeGxiV1Z1ZENjZ09pQjBiMVI1Y0dVb2RtRnNkV1VwTzF4dVhHNGdJQ0FnYVdZZ0tDRnVaWGNnVW1WblJYaHdLR1Y0Y0dWamRHVmtWSGx3WlhNcExuUmxjM1FvZG1Gc2RXVlVlWEJsS1NrZ2UxeHVJQ0FnSUNBZ2RHaHliM2NnYm1WM0lGUjVjR1ZGY25KdmNpaGdKSHRqYjIxd2IyNWxiblJPWVcxbExuUnZWWEJ3WlhKRFlYTmxLQ2w5T2lCUGNIUnBiMjRnWENJa2UzQnliM0JsY25SNWZWd2lJSEJ5YjNacFpHVmtJSFI1Y0dVZ1hDSWtlM1poYkhWbFZIbHdaWDFjSWlCaWRYUWdaWGh3WldOMFpXUWdkSGx3WlNCY0lpUjdaWGh3WldOMFpXUlVlWEJsYzMxY0lpNWdLVHRjYmlBZ0lDQjlYRzRnSUgwcE8xeHVmVHRjYmx4dVkyOXVjM1FnYVhOV2FYTnBZbXhsSUQwZ1pXeGxiV1Z1ZENBOVBpQjdYRzRnSUdsbUlDZ2hhWE5GYkdWdFpXNTBLR1ZzWlcxbGJuUXBJSHg4SUdWc1pXMWxiblF1WjJWMFEyeHBaVzUwVW1WamRITW9LUzVzWlc1bmRHZ2dQVDA5SURBcElIdGNiaUFnSUNCeVpYUjFjbTRnWm1Gc2MyVTdYRzRnSUgxY2JseHVJQ0J5WlhSMWNtNGdaMlYwUTI5dGNIVjBaV1JUZEhsc1pTaGxiR1Z0Wlc1MEtTNW5aWFJRY205d1pYSjBlVlpoYkhWbEtDZDJhWE5wWW1sc2FYUjVKeWtnUFQwOUlDZDJhWE5wWW14bEp6dGNibjA3WEc1Y2JtTnZibk4wSUdselJHbHpZV0pzWldRZ1BTQmxiR1Z0Wlc1MElEMCtJSHRjYmlBZ2FXWWdLQ0ZsYkdWdFpXNTBJSHg4SUdWc1pXMWxiblF1Ym05a1pWUjVjR1VnSVQwOUlFNXZaR1V1UlV4RlRVVk9WRjlPVDBSRktTQjdYRzRnSUNBZ2NtVjBkWEp1SUhSeWRXVTdYRzRnSUgxY2JseHVJQ0JwWmlBb1pXeGxiV1Z1ZEM1amJHRnpjMHhwYzNRdVkyOXVkR0ZwYm5Nb0oyUnBjMkZpYkdWa0p5a3BJSHRjYmlBZ0lDQnlaWFIxY200Z2RISjFaVHRjYmlBZ2ZWeHVYRzRnSUdsbUlDaDBlWEJsYjJZZ1pXeGxiV1Z1ZEM1a2FYTmhZbXhsWkNBaFBUMGdKM1Z1WkdWbWFXNWxaQ2NwSUh0Y2JpQWdJQ0J5WlhSMWNtNGdaV3hsYldWdWRDNWthWE5oWW14bFpEdGNiaUFnZlZ4dVhHNGdJSEpsZEhWeWJpQmxiR1Z0Wlc1MExtaGhjMEYwZEhKcFluVjBaU2duWkdsellXSnNaV1FuS1NBbUppQmxiR1Z0Wlc1MExtZGxkRUYwZEhKcFluVjBaU2duWkdsellXSnNaV1FuS1NBaFBUMGdKMlpoYkhObEp6dGNibjA3WEc1Y2JtTnZibk4wSUdacGJtUlRhR0ZrYjNkU2IyOTBJRDBnWld4bGJXVnVkQ0E5UGlCN1hHNGdJR2xtSUNnaFpHOWpkVzFsYm5RdVpHOWpkVzFsYm5SRmJHVnRaVzUwTG1GMGRHRmphRk5vWVdSdmR5a2dlMXh1SUNBZ0lISmxkSFZ5YmlCdWRXeHNPMXh1SUNCOUlDOHZJRU5oYmlCbWFXNWtJSFJvWlNCemFHRmtiM2NnY205dmRDQnZkR2hsY25kcGMyVWdhWFFuYkd3Z2NtVjBkWEp1SUhSb1pTQmtiMk4xYldWdWRGeHVYRzVjYmlBZ2FXWWdLSFI1Y0dWdlppQmxiR1Z0Wlc1MExtZGxkRkp2YjNST2IyUmxJRDA5UFNBblpuVnVZM1JwYjI0bktTQjdYRzRnSUNBZ1kyOXVjM1FnY205dmRDQTlJR1ZzWlcxbGJuUXVaMlYwVW05dmRFNXZaR1VvS1R0Y2JpQWdJQ0J5WlhSMWNtNGdjbTl2ZENCcGJuTjBZVzVqWlc5bUlGTm9ZV1J2ZDFKdmIzUWdQeUJ5YjI5MElEb2diblZzYkR0Y2JpQWdmVnh1WEc0Z0lHbG1JQ2hsYkdWdFpXNTBJR2x1YzNSaGJtTmxiMllnVTJoaFpHOTNVbTl2ZENrZ2UxeHVJQ0FnSUhKbGRIVnliaUJsYkdWdFpXNTBPMXh1SUNCOUlDOHZJSGRvWlc0Z2QyVWdaRzl1SjNRZ1ptbHVaQ0JoSUhOb1lXUnZkeUJ5YjI5MFhHNWNibHh1SUNCcFppQW9JV1ZzWlcxbGJuUXVjR0Z5Wlc1MFRtOWtaU2tnZTF4dUlDQWdJSEpsZEhWeWJpQnVkV3hzTzF4dUlDQjlYRzVjYmlBZ2NtVjBkWEp1SUdacGJtUlRhR0ZrYjNkU2IyOTBLR1ZzWlcxbGJuUXVjR0Z5Wlc1MFRtOWtaU2s3WEc1OU8xeHVYRzVqYjI1emRDQnViMjl3SUQwZ0tDa2dQVDRnZTMwN1hHNHZLaXBjYmlBcUlGUnlhV05ySUhSdklISmxjM1JoY25RZ1lXNGdaV3hsYldWdWRDZHpJR0Z1YVcxaGRHbHZibHh1SUNwY2JpQXFJRUJ3WVhKaGJTQjdTRlJOVEVWc1pXMWxiblI5SUdWc1pXMWxiblJjYmlBcUlFQnlaWFIxY200Z2RtOXBaRnh1SUNwY2JpQXFJRUJ6WldVZ2FIUjBjSE02THk5M2QzY3VZMmhoY21semRHaGxieTVwYnk5aWJHOW5Mekl3TWpFdk1ESXZjbVZ6ZEdGeWRDMWhMV056Y3kxaGJtbHRZWFJwYjI0dGQybDBhQzFxWVhaaGMyTnlhWEIwTHlOeVpYTjBZWEowYVc1bkxXRXRZM056TFdGdWFXMWhkR2x2Ymx4dUlDb3ZYRzVjYmx4dVkyOXVjM1FnY21WbWJHOTNJRDBnWld4bGJXVnVkQ0E5UGlCN1hHNGdJQzh2SUdWemJHbHVkQzFrYVhOaFlteGxMVzVsZUhRdGJHbHVaU0J1YnkxMWJuVnpaV1F0Wlhod2NtVnpjMmx2Ym5OY2JpQWdaV3hsYldWdWRDNXZabVp6WlhSSVpXbG5hSFE3WEc1OU8xeHVYRzVqYjI1emRDQm5aWFJxVVhWbGNua2dQU0FvS1NBOVBpQjdYRzRnSUdOdmJuTjBJSHRjYmlBZ0lDQnFVWFZsY25sY2JpQWdmU0E5SUhkcGJtUnZkenRjYmx4dUlDQnBaaUFvYWxGMVpYSjVJQ1ltSUNGa2IyTjFiV1Z1ZEM1aWIyUjVMbWhoYzBGMGRISnBZblYwWlNnblpHRjBZUzFpY3kxdWJ5MXFjWFZsY25rbktTa2dlMXh1SUNBZ0lISmxkSFZ5YmlCcVVYVmxjbms3WEc0Z0lIMWNibHh1SUNCeVpYUjFjbTRnYm5Wc2JEdGNibjA3WEc1Y2JtTnZibk4wSUVSUFRVTnZiblJsYm5STWIyRmtaV1JEWVd4c1ltRmphM01nUFNCYlhUdGNibHh1WTI5dWMzUWdiMjVFVDAxRGIyNTBaVzUwVEc5aFpHVmtJRDBnWTJGc2JHSmhZMnNnUFQ0Z2UxeHVJQ0JwWmlBb1pHOWpkVzFsYm5RdWNtVmhaSGxUZEdGMFpTQTlQVDBnSjJ4dllXUnBibWNuS1NCN1hHNGdJQ0FnTHk4Z1lXUmtJR3hwYzNSbGJtVnlJRzl1SUhSb1pTQm1hWEp6ZENCallXeHNJSGRvWlc0Z2RHaGxJR1J2WTNWdFpXNTBJR2x6SUdsdUlHeHZZV1JwYm1jZ2MzUmhkR1ZjYmlBZ0lDQnBaaUFvSVVSUFRVTnZiblJsYm5STWIyRmtaV1JEWVd4c1ltRmphM011YkdWdVozUm9LU0I3WEc0Z0lDQWdJQ0JrYjJOMWJXVnVkQzVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLQ2RFVDAxRGIyNTBaVzUwVEc5aFpHVmtKeXdnS0NrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0JFVDAxRGIyNTBaVzUwVEc5aFpHVmtRMkZzYkdKaFkydHpMbVp2Y2tWaFkyZ29ZMkZzYkdKaFkyc2dQVDRnWTJGc2JHSmhZMnNvS1NrN1hHNGdJQ0FnSUNCOUtUdGNiaUFnSUNCOVhHNWNiaUFnSUNCRVQwMURiMjUwWlc1MFRHOWhaR1ZrUTJGc2JHSmhZMnR6TG5CMWMyZ29ZMkZzYkdKaFkyc3BPMXh1SUNCOUlHVnNjMlVnZTF4dUlDQWdJR05oYkd4aVlXTnJLQ2s3WEc0Z0lIMWNibjA3WEc1Y2JtTnZibk4wSUdselVsUk1JRDBnS0NrZ1BUNGdaRzlqZFcxbGJuUXVaRzlqZFcxbGJuUkZiR1Z0Wlc1MExtUnBjaUE5UFQwZ0ozSjBiQ2M3WEc1Y2JtTnZibk4wSUdSbFptbHVaVXBSZFdWeWVWQnNkV2RwYmlBOUlIQnNkV2RwYmlBOVBpQjdYRzRnSUc5dVJFOU5RMjl1ZEdWdWRFeHZZV1JsWkNnb0tTQTlQaUI3WEc0Z0lDQWdZMjl1YzNRZ0pDQTlJR2RsZEdwUmRXVnllU2dwTzF4dUlDQWdJQzhxSUdsemRHRnVZblZzSUdsbmJtOXlaU0JwWmlBcUwxeHVYRzRnSUNBZ2FXWWdLQ1FwSUh0Y2JpQWdJQ0FnSUdOdmJuTjBJRzVoYldVZ1BTQndiSFZuYVc0dVRrRk5SVHRjYmlBZ0lDQWdJR052Ym5OMElFcFJWVVZTV1Y5T1QxOURUMDVHVEVsRFZDQTlJQ1F1Wm01YmJtRnRaVjA3WEc0Z0lDQWdJQ0FrTG1adVcyNWhiV1ZkSUQwZ2NHeDFaMmx1TG1wUmRXVnllVWx1ZEdWeVptRmpaVHRjYmlBZ0lDQWdJQ1F1Wm01YmJtRnRaVjB1UTI5dWMzUnlkV04wYjNJZ1BTQndiSFZuYVc0N1hHNWNiaUFnSUNBZ0lDUXVabTViYm1GdFpWMHVibTlEYjI1bWJHbGpkQ0E5SUNncElEMCtJSHRjYmlBZ0lDQWdJQ0FnSkM1bWJsdHVZVzFsWFNBOUlFcFJWVVZTV1Y5T1QxOURUMDVHVEVsRFZEdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlIQnNkV2RwYmk1cVVYVmxjbmxKYm5SbGNtWmhZMlU3WEc0Z0lDQWdJQ0I5TzF4dUlDQWdJSDFjYmlBZ2ZTazdYRzU5TzF4dVhHNWpiMjV6ZENCbGVHVmpkWFJsSUQwZ1kyRnNiR0poWTJzZ1BUNGdlMXh1SUNCcFppQW9kSGx3Wlc5bUlHTmhiR3hpWVdOcklEMDlQU0FuWm5WdVkzUnBiMjRuS1NCN1hHNGdJQ0FnWTJGc2JHSmhZMnNvS1R0Y2JpQWdmVnh1ZlR0Y2JseHVZMjl1YzNRZ1pYaGxZM1YwWlVGbWRHVnlWSEpoYm5OcGRHbHZiaUE5SUNoallXeHNZbUZqYXl3Z2RISmhibk5wZEdsdmJrVnNaVzFsYm5Rc0lIZGhhWFJHYjNKVWNtRnVjMmwwYVc5dUlEMGdkSEoxWlNrZ1BUNGdlMXh1SUNCcFppQW9JWGRoYVhSR2IzSlVjbUZ1YzJsMGFXOXVLU0I3WEc0Z0lDQWdaWGhsWTNWMFpTaGpZV3hzWW1GamF5azdYRzRnSUNBZ2NtVjBkWEp1TzF4dUlDQjlYRzVjYmlBZ1kyOXVjM1FnWkhWeVlYUnBiMjVRWVdSa2FXNW5JRDBnTlR0Y2JpQWdZMjl1YzNRZ1pXMTFiR0YwWldSRWRYSmhkR2x2YmlBOUlHZGxkRlJ5WVc1emFYUnBiMjVFZFhKaGRHbHZia1p5YjIxRmJHVnRaVzUwS0hSeVlXNXphWFJwYjI1RmJHVnRaVzUwS1NBcklHUjFjbUYwYVc5dVVHRmtaR2x1Wnp0Y2JpQWdiR1YwSUdOaGJHeGxaQ0E5SUdaaGJITmxPMXh1WEc0Z0lHTnZibk4wSUdoaGJtUnNaWElnUFNBb2UxeHVJQ0FnSUhSaGNtZGxkRnh1SUNCOUtTQTlQaUI3WEc0Z0lDQWdhV1lnS0hSaGNtZGxkQ0FoUFQwZ2RISmhibk5wZEdsdmJrVnNaVzFsYm5RcElIdGNiaUFnSUNBZ0lISmxkSFZ5Ymp0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JqWVd4c1pXUWdQU0IwY25WbE8xeHVJQ0FnSUhSeVlXNXphWFJwYjI1RmJHVnRaVzUwTG5KbGJXOTJaVVYyWlc1MFRHbHpkR1Z1WlhJb1ZGSkJUbE5KVkVsUFRsOUZUa1FzSUdoaGJtUnNaWElwTzF4dUlDQWdJR1Y0WldOMWRHVW9ZMkZzYkdKaFkyc3BPMXh1SUNCOU8xeHVYRzRnSUhSeVlXNXphWFJwYjI1RmJHVnRaVzUwTG1Ga1pFVjJaVzUwVEdsemRHVnVaWElvVkZKQlRsTkpWRWxQVGw5RlRrUXNJR2hoYm1Sc1pYSXBPMXh1SUNCelpYUlVhVzFsYjNWMEtDZ3BJRDArSUh0Y2JpQWdJQ0JwWmlBb0lXTmhiR3hsWkNrZ2UxeHVJQ0FnSUNBZ2RISnBaMmRsY2xSeVlXNXphWFJwYjI1RmJtUW9kSEpoYm5OcGRHbHZia1ZzWlcxbGJuUXBPMXh1SUNBZ0lIMWNiaUFnZlN3Z1pXMTFiR0YwWldSRWRYSmhkR2x2YmlrN1hHNTlPMXh1THlvcVhHNGdLaUJTWlhSMWNtNGdkR2hsSUhCeVpYWnBiM1Z6TDI1bGVIUWdaV3hsYldWdWRDQnZaaUJoSUd4cGMzUXVYRzRnS2x4dUlDb2dRSEJoY21GdElIdGhjbkpoZVgwZ2JHbHpkQ0FnSUNCVWFHVWdiR2x6ZENCdlppQmxiR1Z0Wlc1MGMxeHVJQ29nUUhCaGNtRnRJR0ZqZEdsMlpVVnNaVzFsYm5RZ0lDQlVhR1VnWVdOMGFYWmxJR1ZzWlcxbGJuUmNiaUFxSUVCd1lYSmhiU0J6YUc5MWJHUkhaWFJPWlhoMElDQWdRMmh2YjNObElIUnZJR2RsZENCdVpYaDBJRzl5SUhCeVpYWnBiM1Z6SUdWc1pXMWxiblJjYmlBcUlFQndZWEpoYlNCcGMwTjVZMnhsUVd4c2IzZGxaRnh1SUNvZ1FISmxkSFZ5YmlCN1JXeGxiV1Z1ZEh4bGJHVnRmU0JVYUdVZ2NISnZjR1Z5SUdWc1pXMWxiblJjYmlBcUwxeHVYRzVjYm1OdmJuTjBJR2RsZEU1bGVIUkJZM1JwZG1WRmJHVnRaVzUwSUQwZ0tHeHBjM1FzSUdGamRHbDJaVVZzWlcxbGJuUXNJSE5vYjNWc1pFZGxkRTVsZUhRc0lHbHpRM2xqYkdWQmJHeHZkMlZrS1NBOVBpQjdYRzRnSUd4bGRDQnBibVJsZUNBOUlHeHBjM1F1YVc1a1pYaFBaaWhoWTNScGRtVkZiR1Z0Wlc1MEtUc2dMeThnYVdZZ2RHaGxJR1ZzWlcxbGJuUWdaRzlsY3lCdWIzUWdaWGhwYzNRZ2FXNGdkR2hsSUd4cGMzUWdjbVYwZFhKdUlHRnVJR1ZzWlcxbGJuUWdaR1Z3Wlc1a2FXNW5JRzl1SUhSb1pTQmthWEpsWTNScGIyNGdZVzVrSUdsbUlHTjVZMnhsSUdseklHRnNiRzkzWldSY2JseHVJQ0JwWmlBb2FXNWtaWGdnUFQwOUlDMHhLU0I3WEc0Z0lDQWdjbVYwZFhKdUlHeHBjM1JiSVhOb2IzVnNaRWRsZEU1bGVIUWdKaVlnYVhORGVXTnNaVUZzYkc5M1pXUWdQeUJzYVhOMExteGxibWQwYUNBdElERWdPaUF3WFR0Y2JpQWdmVnh1WEc0Z0lHTnZibk4wSUd4cGMzUk1aVzVuZEdnZ1BTQnNhWE4wTG14bGJtZDBhRHRjYmlBZ2FXNWtaWGdnS3owZ2MyaHZkV3hrUjJWMFRtVjRkQ0EvSURFZ09pQXRNVHRjYmx4dUlDQnBaaUFvYVhORGVXTnNaVUZzYkc5M1pXUXBJSHRjYmlBZ0lDQnBibVJsZUNBOUlDaHBibVJsZUNBcklHeHBjM1JNWlc1bmRHZ3BJQ1VnYkdsemRFeGxibWQwYUR0Y2JpQWdmVnh1WEc0Z0lISmxkSFZ5YmlCc2FYTjBXMDFoZEdndWJXRjRLREFzSUUxaGRHZ3ViV2x1S0dsdVpHVjRMQ0JzYVhOMFRHVnVaM1JvSUMwZ01Ta3BYVHRjYm4wN1hHNWNiaThxS2x4dUlDb2dMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzFjYmlBcUlFSnZiM1J6ZEhKaGNDQW9kalV1TVM0ektUb2daRzl0TDJWMlpXNTBMV2hoYm1Sc1pYSXVhbk5jYmlBcUlFeHBZMlZ1YzJWa0lIVnVaR1Z5SUUxSlZDQW9hSFIwY0hNNkx5OW5hWFJvZFdJdVkyOXRMM1IzWW5NdlltOXZkSE4wY21Gd0wySnNiMkl2YldGcGJpOU1TVU5GVGxORktWeHVJQ29nTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMxY2JpQXFMMXh1THlvcVhHNGdLaUF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzFjYmlBcUlFTnZibk4wWVc1MGMxeHVJQ29nTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0WEc0Z0tpOWNibHh1WTI5dWMzUWdibUZ0WlhOd1lXTmxVbVZuWlhnZ1BTQXZXMTR1WFNvb1B6MWNYQzR1S2lsY1hDNThMaW92TzF4dVkyOXVjM1FnYzNSeWFYQk9ZVzFsVW1WblpYZ2dQU0F2WEZ3dUxpb3ZPMXh1WTI5dWMzUWdjM1J5YVhCVmFXUlNaV2RsZUNBOUlDODZPbHhjWkNza0x6dGNibU52Ym5OMElHVjJaVzUwVW1WbmFYTjBjbmtnUFNCN2ZUc2dMeThnUlhabGJuUnpJSE4wYjNKaFoyVmNibHh1YkdWMElIVnBaRVYyWlc1MElEMGdNVHRjYm1OdmJuTjBJR04xYzNSdmJVVjJaVzUwY3lBOUlIdGNiaUFnYlc5MWMyVmxiblJsY2pvZ0oyMXZkWE5sYjNabGNpY3NYRzRnSUcxdmRYTmxiR1ZoZG1VNklDZHRiM1Z6Wlc5MWRDZGNibjA3WEc1amIyNXpkQ0JqZFhOMGIyMUZkbVZ1ZEhOU1pXZGxlQ0E5SUM5ZUtHMXZkWE5sWlc1MFpYSjhiVzkxYzJWc1pXRjJaU2t2YVR0Y2JtTnZibk4wSUc1aGRHbDJaVVYyWlc1MGN5QTlJRzVsZHlCVFpYUW9XeWRqYkdsamF5Y3NJQ2RrWW14amJHbGpheWNzSUNkdGIzVnpaWFZ3Snl3Z0oyMXZkWE5sWkc5M2JpY3NJQ2RqYjI1MFpYaDBiV1Z1ZFNjc0lDZHRiM1Z6Wlhkb1pXVnNKeXdnSjBSUFRVMXZkWE5sVTJOeWIyeHNKeXdnSjIxdmRYTmxiM1psY2ljc0lDZHRiM1Z6Wlc5MWRDY3NJQ2R0YjNWelpXMXZkbVVuTENBbmMyVnNaV04wYzNSaGNuUW5MQ0FuYzJWc1pXTjBaVzVrSnl3Z0oydGxlV1J2ZDI0bkxDQW5hMlY1Y0hKbGMzTW5MQ0FuYTJWNWRYQW5MQ0FuYjNKcFpXNTBZWFJwYjI1amFHRnVaMlVuTENBbmRHOTFZMmh6ZEdGeWRDY3NJQ2QwYjNWamFHMXZkbVVuTENBbmRHOTFZMmhsYm1RbkxDQW5kRzkxWTJoallXNWpaV3duTENBbmNHOXBiblJsY21SdmQyNG5MQ0FuY0c5cGJuUmxjbTF2ZG1VbkxDQW5jRzlwYm5SbGNuVndKeXdnSjNCdmFXNTBaWEpzWldGMlpTY3NJQ2R3YjJsdWRHVnlZMkZ1WTJWc0p5d2dKMmRsYzNSMWNtVnpkR0Z5ZENjc0lDZG5aWE4wZFhKbFkyaGhibWRsSnl3Z0oyZGxjM1IxY21WbGJtUW5MQ0FuWm05amRYTW5MQ0FuWW14MWNpY3NJQ2RqYUdGdVoyVW5MQ0FuY21WelpYUW5MQ0FuYzJWc1pXTjBKeXdnSjNOMVltMXBkQ2NzSUNkbWIyTjFjMmx1Snl3Z0oyWnZZM1Z6YjNWMEp5d2dKMnh2WVdRbkxDQW5kVzVzYjJGa0p5d2dKMkpsWm05eVpYVnViRzloWkNjc0lDZHlaWE5wZW1VbkxDQW5iVzkyWlNjc0lDZEVUMDFEYjI1MFpXNTBURzloWkdWa0p5d2dKM0psWVdSNWMzUmhkR1ZqYUdGdVoyVW5MQ0FuWlhKeWIzSW5MQ0FuWVdKdmNuUW5MQ0FuYzJOeWIyeHNKMTBwTzF4dUx5b3FYRzRnS2lBdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMxY2JpQXFJRkJ5YVhaaGRHVWdiV1YwYUc5a2MxeHVJQ29nTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0WEc0Z0tpOWNibHh1Wm5WdVkzUnBiMjRnWjJWMFZXbGtSWFpsYm5Rb1pXeGxiV1Z1ZEN3Z2RXbGtLU0I3WEc0Z0lISmxkSFZ5YmlCMWFXUWdKaVlnWUNSN2RXbGtmVG82Skh0MWFXUkZkbVZ1ZENzcmZXQWdmSHdnWld4bGJXVnVkQzUxYVdSRmRtVnVkQ0I4ZkNCMWFXUkZkbVZ1ZENzck8xeHVmVnh1WEc1bWRXNWpkR2x2YmlCblpYUkZkbVZ1ZENobGJHVnRaVzUwS1NCN1hHNGdJR052Ym5OMElIVnBaQ0E5SUdkbGRGVnBaRVYyWlc1MEtHVnNaVzFsYm5RcE8xeHVJQ0JsYkdWdFpXNTBMblZwWkVWMlpXNTBJRDBnZFdsa08xeHVJQ0JsZG1WdWRGSmxaMmx6ZEhKNVczVnBaRjBnUFNCbGRtVnVkRkpsWjJsemRISjVXM1ZwWkYwZ2ZId2dlMzA3WEc0Z0lISmxkSFZ5YmlCbGRtVnVkRkpsWjJsemRISjVXM1ZwWkYwN1hHNTlYRzVjYm1aMWJtTjBhVzl1SUdKdmIzUnpkSEpoY0VoaGJtUnNaWElvWld4bGJXVnVkQ3dnWm00cElIdGNiaUFnY21WMGRYSnVJR1oxYm1OMGFXOXVJR2hoYm1Sc1pYSW9aWFpsYm5RcElIdGNiaUFnSUNCbGRtVnVkQzVrWld4bFoyRjBaVlJoY21kbGRDQTlJR1ZzWlcxbGJuUTdYRzVjYmlBZ0lDQnBaaUFvYUdGdVpHeGxjaTV2Ym1WUFptWXBJSHRjYmlBZ0lDQWdJRVYyWlc1MFNHRnVaR3hsY2k1dlptWW9aV3hsYldWdWRDd2daWFpsYm5RdWRIbHdaU3dnWm00cE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUhKbGRIVnliaUJtYmk1aGNIQnNlU2hsYkdWdFpXNTBMQ0JiWlhabGJuUmRLVHRjYmlBZ2ZUdGNibjFjYmx4dVpuVnVZM1JwYjI0Z1ltOXZkSE4wY21Gd1JHVnNaV2RoZEdsdmJraGhibVJzWlhJb1pXeGxiV1Z1ZEN3Z2MyVnNaV04wYjNJc0lHWnVLU0I3WEc0Z0lISmxkSFZ5YmlCbWRXNWpkR2x2YmlCb1lXNWtiR1Z5S0dWMlpXNTBLU0I3WEc0Z0lDQWdZMjl1YzNRZ1pHOXRSV3hsYldWdWRITWdQU0JsYkdWdFpXNTBMbkYxWlhKNVUyVnNaV04wYjNKQmJHd29jMlZzWldOMGIzSXBPMXh1WEc0Z0lDQWdabTl5SUNoc1pYUWdlMXh1SUNBZ0lDQWdkR0Z5WjJWMFhHNGdJQ0FnZlNBOUlHVjJaVzUwT3lCMFlYSm5aWFFnSmlZZ2RHRnlaMlYwSUNFOVBTQjBhR2x6T3lCMFlYSm5aWFFnUFNCMFlYSm5aWFF1Y0dGeVpXNTBUbTlrWlNrZ2UxeHVJQ0FnSUNBZ1ptOXlJQ2hzWlhRZ2FTQTlJR1J2YlVWc1pXMWxiblJ6TG14bGJtZDBhRHNnYVMwdE95a2dlMXh1SUNBZ0lDQWdJQ0JwWmlBb1pHOXRSV3hsYldWdWRITmJhVjBnUFQwOUlIUmhjbWRsZENrZ2UxeHVJQ0FnSUNBZ0lDQWdJR1YyWlc1MExtUmxiR1ZuWVhSbFZHRnlaMlYwSUQwZ2RHRnlaMlYwTzF4dVhHNGdJQ0FnSUNBZ0lDQWdhV1lnS0doaGJtUnNaWEl1YjI1bFQyWm1LU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQkZkbVZ1ZEVoaGJtUnNaWEl1YjJabUtHVnNaVzFsYm5Rc0lHVjJaVzUwTG5SNWNHVXNJSE5sYkdWamRHOXlMQ0JtYmlrN1hHNGdJQ0FnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdadUxtRndjR3g1S0hSaGNtZGxkQ3dnVzJWMlpXNTBYU2s3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUgxY2JpQWdJQ0I5SUM4dklGUnZJSEJzWldGelpTQkZVMHhwYm5SY2JseHVYRzRnSUNBZ2NtVjBkWEp1SUc1MWJHdzdYRzRnSUgwN1hHNTlYRzVjYm1aMWJtTjBhVzl1SUdacGJtUklZVzVrYkdWeUtHVjJaVzUwY3l3Z2FHRnVaR3hsY2l3Z1pHVnNaV2RoZEdsdmJsTmxiR1ZqZEc5eUlEMGdiblZzYkNrZ2UxeHVJQ0JqYjI1emRDQjFhV1JGZG1WdWRFeHBjM1FnUFNCUFltcGxZM1F1YTJWNWN5aGxkbVZ1ZEhNcE8xeHVYRzRnSUdadmNpQW9iR1YwSUdrZ1BTQXdMQ0JzWlc0Z1BTQjFhV1JGZG1WdWRFeHBjM1F1YkdWdVozUm9PeUJwSUR3Z2JHVnVPeUJwS3lzcElIdGNiaUFnSUNCamIyNXpkQ0JsZG1WdWRDQTlJR1YyWlc1MGMxdDFhV1JGZG1WdWRFeHBjM1JiYVYxZE8xeHVYRzRnSUNBZ2FXWWdLR1YyWlc1MExtOXlhV2RwYm1Gc1NHRnVaR3hsY2lBOVBUMGdhR0Z1Wkd4bGNpQW1KaUJsZG1WdWRDNWtaV3hsWjJGMGFXOXVVMlZzWldOMGIzSWdQVDA5SUdSbGJHVm5ZWFJwYjI1VFpXeGxZM1J2Y2lrZ2UxeHVJQ0FnSUNBZ2NtVjBkWEp1SUdWMlpXNTBPMXh1SUNBZ0lIMWNiaUFnZlZ4dVhHNGdJSEpsZEhWeWJpQnVkV3hzTzF4dWZWeHVYRzVtZFc1amRHbHZiaUJ1YjNKdFlXeHBlbVZRWVhKaGJYTW9iM0pwWjJsdVlXeFVlWEJsUlhabGJuUXNJR2hoYm1Sc1pYSXNJR1JsYkdWbllYUnBiMjVHYmlrZ2UxeHVJQ0JqYjI1emRDQmtaV3hsWjJGMGFXOXVJRDBnZEhsd1pXOW1JR2hoYm1Sc1pYSWdQVDA5SUNkemRISnBibWNuTzF4dUlDQmpiMjV6ZENCdmNtbG5hVzVoYkVoaGJtUnNaWElnUFNCa1pXeGxaMkYwYVc5dUlEOGdaR1ZzWldkaGRHbHZia1p1SURvZ2FHRnVaR3hsY2p0Y2JpQWdiR1YwSUhSNWNHVkZkbVZ1ZENBOUlHZGxkRlI1Y0dWRmRtVnVkQ2h2Y21sbmFXNWhiRlI1Y0dWRmRtVnVkQ2s3WEc0Z0lHTnZibk4wSUdselRtRjBhWFpsSUQwZ2JtRjBhWFpsUlhabGJuUnpMbWhoY3loMGVYQmxSWFpsYm5RcE8xeHVYRzRnSUdsbUlDZ2hhWE5PWVhScGRtVXBJSHRjYmlBZ0lDQjBlWEJsUlhabGJuUWdQU0J2Y21sbmFXNWhiRlI1Y0dWRmRtVnVkRHRjYmlBZ2ZWeHVYRzRnSUhKbGRIVnliaUJiWkdWc1pXZGhkR2x2Yml3Z2IzSnBaMmx1WVd4SVlXNWtiR1Z5TENCMGVYQmxSWFpsYm5SZE8xeHVmVnh1WEc1bWRXNWpkR2x2YmlCaFpHUklZVzVrYkdWeUtHVnNaVzFsYm5Rc0lHOXlhV2RwYm1Gc1ZIbHdaVVYyWlc1MExDQm9ZVzVrYkdWeUxDQmtaV3hsWjJGMGFXOXVSbTRzSUc5dVpVOW1aaWtnZTF4dUlDQnBaaUFvZEhsd1pXOW1JRzl5YVdkcGJtRnNWSGx3WlVWMlpXNTBJQ0U5UFNBbmMzUnlhVzVuSnlCOGZDQWhaV3hsYldWdWRDa2dlMXh1SUNBZ0lISmxkSFZ5Ymp0Y2JpQWdmVnh1WEc0Z0lHbG1JQ2doYUdGdVpHeGxjaWtnZTF4dUlDQWdJR2hoYm1Sc1pYSWdQU0JrWld4bFoyRjBhVzl1Um00N1hHNGdJQ0FnWkdWc1pXZGhkR2x2YmtadUlEMGdiblZzYkR0Y2JpQWdmU0F2THlCcGJpQmpZWE5sSUc5bUlHMXZkWE5sWlc1MFpYSWdiM0lnYlc5MWMyVnNaV0YyWlNCM2NtRndJSFJvWlNCb1lXNWtiR1Z5SUhkcGRHaHBiaUJoSUdaMWJtTjBhVzl1SUhSb1lYUWdZMmhsWTJ0eklHWnZjaUJwZEhNZ1JFOU5JSEJ2YzJsMGFXOXVYRzRnSUM4dklIUm9hWE1nY0hKbGRtVnVkSE1nZEdobElHaGhibVJzWlhJZ1puSnZiU0JpWldsdVp5QmthWE53WVhSamFHVmtJSFJvWlNCellXMWxJSGRoZVNCaGN5QnRiM1Z6Wlc5MlpYSWdiM0lnYlc5MWMyVnZkWFFnWkc5bGMxeHVYRzVjYmlBZ2FXWWdLR04xYzNSdmJVVjJaVzUwYzFKbFoyVjRMblJsYzNRb2IzSnBaMmx1WVd4VWVYQmxSWFpsYm5RcEtTQjdYRzRnSUNBZ1kyOXVjM1FnZDNKaGNFWnVJRDBnWm00Z1BUNGdlMXh1SUNBZ0lDQWdjbVYwZFhKdUlHWjFibU4wYVc5dUlDaGxkbVZ1ZENrZ2UxeHVJQ0FnSUNBZ0lDQnBaaUFvSVdWMlpXNTBMbkpsYkdGMFpXUlVZWEpuWlhRZ2ZId2daWFpsYm5RdWNtVnNZWFJsWkZSaGNtZGxkQ0FoUFQwZ1pYWmxiblF1WkdWc1pXZGhkR1ZVWVhKblpYUWdKaVlnSVdWMlpXNTBMbVJsYkdWbllYUmxWR0Z5WjJWMExtTnZiblJoYVc1ektHVjJaVzUwTG5KbGJHRjBaV1JVWVhKblpYUXBLU0I3WEc0Z0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdadUxtTmhiR3dvZEdocGN5d2daWFpsYm5RcE8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQjlPMXh1SUNBZ0lIMDdYRzVjYmlBZ0lDQnBaaUFvWkdWc1pXZGhkR2x2YmtadUtTQjdYRzRnSUNBZ0lDQmtaV3hsWjJGMGFXOXVSbTRnUFNCM2NtRndSbTRvWkdWc1pXZGhkR2x2YmtadUtUdGNiaUFnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnYUdGdVpHeGxjaUE5SUhkeVlYQkdiaWhvWVc1a2JHVnlLVHRjYmlBZ0lDQjlYRzRnSUgxY2JseHVJQ0JqYjI1emRDQmJaR1ZzWldkaGRHbHZiaXdnYjNKcFoybHVZV3hJWVc1a2JHVnlMQ0IwZVhCbFJYWmxiblJkSUQwZ2JtOXliV0ZzYVhwbFVHRnlZVzF6S0c5eWFXZHBibUZzVkhsd1pVVjJaVzUwTENCb1lXNWtiR1Z5TENCa1pXeGxaMkYwYVc5dVJtNHBPMXh1SUNCamIyNXpkQ0JsZG1WdWRITWdQU0JuWlhSRmRtVnVkQ2hsYkdWdFpXNTBLVHRjYmlBZ1kyOXVjM1FnYUdGdVpHeGxjbk1nUFNCbGRtVnVkSE5iZEhsd1pVVjJaVzUwWFNCOGZDQW9aWFpsYm5SelczUjVjR1ZGZG1WdWRGMGdQU0I3ZlNrN1hHNGdJR052Ym5OMElIQnlaWFpwYjNWelJtNGdQU0JtYVc1a1NHRnVaR3hsY2lob1lXNWtiR1Z5Y3l3Z2IzSnBaMmx1WVd4SVlXNWtiR1Z5TENCa1pXeGxaMkYwYVc5dUlEOGdhR0Z1Wkd4bGNpQTZJRzUxYkd3cE8xeHVYRzRnSUdsbUlDaHdjbVYyYVc5MWMwWnVLU0I3WEc0Z0lDQWdjSEpsZG1sdmRYTkdiaTV2Ym1WUFptWWdQU0J3Y21WMmFXOTFjMFp1TG05dVpVOW1aaUFtSmlCdmJtVlBabVk3WEc0Z0lDQWdjbVYwZFhKdU8xeHVJQ0I5WEc1Y2JpQWdZMjl1YzNRZ2RXbGtJRDBnWjJWMFZXbGtSWFpsYm5Rb2IzSnBaMmx1WVd4SVlXNWtiR1Z5TENCdmNtbG5hVzVoYkZSNWNHVkZkbVZ1ZEM1eVpYQnNZV05sS0c1aGJXVnpjR0ZqWlZKbFoyVjRMQ0FuSnlrcE8xeHVJQ0JqYjI1emRDQm1iaUE5SUdSbGJHVm5ZWFJwYjI0Z1B5QmliMjkwYzNSeVlYQkVaV3hsWjJGMGFXOXVTR0Z1Wkd4bGNpaGxiR1Z0Wlc1MExDQm9ZVzVrYkdWeUxDQmtaV3hsWjJGMGFXOXVSbTRwSURvZ1ltOXZkSE4wY21Gd1NHRnVaR3hsY2lobGJHVnRaVzUwTENCb1lXNWtiR1Z5S1R0Y2JpQWdabTR1WkdWc1pXZGhkR2x2YmxObGJHVmpkRzl5SUQwZ1pHVnNaV2RoZEdsdmJpQS9JR2hoYm1Sc1pYSWdPaUJ1ZFd4c08xeHVJQ0JtYmk1dmNtbG5hVzVoYkVoaGJtUnNaWElnUFNCdmNtbG5hVzVoYkVoaGJtUnNaWEk3WEc0Z0lHWnVMbTl1WlU5bVppQTlJRzl1WlU5bVpqdGNiaUFnWm00dWRXbGtSWFpsYm5RZ1BTQjFhV1E3WEc0Z0lHaGhibVJzWlhKelczVnBaRjBnUFNCbWJqdGNiaUFnWld4bGJXVnVkQzVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLSFI1Y0dWRmRtVnVkQ3dnWm00c0lHUmxiR1ZuWVhScGIyNHBPMXh1ZlZ4dVhHNW1kVzVqZEdsdmJpQnlaVzF2ZG1WSVlXNWtiR1Z5S0dWc1pXMWxiblFzSUdWMlpXNTBjeXdnZEhsd1pVVjJaVzUwTENCb1lXNWtiR1Z5TENCa1pXeGxaMkYwYVc5dVUyVnNaV04wYjNJcElIdGNiaUFnWTI5dWMzUWdabTRnUFNCbWFXNWtTR0Z1Wkd4bGNpaGxkbVZ1ZEhOYmRIbHdaVVYyWlc1MFhTd2dhR0Z1Wkd4bGNpd2daR1ZzWldkaGRHbHZibE5sYkdWamRHOXlLVHRjYmx4dUlDQnBaaUFvSVdadUtTQjdYRzRnSUNBZ2NtVjBkWEp1TzF4dUlDQjlYRzVjYmlBZ1pXeGxiV1Z1ZEM1eVpXMXZkbVZGZG1WdWRFeHBjM1JsYm1WeUtIUjVjR1ZGZG1WdWRDd2dabTRzSUVKdmIyeGxZVzRvWkdWc1pXZGhkR2x2YmxObGJHVmpkRzl5S1NrN1hHNGdJR1JsYkdWMFpTQmxkbVZ1ZEhOYmRIbHdaVVYyWlc1MFhWdG1iaTUxYVdSRmRtVnVkRjA3WEc1OVhHNWNibVoxYm1OMGFXOXVJSEpsYlc5MlpVNWhiV1Z6Y0dGalpXUklZVzVrYkdWeWN5aGxiR1Z0Wlc1MExDQmxkbVZ1ZEhNc0lIUjVjR1ZGZG1WdWRDd2dibUZ0WlhOd1lXTmxLU0I3WEc0Z0lHTnZibk4wSUhOMGIzSmxSV3hsYldWdWRFVjJaVzUwSUQwZ1pYWmxiblJ6VzNSNWNHVkZkbVZ1ZEYwZ2ZId2dlMzA3WEc0Z0lFOWlhbVZqZEM1clpYbHpLSE4wYjNKbFJXeGxiV1Z1ZEVWMlpXNTBLUzVtYjNKRllXTm9LR2hoYm1Sc1pYSkxaWGtnUFQ0Z2UxeHVJQ0FnSUdsbUlDaG9ZVzVrYkdWeVMyVjVMbWx1WTJ4MVpHVnpLRzVoYldWemNHRmpaU2twSUh0Y2JpQWdJQ0FnSUdOdmJuTjBJR1YyWlc1MElEMGdjM1J2Y21WRmJHVnRaVzUwUlhabGJuUmJhR0Z1Wkd4bGNrdGxlVjA3WEc0Z0lDQWdJQ0J5WlcxdmRtVklZVzVrYkdWeUtHVnNaVzFsYm5Rc0lHVjJaVzUwY3l3Z2RIbHdaVVYyWlc1MExDQmxkbVZ1ZEM1dmNtbG5hVzVoYkVoaGJtUnNaWElzSUdWMlpXNTBMbVJsYkdWbllYUnBiMjVUWld4bFkzUnZjaWs3WEc0Z0lDQWdmVnh1SUNCOUtUdGNibjFjYmx4dVpuVnVZM1JwYjI0Z1oyVjBWSGx3WlVWMlpXNTBLR1YyWlc1MEtTQjdYRzRnSUM4dklHRnNiRzkzSUhSdklHZGxkQ0IwYUdVZ2JtRjBhWFpsSUdWMlpXNTBjeUJtY205dElHNWhiV1Z6Y0dGalpXUWdaWFpsYm5SeklDZ25ZMnhwWTJzdVluTXVZblYwZEc5dUp5QXRMVDRnSjJOc2FXTnJKeWxjYmlBZ1pYWmxiblFnUFNCbGRtVnVkQzV5WlhCc1lXTmxLSE4wY21sd1RtRnRaVkpsWjJWNExDQW5KeWs3WEc0Z0lISmxkSFZ5YmlCamRYTjBiMjFGZG1WdWRITmJaWFpsYm5SZElIeDhJR1YyWlc1ME8xeHVmVnh1WEc1amIyNXpkQ0JGZG1WdWRFaGhibVJzWlhJZ1BTQjdYRzRnSUc5dUtHVnNaVzFsYm5Rc0lHVjJaVzUwTENCb1lXNWtiR1Z5TENCa1pXeGxaMkYwYVc5dVJtNHBJSHRjYmlBZ0lDQmhaR1JJWVc1a2JHVnlLR1ZzWlcxbGJuUXNJR1YyWlc1MExDQm9ZVzVrYkdWeUxDQmtaV3hsWjJGMGFXOXVSbTRzSUdaaGJITmxLVHRjYmlBZ2ZTeGNibHh1SUNCdmJtVW9aV3hsYldWdWRDd2daWFpsYm5Rc0lHaGhibVJzWlhJc0lHUmxiR1ZuWVhScGIyNUdiaWtnZTF4dUlDQWdJR0ZrWkVoaGJtUnNaWElvWld4bGJXVnVkQ3dnWlhabGJuUXNJR2hoYm1Sc1pYSXNJR1JsYkdWbllYUnBiMjVHYml3Z2RISjFaU2s3WEc0Z0lIMHNYRzVjYmlBZ2IyWm1LR1ZzWlcxbGJuUXNJRzl5YVdkcGJtRnNWSGx3WlVWMlpXNTBMQ0JvWVc1a2JHVnlMQ0JrWld4bFoyRjBhVzl1Um00cElIdGNiaUFnSUNCcFppQW9kSGx3Wlc5bUlHOXlhV2RwYm1Gc1ZIbHdaVVYyWlc1MElDRTlQU0FuYzNSeWFXNW5KeUI4ZkNBaFpXeGxiV1Z1ZENrZ2UxeHVJQ0FnSUNBZ2NtVjBkWEp1TzF4dUlDQWdJSDFjYmx4dUlDQWdJR052Ym5OMElGdGtaV3hsWjJGMGFXOXVMQ0J2Y21sbmFXNWhiRWhoYm1Sc1pYSXNJSFI1Y0dWRmRtVnVkRjBnUFNCdWIzSnRZV3hwZW1WUVlYSmhiWE1vYjNKcFoybHVZV3hVZVhCbFJYWmxiblFzSUdoaGJtUnNaWElzSUdSbGJHVm5ZWFJwYjI1R2JpazdYRzRnSUNBZ1kyOXVjM1FnYVc1T1lXMWxjM0JoWTJVZ1BTQjBlWEJsUlhabGJuUWdJVDA5SUc5eWFXZHBibUZzVkhsd1pVVjJaVzUwTzF4dUlDQWdJR052Ym5OMElHVjJaVzUwY3lBOUlHZGxkRVYyWlc1MEtHVnNaVzFsYm5RcE8xeHVJQ0FnSUdOdmJuTjBJR2x6VG1GdFpYTndZV05sSUQwZ2IzSnBaMmx1WVd4VWVYQmxSWFpsYm5RdWMzUmhjblJ6VjJsMGFDZ25MaWNwTzF4dVhHNGdJQ0FnYVdZZ0tIUjVjR1Z2WmlCdmNtbG5hVzVoYkVoaGJtUnNaWElnSVQwOUlDZDFibVJsWm1sdVpXUW5LU0I3WEc0Z0lDQWdJQ0F2THlCVGFXMXdiR1Z6ZENCallYTmxPaUJvWVc1a2JHVnlJR2x6SUhCaGMzTmxaQ3dnY21WdGIzWmxJSFJvWVhRZ2JHbHpkR1Z1WlhJZ1QwNU1XUzVjYmlBZ0lDQWdJR2xtSUNnaFpYWmxiblJ6SUh4OElDRmxkbVZ1ZEhOYmRIbHdaVVYyWlc1MFhTa2dlMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNDdYRzRnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJSEpsYlc5MlpVaGhibVJzWlhJb1pXeGxiV1Z1ZEN3Z1pYWmxiblJ6TENCMGVYQmxSWFpsYm5Rc0lHOXlhV2RwYm1Gc1NHRnVaR3hsY2l3Z1pHVnNaV2RoZEdsdmJpQS9JR2hoYm1Sc1pYSWdPaUJ1ZFd4c0tUdGNiaUFnSUNBZ0lISmxkSFZ5Ymp0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JwWmlBb2FYTk9ZVzFsYzNCaFkyVXBJSHRjYmlBZ0lDQWdJRTlpYW1WamRDNXJaWGx6S0dWMlpXNTBjeWt1Wm05eVJXRmphQ2hsYkdWdFpXNTBSWFpsYm5RZ1BUNGdlMXh1SUNBZ0lDQWdJQ0J5WlcxdmRtVk9ZVzFsYzNCaFkyVmtTR0Z1Wkd4bGNuTW9aV3hsYldWdWRDd2daWFpsYm5SekxDQmxiR1Z0Wlc1MFJYWmxiblFzSUc5eWFXZHBibUZzVkhsd1pVVjJaVzUwTG5Oc2FXTmxLREVwS1R0Y2JpQWdJQ0FnSUgwcE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUdOdmJuTjBJSE4wYjNKbFJXeGxiV1Z1ZEVWMlpXNTBJRDBnWlhabGJuUnpXM1I1Y0dWRmRtVnVkRjBnZkh3Z2UzMDdYRzRnSUNBZ1QySnFaV04wTG10bGVYTW9jM1J2Y21WRmJHVnRaVzUwUlhabGJuUXBMbVp2Y2tWaFkyZ29hMlY1U0dGdVpHeGxjbk1nUFQ0Z2UxeHVJQ0FnSUNBZ1kyOXVjM1FnYUdGdVpHeGxja3RsZVNBOUlHdGxlVWhoYm1Sc1pYSnpMbkpsY0d4aFkyVW9jM1J5YVhCVmFXUlNaV2RsZUN3Z0p5Y3BPMXh1WEc0Z0lDQWdJQ0JwWmlBb0lXbHVUbUZ0WlhOd1lXTmxJSHg4SUc5eWFXZHBibUZzVkhsd1pVVjJaVzUwTG1sdVkyeDFaR1Z6S0doaGJtUnNaWEpMWlhrcEtTQjdYRzRnSUNBZ0lDQWdJR052Ym5OMElHVjJaVzUwSUQwZ2MzUnZjbVZGYkdWdFpXNTBSWFpsYm5SYmEyVjVTR0Z1Wkd4bGNuTmRPMXh1SUNBZ0lDQWdJQ0J5WlcxdmRtVklZVzVrYkdWeUtHVnNaVzFsYm5Rc0lHVjJaVzUwY3l3Z2RIbHdaVVYyWlc1MExDQmxkbVZ1ZEM1dmNtbG5hVzVoYkVoaGJtUnNaWElzSUdWMlpXNTBMbVJsYkdWbllYUnBiMjVUWld4bFkzUnZjaWs3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmU2s3WEc0Z0lIMHNYRzVjYmlBZ2RISnBaMmRsY2lobGJHVnRaVzUwTENCbGRtVnVkQ3dnWVhKbmN5a2dlMXh1SUNBZ0lHbG1JQ2gwZVhCbGIyWWdaWFpsYm5RZ0lUMDlJQ2R6ZEhKcGJtY25JSHg4SUNGbGJHVnRaVzUwS1NCN1hHNGdJQ0FnSUNCeVpYUjFjbTRnYm5Wc2JEdGNiaUFnSUNCOVhHNWNiaUFnSUNCamIyNXpkQ0FrSUQwZ1oyVjBhbEYxWlhKNUtDazdYRzRnSUNBZ1kyOXVjM1FnZEhsd1pVVjJaVzUwSUQwZ1oyVjBWSGx3WlVWMlpXNTBLR1YyWlc1MEtUdGNiaUFnSUNCamIyNXpkQ0JwYms1aGJXVnpjR0ZqWlNBOUlHVjJaVzUwSUNFOVBTQjBlWEJsUlhabGJuUTdYRzRnSUNBZ1kyOXVjM1FnYVhOT1lYUnBkbVVnUFNCdVlYUnBkbVZGZG1WdWRITXVhR0Z6S0hSNWNHVkZkbVZ1ZENrN1hHNGdJQ0FnYkdWMElHcFJkV1Z5ZVVWMlpXNTBPMXh1SUNBZ0lHeGxkQ0JpZFdKaWJHVnpJRDBnZEhKMVpUdGNiaUFnSUNCc1pYUWdibUYwYVhabFJHbHpjR0YwWTJnZ1BTQjBjblZsTzF4dUlDQWdJR3hsZENCa1pXWmhkV3gwVUhKbGRtVnVkR1ZrSUQwZ1ptRnNjMlU3WEc0Z0lDQWdiR1YwSUdWMmRDQTlJRzUxYkd3N1hHNWNiaUFnSUNCcFppQW9hVzVPWVcxbGMzQmhZMlVnSmlZZ0pDa2dlMXh1SUNBZ0lDQWdhbEYxWlhKNVJYWmxiblFnUFNBa0xrVjJaVzUwS0dWMlpXNTBMQ0JoY21kektUdGNiaUFnSUNBZ0lDUW9aV3hsYldWdWRDa3VkSEpwWjJkbGNpaHFVWFZsY25sRmRtVnVkQ2s3WEc0Z0lDQWdJQ0JpZFdKaWJHVnpJRDBnSVdwUmRXVnllVVYyWlc1MExtbHpVSEp2Y0dGbllYUnBiMjVUZEc5d2NHVmtLQ2s3WEc0Z0lDQWdJQ0J1WVhScGRtVkVhWE53WVhSamFDQTlJQ0ZxVVhWbGNubEZkbVZ1ZEM1cGMwbHRiV1ZrYVdGMFpWQnliM0JoWjJGMGFXOXVVM1J2Y0hCbFpDZ3BPMXh1SUNBZ0lDQWdaR1ZtWVhWc2RGQnlaWFpsYm5SbFpDQTlJR3BSZFdWeWVVVjJaVzUwTG1selJHVm1ZWFZzZEZCeVpYWmxiblJsWkNncE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUdsbUlDaHBjMDVoZEdsMlpTa2dlMXh1SUNBZ0lDQWdaWFowSUQwZ1pHOWpkVzFsYm5RdVkzSmxZWFJsUlhabGJuUW9KMGhVVFV4RmRtVnVkSE1uS1R0Y2JpQWdJQ0FnSUdWMmRDNXBibWwwUlhabGJuUW9kSGx3WlVWMlpXNTBMQ0JpZFdKaWJHVnpMQ0IwY25WbEtUdGNiaUFnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnWlhaMElEMGdibVYzSUVOMWMzUnZiVVYyWlc1MEtHVjJaVzUwTENCN1hHNGdJQ0FnSUNBZ0lHSjFZbUpzWlhNc1hHNGdJQ0FnSUNBZ0lHTmhibU5sYkdGaWJHVTZJSFJ5ZFdWY2JpQWdJQ0FnSUgwcE8xeHVJQ0FnSUgwZ0x5OGdiV1Z5WjJVZ1kzVnpkRzl0SUdsdVptOXliV0YwYVc5dUlHbHVJRzkxY2lCbGRtVnVkRnh1WEc1Y2JpQWdJQ0JwWmlBb2RIbHdaVzltSUdGeVozTWdJVDA5SUNkMWJtUmxabWx1WldRbktTQjdYRzRnSUNBZ0lDQlBZbXBsWTNRdWEyVjVjeWhoY21kektTNW1iM0pGWVdOb0tHdGxlU0E5UGlCN1hHNGdJQ0FnSUNBZ0lFOWlhbVZqZEM1a1pXWnBibVZRY205d1pYSjBlU2hsZG5Rc0lHdGxlU3dnZTF4dUlDQWdJQ0FnSUNBZ0lHZGxkQ2dwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmhjbWR6VzJ0bGVWMDdYRzRnSUNBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lIMHBPMXh1SUNBZ0lDQWdmU2s3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdhV1lnS0dSbFptRjFiSFJRY21WMlpXNTBaV1FwSUh0Y2JpQWdJQ0FnSUdWMmRDNXdjbVYyWlc1MFJHVm1ZWFZzZENncE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUdsbUlDaHVZWFJwZG1WRWFYTndZWFJqYUNrZ2UxeHVJQ0FnSUNBZ1pXeGxiV1Z1ZEM1a2FYTndZWFJqYUVWMlpXNTBLR1YyZENrN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnYVdZZ0tHVjJkQzVrWldaaGRXeDBVSEpsZG1WdWRHVmtJQ1ltSUhSNWNHVnZaaUJxVVhWbGNubEZkbVZ1ZENBaFBUMGdKM1Z1WkdWbWFXNWxaQ2NwSUh0Y2JpQWdJQ0FnSUdwUmRXVnllVVYyWlc1MExuQnlaWFpsYm5SRVpXWmhkV3gwS0NrN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnY21WMGRYSnVJR1YyZER0Y2JpQWdmVnh1WEc1OU8xeHVYRzR2S2lwY2JpQXFJQzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0WEc0Z0tpQkNiMjkwYzNSeVlYQWdLSFkxTGpFdU15azZJR1J2YlM5a1lYUmhMbXB6WEc0Z0tpQk1hV05sYm5ObFpDQjFibVJsY2lCTlNWUWdLR2gwZEhCek9pOHZaMmwwYUhWaUxtTnZiUzkwZDJKekwySnZiM1J6ZEhKaGNDOWliRzlpTDIxaGFXNHZURWxEUlU1VFJTbGNiaUFxSUMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdFhHNGdLaTljYmx4dUx5b3FYRzRnS2lBdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMxY2JpQXFJRU52Ym5OMFlXNTBjMXh1SUNvZ0xTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdFhHNGdLaTljYm1OdmJuTjBJR1ZzWlcxbGJuUk5ZWEFnUFNCdVpYY2dUV0Z3S0NrN1hHNWpiMjV6ZENCRVlYUmhJRDBnZTF4dUlDQnpaWFFvWld4bGJXVnVkQ3dnYTJWNUxDQnBibk4wWVc1alpTa2dlMXh1SUNBZ0lHbG1JQ2doWld4bGJXVnVkRTFoY0M1b1lYTW9aV3hsYldWdWRDa3BJSHRjYmlBZ0lDQWdJR1ZzWlcxbGJuUk5ZWEF1YzJWMEtHVnNaVzFsYm5Rc0lHNWxkeUJOWVhBb0tTazdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ1kyOXVjM1FnYVc1emRHRnVZMlZOWVhBZ1BTQmxiR1Z0Wlc1MFRXRndMbWRsZENobGJHVnRaVzUwS1RzZ0x5OGdiV0ZyWlNCcGRDQmpiR1ZoY2lCM1pTQnZibXg1SUhkaGJuUWdiMjVsSUdsdWMzUmhibU5sSUhCbGNpQmxiR1Z0Wlc1MFhHNGdJQ0FnTHk4Z1kyRnVJR0psSUhKbGJXOTJaV1FnYkdGMFpYSWdkMmhsYmlCdGRXeDBhWEJzWlNCclpYa3ZhVzV6ZEdGdVkyVnpJR0Z5WlNCbWFXNWxJSFJ2SUdKbElIVnpaV1JjYmx4dUlDQWdJR2xtSUNnaGFXNXpkR0Z1WTJWTllYQXVhR0Z6S0d0bGVTa2dKaVlnYVc1emRHRnVZMlZOWVhBdWMybDZaU0FoUFQwZ01Da2dlMXh1SUNBZ0lDQWdMeThnWlhOc2FXNTBMV1JwYzJGaWJHVXRibVY0ZEMxc2FXNWxJRzV2TFdOdmJuTnZiR1ZjYmlBZ0lDQWdJR052Ym5OdmJHVXVaWEp5YjNJb1lFSnZiM1J6ZEhKaGNDQmtiMlZ6YmlkMElHRnNiRzkzSUcxdmNtVWdkR2hoYmlCdmJtVWdhVzV6ZEdGdVkyVWdjR1Z5SUdWc1pXMWxiblF1SUVKdmRXNWtJR2x1YzNSaGJtTmxPaUFrZTBGeWNtRjVMbVp5YjIwb2FXNXpkR0Z1WTJWTllYQXVhMlY1Y3lncEtWc3dYWDB1WUNrN1hHNGdJQ0FnSUNCeVpYUjFjbTQ3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdhVzV6ZEdGdVkyVk5ZWEF1YzJWMEtHdGxlU3dnYVc1emRHRnVZMlVwTzF4dUlDQjlMRnh1WEc0Z0lHZGxkQ2hsYkdWdFpXNTBMQ0JyWlhrcElIdGNiaUFnSUNCcFppQW9aV3hsYldWdWRFMWhjQzVvWVhNb1pXeGxiV1Z1ZENrcElIdGNiaUFnSUNBZ0lISmxkSFZ5YmlCbGJHVnRaVzUwVFdGd0xtZGxkQ2hsYkdWdFpXNTBLUzVuWlhRb2EyVjVLU0I4ZkNCdWRXeHNPMXh1SUNBZ0lIMWNibHh1SUNBZ0lISmxkSFZ5YmlCdWRXeHNPMXh1SUNCOUxGeHVYRzRnSUhKbGJXOTJaU2hsYkdWdFpXNTBMQ0JyWlhrcElIdGNiaUFnSUNCcFppQW9JV1ZzWlcxbGJuUk5ZWEF1YUdGektHVnNaVzFsYm5RcEtTQjdYRzRnSUNBZ0lDQnlaWFIxY200N1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnWTI5dWMzUWdhVzV6ZEdGdVkyVk5ZWEFnUFNCbGJHVnRaVzUwVFdGd0xtZGxkQ2hsYkdWdFpXNTBLVHRjYmlBZ0lDQnBibk4wWVc1alpVMWhjQzVrWld4bGRHVW9hMlY1S1RzZ0x5OGdabkpsWlNCMWNDQmxiR1Z0Wlc1MElISmxabVZ5Wlc1alpYTWdhV1lnZEdobGNtVWdZWEpsSUc1dklHbHVjM1JoYm1ObGN5QnNaV1owSUdadmNpQmhiaUJsYkdWdFpXNTBYRzVjYmlBZ0lDQnBaaUFvYVc1emRHRnVZMlZOWVhBdWMybDZaU0E5UFQwZ01Da2dlMXh1SUNBZ0lDQWdaV3hsYldWdWRFMWhjQzVrWld4bGRHVW9aV3hsYldWdWRDazdYRzRnSUNBZ2ZWeHVJQ0I5WEc1Y2JuMDdYRzVjYmk4cUtseHVJQ29nTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMxY2JpQXFJRUp2YjNSemRISmhjQ0FvZGpVdU1TNHpLVG9nWW1GelpTMWpiMjF3YjI1bGJuUXVhbk5jYmlBcUlFeHBZMlZ1YzJWa0lIVnVaR1Z5SUUxSlZDQW9hSFIwY0hNNkx5OW5hWFJvZFdJdVkyOXRMM1IzWW5NdlltOXZkSE4wY21Gd0wySnNiMkl2YldGcGJpOU1TVU5GVGxORktWeHVJQ29nTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMxY2JpQXFMMXh1THlvcVhHNGdLaUF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzFjYmlBcUlFTnZibk4wWVc1MGMxeHVJQ29nTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0WEc0Z0tpOWNibHh1WTI5dWMzUWdWa1ZTVTBsUFRpQTlJQ2MxTGpFdU15YzdYRzVjYm1Oc1lYTnpJRUpoYzJWRGIyMXdiMjVsYm5RZ2UxeHVJQ0JqYjI1emRISjFZM1J2Y2lobGJHVnRaVzUwS1NCN1hHNGdJQ0FnWld4bGJXVnVkQ0E5SUdkbGRFVnNaVzFsYm5Rb1pXeGxiV1Z1ZENrN1hHNWNiaUFnSUNCcFppQW9JV1ZzWlcxbGJuUXBJSHRjYmlBZ0lDQWdJSEpsZEhWeWJqdGNiaUFnSUNCOVhHNWNiaUFnSUNCMGFHbHpMbDlsYkdWdFpXNTBJRDBnWld4bGJXVnVkRHRjYmlBZ0lDQkVZWFJoTG5ObGRDaDBhR2x6TGw5bGJHVnRaVzUwTENCMGFHbHpMbU52Ym5OMGNuVmpkRzl5TGtSQlZFRmZTMFZaTENCMGFHbHpLVHRjYmlBZ2ZWeHVYRzRnSUdScGMzQnZjMlVvS1NCN1hHNGdJQ0FnUkdGMFlTNXlaVzF2ZG1Vb2RHaHBjeTVmWld4bGJXVnVkQ3dnZEdocGN5NWpiMjV6ZEhKMVkzUnZjaTVFUVZSQlgwdEZXU2s3WEc0Z0lDQWdSWFpsYm5SSVlXNWtiR1Z5TG05bVppaDBhR2x6TGw5bGJHVnRaVzUwTENCMGFHbHpMbU52Ym5OMGNuVmpkRzl5TGtWV1JVNVVYMHRGV1NrN1hHNGdJQ0FnVDJKcVpXTjBMbWRsZEU5M2JsQnliM0JsY25SNVRtRnRaWE1vZEdocGN5a3VabTl5UldGamFDaHdjbTl3WlhKMGVVNWhiV1VnUFQ0Z2UxeHVJQ0FnSUNBZ2RHaHBjMXR3Y205d1pYSjBlVTVoYldWZElEMGdiblZzYkR0Y2JpQWdJQ0I5S1R0Y2JpQWdmVnh1WEc0Z0lGOXhkV1YxWlVOaGJHeGlZV05yS0dOaGJHeGlZV05yTENCbGJHVnRaVzUwTENCcGMwRnVhVzFoZEdWa0lEMGdkSEoxWlNrZ2UxeHVJQ0FnSUdWNFpXTjFkR1ZCWm5SbGNsUnlZVzV6YVhScGIyNG9ZMkZzYkdKaFkyc3NJR1ZzWlcxbGJuUXNJR2x6UVc1cGJXRjBaV1FwTzF4dUlDQjlYRzRnSUM4cUtpQlRkR0YwYVdNZ0tpOWNibHh1WEc0Z0lITjBZWFJwWXlCblpYUkpibk4wWVc1alpTaGxiR1Z0Wlc1MEtTQjdYRzRnSUNBZ2NtVjBkWEp1SUVSaGRHRXVaMlYwS0dkbGRFVnNaVzFsYm5Rb1pXeGxiV1Z1ZENrc0lIUm9hWE11UkVGVVFWOUxSVmtwTzF4dUlDQjlYRzVjYmlBZ2MzUmhkR2xqSUdkbGRFOXlRM0psWVhSbFNXNXpkR0Z1WTJVb1pXeGxiV1Z1ZEN3Z1kyOXVabWxuSUQwZ2UzMHBJSHRjYmlBZ0lDQnlaWFIxY200Z2RHaHBjeTVuWlhSSmJuTjBZVzVqWlNobGJHVnRaVzUwS1NCOGZDQnVaWGNnZEdocGN5aGxiR1Z0Wlc1MExDQjBlWEJsYjJZZ1kyOXVabWxuSUQwOVBTQW5iMkpxWldOMEp5QS9JR052Ym1acFp5QTZJRzUxYkd3cE8xeHVJQ0I5WEc1Y2JpQWdjM1JoZEdsaklHZGxkQ0JXUlZKVFNVOU9LQ2tnZTF4dUlDQWdJSEpsZEhWeWJpQldSVkpUU1U5T08xeHVJQ0I5WEc1Y2JpQWdjM1JoZEdsaklHZGxkQ0JPUVUxRktDa2dlMXh1SUNBZ0lIUm9jbTkzSUc1bGR5QkZjbkp2Y2lnbldXOTFJR2hoZG1VZ2RHOGdhVzF3YkdWdFpXNTBJSFJvWlNCemRHRjBhV01nYldWMGFHOWtJRndpVGtGTlJWd2lMQ0JtYjNJZ1pXRmphQ0JqYjIxd2IyNWxiblFoSnlrN1hHNGdJSDFjYmx4dUlDQnpkR0YwYVdNZ1oyVjBJRVJCVkVGZlMwVlpLQ2tnZTF4dUlDQWdJSEpsZEhWeWJpQmdZbk11Skh0MGFHbHpMazVCVFVWOVlEdGNiaUFnZlZ4dVhHNGdJSE4wWVhScFl5Qm5aWFFnUlZaRlRsUmZTMFZaS0NrZ2UxeHVJQ0FnSUhKbGRIVnliaUJnTGlSN2RHaHBjeTVFUVZSQlgwdEZXWDFnTzF4dUlDQjlYRzVjYm4xY2JseHVMeW9xWEc0Z0tpQXRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMVnh1SUNvZ1FtOXZkSE4wY21Gd0lDaDJOUzR4TGpNcE9pQjFkR2xzTDJOdmJYQnZibVZ1ZEMxbWRXNWpkR2x2Ym5NdWFuTmNiaUFxSUV4cFkyVnVjMlZrSUhWdVpHVnlJRTFKVkNBb2FIUjBjSE02THk5bmFYUm9kV0l1WTI5dEwzUjNZbk12WW05dmRITjBjbUZ3TDJKc2IySXZiV0ZwYmk5TVNVTkZUbE5GS1Z4dUlDb2dMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzFjYmlBcUwxeHVYRzVqYjI1emRDQmxibUZpYkdWRWFYTnRhWE56VkhKcFoyZGxjaUE5SUNoamIyMXdiMjVsYm5Rc0lHMWxkR2h2WkNBOUlDZG9hV1JsSnlrZ1BUNGdlMXh1SUNCamIyNXpkQ0JqYkdsamEwVjJaVzUwSUQwZ1lHTnNhV05yTG1ScGMyMXBjM01rZTJOdmJYQnZibVZ1ZEM1RlZrVk9WRjlMUlZsOVlEdGNiaUFnWTI5dWMzUWdibUZ0WlNBOUlHTnZiWEJ2Ym1WdWRDNU9RVTFGTzF4dUlDQkZkbVZ1ZEVoaGJtUnNaWEl1YjI0b1pHOWpkVzFsYm5Rc0lHTnNhV05yUlhabGJuUXNJR0JiWkdGMFlTMWljeTFrYVhOdGFYTnpQVndpSkh0dVlXMWxmVndpWFdBc0lHWjFibU4wYVc5dUlDaGxkbVZ1ZENrZ2UxeHVJQ0FnSUdsbUlDaGJKMEVuTENBblFWSkZRU2RkTG1sdVkyeDFaR1Z6S0hSb2FYTXVkR0ZuVG1GdFpTa3BJSHRjYmlBZ0lDQWdJR1YyWlc1MExuQnlaWFpsYm5SRVpXWmhkV3gwS0NrN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnYVdZZ0tHbHpSR2x6WVdKc1pXUW9kR2hwY3lrcElIdGNiaUFnSUNBZ0lISmxkSFZ5Ymp0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JqYjI1emRDQjBZWEpuWlhRZ1BTQm5aWFJGYkdWdFpXNTBSbkp2YlZObGJHVmpkRzl5S0hSb2FYTXBJSHg4SUhSb2FYTXVZMnh2YzJWemRDaGdMaVI3Ym1GdFpYMWdLVHRjYmlBZ0lDQmpiMjV6ZENCcGJuTjBZVzVqWlNBOUlHTnZiWEJ2Ym1WdWRDNW5aWFJQY2tOeVpXRjBaVWx1YzNSaGJtTmxLSFJoY21kbGRDazdJQzh2SUUxbGRHaHZaQ0JoY21kMWJXVnVkQ0JwY3lCc1pXWjBMQ0JtYjNJZ1FXeGxjblFnWVc1a0lHOXViSGtzSUdGeklHbDBJR1J2WlhOdUozUWdhVzF3YkdWdFpXNTBJSFJvWlNBbmFHbGtaU2NnYldWMGFHOWtYRzVjYmlBZ0lDQnBibk4wWVc1alpWdHRaWFJvYjJSZEtDazdYRzRnSUgwcE8xeHVmVHRjYmx4dUx5b3FYRzRnS2lBdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExWeHVJQ29nUW05dmRITjBjbUZ3SUNoMk5TNHhMak1wT2lCaGJHVnlkQzVxYzF4dUlDb2dUR2xqWlc1elpXUWdkVzVrWlhJZ1RVbFVJQ2hvZEhSd2N6b3ZMMmRwZEdoMVlpNWpiMjB2ZEhkaWN5OWliMjkwYzNSeVlYQXZZbXh2WWk5dFlXbHVMMHhKUTBWT1UwVXBYRzRnS2lBdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExWeHVJQ292WEc0dktpcGNiaUFxSUMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFZ4dUlDb2dRMjl1YzNSaGJuUnpYRzRnS2lBdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMxY2JpQXFMMXh1WEc1amIyNXpkQ0JPUVUxRkpHUWdQU0FuWVd4bGNuUW5PMXh1WTI5dWMzUWdSRUZVUVY5TFJWa2tZeUE5SUNkaWN5NWhiR1Z5ZENjN1hHNWpiMjV6ZENCRlZrVk9WRjlMUlZra1l5QTlJR0F1Skh0RVFWUkJYMHRGV1NSamZXQTdYRzVqYjI1emRDQkZWa1ZPVkY5RFRFOVRSU0E5SUdCamJHOXpaU1I3UlZaRlRsUmZTMFZaSkdOOVlEdGNibU52Ym5OMElFVldSVTVVWDBOTVQxTkZSQ0E5SUdCamJHOXpaV1FrZTBWV1JVNVVYMHRGV1NSamZXQTdYRzVqYjI1emRDQkRURUZUVTE5T1FVMUZYMFpCUkVVa05TQTlJQ2RtWVdSbEp6dGNibU52Ym5OMElFTk1RVk5UWDA1QlRVVmZVMGhQVnlRNElEMGdKM05vYjNjbk8xeHVMeW9xWEc0Z0tpQXRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMWNiaUFxSUVOc1lYTnpJRVJsWm1sdWFYUnBiMjVjYmlBcUlDMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExWeHVJQ292WEc1Y2JtTnNZWE56SUVGc1pYSjBJR1Y0ZEdWdVpITWdRbUZ6WlVOdmJYQnZibVZ1ZENCN1hHNGdJQzh2SUVkbGRIUmxjbk5jYmlBZ2MzUmhkR2xqSUdkbGRDQk9RVTFGS0NrZ2UxeHVJQ0FnSUhKbGRIVnliaUJPUVUxRkpHUTdYRzRnSUgwZ0x5OGdVSFZpYkdsalhHNWNibHh1SUNCamJHOXpaU2dwSUh0Y2JpQWdJQ0JqYjI1emRDQmpiRzl6WlVWMlpXNTBJRDBnUlhabGJuUklZVzVrYkdWeUxuUnlhV2RuWlhJb2RHaHBjeTVmWld4bGJXVnVkQ3dnUlZaRlRsUmZRMHhQVTBVcE8xeHVYRzRnSUNBZ2FXWWdLR05zYjNObFJYWmxiblF1WkdWbVlYVnNkRkJ5WlhabGJuUmxaQ2tnZTF4dUlDQWdJQ0FnY21WMGRYSnVPMXh1SUNBZ0lIMWNibHh1SUNBZ0lIUm9hWE11WDJWc1pXMWxiblF1WTJ4aGMzTk1hWE4wTG5KbGJXOTJaU2hEVEVGVFUxOU9RVTFGWDFOSVQxY2tPQ2s3WEc1Y2JpQWdJQ0JqYjI1emRDQnBjMEZ1YVcxaGRHVmtJRDBnZEdocGN5NWZaV3hsYldWdWRDNWpiR0Z6YzB4cGMzUXVZMjl1ZEdGcGJuTW9RMHhCVTFOZlRrRk5SVjlHUVVSRkpEVXBPMXh1WEc0Z0lDQWdkR2hwY3k1ZmNYVmxkV1ZEWVd4c1ltRmpheWdvS1NBOVBpQjBhR2x6TGw5a1pYTjBjbTk1Uld4bGJXVnVkQ2dwTENCMGFHbHpMbDlsYkdWdFpXNTBMQ0JwYzBGdWFXMWhkR1ZrS1R0Y2JpQWdmU0F2THlCUWNtbDJZWFJsWEc1Y2JseHVJQ0JmWkdWemRISnZlVVZzWlcxbGJuUW9LU0I3WEc0Z0lDQWdkR2hwY3k1ZlpXeGxiV1Z1ZEM1eVpXMXZkbVVvS1R0Y2JseHVJQ0FnSUVWMlpXNTBTR0Z1Wkd4bGNpNTBjbWxuWjJWeUtIUm9hWE11WDJWc1pXMWxiblFzSUVWV1JVNVVYME5NVDFORlJDazdYRzRnSUNBZ2RHaHBjeTVrYVhOd2IzTmxLQ2s3WEc0Z0lIMGdMeThnVTNSaGRHbGpYRzVjYmx4dUlDQnpkR0YwYVdNZ2FsRjFaWEo1U1c1MFpYSm1ZV05sS0dOdmJtWnBaeWtnZTF4dUlDQWdJSEpsZEhWeWJpQjBhR2x6TG1WaFkyZ29ablZ1WTNScGIyNGdLQ2tnZTF4dUlDQWdJQ0FnWTI5dWMzUWdaR0YwWVNBOUlFRnNaWEowTG1kbGRFOXlRM0psWVhSbFNXNXpkR0Z1WTJVb2RHaHBjeWs3WEc1Y2JpQWdJQ0FnSUdsbUlDaDBlWEJsYjJZZ1kyOXVabWxuSUNFOVBTQW5jM1J5YVc1bkp5a2dlMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNDdYRzRnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJR2xtSUNoa1lYUmhXMk52Ym1acFoxMGdQVDA5SUhWdVpHVm1hVzVsWkNCOGZDQmpiMjVtYVdjdWMzUmhjblJ6VjJsMGFDZ25YeWNwSUh4OElHTnZibVpwWnlBOVBUMGdKMk52Ym5OMGNuVmpkRzl5SnlrZ2UxeHVJQ0FnSUNBZ0lDQjBhSEp2ZHlCdVpYY2dWSGx3WlVWeWNtOXlLR0JPYnlCdFpYUm9iMlFnYm1GdFpXUWdYQ0lrZTJOdmJtWnBaMzFjSW1BcE8xeHVJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQmtZWFJoVzJOdmJtWnBaMTBvZEdocGN5azdYRzRnSUNBZ2ZTazdYRzRnSUgxY2JseHVmVnh1THlvcVhHNGdLaUF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzFjYmlBcUlFUmhkR0VnUVhCcElHbHRjR3hsYldWdWRHRjBhVzl1WEc0Z0tpQXRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMWNiaUFxTDF4dVhHNWNibVZ1WVdKc1pVUnBjMjFwYzNOVWNtbG5aMlZ5S0VGc1pYSjBMQ0FuWTJ4dmMyVW5LVHRjYmk4cUtseHVJQ29nTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0WEc0Z0tpQnFVWFZsY25sY2JpQXFJQzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMVnh1SUNvZ1lXUmtJQzVCYkdWeWRDQjBieUJxVVhWbGNua2diMjVzZVNCcFppQnFVWFZsY25rZ2FYTWdjSEpsYzJWdWRGeHVJQ292WEc1Y2JtUmxabWx1WlVwUmRXVnllVkJzZFdkcGJpaEJiR1Z5ZENrN1hHNWNiaThxS2x4dUlDb2dMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzFjYmlBcUlFSnZiM1J6ZEhKaGNDQW9kalV1TVM0ektUb2dZblYwZEc5dUxtcHpYRzRnS2lCTWFXTmxibk5sWkNCMWJtUmxjaUJOU1ZRZ0tHaDBkSEJ6T2k4dloybDBhSFZpTG1OdmJTOTBkMkp6TDJKdmIzUnpkSEpoY0M5aWJHOWlMMjFoYVc0dlRFbERSVTVUUlNsY2JpQXFJQzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0WEc0Z0tpOWNiaThxS2x4dUlDb2dMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRYRzRnS2lCRGIyNXpkR0Z1ZEhOY2JpQXFJQzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMVnh1SUNvdlhHNWNibU52Ym5OMElFNUJUVVVrWXlBOUlDZGlkWFIwYjI0bk8xeHVZMjl1YzNRZ1JFRlVRVjlMUlZra1lpQTlJQ2RpY3k1aWRYUjBiMjRuTzF4dVkyOXVjM1FnUlZaRlRsUmZTMFZaSkdJZ1BTQmdMaVI3UkVGVVFWOUxSVmtrWW4xZ08xeHVZMjl1YzNRZ1JFRlVRVjlCVUVsZlMwVlpKRGNnUFNBbkxtUmhkR0V0WVhCcEp6dGNibU52Ym5OMElFTk1RVk5UWDA1QlRVVmZRVU5VU1ZaRkpETWdQU0FuWVdOMGFYWmxKenRjYm1OdmJuTjBJRk5GVEVWRFZFOVNYMFJCVkVGZlZFOUhSMHhGSkRVZ1BTQW5XMlJoZEdFdFluTXRkRzluWjJ4bFBWd2lZblYwZEc5dVhDSmRKenRjYm1OdmJuTjBJRVZXUlU1VVgwTk1TVU5MWDBSQlZFRmZRVkJKSkRZZ1BTQmdZMnhwWTJza2UwVldSVTVVWDB0RldTUmlmU1I3UkVGVVFWOUJVRWxmUzBWWkpEZDlZRHRjYmk4cUtseHVJQ29nTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0WEc0Z0tpQkRiR0Z6Y3lCRVpXWnBibWwwYVc5dVhHNGdLaUF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzFjYmlBcUwxeHVYRzVqYkdGemN5QkNkWFIwYjI0Z1pYaDBaVzVrY3lCQ1lYTmxRMjl0Y0c5dVpXNTBJSHRjYmlBZ0x5OGdSMlYwZEdWeWMxeHVJQ0J6ZEdGMGFXTWdaMlYwSUU1QlRVVW9LU0I3WEc0Z0lDQWdjbVYwZFhKdUlFNUJUVVVrWXp0Y2JpQWdmU0F2THlCUWRXSnNhV05jYmx4dVhHNGdJSFJ2WjJkc1pTZ3BJSHRjYmlBZ0lDQXZMeUJVYjJkbmJHVWdZMnhoYzNNZ1lXNWtJSE41Ym1NZ2RHaGxJR0JoY21saExYQnlaWE56WldSZ0lHRjBkSEpwWW5WMFpTQjNhWFJvSUhSb1pTQnlaWFIxY200Z2RtRnNkV1VnYjJZZ2RHaGxJR0F1ZEc5bloyeGxLQ2xnSUcxbGRHaHZaRnh1SUNBZ0lIUm9hWE11WDJWc1pXMWxiblF1YzJWMFFYUjBjbWxpZFhSbEtDZGhjbWxoTFhCeVpYTnpaV1FuTENCMGFHbHpMbDlsYkdWdFpXNTBMbU5zWVhOelRHbHpkQzUwYjJkbmJHVW9RMHhCVTFOZlRrRk5SVjlCUTFSSlZrVWtNeWtwTzF4dUlDQjlJQzh2SUZOMFlYUnBZMXh1WEc1Y2JpQWdjM1JoZEdsaklHcFJkV1Z5ZVVsdWRHVnlabUZqWlNoamIyNW1hV2NwSUh0Y2JpQWdJQ0J5WlhSMWNtNGdkR2hwY3k1bFlXTm9LR1oxYm1OMGFXOXVJQ2dwSUh0Y2JpQWdJQ0FnSUdOdmJuTjBJR1JoZEdFZ1BTQkNkWFIwYjI0dVoyVjBUM0pEY21WaGRHVkpibk4wWVc1alpTaDBhR2x6S1R0Y2JseHVJQ0FnSUNBZ2FXWWdLR052Ym1acFp5QTlQVDBnSjNSdloyZHNaU2NwSUh0Y2JpQWdJQ0FnSUNBZ1pHRjBZVnRqYjI1bWFXZGRLQ2s3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmU2s3WEc0Z0lIMWNibHh1ZlZ4dUx5b3FYRzRnS2lBdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMxY2JpQXFJRVJoZEdFZ1FYQnBJR2x0Y0d4bGJXVnVkR0YwYVc5dVhHNGdLaUF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzFjYmlBcUwxeHVYRzVjYmtWMlpXNTBTR0Z1Wkd4bGNpNXZiaWhrYjJOMWJXVnVkQ3dnUlZaRlRsUmZRMHhKUTB0ZlJFRlVRVjlCVUVra05pd2dVMFZNUlVOVVQxSmZSRUZVUVY5VVQwZEhURVVrTlN3Z1pYWmxiblFnUFQ0Z2UxeHVJQ0JsZG1WdWRDNXdjbVYyWlc1MFJHVm1ZWFZzZENncE8xeHVJQ0JqYjI1emRDQmlkWFIwYjI0Z1BTQmxkbVZ1ZEM1MFlYSm5aWFF1WTJ4dmMyVnpkQ2hUUlV4RlExUlBVbDlFUVZSQlgxUlBSMGRNUlNRMUtUdGNiaUFnWTI5dWMzUWdaR0YwWVNBOUlFSjFkSFJ2Ymk1blpYUlBja055WldGMFpVbHVjM1JoYm1ObEtHSjFkSFJ2YmlrN1hHNGdJR1JoZEdFdWRHOW5aMnhsS0NrN1hHNTlLVHRjYmk4cUtseHVJQ29nTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0WEc0Z0tpQnFVWFZsY25sY2JpQXFJQzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMVnh1SUNvZ1lXUmtJQzVDZFhSMGIyNGdkRzhnYWxGMVpYSjVJRzl1YkhrZ2FXWWdhbEYxWlhKNUlHbHpJSEJ5WlhObGJuUmNiaUFxTDF4dVhHNWtaV1pwYm1WS1VYVmxjbmxRYkhWbmFXNG9RblYwZEc5dUtUdGNibHh1THlvcVhHNGdLaUF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFZ4dUlDb2dRbTl2ZEhOMGNtRndJQ2gyTlM0eExqTXBPaUJrYjIwdmJXRnVhWEIxYkdGMGIzSXVhbk5jYmlBcUlFeHBZMlZ1YzJWa0lIVnVaR1Z5SUUxSlZDQW9hSFIwY0hNNkx5OW5hWFJvZFdJdVkyOXRMM1IzWW5NdlltOXZkSE4wY21Gd0wySnNiMkl2YldGcGJpOU1TVU5GVGxORktWeHVJQ29nTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMxY2JpQXFMMXh1Wm5WdVkzUnBiMjRnYm05eWJXRnNhWHBsUkdGMFlTaDJZV3dwSUh0Y2JpQWdhV1lnS0haaGJDQTlQVDBnSjNSeWRXVW5LU0I3WEc0Z0lDQWdjbVYwZFhKdUlIUnlkV1U3WEc0Z0lIMWNibHh1SUNCcFppQW9kbUZzSUQwOVBTQW5abUZzYzJVbktTQjdYRzRnSUNBZ2NtVjBkWEp1SUdaaGJITmxPMXh1SUNCOVhHNWNiaUFnYVdZZ0tIWmhiQ0E5UFQwZ1RuVnRZbVZ5S0haaGJDa3VkRzlUZEhKcGJtY29LU2tnZTF4dUlDQWdJSEpsZEhWeWJpQk9kVzFpWlhJb2RtRnNLVHRjYmlBZ2ZWeHVYRzRnSUdsbUlDaDJZV3dnUFQwOUlDY25JSHg4SUhaaGJDQTlQVDBnSjI1MWJHd25LU0I3WEc0Z0lDQWdjbVYwZFhKdUlHNTFiR3c3WEc0Z0lIMWNibHh1SUNCeVpYUjFjbTRnZG1Gc08xeHVmVnh1WEc1bWRXNWpkR2x2YmlCdWIzSnRZV3hwZW1WRVlYUmhTMlY1S0d0bGVTa2dlMXh1SUNCeVpYUjFjbTRnYTJWNUxuSmxjR3hoWTJVb0wxdEJMVnBkTDJjc0lHTm9jaUE5UGlCZ0xTUjdZMmh5TG5SdlRHOTNaWEpEWVhObEtDbDlZQ2s3WEc1OVhHNWNibU52Ym5OMElFMWhibWx3ZFd4aGRHOXlJRDBnZTF4dUlDQnpaWFJFWVhSaFFYUjBjbWxpZFhSbEtHVnNaVzFsYm5Rc0lHdGxlU3dnZG1Gc2RXVXBJSHRjYmlBZ0lDQmxiR1Z0Wlc1MExuTmxkRUYwZEhKcFluVjBaU2hnWkdGMFlTMWljeTBrZTI1dmNtMWhiR2w2WlVSaGRHRkxaWGtvYTJWNUtYMWdMQ0IyWVd4MVpTazdYRzRnSUgwc1hHNWNiaUFnY21WdGIzWmxSR0YwWVVGMGRISnBZblYwWlNobGJHVnRaVzUwTENCclpYa3BJSHRjYmlBZ0lDQmxiR1Z0Wlc1MExuSmxiVzkyWlVGMGRISnBZblYwWlNoZ1pHRjBZUzFpY3kwa2UyNXZjbTFoYkdsNlpVUmhkR0ZMWlhrb2EyVjVLWDFnS1R0Y2JpQWdmU3hjYmx4dUlDQm5aWFJFWVhSaFFYUjBjbWxpZFhSbGN5aGxiR1Z0Wlc1MEtTQjdYRzRnSUNBZ2FXWWdLQ0ZsYkdWdFpXNTBLU0I3WEc0Z0lDQWdJQ0J5WlhSMWNtNGdlMzA3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdZMjl1YzNRZ1lYUjBjbWxpZFhSbGN5QTlJSHQ5TzF4dUlDQWdJRTlpYW1WamRDNXJaWGx6S0dWc1pXMWxiblF1WkdGMFlYTmxkQ2t1Wm1sc2RHVnlLR3RsZVNBOVBpQnJaWGt1YzNSaGNuUnpWMmwwYUNnblluTW5LU2t1Wm05eVJXRmphQ2hyWlhrZ1BUNGdlMXh1SUNBZ0lDQWdiR1YwSUhCMWNtVkxaWGtnUFNCclpYa3VjbVZ3YkdGalpTZ3ZYbUp6THl3Z0p5Y3BPMXh1SUNBZ0lDQWdjSFZ5WlV0bGVTQTlJSEIxY21WTFpYa3VZMmhoY2tGMEtEQXBMblJ2VEc5M1pYSkRZWE5sS0NrZ0t5QndkWEpsUzJWNUxuTnNhV05sS0RFc0lIQjFjbVZMWlhrdWJHVnVaM1JvS1R0Y2JpQWdJQ0FnSUdGMGRISnBZblYwWlhOYmNIVnlaVXRsZVYwZ1BTQnViM0p0WVd4cGVtVkVZWFJoS0dWc1pXMWxiblF1WkdGMFlYTmxkRnRyWlhsZEtUdGNiaUFnSUNCOUtUdGNiaUFnSUNCeVpYUjFjbTRnWVhSMGNtbGlkWFJsY3p0Y2JpQWdmU3hjYmx4dUlDQm5aWFJFWVhSaFFYUjBjbWxpZFhSbEtHVnNaVzFsYm5Rc0lHdGxlU2tnZTF4dUlDQWdJSEpsZEhWeWJpQnViM0p0WVd4cGVtVkVZWFJoS0dWc1pXMWxiblF1WjJWMFFYUjBjbWxpZFhSbEtHQmtZWFJoTFdKekxTUjdibTl5YldGc2FYcGxSR0YwWVV0bGVTaHJaWGtwZldBcEtUdGNiaUFnZlN4Y2JseHVJQ0J2Wm1aelpYUW9aV3hsYldWdWRDa2dlMXh1SUNBZ0lHTnZibk4wSUhKbFkzUWdQU0JsYkdWdFpXNTBMbWRsZEVKdmRXNWthVzVuUTJ4cFpXNTBVbVZqZENncE8xeHVJQ0FnSUhKbGRIVnliaUI3WEc0Z0lDQWdJQ0IwYjNBNklISmxZM1F1ZEc5d0lDc2dkMmx1Wkc5M0xuQmhaMlZaVDJabWMyVjBMRnh1SUNBZ0lDQWdiR1ZtZERvZ2NtVmpkQzVzWldaMElDc2dkMmx1Wkc5M0xuQmhaMlZZVDJabWMyVjBYRzRnSUNBZ2ZUdGNiaUFnZlN4Y2JseHVJQ0J3YjNOcGRHbHZiaWhsYkdWdFpXNTBLU0I3WEc0Z0lDQWdjbVYwZFhKdUlIdGNiaUFnSUNBZ0lIUnZjRG9nWld4bGJXVnVkQzV2Wm1aelpYUlViM0FzWEc0Z0lDQWdJQ0JzWldaME9pQmxiR1Z0Wlc1MExtOW1abk5sZEV4bFpuUmNiaUFnSUNCOU8xeHVJQ0I5WEc1Y2JuMDdYRzVjYmk4cUtseHVJQ29nTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMxY2JpQXFJRUp2YjNSemRISmhjQ0FvZGpVdU1TNHpLVG9nWkc5dEwzTmxiR1ZqZEc5eUxXVnVaMmx1WlM1cWMxeHVJQ29nVEdsalpXNXpaV1FnZFc1a1pYSWdUVWxVSUNob2RIUndjem92TDJkcGRHaDFZaTVqYjIwdmRIZGljeTlpYjI5MGMzUnlZWEF2WW14dllpOXRZV2x1TDB4SlEwVk9VMFVwWEc0Z0tpQXRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMVnh1SUNvdlhHNWpiMjV6ZENCT1QwUkZYMVJGV0ZRZ1BTQXpPMXh1WTI5dWMzUWdVMlZzWldOMGIzSkZibWRwYm1VZ1BTQjdYRzRnSUdacGJtUW9jMlZzWldOMGIzSXNJR1ZzWlcxbGJuUWdQU0JrYjJOMWJXVnVkQzVrYjJOMWJXVnVkRVZzWlcxbGJuUXBJSHRjYmlBZ0lDQnlaWFIxY200Z1cxMHVZMjl1WTJGMEtDNHVMa1ZzWlcxbGJuUXVjSEp2ZEc5MGVYQmxMbkYxWlhKNVUyVnNaV04wYjNKQmJHd3VZMkZzYkNobGJHVnRaVzUwTENCelpXeGxZM1J2Y2lrcE8xeHVJQ0I5TEZ4dVhHNGdJR1pwYm1SUGJtVW9jMlZzWldOMGIzSXNJR1ZzWlcxbGJuUWdQU0JrYjJOMWJXVnVkQzVrYjJOMWJXVnVkRVZzWlcxbGJuUXBJSHRjYmlBZ0lDQnlaWFIxY200Z1JXeGxiV1Z1ZEM1d2NtOTBiM1I1Y0dVdWNYVmxjbmxUWld4bFkzUnZjaTVqWVd4c0tHVnNaVzFsYm5Rc0lITmxiR1ZqZEc5eUtUdGNiaUFnZlN4Y2JseHVJQ0JqYUdsc1pISmxiaWhsYkdWdFpXNTBMQ0J6Wld4bFkzUnZjaWtnZTF4dUlDQWdJSEpsZEhWeWJpQmJYUzVqYjI1allYUW9MaTR1Wld4bGJXVnVkQzVqYUdsc1pISmxiaWt1Wm1sc2RHVnlLR05vYVd4a0lEMCtJR05vYVd4a0xtMWhkR05vWlhNb2MyVnNaV04wYjNJcEtUdGNiaUFnZlN4Y2JseHVJQ0J3WVhKbGJuUnpLR1ZzWlcxbGJuUXNJSE5sYkdWamRHOXlLU0I3WEc0Z0lDQWdZMjl1YzNRZ2NHRnlaVzUwY3lBOUlGdGRPMXh1SUNBZ0lHeGxkQ0JoYm1ObGMzUnZjaUE5SUdWc1pXMWxiblF1Y0dGeVpXNTBUbTlrWlR0Y2JseHVJQ0FnSUhkb2FXeGxJQ2hoYm1ObGMzUnZjaUFtSmlCaGJtTmxjM1J2Y2k1dWIyUmxWSGx3WlNBOVBUMGdUbTlrWlM1RlRFVk5SVTVVWDA1UFJFVWdKaVlnWVc1alpYTjBiM0l1Ym05a1pWUjVjR1VnSVQwOUlFNVBSRVZmVkVWWVZDa2dlMXh1SUNBZ0lDQWdhV1lnS0dGdVkyVnpkRzl5TG0xaGRHTm9aWE1vYzJWc1pXTjBiM0lwS1NCN1hHNGdJQ0FnSUNBZ0lIQmhjbVZ1ZEhNdWNIVnphQ2hoYm1ObGMzUnZjaWs3WEc0Z0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUdGdVkyVnpkRzl5SUQwZ1lXNWpaWE4wYjNJdWNHRnlaVzUwVG05a1pUdGNiaUFnSUNCOVhHNWNiaUFnSUNCeVpYUjFjbTRnY0dGeVpXNTBjenRjYmlBZ2ZTeGNibHh1SUNCd2NtVjJLR1ZzWlcxbGJuUXNJSE5sYkdWamRHOXlLU0I3WEc0Z0lDQWdiR1YwSUhCeVpYWnBiM1Z6SUQwZ1pXeGxiV1Z1ZEM1d2NtVjJhVzkxYzBWc1pXMWxiblJUYVdKc2FXNW5PMXh1WEc0Z0lDQWdkMmhwYkdVZ0tIQnlaWFpwYjNWektTQjdYRzRnSUNBZ0lDQnBaaUFvY0hKbGRtbHZkWE11YldGMFkyaGxjeWh6Wld4bFkzUnZjaWtwSUh0Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUZ0d2NtVjJhVzkxYzEwN1hHNGdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lIQnlaWFpwYjNWeklEMGdjSEpsZG1sdmRYTXVjSEpsZG1sdmRYTkZiR1Z0Wlc1MFUybGliR2x1Wnp0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0J5WlhSMWNtNGdXMTA3WEc0Z0lIMHNYRzVjYmlBZ2JtVjRkQ2hsYkdWdFpXNTBMQ0J6Wld4bFkzUnZjaWtnZTF4dUlDQWdJR3hsZENCdVpYaDBJRDBnWld4bGJXVnVkQzV1WlhoMFJXeGxiV1Z1ZEZOcFlteHBibWM3WEc1Y2JpQWdJQ0IzYUdsc1pTQW9ibVY0ZENrZ2UxeHVJQ0FnSUNBZ2FXWWdLRzVsZUhRdWJXRjBZMmhsY3loelpXeGxZM1J2Y2lrcElIdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlGdHVaWGgwWFR0Y2JpQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ2JtVjRkQ0E5SUc1bGVIUXVibVY0ZEVWc1pXMWxiblJUYVdKc2FXNW5PMXh1SUNBZ0lIMWNibHh1SUNBZ0lISmxkSFZ5YmlCYlhUdGNiaUFnZlN4Y2JseHVJQ0JtYjJOMWMyRmliR1ZEYUdsc1pISmxiaWhsYkdWdFpXNTBLU0I3WEc0Z0lDQWdZMjl1YzNRZ1ptOWpkWE5oWW14bGN5QTlJRnNuWVNjc0lDZGlkWFIwYjI0bkxDQW5hVzV3ZFhRbkxDQW5kR1Y0ZEdGeVpXRW5MQ0FuYzJWc1pXTjBKeXdnSjJSbGRHRnBiSE1uTENBblczUmhZbWx1WkdWNFhTY3NJQ2RiWTI5dWRHVnVkR1ZrYVhSaFlteGxQVndpZEhKMVpWd2lYU2RkTG0xaGNDaHpaV3hsWTNSdmNpQTlQaUJnSkh0elpXeGxZM1J2Y24wNmJtOTBLRnQwWVdKcGJtUmxlRjQ5WENJdFhDSmRLV0FwTG1wdmFXNG9KeXdnSnlrN1hHNGdJQ0FnY21WMGRYSnVJSFJvYVhNdVptbHVaQ2htYjJOMWMyRmliR1Z6TENCbGJHVnRaVzUwS1M1bWFXeDBaWElvWld3Z1BUNGdJV2x6UkdsellXSnNaV1FvWld3cElDWW1JR2x6Vm1semFXSnNaU2hsYkNrcE8xeHVJQ0I5WEc1Y2JuMDdYRzVjYmk4cUtseHVJQ29nTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMxY2JpQXFJRUp2YjNSemRISmhjQ0FvZGpVdU1TNHpLVG9nWTJGeWIzVnpaV3d1YW5OY2JpQXFJRXhwWTJWdWMyVmtJSFZ1WkdWeUlFMUpWQ0FvYUhSMGNITTZMeTluYVhSb2RXSXVZMjl0TDNSM1luTXZZbTl2ZEhOMGNtRndMMkpzYjJJdmJXRnBiaTlNU1VORlRsTkZLVnh1SUNvZ0xTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMWNiaUFxTDF4dUx5b3FYRzRnS2lBdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMxY2JpQXFJRU52Ym5OMFlXNTBjMXh1SUNvZ0xTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdFhHNGdLaTljYmx4dVkyOXVjM1FnVGtGTlJTUmlJRDBnSjJOaGNtOTFjMlZzSnp0Y2JtTnZibk4wSUVSQlZFRmZTMFZaSkdFZ1BTQW5Zbk11WTJGeWIzVnpaV3duTzF4dVkyOXVjM1FnUlZaRlRsUmZTMFZaSkdFZ1BTQmdMaVI3UkVGVVFWOUxSVmtrWVgxZ08xeHVZMjl1YzNRZ1JFRlVRVjlCVUVsZlMwVlpKRFlnUFNBbkxtUmhkR0V0WVhCcEp6dGNibU52Ym5OMElFRlNVazlYWDB4RlJsUmZTMFZaSUQwZ0owRnljbTkzVEdWbWRDYzdYRzVqYjI1emRDQkJVbEpQVjE5U1NVZElWRjlMUlZrZ1BTQW5RWEp5YjNkU2FXZG9kQ2M3WEc1amIyNXpkQ0JVVDFWRFNFVldSVTVVWDBOUFRWQkJWRjlYUVVsVUlEMGdOVEF3T3lBdkx5QlVhVzFsSUdadmNpQnRiM1Z6WlNCamIyMXdZWFFnWlhabGJuUnpJSFJ2SUdacGNtVWdZV1owWlhJZ2RHOTFZMmhjYmx4dVkyOXVjM1FnVTFkSlVFVmZWRWhTUlZOSVQweEVJRDBnTkRBN1hHNWpiMjV6ZENCRVpXWmhkV3gwSkdFZ1BTQjdYRzRnSUdsdWRHVnlkbUZzT2lBMU1EQXdMRnh1SUNCclpYbGliMkZ5WkRvZ2RISjFaU3hjYmlBZ2MyeHBaR1U2SUdaaGJITmxMRnh1SUNCd1lYVnpaVG9nSjJodmRtVnlKeXhjYmlBZ2QzSmhjRG9nZEhKMVpTeGNiaUFnZEc5MVkyZzZJSFJ5ZFdWY2JuMDdYRzVqYjI1emRDQkVaV1poZFd4MFZIbHdaU1JoSUQwZ2UxeHVJQ0JwYm5SbGNuWmhiRG9nSnlodWRXMWlaWEo4WW05dmJHVmhiaWtuTEZ4dUlDQnJaWGxpYjJGeVpEb2dKMkp2YjJ4bFlXNG5MRnh1SUNCemJHbGtaVG9nSnloaWIyOXNaV0Z1ZkhOMGNtbHVaeWtuTEZ4dUlDQndZWFZ6WlRvZ0p5aHpkSEpwYm1kOFltOXZiR1ZoYmlrbkxGeHVJQ0IzY21Gd09pQW5ZbTl2YkdWaGJpY3NYRzRnSUhSdmRXTm9PaUFuWW05dmJHVmhiaWRjYm4wN1hHNWpiMjV6ZENCUFVrUkZVbDlPUlZoVUlEMGdKMjVsZUhRbk8xeHVZMjl1YzNRZ1QxSkVSVkpmVUZKRlZpQTlJQ2R3Y21WMkp6dGNibU52Ym5OMElFUkpVa1ZEVkVsUFRsOU1SVVpVSUQwZ0oyeGxablFuTzF4dVkyOXVjM1FnUkVsU1JVTlVTVTlPWDFKSlIwaFVJRDBnSjNKcFoyaDBKenRjYm1OdmJuTjBJRXRGV1Y5VVQxOUVTVkpGUTFSSlQwNGdQU0I3WEc0Z0lGdEJVbEpQVjE5TVJVWlVYMHRGV1YwNklFUkpVa1ZEVkVsUFRsOVNTVWRJVkN4Y2JpQWdXMEZTVWs5WFgxSkpSMGhVWDB0RldWMDZJRVJKVWtWRFZFbFBUbDlNUlVaVVhHNTlPMXh1WTI5dWMzUWdSVlpGVGxSZlUweEpSRVVnUFNCZ2MyeHBaR1VrZTBWV1JVNVVYMHRGV1NSaGZXQTdYRzVqYjI1emRDQkZWa1ZPVkY5VFRFbEVJRDBnWUhOc2FXUWtlMFZXUlU1VVgwdEZXU1JoZldBN1hHNWpiMjV6ZENCRlZrVk9WRjlMUlZsRVQxZE9JRDBnWUd0bGVXUnZkMjRrZTBWV1JVNVVYMHRGV1NSaGZXQTdYRzVqYjI1emRDQkZWa1ZPVkY5TlQxVlRSVVZPVkVWU0lEMGdZRzF2ZFhObFpXNTBaWElrZTBWV1JVNVVYMHRGV1NSaGZXQTdYRzVqYjI1emRDQkZWa1ZPVkY5TlQxVlRSVXhGUVZaRklEMGdZRzF2ZFhObGJHVmhkbVVrZTBWV1JVNVVYMHRGV1NSaGZXQTdYRzVqYjI1emRDQkZWa1ZPVkY5VVQxVkRTRk5VUVZKVUlEMGdZSFJ2ZFdOb2MzUmhjblFrZTBWV1JVNVVYMHRGV1NSaGZXQTdYRzVqYjI1emRDQkZWa1ZPVkY5VVQxVkRTRTFQVmtVZ1BTQmdkRzkxWTJodGIzWmxKSHRGVmtWT1ZGOUxSVmtrWVgxZ08xeHVZMjl1YzNRZ1JWWkZUbFJmVkU5VlEwaEZUa1FnUFNCZ2RHOTFZMmhsYm1Ra2UwVldSVTVVWDB0RldTUmhmV0E3WEc1amIyNXpkQ0JGVmtWT1ZGOVFUMGxPVkVWU1JFOVhUaUE5SUdCd2IybHVkR1Z5Wkc5M2JpUjdSVlpGVGxSZlMwVlpKR0Y5WUR0Y2JtTnZibk4wSUVWV1JVNVVYMUJQU1U1VVJWSlZVQ0E5SUdCd2IybHVkR1Z5ZFhBa2UwVldSVTVVWDB0RldTUmhmV0E3WEc1amIyNXpkQ0JGVmtWT1ZGOUVVa0ZIWDFOVVFWSlVJRDBnWUdSeVlXZHpkR0Z5ZENSN1JWWkZUbFJmUzBWWkpHRjlZRHRjYm1OdmJuTjBJRVZXUlU1VVgweFBRVVJmUkVGVVFWOUJVRWtrTWlBOUlHQnNiMkZrSkh0RlZrVk9WRjlMUlZra1lYMGtlMFJCVkVGZlFWQkpYMHRGV1NRMmZXQTdYRzVqYjI1emRDQkZWa1ZPVkY5RFRFbERTMTlFUVZSQlgwRlFTU1ExSUQwZ1lHTnNhV05ySkh0RlZrVk9WRjlMUlZra1lYMGtlMFJCVkVGZlFWQkpYMHRGV1NRMmZXQTdYRzVqYjI1emRDQkRURUZUVTE5T1FVMUZYME5CVWs5VlUwVk1JRDBnSjJOaGNtOTFjMlZzSnp0Y2JtTnZibk4wSUVOTVFWTlRYMDVCVFVWZlFVTlVTVlpGSkRJZ1BTQW5ZV04wYVhabEp6dGNibU52Ym5OMElFTk1RVk5UWDA1QlRVVmZVMHhKUkVVZ1BTQW5jMnhwWkdVbk8xeHVZMjl1YzNRZ1EweEJVMU5mVGtGTlJWOUZUa1FnUFNBblkyRnliM1Z6Wld3dGFYUmxiUzFsYm1Rbk8xeHVZMjl1YzNRZ1EweEJVMU5mVGtGTlJWOVRWRUZTVkNBOUlDZGpZWEp2ZFhObGJDMXBkR1Z0TFhOMFlYSjBKenRjYm1OdmJuTjBJRU5NUVZOVFgwNUJUVVZmVGtWWVZDQTlJQ2RqWVhKdmRYTmxiQzFwZEdWdExXNWxlSFFuTzF4dVkyOXVjM1FnUTB4QlUxTmZUa0ZOUlY5UVVrVldJRDBnSjJOaGNtOTFjMlZzTFdsMFpXMHRjSEpsZGljN1hHNWpiMjV6ZENCRFRFRlRVMTlPUVUxRlgxQlBTVTVVUlZKZlJWWkZUbFFnUFNBbmNHOXBiblJsY2kxbGRtVnVkQ2M3WEc1amIyNXpkQ0JUUlV4RlExUlBVbDlCUTFSSlZrVWtNU0E5SUNjdVlXTjBhWFpsSnp0Y2JtTnZibk4wSUZORlRFVkRWRTlTWDBGRFZFbFdSVjlKVkVWTklEMGdKeTVoWTNScGRtVXVZMkZ5YjNWelpXd3RhWFJsYlNjN1hHNWpiMjV6ZENCVFJVeEZRMVJQVWw5SlZFVk5JRDBnSnk1allYSnZkWE5sYkMxcGRHVnRKenRjYm1OdmJuTjBJRk5GVEVWRFZFOVNYMGxVUlUxZlNVMUhJRDBnSnk1allYSnZkWE5sYkMxcGRHVnRJR2x0WnljN1hHNWpiMjV6ZENCVFJVeEZRMVJQVWw5T1JWaFVYMUJTUlZZZ1BTQW5MbU5oY205MWMyVnNMV2wwWlcwdGJtVjRkQ3dnTG1OaGNtOTFjMlZzTFdsMFpXMHRjSEpsZGljN1hHNWpiMjV6ZENCVFJVeEZRMVJQVWw5SlRrUkpRMEZVVDFKVElEMGdKeTVqWVhKdmRYTmxiQzFwYm1ScFkyRjBiM0p6Snp0Y2JtTnZibk4wSUZORlRFVkRWRTlTWDBsT1JFbERRVlJQVWlBOUlDZGJaR0YwWVMxaWN5MTBZWEpuWlhSZEp6dGNibU52Ym5OMElGTkZURVZEVkU5U1gwUkJWRUZmVTB4SlJFVWdQU0FuVzJSaGRHRXRZbk10YzJ4cFpHVmRMQ0JiWkdGMFlTMWljeTF6Ykdsa1pTMTBiMTBuTzF4dVkyOXVjM1FnVTBWTVJVTlVUMUpmUkVGVVFWOVNTVVJGSUQwZ0oxdGtZWFJoTFdKekxYSnBaR1U5WENKallYSnZkWE5sYkZ3aVhTYzdYRzVqYjI1emRDQlFUMGxPVkVWU1gxUlpVRVZmVkU5VlEwZ2dQU0FuZEc5MVkyZ25PMXh1WTI5dWMzUWdVRTlKVGxSRlVsOVVXVkJGWDFCRlRpQTlJQ2R3Wlc0bk8xeHVMeW9xWEc0Z0tpQXRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMWNiaUFxSUVOc1lYTnpJRVJsWm1sdWFYUnBiMjVjYmlBcUlDMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExWeHVJQ292WEc1Y2JtTnNZWE56SUVOaGNtOTFjMlZzSUdWNGRHVnVaSE1nUW1GelpVTnZiWEJ2Ym1WdWRDQjdYRzRnSUdOdmJuTjBjblZqZEc5eUtHVnNaVzFsYm5Rc0lHTnZibVpwWnlrZ2UxeHVJQ0FnSUhOMWNHVnlLR1ZzWlcxbGJuUXBPMXh1SUNBZ0lIUm9hWE11WDJsMFpXMXpJRDBnYm5Wc2JEdGNiaUFnSUNCMGFHbHpMbDlwYm5SbGNuWmhiQ0E5SUc1MWJHdzdYRzRnSUNBZ2RHaHBjeTVmWVdOMGFYWmxSV3hsYldWdWRDQTlJRzUxYkd3N1hHNGdJQ0FnZEdocGN5NWZhWE5RWVhWelpXUWdQU0JtWVd4elpUdGNiaUFnSUNCMGFHbHpMbDlwYzFOc2FXUnBibWNnUFNCbVlXeHpaVHRjYmlBZ0lDQjBhR2x6TG5SdmRXTm9WR2x0Wlc5MWRDQTlJRzUxYkd3N1hHNGdJQ0FnZEdocGN5NTBiM1ZqYUZOMFlYSjBXQ0E5SURBN1hHNGdJQ0FnZEdocGN5NTBiM1ZqYUVSbGJIUmhXQ0E5SURBN1hHNGdJQ0FnZEdocGN5NWZZMjl1Wm1sbklEMGdkR2hwY3k1ZloyVjBRMjl1Wm1sbktHTnZibVpwWnlrN1hHNGdJQ0FnZEdocGN5NWZhVzVrYVdOaGRHOXljMFZzWlcxbGJuUWdQU0JUWld4bFkzUnZja1Z1WjJsdVpTNW1hVzVrVDI1bEtGTkZURVZEVkU5U1gwbE9SRWxEUVZSUFVsTXNJSFJvYVhNdVgyVnNaVzFsYm5RcE8xeHVJQ0FnSUhSb2FYTXVYM1J2ZFdOb1UzVndjRzl5ZEdWa0lEMGdKMjl1ZEc5MVkyaHpkR0Z5ZENjZ2FXNGdaRzlqZFcxbGJuUXVaRzlqZFcxbGJuUkZiR1Z0Wlc1MElIeDhJRzVoZG1sbllYUnZjaTV0WVhoVWIzVmphRkJ2YVc1MGN5QStJREE3WEc0Z0lDQWdkR2hwY3k1ZmNHOXBiblJsY2tWMlpXNTBJRDBnUW05dmJHVmhiaWgzYVc1a2IzY3VVRzlwYm5SbGNrVjJaVzUwS1R0Y2JseHVJQ0FnSUhSb2FYTXVYMkZrWkVWMlpXNTBUR2x6ZEdWdVpYSnpLQ2s3WEc0Z0lIMGdMeThnUjJWMGRHVnljMXh1WEc1Y2JpQWdjM1JoZEdsaklHZGxkQ0JFWldaaGRXeDBLQ2tnZTF4dUlDQWdJSEpsZEhWeWJpQkVaV1poZFd4MEpHRTdYRzRnSUgxY2JseHVJQ0J6ZEdGMGFXTWdaMlYwSUU1QlRVVW9LU0I3WEc0Z0lDQWdjbVYwZFhKdUlFNUJUVVVrWWp0Y2JpQWdmU0F2THlCUWRXSnNhV05jYmx4dVhHNGdJRzVsZUhRb0tTQjdYRzRnSUNBZ2RHaHBjeTVmYzJ4cFpHVW9UMUpFUlZKZlRrVllWQ2s3WEc0Z0lIMWNibHh1SUNCdVpYaDBWMmhsYmxacGMybGliR1VvS1NCN1hHNGdJQ0FnTHk4Z1JHOXVKM1FnWTJGc2JDQnVaWGgwSUhkb1pXNGdkR2hsSUhCaFoyVWdhWE51SjNRZ2RtbHphV0pzWlZ4dUlDQWdJQzh2SUc5eUlIUm9aU0JqWVhKdmRYTmxiQ0J2Y2lCcGRITWdjR0Z5Wlc1MElHbHpiaWQwSUhacGMybGliR1ZjYmlBZ0lDQnBaaUFvSVdSdlkzVnRaVzUwTG1ocFpHUmxiaUFtSmlCcGMxWnBjMmxpYkdVb2RHaHBjeTVmWld4bGJXVnVkQ2twSUh0Y2JpQWdJQ0FnSUhSb2FYTXVibVY0ZENncE8xeHVJQ0FnSUgxY2JpQWdmVnh1WEc0Z0lIQnlaWFlvS1NCN1hHNGdJQ0FnZEdocGN5NWZjMnhwWkdVb1QxSkVSVkpmVUZKRlZpazdYRzRnSUgxY2JseHVJQ0J3WVhWelpTaGxkbVZ1ZENrZ2UxeHVJQ0FnSUdsbUlDZ2haWFpsYm5RcElIdGNiaUFnSUNBZ0lIUm9hWE11WDJselVHRjFjMlZrSUQwZ2RISjFaVHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQnBaaUFvVTJWc1pXTjBiM0pGYm1kcGJtVXVabWx1WkU5dVpTaFRSVXhGUTFSUFVsOU9SVmhVWDFCU1JWWXNJSFJvYVhNdVgyVnNaVzFsYm5RcEtTQjdYRzRnSUNBZ0lDQjBjbWxuWjJWeVZISmhibk5wZEdsdmJrVnVaQ2gwYUdsekxsOWxiR1Z0Wlc1MEtUdGNiaUFnSUNBZ0lIUm9hWE11WTNsamJHVW9kSEoxWlNrN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnWTJ4bFlYSkpiblJsY25aaGJDaDBhR2x6TGw5cGJuUmxjblpoYkNrN1hHNGdJQ0FnZEdocGN5NWZhVzUwWlhKMllXd2dQU0J1ZFd4c08xeHVJQ0I5WEc1Y2JpQWdZM2xqYkdVb1pYWmxiblFwSUh0Y2JpQWdJQ0JwWmlBb0lXVjJaVzUwS1NCN1hHNGdJQ0FnSUNCMGFHbHpMbDlwYzFCaGRYTmxaQ0E5SUdaaGJITmxPMXh1SUNBZ0lIMWNibHh1SUNBZ0lHbG1JQ2gwYUdsekxsOXBiblJsY25aaGJDa2dlMXh1SUNBZ0lDQWdZMnhsWVhKSmJuUmxjblpoYkNoMGFHbHpMbDlwYm5SbGNuWmhiQ2s3WEc0Z0lDQWdJQ0IwYUdsekxsOXBiblJsY25aaGJDQTlJRzUxYkd3N1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnYVdZZ0tIUm9hWE11WDJOdmJtWnBaeUFtSmlCMGFHbHpMbDlqYjI1bWFXY3VhVzUwWlhKMllXd2dKaVlnSVhSb2FYTXVYMmx6VUdGMWMyVmtLU0I3WEc0Z0lDQWdJQ0IwYUdsekxsOTFjR1JoZEdWSmJuUmxjblpoYkNncE8xeHVYRzRnSUNBZ0lDQjBhR2x6TGw5cGJuUmxjblpoYkNBOUlITmxkRWx1ZEdWeWRtRnNLQ2hrYjJOMWJXVnVkQzUyYVhOcFltbHNhWFI1VTNSaGRHVWdQeUIwYUdsekxtNWxlSFJYYUdWdVZtbHphV0pzWlNBNklIUm9hWE11Ym1WNGRDa3VZbWx1WkNoMGFHbHpLU3dnZEdocGN5NWZZMjl1Wm1sbkxtbHVkR1Z5ZG1Gc0tUdGNiaUFnSUNCOVhHNGdJSDFjYmx4dUlDQjBieWhwYm1SbGVDa2dlMXh1SUNBZ0lIUm9hWE11WDJGamRHbDJaVVZzWlcxbGJuUWdQU0JUWld4bFkzUnZja1Z1WjJsdVpTNW1hVzVrVDI1bEtGTkZURVZEVkU5U1gwRkRWRWxXUlY5SlZFVk5MQ0IwYUdsekxsOWxiR1Z0Wlc1MEtUdGNibHh1SUNBZ0lHTnZibk4wSUdGamRHbDJaVWx1WkdWNElEMGdkR2hwY3k1ZloyVjBTWFJsYlVsdVpHVjRLSFJvYVhNdVgyRmpkR2wyWlVWc1pXMWxiblFwTzF4dVhHNGdJQ0FnYVdZZ0tHbHVaR1Y0SUQ0Z2RHaHBjeTVmYVhSbGJYTXViR1Z1WjNSb0lDMGdNU0I4ZkNCcGJtUmxlQ0E4SURBcElIdGNiaUFnSUNBZ0lISmxkSFZ5Ymp0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JwWmlBb2RHaHBjeTVmYVhOVGJHbGthVzVuS1NCN1hHNGdJQ0FnSUNCRmRtVnVkRWhoYm1Sc1pYSXViMjVsS0hSb2FYTXVYMlZzWlcxbGJuUXNJRVZXUlU1VVgxTk1TVVFzSUNncElEMCtJSFJvYVhNdWRHOG9hVzVrWlhncEtUdGNiaUFnSUNBZ0lISmxkSFZ5Ymp0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JwWmlBb1lXTjBhWFpsU1c1a1pYZ2dQVDA5SUdsdVpHVjRLU0I3WEc0Z0lDQWdJQ0IwYUdsekxuQmhkWE5sS0NrN1hHNGdJQ0FnSUNCMGFHbHpMbU41WTJ4bEtDazdYRzRnSUNBZ0lDQnlaWFIxY200N1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnWTI5dWMzUWdiM0prWlhJZ1BTQnBibVJsZUNBK0lHRmpkR2wyWlVsdVpHVjRJRDhnVDFKRVJWSmZUa1ZZVkNBNklFOVNSRVZTWDFCU1JWWTdYRzVjYmlBZ0lDQjBhR2x6TGw5emJHbGtaU2h2Y21SbGNpd2dkR2hwY3k1ZmFYUmxiWE5iYVc1a1pYaGRLVHRjYmlBZ2ZTQXZMeUJRY21sMllYUmxYRzVjYmx4dUlDQmZaMlYwUTI5dVptbG5LR052Ym1acFp5a2dlMXh1SUNBZ0lHTnZibVpwWnlBOUlIc2dMaTR1UkdWbVlYVnNkQ1JoTEZ4dUlDQWdJQ0FnTGk0dVRXRnVhWEIxYkdGMGIzSXVaMlYwUkdGMFlVRjBkSEpwWW5WMFpYTW9kR2hwY3k1ZlpXeGxiV1Z1ZENrc1hHNGdJQ0FnSUNBdUxpNG9kSGx3Wlc5bUlHTnZibVpwWnlBOVBUMGdKMjlpYW1WamRDY2dQeUJqYjI1bWFXY2dPaUI3ZlNsY2JpQWdJQ0I5TzF4dUlDQWdJSFI1Y0dWRGFHVmphME52Ym1acFp5aE9RVTFGSkdJc0lHTnZibVpwWnl3Z1JHVm1ZWFZzZEZSNWNHVWtZU2s3WEc0Z0lDQWdjbVYwZFhKdUlHTnZibVpwWnp0Y2JpQWdmVnh1WEc0Z0lGOW9ZVzVrYkdWVGQybHdaU2dwSUh0Y2JpQWdJQ0JqYjI1emRDQmhZbk5FWld4MFlYZ2dQU0JOWVhSb0xtRmljeWgwYUdsekxuUnZkV05vUkdWc2RHRllLVHRjYmx4dUlDQWdJR2xtSUNoaFluTkVaV3gwWVhnZ1BEMGdVMWRKVUVWZlZFaFNSVk5JVDB4RUtTQjdYRzRnSUNBZ0lDQnlaWFIxY200N1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnWTI5dWMzUWdaR2x5WldOMGFXOXVJRDBnWVdKelJHVnNkR0Y0SUM4Z2RHaHBjeTUwYjNWamFFUmxiSFJoV0R0Y2JpQWdJQ0IwYUdsekxuUnZkV05vUkdWc2RHRllJRDBnTUR0Y2JseHVJQ0FnSUdsbUlDZ2haR2x5WldOMGFXOXVLU0I3WEc0Z0lDQWdJQ0J5WlhSMWNtNDdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2RHaHBjeTVmYzJ4cFpHVW9aR2x5WldOMGFXOXVJRDRnTUNBL0lFUkpVa1ZEVkVsUFRsOVNTVWRJVkNBNklFUkpVa1ZEVkVsUFRsOU1SVVpVS1R0Y2JpQWdmVnh1WEc0Z0lGOWhaR1JGZG1WdWRFeHBjM1JsYm1WeWN5Z3BJSHRjYmlBZ0lDQnBaaUFvZEdocGN5NWZZMjl1Wm1sbkxtdGxlV0p2WVhKa0tTQjdYRzRnSUNBZ0lDQkZkbVZ1ZEVoaGJtUnNaWEl1YjI0b2RHaHBjeTVmWld4bGJXVnVkQ3dnUlZaRlRsUmZTMFZaUkU5WFRpd2daWFpsYm5RZ1BUNGdkR2hwY3k1ZmEyVjVaRzkzYmlobGRtVnVkQ2twTzF4dUlDQWdJSDFjYmx4dUlDQWdJR2xtSUNoMGFHbHpMbDlqYjI1bWFXY3VjR0YxYzJVZ1BUMDlJQ2RvYjNabGNpY3BJSHRjYmlBZ0lDQWdJRVYyWlc1MFNHRnVaR3hsY2k1dmJpaDBhR2x6TGw5bGJHVnRaVzUwTENCRlZrVk9WRjlOVDFWVFJVVk9WRVZTTENCbGRtVnVkQ0E5UGlCMGFHbHpMbkJoZFhObEtHVjJaVzUwS1NrN1hHNGdJQ0FnSUNCRmRtVnVkRWhoYm1Sc1pYSXViMjRvZEdocGN5NWZaV3hsYldWdWRDd2dSVlpGVGxSZlRVOVZVMFZNUlVGV1JTd2daWFpsYm5RZ1BUNGdkR2hwY3k1amVXTnNaU2hsZG1WdWRDa3BPMXh1SUNBZ0lIMWNibHh1SUNBZ0lHbG1JQ2gwYUdsekxsOWpiMjVtYVdjdWRHOTFZMmdnSmlZZ2RHaHBjeTVmZEc5MVkyaFRkWEJ3YjNKMFpXUXBJSHRjYmlBZ0lDQWdJSFJvYVhNdVgyRmtaRlJ2ZFdOb1JYWmxiblJNYVhOMFpXNWxjbk1vS1R0Y2JpQWdJQ0I5WEc0Z0lIMWNibHh1SUNCZllXUmtWRzkxWTJoRmRtVnVkRXhwYzNSbGJtVnljeWdwSUh0Y2JpQWdJQ0JqYjI1emRDQm9ZWE5RYjJsdWRHVnlVR1Z1Vkc5MVkyZ2dQU0JsZG1WdWRDQTlQaUI3WEc0Z0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZmNHOXBiblJsY2tWMlpXNTBJQ1ltSUNobGRtVnVkQzV3YjJsdWRHVnlWSGx3WlNBOVBUMGdVRTlKVGxSRlVsOVVXVkJGWDFCRlRpQjhmQ0JsZG1WdWRDNXdiMmx1ZEdWeVZIbHdaU0E5UFQwZ1VFOUpUbFJGVWw5VVdWQkZYMVJQVlVOSUtUdGNiaUFnSUNCOU8xeHVYRzRnSUNBZ1kyOXVjM1FnYzNSaGNuUWdQU0JsZG1WdWRDQTlQaUI3WEc0Z0lDQWdJQ0JwWmlBb2FHRnpVRzlwYm5SbGNsQmxibFJ2ZFdOb0tHVjJaVzUwS1NrZ2UxeHVJQ0FnSUNBZ0lDQjBhR2x6TG5SdmRXTm9VM1JoY25SWUlEMGdaWFpsYm5RdVkyeHBaVzUwV0R0Y2JpQWdJQ0FnSUgwZ1pXeHpaU0JwWmlBb0lYUm9hWE11WDNCdmFXNTBaWEpGZG1WdWRDa2dlMXh1SUNBZ0lDQWdJQ0IwYUdsekxuUnZkV05vVTNSaGNuUllJRDBnWlhabGJuUXVkRzkxWTJobGMxc3dYUzVqYkdsbGJuUllPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lIMDdYRzVjYmlBZ0lDQmpiMjV6ZENCdGIzWmxJRDBnWlhabGJuUWdQVDRnZTF4dUlDQWdJQ0FnTHk4Z1pXNXpkWEpsSUhOM2FYQnBibWNnZDJsMGFDQnZibVVnZEc5MVkyZ2dZVzVrSUc1dmRDQndhVzVqYUdsdVoxeHVJQ0FnSUNBZ2RHaHBjeTUwYjNWamFFUmxiSFJoV0NBOUlHVjJaVzUwTG5SdmRXTm9aWE1nSmlZZ1pYWmxiblF1ZEc5MVkyaGxjeTVzWlc1bmRHZ2dQaUF4SUQ4Z01DQTZJR1YyWlc1MExuUnZkV05vWlhOYk1GMHVZMnhwWlc1MFdDQXRJSFJvYVhNdWRHOTFZMmhUZEdGeWRGZzdYRzRnSUNBZ2ZUdGNibHh1SUNBZ0lHTnZibk4wSUdWdVpDQTlJR1YyWlc1MElEMCtJSHRjYmlBZ0lDQWdJR2xtSUNob1lYTlFiMmx1ZEdWeVVHVnVWRzkxWTJnb1pYWmxiblFwS1NCN1hHNGdJQ0FnSUNBZ0lIUm9hWE11ZEc5MVkyaEVaV3gwWVZnZ1BTQmxkbVZ1ZEM1amJHbGxiblJZSUMwZ2RHaHBjeTUwYjNWamFGTjBZWEowV0R0Y2JpQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ2RHaHBjeTVmYUdGdVpHeGxVM2RwY0dVb0tUdGNibHh1SUNBZ0lDQWdhV1lnS0hSb2FYTXVYMk52Ym1acFp5NXdZWFZ6WlNBOVBUMGdKMmh2ZG1WeUp5a2dlMXh1SUNBZ0lDQWdJQ0F2THlCSlppQnBkQ2R6SUdFZ2RHOTFZMmd0Wlc1aFlteGxaQ0JrWlhacFkyVXNJRzF2ZFhObFpXNTBaWEl2YkdWaGRtVWdZWEpsSUdacGNtVmtJR0Z6WEc0Z0lDQWdJQ0FnSUM4dklIQmhjblFnYjJZZ2RHaGxJRzF2ZFhObElHTnZiWEJoZEdsaWFXeHBkSGtnWlhabGJuUnpJRzl1SUdacGNuTjBJSFJoY0NBdElIUm9aU0JqWVhKdmRYTmxiRnh1SUNBZ0lDQWdJQ0F2THlCM2IzVnNaQ0J6ZEc5d0lHTjVZMnhwYm1jZ2RXNTBhV3dnZFhObGNpQjBZWEJ3WldRZ2IzVjBJRzltSUdsME8xeHVJQ0FnSUNBZ0lDQXZMeUJvWlhKbExDQjNaU0JzYVhOMFpXNGdabTl5SUhSdmRXTm9aVzVrTENCbGVIQnNhV05wZEd4NUlIQmhkWE5sSUhSb1pTQmpZWEp2ZFhObGJGeHVJQ0FnSUNBZ0lDQXZMeUFvWVhNZ2FXWWdhWFFuY3lCMGFHVWdjMlZqYjI1a0lIUnBiV1VnZDJVZ2RHRndJRzl1SUdsMExDQnRiM1Z6WldWdWRHVnlJR052YlhCaGRDQmxkbVZ1ZEZ4dUlDQWdJQ0FnSUNBdkx5QnBjeUJPVDFRZ1ptbHlaV1FwSUdGdVpDQmhablJsY2lCaElIUnBiV1Z2ZFhRZ0tIUnZJR0ZzYkc5M0lHWnZjaUJ0YjNWelpTQmpiMjF3WVhScFltbHNhWFI1WEc0Z0lDQWdJQ0FnSUM4dklHVjJaVzUwY3lCMGJ5Qm1hWEpsS1NCM1pTQmxlSEJzYVdOcGRHeDVJSEpsYzNSaGNuUWdZM2xqYkdsdVoxeHVJQ0FnSUNBZ0lDQjBhR2x6TG5CaGRYTmxLQ2s3WEc1Y2JpQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdWRHOTFZMmhVYVcxbGIzVjBLU0I3WEc0Z0lDQWdJQ0FnSUNBZ1kyeGxZWEpVYVcxbGIzVjBLSFJvYVhNdWRHOTFZMmhVYVcxbGIzVjBLVHRjYmlBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lIUm9hWE11ZEc5MVkyaFVhVzFsYjNWMElEMGdjMlYwVkdsdFpXOTFkQ2hsZG1WdWRDQTlQaUIwYUdsekxtTjVZMnhsS0dWMlpXNTBLU3dnVkU5VlEwaEZWa1ZPVkY5RFQwMVFRVlJmVjBGSlZDQXJJSFJvYVhNdVgyTnZibVpwWnk1cGJuUmxjblpoYkNrN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnZlR0Y2JseHVJQ0FnSUZObGJHVmpkRzl5Ulc1bmFXNWxMbVpwYm1Rb1UwVk1SVU5VVDFKZlNWUkZUVjlKVFVjc0lIUm9hWE11WDJWc1pXMWxiblFwTG1admNrVmhZMmdvYVhSbGJVbHRaeUE5UGlCN1hHNGdJQ0FnSUNCRmRtVnVkRWhoYm1Sc1pYSXViMjRvYVhSbGJVbHRaeXdnUlZaRlRsUmZSRkpCUjE5VFZFRlNWQ3dnWlhabGJuUWdQVDRnWlhabGJuUXVjSEpsZG1WdWRFUmxabUYxYkhRb0tTazdYRzRnSUNBZ2ZTazdYRzVjYmlBZ0lDQnBaaUFvZEdocGN5NWZjRzlwYm5SbGNrVjJaVzUwS1NCN1hHNGdJQ0FnSUNCRmRtVnVkRWhoYm1Sc1pYSXViMjRvZEdocGN5NWZaV3hsYldWdWRDd2dSVlpGVGxSZlVFOUpUbFJGVWtSUFYwNHNJR1YyWlc1MElEMCtJSE4wWVhKMEtHVjJaVzUwS1NrN1hHNGdJQ0FnSUNCRmRtVnVkRWhoYm1Sc1pYSXViMjRvZEdocGN5NWZaV3hsYldWdWRDd2dSVlpGVGxSZlVFOUpUbFJGVWxWUUxDQmxkbVZ1ZENBOVBpQmxibVFvWlhabGJuUXBLVHRjYmx4dUlDQWdJQ0FnZEdocGN5NWZaV3hsYldWdWRDNWpiR0Z6YzB4cGMzUXVZV1JrS0VOTVFWTlRYMDVCVFVWZlVFOUpUbFJGVWw5RlZrVk9WQ2s3WEc0Z0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lFVjJaVzUwU0dGdVpHeGxjaTV2YmloMGFHbHpMbDlsYkdWdFpXNTBMQ0JGVmtWT1ZGOVVUMVZEU0ZOVVFWSlVMQ0JsZG1WdWRDQTlQaUJ6ZEdGeWRDaGxkbVZ1ZENrcE8xeHVJQ0FnSUNBZ1JYWmxiblJJWVc1a2JHVnlMbTl1S0hSb2FYTXVYMlZzWlcxbGJuUXNJRVZXUlU1VVgxUlBWVU5JVFU5V1JTd2daWFpsYm5RZ1BUNGdiVzkyWlNobGRtVnVkQ2twTzF4dUlDQWdJQ0FnUlhabGJuUklZVzVrYkdWeUxtOXVLSFJvYVhNdVgyVnNaVzFsYm5Rc0lFVldSVTVVWDFSUFZVTklSVTVFTENCbGRtVnVkQ0E5UGlCbGJtUW9aWFpsYm5RcEtUdGNiaUFnSUNCOVhHNGdJSDFjYmx4dUlDQmZhMlY1Wkc5M2JpaGxkbVZ1ZENrZ2UxeHVJQ0FnSUdsbUlDZ3ZhVzV3ZFhSOGRHVjRkR0Z5WldFdmFTNTBaWE4wS0dWMlpXNTBMblJoY21kbGRDNTBZV2RPWVcxbEtTa2dlMXh1SUNBZ0lDQWdjbVYwZFhKdU8xeHVJQ0FnSUgxY2JseHVJQ0FnSUdOdmJuTjBJR1JwY21WamRHbHZiaUE5SUV0RldWOVVUMTlFU1ZKRlExUkpUMDViWlhabGJuUXVhMlY1WFR0Y2JseHVJQ0FnSUdsbUlDaGthWEpsWTNScGIyNHBJSHRjYmlBZ0lDQWdJR1YyWlc1MExuQnlaWFpsYm5SRVpXWmhkV3gwS0NrN1hHNWNiaUFnSUNBZ0lIUm9hWE11WDNOc2FXUmxLR1JwY21WamRHbHZiaWs3WEc0Z0lDQWdmVnh1SUNCOVhHNWNiaUFnWDJkbGRFbDBaVzFKYm1SbGVDaGxiR1Z0Wlc1MEtTQjdYRzRnSUNBZ2RHaHBjeTVmYVhSbGJYTWdQU0JsYkdWdFpXNTBJQ1ltSUdWc1pXMWxiblF1Y0dGeVpXNTBUbTlrWlNBL0lGTmxiR1ZqZEc5eVJXNW5hVzVsTG1acGJtUW9VMFZNUlVOVVQxSmZTVlJGVFN3Z1pXeGxiV1Z1ZEM1d1lYSmxiblJPYjJSbEtTQTZJRnRkTzF4dUlDQWdJSEpsZEhWeWJpQjBhR2x6TGw5cGRHVnRjeTVwYm1SbGVFOW1LR1ZzWlcxbGJuUXBPMXh1SUNCOVhHNWNiaUFnWDJkbGRFbDBaVzFDZVU5eVpHVnlLRzl5WkdWeUxDQmhZM1JwZG1WRmJHVnRaVzUwS1NCN1hHNGdJQ0FnWTI5dWMzUWdhWE5PWlhoMElEMGdiM0prWlhJZ1BUMDlJRTlTUkVWU1gwNUZXRlE3WEc0Z0lDQWdjbVYwZFhKdUlHZGxkRTVsZUhSQlkzUnBkbVZGYkdWdFpXNTBLSFJvYVhNdVgybDBaVzF6TENCaFkzUnBkbVZGYkdWdFpXNTBMQ0JwYzA1bGVIUXNJSFJvYVhNdVgyTnZibVpwWnk1M2NtRndLVHRjYmlBZ2ZWeHVYRzRnSUY5MGNtbG5aMlZ5VTJ4cFpHVkZkbVZ1ZENoeVpXeGhkR1ZrVkdGeVoyVjBMQ0JsZG1WdWRFUnBjbVZqZEdsdmJrNWhiV1VwSUh0Y2JpQWdJQ0JqYjI1emRDQjBZWEpuWlhSSmJtUmxlQ0E5SUhSb2FYTXVYMmRsZEVsMFpXMUpibVJsZUNoeVpXeGhkR1ZrVkdGeVoyVjBLVHRjYmx4dUlDQWdJR052Ym5OMElHWnliMjFKYm1SbGVDQTlJSFJvYVhNdVgyZGxkRWwwWlcxSmJtUmxlQ2hUWld4bFkzUnZja1Z1WjJsdVpTNW1hVzVrVDI1bEtGTkZURVZEVkU5U1gwRkRWRWxXUlY5SlZFVk5MQ0IwYUdsekxsOWxiR1Z0Wlc1MEtTazdYRzVjYmlBZ0lDQnlaWFIxY200Z1JYWmxiblJJWVc1a2JHVnlMblJ5YVdkblpYSW9kR2hwY3k1ZlpXeGxiV1Z1ZEN3Z1JWWkZUbFJmVTB4SlJFVXNJSHRjYmlBZ0lDQWdJSEpsYkdGMFpXUlVZWEpuWlhRc1hHNGdJQ0FnSUNCa2FYSmxZM1JwYjI0NklHVjJaVzUwUkdseVpXTjBhVzl1VG1GdFpTeGNiaUFnSUNBZ0lHWnliMjA2SUdaeWIyMUpibVJsZUN4Y2JpQWdJQ0FnSUhSdk9pQjBZWEpuWlhSSmJtUmxlRnh1SUNBZ0lIMHBPMXh1SUNCOVhHNWNiaUFnWDNObGRFRmpkR2wyWlVsdVpHbGpZWFJ2Y2tWc1pXMWxiblFvWld4bGJXVnVkQ2tnZTF4dUlDQWdJR2xtSUNoMGFHbHpMbDlwYm1ScFkyRjBiM0p6Uld4bGJXVnVkQ2tnZTF4dUlDQWdJQ0FnWTI5dWMzUWdZV04wYVhabFNXNWthV05oZEc5eUlEMGdVMlZzWldOMGIzSkZibWRwYm1VdVptbHVaRTl1WlNoVFJVeEZRMVJQVWw5QlExUkpWa1VrTVN3Z2RHaHBjeTVmYVc1a2FXTmhkRzl5YzBWc1pXMWxiblFwTzF4dUlDQWdJQ0FnWVdOMGFYWmxTVzVrYVdOaGRHOXlMbU5zWVhOelRHbHpkQzV5WlcxdmRtVW9RMHhCVTFOZlRrRk5SVjlCUTFSSlZrVWtNaWs3WEc0Z0lDQWdJQ0JoWTNScGRtVkpibVJwWTJGMGIzSXVjbVZ0YjNabFFYUjBjbWxpZFhSbEtDZGhjbWxoTFdOMWNuSmxiblFuS1R0Y2JpQWdJQ0FnSUdOdmJuTjBJR2x1WkdsallYUnZjbk1nUFNCVFpXeGxZM1J2Y2tWdVoybHVaUzVtYVc1a0tGTkZURVZEVkU5U1gwbE9SRWxEUVZSUFVpd2dkR2hwY3k1ZmFXNWthV05oZEc5eWMwVnNaVzFsYm5RcE8xeHVYRzRnSUNBZ0lDQm1iM0lnS0d4bGRDQnBJRDBnTURzZ2FTQThJR2x1WkdsallYUnZjbk11YkdWdVozUm9PeUJwS3lzcElIdGNiaUFnSUNBZ0lDQWdhV1lnS0U1MWJXSmxjaTV3WVhKelpVbHVkQ2hwYm1ScFkyRjBiM0p6VzJsZExtZGxkRUYwZEhKcFluVjBaU2duWkdGMFlTMWljeTF6Ykdsa1pTMTBieWNwTENBeE1Da2dQVDA5SUhSb2FYTXVYMmRsZEVsMFpXMUpibVJsZUNobGJHVnRaVzUwS1NrZ2UxeHVJQ0FnSUNBZ0lDQWdJR2x1WkdsallYUnZjbk5iYVYwdVkyeGhjM05NYVhOMExtRmtaQ2hEVEVGVFUxOU9RVTFGWDBGRFZFbFdSU1F5S1R0Y2JpQWdJQ0FnSUNBZ0lDQnBibVJwWTJGMGIzSnpXMmxkTG5ObGRFRjBkSEpwWW5WMFpTZ25ZWEpwWVMxamRYSnlaVzUwSnl3Z0ozUnlkV1VuS1R0Y2JpQWdJQ0FnSUNBZ0lDQmljbVZoYXp0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JpQWdmVnh1WEc0Z0lGOTFjR1JoZEdWSmJuUmxjblpoYkNncElIdGNiaUFnSUNCamIyNXpkQ0JsYkdWdFpXNTBJRDBnZEdocGN5NWZZV04wYVhabFJXeGxiV1Z1ZENCOGZDQlRaV3hsWTNSdmNrVnVaMmx1WlM1bWFXNWtUMjVsS0ZORlRFVkRWRTlTWDBGRFZFbFdSVjlKVkVWTkxDQjBhR2x6TGw5bGJHVnRaVzUwS1R0Y2JseHVJQ0FnSUdsbUlDZ2haV3hsYldWdWRDa2dlMXh1SUNBZ0lDQWdjbVYwZFhKdU8xeHVJQ0FnSUgxY2JseHVJQ0FnSUdOdmJuTjBJR1ZzWlcxbGJuUkpiblJsY25aaGJDQTlJRTUxYldKbGNpNXdZWEp6WlVsdWRDaGxiR1Z0Wlc1MExtZGxkRUYwZEhKcFluVjBaU2duWkdGMFlTMWljeTFwYm5SbGNuWmhiQ2NwTENBeE1DazdYRzVjYmlBZ0lDQnBaaUFvWld4bGJXVnVkRWx1ZEdWeWRtRnNLU0I3WEc0Z0lDQWdJQ0IwYUdsekxsOWpiMjVtYVdjdVpHVm1ZWFZzZEVsdWRHVnlkbUZzSUQwZ2RHaHBjeTVmWTI5dVptbG5MbVJsWm1GMWJIUkpiblJsY25aaGJDQjhmQ0IwYUdsekxsOWpiMjVtYVdjdWFXNTBaWEoyWVd3N1hHNGdJQ0FnSUNCMGFHbHpMbDlqYjI1bWFXY3VhVzUwWlhKMllXd2dQU0JsYkdWdFpXNTBTVzUwWlhKMllXdzdYRzRnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUhSb2FYTXVYMk52Ym1acFp5NXBiblJsY25aaGJDQTlJSFJvYVhNdVgyTnZibVpwWnk1a1pXWmhkV3gwU1c1MFpYSjJZV3dnZkh3Z2RHaHBjeTVmWTI5dVptbG5MbWx1ZEdWeWRtRnNPMXh1SUNBZ0lIMWNiaUFnZlZ4dVhHNGdJRjl6Ykdsa1pTaGthWEpsWTNScGIyNVBjazl5WkdWeUxDQmxiR1Z0Wlc1MEtTQjdYRzRnSUNBZ1kyOXVjM1FnYjNKa1pYSWdQU0IwYUdsekxsOWthWEpsWTNScGIyNVViMDl5WkdWeUtHUnBjbVZqZEdsdmJrOXlUM0prWlhJcE8xeHVYRzRnSUNBZ1kyOXVjM1FnWVdOMGFYWmxSV3hsYldWdWRDQTlJRk5sYkdWamRHOXlSVzVuYVc1bExtWnBibVJQYm1Vb1UwVk1SVU5VVDFKZlFVTlVTVlpGWDBsVVJVMHNJSFJvYVhNdVgyVnNaVzFsYm5RcE8xeHVYRzRnSUNBZ1kyOXVjM1FnWVdOMGFYWmxSV3hsYldWdWRFbHVaR1Y0SUQwZ2RHaHBjeTVmWjJWMFNYUmxiVWx1WkdWNEtHRmpkR2wyWlVWc1pXMWxiblFwTzF4dVhHNGdJQ0FnWTI5dWMzUWdibVY0ZEVWc1pXMWxiblFnUFNCbGJHVnRaVzUwSUh4OElIUm9hWE11WDJkbGRFbDBaVzFDZVU5eVpHVnlLRzl5WkdWeUxDQmhZM1JwZG1WRmJHVnRaVzUwS1R0Y2JseHVJQ0FnSUdOdmJuTjBJRzVsZUhSRmJHVnRaVzUwU1c1a1pYZ2dQU0IwYUdsekxsOW5aWFJKZEdWdFNXNWtaWGdvYm1WNGRFVnNaVzFsYm5RcE8xeHVYRzRnSUNBZ1kyOXVjM1FnYVhORGVXTnNhVzVuSUQwZ1FtOXZiR1ZoYmloMGFHbHpMbDlwYm5SbGNuWmhiQ2s3WEc0Z0lDQWdZMjl1YzNRZ2FYTk9aWGgwSUQwZ2IzSmtaWElnUFQwOUlFOVNSRVZTWDA1RldGUTdYRzRnSUNBZ1kyOXVjM1FnWkdseVpXTjBhVzl1WVd4RGJHRnpjMDVoYldVZ1BTQnBjMDVsZUhRZ1B5QkRURUZUVTE5T1FVMUZYMU5VUVZKVUlEb2dRMHhCVTFOZlRrRk5SVjlGVGtRN1hHNGdJQ0FnWTI5dWMzUWdiM0prWlhKRGJHRnpjMDVoYldVZ1BTQnBjMDVsZUhRZ1B5QkRURUZUVTE5T1FVMUZYMDVGV0ZRZ09pQkRURUZUVTE5T1FVMUZYMUJTUlZZN1hHNWNiaUFnSUNCamIyNXpkQ0JsZG1WdWRFUnBjbVZqZEdsdmJrNWhiV1VnUFNCMGFHbHpMbDl2Y21SbGNsUnZSR2x5WldOMGFXOXVLRzl5WkdWeUtUdGNibHh1SUNBZ0lHbG1JQ2h1WlhoMFJXeGxiV1Z1ZENBbUppQnVaWGgwUld4bGJXVnVkQzVqYkdGemMweHBjM1F1WTI5dWRHRnBibk1vUTB4QlUxTmZUa0ZOUlY5QlExUkpWa1VrTWlrcElIdGNiaUFnSUNBZ0lIUm9hWE11WDJselUyeHBaR2x1WnlBOUlHWmhiSE5sTzF4dUlDQWdJQ0FnY21WMGRYSnVPMXh1SUNBZ0lIMWNibHh1SUNBZ0lHbG1JQ2gwYUdsekxsOXBjMU5zYVdScGJtY3BJSHRjYmlBZ0lDQWdJSEpsZEhWeWJqdGNiaUFnSUNCOVhHNWNiaUFnSUNCamIyNXpkQ0J6Ykdsa1pVVjJaVzUwSUQwZ2RHaHBjeTVmZEhKcFoyZGxjbE5zYVdSbFJYWmxiblFvYm1WNGRFVnNaVzFsYm5Rc0lHVjJaVzUwUkdseVpXTjBhVzl1VG1GdFpTazdYRzVjYmlBZ0lDQnBaaUFvYzJ4cFpHVkZkbVZ1ZEM1a1pXWmhkV3gwVUhKbGRtVnVkR1ZrS1NCN1hHNGdJQ0FnSUNCeVpYUjFjbTQ3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdhV1lnS0NGaFkzUnBkbVZGYkdWdFpXNTBJSHg4SUNGdVpYaDBSV3hsYldWdWRDa2dlMXh1SUNBZ0lDQWdMeThnVTI5dFpTQjNaV2x5Wkc1bGMzTWdhWE1nYUdGd2NHVnVhVzVuTENCemJ5QjNaU0JpWVdsc1hHNGdJQ0FnSUNCeVpYUjFjbTQ3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdkR2hwY3k1ZmFYTlRiR2xrYVc1bklEMGdkSEoxWlR0Y2JseHVJQ0FnSUdsbUlDaHBjME41WTJ4cGJtY3BJSHRjYmlBZ0lDQWdJSFJvYVhNdWNHRjFjMlVvS1R0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0IwYUdsekxsOXpaWFJCWTNScGRtVkpibVJwWTJGMGIzSkZiR1Z0Wlc1MEtHNWxlSFJGYkdWdFpXNTBLVHRjYmx4dUlDQWdJSFJvYVhNdVgyRmpkR2wyWlVWc1pXMWxiblFnUFNCdVpYaDBSV3hsYldWdWREdGNibHh1SUNBZ0lHTnZibk4wSUhSeWFXZG5aWEpUYkdsa1JYWmxiblFnUFNBb0tTQTlQaUI3WEc0Z0lDQWdJQ0JGZG1WdWRFaGhibVJzWlhJdWRISnBaMmRsY2loMGFHbHpMbDlsYkdWdFpXNTBMQ0JGVmtWT1ZGOVRURWxFTENCN1hHNGdJQ0FnSUNBZ0lISmxiR0YwWldSVVlYSm5aWFE2SUc1bGVIUkZiR1Z0Wlc1MExGeHVJQ0FnSUNBZ0lDQmthWEpsWTNScGIyNDZJR1YyWlc1MFJHbHlaV04wYVc5dVRtRnRaU3hjYmlBZ0lDQWdJQ0FnWm5KdmJUb2dZV04wYVhabFJXeGxiV1Z1ZEVsdVpHVjRMRnh1SUNBZ0lDQWdJQ0IwYnpvZ2JtVjRkRVZzWlcxbGJuUkpibVJsZUZ4dUlDQWdJQ0FnZlNrN1hHNGdJQ0FnZlR0Y2JseHVJQ0FnSUdsbUlDaDBhR2x6TGw5bGJHVnRaVzUwTG1Oc1lYTnpUR2x6ZEM1amIyNTBZV2x1Y3loRFRFRlRVMTlPUVUxRlgxTk1TVVJGS1NrZ2UxeHVJQ0FnSUNBZ2JtVjRkRVZzWlcxbGJuUXVZMnhoYzNOTWFYTjBMbUZrWkNodmNtUmxja05zWVhOelRtRnRaU2s3WEc0Z0lDQWdJQ0J5Wldac2IzY29ibVY0ZEVWc1pXMWxiblFwTzF4dUlDQWdJQ0FnWVdOMGFYWmxSV3hsYldWdWRDNWpiR0Z6YzB4cGMzUXVZV1JrS0dScGNtVmpkR2x2Ym1Gc1EyeGhjM05PWVcxbEtUdGNiaUFnSUNBZ0lHNWxlSFJGYkdWdFpXNTBMbU5zWVhOelRHbHpkQzVoWkdRb1pHbHlaV04wYVc5dVlXeERiR0Z6YzA1aGJXVXBPMXh1WEc0Z0lDQWdJQ0JqYjI1emRDQmpiMjF3YkdWMFpVTmhiR3hDWVdOcklEMGdLQ2tnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQnVaWGgwUld4bGJXVnVkQzVqYkdGemMweHBjM1F1Y21WdGIzWmxLR1JwY21WamRHbHZibUZzUTJ4aGMzTk9ZVzFsTENCdmNtUmxja05zWVhOelRtRnRaU2s3WEc0Z0lDQWdJQ0FnSUc1bGVIUkZiR1Z0Wlc1MExtTnNZWE56VEdsemRDNWhaR1FvUTB4QlUxTmZUa0ZOUlY5QlExUkpWa1VrTWlrN1hHNGdJQ0FnSUNBZ0lHRmpkR2wyWlVWc1pXMWxiblF1WTJ4aGMzTk1hWE4wTG5KbGJXOTJaU2hEVEVGVFUxOU9RVTFGWDBGRFZFbFdSU1F5TENCdmNtUmxja05zWVhOelRtRnRaU3dnWkdseVpXTjBhVzl1WVd4RGJHRnpjMDVoYldVcE8xeHVJQ0FnSUNBZ0lDQjBhR2x6TGw5cGMxTnNhV1JwYm1jZ1BTQm1ZV3h6WlR0Y2JpQWdJQ0FnSUNBZ2MyVjBWR2x0Wlc5MWRDaDBjbWxuWjJWeVUyeHBaRVYyWlc1MExDQXdLVHRjYmlBZ0lDQWdJSDA3WEc1Y2JpQWdJQ0FnSUhSb2FYTXVYM0YxWlhWbFEyRnNiR0poWTJzb1kyOXRjR3hsZEdWRFlXeHNRbUZqYXl3Z1lXTjBhWFpsUld4bGJXVnVkQ3dnZEhKMVpTazdYRzRnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUdGamRHbDJaVVZzWlcxbGJuUXVZMnhoYzNOTWFYTjBMbkpsYlc5MlpTaERURUZUVTE5T1FVMUZYMEZEVkVsV1JTUXlLVHRjYmlBZ0lDQWdJRzVsZUhSRmJHVnRaVzUwTG1Oc1lYTnpUR2x6ZEM1aFpHUW9RMHhCVTFOZlRrRk5SVjlCUTFSSlZrVWtNaWs3WEc0Z0lDQWdJQ0IwYUdsekxsOXBjMU5zYVdScGJtY2dQU0JtWVd4elpUdGNiaUFnSUNBZ0lIUnlhV2RuWlhKVGJHbGtSWFpsYm5Rb0tUdGNiaUFnSUNCOVhHNWNiaUFnSUNCcFppQW9hWE5EZVdOc2FXNW5LU0I3WEc0Z0lDQWdJQ0IwYUdsekxtTjVZMnhsS0NrN1hHNGdJQ0FnZlZ4dUlDQjlYRzVjYmlBZ1gyUnBjbVZqZEdsdmJsUnZUM0prWlhJb1pHbHlaV04wYVc5dUtTQjdYRzRnSUNBZ2FXWWdLQ0ZiUkVsU1JVTlVTVTlPWDFKSlIwaFVMQ0JFU1ZKRlExUkpUMDVmVEVWR1ZGMHVhVzVqYkhWa1pYTW9aR2x5WldOMGFXOXVLU2tnZTF4dUlDQWdJQ0FnY21WMGRYSnVJR1JwY21WamRHbHZianRjYmlBZ0lDQjlYRzVjYmlBZ0lDQnBaaUFvYVhOU1ZFd29LU2tnZTF4dUlDQWdJQ0FnY21WMGRYSnVJR1JwY21WamRHbHZiaUE5UFQwZ1JFbFNSVU5VU1U5T1gweEZSbFFnUHlCUFVrUkZVbDlRVWtWV0lEb2dUMUpFUlZKZlRrVllWRHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQnlaWFIxY200Z1pHbHlaV04wYVc5dUlEMDlQU0JFU1ZKRlExUkpUMDVmVEVWR1ZDQS9JRTlTUkVWU1gwNUZXRlFnT2lCUFVrUkZVbDlRVWtWV08xeHVJQ0I5WEc1Y2JpQWdYMjl5WkdWeVZHOUVhWEpsWTNScGIyNG9iM0prWlhJcElIdGNiaUFnSUNCcFppQW9JVnRQVWtSRlVsOU9SVmhVTENCUFVrUkZVbDlRVWtWV1hTNXBibU5zZFdSbGN5aHZjbVJsY2lrcElIdGNiaUFnSUNBZ0lISmxkSFZ5YmlCdmNtUmxjanRjYmlBZ0lDQjlYRzVjYmlBZ0lDQnBaaUFvYVhOU1ZFd29LU2tnZTF4dUlDQWdJQ0FnY21WMGRYSnVJRzl5WkdWeUlEMDlQU0JQVWtSRlVsOVFVa1ZXSUQ4Z1JFbFNSVU5VU1U5T1gweEZSbFFnT2lCRVNWSkZRMVJKVDA1ZlVrbEhTRlE3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdjbVYwZFhKdUlHOXlaR1Z5SUQwOVBTQlBVa1JGVWw5UVVrVldJRDhnUkVsU1JVTlVTVTlPWDFKSlIwaFVJRG9nUkVsU1JVTlVTVTlPWDB4RlJsUTdYRzRnSUgwZ0x5OGdVM1JoZEdsalhHNWNibHh1SUNCemRHRjBhV01nWTJGeWIzVnpaV3hKYm5SbGNtWmhZMlVvWld4bGJXVnVkQ3dnWTI5dVptbG5LU0I3WEc0Z0lDQWdZMjl1YzNRZ1pHRjBZU0E5SUVOaGNtOTFjMlZzTG1kbGRFOXlRM0psWVhSbFNXNXpkR0Z1WTJVb1pXeGxiV1Z1ZEN3Z1kyOXVabWxuS1R0Y2JpQWdJQ0JzWlhRZ2UxeHVJQ0FnSUNBZ1gyTnZibVpwWjF4dUlDQWdJSDBnUFNCa1lYUmhPMXh1WEc0Z0lDQWdhV1lnS0hSNWNHVnZaaUJqYjI1bWFXY2dQVDA5SUNkdlltcGxZM1FuS1NCN1hHNGdJQ0FnSUNCZlkyOXVabWxuSUQwZ2V5QXVMaTVmWTI5dVptbG5MRnh1SUNBZ0lDQWdJQ0F1TGk1amIyNW1hV2RjYmlBZ0lDQWdJSDA3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdZMjl1YzNRZ1lXTjBhVzl1SUQwZ2RIbHdaVzltSUdOdmJtWnBaeUE5UFQwZ0ozTjBjbWx1WnljZ1B5QmpiMjVtYVdjZ09pQmZZMjl1Wm1sbkxuTnNhV1JsTzF4dVhHNGdJQ0FnYVdZZ0tIUjVjR1Z2WmlCamIyNW1hV2NnUFQwOUlDZHVkVzFpWlhJbktTQjdYRzRnSUNBZ0lDQmtZWFJoTG5SdktHTnZibVpwWnlrN1hHNGdJQ0FnZlNCbGJITmxJR2xtSUNoMGVYQmxiMllnWVdOMGFXOXVJRDA5UFNBbmMzUnlhVzVuSnlrZ2UxeHVJQ0FnSUNBZ2FXWWdLSFI1Y0dWdlppQmtZWFJoVzJGamRHbHZibDBnUFQwOUlDZDFibVJsWm1sdVpXUW5LU0I3WEc0Z0lDQWdJQ0FnSUhSb2NtOTNJRzVsZHlCVWVYQmxSWEp5YjNJb1lFNXZJRzFsZEdodlpDQnVZVzFsWkNCY0lpUjdZV04wYVc5dWZWd2lZQ2s3WEc0Z0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUdSaGRHRmJZV04wYVc5dVhTZ3BPMXh1SUNBZ0lIMGdaV3h6WlNCcFppQW9YMk52Ym1acFp5NXBiblJsY25aaGJDQW1KaUJmWTI5dVptbG5MbkpwWkdVcElIdGNiaUFnSUNBZ0lHUmhkR0V1Y0dGMWMyVW9LVHRjYmlBZ0lDQWdJR1JoZEdFdVkzbGpiR1VvS1R0Y2JpQWdJQ0I5WEc0Z0lIMWNibHh1SUNCemRHRjBhV01nYWxGMVpYSjVTVzUwWlhKbVlXTmxLR052Ym1acFp5a2dlMXh1SUNBZ0lISmxkSFZ5YmlCMGFHbHpMbVZoWTJnb1puVnVZM1JwYjI0Z0tDa2dlMXh1SUNBZ0lDQWdRMkZ5YjNWelpXd3VZMkZ5YjNWelpXeEpiblJsY21aaFkyVW9kR2hwY3l3Z1kyOXVabWxuS1R0Y2JpQWdJQ0I5S1R0Y2JpQWdmVnh1WEc0Z0lITjBZWFJwWXlCa1lYUmhRWEJwUTJ4cFkydElZVzVrYkdWeUtHVjJaVzUwS1NCN1hHNGdJQ0FnWTI5dWMzUWdkR0Z5WjJWMElEMGdaMlYwUld4bGJXVnVkRVp5YjIxVFpXeGxZM1J2Y2loMGFHbHpLVHRjYmx4dUlDQWdJR2xtSUNnaGRHRnlaMlYwSUh4OElDRjBZWEpuWlhRdVkyeGhjM05NYVhOMExtTnZiblJoYVc1ektFTk1RVk5UWDA1QlRVVmZRMEZTVDFWVFJVd3BLU0I3WEc0Z0lDQWdJQ0J5WlhSMWNtNDdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ1kyOXVjM1FnWTI5dVptbG5JRDBnZXlBdUxpNU5ZVzVwY0hWc1lYUnZjaTVuWlhSRVlYUmhRWFIwY21saWRYUmxjeWgwWVhKblpYUXBMRnh1SUNBZ0lDQWdMaTR1VFdGdWFYQjFiR0YwYjNJdVoyVjBSR0YwWVVGMGRISnBZblYwWlhNb2RHaHBjeWxjYmlBZ0lDQjlPMXh1SUNBZ0lHTnZibk4wSUhOc2FXUmxTVzVrWlhnZ1BTQjBhR2x6TG1kbGRFRjBkSEpwWW5WMFpTZ25aR0YwWVMxaWN5MXpiR2xrWlMxMGJ5Y3BPMXh1WEc0Z0lDQWdhV1lnS0hOc2FXUmxTVzVrWlhncElIdGNiaUFnSUNBZ0lHTnZibVpwWnk1cGJuUmxjblpoYkNBOUlHWmhiSE5sTzF4dUlDQWdJSDFjYmx4dUlDQWdJRU5oY205MWMyVnNMbU5oY205MWMyVnNTVzUwWlhKbVlXTmxLSFJoY21kbGRDd2dZMjl1Wm1sbktUdGNibHh1SUNBZ0lHbG1JQ2h6Ykdsa1pVbHVaR1Y0S1NCN1hHNGdJQ0FnSUNCRFlYSnZkWE5sYkM1blpYUkpibk4wWVc1alpTaDBZWEpuWlhRcExuUnZLSE5zYVdSbFNXNWtaWGdwTzF4dUlDQWdJSDFjYmx4dUlDQWdJR1YyWlc1MExuQnlaWFpsYm5SRVpXWmhkV3gwS0NrN1hHNGdJSDFjYmx4dWZWeHVMeW9xWEc0Z0tpQXRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMWNiaUFxSUVSaGRHRWdRWEJwSUdsdGNHeGxiV1Z1ZEdGMGFXOXVYRzRnS2lBdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMxY2JpQXFMMXh1WEc1Y2JrVjJaVzUwU0dGdVpHeGxjaTV2Ymloa2IyTjFiV1Z1ZEN3Z1JWWkZUbFJmUTB4SlEwdGZSRUZVUVY5QlVFa2tOU3dnVTBWTVJVTlVUMUpmUkVGVVFWOVRURWxFUlN3Z1EyRnliM1Z6Wld3dVpHRjBZVUZ3YVVOc2FXTnJTR0Z1Wkd4bGNpazdYRzVGZG1WdWRFaGhibVJzWlhJdWIyNG9kMmx1Wkc5M0xDQkZWa1ZPVkY5TVQwRkVYMFJCVkVGZlFWQkpKRElzSUNncElEMCtJSHRjYmlBZ1kyOXVjM1FnWTJGeWIzVnpaV3h6SUQwZ1UyVnNaV04wYjNKRmJtZHBibVV1Wm1sdVpDaFRSVXhGUTFSUFVsOUVRVlJCWDFKSlJFVXBPMXh1WEc0Z0lHWnZjaUFvYkdWMElHa2dQU0F3TENCc1pXNGdQU0JqWVhKdmRYTmxiSE11YkdWdVozUm9PeUJwSUR3Z2JHVnVPeUJwS3lzcElIdGNiaUFnSUNCRFlYSnZkWE5sYkM1allYSnZkWE5sYkVsdWRHVnlabUZqWlNoallYSnZkWE5sYkhOYmFWMHNJRU5oY205MWMyVnNMbWRsZEVsdWMzUmhibU5sS0dOaGNtOTFjMlZzYzF0cFhTa3BPMXh1SUNCOVhHNTlLVHRjYmk4cUtseHVJQ29nTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0WEc0Z0tpQnFVWFZsY25sY2JpQXFJQzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMVnh1SUNvZ1lXUmtJQzVEWVhKdmRYTmxiQ0IwYnlCcVVYVmxjbmtnYjI1c2VTQnBaaUJxVVhWbGNua2dhWE1nY0hKbGMyVnVkRnh1SUNvdlhHNWNibVJsWm1sdVpVcFJkV1Z5ZVZCc2RXZHBiaWhEWVhKdmRYTmxiQ2s3WEc1Y2JpOHFLbHh1SUNvZ0xTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMWNiaUFxSUVKdmIzUnpkSEpoY0NBb2RqVXVNUzR6S1RvZ1kyOXNiR0Z3YzJVdWFuTmNiaUFxSUV4cFkyVnVjMlZrSUhWdVpHVnlJRTFKVkNBb2FIUjBjSE02THk5bmFYUm9kV0l1WTI5dEwzUjNZbk12WW05dmRITjBjbUZ3TDJKc2IySXZiV0ZwYmk5TVNVTkZUbE5GS1Z4dUlDb2dMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzFjYmlBcUwxeHVMeW9xWEc0Z0tpQXRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMWNiaUFxSUVOdmJuTjBZVzUwYzF4dUlDb2dMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRYRzRnS2k5Y2JseHVZMjl1YzNRZ1RrRk5SU1JoSUQwZ0oyTnZiR3hoY0hObEp6dGNibU52Ym5OMElFUkJWRUZmUzBWWkpEa2dQU0FuWW5NdVkyOXNiR0Z3YzJVbk8xeHVZMjl1YzNRZ1JWWkZUbFJmUzBWWkpEa2dQU0JnTGlSN1JFRlVRVjlMUlZra09YMWdPMXh1WTI5dWMzUWdSRUZVUVY5QlVFbGZTMFZaSkRVZ1BTQW5MbVJoZEdFdFlYQnBKenRjYm1OdmJuTjBJRVJsWm1GMWJIUWtPU0E5SUh0Y2JpQWdkRzluWjJ4bE9pQjBjblZsTEZ4dUlDQndZWEpsYm5RNklHNTFiR3hjYm4wN1hHNWpiMjV6ZENCRVpXWmhkV3gwVkhsd1pTUTVJRDBnZTF4dUlDQjBiMmRuYkdVNklDZGliMjlzWldGdUp5eGNiaUFnY0dGeVpXNTBPaUFuS0c1MWJHeDhaV3hsYldWdWRDa25YRzU5TzF4dVkyOXVjM1FnUlZaRlRsUmZVMGhQVnlRMUlEMGdZSE5vYjNja2UwVldSVTVVWDB0RldTUTVmV0E3WEc1amIyNXpkQ0JGVmtWT1ZGOVRTRTlYVGlRMUlEMGdZSE5vYjNkdUpIdEZWa1ZPVkY5TFJWa2tPWDFnTzF4dVkyOXVjM1FnUlZaRlRsUmZTRWxFUlNRMUlEMGdZR2hwWkdVa2UwVldSVTVVWDB0RldTUTVmV0E3WEc1amIyNXpkQ0JGVmtWT1ZGOUlTVVJFUlU0a05TQTlJR0JvYVdSa1pXNGtlMFZXUlU1VVgwdEZXU1E1ZldBN1hHNWpiMjV6ZENCRlZrVk9WRjlEVEVsRFMxOUVRVlJCWDBGUVNTUTBJRDBnWUdOc2FXTnJKSHRGVmtWT1ZGOUxSVmtrT1gwa2UwUkJWRUZmUVZCSlgwdEZXU1ExZldBN1hHNWpiMjV6ZENCRFRFRlRVMTlPUVUxRlgxTklUMWNrTnlBOUlDZHphRzkzSnp0Y2JtTnZibk4wSUVOTVFWTlRYMDVCVFVWZlEwOU1URUZRVTBVZ1BTQW5ZMjlzYkdGd2MyVW5PMXh1WTI5dWMzUWdRMHhCVTFOZlRrRk5SVjlEVDB4TVFWQlRTVTVISUQwZ0oyTnZiR3hoY0hOcGJtY25PMXh1WTI5dWMzUWdRMHhCVTFOZlRrRk5SVjlEVDB4TVFWQlRSVVFnUFNBblkyOXNiR0Z3YzJWa0p6dGNibU52Ym5OMElFTk1RVk5UWDA1QlRVVmZSRVZGVUVWU1gwTklTVXhFVWtWT0lEMGdZRHB6WTI5d1pTQXVKSHREVEVGVFUxOU9RVTFGWDBOUFRFeEJVRk5GZlNBdUpIdERURUZUVTE5T1FVMUZYME5QVEV4QlVGTkZmV0E3WEc1amIyNXpkQ0JEVEVGVFUxOU9RVTFGWDBoUFVrbGFUMDVVUVV3Z1BTQW5ZMjlzYkdGd2MyVXRhRzl5YVhwdmJuUmhiQ2M3WEc1amIyNXpkQ0JYU1VSVVNDQTlJQ2QzYVdSMGFDYzdYRzVqYjI1emRDQklSVWxIU0ZRZ1BTQW5hR1ZwWjJoMEp6dGNibU52Ym5OMElGTkZURVZEVkU5U1gwRkRWRWxXUlZNZ1BTQW5MbU52Ykd4aGNITmxMbk5vYjNjc0lDNWpiMnhzWVhCelpTNWpiMnhzWVhCemFXNW5KenRjYm1OdmJuTjBJRk5GVEVWRFZFOVNYMFJCVkVGZlZFOUhSMHhGSkRRZ1BTQW5XMlJoZEdFdFluTXRkRzluWjJ4bFBWd2lZMjlzYkdGd2MyVmNJbDBuTzF4dUx5b3FYRzRnS2lBdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMxY2JpQXFJRU5zWVhOeklFUmxabWx1YVhScGIyNWNiaUFxSUMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFZ4dUlDb3ZYRzVjYm1Oc1lYTnpJRU52Ykd4aGNITmxJR1Y0ZEdWdVpITWdRbUZ6WlVOdmJYQnZibVZ1ZENCN1hHNGdJR052Ym5OMGNuVmpkRzl5S0dWc1pXMWxiblFzSUdOdmJtWnBaeWtnZTF4dUlDQWdJSE4xY0dWeUtHVnNaVzFsYm5RcE8xeHVJQ0FnSUhSb2FYTXVYMmx6VkhKaGJuTnBkR2x2Ym1sdVp5QTlJR1poYkhObE8xeHVJQ0FnSUhSb2FYTXVYMk52Ym1acFp5QTlJSFJvYVhNdVgyZGxkRU52Ym1acFp5aGpiMjVtYVdjcE8xeHVJQ0FnSUhSb2FYTXVYM1J5YVdkblpYSkJjbkpoZVNBOUlGdGRPMXh1SUNBZ0lHTnZibk4wSUhSdloyZHNaVXhwYzNRZ1BTQlRaV3hsWTNSdmNrVnVaMmx1WlM1bWFXNWtLRk5GVEVWRFZFOVNYMFJCVkVGZlZFOUhSMHhGSkRRcE8xeHVYRzRnSUNBZ1ptOXlJQ2hzWlhRZ2FTQTlJREFzSUd4bGJpQTlJSFJ2WjJkc1pVeHBjM1F1YkdWdVozUm9PeUJwSUR3Z2JHVnVPeUJwS3lzcElIdGNiaUFnSUNBZ0lHTnZibk4wSUdWc1pXMGdQU0IwYjJkbmJHVk1hWE4wVzJsZE8xeHVJQ0FnSUNBZ1kyOXVjM1FnYzJWc1pXTjBiM0lnUFNCblpYUlRaV3hsWTNSdmNrWnliMjFGYkdWdFpXNTBLR1ZzWlcwcE8xeHVJQ0FnSUNBZ1kyOXVjM1FnWm1sc2RHVnlSV3hsYldWdWRDQTlJRk5sYkdWamRHOXlSVzVuYVc1bExtWnBibVFvYzJWc1pXTjBiM0lwTG1acGJIUmxjaWhtYjNWdVpFVnNaVzBnUFQ0Z1ptOTFibVJGYkdWdElEMDlQU0IwYUdsekxsOWxiR1Z0Wlc1MEtUdGNibHh1SUNBZ0lDQWdhV1lnS0hObGJHVmpkRzl5SUNFOVBTQnVkV3hzSUNZbUlHWnBiSFJsY2tWc1pXMWxiblF1YkdWdVozUm9LU0I3WEc0Z0lDQWdJQ0FnSUhSb2FYTXVYM05sYkdWamRHOXlJRDBnYzJWc1pXTjBiM0k3WEc1Y2JpQWdJQ0FnSUNBZ2RHaHBjeTVmZEhKcFoyZGxja0Z5Y21GNUxuQjFjMmdvWld4bGJTazdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2RHaHBjeTVmYVc1cGRHbGhiR2w2WlVOb2FXeGtjbVZ1S0NrN1hHNWNiaUFnSUNCcFppQW9JWFJvYVhNdVgyTnZibVpwWnk1d1lYSmxiblFwSUh0Y2JpQWdJQ0FnSUhSb2FYTXVYMkZrWkVGeWFXRkJibVJEYjJ4c1lYQnpaV1JEYkdGemN5aDBhR2x6TGw5MGNtbG5aMlZ5UVhKeVlYa3NJSFJvYVhNdVgybHpVMmh2ZDI0b0tTazdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2FXWWdLSFJvYVhNdVgyTnZibVpwWnk1MGIyZG5iR1VwSUh0Y2JpQWdJQ0FnSUhSb2FYTXVkRzluWjJ4bEtDazdYRzRnSUNBZ2ZWeHVJQ0I5SUM4dklFZGxkSFJsY25OY2JseHVYRzRnSUhOMFlYUnBZeUJuWlhRZ1JHVm1ZWFZzZENncElIdGNiaUFnSUNCeVpYUjFjbTRnUkdWbVlYVnNkQ1E1TzF4dUlDQjlYRzVjYmlBZ2MzUmhkR2xqSUdkbGRDQk9RVTFGS0NrZ2UxeHVJQ0FnSUhKbGRIVnliaUJPUVUxRkpHRTdYRzRnSUgwZ0x5OGdVSFZpYkdsalhHNWNibHh1SUNCMGIyZG5iR1VvS1NCN1hHNGdJQ0FnYVdZZ0tIUm9hWE11WDJselUyaHZkMjRvS1NrZ2UxeHVJQ0FnSUNBZ2RHaHBjeTVvYVdSbEtDazdYRzRnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUhSb2FYTXVjMmh2ZHlncE8xeHVJQ0FnSUgxY2JpQWdmVnh1WEc0Z0lITm9iM2NvS1NCN1hHNGdJQ0FnYVdZZ0tIUm9hWE11WDJselZISmhibk5wZEdsdmJtbHVaeUI4ZkNCMGFHbHpMbDlwYzFOb2IzZHVLQ2twSUh0Y2JpQWdJQ0FnSUhKbGRIVnlianRjYmlBZ0lDQjlYRzVjYmlBZ0lDQnNaWFFnWVdOMGFYWmxjeUE5SUZ0ZE8xeHVJQ0FnSUd4bGRDQmhZM1JwZG1WelJHRjBZVHRjYmx4dUlDQWdJR2xtSUNoMGFHbHpMbDlqYjI1bWFXY3VjR0Z5Wlc1MEtTQjdYRzRnSUNBZ0lDQmpiMjV6ZENCamFHbHNaSEpsYmlBOUlGTmxiR1ZqZEc5eVJXNW5hVzVsTG1acGJtUW9RMHhCVTFOZlRrRk5SVjlFUlVWUVJWSmZRMGhKVEVSU1JVNHNJSFJvYVhNdVgyTnZibVpwWnk1d1lYSmxiblFwTzF4dUlDQWdJQ0FnWVdOMGFYWmxjeUE5SUZObGJHVmpkRzl5Ulc1bmFXNWxMbVpwYm1Rb1UwVk1SVU5VVDFKZlFVTlVTVlpGVXl3Z2RHaHBjeTVmWTI5dVptbG5MbkJoY21WdWRDa3VabWxzZEdWeUtHVnNaVzBnUFQ0Z0lXTm9hV3hrY21WdUxtbHVZMngxWkdWektHVnNaVzBwS1RzZ0x5OGdjbVZ0YjNabElHTm9hV3hrY21WdUlHbG1JR2R5WldGMFpYSWdaR1Z3ZEdoY2JpQWdJQ0I5WEc1Y2JpQWdJQ0JqYjI1emRDQmpiMjUwWVdsdVpYSWdQU0JUWld4bFkzUnZja1Z1WjJsdVpTNW1hVzVrVDI1bEtIUm9hWE11WDNObGJHVmpkRzl5S1R0Y2JseHVJQ0FnSUdsbUlDaGhZM1JwZG1WekxteGxibWQwYUNrZ2UxeHVJQ0FnSUNBZ1kyOXVjM1FnZEdWdGNFRmpkR2wyWlVSaGRHRWdQU0JoWTNScGRtVnpMbVpwYm1Rb1pXeGxiU0E5UGlCamIyNTBZV2x1WlhJZ0lUMDlJR1ZzWlcwcE8xeHVJQ0FnSUNBZ1lXTjBhWFpsYzBSaGRHRWdQU0IwWlcxd1FXTjBhWFpsUkdGMFlTQS9JRU52Ykd4aGNITmxMbWRsZEVsdWMzUmhibU5sS0hSbGJYQkJZM1JwZG1WRVlYUmhLU0E2SUc1MWJHdzdYRzVjYmlBZ0lDQWdJR2xtSUNoaFkzUnBkbVZ6UkdGMFlTQW1KaUJoWTNScGRtVnpSR0YwWVM1ZmFYTlVjbUZ1YzJsMGFXOXVhVzVuS1NCN1hHNGdJQ0FnSUNBZ0lISmxkSFZ5Ymp0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0I5WEc1Y2JpQWdJQ0JqYjI1emRDQnpkR0Z5ZEVWMlpXNTBJRDBnUlhabGJuUklZVzVrYkdWeUxuUnlhV2RuWlhJb2RHaHBjeTVmWld4bGJXVnVkQ3dnUlZaRlRsUmZVMGhQVnlRMUtUdGNibHh1SUNBZ0lHbG1JQ2h6ZEdGeWRFVjJaVzUwTG1SbFptRjFiSFJRY21WMlpXNTBaV1FwSUh0Y2JpQWdJQ0FnSUhKbGRIVnlianRjYmlBZ0lDQjlYRzVjYmlBZ0lDQmhZM1JwZG1WekxtWnZja1ZoWTJnb1pXeGxiVUZqZEdsMlpTQTlQaUI3WEc0Z0lDQWdJQ0JwWmlBb1kyOXVkR0ZwYm1WeUlDRTlQU0JsYkdWdFFXTjBhWFpsS1NCN1hHNGdJQ0FnSUNBZ0lFTnZiR3hoY0hObExtZGxkRTl5UTNKbFlYUmxTVzV6ZEdGdVkyVW9aV3hsYlVGamRHbDJaU3dnZTF4dUlDQWdJQ0FnSUNBZ0lIUnZaMmRzWlRvZ1ptRnNjMlZjYmlBZ0lDQWdJQ0FnZlNrdWFHbGtaU2dwTzF4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNCcFppQW9JV0ZqZEdsMlpYTkVZWFJoS1NCN1hHNGdJQ0FnSUNBZ0lFUmhkR0V1YzJWMEtHVnNaVzFCWTNScGRtVXNJRVJCVkVGZlMwVlpKRGtzSUc1MWJHd3BPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lIMHBPMXh1WEc0Z0lDQWdZMjl1YzNRZ1pHbHRaVzV6YVc5dUlEMGdkR2hwY3k1ZloyVjBSR2x0Wlc1emFXOXVLQ2s3WEc1Y2JpQWdJQ0IwYUdsekxsOWxiR1Z0Wlc1MExtTnNZWE56VEdsemRDNXlaVzF2ZG1Vb1EweEJVMU5mVGtGTlJWOURUMHhNUVZCVFJTazdYRzVjYmlBZ0lDQjBhR2x6TGw5bGJHVnRaVzUwTG1Oc1lYTnpUR2x6ZEM1aFpHUW9RMHhCVTFOZlRrRk5SVjlEVDB4TVFWQlRTVTVIS1R0Y2JseHVJQ0FnSUhSb2FYTXVYMlZzWlcxbGJuUXVjM1I1YkdWYlpHbHRaVzV6YVc5dVhTQTlJREE3WEc1Y2JpQWdJQ0IwYUdsekxsOWhaR1JCY21saFFXNWtRMjlzYkdGd2MyVmtRMnhoYzNNb2RHaHBjeTVmZEhKcFoyZGxja0Z5Y21GNUxDQjBjblZsS1R0Y2JseHVJQ0FnSUhSb2FYTXVYMmx6VkhKaGJuTnBkR2x2Ym1sdVp5QTlJSFJ5ZFdVN1hHNWNiaUFnSUNCamIyNXpkQ0JqYjIxd2JHVjBaU0E5SUNncElEMCtJSHRjYmlBZ0lDQWdJSFJvYVhNdVgybHpWSEpoYm5OcGRHbHZibWx1WnlBOUlHWmhiSE5sTzF4dVhHNGdJQ0FnSUNCMGFHbHpMbDlsYkdWdFpXNTBMbU5zWVhOelRHbHpkQzV5WlcxdmRtVW9RMHhCVTFOZlRrRk5SVjlEVDB4TVFWQlRTVTVIS1R0Y2JseHVJQ0FnSUNBZ2RHaHBjeTVmWld4bGJXVnVkQzVqYkdGemMweHBjM1F1WVdSa0tFTk1RVk5UWDA1QlRVVmZRMDlNVEVGUVUwVXNJRU5NUVZOVFgwNUJUVVZmVTBoUFZ5UTNLVHRjYmx4dUlDQWdJQ0FnZEdocGN5NWZaV3hsYldWdWRDNXpkSGxzWlZ0a2FXMWxibk5wYjI1ZElEMGdKeWM3WEc0Z0lDQWdJQ0JGZG1WdWRFaGhibVJzWlhJdWRISnBaMmRsY2loMGFHbHpMbDlsYkdWdFpXNTBMQ0JGVmtWT1ZGOVRTRTlYVGlRMUtUdGNiaUFnSUNCOU8xeHVYRzRnSUNBZ1kyOXVjM1FnWTJGd2FYUmhiR2w2WldSRWFXMWxibk5wYjI0Z1BTQmthVzFsYm5OcGIyNWJNRjB1ZEc5VmNIQmxja05oYzJVb0tTQXJJR1JwYldWdWMybHZiaTV6YkdsalpTZ3hLVHRjYmlBZ0lDQmpiMjV6ZENCelkzSnZiR3hUYVhwbElEMGdZSE5qY205c2JDUjdZMkZ3YVhSaGJHbDZaV1JFYVcxbGJuTnBiMjU5WUR0Y2JseHVJQ0FnSUhSb2FYTXVYM0YxWlhWbFEyRnNiR0poWTJzb1kyOXRjR3hsZEdVc0lIUm9hWE11WDJWc1pXMWxiblFzSUhSeWRXVXBPMXh1WEc0Z0lDQWdkR2hwY3k1ZlpXeGxiV1Z1ZEM1emRIbHNaVnRrYVcxbGJuTnBiMjVkSUQwZ1lDUjdkR2hwY3k1ZlpXeGxiV1Z1ZEZ0elkzSnZiR3hUYVhwbFhYMXdlR0E3WEc0Z0lIMWNibHh1SUNCb2FXUmxLQ2tnZTF4dUlDQWdJR2xtSUNoMGFHbHpMbDlwYzFSeVlXNXphWFJwYjI1cGJtY2dmSHdnSVhSb2FYTXVYMmx6VTJodmQyNG9LU2tnZTF4dUlDQWdJQ0FnY21WMGRYSnVPMXh1SUNBZ0lIMWNibHh1SUNBZ0lHTnZibk4wSUhOMFlYSjBSWFpsYm5RZ1BTQkZkbVZ1ZEVoaGJtUnNaWEl1ZEhKcFoyZGxjaWgwYUdsekxsOWxiR1Z0Wlc1MExDQkZWa1ZPVkY5SVNVUkZKRFVwTzF4dVhHNGdJQ0FnYVdZZ0tITjBZWEowUlhabGJuUXVaR1ZtWVhWc2RGQnlaWFpsYm5SbFpDa2dlMXh1SUNBZ0lDQWdjbVYwZFhKdU8xeHVJQ0FnSUgxY2JseHVJQ0FnSUdOdmJuTjBJR1JwYldWdWMybHZiaUE5SUhSb2FYTXVYMmRsZEVScGJXVnVjMmx2YmlncE8xeHVYRzRnSUNBZ2RHaHBjeTVmWld4bGJXVnVkQzV6ZEhsc1pWdGthVzFsYm5OcGIyNWRJRDBnWUNSN2RHaHBjeTVmWld4bGJXVnVkQzVuWlhSQ2IzVnVaR2x1WjBOc2FXVnVkRkpsWTNRb0tWdGthVzFsYm5OcGIyNWRmWEI0WUR0Y2JpQWdJQ0J5Wldac2IzY29kR2hwY3k1ZlpXeGxiV1Z1ZENrN1hHNWNiaUFnSUNCMGFHbHpMbDlsYkdWdFpXNTBMbU5zWVhOelRHbHpkQzVoWkdRb1EweEJVMU5mVGtGTlJWOURUMHhNUVZCVFNVNUhLVHRjYmx4dUlDQWdJSFJvYVhNdVgyVnNaVzFsYm5RdVkyeGhjM05NYVhOMExuSmxiVzkyWlNoRFRFRlRVMTlPUVUxRlgwTlBURXhCVUZORkxDQkRURUZUVTE5T1FVMUZYMU5JVDFja055azdYRzVjYmlBZ0lDQmpiMjV6ZENCMGNtbG5aMlZ5UVhKeVlYbE1aVzVuZEdnZ1BTQjBhR2x6TGw5MGNtbG5aMlZ5UVhKeVlYa3ViR1Z1WjNSb08xeHVYRzRnSUNBZ1ptOXlJQ2hzWlhRZ2FTQTlJREE3SUdrZ1BDQjBjbWxuWjJWeVFYSnlZWGxNWlc1bmRHZzdJR2tyS3lrZ2UxeHVJQ0FnSUNBZ1kyOXVjM1FnZEhKcFoyZGxjaUE5SUhSb2FYTXVYM1J5YVdkblpYSkJjbkpoZVZ0cFhUdGNiaUFnSUNBZ0lHTnZibk4wSUdWc1pXMGdQU0JuWlhSRmJHVnRaVzUwUm5KdmJWTmxiR1ZqZEc5eUtIUnlhV2RuWlhJcE8xeHVYRzRnSUNBZ0lDQnBaaUFvWld4bGJTQW1KaUFoZEdocGN5NWZhWE5UYUc5M2JpaGxiR1Z0S1NrZ2UxeHVJQ0FnSUNBZ0lDQjBhR2x6TGw5aFpHUkJjbWxoUVc1a1EyOXNiR0Z3YzJWa1EyeGhjM01vVzNSeWFXZG5aWEpkTENCbVlXeHpaU2s3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmVnh1WEc0Z0lDQWdkR2hwY3k1ZmFYTlVjbUZ1YzJsMGFXOXVhVzVuSUQwZ2RISjFaVHRjYmx4dUlDQWdJR052Ym5OMElHTnZiWEJzWlhSbElEMGdLQ2tnUFQ0Z2UxeHVJQ0FnSUNBZ2RHaHBjeTVmYVhOVWNtRnVjMmwwYVc5dWFXNW5JRDBnWm1Gc2MyVTdYRzVjYmlBZ0lDQWdJSFJvYVhNdVgyVnNaVzFsYm5RdVkyeGhjM05NYVhOMExuSmxiVzkyWlNoRFRFRlRVMTlPUVUxRlgwTlBURXhCVUZOSlRrY3BPMXh1WEc0Z0lDQWdJQ0IwYUdsekxsOWxiR1Z0Wlc1MExtTnNZWE56VEdsemRDNWhaR1FvUTB4QlUxTmZUa0ZOUlY5RFQweE1RVkJUUlNrN1hHNWNiaUFnSUNBZ0lFVjJaVzUwU0dGdVpHeGxjaTUwY21sbloyVnlLSFJvYVhNdVgyVnNaVzFsYm5Rc0lFVldSVTVVWDBoSlJFUkZUaVExS1R0Y2JpQWdJQ0I5TzF4dVhHNGdJQ0FnZEdocGN5NWZaV3hsYldWdWRDNXpkSGxzWlZ0a2FXMWxibk5wYjI1ZElEMGdKeWM3WEc1Y2JpQWdJQ0IwYUdsekxsOXhkV1YxWlVOaGJHeGlZV05yS0dOdmJYQnNaWFJsTENCMGFHbHpMbDlsYkdWdFpXNTBMQ0IwY25WbEtUdGNiaUFnZlZ4dVhHNGdJRjlwYzFOb2IzZHVLR1ZzWlcxbGJuUWdQU0IwYUdsekxsOWxiR1Z0Wlc1MEtTQjdYRzRnSUNBZ2NtVjBkWEp1SUdWc1pXMWxiblF1WTJ4aGMzTk1hWE4wTG1OdmJuUmhhVzV6S0VOTVFWTlRYMDVCVFVWZlUwaFBWeVEzS1R0Y2JpQWdmU0F2THlCUWNtbDJZWFJsWEc1Y2JseHVJQ0JmWjJWMFEyOXVabWxuS0dOdmJtWnBaeWtnZTF4dUlDQWdJR052Ym1acFp5QTlJSHNnTGk0dVJHVm1ZWFZzZENRNUxGeHVJQ0FnSUNBZ0xpNHVUV0Z1YVhCMWJHRjBiM0l1WjJWMFJHRjBZVUYwZEhKcFluVjBaWE1vZEdocGN5NWZaV3hsYldWdWRDa3NYRzRnSUNBZ0lDQXVMaTVqYjI1bWFXZGNiaUFnSUNCOU8xeHVJQ0FnSUdOdmJtWnBaeTUwYjJkbmJHVWdQU0JDYjI5c1pXRnVLR052Ym1acFp5NTBiMmRuYkdVcE95QXZMeUJEYjJWeVkyVWdjM1J5YVc1bklIWmhiSFZsYzF4dVhHNGdJQ0FnWTI5dVptbG5MbkJoY21WdWRDQTlJR2RsZEVWc1pXMWxiblFvWTI5dVptbG5MbkJoY21WdWRDazdYRzRnSUNBZ2RIbHdaVU5vWldOclEyOXVabWxuS0U1QlRVVWtZU3dnWTI5dVptbG5MQ0JFWldaaGRXeDBWSGx3WlNRNUtUdGNiaUFnSUNCeVpYUjFjbTRnWTI5dVptbG5PMXh1SUNCOVhHNWNiaUFnWDJkbGRFUnBiV1Z1YzJsdmJpZ3BJSHRjYmlBZ0lDQnlaWFIxY200Z2RHaHBjeTVmWld4bGJXVnVkQzVqYkdGemMweHBjM1F1WTI5dWRHRnBibk1vUTB4QlUxTmZUa0ZOUlY5SVQxSkpXazlPVkVGTUtTQS9JRmRKUkZSSUlEb2dTRVZKUjBoVU8xeHVJQ0I5WEc1Y2JpQWdYMmx1YVhScFlXeHBlbVZEYUdsc1pISmxiaWdwSUh0Y2JpQWdJQ0JwWmlBb0lYUm9hWE11WDJOdmJtWnBaeTV3WVhKbGJuUXBJSHRjYmlBZ0lDQWdJSEpsZEhWeWJqdGNiaUFnSUNCOVhHNWNiaUFnSUNCamIyNXpkQ0JqYUdsc1pISmxiaUE5SUZObGJHVmpkRzl5Ulc1bmFXNWxMbVpwYm1Rb1EweEJVMU5mVGtGTlJWOUVSVVZRUlZKZlEwaEpURVJTUlU0c0lIUm9hWE11WDJOdmJtWnBaeTV3WVhKbGJuUXBPMXh1SUNBZ0lGTmxiR1ZqZEc5eVJXNW5hVzVsTG1acGJtUW9VMFZNUlVOVVQxSmZSRUZVUVY5VVQwZEhURVVrTkN3Z2RHaHBjeTVmWTI5dVptbG5MbkJoY21WdWRDa3VabWxzZEdWeUtHVnNaVzBnUFQ0Z0lXTm9hV3hrY21WdUxtbHVZMngxWkdWektHVnNaVzBwS1M1bWIzSkZZV05vS0dWc1pXMWxiblFnUFQ0Z2UxeHVJQ0FnSUNBZ1kyOXVjM1FnYzJWc1pXTjBaV1FnUFNCblpYUkZiR1Z0Wlc1MFJuSnZiVk5sYkdWamRHOXlLR1ZzWlcxbGJuUXBPMXh1WEc0Z0lDQWdJQ0JwWmlBb2MyVnNaV04wWldRcElIdGNiaUFnSUNBZ0lDQWdkR2hwY3k1ZllXUmtRWEpwWVVGdVpFTnZiR3hoY0hObFpFTnNZWE56S0Z0bGJHVnRaVzUwWFN3Z2RHaHBjeTVmYVhOVGFHOTNiaWh6Wld4bFkzUmxaQ2twTzF4dUlDQWdJQ0FnZlZ4dUlDQWdJSDBwTzF4dUlDQjlYRzVjYmlBZ1gyRmtaRUZ5YVdGQmJtUkRiMnhzWVhCelpXUkRiR0Z6Y3loMGNtbG5aMlZ5UVhKeVlYa3NJR2x6VDNCbGJpa2dlMXh1SUNBZ0lHbG1JQ2doZEhKcFoyZGxja0Z5Y21GNUxteGxibWQwYUNrZ2UxeHVJQ0FnSUNBZ2NtVjBkWEp1TzF4dUlDQWdJSDFjYmx4dUlDQWdJSFJ5YVdkblpYSkJjbkpoZVM1bWIzSkZZV05vS0dWc1pXMGdQVDRnZTF4dUlDQWdJQ0FnYVdZZ0tHbHpUM0JsYmlrZ2UxeHVJQ0FnSUNBZ0lDQmxiR1Z0TG1Oc1lYTnpUR2x6ZEM1eVpXMXZkbVVvUTB4QlUxTmZUa0ZOUlY5RFQweE1RVkJUUlVRcE8xeHVJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUNBZ1pXeGxiUzVqYkdGemMweHBjM1F1WVdSa0tFTk1RVk5UWDA1QlRVVmZRMDlNVEVGUVUwVkVLVHRjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnWld4bGJTNXpaWFJCZEhSeWFXSjFkR1VvSjJGeWFXRXRaWGh3WVc1a1pXUW5MQ0JwYzA5d1pXNHBPMXh1SUNBZ0lIMHBPMXh1SUNCOUlDOHZJRk4wWVhScFkxeHVYRzVjYmlBZ2MzUmhkR2xqSUdwUmRXVnllVWx1ZEdWeVptRmpaU2hqYjI1bWFXY3BJSHRjYmlBZ0lDQnlaWFIxY200Z2RHaHBjeTVsWVdOb0tHWjFibU4wYVc5dUlDZ3BJSHRjYmlBZ0lDQWdJR052Ym5OMElGOWpiMjVtYVdjZ1BTQjdmVHRjYmx4dUlDQWdJQ0FnYVdZZ0tIUjVjR1Z2WmlCamIyNW1hV2NnUFQwOUlDZHpkSEpwYm1jbklDWW1JQzl6YUc5M2ZHaHBaR1V2TG5SbGMzUW9ZMjl1Wm1sbktTa2dlMXh1SUNBZ0lDQWdJQ0JmWTI5dVptbG5MblJ2WjJkc1pTQTlJR1poYkhObE8xeHVJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQmpiMjV6ZENCa1lYUmhJRDBnUTI5c2JHRndjMlV1WjJWMFQzSkRjbVZoZEdWSmJuTjBZVzVqWlNoMGFHbHpMQ0JmWTI5dVptbG5LVHRjYmx4dUlDQWdJQ0FnYVdZZ0tIUjVjR1Z2WmlCamIyNW1hV2NnUFQwOUlDZHpkSEpwYm1jbktTQjdYRzRnSUNBZ0lDQWdJR2xtSUNoMGVYQmxiMllnWkdGMFlWdGpiMjVtYVdkZElEMDlQU0FuZFc1a1pXWnBibVZrSnlrZ2UxeHVJQ0FnSUNBZ0lDQWdJSFJvY205M0lHNWxkeUJVZVhCbFJYSnliM0lvWUU1dklHMWxkR2h2WkNCdVlXMWxaQ0JjSWlSN1kyOXVabWxuZlZ3aVlDazdYRzRnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNCa1lYUmhXMk52Ym1acFoxMG9LVHRjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlLVHRjYmlBZ2ZWeHVYRzU5WEc0dktpcGNiaUFxSUMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFZ4dUlDb2dSR0YwWVNCQmNHa2dhVzF3YkdWdFpXNTBZWFJwYjI1Y2JpQXFJQzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMVnh1SUNvdlhHNWNibHh1UlhabGJuUklZVzVrYkdWeUxtOXVLR1J2WTNWdFpXNTBMQ0JGVmtWT1ZGOURURWxEUzE5RVFWUkJYMEZRU1NRMExDQlRSVXhGUTFSUFVsOUVRVlJCWDFSUFIwZE1SU1EwTENCbWRXNWpkR2x2YmlBb1pYWmxiblFwSUh0Y2JpQWdMeThnY0hKbGRtVnVkRVJsWm1GMWJIUWdiMjVzZVNCbWIzSWdQR0UrSUdWc1pXMWxiblJ6SUNoM2FHbGphQ0JqYUdGdVoyVWdkR2hsSUZWU1RDa2dibTkwSUdsdWMybGtaU0IwYUdVZ1kyOXNiR0Z3YzJsaWJHVWdaV3hsYldWdWRGeHVJQ0JwWmlBb1pYWmxiblF1ZEdGeVoyVjBMblJoWjA1aGJXVWdQVDA5SUNkQkp5QjhmQ0JsZG1WdWRDNWtaV3hsWjJGMFpWUmhjbWRsZENBbUppQmxkbVZ1ZEM1a1pXeGxaMkYwWlZSaGNtZGxkQzUwWVdkT1lXMWxJRDA5UFNBblFTY3BJSHRjYmlBZ0lDQmxkbVZ1ZEM1d2NtVjJaVzUwUkdWbVlYVnNkQ2dwTzF4dUlDQjlYRzVjYmlBZ1kyOXVjM1FnYzJWc1pXTjBiM0lnUFNCblpYUlRaV3hsWTNSdmNrWnliMjFGYkdWdFpXNTBLSFJvYVhNcE8xeHVJQ0JqYjI1emRDQnpaV3hsWTNSdmNrVnNaVzFsYm5SeklEMGdVMlZzWldOMGIzSkZibWRwYm1VdVptbHVaQ2h6Wld4bFkzUnZjaWs3WEc0Z0lITmxiR1ZqZEc5eVJXeGxiV1Z1ZEhNdVptOXlSV0ZqYUNobGJHVnRaVzUwSUQwK0lIdGNiaUFnSUNCRGIyeHNZWEJ6WlM1blpYUlBja055WldGMFpVbHVjM1JoYm1ObEtHVnNaVzFsYm5Rc0lIdGNiaUFnSUNBZ0lIUnZaMmRzWlRvZ1ptRnNjMlZjYmlBZ0lDQjlLUzUwYjJkbmJHVW9LVHRjYmlBZ2ZTazdYRzU5S1R0Y2JpOHFLbHh1SUNvZ0xTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdFhHNGdLaUJxVVhWbGNubGNiaUFxSUMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFZ4dUlDb2dZV1JrSUM1RGIyeHNZWEJ6WlNCMGJ5QnFVWFZsY25rZ2IyNXNlU0JwWmlCcVVYVmxjbmtnYVhNZ2NISmxjMlZ1ZEZ4dUlDb3ZYRzVjYm1SbFptbHVaVXBSZFdWeWVWQnNkV2RwYmloRGIyeHNZWEJ6WlNrN1hHNWNiaThxS2x4dUlDb2dMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzFjYmlBcUlFSnZiM1J6ZEhKaGNDQW9kalV1TVM0ektUb2daSEp2Y0dSdmQyNHVhbk5jYmlBcUlFeHBZMlZ1YzJWa0lIVnVaR1Z5SUUxSlZDQW9hSFIwY0hNNkx5OW5hWFJvZFdJdVkyOXRMM1IzWW5NdlltOXZkSE4wY21Gd0wySnNiMkl2YldGcGJpOU1TVU5GVGxORktWeHVJQ29nTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMxY2JpQXFMMXh1THlvcVhHNGdLaUF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzFjYmlBcUlFTnZibk4wWVc1MGMxeHVJQ29nTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0WEc0Z0tpOWNibHh1WTI5dWMzUWdUa0ZOUlNRNUlEMGdKMlJ5YjNCa2IzZHVKenRjYm1OdmJuTjBJRVJCVkVGZlMwVlpKRGdnUFNBblluTXVaSEp2Y0dSdmQyNG5PMXh1WTI5dWMzUWdSVlpGVGxSZlMwVlpKRGdnUFNCZ0xpUjdSRUZVUVY5TFJWa2tPSDFnTzF4dVkyOXVjM1FnUkVGVVFWOUJVRWxmUzBWWkpEUWdQU0FuTG1SaGRHRXRZWEJwSnp0Y2JtTnZibk4wSUVWVFEwRlFSVjlMUlZra01pQTlJQ2RGYzJOaGNHVW5PMXh1WTI5dWMzUWdVMUJCUTBWZlMwVlpJRDBnSjFOd1lXTmxKenRjYm1OdmJuTjBJRlJCUWw5TFJWa2tNU0E5SUNkVVlXSW5PMXh1WTI5dWMzUWdRVkpTVDFkZlZWQmZTMFZaSUQwZ0owRnljbTkzVlhBbk8xeHVZMjl1YzNRZ1FWSlNUMWRmUkU5WFRsOUxSVmtnUFNBblFYSnliM2RFYjNkdUp6dGNibU52Ym5OMElGSkpSMGhVWDAxUFZWTkZYMEpWVkZSUFRpQTlJREk3SUM4dklFMXZkWE5sUlhabGJuUXVZblYwZEc5dUlIWmhiSFZsSUdadmNpQjBhR1VnYzJWamIyNWtZWEo1SUdKMWRIUnZiaXdnZFhOMVlXeHNlU0IwYUdVZ2NtbG5hSFFnWW5WMGRHOXVYRzVjYm1OdmJuTjBJRkpGUjBWWVVGOUxSVmxFVDFkT0lEMGdibVYzSUZKbFowVjRjQ2hnSkh0QlVsSlBWMTlWVUY5TFJWbDlmQ1I3UVZKU1QxZGZSRTlYVGw5TFJWbDlmQ1I3UlZORFFWQkZYMHRGV1NReWZXQXBPMXh1WTI5dWMzUWdSVlpGVGxSZlNFbEVSU1EwSUQwZ1lHaHBaR1VrZTBWV1JVNVVYMHRGV1NRNGZXQTdYRzVqYjI1emRDQkZWa1ZPVkY5SVNVUkVSVTRrTkNBOUlHQm9hV1JrWlc0a2UwVldSVTVVWDB0RldTUTRmV0E3WEc1amIyNXpkQ0JGVmtWT1ZGOVRTRTlYSkRRZ1BTQmdjMmh2ZHlSN1JWWkZUbFJmUzBWWkpEaDlZRHRjYm1OdmJuTjBJRVZXUlU1VVgxTklUMWRPSkRRZ1BTQmdjMmh2ZDI0a2UwVldSVTVVWDB0RldTUTRmV0E3WEc1amIyNXpkQ0JGVmtWT1ZGOURURWxEUzE5RVFWUkJYMEZRU1NReklEMGdZR05zYVdOckpIdEZWa1ZPVkY5TFJWa2tPSDBrZTBSQlZFRmZRVkJKWDB0RldTUTBmV0E3WEc1amIyNXpkQ0JGVmtWT1ZGOUxSVmxFVDFkT1gwUkJWRUZmUVZCSklEMGdZR3RsZVdSdmQyNGtlMFZXUlU1VVgwdEZXU1E0ZlNSN1JFRlVRVjlCVUVsZlMwVlpKRFI5WUR0Y2JtTnZibk4wSUVWV1JVNVVYMHRGV1ZWUVgwUkJWRUZmUVZCSklEMGdZR3RsZVhWd0pIdEZWa1ZPVkY5TFJWa2tPSDBrZTBSQlZFRmZRVkJKWDB0RldTUTBmV0E3WEc1amIyNXpkQ0JEVEVGVFUxOU9RVTFGWDFOSVQxY2tOaUE5SUNkemFHOTNKenRjYm1OdmJuTjBJRU5NUVZOVFgwNUJUVVZmUkZKUFVGVlFJRDBnSjJSeWIzQjFjQ2M3WEc1amIyNXpkQ0JEVEVGVFUxOU9RVTFGWDBSU1QxQkZUa1FnUFNBblpISnZjR1Z1WkNjN1hHNWpiMjV6ZENCRFRFRlRVMTlPUVUxRlgwUlNUMUJUVkVGU1ZDQTlJQ2RrY205d2MzUmhjblFuTzF4dVkyOXVjM1FnUTB4QlUxTmZUa0ZOUlY5T1FWWkNRVklnUFNBbmJtRjJZbUZ5Snp0Y2JtTnZibk4wSUZORlRFVkRWRTlTWDBSQlZFRmZWRTlIUjB4RkpETWdQU0FuVzJSaGRHRXRZbk10ZEc5bloyeGxQVndpWkhKdmNHUnZkMjVjSWwwbk8xeHVZMjl1YzNRZ1UwVk1SVU5VVDFKZlRVVk9WU0E5SUNjdVpISnZjR1J2ZDI0dGJXVnVkU2M3WEc1amIyNXpkQ0JUUlV4RlExUlBVbDlPUVZaQ1FWSmZUa0ZXSUQwZ0p5NXVZWFppWVhJdGJtRjJKenRjYm1OdmJuTjBJRk5GVEVWRFZFOVNYMVpKVTBsQ1RFVmZTVlJGVFZNZ1BTQW5MbVJ5YjNCa2IzZHVMVzFsYm5VZ0xtUnliM0JrYjNkdUxXbDBaVzA2Ym05MEtDNWthWE5oWW14bFpDazZibTkwS0Rwa2FYTmhZbXhsWkNrbk8xeHVZMjl1YzNRZ1VFeEJRMFZOUlU1VVgxUlBVQ0E5SUdselVsUk1LQ2tnUHlBbmRHOXdMV1Z1WkNjZ09pQW5kRzl3TFhOMFlYSjBKenRjYm1OdmJuTjBJRkJNUVVORlRVVk9WRjlVVDFCRlRrUWdQU0JwYzFKVVRDZ3BJRDhnSjNSdmNDMXpkR0Z5ZENjZ09pQW5kRzl3TFdWdVpDYzdYRzVqYjI1emRDQlFURUZEUlUxRlRsUmZRazlVVkU5TklEMGdhWE5TVkV3b0tTQS9JQ2RpYjNSMGIyMHRaVzVrSnlBNklDZGliM1IwYjIwdGMzUmhjblFuTzF4dVkyOXVjM1FnVUV4QlEwVk5SVTVVWDBKUFZGUlBUVVZPUkNBOUlHbHpVbFJNS0NrZ1B5QW5ZbTkwZEc5dExYTjBZWEowSnlBNklDZGliM1IwYjIwdFpXNWtKenRjYm1OdmJuTjBJRkJNUVVORlRVVk9WRjlTU1VkSVZDQTlJR2x6VWxSTUtDa2dQeUFuYkdWbWRDMXpkR0Z5ZENjZ09pQW5jbWxuYUhRdGMzUmhjblFuTzF4dVkyOXVjM1FnVUV4QlEwVk5SVTVVWDB4RlJsUWdQU0JwYzFKVVRDZ3BJRDhnSjNKcFoyaDBMWE4wWVhKMEp5QTZJQ2RzWldaMExYTjBZWEowSnp0Y2JtTnZibk4wSUVSbFptRjFiSFFrT0NBOUlIdGNiaUFnYjJabWMyVjBPaUJiTUN3Z01sMHNYRzRnSUdKdmRXNWtZWEo1T2lBblkyeHBjSEJwYm1kUVlYSmxiblJ6Snl4Y2JpQWdjbVZtWlhKbGJtTmxPaUFuZEc5bloyeGxKeXhjYmlBZ1pHbHpjR3hoZVRvZ0oyUjVibUZ0YVdNbkxGeHVJQ0J3YjNCd1pYSkRiMjVtYVdjNklHNTFiR3dzWEc0Z0lHRjFkRzlEYkc5elpUb2dkSEoxWlZ4dWZUdGNibU52Ym5OMElFUmxabUYxYkhSVWVYQmxKRGdnUFNCN1hHNGdJRzltWm5ObGREb2dKeWhoY25KaGVYeHpkSEpwYm1kOFpuVnVZM1JwYjI0cEp5eGNiaUFnWW05MWJtUmhjbms2SUNjb2MzUnlhVzVuZkdWc1pXMWxiblFwSnl4Y2JpQWdjbVZtWlhKbGJtTmxPaUFuS0hOMGNtbHVaM3hsYkdWdFpXNTBmRzlpYW1WamRDa25MRnh1SUNCa2FYTndiR0Y1T2lBbmMzUnlhVzVuSnl4Y2JpQWdjRzl3Y0dWeVEyOXVabWxuT2lBbktHNTFiR3g4YjJKcVpXTjBmR1oxYm1OMGFXOXVLU2NzWEc0Z0lHRjFkRzlEYkc5elpUb2dKeWhpYjI5c1pXRnVmSE4wY21sdVp5a25YRzU5TzF4dUx5b3FYRzRnS2lBdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMxY2JpQXFJRU5zWVhOeklFUmxabWx1YVhScGIyNWNiaUFxSUMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFZ4dUlDb3ZYRzVjYm1Oc1lYTnpJRVJ5YjNCa2IzZHVJR1Y0ZEdWdVpITWdRbUZ6WlVOdmJYQnZibVZ1ZENCN1hHNGdJR052Ym5OMGNuVmpkRzl5S0dWc1pXMWxiblFzSUdOdmJtWnBaeWtnZTF4dUlDQWdJSE4xY0dWeUtHVnNaVzFsYm5RcE8xeHVJQ0FnSUhSb2FYTXVYM0J2Y0hCbGNpQTlJRzUxYkd3N1hHNGdJQ0FnZEdocGN5NWZZMjl1Wm1sbklEMGdkR2hwY3k1ZloyVjBRMjl1Wm1sbktHTnZibVpwWnlrN1hHNGdJQ0FnZEdocGN5NWZiV1Z1ZFNBOUlIUm9hWE11WDJkbGRFMWxiblZGYkdWdFpXNTBLQ2s3WEc0Z0lDQWdkR2hwY3k1ZmFXNU9ZWFppWVhJZ1BTQjBhR2x6TGw5a1pYUmxZM1JPWVhaaVlYSW9LVHRjYmlBZ2ZTQXZMeUJIWlhSMFpYSnpYRzVjYmx4dUlDQnpkR0YwYVdNZ1oyVjBJRVJsWm1GMWJIUW9LU0I3WEc0Z0lDQWdjbVYwZFhKdUlFUmxabUYxYkhRa09EdGNiaUFnZlZ4dVhHNGdJSE4wWVhScFl5Qm5aWFFnUkdWbVlYVnNkRlI1Y0dVb0tTQjdYRzRnSUNBZ2NtVjBkWEp1SUVSbFptRjFiSFJVZVhCbEpEZzdYRzRnSUgxY2JseHVJQ0J6ZEdGMGFXTWdaMlYwSUU1QlRVVW9LU0I3WEc0Z0lDQWdjbVYwZFhKdUlFNUJUVVVrT1R0Y2JpQWdmU0F2THlCUWRXSnNhV05jYmx4dVhHNGdJSFJ2WjJkc1pTZ3BJSHRjYmlBZ0lDQnlaWFIxY200Z2RHaHBjeTVmYVhOVGFHOTNiaWdwSUQ4Z2RHaHBjeTVvYVdSbEtDa2dPaUIwYUdsekxuTm9iM2NvS1R0Y2JpQWdmVnh1WEc0Z0lITm9iM2NvS1NCN1hHNGdJQ0FnYVdZZ0tHbHpSR2x6WVdKc1pXUW9kR2hwY3k1ZlpXeGxiV1Z1ZENrZ2ZId2dkR2hwY3k1ZmFYTlRhRzkzYmloMGFHbHpMbDl0Wlc1MUtTa2dlMXh1SUNBZ0lDQWdjbVYwZFhKdU8xeHVJQ0FnSUgxY2JseHVJQ0FnSUdOdmJuTjBJSEpsYkdGMFpXUlVZWEpuWlhRZ1BTQjdYRzRnSUNBZ0lDQnlaV3hoZEdWa1ZHRnlaMlYwT2lCMGFHbHpMbDlsYkdWdFpXNTBYRzRnSUNBZ2ZUdGNiaUFnSUNCamIyNXpkQ0J6YUc5M1JYWmxiblFnUFNCRmRtVnVkRWhoYm1Sc1pYSXVkSEpwWjJkbGNpaDBhR2x6TGw5bGJHVnRaVzUwTENCRlZrVk9WRjlUU0U5WEpEUXNJSEpsYkdGMFpXUlVZWEpuWlhRcE8xeHVYRzRnSUNBZ2FXWWdLSE5vYjNkRmRtVnVkQzVrWldaaGRXeDBVSEpsZG1WdWRHVmtLU0I3WEc0Z0lDQWdJQ0J5WlhSMWNtNDdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ1kyOXVjM1FnY0dGeVpXNTBJRDBnUkhKdmNHUnZkMjR1WjJWMFVHRnlaVzUwUm5KdmJVVnNaVzFsYm5Rb2RHaHBjeTVmWld4bGJXVnVkQ2s3SUM4dklGUnZkR0ZzYkhrZ1pHbHpZV0pzWlNCUWIzQndaWElnWm05eUlFUnliM0JrYjNkdWN5QnBiaUJPWVhaaVlYSmNibHh1SUNBZ0lHbG1JQ2gwYUdsekxsOXBiazVoZG1KaGNpa2dlMXh1SUNBZ0lDQWdUV0Z1YVhCMWJHRjBiM0l1YzJWMFJHRjBZVUYwZEhKcFluVjBaU2gwYUdsekxsOXRaVzUxTENBbmNHOXdjR1Z5Snl3Z0oyNXZibVVuS1R0Y2JpQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdkR2hwY3k1ZlkzSmxZWFJsVUc5d2NHVnlLSEJoY21WdWRDazdYRzRnSUNBZ2ZTQXZMeUJKWmlCMGFHbHpJR2x6SUdFZ2RHOTFZMmd0Wlc1aFlteGxaQ0JrWlhacFkyVWdkMlVnWVdSa0lHVjRkSEpoWEc0Z0lDQWdMeThnWlcxd2RIa2diVzkxYzJWdmRtVnlJR3hwYzNSbGJtVnljeUIwYnlCMGFHVWdZbTlrZVNkeklHbHRiV1ZrYVdGMFpTQmphR2xzWkhKbGJqdGNiaUFnSUNBdkx5QnZibXg1SUc1bFpXUmxaQ0JpWldOaGRYTmxJRzltSUdKeWIydGxiaUJsZG1WdWRDQmtaV3hsWjJGMGFXOXVJRzl1SUdsUFUxeHVJQ0FnSUM4dklHaDBkSEJ6T2k4dmQzZDNMbkYxYVhKcmMyMXZaR1V1YjNKbkwySnNiMmN2WVhKamFHbDJaWE12TWpBeE5DOHdNaTl0YjNWelpWOWxkbVZ1ZEY5aWRXSXVhSFJ0YkZ4dVhHNWNiaUFnSUNCcFppQW9KMjl1ZEc5MVkyaHpkR0Z5ZENjZ2FXNGdaRzlqZFcxbGJuUXVaRzlqZFcxbGJuUkZiR1Z0Wlc1MElDWW1JQ0Z3WVhKbGJuUXVZMnh2YzJWemRDaFRSVXhGUTFSUFVsOU9RVlpDUVZKZlRrRldLU2tnZTF4dUlDQWdJQ0FnVzEwdVkyOXVZMkYwS0M0dUxtUnZZM1Z0Wlc1MExtSnZaSGt1WTJocGJHUnlaVzRwTG1admNrVmhZMmdvWld4bGJTQTlQaUJGZG1WdWRFaGhibVJzWlhJdWIyNG9aV3hsYlN3Z0oyMXZkWE5sYjNabGNpY3NJRzV2YjNBcEtUdGNiaUFnSUNCOVhHNWNiaUFnSUNCMGFHbHpMbDlsYkdWdFpXNTBMbVp2WTNWektDazdYRzVjYmlBZ0lDQjBhR2x6TGw5bGJHVnRaVzUwTG5ObGRFRjBkSEpwWW5WMFpTZ25ZWEpwWVMxbGVIQmhibVJsWkNjc0lIUnlkV1VwTzF4dVhHNGdJQ0FnZEdocGN5NWZiV1Z1ZFM1amJHRnpjMHhwYzNRdVlXUmtLRU5NUVZOVFgwNUJUVVZmVTBoUFZ5UTJLVHRjYmx4dUlDQWdJSFJvYVhNdVgyVnNaVzFsYm5RdVkyeGhjM05NYVhOMExtRmtaQ2hEVEVGVFUxOU9RVTFGWDFOSVQxY2tOaWs3WEc1Y2JpQWdJQ0JGZG1WdWRFaGhibVJzWlhJdWRISnBaMmRsY2loMGFHbHpMbDlsYkdWdFpXNTBMQ0JGVmtWT1ZGOVRTRTlYVGlRMExDQnlaV3hoZEdWa1ZHRnlaMlYwS1R0Y2JpQWdmVnh1WEc0Z0lHaHBaR1VvS1NCN1hHNGdJQ0FnYVdZZ0tHbHpSR2x6WVdKc1pXUW9kR2hwY3k1ZlpXeGxiV1Z1ZENrZ2ZId2dJWFJvYVhNdVgybHpVMmh2ZDI0b2RHaHBjeTVmYldWdWRTa3BJSHRjYmlBZ0lDQWdJSEpsZEhWeWJqdGNiaUFnSUNCOVhHNWNiaUFnSUNCamIyNXpkQ0J5Wld4aGRHVmtWR0Z5WjJWMElEMGdlMXh1SUNBZ0lDQWdjbVZzWVhSbFpGUmhjbWRsZERvZ2RHaHBjeTVmWld4bGJXVnVkRnh1SUNBZ0lIMDdYRzVjYmlBZ0lDQjBhR2x6TGw5amIyMXdiR1YwWlVocFpHVW9jbVZzWVhSbFpGUmhjbWRsZENrN1hHNGdJSDFjYmx4dUlDQmthWE53YjNObEtDa2dlMXh1SUNBZ0lHbG1JQ2gwYUdsekxsOXdiM0J3WlhJcElIdGNiaUFnSUNBZ0lIUm9hWE11WDNCdmNIQmxjaTVrWlhOMGNtOTVLQ2s3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdjM1Z3WlhJdVpHbHpjRzl6WlNncE8xeHVJQ0I5WEc1Y2JpQWdkWEJrWVhSbEtDa2dlMXh1SUNBZ0lIUm9hWE11WDJsdVRtRjJZbUZ5SUQwZ2RHaHBjeTVmWkdWMFpXTjBUbUYyWW1GeUtDazdYRzVjYmlBZ0lDQnBaaUFvZEdocGN5NWZjRzl3Y0dWeUtTQjdYRzRnSUNBZ0lDQjBhR2x6TGw5d2IzQndaWEl1ZFhCa1lYUmxLQ2s3WEc0Z0lDQWdmVnh1SUNCOUlDOHZJRkJ5YVhaaGRHVmNibHh1WEc0Z0lGOWpiMjF3YkdWMFpVaHBaR1VvY21Wc1lYUmxaRlJoY21kbGRDa2dlMXh1SUNBZ0lHTnZibk4wSUdocFpHVkZkbVZ1ZENBOUlFVjJaVzUwU0dGdVpHeGxjaTUwY21sbloyVnlLSFJvYVhNdVgyVnNaVzFsYm5Rc0lFVldSVTVVWDBoSlJFVWtOQ3dnY21Wc1lYUmxaRlJoY21kbGRDazdYRzVjYmlBZ0lDQnBaaUFvYUdsa1pVVjJaVzUwTG1SbFptRjFiSFJRY21WMlpXNTBaV1FwSUh0Y2JpQWdJQ0FnSUhKbGRIVnlianRjYmlBZ0lDQjlJQzh2SUVsbUlIUm9hWE1nYVhNZ1lTQjBiM1ZqYUMxbGJtRmliR1ZrSUdSbGRtbGpaU0IzWlNCeVpXMXZkbVVnZEdobElHVjRkSEpoWEc0Z0lDQWdMeThnWlcxd2RIa2diVzkxYzJWdmRtVnlJR3hwYzNSbGJtVnljeUIzWlNCaFpHUmxaQ0JtYjNJZ2FVOVRJSE4xY0hCdmNuUmNibHh1WEc0Z0lDQWdhV1lnS0NkdmJuUnZkV05vYzNSaGNuUW5JR2x1SUdSdlkzVnRaVzUwTG1SdlkzVnRaVzUwUld4bGJXVnVkQ2tnZTF4dUlDQWdJQ0FnVzEwdVkyOXVZMkYwS0M0dUxtUnZZM1Z0Wlc1MExtSnZaSGt1WTJocGJHUnlaVzRwTG1admNrVmhZMmdvWld4bGJTQTlQaUJGZG1WdWRFaGhibVJzWlhJdWIyWm1LR1ZzWlcwc0lDZHRiM1Z6Wlc5MlpYSW5MQ0J1YjI5d0tTazdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2FXWWdLSFJvYVhNdVgzQnZjSEJsY2lrZ2UxeHVJQ0FnSUNBZ2RHaHBjeTVmY0c5d2NHVnlMbVJsYzNSeWIza29LVHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQjBhR2x6TGw5dFpXNTFMbU5zWVhOelRHbHpkQzV5WlcxdmRtVW9RMHhCVTFOZlRrRk5SVjlUU0U5WEpEWXBPMXh1WEc0Z0lDQWdkR2hwY3k1ZlpXeGxiV1Z1ZEM1amJHRnpjMHhwYzNRdWNtVnRiM1psS0VOTVFWTlRYMDVCVFVWZlUwaFBWeVEyS1R0Y2JseHVJQ0FnSUhSb2FYTXVYMlZzWlcxbGJuUXVjMlYwUVhSMGNtbGlkWFJsS0NkaGNtbGhMV1Y0Y0dGdVpHVmtKeXdnSjJaaGJITmxKeWs3WEc1Y2JpQWdJQ0JOWVc1cGNIVnNZWFJ2Y2k1eVpXMXZkbVZFWVhSaFFYUjBjbWxpZFhSbEtIUm9hWE11WDIxbGJuVXNJQ2R3YjNCd1pYSW5LVHRjYmlBZ0lDQkZkbVZ1ZEVoaGJtUnNaWEl1ZEhKcFoyZGxjaWgwYUdsekxsOWxiR1Z0Wlc1MExDQkZWa1ZPVkY5SVNVUkVSVTRrTkN3Z2NtVnNZWFJsWkZSaGNtZGxkQ2s3WEc0Z0lIMWNibHh1SUNCZloyVjBRMjl1Wm1sbktHTnZibVpwWnlrZ2UxeHVJQ0FnSUdOdmJtWnBaeUE5SUhzZ0xpNHVkR2hwY3k1amIyNXpkSEoxWTNSdmNpNUVaV1poZFd4MExGeHVJQ0FnSUNBZ0xpNHVUV0Z1YVhCMWJHRjBiM0l1WjJWMFJHRjBZVUYwZEhKcFluVjBaWE1vZEdocGN5NWZaV3hsYldWdWRDa3NYRzRnSUNBZ0lDQXVMaTVqYjI1bWFXZGNiaUFnSUNCOU8xeHVJQ0FnSUhSNWNHVkRhR1ZqYTBOdmJtWnBaeWhPUVUxRkpEa3NJR052Ym1acFp5d2dkR2hwY3k1amIyNXpkSEoxWTNSdmNpNUVaV1poZFd4MFZIbHdaU2s3WEc1Y2JpQWdJQ0JwWmlBb2RIbHdaVzltSUdOdmJtWnBaeTV5WldabGNtVnVZMlVnUFQwOUlDZHZZbXBsWTNRbklDWW1JQ0ZwYzBWc1pXMWxiblFvWTI5dVptbG5MbkpsWm1WeVpXNWpaU2tnSmlZZ2RIbHdaVzltSUdOdmJtWnBaeTV5WldabGNtVnVZMlV1WjJWMFFtOTFibVJwYm1kRGJHbGxiblJTWldOMElDRTlQU0FuWm5WdVkzUnBiMjRuS1NCN1hHNGdJQ0FnSUNBdkx5QlFiM0J3WlhJZ2RtbHlkSFZoYkNCbGJHVnRaVzUwY3lCeVpYRjFhWEpsSUdFZ1oyVjBRbTkxYm1ScGJtZERiR2xsYm5SU1pXTjBJRzFsZEdodlpGeHVJQ0FnSUNBZ2RHaHliM2NnYm1WM0lGUjVjR1ZGY25KdmNpaGdKSHRPUVUxRkpEa3VkRzlWY0hCbGNrTmhjMlVvS1gwNklFOXdkR2x2YmlCY0luSmxabVZ5Wlc1alpWd2lJSEJ5YjNacFpHVmtJSFI1Y0dVZ1hDSnZZbXBsWTNSY0lpQjNhWFJvYjNWMElHRWdjbVZ4ZFdseVpXUWdYQ0puWlhSQ2IzVnVaR2x1WjBOc2FXVnVkRkpsWTNSY0lpQnRaWFJvYjJRdVlDazdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2NtVjBkWEp1SUdOdmJtWnBaenRjYmlBZ2ZWeHVYRzRnSUY5amNtVmhkR1ZRYjNCd1pYSW9jR0Z5Wlc1MEtTQjdYRzRnSUNBZ2FXWWdLSFI1Y0dWdlppQlFiM0J3WlhJZ1BUMDlJQ2QxYm1SbFptbHVaV1FuS1NCN1hHNGdJQ0FnSUNCMGFISnZkeUJ1WlhjZ1ZIbHdaVVZ5Y205eUtDZENiMjkwYzNSeVlYQmNYQ2R6SUdSeWIzQmtiM2R1Y3lCeVpYRjFhWEpsSUZCdmNIQmxjaUFvYUhSMGNITTZMeTl3YjNCd1pYSXVhbk11YjNKbktTY3BPMXh1SUNBZ0lIMWNibHh1SUNBZ0lHeGxkQ0J5WldabGNtVnVZMlZGYkdWdFpXNTBJRDBnZEdocGN5NWZaV3hsYldWdWREdGNibHh1SUNBZ0lHbG1JQ2gwYUdsekxsOWpiMjVtYVdjdWNtVm1aWEpsYm1ObElEMDlQU0FuY0dGeVpXNTBKeWtnZTF4dUlDQWdJQ0FnY21WbVpYSmxibU5sUld4bGJXVnVkQ0E5SUhCaGNtVnVkRHRjYmlBZ0lDQjlJR1ZzYzJVZ2FXWWdLR2x6Uld4bGJXVnVkQ2gwYUdsekxsOWpiMjVtYVdjdWNtVm1aWEpsYm1ObEtTa2dlMXh1SUNBZ0lDQWdjbVZtWlhKbGJtTmxSV3hsYldWdWRDQTlJR2RsZEVWc1pXMWxiblFvZEdocGN5NWZZMjl1Wm1sbkxuSmxabVZ5Wlc1alpTazdYRzRnSUNBZ2ZTQmxiSE5sSUdsbUlDaDBlWEJsYjJZZ2RHaHBjeTVmWTI5dVptbG5MbkpsWm1WeVpXNWpaU0E5UFQwZ0oyOWlhbVZqZENjcElIdGNiaUFnSUNBZ0lISmxabVZ5Wlc1alpVVnNaVzFsYm5RZ1BTQjBhR2x6TGw5amIyNW1hV2N1Y21WbVpYSmxibU5sTzF4dUlDQWdJSDFjYmx4dUlDQWdJR052Ym5OMElIQnZjSEJsY2tOdmJtWnBaeUE5SUhSb2FYTXVYMmRsZEZCdmNIQmxja052Ym1acFp5Z3BPMXh1WEc0Z0lDQWdZMjl1YzNRZ2FYTkVhWE53YkdGNVUzUmhkR2xqSUQwZ2NHOXdjR1Z5UTI5dVptbG5MbTF2WkdsbWFXVnljeTVtYVc1a0tHMXZaR2xtYVdWeUlEMCtJRzF2WkdsbWFXVnlMbTVoYldVZ1BUMDlJQ2RoY0hCc2VWTjBlV3hsY3ljZ0ppWWdiVzlrYVdacFpYSXVaVzVoWW14bFpDQTlQVDBnWm1Gc2MyVXBPMXh1SUNBZ0lIUm9hWE11WDNCdmNIQmxjaUE5SUZCdmNIQmxjaTVqY21WaGRHVlFiM0J3WlhJb2NtVm1aWEpsYm1ObFJXeGxiV1Z1ZEN3Z2RHaHBjeTVmYldWdWRTd2djRzl3Y0dWeVEyOXVabWxuS1R0Y2JseHVJQ0FnSUdsbUlDaHBjMFJwYzNCc1lYbFRkR0YwYVdNcElIdGNiaUFnSUNBZ0lFMWhibWx3ZFd4aGRHOXlMbk5sZEVSaGRHRkJkSFJ5YVdKMWRHVW9kR2hwY3k1ZmJXVnVkU3dnSjNCdmNIQmxjaWNzSUNkemRHRjBhV01uS1R0Y2JpQWdJQ0I5WEc0Z0lIMWNibHh1SUNCZmFYTlRhRzkzYmlobGJHVnRaVzUwSUQwZ2RHaHBjeTVmWld4bGJXVnVkQ2tnZTF4dUlDQWdJSEpsZEhWeWJpQmxiR1Z0Wlc1MExtTnNZWE56VEdsemRDNWpiMjUwWVdsdWN5aERURUZUVTE5T1FVMUZYMU5JVDFja05pazdYRzRnSUgxY2JseHVJQ0JmWjJWMFRXVnVkVVZzWlcxbGJuUW9LU0I3WEc0Z0lDQWdjbVYwZFhKdUlGTmxiR1ZqZEc5eVJXNW5hVzVsTG01bGVIUW9kR2hwY3k1ZlpXeGxiV1Z1ZEN3Z1UwVk1SVU5VVDFKZlRVVk9WU2xiTUYwN1hHNGdJSDFjYmx4dUlDQmZaMlYwVUd4aFkyVnRaVzUwS0NrZ2UxeHVJQ0FnSUdOdmJuTjBJSEJoY21WdWRFUnliM0JrYjNkdUlEMGdkR2hwY3k1ZlpXeGxiV1Z1ZEM1d1lYSmxiblJPYjJSbE8xeHVYRzRnSUNBZ2FXWWdLSEJoY21WdWRFUnliM0JrYjNkdUxtTnNZWE56VEdsemRDNWpiMjUwWVdsdWN5aERURUZUVTE5T1FVMUZYMFJTVDFCRlRrUXBLU0I3WEc0Z0lDQWdJQ0J5WlhSMWNtNGdVRXhCUTBWTlJVNVVYMUpKUjBoVU8xeHVJQ0FnSUgxY2JseHVJQ0FnSUdsbUlDaHdZWEpsYm5SRWNtOXdaRzkzYmk1amJHRnpjMHhwYzNRdVkyOXVkR0ZwYm5Nb1EweEJVMU5mVGtGTlJWOUVVazlRVTFSQlVsUXBLU0I3WEc0Z0lDQWdJQ0J5WlhSMWNtNGdVRXhCUTBWTlJVNVVYMHhGUmxRN1hHNGdJQ0FnZlNBdkx5QlhaU0J1WldWa0lIUnZJSFJ5YVcwZ2RHaGxJSFpoYkhWbElHSmxZMkYxYzJVZ1kzVnpkRzl0SUhCeWIzQmxjblJwWlhNZ1kyRnVJR0ZzYzI4Z2FXNWpiSFZrWlNCemNHRmpaWE5jYmx4dVhHNGdJQ0FnWTI5dWMzUWdhWE5GYm1RZ1BTQm5aWFJEYjIxd2RYUmxaRk4wZVd4bEtIUm9hWE11WDIxbGJuVXBMbWRsZEZCeWIzQmxjblI1Vm1Gc2RXVW9KeTB0WW5NdGNHOXphWFJwYjI0bktTNTBjbWx0S0NrZ1BUMDlJQ2RsYm1Rbk8xeHVYRzRnSUNBZ2FXWWdLSEJoY21WdWRFUnliM0JrYjNkdUxtTnNZWE56VEdsemRDNWpiMjUwWVdsdWN5aERURUZUVTE5T1FVMUZYMFJTVDFCVlVDa3BJSHRjYmlBZ0lDQWdJSEpsZEhWeWJpQnBjMFZ1WkNBL0lGQk1RVU5GVFVWT1ZGOVVUMUJGVGtRZ09pQlFURUZEUlUxRlRsUmZWRTlRTzF4dUlDQWdJSDFjYmx4dUlDQWdJSEpsZEhWeWJpQnBjMFZ1WkNBL0lGQk1RVU5GVFVWT1ZGOUNUMVJVVDAxRlRrUWdPaUJRVEVGRFJVMUZUbFJmUWs5VVZFOU5PMXh1SUNCOVhHNWNiaUFnWDJSbGRHVmpkRTVoZG1KaGNpZ3BJSHRjYmlBZ0lDQnlaWFIxY200Z2RHaHBjeTVmWld4bGJXVnVkQzVqYkc5elpYTjBLR0F1Skh0RFRFRlRVMTlPUVUxRlgwNUJWa0pCVW4xZ0tTQWhQVDBnYm5Wc2JEdGNiaUFnZlZ4dVhHNGdJRjluWlhSUFptWnpaWFFvS1NCN1hHNGdJQ0FnWTI5dWMzUWdlMXh1SUNBZ0lDQWdiMlptYzJWMFhHNGdJQ0FnZlNBOUlIUm9hWE11WDJOdmJtWnBaenRjYmx4dUlDQWdJR2xtSUNoMGVYQmxiMllnYjJabWMyVjBJRDA5UFNBbmMzUnlhVzVuSnlrZ2UxeHVJQ0FnSUNBZ2NtVjBkWEp1SUc5bVpuTmxkQzV6Y0d4cGRDZ25MQ2NwTG0xaGNDaDJZV3dnUFQ0Z1RuVnRZbVZ5TG5CaGNuTmxTVzUwS0haaGJDd2dNVEFwS1R0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JwWmlBb2RIbHdaVzltSUc5bVpuTmxkQ0E5UFQwZ0oyWjFibU4wYVc5dUp5a2dlMXh1SUNBZ0lDQWdjbVYwZFhKdUlIQnZjSEJsY2tSaGRHRWdQVDRnYjJabWMyVjBLSEJ2Y0hCbGNrUmhkR0VzSUhSb2FYTXVYMlZzWlcxbGJuUXBPMXh1SUNBZ0lIMWNibHh1SUNBZ0lISmxkSFZ5YmlCdlptWnpaWFE3WEc0Z0lIMWNibHh1SUNCZloyVjBVRzl3Y0dWeVEyOXVabWxuS0NrZ2UxeHVJQ0FnSUdOdmJuTjBJR1JsWm1GMWJIUkNjMUJ2Y0hCbGNrTnZibVpwWnlBOUlIdGNiaUFnSUNBZ0lIQnNZV05sYldWdWREb2dkR2hwY3k1ZloyVjBVR3hoWTJWdFpXNTBLQ2tzWEc0Z0lDQWdJQ0J0YjJScFptbGxjbk02SUZ0N1hHNGdJQ0FnSUNBZ0lHNWhiV1U2SUNkd2NtVjJaVzUwVDNabGNtWnNiM2NuTEZ4dUlDQWdJQ0FnSUNCdmNIUnBiMjV6T2lCN1hHNGdJQ0FnSUNBZ0lDQWdZbTkxYm1SaGNuazZJSFJvYVhNdVgyTnZibVpwWnk1aWIzVnVaR0Z5ZVZ4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNCOUxDQjdYRzRnSUNBZ0lDQWdJRzVoYldVNklDZHZabVp6WlhRbkxGeHVJQ0FnSUNBZ0lDQnZjSFJwYjI1ek9pQjdYRzRnSUNBZ0lDQWdJQ0FnYjJabWMyVjBPaUIwYUdsekxsOW5aWFJQWm1aelpYUW9LVnh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0I5WFZ4dUlDQWdJSDA3SUM4dklFUnBjMkZpYkdVZ1VHOXdjR1Z5SUdsbUlIZGxJR2hoZG1VZ1lTQnpkR0YwYVdNZ1pHbHpjR3hoZVZ4dVhHNGdJQ0FnYVdZZ0tIUm9hWE11WDJOdmJtWnBaeTVrYVhOd2JHRjVJRDA5UFNBbmMzUmhkR2xqSnlrZ2UxeHVJQ0FnSUNBZ1pHVm1ZWFZzZEVKelVHOXdjR1Z5UTI5dVptbG5MbTF2WkdsbWFXVnljeUE5SUZ0N1hHNGdJQ0FnSUNBZ0lHNWhiV1U2SUNkaGNIQnNlVk4wZVd4bGN5Y3NYRzRnSUNBZ0lDQWdJR1Z1WVdKc1pXUTZJR1poYkhObFhHNGdJQ0FnSUNCOVhUdGNiaUFnSUNCOVhHNWNiaUFnSUNCeVpYUjFjbTRnZXlBdUxpNWtaV1poZFd4MFFuTlFiM0J3WlhKRGIyNW1hV2NzWEc0Z0lDQWdJQ0F1TGk0b2RIbHdaVzltSUhSb2FYTXVYMk52Ym1acFp5NXdiM0J3WlhKRGIyNW1hV2NnUFQwOUlDZG1kVzVqZEdsdmJpY2dQeUIwYUdsekxsOWpiMjVtYVdjdWNHOXdjR1Z5UTI5dVptbG5LR1JsWm1GMWJIUkNjMUJ2Y0hCbGNrTnZibVpwWnlrZ09pQjBhR2x6TGw5amIyNW1hV2N1Y0c5d2NHVnlRMjl1Wm1sbktWeHVJQ0FnSUgwN1hHNGdJSDFjYmx4dUlDQmZjMlZzWldOMFRXVnVkVWwwWlcwb2UxeHVJQ0FnSUd0bGVTeGNiaUFnSUNCMFlYSm5aWFJjYmlBZ2ZTa2dlMXh1SUNBZ0lHTnZibk4wSUdsMFpXMXpJRDBnVTJWc1pXTjBiM0pGYm1kcGJtVXVabWx1WkNoVFJVeEZRMVJQVWw5V1NWTkpRa3hGWDBsVVJVMVRMQ0IwYUdsekxsOXRaVzUxS1M1bWFXeDBaWElvYVhOV2FYTnBZbXhsS1R0Y2JseHVJQ0FnSUdsbUlDZ2hhWFJsYlhNdWJHVnVaM1JvS1NCN1hHNGdJQ0FnSUNCeVpYUjFjbTQ3WEc0Z0lDQWdmU0F2THlCcFppQjBZWEpuWlhRZ2FYTnVKM1FnYVc1amJIVmtaV1FnYVc0Z2FYUmxiWE1nS0dVdVp5NGdkMmhsYmlCbGVIQmhibVJwYm1jZ2RHaGxJR1J5YjNCa2IzZHVLVnh1SUNBZ0lDOHZJR0ZzYkc5M0lHTjVZMnhwYm1jZ2RHOGdaMlYwSUhSb1pTQnNZWE4wSUdsMFpXMGdhVzRnWTJGelpTQnJaWGtnWlhGMVlXeHpJRUZTVWs5WFgxVlFYMHRGV1Z4dVhHNWNiaUFnSUNCblpYUk9aWGgwUVdOMGFYWmxSV3hsYldWdWRDaHBkR1Z0Y3l3Z2RHRnlaMlYwTENCclpYa2dQVDA5SUVGU1VrOVhYMFJQVjA1ZlMwVlpMQ0FoYVhSbGJYTXVhVzVqYkhWa1pYTW9kR0Z5WjJWMEtTa3VabTlqZFhNb0tUdGNiaUFnZlNBdkx5QlRkR0YwYVdOY2JseHVYRzRnSUhOMFlYUnBZeUJxVVhWbGNubEpiblJsY21aaFkyVW9ZMjl1Wm1sbktTQjdYRzRnSUNBZ2NtVjBkWEp1SUhSb2FYTXVaV0ZqYUNobWRXNWpkR2x2YmlBb0tTQjdYRzRnSUNBZ0lDQmpiMjV6ZENCa1lYUmhJRDBnUkhKdmNHUnZkMjR1WjJWMFQzSkRjbVZoZEdWSmJuTjBZVzVqWlNoMGFHbHpMQ0JqYjI1bWFXY3BPMXh1WEc0Z0lDQWdJQ0JwWmlBb2RIbHdaVzltSUdOdmJtWnBaeUFoUFQwZ0ozTjBjbWx1WnljcElIdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdU8xeHVJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQnBaaUFvZEhsd1pXOW1JR1JoZEdGYlkyOXVabWxuWFNBOVBUMGdKM1Z1WkdWbWFXNWxaQ2NwSUh0Y2JpQWdJQ0FnSUNBZ2RHaHliM2NnYm1WM0lGUjVjR1ZGY25KdmNpaGdUbThnYldWMGFHOWtJRzVoYldWa0lGd2lKSHRqYjI1bWFXZDlYQ0pnS1R0Y2JpQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ1pHRjBZVnRqYjI1bWFXZGRLQ2s3WEc0Z0lDQWdmU2s3WEc0Z0lIMWNibHh1SUNCemRHRjBhV01nWTJ4bFlYSk5aVzUxY3lobGRtVnVkQ2tnZTF4dUlDQWdJR2xtSUNobGRtVnVkQ0FtSmlBb1pYWmxiblF1WW5WMGRHOXVJRDA5UFNCU1NVZElWRjlOVDFWVFJWOUNWVlJVVDA0Z2ZId2daWFpsYm5RdWRIbHdaU0E5UFQwZ0oydGxlWFZ3SnlBbUppQmxkbVZ1ZEM1clpYa2dJVDA5SUZSQlFsOUxSVmtrTVNrcElIdGNiaUFnSUNBZ0lISmxkSFZ5Ymp0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JqYjI1emRDQjBiMmRuYkdWeklEMGdVMlZzWldOMGIzSkZibWRwYm1VdVptbHVaQ2hUUlV4RlExUlBVbDlFUVZSQlgxUlBSMGRNUlNRektUdGNibHh1SUNBZ0lHWnZjaUFvYkdWMElHa2dQU0F3TENCc1pXNGdQU0IwYjJkbmJHVnpMbXhsYm1kMGFEc2dhU0E4SUd4bGJqc2dhU3NyS1NCN1hHNGdJQ0FnSUNCamIyNXpkQ0JqYjI1MFpYaDBJRDBnUkhKdmNHUnZkMjR1WjJWMFNXNXpkR0Z1WTJVb2RHOW5aMnhsYzF0cFhTazdYRzVjYmlBZ0lDQWdJR2xtSUNnaFkyOXVkR1Y0ZENCOGZDQmpiMjUwWlhoMExsOWpiMjVtYVdjdVlYVjBiME5zYjNObElEMDlQU0JtWVd4elpTa2dlMXh1SUNBZ0lDQWdJQ0JqYjI1MGFXNTFaVHRjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnYVdZZ0tDRmpiMjUwWlhoMExsOXBjMU5vYjNkdUtDa3BJSHRjYmlBZ0lDQWdJQ0FnWTI5dWRHbHVkV1U3WEc0Z0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUdOdmJuTjBJSEpsYkdGMFpXUlVZWEpuWlhRZ1BTQjdYRzRnSUNBZ0lDQWdJSEpsYkdGMFpXUlVZWEpuWlhRNklHTnZiblJsZUhRdVgyVnNaVzFsYm5SY2JpQWdJQ0FnSUgwN1hHNWNiaUFnSUNBZ0lHbG1JQ2hsZG1WdWRDa2dlMXh1SUNBZ0lDQWdJQ0JqYjI1emRDQmpiMjF3YjNObFpGQmhkR2dnUFNCbGRtVnVkQzVqYjIxd2IzTmxaRkJoZEdnb0tUdGNiaUFnSUNBZ0lDQWdZMjl1YzNRZ2FYTk5aVzUxVkdGeVoyVjBJRDBnWTI5dGNHOXpaV1JRWVhSb0xtbHVZMngxWkdWektHTnZiblJsZUhRdVgyMWxiblVwTzF4dVhHNGdJQ0FnSUNBZ0lHbG1JQ2hqYjIxd2IzTmxaRkJoZEdndWFXNWpiSFZrWlhNb1kyOXVkR1Y0ZEM1ZlpXeGxiV1Z1ZENrZ2ZId2dZMjl1ZEdWNGRDNWZZMjl1Wm1sbkxtRjFkRzlEYkc5elpTQTlQVDBnSjJsdWMybGtaU2NnSmlZZ0lXbHpUV1Z1ZFZSaGNtZGxkQ0I4ZkNCamIyNTBaWGgwTGw5amIyNW1hV2N1WVhWMGIwTnNiM05sSUQwOVBTQW5iM1YwYzJsa1pTY2dKaVlnYVhOTlpXNTFWR0Z5WjJWMEtTQjdYRzRnSUNBZ0lDQWdJQ0FnWTI5dWRHbHVkV1U3WEc0Z0lDQWdJQ0FnSUgwZ0x5OGdWR0ZpSUc1aGRtbG5ZWFJwYjI0Z2RHaHliM1ZuYUNCMGFHVWdaSEp2Y0dSdmQyNGdiV1Z1ZFNCdmNpQmxkbVZ1ZEhNZ1puSnZiU0JqYjI1MFlXbHVaV1FnYVc1d2RYUnpJSE5vYjNWc1pHNG5kQ0JqYkc5elpTQjBhR1VnYldWdWRWeHVYRzVjYmlBZ0lDQWdJQ0FnYVdZZ0tHTnZiblJsZUhRdVgyMWxiblV1WTI5dWRHRnBibk1vWlhabGJuUXVkR0Z5WjJWMEtTQW1KaUFvWlhabGJuUXVkSGx3WlNBOVBUMGdKMnRsZVhWd0p5QW1KaUJsZG1WdWRDNXJaWGtnUFQwOUlGUkJRbDlMUlZra01TQjhmQ0F2YVc1d2RYUjhjMlZzWldOMGZHOXdkR2x2Ym54MFpYaDBZWEpsWVh4bWIzSnRMMmt1ZEdWemRDaGxkbVZ1ZEM1MFlYSm5aWFF1ZEdGblRtRnRaU2twS1NCN1hHNGdJQ0FnSUNBZ0lDQWdZMjl1ZEdsdWRXVTdYRzRnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNCcFppQW9aWFpsYm5RdWRIbHdaU0E5UFQwZ0oyTnNhV05ySnlrZ2UxeHVJQ0FnSUNBZ0lDQWdJSEpsYkdGMFpXUlVZWEpuWlhRdVkyeHBZMnRGZG1WdWRDQTlJR1YyWlc1ME8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJR052Ym5SbGVIUXVYMk52YlhCc1pYUmxTR2xrWlNoeVpXeGhkR1ZrVkdGeVoyVjBLVHRjYmlBZ0lDQjlYRzRnSUgxY2JseHVJQ0J6ZEdGMGFXTWdaMlYwVUdGeVpXNTBSbkp2YlVWc1pXMWxiblFvWld4bGJXVnVkQ2tnZTF4dUlDQWdJSEpsZEhWeWJpQm5aWFJGYkdWdFpXNTBSbkp2YlZObGJHVmpkRzl5S0dWc1pXMWxiblFwSUh4OElHVnNaVzFsYm5RdWNHRnlaVzUwVG05a1pUdGNiaUFnZlZ4dVhHNGdJSE4wWVhScFl5QmtZWFJoUVhCcFMyVjVaRzkzYmtoaGJtUnNaWElvWlhabGJuUXBJSHRjYmlBZ0lDQXZMeUJKWmlCdWIzUWdhVzV3ZFhRdmRHVjRkR0Z5WldFNlhHNGdJQ0FnTHk4Z0lDMGdRVzVrSUc1dmRDQmhJR3RsZVNCcGJpQlNSVWRGV0ZCZlMwVlpSRTlYVGlBOVBpQnViM1FnWVNCa2NtOXdaRzkzYmlCamIyMXRZVzVrWEc0Z0lDQWdMeThnU1dZZ2FXNXdkWFF2ZEdWNGRHRnlaV0U2WEc0Z0lDQWdMeThnSUMwZ1NXWWdjM0JoWTJVZ2EyVjVJRDArSUc1dmRDQmhJR1J5YjNCa2IzZHVJR052YlcxaGJtUmNiaUFnSUNBdkx5QWdMU0JKWmlCclpYa2dhWE1nYjNSb1pYSWdkR2hoYmlCbGMyTmhjR1ZjYmlBZ0lDQXZMeUFnSUNBdElFbG1JR3RsZVNCcGN5QnViM1FnZFhBZ2IzSWdaRzkzYmlBOVBpQnViM1FnWVNCa2NtOXdaRzkzYmlCamIyMXRZVzVrWEc0Z0lDQWdMeThnSUNBZ0xTQkpaaUIwY21sbloyVnlJR2x1YzJsa1pTQjBhR1VnYldWdWRTQTlQaUJ1YjNRZ1lTQmtjbTl3Wkc5M2JpQmpiMjF0WVc1a1hHNGdJQ0FnYVdZZ0tDOXBibkIxZEh4MFpYaDBZWEpsWVM5cExuUmxjM1FvWlhabGJuUXVkR0Z5WjJWMExuUmhaMDVoYldVcElEOGdaWFpsYm5RdWEyVjVJRDA5UFNCVFVFRkRSVjlMUlZrZ2ZId2daWFpsYm5RdWEyVjVJQ0U5UFNCRlUwTkJVRVZmUzBWWkpESWdKaVlnS0dWMlpXNTBMbXRsZVNBaFBUMGdRVkpTVDFkZlJFOVhUbDlMUlZrZ0ppWWdaWFpsYm5RdWEyVjVJQ0U5UFNCQlVsSlBWMTlWVUY5TFJWa2dmSHdnWlhabGJuUXVkR0Z5WjJWMExtTnNiM05sYzNRb1UwVk1SVU5VVDFKZlRVVk9WU2twSURvZ0lWSkZSMFZZVUY5TFJWbEVUMWRPTG5SbGMzUW9aWFpsYm5RdWEyVjVLU2tnZTF4dUlDQWdJQ0FnY21WMGRYSnVPMXh1SUNBZ0lIMWNibHh1SUNBZ0lHTnZibk4wSUdselFXTjBhWFpsSUQwZ2RHaHBjeTVqYkdGemMweHBjM1F1WTI5dWRHRnBibk1vUTB4QlUxTmZUa0ZOUlY5VFNFOVhKRFlwTzF4dVhHNGdJQ0FnYVdZZ0tDRnBjMEZqZEdsMlpTQW1KaUJsZG1WdWRDNXJaWGtnUFQwOUlFVlRRMEZRUlY5TFJWa2tNaWtnZTF4dUlDQWdJQ0FnY21WMGRYSnVPMXh1SUNBZ0lIMWNibHh1SUNBZ0lHVjJaVzUwTG5CeVpYWmxiblJFWldaaGRXeDBLQ2s3WEc0Z0lDQWdaWFpsYm5RdWMzUnZjRkJ5YjNCaFoyRjBhVzl1S0NrN1hHNWNiaUFnSUNCcFppQW9hWE5FYVhOaFlteGxaQ2gwYUdsektTa2dlMXh1SUNBZ0lDQWdjbVYwZFhKdU8xeHVJQ0FnSUgxY2JseHVJQ0FnSUdOdmJuTjBJR2RsZEZSdloyZHNaVUoxZEhSdmJpQTlJSFJvYVhNdWJXRjBZMmhsY3loVFJVeEZRMVJQVWw5RVFWUkJYMVJQUjBkTVJTUXpLU0EvSUhSb2FYTWdPaUJUWld4bFkzUnZja1Z1WjJsdVpTNXdjbVYyS0hSb2FYTXNJRk5GVEVWRFZFOVNYMFJCVkVGZlZFOUhSMHhGSkRNcFd6QmRPMXh1SUNBZ0lHTnZibk4wSUdsdWMzUmhibU5sSUQwZ1JISnZjR1J2ZDI0dVoyVjBUM0pEY21WaGRHVkpibk4wWVc1alpTaG5aWFJVYjJkbmJHVkNkWFIwYjI0cE8xeHVYRzRnSUNBZ2FXWWdLR1YyWlc1MExtdGxlU0E5UFQwZ1JWTkRRVkJGWDB0RldTUXlLU0I3WEc0Z0lDQWdJQ0JwYm5OMFlXNWpaUzVvYVdSbEtDazdYRzRnSUNBZ0lDQnlaWFIxY200N1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnYVdZZ0tHVjJaVzUwTG10bGVTQTlQVDBnUVZKU1QxZGZWVkJmUzBWWklIeDhJR1YyWlc1MExtdGxlU0E5UFQwZ1FWSlNUMWRmUkU5WFRsOUxSVmtwSUh0Y2JpQWdJQ0FnSUdsbUlDZ2hhWE5CWTNScGRtVXBJSHRjYmlBZ0lDQWdJQ0FnYVc1emRHRnVZMlV1YzJodmR5Z3BPMXh1SUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0JwYm5OMFlXNWpaUzVmYzJWc1pXTjBUV1Z1ZFVsMFpXMG9aWFpsYm5RcE8xeHVYRzRnSUNBZ0lDQnlaWFIxY200N1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnYVdZZ0tDRnBjMEZqZEdsMlpTQjhmQ0JsZG1WdWRDNXJaWGtnUFQwOUlGTlFRVU5GWDB0RldTa2dlMXh1SUNBZ0lDQWdSSEp2Y0dSdmQyNHVZMnhsWVhKTlpXNTFjeWdwTzF4dUlDQWdJSDFjYmlBZ2ZWeHVYRzU5WEc0dktpcGNiaUFxSUMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFZ4dUlDb2dSR0YwWVNCQmNHa2dhVzF3YkdWdFpXNTBZWFJwYjI1Y2JpQXFJQzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMVnh1SUNvdlhHNWNibHh1UlhabGJuUklZVzVrYkdWeUxtOXVLR1J2WTNWdFpXNTBMQ0JGVmtWT1ZGOUxSVmxFVDFkT1gwUkJWRUZmUVZCSkxDQlRSVXhGUTFSUFVsOUVRVlJCWDFSUFIwZE1SU1F6TENCRWNtOXdaRzkzYmk1a1lYUmhRWEJwUzJWNVpHOTNia2hoYm1Sc1pYSXBPMXh1UlhabGJuUklZVzVrYkdWeUxtOXVLR1J2WTNWdFpXNTBMQ0JGVmtWT1ZGOUxSVmxFVDFkT1gwUkJWRUZmUVZCSkxDQlRSVXhGUTFSUFVsOU5SVTVWTENCRWNtOXdaRzkzYmk1a1lYUmhRWEJwUzJWNVpHOTNia2hoYm1Sc1pYSXBPMXh1UlhabGJuUklZVzVrYkdWeUxtOXVLR1J2WTNWdFpXNTBMQ0JGVmtWT1ZGOURURWxEUzE5RVFWUkJYMEZRU1NRekxDQkVjbTl3Wkc5M2JpNWpiR1ZoY2sxbGJuVnpLVHRjYmtWMlpXNTBTR0Z1Wkd4bGNpNXZiaWhrYjJOMWJXVnVkQ3dnUlZaRlRsUmZTMFZaVlZCZlJFRlVRVjlCVUVrc0lFUnliM0JrYjNkdUxtTnNaV0Z5VFdWdWRYTXBPMXh1UlhabGJuUklZVzVrYkdWeUxtOXVLR1J2WTNWdFpXNTBMQ0JGVmtWT1ZGOURURWxEUzE5RVFWUkJYMEZRU1NRekxDQlRSVXhGUTFSUFVsOUVRVlJCWDFSUFIwZE1SU1F6TENCbWRXNWpkR2x2YmlBb1pYWmxiblFwSUh0Y2JpQWdaWFpsYm5RdWNISmxkbVZ1ZEVSbFptRjFiSFFvS1R0Y2JpQWdSSEp2Y0dSdmQyNHVaMlYwVDNKRGNtVmhkR1ZKYm5OMFlXNWpaU2gwYUdsektTNTBiMmRuYkdVb0tUdGNibjBwTzF4dUx5b3FYRzRnS2lBdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMxY2JpQXFJR3BSZFdWeWVWeHVJQ29nTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0WEc0Z0tpQmhaR1FnTGtSeWIzQmtiM2R1SUhSdklHcFJkV1Z5ZVNCdmJteDVJR2xtSUdwUmRXVnllU0JwY3lCd2NtVnpaVzUwWEc0Z0tpOWNibHh1WkdWbWFXNWxTbEYxWlhKNVVHeDFaMmx1S0VSeWIzQmtiM2R1S1R0Y2JseHVMeW9xWEc0Z0tpQXRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMVnh1SUNvZ1FtOXZkSE4wY21Gd0lDaDJOUzR4TGpNcE9pQjFkR2xzTDNOamNtOXNiRUpoY2k1cWMxeHVJQ29nVEdsalpXNXpaV1FnZFc1a1pYSWdUVWxVSUNob2RIUndjem92TDJkcGRHaDFZaTVqYjIwdmRIZGljeTlpYjI5MGMzUnlZWEF2WW14dllpOXRZV2x1TDB4SlEwVk9VMFVwWEc0Z0tpQXRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMVnh1SUNvdlhHNWpiMjV6ZENCVFJVeEZRMVJQVWw5R1NWaEZSRjlEVDA1VVJVNVVJRDBnSnk1bWFYaGxaQzEwYjNBc0lDNW1hWGhsWkMxaWIzUjBiMjBzSUM1cGN5MW1hWGhsWkN3Z0xuTjBhV05yZVMxMGIzQW5PMXh1WTI5dWMzUWdVMFZNUlVOVVQxSmZVMVJKUTB0WlgwTlBUbFJGVGxRZ1BTQW5Mbk4wYVdOcmVTMTBiM0FuTzF4dVhHNWpiR0Z6Y3lCVFkzSnZiR3hDWVhKSVpXeHdaWElnZTF4dUlDQmpiMjV6ZEhKMVkzUnZjaWdwSUh0Y2JpQWdJQ0IwYUdsekxsOWxiR1Z0Wlc1MElEMGdaRzlqZFcxbGJuUXVZbTlrZVR0Y2JpQWdmVnh1WEc0Z0lHZGxkRmRwWkhSb0tDa2dlMXh1SUNBZ0lDOHZJR2gwZEhCek9pOHZaR1YyWld4dmNHVnlMbTF2ZW1sc2JHRXViM0puTDJWdUxWVlRMMlJ2WTNNdlYyVmlMMEZRU1M5WGFXNWtiM2N2YVc1dVpYSlhhV1IwYUNOMWMyRm5aVjl1YjNSbGMxeHVJQ0FnSUdOdmJuTjBJR1J2WTNWdFpXNTBWMmxrZEdnZ1BTQmtiMk4xYldWdWRDNWtiMk4xYldWdWRFVnNaVzFsYm5RdVkyeHBaVzUwVjJsa2RHZzdYRzRnSUNBZ2NtVjBkWEp1SUUxaGRHZ3VZV0p6S0hkcGJtUnZkeTVwYm01bGNsZHBaSFJvSUMwZ1pHOWpkVzFsYm5SWGFXUjBhQ2s3WEc0Z0lIMWNibHh1SUNCb2FXUmxLQ2tnZTF4dUlDQWdJR052Ym5OMElIZHBaSFJvSUQwZ2RHaHBjeTVuWlhSWGFXUjBhQ2dwTzF4dVhHNGdJQ0FnZEdocGN5NWZaR2x6WVdKc1pVOTJaWEpHYkc5M0tDazdJQzh2SUdkcGRtVWdjR0ZrWkdsdVp5QjBieUJsYkdWdFpXNTBJSFJ2SUdKaGJHRnVZMlVnZEdobElHaHBaR1JsYmlCelkzSnZiR3hpWVhJZ2QybGtkR2hjYmx4dVhHNGdJQ0FnZEdocGN5NWZjMlYwUld4bGJXVnVkRUYwZEhKcFluVjBaWE1vZEdocGN5NWZaV3hsYldWdWRDd2dKM0JoWkdScGJtZFNhV2RvZENjc0lHTmhiR04xYkdGMFpXUldZV3gxWlNBOVBpQmpZV3hqZFd4aGRHVmtWbUZzZFdVZ0t5QjNhV1IwYUNrN0lDOHZJSFJ5YVdOck9pQlhaU0JoWkdwMWMzUWdjRzl6YVhScGRtVWdjR0ZrWkdsdVoxSnBaMmgwSUdGdVpDQnVaV2RoZEdsMlpTQnRZWEpuYVc1U2FXZG9kQ0IwYnlCemRHbGphM2t0ZEc5d0lHVnNaVzFsYm5SeklIUnZJR3RsWlhBZ2MyaHZkMmx1WnlCbWRXeHNkMmxrZEdoY2JseHVYRzRnSUNBZ2RHaHBjeTVmYzJWMFJXeGxiV1Z1ZEVGMGRISnBZblYwWlhNb1UwVk1SVU5VVDFKZlJrbFlSVVJmUTA5T1ZFVk9WQ3dnSjNCaFpHUnBibWRTYVdkb2RDY3NJR05oYkdOMWJHRjBaV1JXWVd4MVpTQTlQaUJqWVd4amRXeGhkR1ZrVm1Gc2RXVWdLeUIzYVdSMGFDazdYRzVjYmlBZ0lDQjBhR2x6TGw5elpYUkZiR1Z0Wlc1MFFYUjBjbWxpZFhSbGN5aFRSVXhGUTFSUFVsOVRWRWxEUzFsZlEwOU9WRVZPVkN3Z0oyMWhjbWRwYmxKcFoyaDBKeXdnWTJGc1kzVnNZWFJsWkZaaGJIVmxJRDArSUdOaGJHTjFiR0YwWldSV1lXeDFaU0F0SUhkcFpIUm9LVHRjYmlBZ2ZWeHVYRzRnSUY5a2FYTmhZbXhsVDNabGNrWnNiM2NvS1NCN1hHNGdJQ0FnZEdocGN5NWZjMkYyWlVsdWFYUnBZV3hCZEhSeWFXSjFkR1VvZEdocGN5NWZaV3hsYldWdWRDd2dKMjkyWlhKbWJHOTNKeWs3WEc1Y2JpQWdJQ0IwYUdsekxsOWxiR1Z0Wlc1MExuTjBlV3hsTG05MlpYSm1iRzkzSUQwZ0oyaHBaR1JsYmljN1hHNGdJSDFjYmx4dUlDQmZjMlYwUld4bGJXVnVkRUYwZEhKcFluVjBaWE1vYzJWc1pXTjBiM0lzSUhOMGVXeGxVSEp2Y0N3Z1kyRnNiR0poWTJzcElIdGNiaUFnSUNCamIyNXpkQ0J6WTNKdmJHeGlZWEpYYVdSMGFDQTlJSFJvYVhNdVoyVjBWMmxrZEdnb0tUdGNibHh1SUNBZ0lHTnZibk4wSUcxaGJtbHdkV3hoZEdsdmJrTmhiR3hDWVdOcklEMGdaV3hsYldWdWRDQTlQaUI3WEc0Z0lDQWdJQ0JwWmlBb1pXeGxiV1Z1ZENBaFBUMGdkR2hwY3k1ZlpXeGxiV1Z1ZENBbUppQjNhVzVrYjNjdWFXNXVaWEpYYVdSMGFDQStJR1ZzWlcxbGJuUXVZMnhwWlc1MFYybGtkR2dnS3lCelkzSnZiR3hpWVhKWGFXUjBhQ2tnZTF4dUlDQWdJQ0FnSUNCeVpYUjFjbTQ3WEc0Z0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUhSb2FYTXVYM05oZG1WSmJtbDBhV0ZzUVhSMGNtbGlkWFJsS0dWc1pXMWxiblFzSUhOMGVXeGxVSEp2Y0NrN1hHNWNiaUFnSUNBZ0lHTnZibk4wSUdOaGJHTjFiR0YwWldSV1lXeDFaU0E5SUhkcGJtUnZkeTVuWlhSRGIyMXdkWFJsWkZOMGVXeGxLR1ZzWlcxbGJuUXBXM04wZVd4bFVISnZjRjA3WEc0Z0lDQWdJQ0JsYkdWdFpXNTBMbk4wZVd4bFczTjBlV3hsVUhKdmNGMGdQU0JnSkh0allXeHNZbUZqYXloT2RXMWlaWEl1Y0dGeWMyVkdiRzloZENoallXeGpkV3hoZEdWa1ZtRnNkV1VwS1gxd2VHQTdYRzRnSUNBZ2ZUdGNibHh1SUNBZ0lIUm9hWE11WDJGd2NHeDVUV0Z1YVhCMWJHRjBhVzl1UTJGc2JHSmhZMnNvYzJWc1pXTjBiM0lzSUcxaGJtbHdkV3hoZEdsdmJrTmhiR3hDWVdOcktUdGNiaUFnZlZ4dVhHNGdJSEpsYzJWMEtDa2dlMXh1SUNBZ0lIUm9hWE11WDNKbGMyVjBSV3hsYldWdWRFRjBkSEpwWW5WMFpYTW9kR2hwY3k1ZlpXeGxiV1Z1ZEN3Z0oyOTJaWEptYkc5M0p5azdYRzVjYmlBZ0lDQjBhR2x6TGw5eVpYTmxkRVZzWlcxbGJuUkJkSFJ5YVdKMWRHVnpLSFJvYVhNdVgyVnNaVzFsYm5Rc0lDZHdZV1JrYVc1blVtbG5hSFFuS1R0Y2JseHVJQ0FnSUhSb2FYTXVYM0psYzJWMFJXeGxiV1Z1ZEVGMGRISnBZblYwWlhNb1UwVk1SVU5VVDFKZlJrbFlSVVJmUTA5T1ZFVk9WQ3dnSjNCaFpHUnBibWRTYVdkb2RDY3BPMXh1WEc0Z0lDQWdkR2hwY3k1ZmNtVnpaWFJGYkdWdFpXNTBRWFIwY21saWRYUmxjeWhUUlV4RlExUlBVbDlUVkVsRFMxbGZRMDlPVkVWT1ZDd2dKMjFoY21kcGJsSnBaMmgwSnlrN1hHNGdJSDFjYmx4dUlDQmZjMkYyWlVsdWFYUnBZV3hCZEhSeWFXSjFkR1VvWld4bGJXVnVkQ3dnYzNSNWJHVlFjbTl3S1NCN1hHNGdJQ0FnWTI5dWMzUWdZV04wZFdGc1ZtRnNkV1VnUFNCbGJHVnRaVzUwTG5OMGVXeGxXM04wZVd4bFVISnZjRjA3WEc1Y2JpQWdJQ0JwWmlBb1lXTjBkV0ZzVm1Gc2RXVXBJSHRjYmlBZ0lDQWdJRTFoYm1sd2RXeGhkRzl5TG5ObGRFUmhkR0ZCZEhSeWFXSjFkR1VvWld4bGJXVnVkQ3dnYzNSNWJHVlFjbTl3TENCaFkzUjFZV3hXWVd4MVpTazdYRzRnSUNBZ2ZWeHVJQ0I5WEc1Y2JpQWdYM0psYzJWMFJXeGxiV1Z1ZEVGMGRISnBZblYwWlhNb2MyVnNaV04wYjNJc0lITjBlV3hsVUhKdmNDa2dlMXh1SUNBZ0lHTnZibk4wSUcxaGJtbHdkV3hoZEdsdmJrTmhiR3hDWVdOcklEMGdaV3hsYldWdWRDQTlQaUI3WEc0Z0lDQWdJQ0JqYjI1emRDQjJZV3gxWlNBOUlFMWhibWx3ZFd4aGRHOXlMbWRsZEVSaGRHRkJkSFJ5YVdKMWRHVW9aV3hsYldWdWRDd2djM1I1YkdWUWNtOXdLVHRjYmx4dUlDQWdJQ0FnYVdZZ0tIUjVjR1Z2WmlCMllXeDFaU0E5UFQwZ0ozVnVaR1ZtYVc1bFpDY3BJSHRjYmlBZ0lDQWdJQ0FnWld4bGJXVnVkQzV6ZEhsc1pTNXlaVzF2ZG1WUWNtOXdaWEowZVNoemRIbHNaVkJ5YjNBcE8xeHVJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUNBZ1RXRnVhWEIxYkdGMGIzSXVjbVZ0YjNabFJHRjBZVUYwZEhKcFluVjBaU2hsYkdWdFpXNTBMQ0J6ZEhsc1pWQnliM0FwTzF4dUlDQWdJQ0FnSUNCbGJHVnRaVzUwTG5OMGVXeGxXM04wZVd4bFVISnZjRjBnUFNCMllXeDFaVHRjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlPMXh1WEc0Z0lDQWdkR2hwY3k1ZllYQndiSGxOWVc1cGNIVnNZWFJwYjI1RFlXeHNZbUZqYXloelpXeGxZM1J2Y2l3Z2JXRnVhWEIxYkdGMGFXOXVRMkZzYkVKaFkyc3BPMXh1SUNCOVhHNWNiaUFnWDJGd2NHeDVUV0Z1YVhCMWJHRjBhVzl1UTJGc2JHSmhZMnNvYzJWc1pXTjBiM0lzSUdOaGJHeENZV05yS1NCN1hHNGdJQ0FnYVdZZ0tHbHpSV3hsYldWdWRDaHpaV3hsWTNSdmNpa3BJSHRjYmlBZ0lDQWdJR05oYkd4Q1lXTnJLSE5sYkdWamRHOXlLVHRjYmlBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ1UyVnNaV04wYjNKRmJtZHBibVV1Wm1sdVpDaHpaV3hsWTNSdmNpd2dkR2hwY3k1ZlpXeGxiV1Z1ZENrdVptOXlSV0ZqYUNoallXeHNRbUZqYXlrN1hHNGdJQ0FnZlZ4dUlDQjlYRzVjYmlBZ2FYTlBkbVZ5Wm14dmQybHVaeWdwSUh0Y2JpQWdJQ0J5WlhSMWNtNGdkR2hwY3k1blpYUlhhV1IwYUNncElENGdNRHRjYmlBZ2ZWeHVYRzU5WEc1Y2JpOHFLbHh1SUNvZ0xTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMWNiaUFxSUVKdmIzUnpkSEpoY0NBb2RqVXVNUzR6S1RvZ2RYUnBiQzlpWVdOclpISnZjQzVxYzF4dUlDb2dUR2xqWlc1elpXUWdkVzVrWlhJZ1RVbFVJQ2hvZEhSd2N6b3ZMMmRwZEdoMVlpNWpiMjB2ZEhkaWN5OWliMjkwYzNSeVlYQXZZbXh2WWk5dFlXbHVMMHhKUTBWT1UwVXBYRzRnS2lBdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExWeHVJQ292WEc1amIyNXpkQ0JFWldaaGRXeDBKRGNnUFNCN1hHNGdJR05zWVhOelRtRnRaVG9nSjIxdlpHRnNMV0poWTJ0a2NtOXdKeXhjYmlBZ2FYTldhWE5wWW14bE9pQjBjblZsTEZ4dUlDQXZMeUJwWmlCbVlXeHpaU3dnZDJVZ2RYTmxJSFJvWlNCaVlXTnJaSEp2Y0NCb1pXeHdaWElnZDJsMGFHOTFkQ0JoWkdScGJtY2dZVzU1SUdWc1pXMWxiblFnZEc4Z2RHaGxJR1J2YlZ4dUlDQnBjMEZ1YVcxaGRHVmtPaUJtWVd4elpTeGNiaUFnY205dmRFVnNaVzFsYm5RNklDZGliMlI1Snl4Y2JpQWdMeThnWjJsMlpTQjBhR1VnWTJodmFXTmxJSFJ2SUhCc1lXTmxJR0poWTJ0a2NtOXdJSFZ1WkdWeUlHUnBabVpsY21WdWRDQmxiR1Z0Wlc1MGMxeHVJQ0JqYkdsamEwTmhiR3hpWVdOck9pQnVkV3hzWEc1OU8xeHVZMjl1YzNRZ1JHVm1ZWFZzZEZSNWNHVWtOeUE5SUh0Y2JpQWdZMnhoYzNOT1lXMWxPaUFuYzNSeWFXNW5KeXhjYmlBZ2FYTldhWE5wWW14bE9pQW5ZbTl2YkdWaGJpY3NYRzRnSUdselFXNXBiV0YwWldRNklDZGliMjlzWldGdUp5eGNiaUFnY205dmRFVnNaVzFsYm5RNklDY29aV3hsYldWdWRIeHpkSEpwYm1jcEp5eGNiaUFnWTJ4cFkydERZV3hzWW1GamF6b2dKeWhtZFc1amRHbHZibnh1ZFd4c0tTZGNibjA3WEc1amIyNXpkQ0JPUVUxRkpEZ2dQU0FuWW1GamEyUnliM0FuTzF4dVkyOXVjM1FnUTB4QlUxTmZUa0ZOUlY5R1FVUkZKRFFnUFNBblptRmtaU2M3WEc1amIyNXpkQ0JEVEVGVFUxOU9RVTFGWDFOSVQxY2tOU0E5SUNkemFHOTNKenRjYm1OdmJuTjBJRVZXUlU1VVgwMVBWVk5GUkU5WFRpQTlJR0J0YjNWelpXUnZkMjR1WW5NdUpIdE9RVTFGSkRoOVlEdGNibHh1WTJ4aGMzTWdRbUZqYTJSeWIzQWdlMXh1SUNCamIyNXpkSEoxWTNSdmNpaGpiMjVtYVdjcElIdGNiaUFnSUNCMGFHbHpMbDlqYjI1bWFXY2dQU0IwYUdsekxsOW5aWFJEYjI1bWFXY29ZMjl1Wm1sbktUdGNiaUFnSUNCMGFHbHpMbDlwYzBGd2NHVnVaR1ZrSUQwZ1ptRnNjMlU3WEc0Z0lDQWdkR2hwY3k1ZlpXeGxiV1Z1ZENBOUlHNTFiR3c3WEc0Z0lIMWNibHh1SUNCemFHOTNLR05oYkd4aVlXTnJLU0I3WEc0Z0lDQWdhV1lnS0NGMGFHbHpMbDlqYjI1bWFXY3VhWE5XYVhOcFlteGxLU0I3WEc0Z0lDQWdJQ0JsZUdWamRYUmxLR05oYkd4aVlXTnJLVHRjYmlBZ0lDQWdJSEpsZEhWeWJqdGNiaUFnSUNCOVhHNWNiaUFnSUNCMGFHbHpMbDloY0hCbGJtUW9LVHRjYmx4dUlDQWdJR2xtSUNoMGFHbHpMbDlqYjI1bWFXY3VhWE5CYm1sdFlYUmxaQ2tnZTF4dUlDQWdJQ0FnY21WbWJHOTNLSFJvYVhNdVgyZGxkRVZzWlcxbGJuUW9LU2s3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdkR2hwY3k1ZloyVjBSV3hsYldWdWRDZ3BMbU5zWVhOelRHbHpkQzVoWkdRb1EweEJVMU5mVGtGTlJWOVRTRTlYSkRVcE8xeHVYRzRnSUNBZ2RHaHBjeTVmWlcxMWJHRjBaVUZ1YVcxaGRHbHZiaWdvS1NBOVBpQjdYRzRnSUNBZ0lDQmxlR1ZqZFhSbEtHTmhiR3hpWVdOcktUdGNiaUFnSUNCOUtUdGNiaUFnZlZ4dVhHNGdJR2hwWkdVb1kyRnNiR0poWTJzcElIdGNiaUFnSUNCcFppQW9JWFJvYVhNdVgyTnZibVpwWnk1cGMxWnBjMmxpYkdVcElIdGNiaUFnSUNBZ0lHVjRaV04xZEdVb1kyRnNiR0poWTJzcE8xeHVJQ0FnSUNBZ2NtVjBkWEp1TzF4dUlDQWdJSDFjYmx4dUlDQWdJSFJvYVhNdVgyZGxkRVZzWlcxbGJuUW9LUzVqYkdGemMweHBjM1F1Y21WdGIzWmxLRU5NUVZOVFgwNUJUVVZmVTBoUFZ5UTFLVHRjYmx4dUlDQWdJSFJvYVhNdVgyVnRkV3hoZEdWQmJtbHRZWFJwYjI0b0tDa2dQVDRnZTF4dUlDQWdJQ0FnZEdocGN5NWthWE53YjNObEtDazdYRzRnSUNBZ0lDQmxlR1ZqZFhSbEtHTmhiR3hpWVdOcktUdGNiaUFnSUNCOUtUdGNiaUFnZlNBdkx5QlFjbWwyWVhSbFhHNWNibHh1SUNCZloyVjBSV3hsYldWdWRDZ3BJSHRjYmlBZ0lDQnBaaUFvSVhSb2FYTXVYMlZzWlcxbGJuUXBJSHRjYmlBZ0lDQWdJR052Ym5OMElHSmhZMnRrY205d0lEMGdaRzlqZFcxbGJuUXVZM0psWVhSbFJXeGxiV1Z1ZENnblpHbDJKeWs3WEc0Z0lDQWdJQ0JpWVdOclpISnZjQzVqYkdGemMwNWhiV1VnUFNCMGFHbHpMbDlqYjI1bWFXY3VZMnhoYzNOT1lXMWxPMXh1WEc0Z0lDQWdJQ0JwWmlBb2RHaHBjeTVmWTI5dVptbG5MbWx6UVc1cGJXRjBaV1FwSUh0Y2JpQWdJQ0FnSUNBZ1ltRmphMlJ5YjNBdVkyeGhjM05NYVhOMExtRmtaQ2hEVEVGVFUxOU9RVTFGWDBaQlJFVWtOQ2s3WEc0Z0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUhSb2FYTXVYMlZzWlcxbGJuUWdQU0JpWVdOclpISnZjRHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQnlaWFIxY200Z2RHaHBjeTVmWld4bGJXVnVkRHRjYmlBZ2ZWeHVYRzRnSUY5blpYUkRiMjVtYVdjb1kyOXVabWxuS1NCN1hHNGdJQ0FnWTI5dVptbG5JRDBnZXlBdUxpNUVaV1poZFd4MEpEY3NYRzRnSUNBZ0lDQXVMaTRvZEhsd1pXOW1JR052Ym1acFp5QTlQVDBnSjI5aWFtVmpkQ2NnUHlCamIyNW1hV2NnT2lCN2ZTbGNiaUFnSUNCOU95QXZMeUIxYzJVZ1oyVjBSV3hsYldWdWRDZ3BJSGRwZEdnZ2RHaGxJR1JsWm1GMWJIUWdYQ0ppYjJSNVhDSWdkRzhnWjJWMElHRWdabkpsYzJnZ1JXeGxiV1Z1ZENCdmJpQmxZV05vSUdsdWMzUmhiblJwWVhScGIyNWNibHh1SUNBZ0lHTnZibVpwWnk1eWIyOTBSV3hsYldWdWRDQTlJR2RsZEVWc1pXMWxiblFvWTI5dVptbG5Mbkp2YjNSRmJHVnRaVzUwS1R0Y2JpQWdJQ0IwZVhCbFEyaGxZMnREYjI1bWFXY29Ua0ZOUlNRNExDQmpiMjVtYVdjc0lFUmxabUYxYkhSVWVYQmxKRGNwTzF4dUlDQWdJSEpsZEhWeWJpQmpiMjVtYVdjN1hHNGdJSDFjYmx4dUlDQmZZWEJ3Wlc1a0tDa2dlMXh1SUNBZ0lHbG1JQ2gwYUdsekxsOXBjMEZ3Y0dWdVpHVmtLU0I3WEc0Z0lDQWdJQ0J5WlhSMWNtNDdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2RHaHBjeTVmWTI5dVptbG5Mbkp2YjNSRmJHVnRaVzUwTG1Gd2NHVnVaQ2gwYUdsekxsOW5aWFJGYkdWdFpXNTBLQ2twTzF4dVhHNGdJQ0FnUlhabGJuUklZVzVrYkdWeUxtOXVLSFJvYVhNdVgyZGxkRVZzWlcxbGJuUW9LU3dnUlZaRlRsUmZUVTlWVTBWRVQxZE9MQ0FvS1NBOVBpQjdYRzRnSUNBZ0lDQmxlR1ZqZFhSbEtIUm9hWE11WDJOdmJtWnBaeTVqYkdsamEwTmhiR3hpWVdOcktUdGNiaUFnSUNCOUtUdGNiaUFnSUNCMGFHbHpMbDlwYzBGd2NHVnVaR1ZrSUQwZ2RISjFaVHRjYmlBZ2ZWeHVYRzRnSUdScGMzQnZjMlVvS1NCN1hHNGdJQ0FnYVdZZ0tDRjBhR2x6TGw5cGMwRndjR1Z1WkdWa0tTQjdYRzRnSUNBZ0lDQnlaWFIxY200N1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnUlhabGJuUklZVzVrYkdWeUxtOW1aaWgwYUdsekxsOWxiR1Z0Wlc1MExDQkZWa1ZPVkY5TlQxVlRSVVJQVjA0cE8xeHVYRzRnSUNBZ2RHaHBjeTVmWld4bGJXVnVkQzV5WlcxdmRtVW9LVHRjYmx4dUlDQWdJSFJvYVhNdVgybHpRWEJ3Wlc1a1pXUWdQU0JtWVd4elpUdGNiaUFnZlZ4dVhHNGdJRjlsYlhWc1lYUmxRVzVwYldGMGFXOXVLR05oYkd4aVlXTnJLU0I3WEc0Z0lDQWdaWGhsWTNWMFpVRm1kR1Z5VkhKaGJuTnBkR2x2YmloallXeHNZbUZqYXl3Z2RHaHBjeTVmWjJWMFJXeGxiV1Z1ZENncExDQjBhR2x6TGw5amIyNW1hV2N1YVhOQmJtbHRZWFJsWkNrN1hHNGdJSDFjYmx4dWZWeHVYRzR2S2lwY2JpQXFJQzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0WEc0Z0tpQkNiMjkwYzNSeVlYQWdLSFkxTGpFdU15azZJSFYwYVd3dlptOWpkWE4wY21Gd0xtcHpYRzRnS2lCTWFXTmxibk5sWkNCMWJtUmxjaUJOU1ZRZ0tHaDBkSEJ6T2k4dloybDBhSFZpTG1OdmJTOTBkMkp6TDJKdmIzUnpkSEpoY0M5aWJHOWlMMjFoYVc0dlRFbERSVTVUUlNsY2JpQXFJQzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0WEc0Z0tpOWNibU52Ym5OMElFUmxabUYxYkhRa05pQTlJSHRjYmlBZ2RISmhjRVZzWlcxbGJuUTZJRzUxYkd3c1hHNGdJQzh2SUZSb1pTQmxiR1Z0Wlc1MElIUnZJSFJ5WVhBZ1ptOWpkWE1nYVc1emFXUmxJRzltWEc0Z0lHRjFkRzltYjJOMWN6b2dkSEoxWlZ4dWZUdGNibU52Ym5OMElFUmxabUYxYkhSVWVYQmxKRFlnUFNCN1hHNGdJSFJ5WVhCRmJHVnRaVzUwT2lBblpXeGxiV1Z1ZENjc1hHNGdJR0YxZEc5bWIyTjFjem9nSjJKdmIyeGxZVzRuWEc1OU8xeHVZMjl1YzNRZ1RrRk5SU1EzSUQwZ0oyWnZZM1Z6ZEhKaGNDYzdYRzVqYjI1emRDQkVRVlJCWDB0RldTUTNJRDBnSjJKekxtWnZZM1Z6ZEhKaGNDYzdYRzVqYjI1emRDQkZWa1ZPVkY5TFJWa2tOeUE5SUdBdUpIdEVRVlJCWDB0RldTUTNmV0E3WEc1amIyNXpkQ0JGVmtWT1ZGOUdUME5WVTBsT0pERWdQU0JnWm05amRYTnBiaVI3UlZaRlRsUmZTMFZaSkRkOVlEdGNibU52Ym5OMElFVldSVTVVWDB0RldVUlBWMDVmVkVGQ0lEMGdZR3RsZVdSdmQyNHVkR0ZpSkh0RlZrVk9WRjlMUlZra04zMWdPMXh1WTI5dWMzUWdWRUZDWDB0RldTQTlJQ2RVWVdJbk8xeHVZMjl1YzNRZ1ZFRkNYMDVCVmw5R1QxSlhRVkpFSUQwZ0oyWnZjbmRoY21Rbk8xeHVZMjl1YzNRZ1ZFRkNYMDVCVmw5Q1FVTkxWMEZTUkNBOUlDZGlZV05yZDJGeVpDYzdYRzVjYm1Oc1lYTnpJRVp2WTNWelZISmhjQ0I3WEc0Z0lHTnZibk4wY25WamRHOXlLR052Ym1acFp5a2dlMXh1SUNBZ0lIUm9hWE11WDJOdmJtWnBaeUE5SUhSb2FYTXVYMmRsZEVOdmJtWnBaeWhqYjI1bWFXY3BPMXh1SUNBZ0lIUm9hWE11WDJselFXTjBhWFpsSUQwZ1ptRnNjMlU3WEc0Z0lDQWdkR2hwY3k1ZmJHRnpkRlJoWWs1aGRrUnBjbVZqZEdsdmJpQTlJRzUxYkd3N1hHNGdJSDFjYmx4dUlDQmhZM1JwZG1GMFpTZ3BJSHRjYmlBZ0lDQmpiMjV6ZENCN1hHNGdJQ0FnSUNCMGNtRndSV3hsYldWdWRDeGNiaUFnSUNBZ0lHRjFkRzltYjJOMWMxeHVJQ0FnSUgwZ1BTQjBhR2x6TGw5amIyNW1hV2M3WEc1Y2JpQWdJQ0JwWmlBb2RHaHBjeTVmYVhOQlkzUnBkbVVwSUh0Y2JpQWdJQ0FnSUhKbGRIVnlianRjYmlBZ0lDQjlYRzVjYmlBZ0lDQnBaaUFvWVhWMGIyWnZZM1Z6S1NCN1hHNGdJQ0FnSUNCMGNtRndSV3hsYldWdWRDNW1iMk4xY3lncE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUVWMlpXNTBTR0Z1Wkd4bGNpNXZabVlvWkc5amRXMWxiblFzSUVWV1JVNVVYMHRGV1NRM0tUc2dMeThnWjNWaGNtUWdZV2RoYVc1emRDQnBibVpwYm1sMFpTQm1iMk4xY3lCc2IyOXdYRzVjYmlBZ0lDQkZkbVZ1ZEVoaGJtUnNaWEl1YjI0b1pHOWpkVzFsYm5Rc0lFVldSVTVVWDBaUFExVlRTVTRrTVN3Z1pYWmxiblFnUFQ0Z2RHaHBjeTVmYUdGdVpHeGxSbTlqZFhOcGJpaGxkbVZ1ZENrcE8xeHVJQ0FnSUVWMlpXNTBTR0Z1Wkd4bGNpNXZiaWhrYjJOMWJXVnVkQ3dnUlZaRlRsUmZTMFZaUkU5WFRsOVVRVUlzSUdWMlpXNTBJRDArSUhSb2FYTXVYMmhoYm1Sc1pVdGxlV1J2ZDI0b1pYWmxiblFwS1R0Y2JpQWdJQ0IwYUdsekxsOXBjMEZqZEdsMlpTQTlJSFJ5ZFdVN1hHNGdJSDFjYmx4dUlDQmtaV0ZqZEdsMllYUmxLQ2tnZTF4dUlDQWdJR2xtSUNnaGRHaHBjeTVmYVhOQlkzUnBkbVVwSUh0Y2JpQWdJQ0FnSUhKbGRIVnlianRjYmlBZ0lDQjlYRzVjYmlBZ0lDQjBhR2x6TGw5cGMwRmpkR2wyWlNBOUlHWmhiSE5sTzF4dUlDQWdJRVYyWlc1MFNHRnVaR3hsY2k1dlptWW9aRzlqZFcxbGJuUXNJRVZXUlU1VVgwdEZXU1EzS1R0Y2JpQWdmU0F2THlCUWNtbDJZWFJsWEc1Y2JseHVJQ0JmYUdGdVpHeGxSbTlqZFhOcGJpaGxkbVZ1ZENrZ2UxeHVJQ0FnSUdOdmJuTjBJSHRjYmlBZ0lDQWdJSFJoY21kbGRGeHVJQ0FnSUgwZ1BTQmxkbVZ1ZER0Y2JpQWdJQ0JqYjI1emRDQjdYRzRnSUNBZ0lDQjBjbUZ3Uld4bGJXVnVkRnh1SUNBZ0lIMGdQU0IwYUdsekxsOWpiMjVtYVdjN1hHNWNiaUFnSUNCcFppQW9kR0Z5WjJWMElEMDlQU0JrYjJOMWJXVnVkQ0I4ZkNCMFlYSm5aWFFnUFQwOUlIUnlZWEJGYkdWdFpXNTBJSHg4SUhSeVlYQkZiR1Z0Wlc1MExtTnZiblJoYVc1ektIUmhjbWRsZENrcElIdGNiaUFnSUNBZ0lISmxkSFZ5Ymp0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JqYjI1emRDQmxiR1Z0Wlc1MGN5QTlJRk5sYkdWamRHOXlSVzVuYVc1bExtWnZZM1Z6WVdKc1pVTm9hV3hrY21WdUtIUnlZWEJGYkdWdFpXNTBLVHRjYmx4dUlDQWdJR2xtSUNobGJHVnRaVzUwY3k1c1pXNW5kR2dnUFQwOUlEQXBJSHRjYmlBZ0lDQWdJSFJ5WVhCRmJHVnRaVzUwTG1adlkzVnpLQ2s3WEc0Z0lDQWdmU0JsYkhObElHbG1JQ2gwYUdsekxsOXNZWE4wVkdGaVRtRjJSR2x5WldOMGFXOXVJRDA5UFNCVVFVSmZUa0ZXWDBKQlEwdFhRVkpFS1NCN1hHNGdJQ0FnSUNCbGJHVnRaVzUwYzF0bGJHVnRaVzUwY3k1c1pXNW5kR2dnTFNBeFhTNW1iMk4xY3lncE8xeHVJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0JsYkdWdFpXNTBjMXN3WFM1bWIyTjFjeWdwTzF4dUlDQWdJSDFjYmlBZ2ZWeHVYRzRnSUY5b1lXNWtiR1ZMWlhsa2IzZHVLR1YyWlc1MEtTQjdYRzRnSUNBZ2FXWWdLR1YyWlc1MExtdGxlU0FoUFQwZ1ZFRkNYMHRGV1NrZ2UxeHVJQ0FnSUNBZ2NtVjBkWEp1TzF4dUlDQWdJSDFjYmx4dUlDQWdJSFJvYVhNdVgyeGhjM1JVWVdKT1lYWkVhWEpsWTNScGIyNGdQU0JsZG1WdWRDNXphR2xtZEV0bGVTQS9JRlJCUWw5T1FWWmZRa0ZEUzFkQlVrUWdPaUJVUVVKZlRrRldYMFpQVWxkQlVrUTdYRzRnSUgxY2JseHVJQ0JmWjJWMFEyOXVabWxuS0dOdmJtWnBaeWtnZTF4dUlDQWdJR052Ym1acFp5QTlJSHNnTGk0dVJHVm1ZWFZzZENRMkxGeHVJQ0FnSUNBZ0xpNHVLSFI1Y0dWdlppQmpiMjVtYVdjZ1BUMDlJQ2R2WW1wbFkzUW5JRDhnWTI5dVptbG5JRG9nZTMwcFhHNGdJQ0FnZlR0Y2JpQWdJQ0IwZVhCbFEyaGxZMnREYjI1bWFXY29Ua0ZOUlNRM0xDQmpiMjVtYVdjc0lFUmxabUYxYkhSVWVYQmxKRFlwTzF4dUlDQWdJSEpsZEhWeWJpQmpiMjVtYVdjN1hHNGdJSDFjYmx4dWZWeHVYRzR2S2lwY2JpQXFJQzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0WEc0Z0tpQkNiMjkwYzNSeVlYQWdLSFkxTGpFdU15azZJRzF2WkdGc0xtcHpYRzRnS2lCTWFXTmxibk5sWkNCMWJtUmxjaUJOU1ZRZ0tHaDBkSEJ6T2k4dloybDBhSFZpTG1OdmJTOTBkMkp6TDJKdmIzUnpkSEpoY0M5aWJHOWlMMjFoYVc0dlRFbERSVTVUUlNsY2JpQXFJQzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0WEc0Z0tpOWNiaThxS2x4dUlDb2dMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRYRzRnS2lCRGIyNXpkR0Z1ZEhOY2JpQXFJQzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMVnh1SUNvdlhHNWNibU52Ym5OMElFNUJUVVVrTmlBOUlDZHRiMlJoYkNjN1hHNWpiMjV6ZENCRVFWUkJYMHRGV1NRMklEMGdKMkp6TG0xdlpHRnNKenRjYm1OdmJuTjBJRVZXUlU1VVgwdEZXU1EySUQwZ1lDNGtlMFJCVkVGZlMwVlpKRFo5WUR0Y2JtTnZibk4wSUVSQlZFRmZRVkJKWDB0RldTUXpJRDBnSnk1a1lYUmhMV0Z3YVNjN1hHNWpiMjV6ZENCRlUwTkJVRVZmUzBWWkpERWdQU0FuUlhOallYQmxKenRjYm1OdmJuTjBJRVJsWm1GMWJIUWtOU0E5SUh0Y2JpQWdZbUZqYTJSeWIzQTZJSFJ5ZFdVc1hHNGdJR3RsZVdKdllYSmtPaUIwY25WbExGeHVJQ0JtYjJOMWN6b2dkSEoxWlZ4dWZUdGNibU52Ym5OMElFUmxabUYxYkhSVWVYQmxKRFVnUFNCN1hHNGdJR0poWTJ0a2NtOXdPaUFuS0dKdmIyeGxZVzU4YzNSeWFXNW5LU2NzWEc0Z0lHdGxlV0p2WVhKa09pQW5ZbTl2YkdWaGJpY3NYRzRnSUdadlkzVnpPaUFuWW05dmJHVmhiaWRjYm4wN1hHNWpiMjV6ZENCRlZrVk9WRjlJU1VSRkpETWdQU0JnYUdsa1pTUjdSVlpGVGxSZlMwVlpKRFo5WUR0Y2JtTnZibk4wSUVWV1JVNVVYMGhKUkVWZlVGSkZWa1ZPVkVWRUlEMGdZR2hwWkdWUWNtVjJaVzUwWldRa2UwVldSVTVVWDB0RldTUTJmV0E3WEc1amIyNXpkQ0JGVmtWT1ZGOUlTVVJFUlU0a015QTlJR0JvYVdSa1pXNGtlMFZXUlU1VVgwdEZXU1EyZldBN1hHNWpiMjV6ZENCRlZrVk9WRjlUU0U5WEpETWdQU0JnYzJodmR5UjdSVlpGVGxSZlMwVlpKRFo5WUR0Y2JtTnZibk4wSUVWV1JVNVVYMU5JVDFkT0pETWdQU0JnYzJodmQyNGtlMFZXUlU1VVgwdEZXU1EyZldBN1hHNWpiMjV6ZENCRlZrVk9WRjlTUlZOSldrVWdQU0JnY21WemFYcGxKSHRGVmtWT1ZGOUxSVmtrTm4xZ08xeHVZMjl1YzNRZ1JWWkZUbFJmUTB4SlEwdGZSRWxUVFVsVFV5QTlJR0JqYkdsamF5NWthWE50YVhOekpIdEZWa1ZPVkY5TFJWa2tObjFnTzF4dVkyOXVjM1FnUlZaRlRsUmZTMFZaUkU5WFRsOUVTVk5OU1ZOVEpERWdQU0JnYTJWNVpHOTNiaTVrYVhOdGFYTnpKSHRGVmtWT1ZGOUxSVmtrTm4xZ08xeHVZMjl1YzNRZ1JWWkZUbFJmVFU5VlUwVlZVRjlFU1ZOTlNWTlRJRDBnWUcxdmRYTmxkWEF1WkdsemJXbHpjeVI3UlZaRlRsUmZTMFZaSkRaOVlEdGNibU52Ym5OMElFVldSVTVVWDAxUFZWTkZSRTlYVGw5RVNWTk5TVk5USUQwZ1lHMXZkWE5sWkc5M2JpNWthWE50YVhOekpIdEZWa1ZPVkY5TFJWa2tObjFnTzF4dVkyOXVjM1FnUlZaRlRsUmZRMHhKUTB0ZlJFRlVRVjlCVUVra01pQTlJR0JqYkdsamF5UjdSVlpGVGxSZlMwVlpKRFo5Skh0RVFWUkJYMEZRU1Y5TFJWa2tNMzFnTzF4dVkyOXVjM1FnUTB4QlUxTmZUa0ZOUlY5UFVFVk9JRDBnSjIxdlpHRnNMVzl3Wlc0bk8xeHVZMjl1YzNRZ1EweEJVMU5mVGtGTlJWOUdRVVJGSkRNZ1BTQW5abUZrWlNjN1hHNWpiMjV6ZENCRFRFRlRVMTlPUVUxRlgxTklUMWNrTkNBOUlDZHphRzkzSnp0Y2JtTnZibk4wSUVOTVFWTlRYMDVCVFVWZlUxUkJWRWxESUQwZ0oyMXZaR0ZzTFhOMFlYUnBZeWM3WEc1amIyNXpkQ0JQVUVWT1gxTkZURVZEVkU5U0pERWdQU0FuTG0xdlpHRnNMbk5vYjNjbk8xeHVZMjl1YzNRZ1UwVk1SVU5VVDFKZlJFbEJURTlISUQwZ0p5NXRiMlJoYkMxa2FXRnNiMmNuTzF4dVkyOXVjM1FnVTBWTVJVTlVUMUpmVFU5RVFVeGZRazlFV1NBOUlDY3ViVzlrWVd3dFltOWtlU2M3WEc1amIyNXpkQ0JUUlV4RlExUlBVbDlFUVZSQlgxUlBSMGRNUlNReUlEMGdKMXRrWVhSaExXSnpMWFJ2WjJkc1pUMWNJbTF2WkdGc1hDSmRKenRjYmk4cUtseHVJQ29nTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0WEc0Z0tpQkRiR0Z6Y3lCRVpXWnBibWwwYVc5dVhHNGdLaUF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzFjYmlBcUwxeHVYRzVqYkdGemN5Qk5iMlJoYkNCbGVIUmxibVJ6SUVKaGMyVkRiMjF3YjI1bGJuUWdlMXh1SUNCamIyNXpkSEoxWTNSdmNpaGxiR1Z0Wlc1MExDQmpiMjVtYVdjcElIdGNiaUFnSUNCemRYQmxjaWhsYkdWdFpXNTBLVHRjYmlBZ0lDQjBhR2x6TGw5amIyNW1hV2NnUFNCMGFHbHpMbDluWlhSRGIyNW1hV2NvWTI5dVptbG5LVHRjYmlBZ0lDQjBhR2x6TGw5a2FXRnNiMmNnUFNCVFpXeGxZM1J2Y2tWdVoybHVaUzVtYVc1a1QyNWxLRk5GVEVWRFZFOVNYMFJKUVV4UFJ5d2dkR2hwY3k1ZlpXeGxiV1Z1ZENrN1hHNGdJQ0FnZEdocGN5NWZZbUZqYTJSeWIzQWdQU0IwYUdsekxsOXBibWwwYVdGc2FYcGxRbUZqYTBSeWIzQW9LVHRjYmlBZ0lDQjBhR2x6TGw5bWIyTjFjM1J5WVhBZ1BTQjBhR2x6TGw5cGJtbDBhV0ZzYVhwbFJtOWpkWE5VY21Gd0tDazdYRzRnSUNBZ2RHaHBjeTVmYVhOVGFHOTNiaUE5SUdaaGJITmxPMXh1SUNBZ0lIUm9hWE11WDJsbmJtOXlaVUpoWTJ0a2NtOXdRMnhwWTJzZ1BTQm1ZV3h6WlR0Y2JpQWdJQ0IwYUdsekxsOXBjMVJ5WVc1emFYUnBiMjVwYm1jZ1BTQm1ZV3h6WlR0Y2JpQWdJQ0IwYUdsekxsOXpZM0p2Ykd4Q1lYSWdQU0J1WlhjZ1UyTnliMnhzUW1GeVNHVnNjR1Z5S0NrN1hHNGdJSDBnTHk4Z1IyVjBkR1Z5YzF4dVhHNWNiaUFnYzNSaGRHbGpJR2RsZENCRVpXWmhkV3gwS0NrZ2UxeHVJQ0FnSUhKbGRIVnliaUJFWldaaGRXeDBKRFU3WEc0Z0lIMWNibHh1SUNCemRHRjBhV01nWjJWMElFNUJUVVVvS1NCN1hHNGdJQ0FnY21WMGRYSnVJRTVCVFVVa05qdGNiaUFnZlNBdkx5QlFkV0pzYVdOY2JseHVYRzRnSUhSdloyZHNaU2h5Wld4aGRHVmtWR0Z5WjJWMEtTQjdYRzRnSUNBZ2NtVjBkWEp1SUhSb2FYTXVYMmx6VTJodmQyNGdQeUIwYUdsekxtaHBaR1VvS1NBNklIUm9hWE11YzJodmR5aHlaV3hoZEdWa1ZHRnlaMlYwS1R0Y2JpQWdmVnh1WEc0Z0lITm9iM2NvY21Wc1lYUmxaRlJoY21kbGRDa2dlMXh1SUNBZ0lHbG1JQ2gwYUdsekxsOXBjMU5vYjNkdUlIeDhJSFJvYVhNdVgybHpWSEpoYm5OcGRHbHZibWx1WnlrZ2UxeHVJQ0FnSUNBZ2NtVjBkWEp1TzF4dUlDQWdJSDFjYmx4dUlDQWdJR052Ym5OMElITm9iM2RGZG1WdWRDQTlJRVYyWlc1MFNHRnVaR3hsY2k1MGNtbG5aMlZ5S0hSb2FYTXVYMlZzWlcxbGJuUXNJRVZXUlU1VVgxTklUMWNrTXl3Z2UxeHVJQ0FnSUNBZ2NtVnNZWFJsWkZSaGNtZGxkRnh1SUNBZ0lIMHBPMXh1WEc0Z0lDQWdhV1lnS0hOb2IzZEZkbVZ1ZEM1a1pXWmhkV3gwVUhKbGRtVnVkR1ZrS1NCN1hHNGdJQ0FnSUNCeVpYUjFjbTQ3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdkR2hwY3k1ZmFYTlRhRzkzYmlBOUlIUnlkV1U3WEc1Y2JpQWdJQ0JwWmlBb2RHaHBjeTVmYVhOQmJtbHRZWFJsWkNncEtTQjdYRzRnSUNBZ0lDQjBhR2x6TGw5cGMxUnlZVzV6YVhScGIyNXBibWNnUFNCMGNuVmxPMXh1SUNBZ0lIMWNibHh1SUNBZ0lIUm9hWE11WDNOamNtOXNiRUpoY2k1b2FXUmxLQ2s3WEc1Y2JpQWdJQ0JrYjJOMWJXVnVkQzVpYjJSNUxtTnNZWE56VEdsemRDNWhaR1FvUTB4QlUxTmZUa0ZOUlY5UFVFVk9LVHRjYmx4dUlDQWdJSFJvYVhNdVgyRmthblZ6ZEVScFlXeHZaeWdwTzF4dVhHNGdJQ0FnZEdocGN5NWZjMlYwUlhOallYQmxSWFpsYm5Rb0tUdGNibHh1SUNBZ0lIUm9hWE11WDNObGRGSmxjMmw2WlVWMlpXNTBLQ2s3WEc1Y2JpQWdJQ0JGZG1WdWRFaGhibVJzWlhJdWIyNG9kR2hwY3k1ZlpHbGhiRzluTENCRlZrVk9WRjlOVDFWVFJVUlBWMDVmUkVsVFRVbFRVeXdnS0NrZ1BUNGdlMXh1SUNBZ0lDQWdSWFpsYm5SSVlXNWtiR1Z5TG05dVpTaDBhR2x6TGw5bGJHVnRaVzUwTENCRlZrVk9WRjlOVDFWVFJWVlFYMFJKVTAxSlUxTXNJR1YyWlc1MElEMCtJSHRjYmlBZ0lDQWdJQ0FnYVdZZ0tHVjJaVzUwTG5SaGNtZGxkQ0E5UFQwZ2RHaHBjeTVmWld4bGJXVnVkQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lIUm9hWE11WDJsbmJtOXlaVUpoWTJ0a2NtOXdRMnhwWTJzZ1BTQjBjblZsTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNCOUtUdGNiaUFnSUNCOUtUdGNibHh1SUNBZ0lIUm9hWE11WDNOb2IzZENZV05yWkhKdmNDZ29LU0E5UGlCMGFHbHpMbDl6YUc5M1JXeGxiV1Z1ZENoeVpXeGhkR1ZrVkdGeVoyVjBLU2s3WEc0Z0lIMWNibHh1SUNCb2FXUmxLQ2tnZTF4dUlDQWdJR2xtSUNnaGRHaHBjeTVmYVhOVGFHOTNiaUI4ZkNCMGFHbHpMbDlwYzFSeVlXNXphWFJwYjI1cGJtY3BJSHRjYmlBZ0lDQWdJSEpsZEhWeWJqdGNiaUFnSUNCOVhHNWNiaUFnSUNCamIyNXpkQ0JvYVdSbFJYWmxiblFnUFNCRmRtVnVkRWhoYm1Sc1pYSXVkSEpwWjJkbGNpaDBhR2x6TGw5bGJHVnRaVzUwTENCRlZrVk9WRjlJU1VSRkpETXBPMXh1WEc0Z0lDQWdhV1lnS0docFpHVkZkbVZ1ZEM1a1pXWmhkV3gwVUhKbGRtVnVkR1ZrS1NCN1hHNGdJQ0FnSUNCeVpYUjFjbTQ3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdkR2hwY3k1ZmFYTlRhRzkzYmlBOUlHWmhiSE5sTzF4dVhHNGdJQ0FnWTI5dWMzUWdhWE5CYm1sdFlYUmxaQ0E5SUhSb2FYTXVYMmx6UVc1cGJXRjBaV1FvS1R0Y2JseHVJQ0FnSUdsbUlDaHBjMEZ1YVcxaGRHVmtLU0I3WEc0Z0lDQWdJQ0IwYUdsekxsOXBjMVJ5WVc1emFYUnBiMjVwYm1jZ1BTQjBjblZsTzF4dUlDQWdJSDFjYmx4dUlDQWdJSFJvYVhNdVgzTmxkRVZ6WTJGd1pVVjJaVzUwS0NrN1hHNWNiaUFnSUNCMGFHbHpMbDl6WlhSU1pYTnBlbVZGZG1WdWRDZ3BPMXh1WEc0Z0lDQWdkR2hwY3k1ZlptOWpkWE4wY21Gd0xtUmxZV04wYVhaaGRHVW9LVHRjYmx4dUlDQWdJSFJvYVhNdVgyVnNaVzFsYm5RdVkyeGhjM05NYVhOMExuSmxiVzkyWlNoRFRFRlRVMTlPUVUxRlgxTklUMWNrTkNrN1hHNWNiaUFnSUNCRmRtVnVkRWhoYm1Sc1pYSXViMlptS0hSb2FYTXVYMlZzWlcxbGJuUXNJRVZXUlU1VVgwTk1TVU5MWDBSSlUwMUpVMU1wTzF4dUlDQWdJRVYyWlc1MFNHRnVaR3hsY2k1dlptWW9kR2hwY3k1ZlpHbGhiRzluTENCRlZrVk9WRjlOVDFWVFJVUlBWMDVmUkVsVFRVbFRVeWs3WEc1Y2JpQWdJQ0IwYUdsekxsOXhkV1YxWlVOaGJHeGlZV05yS0NncElEMCtJSFJvYVhNdVgyaHBaR1ZOYjJSaGJDZ3BMQ0IwYUdsekxsOWxiR1Z0Wlc1MExDQnBjMEZ1YVcxaGRHVmtLVHRjYmlBZ2ZWeHVYRzRnSUdScGMzQnZjMlVvS1NCN1hHNGdJQ0FnVzNkcGJtUnZkeXdnZEdocGN5NWZaR2xoYkc5blhTNW1iM0pGWVdOb0tHaDBiV3hGYkdWdFpXNTBJRDArSUVWMlpXNTBTR0Z1Wkd4bGNpNXZabVlvYUhSdGJFVnNaVzFsYm5Rc0lFVldSVTVVWDB0RldTUTJLU2s3WEc1Y2JpQWdJQ0IwYUdsekxsOWlZV05yWkhKdmNDNWthWE53YjNObEtDazdYRzVjYmlBZ0lDQjBhR2x6TGw5bWIyTjFjM1J5WVhBdVpHVmhZM1JwZG1GMFpTZ3BPMXh1WEc0Z0lDQWdjM1Z3WlhJdVpHbHpjRzl6WlNncE8xeHVJQ0I5WEc1Y2JpQWdhR0Z1Wkd4bFZYQmtZWFJsS0NrZ2UxeHVJQ0FnSUhSb2FYTXVYMkZrYW5WemRFUnBZV3h2WnlncE8xeHVJQ0I5SUM4dklGQnlhWFpoZEdWY2JseHVYRzRnSUY5cGJtbDBhV0ZzYVhwbFFtRmphMFJ5YjNBb0tTQjdYRzRnSUNBZ2NtVjBkWEp1SUc1bGR5QkNZV05yWkhKdmNDaDdYRzRnSUNBZ0lDQnBjMVpwYzJsaWJHVTZJRUp2YjJ4bFlXNG9kR2hwY3k1ZlkyOXVabWxuTG1KaFkydGtjbTl3S1N4Y2JpQWdJQ0FnSUM4dklDZHpkR0YwYVdNbklHOXdkR2x2YmlCM2FXeHNJR0psSUhSeVlXNXpiR0YwWldRZ2RHOGdkSEoxWlN3Z1lXNWtJR0p2YjJ4bFlXNXpJSGRwYkd3Z2EyVmxjQ0IwYUdWcGNpQjJZV3gxWlZ4dUlDQWdJQ0FnYVhOQmJtbHRZWFJsWkRvZ2RHaHBjeTVmYVhOQmJtbHRZWFJsWkNncFhHNGdJQ0FnZlNrN1hHNGdJSDFjYmx4dUlDQmZhVzVwZEdsaGJHbDZaVVp2WTNWelZISmhjQ2dwSUh0Y2JpQWdJQ0J5WlhSMWNtNGdibVYzSUVadlkzVnpWSEpoY0NoN1hHNGdJQ0FnSUNCMGNtRndSV3hsYldWdWREb2dkR2hwY3k1ZlpXeGxiV1Z1ZEZ4dUlDQWdJSDBwTzF4dUlDQjlYRzVjYmlBZ1gyZGxkRU52Ym1acFp5aGpiMjVtYVdjcElIdGNiaUFnSUNCamIyNW1hV2NnUFNCN0lDNHVMa1JsWm1GMWJIUWtOU3hjYmlBZ0lDQWdJQzR1TGsxaGJtbHdkV3hoZEc5eUxtZGxkRVJoZEdGQmRIUnlhV0oxZEdWektIUm9hWE11WDJWc1pXMWxiblFwTEZ4dUlDQWdJQ0FnTGk0dUtIUjVjR1Z2WmlCamIyNW1hV2NnUFQwOUlDZHZZbXBsWTNRbklEOGdZMjl1Wm1sbklEb2dlMzBwWEc0Z0lDQWdmVHRjYmlBZ0lDQjBlWEJsUTJobFkydERiMjVtYVdjb1RrRk5SU1EyTENCamIyNW1hV2NzSUVSbFptRjFiSFJVZVhCbEpEVXBPMXh1SUNBZ0lISmxkSFZ5YmlCamIyNW1hV2M3WEc0Z0lIMWNibHh1SUNCZmMyaHZkMFZzWlcxbGJuUW9jbVZzWVhSbFpGUmhjbWRsZENrZ2UxeHVJQ0FnSUdOdmJuTjBJR2x6UVc1cGJXRjBaV1FnUFNCMGFHbHpMbDlwYzBGdWFXMWhkR1ZrS0NrN1hHNWNiaUFnSUNCamIyNXpkQ0J0YjJSaGJFSnZaSGtnUFNCVFpXeGxZM1J2Y2tWdVoybHVaUzVtYVc1a1QyNWxLRk5GVEVWRFZFOVNYMDFQUkVGTVgwSlBSRmtzSUhSb2FYTXVYMlJwWVd4dlp5azdYRzVjYmlBZ0lDQnBaaUFvSVhSb2FYTXVYMlZzWlcxbGJuUXVjR0Z5Wlc1MFRtOWtaU0I4ZkNCMGFHbHpMbDlsYkdWdFpXNTBMbkJoY21WdWRFNXZaR1V1Ym05a1pWUjVjR1VnSVQwOUlFNXZaR1V1UlV4RlRVVk9WRjlPVDBSRktTQjdYRzRnSUNBZ0lDQXZMeUJFYjI0bmRDQnRiM1psSUcxdlpHRnNKM01nUkU5TklIQnZjMmwwYVc5dVhHNGdJQ0FnSUNCa2IyTjFiV1Z1ZEM1aWIyUjVMbUZ3Y0dWdVpDaDBhR2x6TGw5bGJHVnRaVzUwS1R0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0IwYUdsekxsOWxiR1Z0Wlc1MExuTjBlV3hsTG1ScGMzQnNZWGtnUFNBbllteHZZMnNuTzF4dVhHNGdJQ0FnZEdocGN5NWZaV3hsYldWdWRDNXlaVzF2ZG1WQmRIUnlhV0oxZEdVb0oyRnlhV0V0YUdsa1pHVnVKeWs3WEc1Y2JpQWdJQ0IwYUdsekxsOWxiR1Z0Wlc1MExuTmxkRUYwZEhKcFluVjBaU2duWVhKcFlTMXRiMlJoYkNjc0lIUnlkV1VwTzF4dVhHNGdJQ0FnZEdocGN5NWZaV3hsYldWdWRDNXpaWFJCZEhSeWFXSjFkR1VvSjNKdmJHVW5MQ0FuWkdsaGJHOW5KeWs3WEc1Y2JpQWdJQ0IwYUdsekxsOWxiR1Z0Wlc1MExuTmpjbTlzYkZSdmNDQTlJREE3WEc1Y2JpQWdJQ0JwWmlBb2JXOWtZV3hDYjJSNUtTQjdYRzRnSUNBZ0lDQnRiMlJoYkVKdlpIa3VjMk55YjJ4c1ZHOXdJRDBnTUR0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JwWmlBb2FYTkJibWx0WVhSbFpDa2dlMXh1SUNBZ0lDQWdjbVZtYkc5M0tIUm9hWE11WDJWc1pXMWxiblFwTzF4dUlDQWdJSDFjYmx4dUlDQWdJSFJvYVhNdVgyVnNaVzFsYm5RdVkyeGhjM05NYVhOMExtRmtaQ2hEVEVGVFUxOU9RVTFGWDFOSVQxY2tOQ2s3WEc1Y2JpQWdJQ0JqYjI1emRDQjBjbUZ1YzJsMGFXOXVRMjl0Y0d4bGRHVWdQU0FvS1NBOVBpQjdYRzRnSUNBZ0lDQnBaaUFvZEdocGN5NWZZMjl1Wm1sbkxtWnZZM1Z6S1NCN1hHNGdJQ0FnSUNBZ0lIUm9hWE11WDJadlkzVnpkSEpoY0M1aFkzUnBkbUYwWlNncE8xeHVJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQjBhR2x6TGw5cGMxUnlZVzV6YVhScGIyNXBibWNnUFNCbVlXeHpaVHRjYmlBZ0lDQWdJRVYyWlc1MFNHRnVaR3hsY2k1MGNtbG5aMlZ5S0hSb2FYTXVYMlZzWlcxbGJuUXNJRVZXUlU1VVgxTklUMWRPSkRNc0lIdGNiaUFnSUNBZ0lDQWdjbVZzWVhSbFpGUmhjbWRsZEZ4dUlDQWdJQ0FnZlNrN1hHNGdJQ0FnZlR0Y2JseHVJQ0FnSUhSb2FYTXVYM0YxWlhWbFEyRnNiR0poWTJzb2RISmhibk5wZEdsdmJrTnZiWEJzWlhSbExDQjBhR2x6TGw5a2FXRnNiMmNzSUdselFXNXBiV0YwWldRcE8xeHVJQ0I5WEc1Y2JpQWdYM05sZEVWelkyRndaVVYyWlc1MEtDa2dlMXh1SUNBZ0lHbG1JQ2gwYUdsekxsOXBjMU5vYjNkdUtTQjdYRzRnSUNBZ0lDQkZkbVZ1ZEVoaGJtUnNaWEl1YjI0b2RHaHBjeTVmWld4bGJXVnVkQ3dnUlZaRlRsUmZTMFZaUkU5WFRsOUVTVk5OU1ZOVEpERXNJR1YyWlc1MElEMCtJSHRjYmlBZ0lDQWdJQ0FnYVdZZ0tIUm9hWE11WDJOdmJtWnBaeTVyWlhsaWIyRnlaQ0FtSmlCbGRtVnVkQzVyWlhrZ1BUMDlJRVZUUTBGUVJWOUxSVmtrTVNrZ2UxeHVJQ0FnSUNBZ0lDQWdJR1YyWlc1MExuQnlaWFpsYm5SRVpXWmhkV3gwS0NrN1hHNGdJQ0FnSUNBZ0lDQWdkR2hwY3k1b2FXUmxLQ2s3WEc0Z0lDQWdJQ0FnSUgwZ1pXeHpaU0JwWmlBb0lYUm9hWE11WDJOdmJtWnBaeTVyWlhsaWIyRnlaQ0FtSmlCbGRtVnVkQzVyWlhrZ1BUMDlJRVZUUTBGUVJWOUxSVmtrTVNrZ2UxeHVJQ0FnSUNBZ0lDQWdJSFJvYVhNdVgzUnlhV2RuWlhKQ1lXTnJaSEp2Y0ZSeVlXNXphWFJwYjI0b0tUdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdmU2s3WEc0Z0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lFVjJaVzUwU0dGdVpHeGxjaTV2Wm1Zb2RHaHBjeTVmWld4bGJXVnVkQ3dnUlZaRlRsUmZTMFZaUkU5WFRsOUVTVk5OU1ZOVEpERXBPMXh1SUNBZ0lIMWNiaUFnZlZ4dVhHNGdJRjl6WlhSU1pYTnBlbVZGZG1WdWRDZ3BJSHRjYmlBZ0lDQnBaaUFvZEdocGN5NWZhWE5UYUc5M2Jpa2dlMXh1SUNBZ0lDQWdSWFpsYm5SSVlXNWtiR1Z5TG05dUtIZHBibVJ2ZHl3Z1JWWkZUbFJmVWtWVFNWcEZMQ0FvS1NBOVBpQjBhR2x6TGw5aFpHcDFjM1JFYVdGc2IyY29LU2s3WEc0Z0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lFVjJaVzUwU0dGdVpHeGxjaTV2Wm1Zb2QybHVaRzkzTENCRlZrVk9WRjlTUlZOSldrVXBPMXh1SUNBZ0lIMWNiaUFnZlZ4dVhHNGdJRjlvYVdSbFRXOWtZV3dvS1NCN1hHNGdJQ0FnZEdocGN5NWZaV3hsYldWdWRDNXpkSGxzWlM1a2FYTndiR0Y1SUQwZ0oyNXZibVVuTzF4dVhHNGdJQ0FnZEdocGN5NWZaV3hsYldWdWRDNXpaWFJCZEhSeWFXSjFkR1VvSjJGeWFXRXRhR2xrWkdWdUp5d2dkSEoxWlNrN1hHNWNiaUFnSUNCMGFHbHpMbDlsYkdWdFpXNTBMbkpsYlc5MlpVRjBkSEpwWW5WMFpTZ25ZWEpwWVMxdGIyUmhiQ2NwTzF4dVhHNGdJQ0FnZEdocGN5NWZaV3hsYldWdWRDNXlaVzF2ZG1WQmRIUnlhV0oxZEdVb0ozSnZiR1VuS1R0Y2JseHVJQ0FnSUhSb2FYTXVYMmx6VkhKaGJuTnBkR2x2Ym1sdVp5QTlJR1poYkhObE8xeHVYRzRnSUNBZ2RHaHBjeTVmWW1GamEyUnliM0F1YUdsa1pTZ29LU0E5UGlCN1hHNGdJQ0FnSUNCa2IyTjFiV1Z1ZEM1aWIyUjVMbU5zWVhOelRHbHpkQzV5WlcxdmRtVW9RMHhCVTFOZlRrRk5SVjlQVUVWT0tUdGNibHh1SUNBZ0lDQWdkR2hwY3k1ZmNtVnpaWFJCWkdwMWMzUnRaVzUwY3lncE8xeHVYRzRnSUNBZ0lDQjBhR2x6TGw5elkzSnZiR3hDWVhJdWNtVnpaWFFvS1R0Y2JseHVJQ0FnSUNBZ1JYWmxiblJJWVc1a2JHVnlMblJ5YVdkblpYSW9kR2hwY3k1ZlpXeGxiV1Z1ZEN3Z1JWWkZUbFJmU0VsRVJFVk9KRE1wTzF4dUlDQWdJSDBwTzF4dUlDQjlYRzVjYmlBZ1gzTm9iM2RDWVdOclpISnZjQ2hqWVd4c1ltRmpheWtnZTF4dUlDQWdJRVYyWlc1MFNHRnVaR3hsY2k1dmJpaDBhR2x6TGw5bGJHVnRaVzUwTENCRlZrVk9WRjlEVEVsRFMxOUVTVk5OU1ZOVExDQmxkbVZ1ZENBOVBpQjdYRzRnSUNBZ0lDQnBaaUFvZEdocGN5NWZhV2R1YjNKbFFtRmphMlJ5YjNCRGJHbGpheWtnZTF4dUlDQWdJQ0FnSUNCMGFHbHpMbDlwWjI1dmNtVkNZV05yWkhKdmNFTnNhV05ySUQwZ1ptRnNjMlU3WEc0Z0lDQWdJQ0FnSUhKbGRIVnlianRjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnYVdZZ0tHVjJaVzUwTG5SaGNtZGxkQ0FoUFQwZ1pYWmxiblF1WTNWeWNtVnVkRlJoY21kbGRDa2dlMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNDdYRzRnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJR2xtSUNoMGFHbHpMbDlqYjI1bWFXY3VZbUZqYTJSeWIzQWdQVDA5SUhSeWRXVXBJSHRjYmlBZ0lDQWdJQ0FnZEdocGN5NW9hV1JsS0NrN1hHNGdJQ0FnSUNCOUlHVnNjMlVnYVdZZ0tIUm9hWE11WDJOdmJtWnBaeTVpWVdOclpISnZjQ0E5UFQwZ0ozTjBZWFJwWXljcElIdGNiaUFnSUNBZ0lDQWdkR2hwY3k1ZmRISnBaMmRsY2tKaFkydGtjbTl3VkhKaGJuTnBkR2x2YmlncE8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgwcE8xeHVYRzRnSUNBZ2RHaHBjeTVmWW1GamEyUnliM0F1YzJodmR5aGpZV3hzWW1GamF5azdYRzRnSUgxY2JseHVJQ0JmYVhOQmJtbHRZWFJsWkNncElIdGNiaUFnSUNCeVpYUjFjbTRnZEdocGN5NWZaV3hsYldWdWRDNWpiR0Z6YzB4cGMzUXVZMjl1ZEdGcGJuTW9RMHhCVTFOZlRrRk5SVjlHUVVSRkpETXBPMXh1SUNCOVhHNWNiaUFnWDNSeWFXZG5aWEpDWVdOclpISnZjRlJ5WVc1emFYUnBiMjRvS1NCN1hHNGdJQ0FnWTI5dWMzUWdhR2xrWlVWMlpXNTBJRDBnUlhabGJuUklZVzVrYkdWeUxuUnlhV2RuWlhJb2RHaHBjeTVmWld4bGJXVnVkQ3dnUlZaRlRsUmZTRWxFUlY5UVVrVldSVTVVUlVRcE8xeHVYRzRnSUNBZ2FXWWdLR2hwWkdWRmRtVnVkQzVrWldaaGRXeDBVSEpsZG1WdWRHVmtLU0I3WEc0Z0lDQWdJQ0J5WlhSMWNtNDdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ1kyOXVjM1FnZTF4dUlDQWdJQ0FnWTJ4aGMzTk1hWE4wTEZ4dUlDQWdJQ0FnYzJOeWIyeHNTR1ZwWjJoMExGeHVJQ0FnSUNBZ2MzUjViR1ZjYmlBZ0lDQjlJRDBnZEdocGN5NWZaV3hsYldWdWREdGNiaUFnSUNCamIyNXpkQ0JwYzAxdlpHRnNUM1psY21ac2IzZHBibWNnUFNCelkzSnZiR3hJWldsbmFIUWdQaUJrYjJOMWJXVnVkQzVrYjJOMWJXVnVkRVZzWlcxbGJuUXVZMnhwWlc1MFNHVnBaMmgwT3lBdkx5QnlaWFIxY200Z2FXWWdkR2hsSUdadmJHeHZkMmx1WnlCaVlXTnJaM0p2ZFc1a0lIUnlZVzV6YVhScGIyNGdhR0Z6YmlkMElIbGxkQ0JqYjIxd2JHVjBaV1JjYmx4dUlDQWdJR2xtSUNnaGFYTk5iMlJoYkU5MlpYSm1iRzkzYVc1bklDWW1JSE4wZVd4bExtOTJaWEptYkc5M1dTQTlQVDBnSjJocFpHUmxiaWNnZkh3Z1kyeGhjM05NYVhOMExtTnZiblJoYVc1ektFTk1RVk5UWDA1QlRVVmZVMVJCVkVsREtTa2dlMXh1SUNBZ0lDQWdjbVYwZFhKdU8xeHVJQ0FnSUgxY2JseHVJQ0FnSUdsbUlDZ2hhWE5OYjJSaGJFOTJaWEptYkc5M2FXNW5LU0I3WEc0Z0lDQWdJQ0J6ZEhsc1pTNXZkbVZ5Wm14dmQxa2dQU0FuYUdsa1pHVnVKenRjYmlBZ0lDQjlYRzVjYmlBZ0lDQmpiR0Z6YzB4cGMzUXVZV1JrS0VOTVFWTlRYMDVCVFVWZlUxUkJWRWxES1R0Y2JseHVJQ0FnSUhSb2FYTXVYM0YxWlhWbFEyRnNiR0poWTJzb0tDa2dQVDRnZTF4dUlDQWdJQ0FnWTJ4aGMzTk1hWE4wTG5KbGJXOTJaU2hEVEVGVFUxOU9RVTFGWDFOVVFWUkpReWs3WEc1Y2JpQWdJQ0FnSUdsbUlDZ2hhWE5OYjJSaGJFOTJaWEptYkc5M2FXNW5LU0I3WEc0Z0lDQWdJQ0FnSUhSb2FYTXVYM0YxWlhWbFEyRnNiR0poWTJzb0tDa2dQVDRnZTF4dUlDQWdJQ0FnSUNBZ0lITjBlV3hsTG05MlpYSm1iRzkzV1NBOUlDY25PMXh1SUNBZ0lDQWdJQ0I5TENCMGFHbHpMbDlrYVdGc2IyY3BPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lIMHNJSFJvYVhNdVgyUnBZV3h2WnlrN1hHNWNiaUFnSUNCMGFHbHpMbDlsYkdWdFpXNTBMbVp2WTNWektDazdYRzRnSUgwZ0x5OGdMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExWeHVJQ0F2THlCMGFHVWdabTlzYkc5M2FXNW5JRzFsZEdodlpITWdZWEpsSUhWelpXUWdkRzhnYUdGdVpHeGxJRzkyWlhKbWJHOTNhVzVuSUcxdlpHRnNjMXh1SUNBdkx5QXRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdFhHNWNibHh1SUNCZllXUnFkWE4wUkdsaGJHOW5LQ2tnZTF4dUlDQWdJR052Ym5OMElHbHpUVzlrWVd4UGRtVnlabXh2ZDJsdVp5QTlJSFJvYVhNdVgyVnNaVzFsYm5RdWMyTnliMnhzU0dWcFoyaDBJRDRnWkc5amRXMWxiblF1Wkc5amRXMWxiblJGYkdWdFpXNTBMbU5zYVdWdWRFaGxhV2RvZER0Y2JseHVJQ0FnSUdOdmJuTjBJSE5qY205c2JHSmhjbGRwWkhSb0lEMGdkR2hwY3k1ZmMyTnliMnhzUW1GeUxtZGxkRmRwWkhSb0tDazdYRzVjYmlBZ0lDQmpiMjV6ZENCcGMwSnZaSGxQZG1WeVpteHZkMmx1WnlBOUlITmpjbTlzYkdKaGNsZHBaSFJvSUQ0Z01EdGNibHh1SUNBZ0lHbG1JQ2doYVhOQ2IyUjVUM1psY21ac2IzZHBibWNnSmlZZ2FYTk5iMlJoYkU5MlpYSm1iRzkzYVc1bklDWW1JQ0ZwYzFKVVRDZ3BJSHg4SUdselFtOWtlVTkyWlhKbWJHOTNhVzVuSUNZbUlDRnBjMDF2WkdGc1QzWmxjbVpzYjNkcGJtY2dKaVlnYVhOU1ZFd29LU2tnZTF4dUlDQWdJQ0FnZEdocGN5NWZaV3hsYldWdWRDNXpkSGxzWlM1d1lXUmthVzVuVEdWbWRDQTlJR0FrZTNOamNtOXNiR0poY2xkcFpIUm9mWEI0WUR0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JwWmlBb2FYTkNiMlI1VDNabGNtWnNiM2RwYm1jZ0ppWWdJV2x6VFc5a1lXeFBkbVZ5Wm14dmQybHVaeUFtSmlBaGFYTlNWRXdvS1NCOGZDQWhhWE5DYjJSNVQzWmxjbVpzYjNkcGJtY2dKaVlnYVhOTmIyUmhiRTkyWlhKbWJHOTNhVzVuSUNZbUlHbHpVbFJNS0NrcElIdGNiaUFnSUNBZ0lIUm9hWE11WDJWc1pXMWxiblF1YzNSNWJHVXVjR0ZrWkdsdVoxSnBaMmgwSUQwZ1lDUjdjMk55YjJ4c1ltRnlWMmxrZEdoOWNIaGdPMXh1SUNBZ0lIMWNiaUFnZlZ4dVhHNGdJRjl5WlhObGRFRmthblZ6ZEcxbGJuUnpLQ2tnZTF4dUlDQWdJSFJvYVhNdVgyVnNaVzFsYm5RdWMzUjViR1V1Y0dGa1pHbHVaMHhsWm5RZ1BTQW5KenRjYmlBZ0lDQjBhR2x6TGw5bGJHVnRaVzUwTG5OMGVXeGxMbkJoWkdScGJtZFNhV2RvZENBOUlDY25PMXh1SUNCOUlDOHZJRk4wWVhScFkxeHVYRzVjYmlBZ2MzUmhkR2xqSUdwUmRXVnllVWx1ZEdWeVptRmpaU2hqYjI1bWFXY3NJSEpsYkdGMFpXUlVZWEpuWlhRcElIdGNiaUFnSUNCeVpYUjFjbTRnZEdocGN5NWxZV05vS0daMWJtTjBhVzl1SUNncElIdGNiaUFnSUNBZ0lHTnZibk4wSUdSaGRHRWdQU0JOYjJSaGJDNW5aWFJQY2tOeVpXRjBaVWx1YzNSaGJtTmxLSFJvYVhNc0lHTnZibVpwWnlrN1hHNWNiaUFnSUNBZ0lHbG1JQ2gwZVhCbGIyWWdZMjl1Wm1sbklDRTlQU0FuYzNSeWFXNW5KeWtnZTF4dUlDQWdJQ0FnSUNCeVpYUjFjbTQ3WEc0Z0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUdsbUlDaDBlWEJsYjJZZ1pHRjBZVnRqYjI1bWFXZGRJRDA5UFNBbmRXNWtaV1pwYm1Wa0p5a2dlMXh1SUNBZ0lDQWdJQ0IwYUhKdmR5QnVaWGNnVkhsd1pVVnljbTl5S0dCT2J5QnRaWFJvYjJRZ2JtRnRaV1FnWENJa2UyTnZibVpwWjMxY0ltQXBPMXh1SUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0JrWVhSaFcyTnZibVpwWjEwb2NtVnNZWFJsWkZSaGNtZGxkQ2s3WEc0Z0lDQWdmU2s3WEc0Z0lIMWNibHh1ZlZ4dUx5b3FYRzRnS2lBdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMxY2JpQXFJRVJoZEdFZ1FYQnBJR2x0Y0d4bGJXVnVkR0YwYVc5dVhHNGdLaUF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzFjYmlBcUwxeHVYRzVjYmtWMlpXNTBTR0Z1Wkd4bGNpNXZiaWhrYjJOMWJXVnVkQ3dnUlZaRlRsUmZRMHhKUTB0ZlJFRlVRVjlCVUVra01pd2dVMFZNUlVOVVQxSmZSRUZVUVY5VVQwZEhURVVrTWl3Z1puVnVZM1JwYjI0Z0tHVjJaVzUwS1NCN1hHNGdJR052Ym5OMElIUmhjbWRsZENBOUlHZGxkRVZzWlcxbGJuUkdjbTl0VTJWc1pXTjBiM0lvZEdocGN5azdYRzVjYmlBZ2FXWWdLRnNuUVNjc0lDZEJVa1ZCSjEwdWFXNWpiSFZrWlhNb2RHaHBjeTUwWVdkT1lXMWxLU2tnZTF4dUlDQWdJR1YyWlc1MExuQnlaWFpsYm5SRVpXWmhkV3gwS0NrN1hHNGdJSDFjYmx4dUlDQkZkbVZ1ZEVoaGJtUnNaWEl1YjI1bEtIUmhjbWRsZEN3Z1JWWkZUbFJmVTBoUFZ5UXpMQ0J6YUc5M1JYWmxiblFnUFQ0Z2UxeHVJQ0FnSUdsbUlDaHphRzkzUlhabGJuUXVaR1ZtWVhWc2RGQnlaWFpsYm5SbFpDa2dlMXh1SUNBZ0lDQWdMeThnYjI1c2VTQnlaV2RwYzNSbGNpQm1iMk4xY3lCeVpYTjBiM0psY2lCcFppQnRiMlJoYkNCM2FXeHNJR0ZqZEhWaGJHeDVJR2RsZENCemFHOTNibHh1SUNBZ0lDQWdjbVYwZFhKdU8xeHVJQ0FnSUgxY2JseHVJQ0FnSUVWMlpXNTBTR0Z1Wkd4bGNpNXZibVVvZEdGeVoyVjBMQ0JGVmtWT1ZGOUlTVVJFUlU0a015d2dLQ2tnUFQ0Z2UxeHVJQ0FnSUNBZ2FXWWdLR2x6Vm1semFXSnNaU2gwYUdsektTa2dlMXh1SUNBZ0lDQWdJQ0IwYUdsekxtWnZZM1Z6S0NrN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnZlNrN1hHNGdJSDBwT3lBdkx5QmhkbTlwWkNCamIyNW1iR2xqZENCM2FHVnVJR05zYVdOcmFXNW5JRzF2WkdSaGJDQjBiMmRuYkdWeUlIZG9hV3hsSUdGdWIzUm9aWElnYjI1bElHbHpJRzl3Wlc1Y2JseHVJQ0JqYjI1emRDQmhiR3hTWldGa2VVOXdaVzRnUFNCVFpXeGxZM1J2Y2tWdVoybHVaUzVtYVc1a1QyNWxLRTlRUlU1ZlUwVk1SVU5VVDFJa01TazdYRzVjYmlBZ2FXWWdLR0ZzYkZKbFlXUjVUM0JsYmlrZ2UxeHVJQ0FnSUUxdlpHRnNMbWRsZEVsdWMzUmhibU5sS0dGc2JGSmxZV1I1VDNCbGJpa3VhR2xrWlNncE8xeHVJQ0I5WEc1Y2JpQWdZMjl1YzNRZ1pHRjBZU0E5SUUxdlpHRnNMbWRsZEU5eVEzSmxZWFJsU1c1emRHRnVZMlVvZEdGeVoyVjBLVHRjYmlBZ1pHRjBZUzUwYjJkbmJHVW9kR2hwY3lrN1hHNTlLVHRjYm1WdVlXSnNaVVJwYzIxcGMzTlVjbWxuWjJWeUtFMXZaR0ZzS1R0Y2JpOHFLbHh1SUNvZ0xTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdFhHNGdLaUJxVVhWbGNubGNiaUFxSUMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFZ4dUlDb2dZV1JrSUM1TmIyUmhiQ0IwYnlCcVVYVmxjbmtnYjI1c2VTQnBaaUJxVVhWbGNua2dhWE1nY0hKbGMyVnVkRnh1SUNvdlhHNWNibVJsWm1sdVpVcFJkV1Z5ZVZCc2RXZHBiaWhOYjJSaGJDazdYRzVjYmk4cUtseHVJQ29nTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMxY2JpQXFJRUp2YjNSemRISmhjQ0FvZGpVdU1TNHpLVG9nYjJabVkyRnVkbUZ6TG1welhHNGdLaUJNYVdObGJuTmxaQ0IxYm1SbGNpQk5TVlFnS0doMGRIQnpPaTh2WjJsMGFIVmlMbU52YlM5MGQySnpMMkp2YjNSemRISmhjQzlpYkc5aUwyMWhhVzR2VEVsRFJVNVRSU2xjYmlBcUlDMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRYRzRnS2k5Y2JpOHFLbHh1SUNvZ0xTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdFhHNGdLaUJEYjI1emRHRnVkSE5jYmlBcUlDMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExWeHVJQ292WEc1Y2JtTnZibk4wSUU1QlRVVWtOU0E5SUNkdlptWmpZVzUyWVhNbk8xeHVZMjl1YzNRZ1JFRlVRVjlMUlZra05TQTlJQ2RpY3k1dlptWmpZVzUyWVhNbk8xeHVZMjl1YzNRZ1JWWkZUbFJmUzBWWkpEVWdQU0JnTGlSN1JFRlVRVjlMUlZra05YMWdPMXh1WTI5dWMzUWdSRUZVUVY5QlVFbGZTMFZaSkRJZ1BTQW5MbVJoZEdFdFlYQnBKenRjYm1OdmJuTjBJRVZXUlU1VVgweFBRVVJmUkVGVVFWOUJVRWtrTVNBOUlHQnNiMkZrSkh0RlZrVk9WRjlMUlZra05YMGtlMFJCVkVGZlFWQkpYMHRGV1NReWZXQTdYRzVqYjI1emRDQkZVME5CVUVWZlMwVlpJRDBnSjBWelkyRndaU2M3WEc1amIyNXpkQ0JFWldaaGRXeDBKRFFnUFNCN1hHNGdJR0poWTJ0a2NtOXdPaUIwY25WbExGeHVJQ0JyWlhsaWIyRnlaRG9nZEhKMVpTeGNiaUFnYzJOeWIyeHNPaUJtWVd4elpWeHVmVHRjYm1OdmJuTjBJRVJsWm1GMWJIUlVlWEJsSkRRZ1BTQjdYRzRnSUdKaFkydGtjbTl3T2lBblltOXZiR1ZoYmljc1hHNGdJR3RsZVdKdllYSmtPaUFuWW05dmJHVmhiaWNzWEc0Z0lITmpjbTlzYkRvZ0oySnZiMnhsWVc0blhHNTlPMXh1WTI5dWMzUWdRMHhCVTFOZlRrRk5SVjlUU0U5WEpETWdQU0FuYzJodmR5YzdYRzVqYjI1emRDQkRURUZUVTE5T1FVMUZYMEpCUTB0RVVrOVFJRDBnSjI5bVptTmhiblpoY3kxaVlXTnJaSEp2Y0NjN1hHNWpiMjV6ZENCUFVFVk9YMU5GVEVWRFZFOVNJRDBnSnk1dlptWmpZVzUyWVhNdWMyaHZkeWM3WEc1amIyNXpkQ0JGVmtWT1ZGOVRTRTlYSkRJZ1BTQmdjMmh2ZHlSN1JWWkZUbFJmUzBWWkpEVjlZRHRjYm1OdmJuTjBJRVZXUlU1VVgxTklUMWRPSkRJZ1BTQmdjMmh2ZDI0a2UwVldSVTVVWDB0RldTUTFmV0E3WEc1amIyNXpkQ0JGVmtWT1ZGOUlTVVJGSkRJZ1BTQmdhR2xrWlNSN1JWWkZUbFJmUzBWWkpEVjlZRHRjYm1OdmJuTjBJRVZXUlU1VVgwaEpSRVJGVGlReUlEMGdZR2hwWkdSbGJpUjdSVlpGVGxSZlMwVlpKRFY5WUR0Y2JtTnZibk4wSUVWV1JVNVVYME5NU1VOTFgwUkJWRUZmUVZCSkpERWdQU0JnWTJ4cFkyc2tlMFZXUlU1VVgwdEZXU1ExZlNSN1JFRlVRVjlCVUVsZlMwVlpKREo5WUR0Y2JtTnZibk4wSUVWV1JVNVVYMHRGV1VSUFYwNWZSRWxUVFVsVFV5QTlJR0JyWlhsa2IzZHVMbVJwYzIxcGMzTWtlMFZXUlU1VVgwdEZXU1ExZldBN1hHNWpiMjV6ZENCVFJVeEZRMVJQVWw5RVFWUkJYMVJQUjBkTVJTUXhJRDBnSjF0a1lYUmhMV0p6TFhSdloyZHNaVDFjSW05bVptTmhiblpoYzF3aVhTYzdYRzR2S2lwY2JpQXFJQzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMVnh1SUNvZ1EyeGhjM01nUkdWbWFXNXBkR2x2Ymx4dUlDb2dMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRYRzRnS2k5Y2JseHVZMnhoYzNNZ1QyWm1ZMkZ1ZG1GeklHVjRkR1Z1WkhNZ1FtRnpaVU52YlhCdmJtVnVkQ0I3WEc0Z0lHTnZibk4wY25WamRHOXlLR1ZzWlcxbGJuUXNJR052Ym1acFp5a2dlMXh1SUNBZ0lITjFjR1Z5S0dWc1pXMWxiblFwTzF4dUlDQWdJSFJvYVhNdVgyTnZibVpwWnlBOUlIUm9hWE11WDJkbGRFTnZibVpwWnloamIyNW1hV2NwTzF4dUlDQWdJSFJvYVhNdVgybHpVMmh2ZDI0Z1BTQm1ZV3h6WlR0Y2JpQWdJQ0IwYUdsekxsOWlZV05yWkhKdmNDQTlJSFJvYVhNdVgybHVhWFJwWVd4cGVtVkNZV05yUkhKdmNDZ3BPMXh1SUNBZ0lIUm9hWE11WDJadlkzVnpkSEpoY0NBOUlIUm9hWE11WDJsdWFYUnBZV3hwZW1WR2IyTjFjMVJ5WVhBb0tUdGNibHh1SUNBZ0lIUm9hWE11WDJGa1pFVjJaVzUwVEdsemRHVnVaWEp6S0NrN1hHNGdJSDBnTHk4Z1IyVjBkR1Z5YzF4dVhHNWNiaUFnYzNSaGRHbGpJR2RsZENCT1FVMUZLQ2tnZTF4dUlDQWdJSEpsZEhWeWJpQk9RVTFGSkRVN1hHNGdJSDFjYmx4dUlDQnpkR0YwYVdNZ1oyVjBJRVJsWm1GMWJIUW9LU0I3WEc0Z0lDQWdjbVYwZFhKdUlFUmxabUYxYkhRa05EdGNiaUFnZlNBdkx5QlFkV0pzYVdOY2JseHVYRzRnSUhSdloyZHNaU2h5Wld4aGRHVmtWR0Z5WjJWMEtTQjdYRzRnSUNBZ2NtVjBkWEp1SUhSb2FYTXVYMmx6VTJodmQyNGdQeUIwYUdsekxtaHBaR1VvS1NBNklIUm9hWE11YzJodmR5aHlaV3hoZEdWa1ZHRnlaMlYwS1R0Y2JpQWdmVnh1WEc0Z0lITm9iM2NvY21Wc1lYUmxaRlJoY21kbGRDa2dlMXh1SUNBZ0lHbG1JQ2gwYUdsekxsOXBjMU5vYjNkdUtTQjdYRzRnSUNBZ0lDQnlaWFIxY200N1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnWTI5dWMzUWdjMmh2ZDBWMlpXNTBJRDBnUlhabGJuUklZVzVrYkdWeUxuUnlhV2RuWlhJb2RHaHBjeTVmWld4bGJXVnVkQ3dnUlZaRlRsUmZVMGhQVnlReUxDQjdYRzRnSUNBZ0lDQnlaV3hoZEdWa1ZHRnlaMlYwWEc0Z0lDQWdmU2s3WEc1Y2JpQWdJQ0JwWmlBb2MyaHZkMFYyWlc1MExtUmxabUYxYkhSUWNtVjJaVzUwWldRcElIdGNiaUFnSUNBZ0lISmxkSFZ5Ymp0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0IwYUdsekxsOXBjMU5vYjNkdUlEMGdkSEoxWlR0Y2JpQWdJQ0IwYUdsekxsOWxiR1Z0Wlc1MExuTjBlV3hsTG5acGMybGlhV3hwZEhrZ1BTQW5kbWx6YVdKc1pTYzdYRzVjYmlBZ0lDQjBhR2x6TGw5aVlXTnJaSEp2Y0M1emFHOTNLQ2s3WEc1Y2JpQWdJQ0JwWmlBb0lYUm9hWE11WDJOdmJtWnBaeTV6WTNKdmJHd3BJSHRjYmlBZ0lDQWdJRzVsZHlCVFkzSnZiR3hDWVhKSVpXeHdaWElvS1M1b2FXUmxLQ2s3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdkR2hwY3k1ZlpXeGxiV1Z1ZEM1eVpXMXZkbVZCZEhSeWFXSjFkR1VvSjJGeWFXRXRhR2xrWkdWdUp5azdYRzVjYmlBZ0lDQjBhR2x6TGw5bGJHVnRaVzUwTG5ObGRFRjBkSEpwWW5WMFpTZ25ZWEpwWVMxdGIyUmhiQ2NzSUhSeWRXVXBPMXh1WEc0Z0lDQWdkR2hwY3k1ZlpXeGxiV1Z1ZEM1elpYUkJkSFJ5YVdKMWRHVW9KM0p2YkdVbkxDQW5aR2xoYkc5bkp5azdYRzVjYmlBZ0lDQjBhR2x6TGw5bGJHVnRaVzUwTG1Oc1lYTnpUR2x6ZEM1aFpHUW9RMHhCVTFOZlRrRk5SVjlUU0U5WEpETXBPMXh1WEc0Z0lDQWdZMjl1YzNRZ1kyOXRjR3hsZEdWRFlXeHNRbUZqYXlBOUlDZ3BJRDArSUh0Y2JpQWdJQ0FnSUdsbUlDZ2hkR2hwY3k1ZlkyOXVabWxuTG5OamNtOXNiQ2tnZTF4dUlDQWdJQ0FnSUNCMGFHbHpMbDltYjJOMWMzUnlZWEF1WVdOMGFYWmhkR1VvS1R0Y2JpQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ1JYWmxiblJJWVc1a2JHVnlMblJ5YVdkblpYSW9kR2hwY3k1ZlpXeGxiV1Z1ZEN3Z1JWWkZUbFJmVTBoUFYwNGtNaXdnZTF4dUlDQWdJQ0FnSUNCeVpXeGhkR1ZrVkdGeVoyVjBYRzRnSUNBZ0lDQjlLVHRjYmlBZ0lDQjlPMXh1WEc0Z0lDQWdkR2hwY3k1ZmNYVmxkV1ZEWVd4c1ltRmpheWhqYjIxd2JHVjBaVU5oYkd4Q1lXTnJMQ0IwYUdsekxsOWxiR1Z0Wlc1MExDQjBjblZsS1R0Y2JpQWdmVnh1WEc0Z0lHaHBaR1VvS1NCN1hHNGdJQ0FnYVdZZ0tDRjBhR2x6TGw5cGMxTm9iM2R1S1NCN1hHNGdJQ0FnSUNCeVpYUjFjbTQ3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdZMjl1YzNRZ2FHbGtaVVYyWlc1MElEMGdSWFpsYm5SSVlXNWtiR1Z5TG5SeWFXZG5aWElvZEdocGN5NWZaV3hsYldWdWRDd2dSVlpGVGxSZlNFbEVSU1F5S1R0Y2JseHVJQ0FnSUdsbUlDaG9hV1JsUlhabGJuUXVaR1ZtWVhWc2RGQnlaWFpsYm5SbFpDa2dlMXh1SUNBZ0lDQWdjbVYwZFhKdU8xeHVJQ0FnSUgxY2JseHVJQ0FnSUhSb2FYTXVYMlp2WTNWemRISmhjQzVrWldGamRHbDJZWFJsS0NrN1hHNWNiaUFnSUNCMGFHbHpMbDlsYkdWdFpXNTBMbUpzZFhJb0tUdGNibHh1SUNBZ0lIUm9hWE11WDJselUyaHZkMjRnUFNCbVlXeHpaVHRjYmx4dUlDQWdJSFJvYVhNdVgyVnNaVzFsYm5RdVkyeGhjM05NYVhOMExuSmxiVzkyWlNoRFRFRlRVMTlPUVUxRlgxTklUMWNrTXlrN1hHNWNiaUFnSUNCMGFHbHpMbDlpWVdOclpISnZjQzVvYVdSbEtDazdYRzVjYmlBZ0lDQmpiMjV6ZENCamIyMXdiR1YwWlVOaGJHeGlZV05ySUQwZ0tDa2dQVDRnZTF4dUlDQWdJQ0FnZEdocGN5NWZaV3hsYldWdWRDNXpaWFJCZEhSeWFXSjFkR1VvSjJGeWFXRXRhR2xrWkdWdUp5d2dkSEoxWlNrN1hHNWNiaUFnSUNBZ0lIUm9hWE11WDJWc1pXMWxiblF1Y21WdGIzWmxRWFIwY21saWRYUmxLQ2RoY21saExXMXZaR0ZzSnlrN1hHNWNiaUFnSUNBZ0lIUm9hWE11WDJWc1pXMWxiblF1Y21WdGIzWmxRWFIwY21saWRYUmxLQ2R5YjJ4bEp5azdYRzVjYmlBZ0lDQWdJSFJvYVhNdVgyVnNaVzFsYm5RdWMzUjViR1V1ZG1semFXSnBiR2wwZVNBOUlDZG9hV1JrWlc0bk8xeHVYRzRnSUNBZ0lDQnBaaUFvSVhSb2FYTXVYMk52Ym1acFp5NXpZM0p2Ykd3cElIdGNiaUFnSUNBZ0lDQWdibVYzSUZOamNtOXNiRUpoY2tobGJIQmxjaWdwTG5KbGMyVjBLQ2s3WEc0Z0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUVWMlpXNTBTR0Z1Wkd4bGNpNTBjbWxuWjJWeUtIUm9hWE11WDJWc1pXMWxiblFzSUVWV1JVNVVYMGhKUkVSRlRpUXlLVHRjYmlBZ0lDQjlPMXh1WEc0Z0lDQWdkR2hwY3k1ZmNYVmxkV1ZEWVd4c1ltRmpheWhqYjIxd2JHVjBaVU5oYkd4aVlXTnJMQ0IwYUdsekxsOWxiR1Z0Wlc1MExDQjBjblZsS1R0Y2JpQWdmVnh1WEc0Z0lHUnBjM0J2YzJVb0tTQjdYRzRnSUNBZ2RHaHBjeTVmWW1GamEyUnliM0F1WkdsemNHOXpaU2dwTzF4dVhHNGdJQ0FnZEdocGN5NWZabTlqZFhOMGNtRndMbVJsWVdOMGFYWmhkR1VvS1R0Y2JseHVJQ0FnSUhOMWNHVnlMbVJwYzNCdmMyVW9LVHRjYmlBZ2ZTQXZMeUJRY21sMllYUmxYRzVjYmx4dUlDQmZaMlYwUTI5dVptbG5LR052Ym1acFp5a2dlMXh1SUNBZ0lHTnZibVpwWnlBOUlIc2dMaTR1UkdWbVlYVnNkQ1EwTEZ4dUlDQWdJQ0FnTGk0dVRXRnVhWEIxYkdGMGIzSXVaMlYwUkdGMFlVRjBkSEpwWW5WMFpYTW9kR2hwY3k1ZlpXeGxiV1Z1ZENrc1hHNGdJQ0FnSUNBdUxpNG9kSGx3Wlc5bUlHTnZibVpwWnlBOVBUMGdKMjlpYW1WamRDY2dQeUJqYjI1bWFXY2dPaUI3ZlNsY2JpQWdJQ0I5TzF4dUlDQWdJSFI1Y0dWRGFHVmphME52Ym1acFp5aE9RVTFGSkRVc0lHTnZibVpwWnl3Z1JHVm1ZWFZzZEZSNWNHVWtOQ2s3WEc0Z0lDQWdjbVYwZFhKdUlHTnZibVpwWnp0Y2JpQWdmVnh1WEc0Z0lGOXBibWwwYVdGc2FYcGxRbUZqYTBSeWIzQW9LU0I3WEc0Z0lDQWdjbVYwZFhKdUlHNWxkeUJDWVdOclpISnZjQ2g3WEc0Z0lDQWdJQ0JqYkdGemMwNWhiV1U2SUVOTVFWTlRYMDVCVFVWZlFrRkRTMFJTVDFBc1hHNGdJQ0FnSUNCcGMxWnBjMmxpYkdVNklIUm9hWE11WDJOdmJtWnBaeTVpWVdOclpISnZjQ3hjYmlBZ0lDQWdJR2x6UVc1cGJXRjBaV1E2SUhSeWRXVXNYRzRnSUNBZ0lDQnliMjkwUld4bGJXVnVkRG9nZEdocGN5NWZaV3hsYldWdWRDNXdZWEpsYm5ST2IyUmxMRnh1SUNBZ0lDQWdZMnhwWTJ0RFlXeHNZbUZqYXpvZ0tDa2dQVDRnZEdocGN5NW9hV1JsS0NsY2JpQWdJQ0I5S1R0Y2JpQWdmVnh1WEc0Z0lGOXBibWwwYVdGc2FYcGxSbTlqZFhOVWNtRndLQ2tnZTF4dUlDQWdJSEpsZEhWeWJpQnVaWGNnUm05amRYTlVjbUZ3S0h0Y2JpQWdJQ0FnSUhSeVlYQkZiR1Z0Wlc1ME9pQjBhR2x6TGw5bGJHVnRaVzUwWEc0Z0lDQWdmU2s3WEc0Z0lIMWNibHh1SUNCZllXUmtSWFpsYm5STWFYTjBaVzVsY25Nb0tTQjdYRzRnSUNBZ1JYWmxiblJJWVc1a2JHVnlMbTl1S0hSb2FYTXVYMlZzWlcxbGJuUXNJRVZXUlU1VVgwdEZXVVJQVjA1ZlJFbFRUVWxUVXl3Z1pYWmxiblFnUFQ0Z2UxeHVJQ0FnSUNBZ2FXWWdLSFJvYVhNdVgyTnZibVpwWnk1clpYbGliMkZ5WkNBbUppQmxkbVZ1ZEM1clpYa2dQVDA5SUVWVFEwRlFSVjlMUlZrcElIdGNiaUFnSUNBZ0lDQWdkR2hwY3k1b2FXUmxLQ2s3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmU2s3WEc0Z0lIMGdMeThnVTNSaGRHbGpYRzVjYmx4dUlDQnpkR0YwYVdNZ2FsRjFaWEo1U1c1MFpYSm1ZV05sS0dOdmJtWnBaeWtnZTF4dUlDQWdJSEpsZEhWeWJpQjBhR2x6TG1WaFkyZ29ablZ1WTNScGIyNGdLQ2tnZTF4dUlDQWdJQ0FnWTI5dWMzUWdaR0YwWVNBOUlFOW1abU5oYm5aaGN5NW5aWFJQY2tOeVpXRjBaVWx1YzNSaGJtTmxLSFJvYVhNc0lHTnZibVpwWnlrN1hHNWNiaUFnSUNBZ0lHbG1JQ2gwZVhCbGIyWWdZMjl1Wm1sbklDRTlQU0FuYzNSeWFXNW5KeWtnZTF4dUlDQWdJQ0FnSUNCeVpYUjFjbTQ3WEc0Z0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUdsbUlDaGtZWFJoVzJOdmJtWnBaMTBnUFQwOUlIVnVaR1ZtYVc1bFpDQjhmQ0JqYjI1bWFXY3VjM1JoY25SelYybDBhQ2duWHljcElIeDhJR052Ym1acFp5QTlQVDBnSjJOdmJuTjBjblZqZEc5eUp5a2dlMXh1SUNBZ0lDQWdJQ0IwYUhKdmR5QnVaWGNnVkhsd1pVVnljbTl5S0dCT2J5QnRaWFJvYjJRZ2JtRnRaV1FnWENJa2UyTnZibVpwWjMxY0ltQXBPMXh1SUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0JrWVhSaFcyTnZibVpwWjEwb2RHaHBjeWs3WEc0Z0lDQWdmU2s3WEc0Z0lIMWNibHh1ZlZ4dUx5b3FYRzRnS2lBdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMxY2JpQXFJRVJoZEdFZ1FYQnBJR2x0Y0d4bGJXVnVkR0YwYVc5dVhHNGdLaUF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzFjYmlBcUwxeHVYRzVjYmtWMlpXNTBTR0Z1Wkd4bGNpNXZiaWhrYjJOMWJXVnVkQ3dnUlZaRlRsUmZRMHhKUTB0ZlJFRlVRVjlCVUVra01Td2dVMFZNUlVOVVQxSmZSRUZVUVY5VVQwZEhURVVrTVN3Z1puVnVZM1JwYjI0Z0tHVjJaVzUwS1NCN1hHNGdJR052Ym5OMElIUmhjbWRsZENBOUlHZGxkRVZzWlcxbGJuUkdjbTl0VTJWc1pXTjBiM0lvZEdocGN5azdYRzVjYmlBZ2FXWWdLRnNuUVNjc0lDZEJVa1ZCSjEwdWFXNWpiSFZrWlhNb2RHaHBjeTUwWVdkT1lXMWxLU2tnZTF4dUlDQWdJR1YyWlc1MExuQnlaWFpsYm5SRVpXWmhkV3gwS0NrN1hHNGdJSDFjYmx4dUlDQnBaaUFvYVhORWFYTmhZbXhsWkNoMGFHbHpLU2tnZTF4dUlDQWdJSEpsZEhWeWJqdGNiaUFnZlZ4dVhHNGdJRVYyWlc1MFNHRnVaR3hsY2k1dmJtVW9kR0Z5WjJWMExDQkZWa1ZPVkY5SVNVUkVSVTRrTWl3Z0tDa2dQVDRnZTF4dUlDQWdJQzh2SUdadlkzVnpJRzl1SUhSeWFXZG5aWElnZDJobGJpQnBkQ0JwY3lCamJHOXpaV1JjYmlBZ0lDQnBaaUFvYVhOV2FYTnBZbXhsS0hSb2FYTXBLU0I3WEc0Z0lDQWdJQ0IwYUdsekxtWnZZM1Z6S0NrN1hHNGdJQ0FnZlZ4dUlDQjlLVHNnTHk4Z1lYWnZhV1FnWTI5dVpteHBZM1FnZDJobGJpQmpiR2xqYTJsdVp5QmhJSFJ2WjJkc1pYSWdiMllnWVc0Z2IyWm1ZMkZ1ZG1GekxDQjNhR2xzWlNCaGJtOTBhR1Z5SUdseklHOXdaVzVjYmx4dUlDQmpiMjV6ZENCaGJHeFNaV0ZrZVU5d1pXNGdQU0JUWld4bFkzUnZja1Z1WjJsdVpTNW1hVzVrVDI1bEtFOVFSVTVmVTBWTVJVTlVUMUlwTzF4dVhHNGdJR2xtSUNoaGJHeFNaV0ZrZVU5d1pXNGdKaVlnWVd4c1VtVmhaSGxQY0dWdUlDRTlQU0IwWVhKblpYUXBJSHRjYmlBZ0lDQlBabVpqWVc1MllYTXVaMlYwU1c1emRHRnVZMlVvWVd4c1VtVmhaSGxQY0dWdUtTNW9hV1JsS0NrN1hHNGdJSDFjYmx4dUlDQmpiMjV6ZENCa1lYUmhJRDBnVDJabVkyRnVkbUZ6TG1kbGRFOXlRM0psWVhSbFNXNXpkR0Z1WTJVb2RHRnlaMlYwS1R0Y2JpQWdaR0YwWVM1MGIyZG5iR1VvZEdocGN5azdYRzU5S1R0Y2JrVjJaVzUwU0dGdVpHeGxjaTV2YmloM2FXNWtiM2NzSUVWV1JVNVVYMHhQUVVSZlJFRlVRVjlCVUVra01Td2dLQ2tnUFQ0Z1UyVnNaV04wYjNKRmJtZHBibVV1Wm1sdVpDaFBVRVZPWDFORlRFVkRWRTlTS1M1bWIzSkZZV05vS0dWc0lEMCtJRTltWm1OaGJuWmhjeTVuWlhSUGNrTnlaV0YwWlVsdWMzUmhibU5sS0dWc0tTNXphRzkzS0NrcEtUdGNibVZ1WVdKc1pVUnBjMjFwYzNOVWNtbG5aMlZ5S0U5bVptTmhiblpoY3lrN1hHNHZLaXBjYmlBcUlDMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExWeHVJQ29nYWxGMVpYSjVYRzRnS2lBdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMxY2JpQXFMMXh1WEc1a1pXWnBibVZLVVhWbGNubFFiSFZuYVc0b1QyWm1ZMkZ1ZG1GektUdGNibHh1THlvcVhHNGdLaUF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFZ4dUlDb2dRbTl2ZEhOMGNtRndJQ2gyTlM0eExqTXBPaUIxZEdsc0wzTmhibWwwYVhwbGNpNXFjMXh1SUNvZ1RHbGpaVzV6WldRZ2RXNWtaWElnVFVsVUlDaG9kSFJ3Y3pvdkwyZHBkR2gxWWk1amIyMHZkSGRpY3k5aWIyOTBjM1J5WVhBdllteHZZaTl0WVdsdUwweEpRMFZPVTBVcFhHNGdLaUF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFZ4dUlDb3ZYRzVqYjI1emRDQjFjbWxCZEhSeWFXSjFkR1Z6SUQwZ2JtVjNJRk5sZENoYkoySmhZMnRuY205MWJtUW5MQ0FuWTJsMFpTY3NJQ2RvY21WbUp5d2dKMmwwWlcxMGVYQmxKeXdnSjJ4dmJtZGtaWE5qSnl3Z0ozQnZjM1JsY2ljc0lDZHpjbU1uTENBbmVHeHBibXM2YUhKbFppZGRLVHRjYm1OdmJuTjBJRUZTU1VGZlFWUlVVa2xDVlZSRlgxQkJWRlJGVWs0Z1BTQXZYbUZ5YVdFdFcxeGNkeTFkS2lRdmFUdGNiaThxS2x4dUlDb2dRU0J3WVhSMFpYSnVJSFJvWVhRZ2NtVmpiMmR1YVhwbGN5QmhJR052YlcxdmJteDVJSFZ6WldaMWJDQnpkV0p6WlhRZ2IyWWdWVkpNY3lCMGFHRjBJR0Z5WlNCellXWmxMbHh1SUNwY2JpQXFJRk5vYjNWMGIzVjBJSFJ2SUVGdVozVnNZWElnYUhSMGNITTZMeTluYVhSb2RXSXVZMjl0TDJGdVozVnNZWEl2WVc1bmRXeGhjaTlpYkc5aUx6RXlMakl1ZUM5d1lXTnJZV2RsY3k5amIzSmxMM055WXk5ellXNXBkR2w2WVhScGIyNHZkWEpzWDNOaGJtbDBhWHBsY2k1MGMxeHVJQ292WEc1Y2JtTnZibk4wSUZOQlJrVmZWVkpNWDFCQlZGUkZVazRnUFNBdlhpZy9PaWcvT21oMGRIQnpQM3h0WVdsc2RHOThablJ3ZkhSbGJIeG1hV3hsZkhOdGN5azZmRnRlSXlZdk9qOWRLaWcvT2xzakx6OWRmQ1FwS1M5cE8xeHVMeW9xWEc0Z0tpQkJJSEJoZEhSbGNtNGdkR2hoZENCdFlYUmphR1Z6SUhOaFptVWdaR0YwWVNCVlVreHpMaUJQYm14NUlHMWhkR05vWlhNZ2FXMWhaMlVzSUhacFpHVnZJR0Z1WkNCaGRXUnBieUIwZVhCbGN5NWNiaUFxWEc0Z0tpQlRhRzkxZEc5MWRDQjBieUJCYm1kMWJHRnlJR2gwZEhCek9pOHZaMmwwYUhWaUxtTnZiUzloYm1kMWJHRnlMMkZ1WjNWc1lYSXZZbXh2WWk4eE1pNHlMbmd2Y0dGamEyRm5aWE12WTI5eVpTOXpjbU12YzJGdWFYUnBlbUYwYVc5dUwzVnliRjl6WVc1cGRHbDZaWEl1ZEhOY2JpQXFMMXh1WEc1amIyNXpkQ0JFUVZSQlgxVlNURjlRUVZSVVJWSk9JRDBnTDE1a1lYUmhPaWcvT21sdFlXZGxYRnd2S0Q4NlltMXdmR2RwWm54cWNHVm5mR3B3WjN4d2JtZDhkR2xtWm54M1pXSndLWHgyYVdSbGIxeGNMeWcvT20xd1pXZDhiWEEwZkc5blozeDNaV0p0S1h4aGRXUnBiMXhjTHlnL09tMXdNM3h2WjJGOGIyZG5mRzl3ZFhNcEtUdGlZWE5sTmpRc1cxeGNaQ3N2WVMxNlhTczlLaVF2YVR0Y2JseHVZMjl1YzNRZ1lXeHNiM2RsWkVGMGRISnBZblYwWlNBOUlDaGhkSFJ5YVdKMWRHVXNJR0ZzYkc5M1pXUkJkSFJ5YVdKMWRHVk1hWE4wS1NBOVBpQjdYRzRnSUdOdmJuTjBJR0YwZEhKcFluVjBaVTVoYldVZ1BTQmhkSFJ5YVdKMWRHVXVibTlrWlU1aGJXVXVkRzlNYjNkbGNrTmhjMlVvS1R0Y2JseHVJQ0JwWmlBb1lXeHNiM2RsWkVGMGRISnBZblYwWlV4cGMzUXVhVzVqYkhWa1pYTW9ZWFIwY21saWRYUmxUbUZ0WlNrcElIdGNiaUFnSUNCcFppQW9kWEpwUVhSMGNtbGlkWFJsY3k1b1lYTW9ZWFIwY21saWRYUmxUbUZ0WlNrcElIdGNiaUFnSUNBZ0lISmxkSFZ5YmlCQ2IyOXNaV0Z1S0ZOQlJrVmZWVkpNWDFCQlZGUkZVazR1ZEdWemRDaGhkSFJ5YVdKMWRHVXVibTlrWlZaaGJIVmxLU0I4ZkNCRVFWUkJYMVZTVEY5UVFWUlVSVkpPTG5SbGMzUW9ZWFIwY21saWRYUmxMbTV2WkdWV1lXeDFaU2twTzF4dUlDQWdJSDFjYmx4dUlDQWdJSEpsZEhWeWJpQjBjblZsTzF4dUlDQjlYRzVjYmlBZ1kyOXVjM1FnY21WblJYaHdJRDBnWVd4c2IzZGxaRUYwZEhKcFluVjBaVXhwYzNRdVptbHNkR1Z5S0dGMGRISnBZblYwWlZKbFoyVjRJRDArSUdGMGRISnBZblYwWlZKbFoyVjRJR2x1YzNSaGJtTmxiMllnVW1WblJYaHdLVHNnTHk4Z1EyaGxZMnNnYVdZZ1lTQnlaV2QxYkdGeUlHVjRjSEpsYzNOcGIyNGdkbUZzYVdSaGRHVnpJSFJvWlNCaGRIUnlhV0oxZEdVdVhHNWNiaUFnWm05eUlDaHNaWFFnYVNBOUlEQXNJR3hsYmlBOUlISmxaMFY0Y0M1c1pXNW5kR2c3SUdrZ1BDQnNaVzQ3SUdrckt5a2dlMXh1SUNBZ0lHbG1JQ2h5WldkRmVIQmJhVjB1ZEdWemRDaGhkSFJ5YVdKMWRHVk9ZVzFsS1NrZ2UxeHVJQ0FnSUNBZ2NtVjBkWEp1SUhSeWRXVTdYRzRnSUNBZ2ZWeHVJQ0I5WEc1Y2JpQWdjbVYwZFhKdUlHWmhiSE5sTzF4dWZUdGNibHh1WTI5dWMzUWdSR1ZtWVhWc2RFRnNiRzkzYkdsemRDQTlJSHRjYmlBZ0x5OGdSMnh2WW1Gc0lHRjBkSEpwWW5WMFpYTWdZV3hzYjNkbFpDQnZiaUJoYm5rZ2MzVndjR3hwWldRZ1pXeGxiV1Z1ZENCaVpXeHZkeTVjYmlBZ0p5b25PaUJiSjJOc1lYTnpKeXdnSjJScGNpY3NJQ2RwWkNjc0lDZHNZVzVuSnl3Z0ozSnZiR1VuTENCQlVrbEJYMEZVVkZKSlFsVlVSVjlRUVZSVVJWSk9YU3hjYmlBZ1lUb2dXeWQwWVhKblpYUW5MQ0FuYUhKbFppY3NJQ2QwYVhSc1pTY3NJQ2R5Wld3blhTeGNiaUFnWVhKbFlUb2dXMTBzWEc0Z0lHSTZJRnRkTEZ4dUlDQmljam9nVzEwc1hHNGdJR052YkRvZ1cxMHNYRzRnSUdOdlpHVTZJRnRkTEZ4dUlDQmthWFk2SUZ0ZExGeHVJQ0JsYlRvZ1cxMHNYRzRnSUdoeU9pQmJYU3hjYmlBZ2FERTZJRnRkTEZ4dUlDQm9Nam9nVzEwc1hHNGdJR2d6T2lCYlhTeGNiaUFnYURRNklGdGRMRnh1SUNCb05Ub2dXMTBzWEc0Z0lHZzJPaUJiWFN4Y2JpQWdhVG9nVzEwc1hHNGdJR2x0WnpvZ1d5ZHpjbU1uTENBbmMzSmpjMlYwSnl3Z0oyRnNkQ2NzSUNkMGFYUnNaU2NzSUNkM2FXUjBhQ2NzSUNkb1pXbG5hSFFuWFN4Y2JpQWdiR2s2SUZ0ZExGeHVJQ0J2YkRvZ1cxMHNYRzRnSUhBNklGdGRMRnh1SUNCd2NtVTZJRnRkTEZ4dUlDQnpPaUJiWFN4Y2JpQWdjMjFoYkd3NklGdGRMRnh1SUNCemNHRnVPaUJiWFN4Y2JpQWdjM1ZpT2lCYlhTeGNiaUFnYzNWd09pQmJYU3hjYmlBZ2MzUnliMjVuT2lCYlhTeGNiaUFnZFRvZ1cxMHNYRzRnSUhWc09pQmJYVnh1ZlR0Y2JtWjFibU4wYVc5dUlITmhibWwwYVhwbFNIUnRiQ2gxYm5OaFptVklkRzFzTENCaGJHeHZkMHhwYzNRc0lITmhibWwwYVhwbFJtNHBJSHRjYmlBZ2FXWWdLQ0YxYm5OaFptVklkRzFzTG14bGJtZDBhQ2tnZTF4dUlDQWdJSEpsZEhWeWJpQjFibk5oWm1WSWRHMXNPMXh1SUNCOVhHNWNiaUFnYVdZZ0tITmhibWwwYVhwbFJtNGdKaVlnZEhsd1pXOW1JSE5oYm1sMGFYcGxSbTRnUFQwOUlDZG1kVzVqZEdsdmJpY3BJSHRjYmlBZ0lDQnlaWFIxY200Z2MyRnVhWFJwZW1WR2JpaDFibk5oWm1WSWRHMXNLVHRjYmlBZ2ZWeHVYRzRnSUdOdmJuTjBJR1J2YlZCaGNuTmxjaUE5SUc1bGR5QjNhVzVrYjNjdVJFOU5VR0Z5YzJWeUtDazdYRzRnSUdOdmJuTjBJR055WldGMFpXUkViMk4xYldWdWRDQTlJR1J2YlZCaGNuTmxjaTV3WVhKelpVWnliMjFUZEhKcGJtY29kVzV6WVdabFNIUnRiQ3dnSjNSbGVIUXZhSFJ0YkNjcE8xeHVJQ0JqYjI1emRDQmxiR1Z0Wlc1MGN5QTlJRnRkTG1OdmJtTmhkQ2d1TGk1amNtVmhkR1ZrUkc5amRXMWxiblF1WW05a2VTNXhkV1Z5ZVZObGJHVmpkRzl5UVd4c0tDY3FKeWtwTzF4dVhHNGdJR1p2Y2lBb2JHVjBJR2tnUFNBd0xDQnNaVzRnUFNCbGJHVnRaVzUwY3k1c1pXNW5kR2c3SUdrZ1BDQnNaVzQ3SUdrckt5a2dlMXh1SUNBZ0lHTnZibk4wSUdWc1pXMWxiblFnUFNCbGJHVnRaVzUwYzF0cFhUdGNiaUFnSUNCamIyNXpkQ0JsYkdWdFpXNTBUbUZ0WlNBOUlHVnNaVzFsYm5RdWJtOWtaVTVoYldVdWRHOU1iM2RsY2tOaGMyVW9LVHRjYmx4dUlDQWdJR2xtSUNnaFQySnFaV04wTG10bGVYTW9ZV3hzYjNkTWFYTjBLUzVwYm1Oc2RXUmxjeWhsYkdWdFpXNTBUbUZ0WlNrcElIdGNiaUFnSUNBZ0lHVnNaVzFsYm5RdWNtVnRiM1psS0NrN1hHNGdJQ0FnSUNCamIyNTBhVzUxWlR0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JqYjI1emRDQmhkSFJ5YVdKMWRHVk1hWE4wSUQwZ1cxMHVZMjl1WTJGMEtDNHVMbVZzWlcxbGJuUXVZWFIwY21saWRYUmxjeWs3WEc0Z0lDQWdZMjl1YzNRZ1lXeHNiM2RsWkVGMGRISnBZblYwWlhNZ1BTQmJYUzVqYjI1allYUW9ZV3hzYjNkTWFYTjBXeWNxSjEwZ2ZId2dXMTBzSUdGc2JHOTNUR2x6ZEZ0bGJHVnRaVzUwVG1GdFpWMGdmSHdnVzEwcE8xeHVJQ0FnSUdGMGRISnBZblYwWlV4cGMzUXVabTl5UldGamFDaGhkSFJ5YVdKMWRHVWdQVDRnZTF4dUlDQWdJQ0FnYVdZZ0tDRmhiR3h2ZDJWa1FYUjBjbWxpZFhSbEtHRjBkSEpwWW5WMFpTd2dZV3hzYjNkbFpFRjBkSEpwWW5WMFpYTXBLU0I3WEc0Z0lDQWdJQ0FnSUdWc1pXMWxiblF1Y21WdGIzWmxRWFIwY21saWRYUmxLR0YwZEhKcFluVjBaUzV1YjJSbFRtRnRaU2s3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmU2s3WEc0Z0lIMWNibHh1SUNCeVpYUjFjbTRnWTNKbFlYUmxaRVJ2WTNWdFpXNTBMbUp2WkhrdWFXNXVaWEpJVkUxTU8xeHVmVnh1WEc0dktpcGNiaUFxSUMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdFhHNGdLaUJDYjI5MGMzUnlZWEFnS0hZMUxqRXVNeWs2SUhSdmIyeDBhWEF1YW5OY2JpQXFJRXhwWTJWdWMyVmtJSFZ1WkdWeUlFMUpWQ0FvYUhSMGNITTZMeTluYVhSb2RXSXVZMjl0TDNSM1luTXZZbTl2ZEhOMGNtRndMMkpzYjJJdmJXRnBiaTlNU1VORlRsTkZLVnh1SUNvZ0xTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMWNiaUFxTDF4dUx5b3FYRzRnS2lBdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMxY2JpQXFJRU52Ym5OMFlXNTBjMXh1SUNvZ0xTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdFhHNGdLaTljYmx4dVkyOXVjM1FnVGtGTlJTUTBJRDBnSjNSdmIyeDBhWEFuTzF4dVkyOXVjM1FnUkVGVVFWOUxSVmtrTkNBOUlDZGljeTUwYjI5c2RHbHdKenRjYm1OdmJuTjBJRVZXUlU1VVgwdEZXU1EwSUQwZ1lDNGtlMFJCVkVGZlMwVlpKRFI5WUR0Y2JtTnZibk4wSUVOTVFWTlRYMUJTUlVaSldDUXhJRDBnSjJKekxYUnZiMngwYVhBbk8xeHVZMjl1YzNRZ1JFbFRRVXhNVDFkRlJGOUJWRlJTU1VKVlZFVlRJRDBnYm1WM0lGTmxkQ2hiSjNOaGJtbDBhWHBsSnl3Z0oyRnNiRzkzVEdsemRDY3NJQ2R6WVc1cGRHbDZaVVp1SjEwcE8xeHVZMjl1YzNRZ1JHVm1ZWFZzZEZSNWNHVWtNeUE5SUh0Y2JpQWdZVzVwYldGMGFXOXVPaUFuWW05dmJHVmhiaWNzWEc0Z0lIUmxiWEJzWVhSbE9pQW5jM1J5YVc1bkp5eGNiaUFnZEdsMGJHVTZJQ2NvYzNSeWFXNW5mR1ZzWlcxbGJuUjhablZ1WTNScGIyNHBKeXhjYmlBZ2RISnBaMmRsY2pvZ0ozTjBjbWx1Wnljc1hHNGdJR1JsYkdGNU9pQW5LRzUxYldKbGNueHZZbXBsWTNRcEp5eGNiaUFnYUhSdGJEb2dKMkp2YjJ4bFlXNG5MRnh1SUNCelpXeGxZM1J2Y2pvZ0p5aHpkSEpwYm1kOFltOXZiR1ZoYmlrbkxGeHVJQ0J3YkdGalpXMWxiblE2SUNjb2MzUnlhVzVuZkdaMWJtTjBhVzl1S1Njc1hHNGdJRzltWm5ObGREb2dKeWhoY25KaGVYeHpkSEpwYm1kOFpuVnVZM1JwYjI0cEp5eGNiaUFnWTI5dWRHRnBibVZ5T2lBbktITjBjbWx1WjN4bGJHVnRaVzUwZkdKdmIyeGxZVzRwSnl4Y2JpQWdabUZzYkdKaFkydFFiR0ZqWlcxbGJuUnpPaUFuWVhKeVlYa25MRnh1SUNCaWIzVnVaR0Z5ZVRvZ0p5aHpkSEpwYm1kOFpXeGxiV1Z1ZENrbkxGeHVJQ0JqZFhOMGIyMURiR0Z6Y3pvZ0p5aHpkSEpwYm1kOFpuVnVZM1JwYjI0cEp5eGNiaUFnYzJGdWFYUnBlbVU2SUNkaWIyOXNaV0Z1Snl4Y2JpQWdjMkZ1YVhScGVtVkdiam9nSnlodWRXeHNmR1oxYm1OMGFXOXVLU2NzWEc0Z0lHRnNiRzkzVEdsemREb2dKMjlpYW1WamRDY3NYRzRnSUhCdmNIQmxja052Ym1acFp6b2dKeWh1ZFd4c2ZHOWlhbVZqZEh4bWRXNWpkR2x2YmlrblhHNTlPMXh1WTI5dWMzUWdRWFIwWVdOb2JXVnVkRTFoY0NBOUlIdGNiaUFnUVZWVVR6b2dKMkYxZEc4bkxGeHVJQ0JVVDFBNklDZDBiM0FuTEZ4dUlDQlNTVWRJVkRvZ2FYTlNWRXdvS1NBL0lDZHNaV1owSnlBNklDZHlhV2RvZENjc1hHNGdJRUpQVkZSUFRUb2dKMkp2ZEhSdmJTY3NYRzRnSUV4RlJsUTZJR2x6VWxSTUtDa2dQeUFuY21sbmFIUW5JRG9nSjJ4bFpuUW5YRzU5TzF4dVkyOXVjM1FnUkdWbVlYVnNkQ1F6SUQwZ2UxeHVJQ0JoYm1sdFlYUnBiMjQ2SUhSeWRXVXNYRzRnSUhSbGJYQnNZWFJsT2lBblBHUnBkaUJqYkdGemN6MWNJblJ2YjJ4MGFYQmNJaUJ5YjJ4bFBWd2lkRzl2YkhScGNGd2lQaWNnS3lBblBHUnBkaUJqYkdGemN6MWNJblJ2YjJ4MGFYQXRZWEp5YjNkY0lqNDhMMlJwZGo0bklDc2dKenhrYVhZZ1kyeGhjM005WENKMGIyOXNkR2x3TFdsdWJtVnlYQ0krUEM5a2FYWStKeUFySUNjOEwyUnBkajRuTEZ4dUlDQjBjbWxuWjJWeU9pQW5hRzkyWlhJZ1ptOWpkWE1uTEZ4dUlDQjBhWFJzWlRvZ0p5Y3NYRzRnSUdSbGJHRjVPaUF3TEZ4dUlDQm9kRzFzT2lCbVlXeHpaU3hjYmlBZ2MyVnNaV04wYjNJNklHWmhiSE5sTEZ4dUlDQndiR0ZqWlcxbGJuUTZJQ2QwYjNBbkxGeHVJQ0J2Wm1aelpYUTZJRnN3TENBd1hTeGNiaUFnWTI5dWRHRnBibVZ5T2lCbVlXeHpaU3hjYmlBZ1ptRnNiR0poWTJ0UWJHRmpaVzFsYm5Sek9pQmJKM1J2Y0Njc0lDZHlhV2RvZENjc0lDZGliM1IwYjIwbkxDQW5iR1ZtZENkZExGeHVJQ0JpYjNWdVpHRnllVG9nSjJOc2FYQndhVzVuVUdGeVpXNTBjeWNzWEc0Z0lHTjFjM1J2YlVOc1lYTnpPaUFuSnl4Y2JpQWdjMkZ1YVhScGVtVTZJSFJ5ZFdVc1hHNGdJSE5oYm1sMGFYcGxSbTQ2SUc1MWJHd3NYRzRnSUdGc2JHOTNUR2x6ZERvZ1JHVm1ZWFZzZEVGc2JHOTNiR2x6ZEN4Y2JpQWdjRzl3Y0dWeVEyOXVabWxuT2lCdWRXeHNYRzU5TzF4dVkyOXVjM1FnUlhabGJuUWtNaUE5SUh0Y2JpQWdTRWxFUlRvZ1lHaHBaR1VrZTBWV1JVNVVYMHRGV1NRMGZXQXNYRzRnSUVoSlJFUkZUam9nWUdocFpHUmxiaVI3UlZaRlRsUmZTMFZaSkRSOVlDeGNiaUFnVTBoUFZ6b2dZSE5vYjNja2UwVldSVTVVWDB0RldTUTBmV0FzWEc0Z0lGTklUMWRPT2lCZ2MyaHZkMjRrZTBWV1JVNVVYMHRGV1NRMGZXQXNYRzRnSUVsT1UwVlNWRVZFT2lCZ2FXNXpaWEowWldRa2UwVldSVTVVWDB0RldTUTBmV0FzWEc0Z0lFTk1TVU5MT2lCZ1kyeHBZMnNrZTBWV1JVNVVYMHRGV1NRMGZXQXNYRzRnSUVaUFExVlRTVTQ2SUdCbWIyTjFjMmx1Skh0RlZrVk9WRjlMUlZra05IMWdMRnh1SUNCR1QwTlZVMDlWVkRvZ1lHWnZZM1Z6YjNWMEpIdEZWa1ZPVkY5TFJWa2tOSDFnTEZ4dUlDQk5UMVZUUlVWT1ZFVlNPaUJnYlc5MWMyVmxiblJsY2lSN1JWWkZUbFJmUzBWWkpEUjlZQ3hjYmlBZ1RVOVZVMFZNUlVGV1JUb2dZRzF2ZFhObGJHVmhkbVVrZTBWV1JVNVVYMHRGV1NRMGZXQmNibjA3WEc1amIyNXpkQ0JEVEVGVFUxOU9RVTFGWDBaQlJFVWtNaUE5SUNkbVlXUmxKenRjYm1OdmJuTjBJRU5NUVZOVFgwNUJUVVZmVFU5RVFVd2dQU0FuYlc5a1lXd25PMXh1WTI5dWMzUWdRMHhCVTFOZlRrRk5SVjlUU0U5WEpESWdQU0FuYzJodmR5YzdYRzVqYjI1emRDQklUMVpGVWw5VFZFRlVSVjlUU0U5WElEMGdKM05vYjNjbk8xeHVZMjl1YzNRZ1NFOVdSVkpmVTFSQlZFVmZUMVZVSUQwZ0oyOTFkQ2M3WEc1amIyNXpkQ0JUUlV4RlExUlBVbDlVVDA5TVZFbFFYMGxPVGtWU0lEMGdKeTUwYjI5c2RHbHdMV2x1Ym1WeUp6dGNibU52Ym5OMElGTkZURVZEVkU5U1gwMVBSRUZNSUQwZ1lDNGtlME5NUVZOVFgwNUJUVVZmVFU5RVFVeDlZRHRjYm1OdmJuTjBJRVZXUlU1VVgwMVBSRUZNWDBoSlJFVWdQU0FuYUdsa1pTNWljeTV0YjJSaGJDYzdYRzVqYjI1emRDQlVVa2xIUjBWU1gwaFBWa1ZTSUQwZ0oyaHZkbVZ5Snp0Y2JtTnZibk4wSUZSU1NVZEhSVkpmUms5RFZWTWdQU0FuWm05amRYTW5PMXh1WTI5dWMzUWdWRkpKUjBkRlVsOURURWxEU3lBOUlDZGpiR2xqYXljN1hHNWpiMjV6ZENCVVVrbEhSMFZTWDAxQlRsVkJUQ0E5SUNkdFlXNTFZV3duTzF4dUx5b3FYRzRnS2lBdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMxY2JpQXFJRU5zWVhOeklFUmxabWx1YVhScGIyNWNiaUFxSUMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFZ4dUlDb3ZYRzVjYm1Oc1lYTnpJRlJ2YjJ4MGFYQWdaWGgwWlc1a2N5QkNZWE5sUTI5dGNHOXVaVzUwSUh0Y2JpQWdZMjl1YzNSeWRXTjBiM0lvWld4bGJXVnVkQ3dnWTI5dVptbG5LU0I3WEc0Z0lDQWdhV1lnS0hSNWNHVnZaaUJRYjNCd1pYSWdQVDA5SUNkMWJtUmxabWx1WldRbktTQjdYRzRnSUNBZ0lDQjBhSEp2ZHlCdVpYY2dWSGx3WlVWeWNtOXlLQ2RDYjI5MGMzUnlZWEJjWENkeklIUnZiMngwYVhCeklISmxjWFZwY21VZ1VHOXdjR1Z5SUNob2RIUndjem92TDNCdmNIQmxjaTVxY3k1dmNtY3BKeWs3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdjM1Z3WlhJb1pXeGxiV1Z1ZENrN0lDOHZJSEJ5YVhaaGRHVmNibHh1SUNBZ0lIUm9hWE11WDJselJXNWhZbXhsWkNBOUlIUnlkV1U3WEc0Z0lDQWdkR2hwY3k1ZmRHbHRaVzkxZENBOUlEQTdYRzRnSUNBZ2RHaHBjeTVmYUc5MlpYSlRkR0YwWlNBOUlDY25PMXh1SUNBZ0lIUm9hWE11WDJGamRHbDJaVlJ5YVdkblpYSWdQU0I3ZlR0Y2JpQWdJQ0IwYUdsekxsOXdiM0J3WlhJZ1BTQnVkV3hzT3lBdkx5QlFjbTkwWldOMFpXUmNibHh1SUNBZ0lIUm9hWE11WDJOdmJtWnBaeUE5SUhSb2FYTXVYMmRsZEVOdmJtWnBaeWhqYjI1bWFXY3BPMXh1SUNBZ0lIUm9hWE11ZEdsd0lEMGdiblZzYkR0Y2JseHVJQ0FnSUhSb2FYTXVYM05sZEV4cGMzUmxibVZ5Y3lncE8xeHVJQ0I5SUM4dklFZGxkSFJsY25OY2JseHVYRzRnSUhOMFlYUnBZeUJuWlhRZ1JHVm1ZWFZzZENncElIdGNiaUFnSUNCeVpYUjFjbTRnUkdWbVlYVnNkQ1F6TzF4dUlDQjlYRzVjYmlBZ2MzUmhkR2xqSUdkbGRDQk9RVTFGS0NrZ2UxeHVJQ0FnSUhKbGRIVnliaUJPUVUxRkpEUTdYRzRnSUgxY2JseHVJQ0J6ZEdGMGFXTWdaMlYwSUVWMlpXNTBLQ2tnZTF4dUlDQWdJSEpsZEhWeWJpQkZkbVZ1ZENReU8xeHVJQ0I5WEc1Y2JpQWdjM1JoZEdsaklHZGxkQ0JFWldaaGRXeDBWSGx3WlNncElIdGNiaUFnSUNCeVpYUjFjbTRnUkdWbVlYVnNkRlI1Y0dVa016dGNiaUFnZlNBdkx5QlFkV0pzYVdOY2JseHVYRzRnSUdWdVlXSnNaU2dwSUh0Y2JpQWdJQ0IwYUdsekxsOXBjMFZ1WVdKc1pXUWdQU0IwY25WbE8xeHVJQ0I5WEc1Y2JpQWdaR2x6WVdKc1pTZ3BJSHRjYmlBZ0lDQjBhR2x6TGw5cGMwVnVZV0pzWldRZ1BTQm1ZV3h6WlR0Y2JpQWdmVnh1WEc0Z0lIUnZaMmRzWlVWdVlXSnNaV1FvS1NCN1hHNGdJQ0FnZEdocGN5NWZhWE5GYm1GaWJHVmtJRDBnSVhSb2FYTXVYMmx6Ulc1aFlteGxaRHRjYmlBZ2ZWeHVYRzRnSUhSdloyZHNaU2hsZG1WdWRDa2dlMXh1SUNBZ0lHbG1JQ2doZEdocGN5NWZhWE5GYm1GaWJHVmtLU0I3WEc0Z0lDQWdJQ0J5WlhSMWNtNDdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2FXWWdLR1YyWlc1MEtTQjdYRzRnSUNBZ0lDQmpiMjV6ZENCamIyNTBaWGgwSUQwZ2RHaHBjeTVmYVc1cGRHbGhiR2w2WlU5dVJHVnNaV2RoZEdWa1ZHRnlaMlYwS0dWMlpXNTBLVHRjYmx4dUlDQWdJQ0FnWTI5dWRHVjRkQzVmWVdOMGFYWmxWSEpwWjJkbGNpNWpiR2xqYXlBOUlDRmpiMjUwWlhoMExsOWhZM1JwZG1WVWNtbG5aMlZ5TG1Oc2FXTnJPMXh1WEc0Z0lDQWdJQ0JwWmlBb1kyOXVkR1Y0ZEM1ZmFYTlhhWFJvUVdOMGFYWmxWSEpwWjJkbGNpZ3BLU0I3WEc0Z0lDQWdJQ0FnSUdOdmJuUmxlSFF1WDJWdWRHVnlLRzUxYkd3c0lHTnZiblJsZUhRcE8xeHVJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUNBZ1kyOXVkR1Y0ZEM1ZmJHVmhkbVVvYm5Wc2JDd2dZMjl1ZEdWNGRDazdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUdsbUlDaDBhR2x6TG1kbGRGUnBjRVZzWlcxbGJuUW9LUzVqYkdGemMweHBjM1F1WTI5dWRHRnBibk1vUTB4QlUxTmZUa0ZOUlY5VFNFOVhKRElwS1NCN1hHNGdJQ0FnSUNBZ0lIUm9hWE11WDJ4bFlYWmxLRzUxYkd3c0lIUm9hWE1wTzF4dVhHNGdJQ0FnSUNBZ0lISmxkSFZ5Ymp0Y2JpQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ2RHaHBjeTVmWlc1MFpYSW9iblZzYkN3Z2RHaHBjeWs3WEc0Z0lDQWdmVnh1SUNCOVhHNWNiaUFnWkdsemNHOXpaU2dwSUh0Y2JpQWdJQ0JqYkdWaGNsUnBiV1Z2ZFhRb2RHaHBjeTVmZEdsdFpXOTFkQ2s3WEc0Z0lDQWdSWFpsYm5SSVlXNWtiR1Z5TG05bVppaDBhR2x6TGw5bGJHVnRaVzUwTG1Oc2IzTmxjM1FvVTBWTVJVTlVUMUpmVFU5RVFVd3BMQ0JGVmtWT1ZGOU5UMFJCVEY5SVNVUkZMQ0IwYUdsekxsOW9hV1JsVFc5a1lXeElZVzVrYkdWeUtUdGNibHh1SUNBZ0lHbG1JQ2gwYUdsekxuUnBjQ2tnZTF4dUlDQWdJQ0FnZEdocGN5NTBhWEF1Y21WdGIzWmxLQ2s3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdkR2hwY3k1ZlpHbHpjRzl6WlZCdmNIQmxjaWdwTzF4dVhHNGdJQ0FnYzNWd1pYSXVaR2x6Y0c5elpTZ3BPMXh1SUNCOVhHNWNiaUFnYzJodmR5Z3BJSHRjYmlBZ0lDQnBaaUFvZEdocGN5NWZaV3hsYldWdWRDNXpkSGxzWlM1a2FYTndiR0Y1SUQwOVBTQW5ibTl1WlNjcElIdGNiaUFnSUNBZ0lIUm9jbTkzSUc1bGR5QkZjbkp2Y2lnblVHeGxZWE5sSUhWelpTQnphRzkzSUc5dUlIWnBjMmxpYkdVZ1pXeGxiV1Z1ZEhNbktUdGNiaUFnSUNCOVhHNWNiaUFnSUNCcFppQW9JU2gwYUdsekxtbHpWMmwwYUVOdmJuUmxiblFvS1NBbUppQjBhR2x6TGw5cGMwVnVZV0pzWldRcEtTQjdYRzRnSUNBZ0lDQnlaWFIxY200N1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnWTI5dWMzUWdjMmh2ZDBWMlpXNTBJRDBnUlhabGJuUklZVzVrYkdWeUxuUnlhV2RuWlhJb2RHaHBjeTVmWld4bGJXVnVkQ3dnZEdocGN5NWpiMjV6ZEhKMVkzUnZjaTVGZG1WdWRDNVRTRTlYS1R0Y2JpQWdJQ0JqYjI1emRDQnphR0ZrYjNkU2IyOTBJRDBnWm1sdVpGTm9ZV1J2ZDFKdmIzUW9kR2hwY3k1ZlpXeGxiV1Z1ZENrN1hHNGdJQ0FnWTI5dWMzUWdhWE5KYmxSb1pVUnZiU0E5SUhOb1lXUnZkMUp2YjNRZ1BUMDlJRzUxYkd3Z1B5QjBhR2x6TGw5bGJHVnRaVzUwTG05M2JtVnlSRzlqZFcxbGJuUXVaRzlqZFcxbGJuUkZiR1Z0Wlc1MExtTnZiblJoYVc1ektIUm9hWE11WDJWc1pXMWxiblFwSURvZ2MyaGhaRzkzVW05dmRDNWpiMjUwWVdsdWN5aDBhR2x6TGw5bGJHVnRaVzUwS1R0Y2JseHVJQ0FnSUdsbUlDaHphRzkzUlhabGJuUXVaR1ZtWVhWc2RGQnlaWFpsYm5SbFpDQjhmQ0FoYVhOSmJsUm9aVVJ2YlNrZ2UxeHVJQ0FnSUNBZ2NtVjBkWEp1TzF4dUlDQWdJSDBnTHk4Z1FTQjBjbWxqYXlCMGJ5QnlaV055WldGMFpTQmhJSFJ2YjJ4MGFYQWdhVzRnWTJGelpTQmhJRzVsZHlCMGFYUnNaU0JwY3lCbmFYWmxiaUJpZVNCMWMybHVaeUIwYUdVZ1RrOVVJR1J2WTNWdFpXNTBaV1FnWUdSaGRHRXRZbk10YjNKcFoybHVZV3d0ZEdsMGJHVmdYRzRnSUNBZ0x5OGdWR2hwY3lCM2FXeHNJR0psSUhKbGJXOTJaV1FnYkdGMFpYSWdhVzRnWm1GMmIzSWdiMllnWVNCZ2MyVjBRMjl1ZEdWdWRHQWdiV1YwYUc5a1hHNWNibHh1SUNBZ0lHbG1JQ2gwYUdsekxtTnZibk4wY25WamRHOXlMazVCVFVVZ1BUMDlJQ2QwYjI5c2RHbHdKeUFtSmlCMGFHbHpMblJwY0NBbUppQjBhR2x6TG1kbGRGUnBkR3hsS0NrZ0lUMDlJSFJvYVhNdWRHbHdMbkYxWlhKNVUyVnNaV04wYjNJb1UwVk1SVU5VVDFKZlZFOVBURlJKVUY5SlRrNUZVaWt1YVc1dVpYSklWRTFNS1NCN1hHNGdJQ0FnSUNCMGFHbHpMbDlrYVhOd2IzTmxVRzl3Y0dWeUtDazdYRzVjYmlBZ0lDQWdJSFJvYVhNdWRHbHdMbkpsYlc5MlpTZ3BPMXh1SUNBZ0lDQWdkR2hwY3k1MGFYQWdQU0J1ZFd4c08xeHVJQ0FnSUgxY2JseHVJQ0FnSUdOdmJuTjBJSFJwY0NBOUlIUm9hWE11WjJWMFZHbHdSV3hsYldWdWRDZ3BPMXh1SUNBZ0lHTnZibk4wSUhScGNFbGtJRDBnWjJWMFZVbEVLSFJvYVhNdVkyOXVjM1J5ZFdOMGIzSXVUa0ZOUlNrN1hHNGdJQ0FnZEdsd0xuTmxkRUYwZEhKcFluVjBaU2duYVdRbkxDQjBhWEJKWkNrN1hHNWNiaUFnSUNCMGFHbHpMbDlsYkdWdFpXNTBMbk5sZEVGMGRISnBZblYwWlNnbllYSnBZUzFrWlhOamNtbGlaV1JpZVNjc0lIUnBjRWxrS1R0Y2JseHVJQ0FnSUdsbUlDaDBhR2x6TGw5amIyNW1hV2N1WVc1cGJXRjBhVzl1S1NCN1hHNGdJQ0FnSUNCMGFYQXVZMnhoYzNOTWFYTjBMbUZrWkNoRFRFRlRVMTlPUVUxRlgwWkJSRVVrTWlrN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnWTI5dWMzUWdjR3hoWTJWdFpXNTBJRDBnZEhsd1pXOW1JSFJvYVhNdVgyTnZibVpwWnk1d2JHRmpaVzFsYm5RZ1BUMDlJQ2RtZFc1amRHbHZiaWNnUHlCMGFHbHpMbDlqYjI1bWFXY3VjR3hoWTJWdFpXNTBMbU5oYkd3b2RHaHBjeXdnZEdsd0xDQjBhR2x6TGw5bGJHVnRaVzUwS1NBNklIUm9hWE11WDJOdmJtWnBaeTV3YkdGalpXMWxiblE3WEc1Y2JpQWdJQ0JqYjI1emRDQmhkSFJoWTJodFpXNTBJRDBnZEdocGN5NWZaMlYwUVhSMFlXTm9iV1Z1ZENod2JHRmpaVzFsYm5RcE8xeHVYRzRnSUNBZ2RHaHBjeTVmWVdSa1FYUjBZV05vYldWdWRFTnNZWE56S0dGMGRHRmphRzFsYm5RcE8xeHVYRzRnSUNBZ1kyOXVjM1FnZTF4dUlDQWdJQ0FnWTI5dWRHRnBibVZ5WEc0Z0lDQWdmU0E5SUhSb2FYTXVYMk52Ym1acFp6dGNiaUFnSUNCRVlYUmhMbk5sZENoMGFYQXNJSFJvYVhNdVkyOXVjM1J5ZFdOMGIzSXVSRUZVUVY5TFJWa3NJSFJvYVhNcE8xeHVYRzRnSUNBZ2FXWWdLQ0YwYUdsekxsOWxiR1Z0Wlc1MExtOTNibVZ5Ukc5amRXMWxiblF1Wkc5amRXMWxiblJGYkdWdFpXNTBMbU52Ym5SaGFXNXpLSFJvYVhNdWRHbHdLU2tnZTF4dUlDQWdJQ0FnWTI5dWRHRnBibVZ5TG1Gd2NHVnVaQ2gwYVhBcE8xeHVJQ0FnSUNBZ1JYWmxiblJJWVc1a2JHVnlMblJ5YVdkblpYSW9kR2hwY3k1ZlpXeGxiV1Z1ZEN3Z2RHaHBjeTVqYjI1emRISjFZM1J2Y2k1RmRtVnVkQzVKVGxORlVsUkZSQ2s3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdhV1lnS0hSb2FYTXVYM0J2Y0hCbGNpa2dlMXh1SUNBZ0lDQWdkR2hwY3k1ZmNHOXdjR1Z5TG5Wd1pHRjBaU2dwTzF4dUlDQWdJSDBnWld4elpTQjdYRzRnSUNBZ0lDQjBhR2x6TGw5d2IzQndaWElnUFNCUWIzQndaWEl1WTNKbFlYUmxVRzl3Y0dWeUtIUm9hWE11WDJWc1pXMWxiblFzSUhScGNDd2dkR2hwY3k1ZloyVjBVRzl3Y0dWeVEyOXVabWxuS0dGMGRHRmphRzFsYm5RcEtUdGNiaUFnSUNCOVhHNWNiaUFnSUNCMGFYQXVZMnhoYzNOTWFYTjBMbUZrWkNoRFRFRlRVMTlPUVUxRlgxTklUMWNrTWlrN1hHNWNiaUFnSUNCamIyNXpkQ0JqZFhOMGIyMURiR0Z6Y3lBOUlIUm9hWE11WDNKbGMyOXNkbVZRYjNOemFXSnNaVVoxYm1OMGFXOXVLSFJvYVhNdVgyTnZibVpwWnk1amRYTjBiMjFEYkdGemN5azdYRzVjYmlBZ0lDQnBaaUFvWTNWemRHOXRRMnhoYzNNcElIdGNiaUFnSUNBZ0lIUnBjQzVqYkdGemMweHBjM1F1WVdSa0tDNHVMbU4xYzNSdmJVTnNZWE56TG5Od2JHbDBLQ2NnSnlrcE8xeHVJQ0FnSUgwZ0x5OGdTV1lnZEdocGN5QnBjeUJoSUhSdmRXTm9MV1Z1WVdKc1pXUWdaR1YyYVdObElIZGxJR0ZrWkNCbGVIUnlZVnh1SUNBZ0lDOHZJR1Z0Y0hSNUlHMXZkWE5sYjNabGNpQnNhWE4wWlc1bGNuTWdkRzhnZEdobElHSnZaSGtuY3lCcGJXMWxaR2xoZEdVZ1kyaHBiR1J5Wlc0N1hHNGdJQ0FnTHk4Z2IyNXNlU0J1WldWa1pXUWdZbVZqWVhWelpTQnZaaUJpY205clpXNGdaWFpsYm5RZ1pHVnNaV2RoZEdsdmJpQnZiaUJwVDFOY2JpQWdJQ0F2THlCb2RIUndjem92TDNkM2R5NXhkV2x5YTNOdGIyUmxMbTl5Wnk5aWJHOW5MMkZ5WTJocGRtVnpMekl3TVRRdk1ESXZiVzkxYzJWZlpYWmxiblJmWW5WaUxtaDBiV3hjYmx4dVhHNGdJQ0FnYVdZZ0tDZHZiblJ2ZFdOb2MzUmhjblFuSUdsdUlHUnZZM1Z0Wlc1MExtUnZZM1Z0Wlc1MFJXeGxiV1Z1ZENrZ2UxeHVJQ0FnSUNBZ1cxMHVZMjl1WTJGMEtDNHVMbVJ2WTNWdFpXNTBMbUp2WkhrdVkyaHBiR1J5Wlc0cExtWnZja1ZoWTJnb1pXeGxiV1Z1ZENBOVBpQjdYRzRnSUNBZ0lDQWdJRVYyWlc1MFNHRnVaR3hsY2k1dmJpaGxiR1Z0Wlc1MExDQW5iVzkxYzJWdmRtVnlKeXdnYm05dmNDazdYRzRnSUNBZ0lDQjlLVHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQmpiMjV6ZENCamIyMXdiR1YwWlNBOUlDZ3BJRDArSUh0Y2JpQWdJQ0FnSUdOdmJuTjBJSEJ5WlhaSWIzWmxjbE4wWVhSbElEMGdkR2hwY3k1ZmFHOTJaWEpUZEdGMFpUdGNiaUFnSUNBZ0lIUm9hWE11WDJodmRtVnlVM1JoZEdVZ1BTQnVkV3hzTzF4dUlDQWdJQ0FnUlhabGJuUklZVzVrYkdWeUxuUnlhV2RuWlhJb2RHaHBjeTVmWld4bGJXVnVkQ3dnZEdocGN5NWpiMjV6ZEhKMVkzUnZjaTVGZG1WdWRDNVRTRTlYVGlrN1hHNWNiaUFnSUNBZ0lHbG1JQ2h3Y21WMlNHOTJaWEpUZEdGMFpTQTlQVDBnU0U5V1JWSmZVMVJCVkVWZlQxVlVLU0I3WEc0Z0lDQWdJQ0FnSUhSb2FYTXVYMnhsWVhabEtHNTFiR3dzSUhSb2FYTXBPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lIMDdYRzVjYmlBZ0lDQmpiMjV6ZENCcGMwRnVhVzFoZEdWa0lEMGdkR2hwY3k1MGFYQXVZMnhoYzNOTWFYTjBMbU52Ym5SaGFXNXpLRU5NUVZOVFgwNUJUVVZmUmtGRVJTUXlLVHRjYmx4dUlDQWdJSFJvYVhNdVgzRjFaWFZsUTJGc2JHSmhZMnNvWTI5dGNHeGxkR1VzSUhSb2FYTXVkR2x3TENCcGMwRnVhVzFoZEdWa0tUdGNiaUFnZlZ4dVhHNGdJR2hwWkdVb0tTQjdYRzRnSUNBZ2FXWWdLQ0YwYUdsekxsOXdiM0J3WlhJcElIdGNiaUFnSUNBZ0lISmxkSFZ5Ymp0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JqYjI1emRDQjBhWEFnUFNCMGFHbHpMbWRsZEZScGNFVnNaVzFsYm5Rb0tUdGNibHh1SUNBZ0lHTnZibk4wSUdOdmJYQnNaWFJsSUQwZ0tDa2dQVDRnZTF4dUlDQWdJQ0FnYVdZZ0tIUm9hWE11WDJselYybDBhRUZqZEdsMlpWUnlhV2RuWlhJb0tTa2dlMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNDdYRzRnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJR2xtSUNoMGFHbHpMbDlvYjNabGNsTjBZWFJsSUNFOVBTQklUMVpGVWw5VFZFRlVSVjlUU0U5WEtTQjdYRzRnSUNBZ0lDQWdJSFJwY0M1eVpXMXZkbVVvS1R0Y2JpQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ2RHaHBjeTVmWTJ4bFlXNVVhWEJEYkdGemN5Z3BPMXh1WEc0Z0lDQWdJQ0IwYUdsekxsOWxiR1Z0Wlc1MExuSmxiVzkyWlVGMGRISnBZblYwWlNnbllYSnBZUzFrWlhOamNtbGlaV1JpZVNjcE8xeHVYRzRnSUNBZ0lDQkZkbVZ1ZEVoaGJtUnNaWEl1ZEhKcFoyZGxjaWgwYUdsekxsOWxiR1Z0Wlc1MExDQjBhR2x6TG1OdmJuTjBjblZqZEc5eUxrVjJaVzUwTGtoSlJFUkZUaWs3WEc1Y2JpQWdJQ0FnSUhSb2FYTXVYMlJwYzNCdmMyVlFiM0J3WlhJb0tUdGNiaUFnSUNCOU8xeHVYRzRnSUNBZ1kyOXVjM1FnYUdsa1pVVjJaVzUwSUQwZ1JYWmxiblJJWVc1a2JHVnlMblJ5YVdkblpYSW9kR2hwY3k1ZlpXeGxiV1Z1ZEN3Z2RHaHBjeTVqYjI1emRISjFZM1J2Y2k1RmRtVnVkQzVJU1VSRktUdGNibHh1SUNBZ0lHbG1JQ2hvYVdSbFJYWmxiblF1WkdWbVlYVnNkRkJ5WlhabGJuUmxaQ2tnZTF4dUlDQWdJQ0FnY21WMGRYSnVPMXh1SUNBZ0lIMWNibHh1SUNBZ0lIUnBjQzVqYkdGemMweHBjM1F1Y21WdGIzWmxLRU5NUVZOVFgwNUJUVVZmVTBoUFZ5UXlLVHNnTHk4Z1NXWWdkR2hwY3lCcGN5QmhJSFJ2ZFdOb0xXVnVZV0pzWldRZ1pHVjJhV05sSUhkbElISmxiVzkyWlNCMGFHVWdaWGgwY21GY2JpQWdJQ0F2THlCbGJYQjBlU0J0YjNWelpXOTJaWElnYkdsemRHVnVaWEp6SUhkbElHRmtaR1ZrSUdadmNpQnBUMU1nYzNWd2NHOXlkRnh1WEc0Z0lDQWdhV1lnS0NkdmJuUnZkV05vYzNSaGNuUW5JR2x1SUdSdlkzVnRaVzUwTG1SdlkzVnRaVzUwUld4bGJXVnVkQ2tnZTF4dUlDQWdJQ0FnVzEwdVkyOXVZMkYwS0M0dUxtUnZZM1Z0Wlc1MExtSnZaSGt1WTJocGJHUnlaVzRwTG1admNrVmhZMmdvWld4bGJXVnVkQ0E5UGlCRmRtVnVkRWhoYm1Sc1pYSXViMlptS0dWc1pXMWxiblFzSUNkdGIzVnpaVzkyWlhJbkxDQnViMjl3S1NrN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnZEdocGN5NWZZV04wYVhabFZISnBaMmRsY2x0VVVrbEhSMFZTWDBOTVNVTkxYU0E5SUdaaGJITmxPMXh1SUNBZ0lIUm9hWE11WDJGamRHbDJaVlJ5YVdkblpYSmJWRkpKUjBkRlVsOUdUME5WVTEwZ1BTQm1ZV3h6WlR0Y2JpQWdJQ0IwYUdsekxsOWhZM1JwZG1WVWNtbG5aMlZ5VzFSU1NVZEhSVkpmU0U5V1JWSmRJRDBnWm1Gc2MyVTdYRzRnSUNBZ1kyOXVjM1FnYVhOQmJtbHRZWFJsWkNBOUlIUm9hWE11ZEdsd0xtTnNZWE56VEdsemRDNWpiMjUwWVdsdWN5aERURUZUVTE5T1FVMUZYMFpCUkVVa01pazdYRzVjYmlBZ0lDQjBhR2x6TGw5eGRXVjFaVU5oYkd4aVlXTnJLR052YlhCc1pYUmxMQ0IwYUdsekxuUnBjQ3dnYVhOQmJtbHRZWFJsWkNrN1hHNWNiaUFnSUNCMGFHbHpMbDlvYjNabGNsTjBZWFJsSUQwZ0p5YzdYRzRnSUgxY2JseHVJQ0IxY0dSaGRHVW9LU0I3WEc0Z0lDQWdhV1lnS0hSb2FYTXVYM0J2Y0hCbGNpQWhQVDBnYm5Wc2JDa2dlMXh1SUNBZ0lDQWdkR2hwY3k1ZmNHOXdjR1Z5TG5Wd1pHRjBaU2dwTzF4dUlDQWdJSDFjYmlBZ2ZTQXZMeUJRY205MFpXTjBaV1JjYmx4dVhHNGdJR2x6VjJsMGFFTnZiblJsYm5Rb0tTQjdYRzRnSUNBZ2NtVjBkWEp1SUVKdmIyeGxZVzRvZEdocGN5NW5aWFJVYVhSc1pTZ3BLVHRjYmlBZ2ZWeHVYRzRnSUdkbGRGUnBjRVZzWlcxbGJuUW9LU0I3WEc0Z0lDQWdhV1lnS0hSb2FYTXVkR2x3S1NCN1hHNGdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTBhWEE3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdZMjl1YzNRZ1pXeGxiV1Z1ZENBOUlHUnZZM1Z0Wlc1MExtTnlaV0YwWlVWc1pXMWxiblFvSjJScGRpY3BPMXh1SUNBZ0lHVnNaVzFsYm5RdWFXNXVaWEpJVkUxTUlEMGdkR2hwY3k1ZlkyOXVabWxuTG5SbGJYQnNZWFJsTzF4dUlDQWdJR052Ym5OMElIUnBjQ0E5SUdWc1pXMWxiblF1WTJocGJHUnlaVzViTUYwN1hHNGdJQ0FnZEdocGN5NXpaWFJEYjI1MFpXNTBLSFJwY0NrN1hHNGdJQ0FnZEdsd0xtTnNZWE56VEdsemRDNXlaVzF2ZG1Vb1EweEJVMU5mVGtGTlJWOUdRVVJGSkRJc0lFTk1RVk5UWDA1QlRVVmZVMGhQVnlReUtUdGNiaUFnSUNCMGFHbHpMblJwY0NBOUlIUnBjRHRjYmlBZ0lDQnlaWFIxY200Z2RHaHBjeTUwYVhBN1hHNGdJSDFjYmx4dUlDQnpaWFJEYjI1MFpXNTBLSFJwY0NrZ2UxeHVJQ0FnSUhSb2FYTXVYM05oYm1sMGFYcGxRVzVrVTJWMFEyOXVkR1Z1ZENoMGFYQXNJSFJvYVhNdVoyVjBWR2wwYkdVb0tTd2dVMFZNUlVOVVQxSmZWRTlQVEZSSlVGOUpUazVGVWlrN1hHNGdJSDFjYmx4dUlDQmZjMkZ1YVhScGVtVkJibVJUWlhSRGIyNTBaVzUwS0hSbGJYQnNZWFJsTENCamIyNTBaVzUwTENCelpXeGxZM1J2Y2lrZ2UxeHVJQ0FnSUdOdmJuTjBJSFJsYlhCc1lYUmxSV3hsYldWdWRDQTlJRk5sYkdWamRHOXlSVzVuYVc1bExtWnBibVJQYm1Vb2MyVnNaV04wYjNJc0lIUmxiWEJzWVhSbEtUdGNibHh1SUNBZ0lHbG1JQ2doWTI5dWRHVnVkQ0FtSmlCMFpXMXdiR0YwWlVWc1pXMWxiblFwSUh0Y2JpQWdJQ0FnSUhSbGJYQnNZWFJsUld4bGJXVnVkQzV5WlcxdmRtVW9LVHRjYmlBZ0lDQWdJSEpsZEhWeWJqdGNiaUFnSUNCOUlDOHZJSGRsSUhWelpTQmhjSEJsYm1RZ1ptOXlJR2gwYld3Z2IySnFaV04wY3lCMGJ5QnRZV2x1ZEdGcGJpQnFjeUJsZG1WdWRITmNibHh1WEc0Z0lDQWdkR2hwY3k1elpYUkZiR1Z0Wlc1MFEyOXVkR1Z1ZENoMFpXMXdiR0YwWlVWc1pXMWxiblFzSUdOdmJuUmxiblFwTzF4dUlDQjlYRzVjYmlBZ2MyVjBSV3hsYldWdWRFTnZiblJsYm5Rb1pXeGxiV1Z1ZEN3Z1kyOXVkR1Z1ZENrZ2UxeHVJQ0FnSUdsbUlDaGxiR1Z0Wlc1MElEMDlQU0J1ZFd4c0tTQjdYRzRnSUNBZ0lDQnlaWFIxY200N1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnYVdZZ0tHbHpSV3hsYldWdWRDaGpiMjUwWlc1MEtTa2dlMXh1SUNBZ0lDQWdZMjl1ZEdWdWRDQTlJR2RsZEVWc1pXMWxiblFvWTI5dWRHVnVkQ2s3SUM4dklHTnZiblJsYm5RZ2FYTWdZU0JFVDAwZ2JtOWtaU0J2Y2lCaElHcFJkV1Z5ZVZ4dVhHNGdJQ0FnSUNCcFppQW9kR2hwY3k1ZlkyOXVabWxuTG1oMGJXd3BJSHRjYmlBZ0lDQWdJQ0FnYVdZZ0tHTnZiblJsYm5RdWNHRnlaVzUwVG05a1pTQWhQVDBnWld4bGJXVnVkQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lHVnNaVzFsYm5RdWFXNXVaWEpJVkUxTUlEMGdKeWM3WEc0Z0lDQWdJQ0FnSUNBZ1pXeGxiV1Z1ZEM1aGNIQmxibVFvWTI5dWRHVnVkQ2s3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0FnSUdWc1pXMWxiblF1ZEdWNGRFTnZiblJsYm5RZ1BTQmpiMjUwWlc1MExuUmxlSFJEYjI1MFpXNTBPMXh1SUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0J5WlhSMWNtNDdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2FXWWdLSFJvYVhNdVgyTnZibVpwWnk1b2RHMXNLU0I3WEc0Z0lDQWdJQ0JwWmlBb2RHaHBjeTVmWTI5dVptbG5Mbk5oYm1sMGFYcGxLU0I3WEc0Z0lDQWdJQ0FnSUdOdmJuUmxiblFnUFNCellXNXBkR2w2WlVoMGJXd29ZMjl1ZEdWdWRDd2dkR2hwY3k1ZlkyOXVabWxuTG1Gc2JHOTNUR2x6ZEN3Z2RHaHBjeTVmWTI5dVptbG5Mbk5oYm1sMGFYcGxSbTRwTzF4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNCbGJHVnRaVzUwTG1sdWJtVnlTRlJOVENBOUlHTnZiblJsYm5RN1hHNGdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJR1ZzWlcxbGJuUXVkR1Y0ZEVOdmJuUmxiblFnUFNCamIyNTBaVzUwTzF4dUlDQWdJSDFjYmlBZ2ZWeHVYRzRnSUdkbGRGUnBkR3hsS0NrZ2UxeHVJQ0FnSUdOdmJuTjBJSFJwZEd4bElEMGdkR2hwY3k1ZlpXeGxiV1Z1ZEM1blpYUkJkSFJ5YVdKMWRHVW9KMlJoZEdFdFluTXRiM0pwWjJsdVlXd3RkR2wwYkdVbktTQjhmQ0IwYUdsekxsOWpiMjVtYVdjdWRHbDBiR1U3WEc1Y2JpQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZmNtVnpiMngyWlZCdmMzTnBZbXhsUm5WdVkzUnBiMjRvZEdsMGJHVXBPMXh1SUNCOVhHNWNiaUFnZFhCa1lYUmxRWFIwWVdOb2JXVnVkQ2hoZEhSaFkyaHRaVzUwS1NCN1hHNGdJQ0FnYVdZZ0tHRjBkR0ZqYUcxbGJuUWdQVDA5SUNkeWFXZG9kQ2NwSUh0Y2JpQWdJQ0FnSUhKbGRIVnliaUFuWlc1a0p6dGNiaUFnSUNCOVhHNWNiaUFnSUNCcFppQW9ZWFIwWVdOb2JXVnVkQ0E5UFQwZ0oyeGxablFuS1NCN1hHNGdJQ0FnSUNCeVpYUjFjbTRnSjNOMFlYSjBKenRjYmlBZ0lDQjlYRzVjYmlBZ0lDQnlaWFIxY200Z1lYUjBZV05vYldWdWREdGNiaUFnZlNBdkx5QlFjbWwyWVhSbFhHNWNibHh1SUNCZmFXNXBkR2xoYkdsNlpVOXVSR1ZzWldkaGRHVmtWR0Z5WjJWMEtHVjJaVzUwTENCamIyNTBaWGgwS1NCN1hHNGdJQ0FnY21WMGRYSnVJR052Ym5SbGVIUWdmSHdnZEdocGN5NWpiMjV6ZEhKMVkzUnZjaTVuWlhSUGNrTnlaV0YwWlVsdWMzUmhibU5sS0dWMlpXNTBMbVJsYkdWbllYUmxWR0Z5WjJWMExDQjBhR2x6TGw5blpYUkVaV3hsWjJGMFpVTnZibVpwWnlncEtUdGNiaUFnZlZ4dVhHNGdJRjluWlhSUFptWnpaWFFvS1NCN1hHNGdJQ0FnWTI5dWMzUWdlMXh1SUNBZ0lDQWdiMlptYzJWMFhHNGdJQ0FnZlNBOUlIUm9hWE11WDJOdmJtWnBaenRjYmx4dUlDQWdJR2xtSUNoMGVYQmxiMllnYjJabWMyVjBJRDA5UFNBbmMzUnlhVzVuSnlrZ2UxeHVJQ0FnSUNBZ2NtVjBkWEp1SUc5bVpuTmxkQzV6Y0d4cGRDZ25MQ2NwTG0xaGNDaDJZV3dnUFQ0Z1RuVnRZbVZ5TG5CaGNuTmxTVzUwS0haaGJDd2dNVEFwS1R0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JwWmlBb2RIbHdaVzltSUc5bVpuTmxkQ0E5UFQwZ0oyWjFibU4wYVc5dUp5a2dlMXh1SUNBZ0lDQWdjbVYwZFhKdUlIQnZjSEJsY2tSaGRHRWdQVDRnYjJabWMyVjBLSEJ2Y0hCbGNrUmhkR0VzSUhSb2FYTXVYMlZzWlcxbGJuUXBPMXh1SUNBZ0lIMWNibHh1SUNBZ0lISmxkSFZ5YmlCdlptWnpaWFE3WEc0Z0lIMWNibHh1SUNCZmNtVnpiMngyWlZCdmMzTnBZbXhsUm5WdVkzUnBiMjRvWTI5dWRHVnVkQ2tnZTF4dUlDQWdJSEpsZEhWeWJpQjBlWEJsYjJZZ1kyOXVkR1Z1ZENBOVBUMGdKMloxYm1OMGFXOXVKeUEvSUdOdmJuUmxiblF1WTJGc2JDaDBhR2x6TGw5bGJHVnRaVzUwS1NBNklHTnZiblJsYm5RN1hHNGdJSDFjYmx4dUlDQmZaMlYwVUc5d2NHVnlRMjl1Wm1sbktHRjBkR0ZqYUcxbGJuUXBJSHRjYmlBZ0lDQmpiMjV6ZENCa1pXWmhkV3gwUW5OUWIzQndaWEpEYjI1bWFXY2dQU0I3WEc0Z0lDQWdJQ0J3YkdGalpXMWxiblE2SUdGMGRHRmphRzFsYm5Rc1hHNGdJQ0FnSUNCdGIyUnBabWxsY25NNklGdDdYRzRnSUNBZ0lDQWdJRzVoYldVNklDZG1iR2x3Snl4Y2JpQWdJQ0FnSUNBZ2IzQjBhVzl1Y3pvZ2UxeHVJQ0FnSUNBZ0lDQWdJR1poYkd4aVlXTnJVR3hoWTJWdFpXNTBjem9nZEdocGN5NWZZMjl1Wm1sbkxtWmhiR3hpWVdOclVHeGhZMlZ0Wlc1MGMxeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQjlMQ0I3WEc0Z0lDQWdJQ0FnSUc1aGJXVTZJQ2R2Wm1aelpYUW5MRnh1SUNBZ0lDQWdJQ0J2Y0hScGIyNXpPaUI3WEc0Z0lDQWdJQ0FnSUNBZ2IyWm1jMlYwT2lCMGFHbHpMbDluWlhSUFptWnpaWFFvS1Z4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNCOUxDQjdYRzRnSUNBZ0lDQWdJRzVoYldVNklDZHdjbVYyWlc1MFQzWmxjbVpzYjNjbkxGeHVJQ0FnSUNBZ0lDQnZjSFJwYjI1ek9pQjdYRzRnSUNBZ0lDQWdJQ0FnWW05MWJtUmhjbms2SUhSb2FYTXVYMk52Ym1acFp5NWliM1Z1WkdGeWVWeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQjlMQ0I3WEc0Z0lDQWdJQ0FnSUc1aGJXVTZJQ2RoY25KdmR5Y3NYRzRnSUNBZ0lDQWdJRzl3ZEdsdmJuTTZJSHRjYmlBZ0lDQWdJQ0FnSUNCbGJHVnRaVzUwT2lCZ0xpUjdkR2hwY3k1amIyNXpkSEoxWTNSdmNpNU9RVTFGZlMxaGNuSnZkMkJjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnZlN3Z2UxeHVJQ0FnSUNBZ0lDQnVZVzFsT2lBbmIyNURhR0Z1WjJVbkxGeHVJQ0FnSUNBZ0lDQmxibUZpYkdWa09pQjBjblZsTEZ4dUlDQWdJQ0FnSUNCd2FHRnpaVG9nSjJGbWRHVnlWM0pwZEdVbkxGeHVJQ0FnSUNBZ0lDQm1iam9nWkdGMFlTQTlQaUIwYUdsekxsOW9ZVzVrYkdWUWIzQndaWEpRYkdGalpXMWxiblJEYUdGdVoyVW9aR0YwWVNsY2JpQWdJQ0FnSUgxZExGeHVJQ0FnSUNBZ2IyNUdhWEp6ZEZWd1pHRjBaVG9nWkdGMFlTQTlQaUI3WEc0Z0lDQWdJQ0FnSUdsbUlDaGtZWFJoTG05d2RHbHZibk11Y0d4aFkyVnRaVzUwSUNFOVBTQmtZWFJoTG5Cc1lXTmxiV1Z1ZENrZ2UxeHVJQ0FnSUNBZ0lDQWdJSFJvYVhNdVgyaGhibVJzWlZCdmNIQmxjbEJzWVdObGJXVnVkRU5vWVc1blpTaGtZWFJoS1R0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgwN1hHNGdJQ0FnY21WMGRYSnVJSHNnTGk0dVpHVm1ZWFZzZEVKelVHOXdjR1Z5UTI5dVptbG5MRnh1SUNBZ0lDQWdMaTR1S0hSNWNHVnZaaUIwYUdsekxsOWpiMjVtYVdjdWNHOXdjR1Z5UTI5dVptbG5JRDA5UFNBblpuVnVZM1JwYjI0bklEOGdkR2hwY3k1ZlkyOXVabWxuTG5CdmNIQmxja052Ym1acFp5aGtaV1poZFd4MFFuTlFiM0J3WlhKRGIyNW1hV2NwSURvZ2RHaHBjeTVmWTI5dVptbG5MbkJ2Y0hCbGNrTnZibVpwWnlsY2JpQWdJQ0I5TzF4dUlDQjlYRzVjYmlBZ1gyRmtaRUYwZEdGamFHMWxiblJEYkdGemN5aGhkSFJoWTJodFpXNTBLU0I3WEc0Z0lDQWdkR2hwY3k1blpYUlVhWEJGYkdWdFpXNTBLQ2t1WTJ4aGMzTk1hWE4wTG1Ga1pDaGdKSHQwYUdsekxsOW5aWFJDWVhOcFkwTnNZWE56VUhKbFptbDRLQ2w5TFNSN2RHaHBjeTUxY0dSaGRHVkJkSFJoWTJodFpXNTBLR0YwZEdGamFHMWxiblFwZldBcE8xeHVJQ0I5WEc1Y2JpQWdYMmRsZEVGMGRHRmphRzFsYm5Rb2NHeGhZMlZ0Wlc1MEtTQjdYRzRnSUNBZ2NtVjBkWEp1SUVGMGRHRmphRzFsYm5STllYQmJjR3hoWTJWdFpXNTBMblJ2VlhCd1pYSkRZWE5sS0NsZE8xeHVJQ0I5WEc1Y2JpQWdYM05sZEV4cGMzUmxibVZ5Y3lncElIdGNiaUFnSUNCamIyNXpkQ0IwY21sbloyVnljeUE5SUhSb2FYTXVYMk52Ym1acFp5NTBjbWxuWjJWeUxuTndiR2wwS0NjZ0p5azdYRzVjYmlBZ0lDQjBjbWxuWjJWeWN5NW1iM0pGWVdOb0tIUnlhV2RuWlhJZ1BUNGdlMXh1SUNBZ0lDQWdhV1lnS0hSeWFXZG5aWElnUFQwOUlDZGpiR2xqYXljcElIdGNiaUFnSUNBZ0lDQWdSWFpsYm5SSVlXNWtiR1Z5TG05dUtIUm9hWE11WDJWc1pXMWxiblFzSUhSb2FYTXVZMjl1YzNSeWRXTjBiM0l1UlhabGJuUXVRMHhKUTBzc0lIUm9hWE11WDJOdmJtWnBaeTV6Wld4bFkzUnZjaXdnWlhabGJuUWdQVDRnZEdocGN5NTBiMmRuYkdVb1pYWmxiblFwS1R0Y2JpQWdJQ0FnSUgwZ1pXeHpaU0JwWmlBb2RISnBaMmRsY2lBaFBUMGdWRkpKUjBkRlVsOU5RVTVWUVV3cElIdGNiaUFnSUNBZ0lDQWdZMjl1YzNRZ1pYWmxiblJKYmlBOUlIUnlhV2RuWlhJZ1BUMDlJRlJTU1VkSFJWSmZTRTlXUlZJZ1B5QjBhR2x6TG1OdmJuTjBjblZqZEc5eUxrVjJaVzUwTGsxUFZWTkZSVTVVUlZJZ09pQjBhR2x6TG1OdmJuTjBjblZqZEc5eUxrVjJaVzUwTGtaUFExVlRTVTQ3WEc0Z0lDQWdJQ0FnSUdOdmJuTjBJR1YyWlc1MFQzVjBJRDBnZEhKcFoyZGxjaUE5UFQwZ1ZGSkpSMGRGVWw5SVQxWkZVaUEvSUhSb2FYTXVZMjl1YzNSeWRXTjBiM0l1UlhabGJuUXVUVTlWVTBWTVJVRldSU0E2SUhSb2FYTXVZMjl1YzNSeWRXTjBiM0l1UlhabGJuUXVSazlEVlZOUFZWUTdYRzRnSUNBZ0lDQWdJRVYyWlc1MFNHRnVaR3hsY2k1dmJpaDBhR2x6TGw5bGJHVnRaVzUwTENCbGRtVnVkRWx1TENCMGFHbHpMbDlqYjI1bWFXY3VjMlZzWldOMGIzSXNJR1YyWlc1MElEMCtJSFJvYVhNdVgyVnVkR1Z5S0dWMlpXNTBLU2s3WEc0Z0lDQWdJQ0FnSUVWMlpXNTBTR0Z1Wkd4bGNpNXZiaWgwYUdsekxsOWxiR1Z0Wlc1MExDQmxkbVZ1ZEU5MWRDd2dkR2hwY3k1ZlkyOXVabWxuTG5ObGJHVmpkRzl5TENCbGRtVnVkQ0E5UGlCMGFHbHpMbDlzWldGMlpTaGxkbVZ1ZENrcE8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgwcE8xeHVYRzRnSUNBZ2RHaHBjeTVmYUdsa1pVMXZaR0ZzU0dGdVpHeGxjaUE5SUNncElEMCtJSHRjYmlBZ0lDQWdJR2xtSUNoMGFHbHpMbDlsYkdWdFpXNTBLU0I3WEc0Z0lDQWdJQ0FnSUhSb2FYTXVhR2xrWlNncE8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgwN1hHNWNiaUFnSUNCRmRtVnVkRWhoYm1Sc1pYSXViMjRvZEdocGN5NWZaV3hsYldWdWRDNWpiRzl6WlhOMEtGTkZURVZEVkU5U1gwMVBSRUZNS1N3Z1JWWkZUbFJmVFU5RVFVeGZTRWxFUlN3Z2RHaHBjeTVmYUdsa1pVMXZaR0ZzU0dGdVpHeGxjaWs3WEc1Y2JpQWdJQ0JwWmlBb2RHaHBjeTVmWTI5dVptbG5Mbk5sYkdWamRHOXlLU0I3WEc0Z0lDQWdJQ0IwYUdsekxsOWpiMjVtYVdjZ1BTQjdJQzR1TG5Sb2FYTXVYMk52Ym1acFp5eGNiaUFnSUNBZ0lDQWdkSEpwWjJkbGNqb2dKMjFoYm5WaGJDY3NYRzRnSUNBZ0lDQWdJSE5sYkdWamRHOXlPaUFuSjF4dUlDQWdJQ0FnZlR0Y2JpQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdkR2hwY3k1ZlptbDRWR2wwYkdVb0tUdGNiaUFnSUNCOVhHNGdJSDFjYmx4dUlDQmZabWw0VkdsMGJHVW9LU0I3WEc0Z0lDQWdZMjl1YzNRZ2RHbDBiR1VnUFNCMGFHbHpMbDlsYkdWdFpXNTBMbWRsZEVGMGRISnBZblYwWlNnbmRHbDBiR1VuS1R0Y2JseHVJQ0FnSUdOdmJuTjBJRzl5YVdkcGJtRnNWR2wwYkdWVWVYQmxJRDBnZEhsd1pXOW1JSFJvYVhNdVgyVnNaVzFsYm5RdVoyVjBRWFIwY21saWRYUmxLQ2RrWVhSaExXSnpMVzl5YVdkcGJtRnNMWFJwZEd4bEp5azdYRzVjYmlBZ0lDQnBaaUFvZEdsMGJHVWdmSHdnYjNKcFoybHVZV3hVYVhSc1pWUjVjR1VnSVQwOUlDZHpkSEpwYm1jbktTQjdYRzRnSUNBZ0lDQjBhR2x6TGw5bGJHVnRaVzUwTG5ObGRFRjBkSEpwWW5WMFpTZ25aR0YwWVMxaWN5MXZjbWxuYVc1aGJDMTBhWFJzWlNjc0lIUnBkR3hsSUh4OElDY25LVHRjYmx4dUlDQWdJQ0FnYVdZZ0tIUnBkR3hsSUNZbUlDRjBhR2x6TGw5bGJHVnRaVzUwTG1kbGRFRjBkSEpwWW5WMFpTZ25ZWEpwWVMxc1lXSmxiQ2NwSUNZbUlDRjBhR2x6TGw5bGJHVnRaVzUwTG5SbGVIUkRiMjUwWlc1MEtTQjdYRzRnSUNBZ0lDQWdJSFJvYVhNdVgyVnNaVzFsYm5RdWMyVjBRWFIwY21saWRYUmxLQ2RoY21saExXeGhZbVZzSnl3Z2RHbDBiR1VwTzF4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNCMGFHbHpMbDlsYkdWdFpXNTBMbk5sZEVGMGRISnBZblYwWlNnbmRHbDBiR1VuTENBbkp5azdYRzRnSUNBZ2ZWeHVJQ0I5WEc1Y2JpQWdYMlZ1ZEdWeUtHVjJaVzUwTENCamIyNTBaWGgwS1NCN1hHNGdJQ0FnWTI5dWRHVjRkQ0E5SUhSb2FYTXVYMmx1YVhScFlXeHBlbVZQYmtSbGJHVm5ZWFJsWkZSaGNtZGxkQ2hsZG1WdWRDd2dZMjl1ZEdWNGRDazdYRzVjYmlBZ0lDQnBaaUFvWlhabGJuUXBJSHRjYmlBZ0lDQWdJR052Ym5SbGVIUXVYMkZqZEdsMlpWUnlhV2RuWlhKYlpYWmxiblF1ZEhsd1pTQTlQVDBnSjJadlkzVnphVzRuSUQ4Z1ZGSkpSMGRGVWw5R1QwTlZVeUE2SUZSU1NVZEhSVkpmU0U5V1JWSmRJRDBnZEhKMVpUdGNiaUFnSUNCOVhHNWNiaUFnSUNCcFppQW9ZMjl1ZEdWNGRDNW5aWFJVYVhCRmJHVnRaVzUwS0NrdVkyeGhjM05NYVhOMExtTnZiblJoYVc1ektFTk1RVk5UWDA1QlRVVmZVMGhQVnlReUtTQjhmQ0JqYjI1MFpYaDBMbDlvYjNabGNsTjBZWFJsSUQwOVBTQklUMVpGVWw5VFZFRlVSVjlUU0U5WEtTQjdYRzRnSUNBZ0lDQmpiMjUwWlhoMExsOW9iM1psY2xOMFlYUmxJRDBnU0U5V1JWSmZVMVJCVkVWZlUwaFBWenRjYmlBZ0lDQWdJSEpsZEhWeWJqdGNiaUFnSUNCOVhHNWNiaUFnSUNCamJHVmhjbFJwYldWdmRYUW9ZMjl1ZEdWNGRDNWZkR2x0Wlc5MWRDazdYRzRnSUNBZ1kyOXVkR1Y0ZEM1ZmFHOTJaWEpUZEdGMFpTQTlJRWhQVmtWU1gxTlVRVlJGWDFOSVQxYzdYRzVjYmlBZ0lDQnBaaUFvSVdOdmJuUmxlSFF1WDJOdmJtWnBaeTVrWld4aGVTQjhmQ0FoWTI5dWRHVjRkQzVmWTI5dVptbG5MbVJsYkdGNUxuTm9iM2NwSUh0Y2JpQWdJQ0FnSUdOdmJuUmxlSFF1YzJodmR5Z3BPMXh1SUNBZ0lDQWdjbVYwZFhKdU8xeHVJQ0FnSUgxY2JseHVJQ0FnSUdOdmJuUmxlSFF1WDNScGJXVnZkWFFnUFNCelpYUlVhVzFsYjNWMEtDZ3BJRDArSUh0Y2JpQWdJQ0FnSUdsbUlDaGpiMjUwWlhoMExsOW9iM1psY2xOMFlYUmxJRDA5UFNCSVQxWkZVbDlUVkVGVVJWOVRTRTlYS1NCN1hHNGdJQ0FnSUNBZ0lHTnZiblJsZUhRdWMyaHZkeWdwTzF4dUlDQWdJQ0FnZlZ4dUlDQWdJSDBzSUdOdmJuUmxlSFF1WDJOdmJtWnBaeTVrWld4aGVTNXphRzkzS1R0Y2JpQWdmVnh1WEc0Z0lGOXNaV0YyWlNobGRtVnVkQ3dnWTI5dWRHVjRkQ2tnZTF4dUlDQWdJR052Ym5SbGVIUWdQU0IwYUdsekxsOXBibWwwYVdGc2FYcGxUMjVFWld4bFoyRjBaV1JVWVhKblpYUW9aWFpsYm5Rc0lHTnZiblJsZUhRcE8xeHVYRzRnSUNBZ2FXWWdLR1YyWlc1MEtTQjdYRzRnSUNBZ0lDQmpiMjUwWlhoMExsOWhZM1JwZG1WVWNtbG5aMlZ5VzJWMlpXNTBMblI1Y0dVZ1BUMDlJQ2RtYjJOMWMyOTFkQ2NnUHlCVVVrbEhSMFZTWDBaUFExVlRJRG9nVkZKSlIwZEZVbDlJVDFaRlVsMGdQU0JqYjI1MFpYaDBMbDlsYkdWdFpXNTBMbU52Ym5SaGFXNXpLR1YyWlc1MExuSmxiR0YwWldSVVlYSm5aWFFwTzF4dUlDQWdJSDFjYmx4dUlDQWdJR2xtSUNoamIyNTBaWGgwTGw5cGMxZHBkR2hCWTNScGRtVlVjbWxuWjJWeUtDa3BJSHRjYmlBZ0lDQWdJSEpsZEhWeWJqdGNiaUFnSUNCOVhHNWNiaUFnSUNCamJHVmhjbFJwYldWdmRYUW9ZMjl1ZEdWNGRDNWZkR2x0Wlc5MWRDazdYRzRnSUNBZ1kyOXVkR1Y0ZEM1ZmFHOTJaWEpUZEdGMFpTQTlJRWhQVmtWU1gxTlVRVlJGWDA5VlZEdGNibHh1SUNBZ0lHbG1JQ2doWTI5dWRHVjRkQzVmWTI5dVptbG5MbVJsYkdGNUlIeDhJQ0ZqYjI1MFpYaDBMbDlqYjI1bWFXY3VaR1ZzWVhrdWFHbGtaU2tnZTF4dUlDQWdJQ0FnWTI5dWRHVjRkQzVvYVdSbEtDazdYRzRnSUNBZ0lDQnlaWFIxY200N1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnWTI5dWRHVjRkQzVmZEdsdFpXOTFkQ0E5SUhObGRGUnBiV1Z2ZFhRb0tDa2dQVDRnZTF4dUlDQWdJQ0FnYVdZZ0tHTnZiblJsZUhRdVgyaHZkbVZ5VTNSaGRHVWdQVDA5SUVoUFZrVlNYMU5VUVZSRlgwOVZWQ2tnZTF4dUlDQWdJQ0FnSUNCamIyNTBaWGgwTG1ocFpHVW9LVHRjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlMQ0JqYjI1MFpYaDBMbDlqYjI1bWFXY3VaR1ZzWVhrdWFHbGtaU2s3WEc0Z0lIMWNibHh1SUNCZmFYTlhhWFJvUVdOMGFYWmxWSEpwWjJkbGNpZ3BJSHRjYmlBZ0lDQm1iM0lnS0dOdmJuTjBJSFJ5YVdkblpYSWdhVzRnZEdocGN5NWZZV04wYVhabFZISnBaMmRsY2lrZ2UxeHVJQ0FnSUNBZ2FXWWdLSFJvYVhNdVgyRmpkR2wyWlZSeWFXZG5aWEpiZEhKcFoyZGxjbDBwSUh0Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSeWRXVTdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2NtVjBkWEp1SUdaaGJITmxPMXh1SUNCOVhHNWNiaUFnWDJkbGRFTnZibVpwWnloamIyNW1hV2NwSUh0Y2JpQWdJQ0JqYjI1emRDQmtZWFJoUVhSMGNtbGlkWFJsY3lBOUlFMWhibWx3ZFd4aGRHOXlMbWRsZEVSaGRHRkJkSFJ5YVdKMWRHVnpLSFJvYVhNdVgyVnNaVzFsYm5RcE8xeHVJQ0FnSUU5aWFtVmpkQzVyWlhsektHUmhkR0ZCZEhSeWFXSjFkR1Z6S1M1bWIzSkZZV05vS0dSaGRHRkJkSFJ5SUQwK0lIdGNiaUFnSUNBZ0lHbG1JQ2hFU1ZOQlRFeFBWMFZFWDBGVVZGSkpRbFZVUlZNdWFHRnpLR1JoZEdGQmRIUnlLU2tnZTF4dUlDQWdJQ0FnSUNCa1pXeGxkR1VnWkdGMFlVRjBkSEpwWW5WMFpYTmJaR0YwWVVGMGRISmRPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lIMHBPMXh1SUNBZ0lHTnZibVpwWnlBOUlIc2dMaTR1ZEdocGN5NWpiMjV6ZEhKMVkzUnZjaTVFWldaaGRXeDBMRnh1SUNBZ0lDQWdMaTR1WkdGMFlVRjBkSEpwWW5WMFpYTXNYRzRnSUNBZ0lDQXVMaTRvZEhsd1pXOW1JR052Ym1acFp5QTlQVDBnSjI5aWFtVmpkQ2NnSmlZZ1kyOXVabWxuSUQ4Z1kyOXVabWxuSURvZ2UzMHBYRzRnSUNBZ2ZUdGNiaUFnSUNCamIyNW1hV2N1WTI5dWRHRnBibVZ5SUQwZ1kyOXVabWxuTG1OdmJuUmhhVzVsY2lBOVBUMGdabUZzYzJVZ1B5QmtiMk4xYldWdWRDNWliMlI1SURvZ1oyVjBSV3hsYldWdWRDaGpiMjVtYVdjdVkyOXVkR0ZwYm1WeUtUdGNibHh1SUNBZ0lHbG1JQ2gwZVhCbGIyWWdZMjl1Wm1sbkxtUmxiR0Y1SUQwOVBTQW5iblZ0WW1WeUp5a2dlMXh1SUNBZ0lDQWdZMjl1Wm1sbkxtUmxiR0Y1SUQwZ2UxeHVJQ0FnSUNBZ0lDQnphRzkzT2lCamIyNW1hV2N1WkdWc1lYa3NYRzRnSUNBZ0lDQWdJR2hwWkdVNklHTnZibVpwWnk1a1pXeGhlVnh1SUNBZ0lDQWdmVHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQnBaaUFvZEhsd1pXOW1JR052Ym1acFp5NTBhWFJzWlNBOVBUMGdKMjUxYldKbGNpY3BJSHRjYmlBZ0lDQWdJR052Ym1acFp5NTBhWFJzWlNBOUlHTnZibVpwWnk1MGFYUnNaUzUwYjFOMGNtbHVaeWdwTzF4dUlDQWdJSDFjYmx4dUlDQWdJR2xtSUNoMGVYQmxiMllnWTI5dVptbG5MbU52Ym5SbGJuUWdQVDA5SUNkdWRXMWlaWEluS1NCN1hHNGdJQ0FnSUNCamIyNW1hV2N1WTI5dWRHVnVkQ0E5SUdOdmJtWnBaeTVqYjI1MFpXNTBMblJ2VTNSeWFXNW5LQ2s3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdkSGx3WlVOb1pXTnJRMjl1Wm1sbktFNUJUVVVrTkN3Z1kyOXVabWxuTENCMGFHbHpMbU52Ym5OMGNuVmpkRzl5TGtSbFptRjFiSFJVZVhCbEtUdGNibHh1SUNBZ0lHbG1JQ2hqYjI1bWFXY3VjMkZ1YVhScGVtVXBJSHRjYmlBZ0lDQWdJR052Ym1acFp5NTBaVzF3YkdGMFpTQTlJSE5oYm1sMGFYcGxTSFJ0YkNoamIyNW1hV2N1ZEdWdGNHeGhkR1VzSUdOdmJtWnBaeTVoYkd4dmQweHBjM1FzSUdOdmJtWnBaeTV6WVc1cGRHbDZaVVp1S1R0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0J5WlhSMWNtNGdZMjl1Wm1sbk8xeHVJQ0I5WEc1Y2JpQWdYMmRsZEVSbGJHVm5ZWFJsUTI5dVptbG5LQ2tnZTF4dUlDQWdJR052Ym5OMElHTnZibVpwWnlBOUlIdDlPMXh1WEc0Z0lDQWdabTl5SUNoamIyNXpkQ0JyWlhrZ2FXNGdkR2hwY3k1ZlkyOXVabWxuS1NCN1hHNGdJQ0FnSUNCcFppQW9kR2hwY3k1amIyNXpkSEoxWTNSdmNpNUVaV1poZFd4MFcydGxlVjBnSVQwOUlIUm9hWE11WDJOdmJtWnBaMXRyWlhsZEtTQjdYRzRnSUNBZ0lDQWdJR052Ym1acFoxdHJaWGxkSUQwZ2RHaHBjeTVmWTI5dVptbG5XMnRsZVYwN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnZlNBdkx5QkpiaUIwYUdVZ1puVjBkWEpsSUdOaGJpQmlaU0J5WlhCc1lXTmxaQ0IzYVhSb09seHVJQ0FnSUM4dklHTnZibk4wSUd0bGVYTlhhWFJvUkdsbVptVnlaVzUwVm1Gc2RXVnpJRDBnVDJKcVpXTjBMbVZ1ZEhKcFpYTW9kR2hwY3k1ZlkyOXVabWxuS1M1bWFXeDBaWElvWlc1MGNua2dQVDRnZEdocGN5NWpiMjV6ZEhKMVkzUnZjaTVFWldaaGRXeDBXMlZ1ZEhKNVd6QmRYU0FoUFQwZ2RHaHBjeTVmWTI5dVptbG5XMlZ1ZEhKNVd6QmRYU2xjYmlBZ0lDQXZMeUJnVDJKcVpXTjBMbVp5YjIxRmJuUnlhV1Z6S0d0bGVYTlhhWFJvUkdsbVptVnlaVzUwVm1Gc2RXVnpLV0JjYmx4dVhHNGdJQ0FnY21WMGRYSnVJR052Ym1acFp6dGNiaUFnZlZ4dVhHNGdJRjlqYkdWaGJsUnBjRU5zWVhOektDa2dlMXh1SUNBZ0lHTnZibk4wSUhScGNDQTlJSFJvYVhNdVoyVjBWR2x3Uld4bGJXVnVkQ2dwTzF4dUlDQWdJR052Ym5OMElHSmhjMmxqUTJ4aGMzTlFjbVZtYVhoU1pXZGxlQ0E5SUc1bGR5QlNaV2RGZUhBb1lDaGVmRnhjWEZ4ektTUjdkR2hwY3k1ZloyVjBRbUZ6YVdORGJHRnpjMUJ5WldacGVDZ3BmVnhjWEZ4VEsyQXNJQ2RuSnlrN1hHNGdJQ0FnWTI5dWMzUWdkR0ZpUTJ4aGMzTWdQU0IwYVhBdVoyVjBRWFIwY21saWRYUmxLQ2RqYkdGemN5Y3BMbTFoZEdOb0tHSmhjMmxqUTJ4aGMzTlFjbVZtYVhoU1pXZGxlQ2s3WEc1Y2JpQWdJQ0JwWmlBb2RHRmlRMnhoYzNNZ0lUMDlJRzUxYkd3Z0ppWWdkR0ZpUTJ4aGMzTXViR1Z1WjNSb0lENGdNQ2tnZTF4dUlDQWdJQ0FnZEdGaVEyeGhjM011YldGd0tIUnZhMlZ1SUQwK0lIUnZhMlZ1TG5SeWFXMG9LU2t1Wm05eVJXRmphQ2gwUTJ4aGMzTWdQVDRnZEdsd0xtTnNZWE56VEdsemRDNXlaVzF2ZG1Vb2RFTnNZWE56S1NrN1hHNGdJQ0FnZlZ4dUlDQjlYRzVjYmlBZ1gyZGxkRUpoYzJsalEyeGhjM05RY21WbWFYZ29LU0I3WEc0Z0lDQWdjbVYwZFhKdUlFTk1RVk5UWDFCU1JVWkpXQ1F4TzF4dUlDQjlYRzVjYmlBZ1gyaGhibVJzWlZCdmNIQmxjbEJzWVdObGJXVnVkRU5vWVc1blpTaHdiM0J3WlhKRVlYUmhLU0I3WEc0Z0lDQWdZMjl1YzNRZ2UxeHVJQ0FnSUNBZ2MzUmhkR1ZjYmlBZ0lDQjlJRDBnY0c5d2NHVnlSR0YwWVR0Y2JseHVJQ0FnSUdsbUlDZ2hjM1JoZEdVcElIdGNiaUFnSUNBZ0lISmxkSFZ5Ymp0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0IwYUdsekxuUnBjQ0E5SUhOMFlYUmxMbVZzWlcxbGJuUnpMbkJ2Y0hCbGNqdGNibHh1SUNBZ0lIUm9hWE11WDJOc1pXRnVWR2x3UTJ4aGMzTW9LVHRjYmx4dUlDQWdJSFJvYVhNdVgyRmtaRUYwZEdGamFHMWxiblJEYkdGemN5aDBhR2x6TGw5blpYUkJkSFJoWTJodFpXNTBLSE4wWVhSbExuQnNZV05sYldWdWRDa3BPMXh1SUNCOVhHNWNiaUFnWDJScGMzQnZjMlZRYjNCd1pYSW9LU0I3WEc0Z0lDQWdhV1lnS0hSb2FYTXVYM0J2Y0hCbGNpa2dlMXh1SUNBZ0lDQWdkR2hwY3k1ZmNHOXdjR1Z5TG1SbGMzUnliM2tvS1R0Y2JseHVJQ0FnSUNBZ2RHaHBjeTVmY0c5d2NHVnlJRDBnYm5Wc2JEdGNiaUFnSUNCOVhHNGdJSDBnTHk4Z1UzUmhkR2xqWEc1Y2JseHVJQ0J6ZEdGMGFXTWdhbEYxWlhKNVNXNTBaWEptWVdObEtHTnZibVpwWnlrZ2UxeHVJQ0FnSUhKbGRIVnliaUIwYUdsekxtVmhZMmdvWm5WdVkzUnBiMjRnS0NrZ2UxeHVJQ0FnSUNBZ1kyOXVjM1FnWkdGMFlTQTlJRlJ2YjJ4MGFYQXVaMlYwVDNKRGNtVmhkR1ZKYm5OMFlXNWpaU2gwYUdsekxDQmpiMjVtYVdjcE8xeHVYRzRnSUNBZ0lDQnBaaUFvZEhsd1pXOW1JR052Ym1acFp5QTlQVDBnSjNOMGNtbHVaeWNwSUh0Y2JpQWdJQ0FnSUNBZ2FXWWdLSFI1Y0dWdlppQmtZWFJoVzJOdmJtWnBaMTBnUFQwOUlDZDFibVJsWm1sdVpXUW5LU0I3WEc0Z0lDQWdJQ0FnSUNBZ2RHaHliM2NnYm1WM0lGUjVjR1ZGY25KdmNpaGdUbThnYldWMGFHOWtJRzVoYldWa0lGd2lKSHRqYjI1bWFXZDlYQ0pnS1R0Y2JpQWdJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQWdJR1JoZEdGYlkyOXVabWxuWFNncE8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgwcE8xeHVJQ0I5WEc1Y2JuMWNiaThxS2x4dUlDb2dMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRYRzRnS2lCcVVYVmxjbmxjYmlBcUlDMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExWeHVJQ29nWVdSa0lDNVViMjlzZEdsd0lIUnZJR3BSZFdWeWVTQnZibXg1SUdsbUlHcFJkV1Z5ZVNCcGN5QndjbVZ6Wlc1MFhHNGdLaTljYmx4dVhHNWtaV1pwYm1WS1VYVmxjbmxRYkhWbmFXNG9WRzl2YkhScGNDazdYRzVjYmk4cUtseHVJQ29nTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMxY2JpQXFJRUp2YjNSemRISmhjQ0FvZGpVdU1TNHpLVG9nY0c5d2IzWmxjaTVxYzF4dUlDb2dUR2xqWlc1elpXUWdkVzVrWlhJZ1RVbFVJQ2hvZEhSd2N6b3ZMMmRwZEdoMVlpNWpiMjB2ZEhkaWN5OWliMjkwYzNSeVlYQXZZbXh2WWk5dFlXbHVMMHhKUTBWT1UwVXBYRzRnS2lBdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExWeHVJQ292WEc0dktpcGNiaUFxSUMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFZ4dUlDb2dRMjl1YzNSaGJuUnpYRzRnS2lBdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMxY2JpQXFMMXh1WEc1amIyNXpkQ0JPUVUxRkpETWdQU0FuY0c5d2IzWmxjaWM3WEc1amIyNXpkQ0JFUVZSQlgwdEZXU1F6SUQwZ0oySnpMbkJ2Y0c5MlpYSW5PMXh1WTI5dWMzUWdSVlpGVGxSZlMwVlpKRE1nUFNCZ0xpUjdSRUZVUVY5TFJWa2tNMzFnTzF4dVkyOXVjM1FnUTB4QlUxTmZVRkpGUmtsWUlEMGdKMkp6TFhCdmNHOTJaWEluTzF4dVkyOXVjM1FnUkdWbVlYVnNkQ1F5SUQwZ2V5QXVMaTVVYjI5c2RHbHdMa1JsWm1GMWJIUXNYRzRnSUhCc1lXTmxiV1Z1ZERvZ0ozSnBaMmgwSnl4Y2JpQWdiMlptYzJWME9pQmJNQ3dnT0Ywc1hHNGdJSFJ5YVdkblpYSTZJQ2RqYkdsamF5Y3NYRzRnSUdOdmJuUmxiblE2SUNjbkxGeHVJQ0IwWlcxd2JHRjBaVG9nSnp4a2FYWWdZMnhoYzNNOVhDSndiM0J2ZG1WeVhDSWdjbTlzWlQxY0luUnZiMngwYVhCY0lqNG5JQ3NnSnp4a2FYWWdZMnhoYzNNOVhDSndiM0J2ZG1WeUxXRnljbTkzWENJK1BDOWthWFkrSnlBcklDYzhhRE1nWTJ4aGMzTTlYQ0p3YjNCdmRtVnlMV2hsWVdSbGNsd2lQand2YURNK0p5QXJJQ2M4WkdsMklHTnNZWE56UFZ3aWNHOXdiM1psY2kxaWIyUjVYQ0krUEM5a2FYWStKeUFySUNjOEwyUnBkajRuWEc1OU8xeHVZMjl1YzNRZ1JHVm1ZWFZzZEZSNWNHVWtNaUE5SUhzZ0xpNHVWRzl2YkhScGNDNUVaV1poZFd4MFZIbHdaU3hjYmlBZ1kyOXVkR1Z1ZERvZ0p5aHpkSEpwYm1kOFpXeGxiV1Z1ZEh4bWRXNWpkR2x2YmlrblhHNTlPMXh1WTI5dWMzUWdSWFpsYm5Ra01TQTlJSHRjYmlBZ1NFbEVSVG9nWUdocFpHVWtlMFZXUlU1VVgwdEZXU1F6ZldBc1hHNGdJRWhKUkVSRlRqb2dZR2hwWkdSbGJpUjdSVlpGVGxSZlMwVlpKRE45WUN4Y2JpQWdVMGhQVnpvZ1lITm9iM2NrZTBWV1JVNVVYMHRGV1NRemZXQXNYRzRnSUZOSVQxZE9PaUJnYzJodmQyNGtlMFZXUlU1VVgwdEZXU1F6ZldBc1hHNGdJRWxPVTBWU1ZFVkVPaUJnYVc1elpYSjBaV1FrZTBWV1JVNVVYMHRGV1NRemZXQXNYRzRnSUVOTVNVTkxPaUJnWTJ4cFkyc2tlMFZXUlU1VVgwdEZXU1F6ZldBc1hHNGdJRVpQUTFWVFNVNDZJR0JtYjJOMWMybHVKSHRGVmtWT1ZGOUxSVmtrTTMxZ0xGeHVJQ0JHVDBOVlUwOVZWRG9nWUdadlkzVnpiM1YwSkh0RlZrVk9WRjlMUlZra00zMWdMRnh1SUNCTlQxVlRSVVZPVkVWU09pQmdiVzkxYzJWbGJuUmxjaVI3UlZaRlRsUmZTMFZaSkROOVlDeGNiaUFnVFU5VlUwVk1SVUZXUlRvZ1lHMXZkWE5sYkdWaGRtVWtlMFZXUlU1VVgwdEZXU1F6ZldCY2JuMDdYRzVqYjI1emRDQlRSVXhGUTFSUFVsOVVTVlJNUlNBOUlDY3VjRzl3YjNabGNpMW9aV0ZrWlhJbk8xeHVZMjl1YzNRZ1UwVk1SVU5VVDFKZlEwOU9WRVZPVkNBOUlDY3VjRzl3YjNabGNpMWliMlI1Snp0Y2JpOHFLbHh1SUNvZ0xTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdFhHNGdLaUJEYkdGemN5QkVaV1pwYm1sMGFXOXVYRzRnS2lBdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMxY2JpQXFMMXh1WEc1amJHRnpjeUJRYjNCdmRtVnlJR1Y0ZEdWdVpITWdWRzl2YkhScGNDQjdYRzRnSUM4dklFZGxkSFJsY25OY2JpQWdjM1JoZEdsaklHZGxkQ0JFWldaaGRXeDBLQ2tnZTF4dUlDQWdJSEpsZEhWeWJpQkVaV1poZFd4MEpESTdYRzRnSUgxY2JseHVJQ0J6ZEdGMGFXTWdaMlYwSUU1QlRVVW9LU0I3WEc0Z0lDQWdjbVYwZFhKdUlFNUJUVVVrTXp0Y2JpQWdmVnh1WEc0Z0lITjBZWFJwWXlCblpYUWdSWFpsYm5Rb0tTQjdYRzRnSUNBZ2NtVjBkWEp1SUVWMlpXNTBKREU3WEc0Z0lIMWNibHh1SUNCemRHRjBhV01nWjJWMElFUmxabUYxYkhSVWVYQmxLQ2tnZTF4dUlDQWdJSEpsZEhWeWJpQkVaV1poZFd4MFZIbHdaU1F5TzF4dUlDQjlJQzh2SUU5MlpYSnlhV1JsYzF4dVhHNWNiaUFnYVhOWGFYUm9RMjl1ZEdWdWRDZ3BJSHRjYmlBZ0lDQnlaWFIxY200Z2RHaHBjeTVuWlhSVWFYUnNaU2dwSUh4OElIUm9hWE11WDJkbGRFTnZiblJsYm5Rb0tUdGNiaUFnZlZ4dVhHNGdJSE5sZEVOdmJuUmxiblFvZEdsd0tTQjdYRzRnSUNBZ2RHaHBjeTVmYzJGdWFYUnBlbVZCYm1SVFpYUkRiMjUwWlc1MEtIUnBjQ3dnZEdocGN5NW5aWFJVYVhSc1pTZ3BMQ0JUUlV4RlExUlBVbDlVU1ZSTVJTazdYRzVjYmlBZ0lDQjBhR2x6TGw5ellXNXBkR2w2WlVGdVpGTmxkRU52Ym5SbGJuUW9kR2x3TENCMGFHbHpMbDluWlhSRGIyNTBaVzUwS0Nrc0lGTkZURVZEVkU5U1gwTlBUbFJGVGxRcE8xeHVJQ0I5SUM4dklGQnlhWFpoZEdWY2JseHVYRzRnSUY5blpYUkRiMjUwWlc1MEtDa2dlMXh1SUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDl5WlhOdmJIWmxVRzl6YzJsaWJHVkdkVzVqZEdsdmJpaDBhR2x6TGw5amIyNW1hV2N1WTI5dWRHVnVkQ2s3WEc0Z0lIMWNibHh1SUNCZloyVjBRbUZ6YVdORGJHRnpjMUJ5WldacGVDZ3BJSHRjYmlBZ0lDQnlaWFIxY200Z1EweEJVMU5mVUZKRlJrbFlPMXh1SUNCOUlDOHZJRk4wWVhScFkxeHVYRzVjYmlBZ2MzUmhkR2xqSUdwUmRXVnllVWx1ZEdWeVptRmpaU2hqYjI1bWFXY3BJSHRjYmlBZ0lDQnlaWFIxY200Z2RHaHBjeTVsWVdOb0tHWjFibU4wYVc5dUlDZ3BJSHRjYmlBZ0lDQWdJR052Ym5OMElHUmhkR0VnUFNCUWIzQnZkbVZ5TG1kbGRFOXlRM0psWVhSbFNXNXpkR0Z1WTJVb2RHaHBjeXdnWTI5dVptbG5LVHRjYmx4dUlDQWdJQ0FnYVdZZ0tIUjVjR1Z2WmlCamIyNW1hV2NnUFQwOUlDZHpkSEpwYm1jbktTQjdYRzRnSUNBZ0lDQWdJR2xtSUNoMGVYQmxiMllnWkdGMFlWdGpiMjVtYVdkZElEMDlQU0FuZFc1a1pXWnBibVZrSnlrZ2UxeHVJQ0FnSUNBZ0lDQWdJSFJvY205M0lHNWxkeUJVZVhCbFJYSnliM0lvWUU1dklHMWxkR2h2WkNCdVlXMWxaQ0JjSWlSN1kyOXVabWxuZlZ3aVlDazdYRzRnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNCa1lYUmhXMk52Ym1acFoxMG9LVHRjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlLVHRjYmlBZ2ZWeHVYRzU5WEc0dktpcGNiaUFxSUMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFZ4dUlDb2dhbEYxWlhKNVhHNGdLaUF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzFjYmlBcUlHRmtaQ0F1VUc5d2IzWmxjaUIwYnlCcVVYVmxjbmtnYjI1c2VTQnBaaUJxVVhWbGNua2dhWE1nY0hKbGMyVnVkRnh1SUNvdlhHNWNibHh1WkdWbWFXNWxTbEYxWlhKNVVHeDFaMmx1S0ZCdmNHOTJaWElwTzF4dVhHNHZLaXBjYmlBcUlDMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRYRzRnS2lCQ2IyOTBjM1J5WVhBZ0tIWTFMakV1TXlrNklITmpjbTlzYkhOd2VTNXFjMXh1SUNvZ1RHbGpaVzV6WldRZ2RXNWtaWElnVFVsVUlDaG9kSFJ3Y3pvdkwyZHBkR2gxWWk1amIyMHZkSGRpY3k5aWIyOTBjM1J5WVhBdllteHZZaTl0WVdsdUwweEpRMFZPVTBVcFhHNGdLaUF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFZ4dUlDb3ZYRzR2S2lwY2JpQXFJQzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMVnh1SUNvZ1EyOXVjM1JoYm5SelhHNGdLaUF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzFjYmlBcUwxeHVYRzVqYjI1emRDQk9RVTFGSkRJZ1BTQW5jMk55YjJ4c2MzQjVKenRjYm1OdmJuTjBJRVJCVkVGZlMwVlpKRElnUFNBblluTXVjMk55YjJ4c2MzQjVKenRjYm1OdmJuTjBJRVZXUlU1VVgwdEZXU1F5SUQwZ1lDNGtlMFJCVkVGZlMwVlpKREo5WUR0Y2JtTnZibk4wSUVSQlZFRmZRVkJKWDB0RldTUXhJRDBnSnk1a1lYUmhMV0Z3YVNjN1hHNWpiMjV6ZENCRVpXWmhkV3gwSkRFZ1BTQjdYRzRnSUc5bVpuTmxkRG9nTVRBc1hHNGdJRzFsZEdodlpEb2dKMkYxZEc4bkxGeHVJQ0IwWVhKblpYUTZJQ2NuWEc1OU8xeHVZMjl1YzNRZ1JHVm1ZWFZzZEZSNWNHVWtNU0E5SUh0Y2JpQWdiMlptYzJWME9pQW5iblZ0WW1WeUp5eGNiaUFnYldWMGFHOWtPaUFuYzNSeWFXNW5KeXhjYmlBZ2RHRnlaMlYwT2lBbktITjBjbWx1WjN4bGJHVnRaVzUwS1NkY2JuMDdYRzVqYjI1emRDQkZWa1ZPVkY5QlExUkpWa0ZVUlNBOUlHQmhZM1JwZG1GMFpTUjdSVlpGVGxSZlMwVlpKREo5WUR0Y2JtTnZibk4wSUVWV1JVNVVYMU5EVWs5TVRDQTlJR0J6WTNKdmJHd2tlMFZXUlU1VVgwdEZXU1F5ZldBN1hHNWpiMjV6ZENCRlZrVk9WRjlNVDBGRVgwUkJWRUZmUVZCSklEMGdZR3h2WVdRa2UwVldSVTVVWDB0RldTUXlmU1I3UkVGVVFWOUJVRWxmUzBWWkpERjlZRHRjYm1OdmJuTjBJRU5NUVZOVFgwNUJUVVZmUkZKUFVFUlBWMDVmU1ZSRlRTQTlJQ2RrY205d1pHOTNiaTFwZEdWdEp6dGNibU52Ym5OMElFTk1RVk5UWDA1QlRVVmZRVU5VU1ZaRkpERWdQU0FuWVdOMGFYWmxKenRjYm1OdmJuTjBJRk5GVEVWRFZFOVNYMFJCVkVGZlUxQlpJRDBnSjF0a1lYUmhMV0p6TFhOd2VUMWNJbk5qY205c2JGd2lYU2M3WEc1amIyNXpkQ0JUUlV4RlExUlBVbDlPUVZaZlRFbFRWRjlIVWs5VlVDUXhJRDBnSnk1dVlYWXNJQzVzYVhOMExXZHliM1Z3Snp0Y2JtTnZibk4wSUZORlRFVkRWRTlTWDA1QlZsOU1TVTVMVXlBOUlDY3VibUYyTFd4cGJtc25PMXh1WTI5dWMzUWdVMFZNUlVOVVQxSmZUa0ZXWDBsVVJVMVRJRDBnSnk1dVlYWXRhWFJsYlNjN1hHNWpiMjV6ZENCVFJVeEZRMVJQVWw5TVNWTlVYMGxVUlUxVElEMGdKeTVzYVhOMExXZHliM1Z3TFdsMFpXMG5PMXh1WTI5dWMzUWdVMFZNUlVOVVQxSmZURWxPUzE5SlZFVk5VeUE5SUdBa2UxTkZURVZEVkU5U1gwNUJWbDlNU1U1TFUzMHNJQ1I3VTBWTVJVTlVUMUpmVEVsVFZGOUpWRVZOVTMwc0lDNGtlME5NUVZOVFgwNUJUVVZmUkZKUFVFUlBWMDVmU1ZSRlRYMWdPMXh1WTI5dWMzUWdVMFZNUlVOVVQxSmZSRkpQVUVSUFYwNGtNU0E5SUNjdVpISnZjR1J2ZDI0bk8xeHVZMjl1YzNRZ1UwVk1SVU5VVDFKZlJGSlBVRVJQVjA1ZlZFOUhSMHhGSkRFZ1BTQW5MbVJ5YjNCa2IzZHVMWFJ2WjJkc1pTYzdYRzVqYjI1emRDQk5SVlJJVDBSZlQwWkdVMFZVSUQwZ0oyOW1abk5sZENjN1hHNWpiMjV6ZENCTlJWUklUMFJmVUU5VFNWUkpUMDRnUFNBbmNHOXphWFJwYjI0bk8xeHVMeW9xWEc0Z0tpQXRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMWNiaUFxSUVOc1lYTnpJRVJsWm1sdWFYUnBiMjVjYmlBcUlDMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExWeHVJQ292WEc1Y2JtTnNZWE56SUZOamNtOXNiRk53ZVNCbGVIUmxibVJ6SUVKaGMyVkRiMjF3YjI1bGJuUWdlMXh1SUNCamIyNXpkSEoxWTNSdmNpaGxiR1Z0Wlc1MExDQmpiMjVtYVdjcElIdGNiaUFnSUNCemRYQmxjaWhsYkdWdFpXNTBLVHRjYmlBZ0lDQjBhR2x6TGw5elkzSnZiR3hGYkdWdFpXNTBJRDBnZEdocGN5NWZaV3hsYldWdWRDNTBZV2RPWVcxbElEMDlQU0FuUWs5RVdTY2dQeUIzYVc1a2IzY2dPaUIwYUdsekxsOWxiR1Z0Wlc1ME8xeHVJQ0FnSUhSb2FYTXVYMk52Ym1acFp5QTlJSFJvYVhNdVgyZGxkRU52Ym1acFp5aGpiMjVtYVdjcE8xeHVJQ0FnSUhSb2FYTXVYMjltWm5ObGRITWdQU0JiWFR0Y2JpQWdJQ0IwYUdsekxsOTBZWEpuWlhSeklEMGdXMTA3WEc0Z0lDQWdkR2hwY3k1ZllXTjBhWFpsVkdGeVoyVjBJRDBnYm5Wc2JEdGNiaUFnSUNCMGFHbHpMbDl6WTNKdmJHeElaV2xuYUhRZ1BTQXdPMXh1SUNBZ0lFVjJaVzUwU0dGdVpHeGxjaTV2YmloMGFHbHpMbDl6WTNKdmJHeEZiR1Z0Wlc1MExDQkZWa1ZPVkY5VFExSlBURXdzSUNncElEMCtJSFJvYVhNdVgzQnliMk5sYzNNb0tTazdYRzRnSUNBZ2RHaHBjeTV5WldaeVpYTm9LQ2s3WEc1Y2JpQWdJQ0IwYUdsekxsOXdjbTlqWlhOektDazdYRzRnSUgwZ0x5OGdSMlYwZEdWeWMxeHVYRzVjYmlBZ2MzUmhkR2xqSUdkbGRDQkVaV1poZFd4MEtDa2dlMXh1SUNBZ0lISmxkSFZ5YmlCRVpXWmhkV3gwSkRFN1hHNGdJSDFjYmx4dUlDQnpkR0YwYVdNZ1oyVjBJRTVCVFVVb0tTQjdYRzRnSUNBZ2NtVjBkWEp1SUU1QlRVVWtNanRjYmlBZ2ZTQXZMeUJRZFdKc2FXTmNibHh1WEc0Z0lISmxabkpsYzJnb0tTQjdYRzRnSUNBZ1kyOXVjM1FnWVhWMGIwMWxkR2h2WkNBOUlIUm9hWE11WDNOamNtOXNiRVZzWlcxbGJuUWdQVDA5SUhSb2FYTXVYM05qY205c2JFVnNaVzFsYm5RdWQybHVaRzkzSUQ4Z1RVVlVTRTlFWDA5R1JsTkZWQ0E2SUUxRlZFaFBSRjlRVDFOSlZFbFBUanRjYmlBZ0lDQmpiMjV6ZENCdlptWnpaWFJOWlhSb2IyUWdQU0IwYUdsekxsOWpiMjVtYVdjdWJXVjBhRzlrSUQwOVBTQW5ZWFYwYnljZ1B5QmhkWFJ2VFdWMGFHOWtJRG9nZEdocGN5NWZZMjl1Wm1sbkxtMWxkR2h2WkR0Y2JpQWdJQ0JqYjI1emRDQnZabVp6WlhSQ1lYTmxJRDBnYjJabWMyVjBUV1YwYUc5a0lEMDlQU0JOUlZSSVQwUmZVRTlUU1ZSSlQwNGdQeUIwYUdsekxsOW5aWFJUWTNKdmJHeFViM0FvS1NBNklEQTdYRzRnSUNBZ2RHaHBjeTVmYjJabWMyVjBjeUE5SUZ0ZE8xeHVJQ0FnSUhSb2FYTXVYM1JoY21kbGRITWdQU0JiWFR0Y2JpQWdJQ0IwYUdsekxsOXpZM0p2Ykd4SVpXbG5hSFFnUFNCMGFHbHpMbDluWlhSVFkzSnZiR3hJWldsbmFIUW9LVHRjYmlBZ0lDQmpiMjV6ZENCMFlYSm5aWFJ6SUQwZ1UyVnNaV04wYjNKRmJtZHBibVV1Wm1sdVpDaFRSVXhGUTFSUFVsOU1TVTVMWDBsVVJVMVRMQ0IwYUdsekxsOWpiMjVtYVdjdWRHRnlaMlYwS1R0Y2JpQWdJQ0IwWVhKblpYUnpMbTFoY0NobGJHVnRaVzUwSUQwK0lIdGNiaUFnSUNBZ0lHTnZibk4wSUhSaGNtZGxkRk5sYkdWamRHOXlJRDBnWjJWMFUyVnNaV04wYjNKR2NtOXRSV3hsYldWdWRDaGxiR1Z0Wlc1MEtUdGNiaUFnSUNBZ0lHTnZibk4wSUhSaGNtZGxkQ0E5SUhSaGNtZGxkRk5sYkdWamRHOXlJRDhnVTJWc1pXTjBiM0pGYm1kcGJtVXVabWx1WkU5dVpTaDBZWEpuWlhSVFpXeGxZM1J2Y2lrZ09pQnVkV3hzTzF4dVhHNGdJQ0FnSUNCcFppQW9kR0Z5WjJWMEtTQjdYRzRnSUNBZ0lDQWdJR052Ym5OMElIUmhjbWRsZEVKRFVpQTlJSFJoY21kbGRDNW5aWFJDYjNWdVpHbHVaME5zYVdWdWRGSmxZM1FvS1R0Y2JseHVJQ0FnSUNBZ0lDQnBaaUFvZEdGeVoyVjBRa05TTG5kcFpIUm9JSHg4SUhSaGNtZGxkRUpEVWk1b1pXbG5hSFFwSUh0Y2JpQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1cwMWhibWx3ZFd4aGRHOXlXMjltWm5ObGRFMWxkR2h2WkYwb2RHRnlaMlYwS1M1MGIzQWdLeUJ2Wm1aelpYUkNZWE5sTENCMFlYSm5aWFJUWld4bFkzUnZjbDA3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ2NtVjBkWEp1SUc1MWJHdzdYRzRnSUNBZ2ZTa3VabWxzZEdWeUtHbDBaVzBnUFQ0Z2FYUmxiU2t1YzI5eWRDZ29ZU3dnWWlrZ1BUNGdZVnN3WFNBdElHSmJNRjBwTG1admNrVmhZMmdvYVhSbGJTQTlQaUI3WEc0Z0lDQWdJQ0IwYUdsekxsOXZabVp6WlhSekxuQjFjMmdvYVhSbGJWc3dYU2s3WEc1Y2JpQWdJQ0FnSUhSb2FYTXVYM1JoY21kbGRITXVjSFZ6YUNocGRHVnRXekZkS1R0Y2JpQWdJQ0I5S1R0Y2JpQWdmVnh1WEc0Z0lHUnBjM0J2YzJVb0tTQjdYRzRnSUNBZ1JYWmxiblJJWVc1a2JHVnlMbTltWmloMGFHbHpMbDl6WTNKdmJHeEZiR1Z0Wlc1MExDQkZWa1ZPVkY5TFJWa2tNaWs3WEc0Z0lDQWdjM1Z3WlhJdVpHbHpjRzl6WlNncE8xeHVJQ0I5SUM4dklGQnlhWFpoZEdWY2JseHVYRzRnSUY5blpYUkRiMjVtYVdjb1kyOXVabWxuS1NCN1hHNGdJQ0FnWTI5dVptbG5JRDBnZXlBdUxpNUVaV1poZFd4MEpERXNYRzRnSUNBZ0lDQXVMaTVOWVc1cGNIVnNZWFJ2Y2k1blpYUkVZWFJoUVhSMGNtbGlkWFJsY3loMGFHbHpMbDlsYkdWdFpXNTBLU3hjYmlBZ0lDQWdJQzR1TGloMGVYQmxiMllnWTI5dVptbG5JRDA5UFNBbmIySnFaV04wSnlBbUppQmpiMjVtYVdjZ1B5QmpiMjVtYVdjZ09pQjdmU2xjYmlBZ0lDQjlPMXh1SUNBZ0lHTnZibVpwWnk1MFlYSm5aWFFnUFNCblpYUkZiR1Z0Wlc1MEtHTnZibVpwWnk1MFlYSm5aWFFwSUh4OElHUnZZM1Z0Wlc1MExtUnZZM1Z0Wlc1MFJXeGxiV1Z1ZER0Y2JpQWdJQ0IwZVhCbFEyaGxZMnREYjI1bWFXY29Ua0ZOUlNReUxDQmpiMjVtYVdjc0lFUmxabUYxYkhSVWVYQmxKREVwTzF4dUlDQWdJSEpsZEhWeWJpQmpiMjVtYVdjN1hHNGdJSDFjYmx4dUlDQmZaMlYwVTJOeWIyeHNWRzl3S0NrZ2UxeHVJQ0FnSUhKbGRIVnliaUIwYUdsekxsOXpZM0p2Ykd4RmJHVnRaVzUwSUQwOVBTQjNhVzVrYjNjZ1B5QjBhR2x6TGw5elkzSnZiR3hGYkdWdFpXNTBMbkJoWjJWWlQyWm1jMlYwSURvZ2RHaHBjeTVmYzJOeWIyeHNSV3hsYldWdWRDNXpZM0p2Ykd4VWIzQTdYRzRnSUgxY2JseHVJQ0JmWjJWMFUyTnliMnhzU0dWcFoyaDBLQ2tnZTF4dUlDQWdJSEpsZEhWeWJpQjBhR2x6TGw5elkzSnZiR3hGYkdWdFpXNTBMbk5qY205c2JFaGxhV2RvZENCOGZDQk5ZWFJvTG0xaGVDaGtiMk4xYldWdWRDNWliMlI1TG5OamNtOXNiRWhsYVdkb2RDd2daRzlqZFcxbGJuUXVaRzlqZFcxbGJuUkZiR1Z0Wlc1MExuTmpjbTlzYkVobGFXZG9kQ2s3WEc0Z0lIMWNibHh1SUNCZloyVjBUMlptYzJWMFNHVnBaMmgwS0NrZ2UxeHVJQ0FnSUhKbGRIVnliaUIwYUdsekxsOXpZM0p2Ykd4RmJHVnRaVzUwSUQwOVBTQjNhVzVrYjNjZ1B5QjNhVzVrYjNjdWFXNXVaWEpJWldsbmFIUWdPaUIwYUdsekxsOXpZM0p2Ykd4RmJHVnRaVzUwTG1kbGRFSnZkVzVrYVc1blEyeHBaVzUwVW1WamRDZ3BMbWhsYVdkb2REdGNiaUFnZlZ4dVhHNGdJRjl3Y205alpYTnpLQ2tnZTF4dUlDQWdJR052Ym5OMElITmpjbTlzYkZSdmNDQTlJSFJvYVhNdVgyZGxkRk5qY205c2JGUnZjQ2dwSUNzZ2RHaHBjeTVmWTI5dVptbG5MbTltWm5ObGREdGNibHh1SUNBZ0lHTnZibk4wSUhOamNtOXNiRWhsYVdkb2RDQTlJSFJvYVhNdVgyZGxkRk5qY205c2JFaGxhV2RvZENncE8xeHVYRzRnSUNBZ1kyOXVjM1FnYldGNFUyTnliMnhzSUQwZ2RHaHBjeTVmWTI5dVptbG5MbTltWm5ObGRDQXJJSE5qY205c2JFaGxhV2RvZENBdElIUm9hWE11WDJkbGRFOW1abk5sZEVobGFXZG9kQ2dwTzF4dVhHNGdJQ0FnYVdZZ0tIUm9hWE11WDNOamNtOXNiRWhsYVdkb2RDQWhQVDBnYzJOeWIyeHNTR1ZwWjJoMEtTQjdYRzRnSUNBZ0lDQjBhR2x6TG5KbFpuSmxjMmdvS1R0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JwWmlBb2MyTnliMnhzVkc5d0lENDlJRzFoZUZOamNtOXNiQ2tnZTF4dUlDQWdJQ0FnWTI5dWMzUWdkR0Z5WjJWMElEMGdkR2hwY3k1ZmRHRnlaMlYwYzF0MGFHbHpMbDkwWVhKblpYUnpMbXhsYm1kMGFDQXRJREZkTzF4dVhHNGdJQ0FnSUNCcFppQW9kR2hwY3k1ZllXTjBhWFpsVkdGeVoyVjBJQ0U5UFNCMFlYSm5aWFFwSUh0Y2JpQWdJQ0FnSUNBZ2RHaHBjeTVmWVdOMGFYWmhkR1VvZEdGeVoyVjBLVHRjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnY21WMGRYSnVPMXh1SUNBZ0lIMWNibHh1SUNBZ0lHbG1JQ2gwYUdsekxsOWhZM1JwZG1WVVlYSm5aWFFnSmlZZ2MyTnliMnhzVkc5d0lEd2dkR2hwY3k1ZmIyWm1jMlYwYzFzd1hTQW1KaUIwYUdsekxsOXZabVp6WlhSeld6QmRJRDRnTUNrZ2UxeHVJQ0FnSUNBZ2RHaHBjeTVmWVdOMGFYWmxWR0Z5WjJWMElEMGdiblZzYkR0Y2JseHVJQ0FnSUNBZ2RHaHBjeTVmWTJ4bFlYSW9LVHRjYmx4dUlDQWdJQ0FnY21WMGRYSnVPMXh1SUNBZ0lIMWNibHh1SUNBZ0lHWnZjaUFvYkdWMElHa2dQU0IwYUdsekxsOXZabVp6WlhSekxteGxibWQwYURzZ2FTMHRPeWtnZTF4dUlDQWdJQ0FnWTI5dWMzUWdhWE5CWTNScGRtVlVZWEpuWlhRZ1BTQjBhR2x6TGw5aFkzUnBkbVZVWVhKblpYUWdJVDA5SUhSb2FYTXVYM1JoY21kbGRITmJhVjBnSmlZZ2MyTnliMnhzVkc5d0lENDlJSFJvYVhNdVgyOW1abk5sZEhOYmFWMGdKaVlnS0hSNWNHVnZaaUIwYUdsekxsOXZabVp6WlhSelcya2dLeUF4WFNBOVBUMGdKM1Z1WkdWbWFXNWxaQ2NnZkh3Z2MyTnliMnhzVkc5d0lEd2dkR2hwY3k1ZmIyWm1jMlYwYzF0cElDc2dNVjBwTzF4dVhHNGdJQ0FnSUNCcFppQW9hWE5CWTNScGRtVlVZWEpuWlhRcElIdGNiaUFnSUNBZ0lDQWdkR2hwY3k1ZllXTjBhWFpoZEdVb2RHaHBjeTVmZEdGeVoyVjBjMXRwWFNrN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dUlDQjlYRzVjYmlBZ1gyRmpkR2wyWVhSbEtIUmhjbWRsZENrZ2UxeHVJQ0FnSUhSb2FYTXVYMkZqZEdsMlpWUmhjbWRsZENBOUlIUmhjbWRsZER0Y2JseHVJQ0FnSUhSb2FYTXVYMk5zWldGeUtDazdYRzVjYmlBZ0lDQmpiMjV6ZENCeGRXVnlhV1Z6SUQwZ1UwVk1SVU5VVDFKZlRFbE9TMTlKVkVWTlV5NXpjR3hwZENnbkxDY3BMbTFoY0NoelpXeGxZM1J2Y2lBOVBpQmdKSHR6Wld4bFkzUnZjbjFiWkdGMFlTMWljeTEwWVhKblpYUTlYQ0lrZTNSaGNtZGxkSDFjSWwwc0pIdHpaV3hsWTNSdmNuMWJhSEpsWmoxY0lpUjdkR0Z5WjJWMGZWd2lYV0FwTzF4dUlDQWdJR052Ym5OMElHeHBibXNnUFNCVFpXeGxZM1J2Y2tWdVoybHVaUzVtYVc1a1QyNWxLSEYxWlhKcFpYTXVhbTlwYmlnbkxDY3BMQ0IwYUdsekxsOWpiMjVtYVdjdWRHRnlaMlYwS1R0Y2JpQWdJQ0JzYVc1ckxtTnNZWE56VEdsemRDNWhaR1FvUTB4QlUxTmZUa0ZOUlY5QlExUkpWa1VrTVNrN1hHNWNiaUFnSUNCcFppQW9iR2x1YXk1amJHRnpjMHhwYzNRdVkyOXVkR0ZwYm5Nb1EweEJVMU5mVGtGTlJWOUVVazlRUkU5WFRsOUpWRVZOS1NrZ2UxeHVJQ0FnSUNBZ1UyVnNaV04wYjNKRmJtZHBibVV1Wm1sdVpFOXVaU2hUUlV4RlExUlBVbDlFVWs5UVJFOVhUbDlVVDBkSFRFVWtNU3dnYkdsdWF5NWpiRzl6WlhOMEtGTkZURVZEVkU5U1gwUlNUMUJFVDFkT0pERXBLUzVqYkdGemMweHBjM1F1WVdSa0tFTk1RVk5UWDA1QlRVVmZRVU5VU1ZaRkpERXBPMXh1SUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNCVFpXeGxZM1J2Y2tWdVoybHVaUzV3WVhKbGJuUnpLR3hwYm1zc0lGTkZURVZEVkU5U1gwNUJWbDlNU1ZOVVgwZFNUMVZRSkRFcExtWnZja1ZoWTJnb2JHbHpkRWR5YjNWd0lEMCtJSHRjYmlBZ0lDQWdJQ0FnTHk4Z1UyVjBJSFJ5YVdkblpYSmxaQ0JzYVc1cmN5QndZWEpsYm5SeklHRnpJR0ZqZEdsMlpWeHVJQ0FnSUNBZ0lDQXZMeUJYYVhSb0lHSnZkR2dnUEhWc1BpQmhibVFnUEc1aGRqNGdiV0Z5YTNWd0lHRWdjR0Z5Wlc1MElHbHpJSFJvWlNCd2NtVjJhVzkxY3lCemFXSnNhVzVuSUc5bUlHRnVlU0J1WVhZZ1lXNWpaWE4wYjNKY2JpQWdJQ0FnSUNBZ1UyVnNaV04wYjNKRmJtZHBibVV1Y0hKbGRpaHNhWE4wUjNKdmRYQXNJR0FrZTFORlRFVkRWRTlTWDA1QlZsOU1TVTVMVTMwc0lDUjdVMFZNUlVOVVQxSmZURWxUVkY5SlZFVk5VMzFnS1M1bWIzSkZZV05vS0dsMFpXMGdQVDRnYVhSbGJTNWpiR0Z6YzB4cGMzUXVZV1JrS0VOTVFWTlRYMDVCVFVWZlFVTlVTVlpGSkRFcEtUc2dMeThnU0dGdVpHeGxJSE53WldOcFlXd2dZMkZ6WlNCM2FHVnVJQzV1WVhZdGJHbHVheUJwY3lCcGJuTnBaR1VnTG01aGRpMXBkR1Z0WEc1Y2JpQWdJQ0FnSUNBZ1UyVnNaV04wYjNKRmJtZHBibVV1Y0hKbGRpaHNhWE4wUjNKdmRYQXNJRk5GVEVWRFZFOVNYMDVCVmw5SlZFVk5VeWt1Wm05eVJXRmphQ2h1WVhaSmRHVnRJRDArSUh0Y2JpQWdJQ0FnSUNBZ0lDQlRaV3hsWTNSdmNrVnVaMmx1WlM1amFHbHNaSEpsYmlodVlYWkpkR1Z0TENCVFJVeEZRMVJQVWw5T1FWWmZURWxPUzFNcExtWnZja1ZoWTJnb2FYUmxiU0E5UGlCcGRHVnRMbU5zWVhOelRHbHpkQzVoWkdRb1EweEJVMU5mVGtGTlJWOUJRMVJKVmtVa01Ta3BPMXh1SUNBZ0lDQWdJQ0I5S1R0Y2JpQWdJQ0FnSUgwcE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUVWMlpXNTBTR0Z1Wkd4bGNpNTBjbWxuWjJWeUtIUm9hWE11WDNOamNtOXNiRVZzWlcxbGJuUXNJRVZXUlU1VVgwRkRWRWxXUVZSRkxDQjdYRzRnSUNBZ0lDQnlaV3hoZEdWa1ZHRnlaMlYwT2lCMFlYSm5aWFJjYmlBZ0lDQjlLVHRjYmlBZ2ZWeHVYRzRnSUY5amJHVmhjaWdwSUh0Y2JpQWdJQ0JUWld4bFkzUnZja1Z1WjJsdVpTNW1hVzVrS0ZORlRFVkRWRTlTWDB4SlRrdGZTVlJGVFZNc0lIUm9hWE11WDJOdmJtWnBaeTUwWVhKblpYUXBMbVpwYkhSbGNpaHViMlJsSUQwK0lHNXZaR1V1WTJ4aGMzTk1hWE4wTG1OdmJuUmhhVzV6S0VOTVFWTlRYMDVCVFVWZlFVTlVTVlpGSkRFcEtTNW1iM0pGWVdOb0tHNXZaR1VnUFQ0Z2JtOWtaUzVqYkdGemMweHBjM1F1Y21WdGIzWmxLRU5NUVZOVFgwNUJUVVZmUVVOVVNWWkZKREVwS1R0Y2JpQWdmU0F2THlCVGRHRjBhV05jYmx4dVhHNGdJSE4wWVhScFl5QnFVWFZsY25sSmJuUmxjbVpoWTJVb1kyOXVabWxuS1NCN1hHNGdJQ0FnY21WMGRYSnVJSFJvYVhNdVpXRmphQ2htZFc1amRHbHZiaUFvS1NCN1hHNGdJQ0FnSUNCamIyNXpkQ0JrWVhSaElEMGdVMk55YjJ4c1UzQjVMbWRsZEU5eVEzSmxZWFJsU1c1emRHRnVZMlVvZEdocGN5d2dZMjl1Wm1sbktUdGNibHh1SUNBZ0lDQWdhV1lnS0hSNWNHVnZaaUJqYjI1bWFXY2dJVDA5SUNkemRISnBibWNuS1NCN1hHNGdJQ0FnSUNBZ0lISmxkSFZ5Ymp0Y2JpQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ2FXWWdLSFI1Y0dWdlppQmtZWFJoVzJOdmJtWnBaMTBnUFQwOUlDZDFibVJsWm1sdVpXUW5LU0I3WEc0Z0lDQWdJQ0FnSUhSb2NtOTNJRzVsZHlCVWVYQmxSWEp5YjNJb1lFNXZJRzFsZEdodlpDQnVZVzFsWkNCY0lpUjdZMjl1Wm1sbmZWd2lZQ2s3WEc0Z0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUdSaGRHRmJZMjl1Wm1sblhTZ3BPMXh1SUNBZ0lIMHBPMXh1SUNCOVhHNWNibjFjYmk4cUtseHVJQ29nTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0WEc0Z0tpQkVZWFJoSUVGd2FTQnBiWEJzWlcxbGJuUmhkR2x2Ymx4dUlDb2dMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRYRzRnS2k5Y2JseHVYRzVGZG1WdWRFaGhibVJzWlhJdWIyNG9kMmx1Wkc5M0xDQkZWa1ZPVkY5TVQwRkVYMFJCVkVGZlFWQkpMQ0FvS1NBOVBpQjdYRzRnSUZObGJHVmpkRzl5Ulc1bmFXNWxMbVpwYm1Rb1UwVk1SVU5VVDFKZlJFRlVRVjlUVUZrcExtWnZja1ZoWTJnb2MzQjVJRDArSUc1bGR5QlRZM0p2Ykd4VGNIa29jM0I1S1NrN1hHNTlLVHRjYmk4cUtseHVJQ29nTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0WEc0Z0tpQnFVWFZsY25sY2JpQXFJQzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMVnh1SUNvZ1lXUmtJQzVUWTNKdmJHeFRjSGtnZEc4Z2FsRjFaWEo1SUc5dWJIa2dhV1lnYWxGMVpYSjVJR2x6SUhCeVpYTmxiblJjYmlBcUwxeHVYRzVrWldacGJtVktVWFZsY25sUWJIVm5hVzRvVTJOeWIyeHNVM0I1S1R0Y2JseHVMeW9xWEc0Z0tpQXRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMVnh1SUNvZ1FtOXZkSE4wY21Gd0lDaDJOUzR4TGpNcE9pQjBZV0l1YW5OY2JpQXFJRXhwWTJWdWMyVmtJSFZ1WkdWeUlFMUpWQ0FvYUhSMGNITTZMeTluYVhSb2RXSXVZMjl0TDNSM1luTXZZbTl2ZEhOMGNtRndMMkpzYjJJdmJXRnBiaTlNU1VORlRsTkZLVnh1SUNvZ0xTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMWNiaUFxTDF4dUx5b3FYRzRnS2lBdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMxY2JpQXFJRU52Ym5OMFlXNTBjMXh1SUNvZ0xTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdFhHNGdLaTljYmx4dVkyOXVjM1FnVGtGTlJTUXhJRDBnSjNSaFlpYzdYRzVqYjI1emRDQkVRVlJCWDB0RldTUXhJRDBnSjJKekxuUmhZaWM3WEc1amIyNXpkQ0JGVmtWT1ZGOUxSVmtrTVNBOUlHQXVKSHRFUVZSQlgwdEZXU1F4ZldBN1hHNWpiMjV6ZENCRVFWUkJYMEZRU1Y5TFJWa2dQU0FuTG1SaGRHRXRZWEJwSnp0Y2JtTnZibk4wSUVWV1JVNVVYMGhKUkVVa01TQTlJR0JvYVdSbEpIdEZWa1ZPVkY5TFJWa2tNWDFnTzF4dVkyOXVjM1FnUlZaRlRsUmZTRWxFUkVWT0pERWdQU0JnYUdsa1pHVnVKSHRGVmtWT1ZGOUxSVmtrTVgxZ08xeHVZMjl1YzNRZ1JWWkZUbFJmVTBoUFZ5UXhJRDBnWUhOb2IzY2tlMFZXUlU1VVgwdEZXU1F4ZldBN1hHNWpiMjV6ZENCRlZrVk9WRjlUU0U5WFRpUXhJRDBnWUhOb2IzZHVKSHRGVmtWT1ZGOUxSVmtrTVgxZ08xeHVZMjl1YzNRZ1JWWkZUbFJmUTB4SlEwdGZSRUZVUVY5QlVFa2dQU0JnWTJ4cFkyc2tlMFZXUlU1VVgwdEZXU1F4ZlNSN1JFRlVRVjlCVUVsZlMwVlpmV0E3WEc1amIyNXpkQ0JEVEVGVFUxOU9RVTFGWDBSU1QxQkVUMWRPWDAxRlRsVWdQU0FuWkhKdmNHUnZkMjR0YldWdWRTYzdYRzVqYjI1emRDQkRURUZUVTE5T1FVMUZYMEZEVkVsV1JTQTlJQ2RoWTNScGRtVW5PMXh1WTI5dWMzUWdRMHhCVTFOZlRrRk5SVjlHUVVSRkpERWdQU0FuWm1Ga1pTYzdYRzVqYjI1emRDQkRURUZUVTE5T1FVMUZYMU5JVDFja01TQTlJQ2R6YUc5M0p6dGNibU52Ym5OMElGTkZURVZEVkU5U1gwUlNUMUJFVDFkT0lEMGdKeTVrY205d1pHOTNiaWM3WEc1amIyNXpkQ0JUUlV4RlExUlBVbDlPUVZaZlRFbFRWRjlIVWs5VlVDQTlJQ2N1Ym1GMkxDQXViR2x6ZEMxbmNtOTFjQ2M3WEc1amIyNXpkQ0JUUlV4RlExUlBVbDlCUTFSSlZrVWdQU0FuTG1GamRHbDJaU2M3WEc1amIyNXpkQ0JUUlV4RlExUlBVbDlCUTFSSlZrVmZWVXdnUFNBbk9uTmpiM0JsSUQ0Z2JHa2dQaUF1WVdOMGFYWmxKenRjYm1OdmJuTjBJRk5GVEVWRFZFOVNYMFJCVkVGZlZFOUhSMHhGSUQwZ0oxdGtZWFJoTFdKekxYUnZaMmRzWlQxY0luUmhZbHdpWFN3Z1cyUmhkR0V0WW5NdGRHOW5aMnhsUFZ3aWNHbHNiRndpWFN3Z1cyUmhkR0V0WW5NdGRHOW5aMnhsUFZ3aWJHbHpkRndpWFNjN1hHNWpiMjV6ZENCVFJVeEZRMVJQVWw5RVVrOVFSRTlYVGw5VVQwZEhURVVnUFNBbkxtUnliM0JrYjNkdUxYUnZaMmRzWlNjN1hHNWpiMjV6ZENCVFJVeEZRMVJQVWw5RVVrOVFSRTlYVGw5QlExUkpWa1ZmUTBoSlRFUWdQU0FuT25OamIzQmxJRDRnTG1SeWIzQmtiM2R1TFcxbGJuVWdMbUZqZEdsMlpTYzdYRzR2S2lwY2JpQXFJQzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMVnh1SUNvZ1EyeGhjM01nUkdWbWFXNXBkR2x2Ymx4dUlDb2dMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRYRzRnS2k5Y2JseHVZMnhoYzNNZ1ZHRmlJR1Y0ZEdWdVpITWdRbUZ6WlVOdmJYQnZibVZ1ZENCN1hHNGdJQzh2SUVkbGRIUmxjbk5jYmlBZ2MzUmhkR2xqSUdkbGRDQk9RVTFGS0NrZ2UxeHVJQ0FnSUhKbGRIVnliaUJPUVUxRkpERTdYRzRnSUgwZ0x5OGdVSFZpYkdsalhHNWNibHh1SUNCemFHOTNLQ2tnZTF4dUlDQWdJR2xtSUNoMGFHbHpMbDlsYkdWdFpXNTBMbkJoY21WdWRFNXZaR1VnSmlZZ2RHaHBjeTVmWld4bGJXVnVkQzV3WVhKbGJuUk9iMlJsTG01dlpHVlVlWEJsSUQwOVBTQk9iMlJsTGtWTVJVMUZUbFJmVGs5RVJTQW1KaUIwYUdsekxsOWxiR1Z0Wlc1MExtTnNZWE56VEdsemRDNWpiMjUwWVdsdWN5aERURUZUVTE5T1FVMUZYMEZEVkVsV1JTa3BJSHRjYmlBZ0lDQWdJSEpsZEhWeWJqdGNiaUFnSUNCOVhHNWNiaUFnSUNCc1pYUWdjSEpsZG1sdmRYTTdYRzRnSUNBZ1kyOXVjM1FnZEdGeVoyVjBJRDBnWjJWMFJXeGxiV1Z1ZEVaeWIyMVRaV3hsWTNSdmNpaDBhR2x6TGw5bGJHVnRaVzUwS1R0Y2JseHVJQ0FnSUdOdmJuTjBJR3hwYzNSRmJHVnRaVzUwSUQwZ2RHaHBjeTVmWld4bGJXVnVkQzVqYkc5elpYTjBLRk5GVEVWRFZFOVNYMDVCVmw5TVNWTlVYMGRTVDFWUUtUdGNibHh1SUNBZ0lHbG1JQ2hzYVhOMFJXeGxiV1Z1ZENrZ2UxeHVJQ0FnSUNBZ1kyOXVjM1FnYVhSbGJWTmxiR1ZqZEc5eUlEMGdiR2x6ZEVWc1pXMWxiblF1Ym05a1pVNWhiV1VnUFQwOUlDZFZUQ2NnZkh3Z2JHbHpkRVZzWlcxbGJuUXVibTlrWlU1aGJXVWdQVDA5SUNkUFRDY2dQeUJUUlV4RlExUlBVbDlCUTFSSlZrVmZWVXdnT2lCVFJVeEZRMVJQVWw5QlExUkpWa1U3WEc0Z0lDQWdJQ0J3Y21WMmFXOTFjeUE5SUZObGJHVmpkRzl5Ulc1bmFXNWxMbVpwYm1Rb2FYUmxiVk5sYkdWamRHOXlMQ0JzYVhOMFJXeGxiV1Z1ZENrN1hHNGdJQ0FnSUNCd2NtVjJhVzkxY3lBOUlIQnlaWFpwYjNWelczQnlaWFpwYjNWekxteGxibWQwYUNBdElERmRPMXh1SUNBZ0lIMWNibHh1SUNBZ0lHTnZibk4wSUdocFpHVkZkbVZ1ZENBOUlIQnlaWFpwYjNWeklEOGdSWFpsYm5SSVlXNWtiR1Z5TG5SeWFXZG5aWElvY0hKbGRtbHZkWE1zSUVWV1JVNVVYMGhKUkVVa01Td2dlMXh1SUNBZ0lDQWdjbVZzWVhSbFpGUmhjbWRsZERvZ2RHaHBjeTVmWld4bGJXVnVkRnh1SUNBZ0lIMHBJRG9nYm5Wc2JEdGNiaUFnSUNCamIyNXpkQ0J6YUc5M1JYWmxiblFnUFNCRmRtVnVkRWhoYm1Sc1pYSXVkSEpwWjJkbGNpaDBhR2x6TGw5bGJHVnRaVzUwTENCRlZrVk9WRjlUU0U5WEpERXNJSHRjYmlBZ0lDQWdJSEpsYkdGMFpXUlVZWEpuWlhRNklIQnlaWFpwYjNWelhHNGdJQ0FnZlNrN1hHNWNiaUFnSUNCcFppQW9jMmh2ZDBWMlpXNTBMbVJsWm1GMWJIUlFjbVYyWlc1MFpXUWdmSHdnYUdsa1pVVjJaVzUwSUNFOVBTQnVkV3hzSUNZbUlHaHBaR1ZGZG1WdWRDNWtaV1poZFd4MFVISmxkbVZ1ZEdWa0tTQjdYRzRnSUNBZ0lDQnlaWFIxY200N1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnZEdocGN5NWZZV04wYVhaaGRHVW9kR2hwY3k1ZlpXeGxiV1Z1ZEN3Z2JHbHpkRVZzWlcxbGJuUXBPMXh1WEc0Z0lDQWdZMjl1YzNRZ1kyOXRjR3hsZEdVZ1BTQW9LU0E5UGlCN1hHNGdJQ0FnSUNCRmRtVnVkRWhoYm1Sc1pYSXVkSEpwWjJkbGNpaHdjbVYyYVc5MWN5d2dSVlpGVGxSZlNFbEVSRVZPSkRFc0lIdGNiaUFnSUNBZ0lDQWdjbVZzWVhSbFpGUmhjbWRsZERvZ2RHaHBjeTVmWld4bGJXVnVkRnh1SUNBZ0lDQWdmU2s3WEc0Z0lDQWdJQ0JGZG1WdWRFaGhibVJzWlhJdWRISnBaMmRsY2loMGFHbHpMbDlsYkdWdFpXNTBMQ0JGVmtWT1ZGOVRTRTlYVGlReExDQjdYRzRnSUNBZ0lDQWdJSEpsYkdGMFpXUlVZWEpuWlhRNklIQnlaWFpwYjNWelhHNGdJQ0FnSUNCOUtUdGNiaUFnSUNCOU8xeHVYRzRnSUNBZ2FXWWdLSFJoY21kbGRDa2dlMXh1SUNBZ0lDQWdkR2hwY3k1ZllXTjBhWFpoZEdVb2RHRnlaMlYwTENCMFlYSm5aWFF1Y0dGeVpXNTBUbTlrWlN3Z1kyOXRjR3hsZEdVcE8xeHVJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0JqYjIxd2JHVjBaU2dwTzF4dUlDQWdJSDFjYmlBZ2ZTQXZMeUJRY21sMllYUmxYRzVjYmx4dUlDQmZZV04wYVhaaGRHVW9aV3hsYldWdWRDd2dZMjl1ZEdGcGJtVnlMQ0JqWVd4c1ltRmpheWtnZTF4dUlDQWdJR052Ym5OMElHRmpkR2wyWlVWc1pXMWxiblJ6SUQwZ1kyOXVkR0ZwYm1WeUlDWW1JQ2hqYjI1MFlXbHVaWEl1Ym05a1pVNWhiV1VnUFQwOUlDZFZUQ2NnZkh3Z1kyOXVkR0ZwYm1WeUxtNXZaR1ZPWVcxbElEMDlQU0FuVDB3bktTQS9JRk5sYkdWamRHOXlSVzVuYVc1bExtWnBibVFvVTBWTVJVTlVUMUpmUVVOVVNWWkZYMVZNTENCamIyNTBZV2x1WlhJcElEb2dVMlZzWldOMGIzSkZibWRwYm1VdVkyaHBiR1J5Wlc0b1kyOXVkR0ZwYm1WeUxDQlRSVXhGUTFSUFVsOUJRMVJKVmtVcE8xeHVJQ0FnSUdOdmJuTjBJR0ZqZEdsMlpTQTlJR0ZqZEdsMlpVVnNaVzFsYm5Seld6QmRPMXh1SUNBZ0lHTnZibk4wSUdselZISmhibk5wZEdsdmJtbHVaeUE5SUdOaGJHeGlZV05ySUNZbUlHRmpkR2wyWlNBbUppQmhZM1JwZG1VdVkyeGhjM05NYVhOMExtTnZiblJoYVc1ektFTk1RVk5UWDA1QlRVVmZSa0ZFUlNReEtUdGNibHh1SUNBZ0lHTnZibk4wSUdOdmJYQnNaWFJsSUQwZ0tDa2dQVDRnZEdocGN5NWZkSEpoYm5OcGRHbHZia052YlhCc1pYUmxLR1ZzWlcxbGJuUXNJR0ZqZEdsMlpTd2dZMkZzYkdKaFkyc3BPMXh1WEc0Z0lDQWdhV1lnS0dGamRHbDJaU0FtSmlCcGMxUnlZVzV6YVhScGIyNXBibWNwSUh0Y2JpQWdJQ0FnSUdGamRHbDJaUzVqYkdGemMweHBjM1F1Y21WdGIzWmxLRU5NUVZOVFgwNUJUVVZmVTBoUFZ5UXhLVHRjYmx4dUlDQWdJQ0FnZEdocGN5NWZjWFZsZFdWRFlXeHNZbUZqYXloamIyMXdiR1YwWlN3Z1pXeGxiV1Z1ZEN3Z2RISjFaU2s3WEc0Z0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lHTnZiWEJzWlhSbEtDazdYRzRnSUNBZ2ZWeHVJQ0I5WEc1Y2JpQWdYM1J5WVc1emFYUnBiMjVEYjIxd2JHVjBaU2hsYkdWdFpXNTBMQ0JoWTNScGRtVXNJR05oYkd4aVlXTnJLU0I3WEc0Z0lDQWdhV1lnS0dGamRHbDJaU2tnZTF4dUlDQWdJQ0FnWVdOMGFYWmxMbU5zWVhOelRHbHpkQzV5WlcxdmRtVW9RMHhCVTFOZlRrRk5SVjlCUTFSSlZrVXBPMXh1SUNBZ0lDQWdZMjl1YzNRZ1pISnZjR1J2ZDI1RGFHbHNaQ0E5SUZObGJHVmpkRzl5Ulc1bmFXNWxMbVpwYm1SUGJtVW9VMFZNUlVOVVQxSmZSRkpQVUVSUFYwNWZRVU5VU1ZaRlgwTklTVXhFTENCaFkzUnBkbVV1Y0dGeVpXNTBUbTlrWlNrN1hHNWNiaUFnSUNBZ0lHbG1JQ2hrY205d1pHOTNia05vYVd4a0tTQjdYRzRnSUNBZ0lDQWdJR1J5YjNCa2IzZHVRMmhwYkdRdVkyeGhjM05NYVhOMExuSmxiVzkyWlNoRFRFRlRVMTlPUVUxRlgwRkRWRWxXUlNrN1hHNGdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lHbG1JQ2hoWTNScGRtVXVaMlYwUVhSMGNtbGlkWFJsS0NkeWIyeGxKeWtnUFQwOUlDZDBZV0luS1NCN1hHNGdJQ0FnSUNBZ0lHRmpkR2wyWlM1elpYUkJkSFJ5YVdKMWRHVW9KMkZ5YVdFdGMyVnNaV04wWldRbkxDQm1ZV3h6WlNrN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dVhHNGdJQ0FnWld4bGJXVnVkQzVqYkdGemMweHBjM1F1WVdSa0tFTk1RVk5UWDA1QlRVVmZRVU5VU1ZaRktUdGNibHh1SUNBZ0lHbG1JQ2hsYkdWdFpXNTBMbWRsZEVGMGRISnBZblYwWlNnbmNtOXNaU2NwSUQwOVBTQW5kR0ZpSnlrZ2UxeHVJQ0FnSUNBZ1pXeGxiV1Z1ZEM1elpYUkJkSFJ5YVdKMWRHVW9KMkZ5YVdFdGMyVnNaV04wWldRbkxDQjBjblZsS1R0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0J5Wldac2IzY29aV3hsYldWdWRDazdYRzVjYmlBZ0lDQnBaaUFvWld4bGJXVnVkQzVqYkdGemMweHBjM1F1WTI5dWRHRnBibk1vUTB4QlUxTmZUa0ZOUlY5R1FVUkZKREVwS1NCN1hHNGdJQ0FnSUNCbGJHVnRaVzUwTG1Oc1lYTnpUR2x6ZEM1aFpHUW9RMHhCVTFOZlRrRk5SVjlUU0U5WEpERXBPMXh1SUNBZ0lIMWNibHh1SUNBZ0lHeGxkQ0J3WVhKbGJuUWdQU0JsYkdWdFpXNTBMbkJoY21WdWRFNXZaR1U3WEc1Y2JpQWdJQ0JwWmlBb2NHRnlaVzUwSUNZbUlIQmhjbVZ1ZEM1dWIyUmxUbUZ0WlNBOVBUMGdKMHhKSnlrZ2UxeHVJQ0FnSUNBZ2NHRnlaVzUwSUQwZ2NHRnlaVzUwTG5CaGNtVnVkRTV2WkdVN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnYVdZZ0tIQmhjbVZ1ZENBbUppQndZWEpsYm5RdVkyeGhjM05NYVhOMExtTnZiblJoYVc1ektFTk1RVk5UWDA1QlRVVmZSRkpQVUVSUFYwNWZUVVZPVlNrcElIdGNiaUFnSUNBZ0lHTnZibk4wSUdSeWIzQmtiM2R1Uld4bGJXVnVkQ0E5SUdWc1pXMWxiblF1WTJ4dmMyVnpkQ2hUUlV4RlExUlBVbDlFVWs5UVJFOVhUaWs3WEc1Y2JpQWdJQ0FnSUdsbUlDaGtjbTl3Wkc5M2JrVnNaVzFsYm5RcElIdGNiaUFnSUNBZ0lDQWdVMlZzWldOMGIzSkZibWRwYm1VdVptbHVaQ2hUUlV4RlExUlBVbDlFVWs5UVJFOVhUbDlVVDBkSFRFVXNJR1J5YjNCa2IzZHVSV3hsYldWdWRDa3VabTl5UldGamFDaGtjbTl3Wkc5M2JpQTlQaUJrY205d1pHOTNiaTVqYkdGemMweHBjM1F1WVdSa0tFTk1RVk5UWDA1QlRVVmZRVU5VU1ZaRktTazdYRzRnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJR1ZzWlcxbGJuUXVjMlYwUVhSMGNtbGlkWFJsS0NkaGNtbGhMV1Y0Y0dGdVpHVmtKeXdnZEhKMVpTazdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2FXWWdLR05oYkd4aVlXTnJLU0I3WEc0Z0lDQWdJQ0JqWVd4c1ltRmpheWdwTzF4dUlDQWdJSDFjYmlBZ2ZTQXZMeUJUZEdGMGFXTmNibHh1WEc0Z0lITjBZWFJwWXlCcVVYVmxjbmxKYm5SbGNtWmhZMlVvWTI5dVptbG5LU0I3WEc0Z0lDQWdjbVYwZFhKdUlIUm9hWE11WldGamFDaG1kVzVqZEdsdmJpQW9LU0I3WEc0Z0lDQWdJQ0JqYjI1emRDQmtZWFJoSUQwZ1ZHRmlMbWRsZEU5eVEzSmxZWFJsU1c1emRHRnVZMlVvZEdocGN5azdYRzVjYmlBZ0lDQWdJR2xtSUNoMGVYQmxiMllnWTI5dVptbG5JRDA5UFNBbmMzUnlhVzVuSnlrZ2UxeHVJQ0FnSUNBZ0lDQnBaaUFvZEhsd1pXOW1JR1JoZEdGYlkyOXVabWxuWFNBOVBUMGdKM1Z1WkdWbWFXNWxaQ2NwSUh0Y2JpQWdJQ0FnSUNBZ0lDQjBhSEp2ZHlCdVpYY2dWSGx3WlVWeWNtOXlLR0JPYnlCdFpYUm9iMlFnYm1GdFpXUWdYQ0lrZTJOdmJtWnBaMzFjSW1BcE8xeHVJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnWkdGMFlWdGpiMjVtYVdkZEtDazdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZTazdYRzRnSUgxY2JseHVmVnh1THlvcVhHNGdLaUF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzFjYmlBcUlFUmhkR0VnUVhCcElHbHRjR3hsYldWdWRHRjBhVzl1WEc0Z0tpQXRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMWNiaUFxTDF4dVhHNWNia1YyWlc1MFNHRnVaR3hsY2k1dmJpaGtiMk4xYldWdWRDd2dSVlpGVGxSZlEweEpRMHRmUkVGVVFWOUJVRWtzSUZORlRFVkRWRTlTWDBSQlZFRmZWRTlIUjB4RkxDQm1kVzVqZEdsdmJpQW9aWFpsYm5RcElIdGNiaUFnYVdZZ0tGc25RU2NzSUNkQlVrVkJKMTB1YVc1amJIVmtaWE1vZEdocGN5NTBZV2RPWVcxbEtTa2dlMXh1SUNBZ0lHVjJaVzUwTG5CeVpYWmxiblJFWldaaGRXeDBLQ2s3WEc0Z0lIMWNibHh1SUNCcFppQW9hWE5FYVhOaFlteGxaQ2gwYUdsektTa2dlMXh1SUNBZ0lISmxkSFZ5Ymp0Y2JpQWdmVnh1WEc0Z0lHTnZibk4wSUdSaGRHRWdQU0JVWVdJdVoyVjBUM0pEY21WaGRHVkpibk4wWVc1alpTaDBhR2x6S1R0Y2JpQWdaR0YwWVM1emFHOTNLQ2s3WEc1OUtUdGNiaThxS2x4dUlDb2dMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRYRzRnS2lCcVVYVmxjbmxjYmlBcUlDMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExWeHVJQ29nWVdSa0lDNVVZV0lnZEc4Z2FsRjFaWEo1SUc5dWJIa2dhV1lnYWxGMVpYSjVJR2x6SUhCeVpYTmxiblJjYmlBcUwxeHVYRzVrWldacGJtVktVWFZsY25sUWJIVm5hVzRvVkdGaUtUdGNibHh1THlvcVhHNGdLaUF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFZ4dUlDb2dRbTl2ZEhOMGNtRndJQ2gyTlM0eExqTXBPaUIwYjJGemRDNXFjMXh1SUNvZ1RHbGpaVzV6WldRZ2RXNWtaWElnVFVsVUlDaG9kSFJ3Y3pvdkwyZHBkR2gxWWk1amIyMHZkSGRpY3k5aWIyOTBjM1J5WVhBdllteHZZaTl0WVdsdUwweEpRMFZPVTBVcFhHNGdLaUF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFZ4dUlDb3ZYRzR2S2lwY2JpQXFJQzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMVnh1SUNvZ1EyOXVjM1JoYm5SelhHNGdLaUF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzFjYmlBcUwxeHVYRzVqYjI1emRDQk9RVTFGSUQwZ0ozUnZZWE4wSnp0Y2JtTnZibk4wSUVSQlZFRmZTMFZaSUQwZ0oySnpMblJ2WVhOMEp6dGNibU52Ym5OMElFVldSVTVVWDB0RldTQTlJR0F1Skh0RVFWUkJYMHRGV1gxZ08xeHVZMjl1YzNRZ1JWWkZUbFJmVFU5VlUwVlBWa1ZTSUQwZ1lHMXZkWE5sYjNabGNpUjdSVlpGVGxSZlMwVlpmV0E3WEc1amIyNXpkQ0JGVmtWT1ZGOU5UMVZUUlU5VlZDQTlJR0J0YjNWelpXOTFkQ1I3UlZaRlRsUmZTMFZaZldBN1hHNWpiMjV6ZENCRlZrVk9WRjlHVDBOVlUwbE9JRDBnWUdadlkzVnphVzRrZTBWV1JVNVVYMHRGV1gxZ08xeHVZMjl1YzNRZ1JWWkZUbFJmUms5RFZWTlBWVlFnUFNCZ1ptOWpkWE52ZFhRa2UwVldSVTVVWDB0RldYMWdPMXh1WTI5dWMzUWdSVlpGVGxSZlNFbEVSU0E5SUdCb2FXUmxKSHRGVmtWT1ZGOUxSVmw5WUR0Y2JtTnZibk4wSUVWV1JVNVVYMGhKUkVSRlRpQTlJR0JvYVdSa1pXNGtlMFZXUlU1VVgwdEZXWDFnTzF4dVkyOXVjM1FnUlZaRlRsUmZVMGhQVnlBOUlHQnphRzkzSkh0RlZrVk9WRjlMUlZsOVlEdGNibU52Ym5OMElFVldSVTVVWDFOSVQxZE9JRDBnWUhOb2IzZHVKSHRGVmtWT1ZGOUxSVmw5WUR0Y2JtTnZibk4wSUVOTVFWTlRYMDVCVFVWZlJrRkVSU0E5SUNkbVlXUmxKenRjYm1OdmJuTjBJRU5NUVZOVFgwNUJUVVZmU0VsRVJTQTlJQ2RvYVdSbEp6c2dMeThnUUdSbGNISmxZMkYwWldRZ0xTQnJaWEIwSUdobGNtVWdiMjVzZVNCbWIzSWdZbUZqYTNkaGNtUnpJR052YlhCaGRHbGlhV3hwZEhsY2JseHVZMjl1YzNRZ1EweEJVMU5mVGtGTlJWOVRTRTlYSUQwZ0ozTm9iM2NuTzF4dVkyOXVjM1FnUTB4QlUxTmZUa0ZOUlY5VFNFOVhTVTVISUQwZ0ozTm9iM2RwYm1jbk8xeHVZMjl1YzNRZ1JHVm1ZWFZzZEZSNWNHVWdQU0I3WEc0Z0lHRnVhVzFoZEdsdmJqb2dKMkp2YjJ4bFlXNG5MRnh1SUNCaGRYUnZhR2xrWlRvZ0oySnZiMnhsWVc0bkxGeHVJQ0JrWld4aGVUb2dKMjUxYldKbGNpZGNibjA3WEc1amIyNXpkQ0JFWldaaGRXeDBJRDBnZTF4dUlDQmhibWx0WVhScGIyNDZJSFJ5ZFdVc1hHNGdJR0YxZEc5b2FXUmxPaUIwY25WbExGeHVJQ0JrWld4aGVUb2dOVEF3TUZ4dWZUdGNiaThxS2x4dUlDb2dMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRYRzRnS2lCRGJHRnpjeUJFWldacGJtbDBhVzl1WEc0Z0tpQXRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMWNiaUFxTDF4dVhHNWpiR0Z6Y3lCVWIyRnpkQ0JsZUhSbGJtUnpJRUpoYzJWRGIyMXdiMjVsYm5RZ2UxeHVJQ0JqYjI1emRISjFZM1J2Y2lobGJHVnRaVzUwTENCamIyNW1hV2NwSUh0Y2JpQWdJQ0J6ZFhCbGNpaGxiR1Z0Wlc1MEtUdGNiaUFnSUNCMGFHbHpMbDlqYjI1bWFXY2dQU0IwYUdsekxsOW5aWFJEYjI1bWFXY29ZMjl1Wm1sbktUdGNiaUFnSUNCMGFHbHpMbDkwYVcxbGIzVjBJRDBnYm5Wc2JEdGNiaUFnSUNCMGFHbHpMbDlvWVhOTmIzVnpaVWx1ZEdWeVlXTjBhVzl1SUQwZ1ptRnNjMlU3WEc0Z0lDQWdkR2hwY3k1ZmFHRnpTMlY1WW05aGNtUkpiblJsY21GamRHbHZiaUE5SUdaaGJITmxPMXh1WEc0Z0lDQWdkR2hwY3k1ZmMyVjBUR2x6ZEdWdVpYSnpLQ2s3WEc0Z0lIMGdMeThnUjJWMGRHVnljMXh1WEc1Y2JpQWdjM1JoZEdsaklHZGxkQ0JFWldaaGRXeDBWSGx3WlNncElIdGNiaUFnSUNCeVpYUjFjbTRnUkdWbVlYVnNkRlI1Y0dVN1hHNGdJSDFjYmx4dUlDQnpkR0YwYVdNZ1oyVjBJRVJsWm1GMWJIUW9LU0I3WEc0Z0lDQWdjbVYwZFhKdUlFUmxabUYxYkhRN1hHNGdJSDFjYmx4dUlDQnpkR0YwYVdNZ1oyVjBJRTVCVFVVb0tTQjdYRzRnSUNBZ2NtVjBkWEp1SUU1QlRVVTdYRzRnSUgwZ0x5OGdVSFZpYkdsalhHNWNibHh1SUNCemFHOTNLQ2tnZTF4dUlDQWdJR052Ym5OMElITm9iM2RGZG1WdWRDQTlJRVYyWlc1MFNHRnVaR3hsY2k1MGNtbG5aMlZ5S0hSb2FYTXVYMlZzWlcxbGJuUXNJRVZXUlU1VVgxTklUMWNwTzF4dVhHNGdJQ0FnYVdZZ0tITm9iM2RGZG1WdWRDNWtaV1poZFd4MFVISmxkbVZ1ZEdWa0tTQjdYRzRnSUNBZ0lDQnlaWFIxY200N1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnZEdocGN5NWZZMnhsWVhKVWFXMWxiM1YwS0NrN1hHNWNiaUFnSUNCcFppQW9kR2hwY3k1ZlkyOXVabWxuTG1GdWFXMWhkR2x2YmlrZ2UxeHVJQ0FnSUNBZ2RHaHBjeTVmWld4bGJXVnVkQzVqYkdGemMweHBjM1F1WVdSa0tFTk1RVk5UWDA1QlRVVmZSa0ZFUlNrN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnWTI5dWMzUWdZMjl0Y0d4bGRHVWdQU0FvS1NBOVBpQjdYRzRnSUNBZ0lDQjBhR2x6TGw5bGJHVnRaVzUwTG1Oc1lYTnpUR2x6ZEM1eVpXMXZkbVVvUTB4QlUxTmZUa0ZOUlY5VFNFOVhTVTVIS1R0Y2JseHVJQ0FnSUNBZ1JYWmxiblJJWVc1a2JHVnlMblJ5YVdkblpYSW9kR2hwY3k1ZlpXeGxiV1Z1ZEN3Z1JWWkZUbFJmVTBoUFYwNHBPMXh1WEc0Z0lDQWdJQ0IwYUdsekxsOXRZWGxpWlZOamFHVmtkV3hsU0dsa1pTZ3BPMXh1SUNBZ0lIMDdYRzVjYmlBZ0lDQjBhR2x6TGw5bGJHVnRaVzUwTG1Oc1lYTnpUR2x6ZEM1eVpXMXZkbVVvUTB4QlUxTmZUa0ZOUlY5SVNVUkZLVHNnTHk4Z1FHUmxjSEpsWTJGMFpXUmNibHh1WEc0Z0lDQWdjbVZtYkc5M0tIUm9hWE11WDJWc1pXMWxiblFwTzF4dVhHNGdJQ0FnZEdocGN5NWZaV3hsYldWdWRDNWpiR0Z6YzB4cGMzUXVZV1JrS0VOTVFWTlRYMDVCVFVWZlUwaFBWeWs3WEc1Y2JpQWdJQ0IwYUdsekxsOWxiR1Z0Wlc1MExtTnNZWE56VEdsemRDNWhaR1FvUTB4QlUxTmZUa0ZOUlY5VFNFOVhTVTVIS1R0Y2JseHVJQ0FnSUhSb2FYTXVYM0YxWlhWbFEyRnNiR0poWTJzb1kyOXRjR3hsZEdVc0lIUm9hWE11WDJWc1pXMWxiblFzSUhSb2FYTXVYMk52Ym1acFp5NWhibWx0WVhScGIyNHBPMXh1SUNCOVhHNWNiaUFnYUdsa1pTZ3BJSHRjYmlBZ0lDQnBaaUFvSVhSb2FYTXVYMlZzWlcxbGJuUXVZMnhoYzNOTWFYTjBMbU52Ym5SaGFXNXpLRU5NUVZOVFgwNUJUVVZmVTBoUFZ5a3BJSHRjYmlBZ0lDQWdJSEpsZEhWeWJqdGNiaUFnSUNCOVhHNWNiaUFnSUNCamIyNXpkQ0JvYVdSbFJYWmxiblFnUFNCRmRtVnVkRWhoYm1Sc1pYSXVkSEpwWjJkbGNpaDBhR2x6TGw5bGJHVnRaVzUwTENCRlZrVk9WRjlJU1VSRktUdGNibHh1SUNBZ0lHbG1JQ2hvYVdSbFJYWmxiblF1WkdWbVlYVnNkRkJ5WlhabGJuUmxaQ2tnZTF4dUlDQWdJQ0FnY21WMGRYSnVPMXh1SUNBZ0lIMWNibHh1SUNBZ0lHTnZibk4wSUdOdmJYQnNaWFJsSUQwZ0tDa2dQVDRnZTF4dUlDQWdJQ0FnZEdocGN5NWZaV3hsYldWdWRDNWpiR0Z6YzB4cGMzUXVZV1JrS0VOTVFWTlRYMDVCVFVWZlNFbEVSU2s3SUM4dklFQmtaWEJ5WldOaGRHVmtYRzVjYmx4dUlDQWdJQ0FnZEdocGN5NWZaV3hsYldWdWRDNWpiR0Z6YzB4cGMzUXVjbVZ0YjNabEtFTk1RVk5UWDA1QlRVVmZVMGhQVjBsT1J5azdYRzVjYmlBZ0lDQWdJSFJvYVhNdVgyVnNaVzFsYm5RdVkyeGhjM05NYVhOMExuSmxiVzkyWlNoRFRFRlRVMTlPUVUxRlgxTklUMWNwTzF4dVhHNGdJQ0FnSUNCRmRtVnVkRWhoYm1Sc1pYSXVkSEpwWjJkbGNpaDBhR2x6TGw5bGJHVnRaVzUwTENCRlZrVk9WRjlJU1VSRVJVNHBPMXh1SUNBZ0lIMDdYRzVjYmlBZ0lDQjBhR2x6TGw5bGJHVnRaVzUwTG1Oc1lYTnpUR2x6ZEM1aFpHUW9RMHhCVTFOZlRrRk5SVjlUU0U5WFNVNUhLVHRjYmx4dUlDQWdJSFJvYVhNdVgzRjFaWFZsUTJGc2JHSmhZMnNvWTI5dGNHeGxkR1VzSUhSb2FYTXVYMlZzWlcxbGJuUXNJSFJvYVhNdVgyTnZibVpwWnk1aGJtbHRZWFJwYjI0cE8xeHVJQ0I5WEc1Y2JpQWdaR2x6Y0c5elpTZ3BJSHRjYmlBZ0lDQjBhR2x6TGw5amJHVmhjbFJwYldWdmRYUW9LVHRjYmx4dUlDQWdJR2xtSUNoMGFHbHpMbDlsYkdWdFpXNTBMbU5zWVhOelRHbHpkQzVqYjI1MFlXbHVjeWhEVEVGVFUxOU9RVTFGWDFOSVQxY3BLU0I3WEc0Z0lDQWdJQ0IwYUdsekxsOWxiR1Z0Wlc1MExtTnNZWE56VEdsemRDNXlaVzF2ZG1Vb1EweEJVMU5mVGtGTlJWOVRTRTlYS1R0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0J6ZFhCbGNpNWthWE53YjNObEtDazdYRzRnSUgwZ0x5OGdVSEpwZG1GMFpWeHVYRzVjYmlBZ1gyZGxkRU52Ym1acFp5aGpiMjVtYVdjcElIdGNiaUFnSUNCamIyNW1hV2NnUFNCN0lDNHVMa1JsWm1GMWJIUXNYRzRnSUNBZ0lDQXVMaTVOWVc1cGNIVnNZWFJ2Y2k1blpYUkVZWFJoUVhSMGNtbGlkWFJsY3loMGFHbHpMbDlsYkdWdFpXNTBLU3hjYmlBZ0lDQWdJQzR1TGloMGVYQmxiMllnWTI5dVptbG5JRDA5UFNBbmIySnFaV04wSnlBbUppQmpiMjVtYVdjZ1B5QmpiMjVtYVdjZ09pQjdmU2xjYmlBZ0lDQjlPMXh1SUNBZ0lIUjVjR1ZEYUdWamEwTnZibVpwWnloT1FVMUZMQ0JqYjI1bWFXY3NJSFJvYVhNdVkyOXVjM1J5ZFdOMGIzSXVSR1ZtWVhWc2RGUjVjR1VwTzF4dUlDQWdJSEpsZEhWeWJpQmpiMjVtYVdjN1hHNGdJSDFjYmx4dUlDQmZiV0Y1WW1WVFkyaGxaSFZzWlVocFpHVW9LU0I3WEc0Z0lDQWdhV1lnS0NGMGFHbHpMbDlqYjI1bWFXY3VZWFYwYjJocFpHVXBJSHRjYmlBZ0lDQWdJSEpsZEhWeWJqdGNiaUFnSUNCOVhHNWNiaUFnSUNCcFppQW9kR2hwY3k1ZmFHRnpUVzkxYzJWSmJuUmxjbUZqZEdsdmJpQjhmQ0IwYUdsekxsOW9ZWE5MWlhsaWIyRnlaRWx1ZEdWeVlXTjBhVzl1S1NCN1hHNGdJQ0FnSUNCeVpYUjFjbTQ3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdkR2hwY3k1ZmRHbHRaVzkxZENBOUlITmxkRlJwYldWdmRYUW9LQ2tnUFQ0Z2UxeHVJQ0FnSUNBZ2RHaHBjeTVvYVdSbEtDazdYRzRnSUNBZ2ZTd2dkR2hwY3k1ZlkyOXVabWxuTG1SbGJHRjVLVHRjYmlBZ2ZWeHVYRzRnSUY5dmJrbHVkR1Z5WVdOMGFXOXVLR1YyWlc1MExDQnBjMGx1ZEdWeVlXTjBhVzVuS1NCN1hHNGdJQ0FnYzNkcGRHTm9JQ2hsZG1WdWRDNTBlWEJsS1NCN1hHNGdJQ0FnSUNCallYTmxJQ2R0YjNWelpXOTJaWEluT2x4dUlDQWdJQ0FnWTJGelpTQW5iVzkxYzJWdmRYUW5PbHh1SUNBZ0lDQWdJQ0IwYUdsekxsOW9ZWE5OYjNWelpVbHVkR1Z5WVdOMGFXOXVJRDBnYVhOSmJuUmxjbUZqZEdsdVp6dGNiaUFnSUNBZ0lDQWdZbkpsWVdzN1hHNWNiaUFnSUNBZ0lHTmhjMlVnSjJadlkzVnphVzRuT2x4dUlDQWdJQ0FnWTJGelpTQW5abTlqZFhOdmRYUW5PbHh1SUNBZ0lDQWdJQ0IwYUdsekxsOW9ZWE5MWlhsaWIyRnlaRWx1ZEdWeVlXTjBhVzl1SUQwZ2FYTkpiblJsY21GamRHbHVaenRjYmlBZ0lDQWdJQ0FnWW5KbFlXczdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2FXWWdLR2x6U1c1MFpYSmhZM1JwYm1jcElIdGNiaUFnSUNBZ0lIUm9hWE11WDJOc1pXRnlWR2x0Wlc5MWRDZ3BPMXh1WEc0Z0lDQWdJQ0J5WlhSMWNtNDdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ1kyOXVjM1FnYm1WNGRFVnNaVzFsYm5RZ1BTQmxkbVZ1ZEM1eVpXeGhkR1ZrVkdGeVoyVjBPMXh1WEc0Z0lDQWdhV1lnS0hSb2FYTXVYMlZzWlcxbGJuUWdQVDA5SUc1bGVIUkZiR1Z0Wlc1MElIeDhJSFJvYVhNdVgyVnNaVzFsYm5RdVkyOXVkR0ZwYm5Nb2JtVjRkRVZzWlcxbGJuUXBLU0I3WEc0Z0lDQWdJQ0J5WlhSMWNtNDdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2RHaHBjeTVmYldGNVltVlRZMmhsWkhWc1pVaHBaR1VvS1R0Y2JpQWdmVnh1WEc0Z0lGOXpaWFJNYVhOMFpXNWxjbk1vS1NCN1hHNGdJQ0FnUlhabGJuUklZVzVrYkdWeUxtOXVLSFJvYVhNdVgyVnNaVzFsYm5Rc0lFVldSVTVVWDAxUFZWTkZUMVpGVWl3Z1pYWmxiblFnUFQ0Z2RHaHBjeTVmYjI1SmJuUmxjbUZqZEdsdmJpaGxkbVZ1ZEN3Z2RISjFaU2twTzF4dUlDQWdJRVYyWlc1MFNHRnVaR3hsY2k1dmJpaDBhR2x6TGw5bGJHVnRaVzUwTENCRlZrVk9WRjlOVDFWVFJVOVZWQ3dnWlhabGJuUWdQVDRnZEdocGN5NWZiMjVKYm5SbGNtRmpkR2x2YmlobGRtVnVkQ3dnWm1Gc2MyVXBLVHRjYmlBZ0lDQkZkbVZ1ZEVoaGJtUnNaWEl1YjI0b2RHaHBjeTVmWld4bGJXVnVkQ3dnUlZaRlRsUmZSazlEVlZOSlRpd2daWFpsYm5RZ1BUNGdkR2hwY3k1ZmIyNUpiblJsY21GamRHbHZiaWhsZG1WdWRDd2dkSEoxWlNrcE8xeHVJQ0FnSUVWMlpXNTBTR0Z1Wkd4bGNpNXZiaWgwYUdsekxsOWxiR1Z0Wlc1MExDQkZWa1ZPVkY5R1QwTlZVMDlWVkN3Z1pYWmxiblFnUFQ0Z2RHaHBjeTVmYjI1SmJuUmxjbUZqZEdsdmJpaGxkbVZ1ZEN3Z1ptRnNjMlVwS1R0Y2JpQWdmVnh1WEc0Z0lGOWpiR1ZoY2xScGJXVnZkWFFvS1NCN1hHNGdJQ0FnWTJ4bFlYSlVhVzFsYjNWMEtIUm9hWE11WDNScGJXVnZkWFFwTzF4dUlDQWdJSFJvYVhNdVgzUnBiV1Z2ZFhRZ1BTQnVkV3hzTzF4dUlDQjlJQzh2SUZOMFlYUnBZMXh1WEc1Y2JpQWdjM1JoZEdsaklHcFJkV1Z5ZVVsdWRHVnlabUZqWlNoamIyNW1hV2NwSUh0Y2JpQWdJQ0J5WlhSMWNtNGdkR2hwY3k1bFlXTm9LR1oxYm1OMGFXOXVJQ2dwSUh0Y2JpQWdJQ0FnSUdOdmJuTjBJR1JoZEdFZ1BTQlViMkZ6ZEM1blpYUlBja055WldGMFpVbHVjM1JoYm1ObEtIUm9hWE1zSUdOdmJtWnBaeWs3WEc1Y2JpQWdJQ0FnSUdsbUlDaDBlWEJsYjJZZ1kyOXVabWxuSUQwOVBTQW5jM1J5YVc1bkp5a2dlMXh1SUNBZ0lDQWdJQ0JwWmlBb2RIbHdaVzltSUdSaGRHRmJZMjl1Wm1sblhTQTlQVDBnSjNWdVpHVm1hVzVsWkNjcElIdGNiaUFnSUNBZ0lDQWdJQ0IwYUhKdmR5QnVaWGNnVkhsd1pVVnljbTl5S0dCT2J5QnRaWFJvYjJRZ2JtRnRaV1FnWENJa2UyTnZibVpwWjMxY0ltQXBPMXh1SUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ1pHRjBZVnRqYjI1bWFXZGRLSFJvYVhNcE8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgwcE8xeHVJQ0I5WEc1Y2JuMWNibHh1Wlc1aFlteGxSR2x6YldsemMxUnlhV2RuWlhJb1ZHOWhjM1FwTzF4dUx5b3FYRzRnS2lBdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMxY2JpQXFJR3BSZFdWeWVWeHVJQ29nTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0WEc0Z0tpQmhaR1FnTGxSdllYTjBJSFJ2SUdwUmRXVnllU0J2Ym14NUlHbG1JR3BSZFdWeWVTQnBjeUJ3Y21WelpXNTBYRzRnS2k5Y2JseHVaR1ZtYVc1bFNsRjFaWEo1VUd4MVoybHVLRlJ2WVhOMEtUdGNibHh1Wlhod2IzSjBJSHNnUVd4bGNuUXNJRUoxZEhSdmJpd2dRMkZ5YjNWelpXd3NJRU52Ykd4aGNITmxMQ0JFY205d1pHOTNiaXdnVFc5a1lXd3NJRTltWm1OaGJuWmhjeXdnVUc5d2IzWmxjaXdnVTJOeWIyeHNVM0I1TENCVVlXSXNJRlJ2WVhOMExDQlViMjlzZEdsd0lIMDdYRzR2THlNZ2MyOTFjbU5sVFdGd2NHbHVaMVZTVEQxaWIyOTBjM1J5WVhBdVpYTnRMbXB6TG0xaGNGeHVJaXdpYVcxd2IzSjBJSHNnWkdGMFlVVjJaVzUwYzFObGNuWnBZMlVnZlNCbWNtOXRJRndpTGk0dmMyVnlkbWxqWlhOY0lqdGNjbHh1YVcxd2IzSjBJSHNnUWxORmRtVnVkQ0I5SUdaeWIyMGdYQ0l1TGk5amIyMXRiMjVVZVhCbGN5OWpiMjF0YjI0dGRIbHdaWE5jSWp0Y2NseHVYSEpjYmx4eVhHNWpiR0Z6Y3lCQ1UwUmhkR0ZVWVdKc1pVSmhjMlVnZTF4eVhHNWNjbHh1SUNBZ0lHVnNaVzFsYm5RNklFaFVUVXhGYkdWdFpXNTBPMXh5WEc0Z0lDQWdZMmhwYkdSeVpXNDZJRUpUUkdGMFlWUmhZbXhsUW1GelpWdGRPMXh5WEc1Y2NseHVJQ0FnSUdOdmJuTjBjblZqZEc5eUtDa2dlMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVZMmhwYkdSeVpXNGdQU0JiWFR0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQXZLaXBjY2x4dUlDQWdJQ0FxSUVGa1pDQm9ZVzVrYkdWeUlIUnZJSFJvWlNCbGRtVnVkSE1nY21GcGMyVmtJR0o1SUhSb1pTQkVUMDFjY2x4dUlDQWdJQ0FxTDF4eVhHNGdJQ0FnWVdSa1JYWmxiblJJWVc1a2JHVnlLR1YyWlc1MFRtRnRaVG9nYzNSeWFXNW5MQ0JvWVc1a2JHVnlPaUJGZG1WdWRFeHBjM1JsYm1WeUtTQjdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11Wld4bGJXVnVkQzVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLR1YyWlc1MFRtRnRaU3dnYUdGdVpHeGxjaWs3WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ2MyVjBJSFJwZEd4bEtIWmhiRG9nYzNSeWFXNW5LU0I3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTVsYkdWdFpXNTBMblJwZEd4bElEMGdkbUZzTzF4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lHZGxkQ0IwYVhSc1pTZ3BPaUJ6ZEhKcGJtY2dlMXh5WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtVnNaVzFsYm5RdWRHbDBiR1U3WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ1gyUmhkR0ZUYjNWeVkyVk9ZVzFsT2lCemRISnBibWM3WEhKY2JseHlYRzRnSUNBZ1oyVjBJR1JoZEdGVGIzVnlZMlZPWVcxbEtDazZJSE4wY21sdVp5QjdYSEpjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVgyUmhkR0ZUYjNWeVkyVk9ZVzFsTzF4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lITmxkQ0JrWVhSaFUyOTFjbU5sVG1GdFpTaDJPaUJ6ZEhKcGJtY3BJSHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbDlrWVhSaFUyOTFjbU5sVG1GdFpTQTlJSFk3WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ1gybHpVbVZoWkU5dWJIazZJR0p2YjJ4bFlXNDdYSEpjYmlBZ0lDQm5aWFFnYVhOU1pXRmtUMjVzZVNncE9pQmliMjlzWldGdUlIdGNjbHh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZmFYTlNaV0ZrVDI1c2VUdGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0J6WlhRZ2FYTlNaV0ZrVDI1c2VTaDJPaUJpYjI5c1pXRnVLU0I3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTVmYVhOU1pXRmtUMjVzZVNBOUlIWTdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnWjJWMElIZHBaSFJvS0NrZ2UxeHlYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1Wc1pXMWxiblF1YzNSNWJHVXVkMmxrZEdnN1hISmNiaUFnSUNCOVhISmNiaUFnSUNCelpYUWdkMmxrZEdnb2QybGtkR2dwSUh0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG1Wc1pXMWxiblF1YzNSNWJHVXVkMmxrZEdnZ1BTQjNhV1IwYUR0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQm5aWFFnZG1semFXSnNaU2dwSUh0Y2NseHVJQ0FnSUNBZ0lDQXZMM0psZEhWeWJpQWhJU2gwYUdsekxtVnNaVzFsYm5RdWIyWm1jMlYwVjJsa2RHZ2dmSHdnZEdocGN5NWxiR1Z0Wlc1MExtOW1abk5sZEVobGFXZG9kQ0I4ZkNCMGFHbHpMbVZzWlcxbGJuUXVaMlYwUTJ4cFpXNTBVbVZqZEhNb0tTNXNaVzVuZEdncE8xeHlYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1Wc1pXMWxiblF1YUdsa1pHVnVJQ0U5UFNCMGNuVmxPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdjMlYwSUhacGMybGliR1VvZG1Gc0tTQjdYSEpjYmlBZ0lDQWdJQ0FnTHk5MGFHbHpMbVZzWlcxbGJuUXVjM1I1YkdVdVpHbHpjR3hoZVNBOUlIWmhiQ0E5UFQwZ1ptRnNjMlVnUHlCY0ltNXZibVZjSWlBNklGd2lZbXh2WTJ0Y0lqdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtVnNaVzFsYm5RdWFHbGtaR1Z1SUQwZ2RtRnNJQ0U5UFNCMGNuVmxPMXh5WEc1Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQm5aWFJEYzNNb2REb2djM1J5YVc1bktTQjdYSEpjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVpXeGxiV1Z1ZEM1emRIbHNaVnQwWFR0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQnpaWFJEYzNNb2F6b2djM1J5YVc1bkxDQjJPaUJoYm5rcElIdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTVsYkdWdFpXNTBMbk4wZVd4bFcydGRJRDBnZGp0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQnpaWFFnWTNOektHTnpjeWtnZTF4eVhHNGdJQ0FnSUNBZ0lHbG1JQ2gwZVhCbGIyWWdZM056SUQwOVBTQW5iMkpxWldOMEp5QW1KaUJqYzNNZ0lUMDlJRzUxYkd3Z0ppWWdkR2hwY3k1cGMwVnRjSFI1VDJKcUtHTnpjeWtnSVQwOUlIUnlkV1VwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlHdGxlWE1nUFNCUFltcGxZM1F1YTJWNWN5aGpjM01wTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JyWlhsekxtWnZja1ZoWTJnb0tHc3BJRDArSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11Wld4bGJXVnVkQzV6ZEhsc1pWdHJYU0E5SUdOemMxdHJYVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmU2s3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJQzhxS2x4eVhHNGdJQ0FnSUNvZ1hISmNiaUFnSUNBZ0tpQkFjR0Z5WVcwZ2UyOWlhbVZqZEZ0ZGZTQndjbTl3Y3lCY2NseHVJQ0FnSUNBcUwxeHlYRzRnSUNBZ2NISnZjSE1vY0hKdmNITXBJSHRjY2x4dUlDQWdJQ0FnSUNCMllYSWdYM1JvYVhNZ1BTQjBhR2x6TzF4eVhHNGdJQ0FnSUNBZ0lIQnliM0J6TG1admNrVmhZMmdvS0hBcElEMCtJRjkwYUdsekxuQnliM0FvY0M1clpYa3NJSEF1ZG1Gc2RXVXBLVnh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUM4cUtseHlYRzRnSUNBZ0lDb2dVMlYwY3lCMGFHVWdkbUZzZFdVZ2IyWWdZVzRnWVhSMGNtbGlkWFJsWEhKY2JpQWdJQ0FnS2lCQWNHRnlZVzBnYTJWNUlGeHlYRzRnSUNBZ0lDb2dRSEJoY21GdElIWmhiSFZsSUZ4eVhHNGdJQ0FnSUNvZ1FISmxkSFZ5Ym5NZ1hISmNiaUFnSUNBZ0tpOWNjbHh1SUNBZ0lIQnliM0FvYTJWNU9pQnpkSEpwYm1jc0lIWmhiSFZsS1NCN1hISmNiaUFnSUNBZ0lDQWdMeThnY21WMGRYSnVJSFJvYVhNdVpXeGxiV1Z1ZEM1aGRIUnlLR3RsZVN3Z2RtRnNkV1VwTzF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11Wld4bGJXVnVkQzV6WlhSQmRIUnlhV0oxZEdVb2EyVjVMQ0IyWVd4MVpTazdYSEpjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVpXeGxiV1Z1ZER0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQm5aWFJRY205d0tHdGxlVG9nYzNSeWFXNW5LU0I3WEhKY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVaV3hsYldWdWRDNW5aWFJCZEhSeWFXSjFkR1VvYTJWNUtUdGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0F2THlCbWFXNWtLSE5sYkdWamRHOXlPaUJ6ZEhKcGJtY3BJSHRjY2x4dUlDQWdJQzh2SUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVsYkdWdFpXNTBMbkYxWlhKNVUyVnNaV04wYjNKQmJHd29jMlZzWldOMGIzSXBPMXh5WEc0Z0lDQWdMeThnZlZ4eVhHNWNjbHh1SUNBZ0lHWnBibVJGYkdWdFpXNTBjeWh6Wld4bFkzUnZjam9nYzNSeWFXNW5LU0I3WEhKY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVaV3hsYldWdWRDNXhkV1Z5ZVZObGJHVmpkRzl5UVd4c0tITmxiR1ZqZEc5eUtUdGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0JtYVc1a1FubEpaQ2hwWkRvZ2MzUnlhVzVuS1NCN1hISmNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlHUnZZM1Z0Wlc1MExtZGxkRVZzWlcxbGJuUkNlVWxrS0dsa0tUdGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0J5WlcxdmRtVkZiR1Z0Wlc1MEtHVnNPaUJGYkdWdFpXNTBLU0I3WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJSEJoY21WdWRDQTlJR1ZzTG5CaGNtVnVkRVZzWlcxbGJuUTdYSEpjYmlBZ0lDQWdJQ0FnY0dGeVpXNTBMbkpsYlc5MlpVTm9hV3hrS0dWc0tUdGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0JoWkdSRGJHRnpjeWhqYzNORGJHRnpjem9nYzNSeWFXNW5LU0I3WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJSE53YkdsMElEMGdZM056UTJ4aGMzTXVjM0JzYVhRb0p5QW5LVHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdkR2hwY3k1bGJHVnRaVzUwTG1Oc1lYTnpUR2x6ZEM1aFpHUW9MaTR1YzNCc2FYUXBPMXh5WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsek8xeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJSEpsYlc5MlpVTnNZWE56S0dOemMwTnNZWE56T2lCemRISnBibWNwSUh0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG1Wc1pXMWxiblF1WTJ4aGMzTk1hWE4wTG5KbGJXOTJaU2hqYzNORGJHRnpjeWs3WEhKY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTTdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnYUdGelEyeGhjM01vWTNOelEyeGhjM002SUhOMGNtbHVaeWtnZTF4eVhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbVZzWlcxbGJuUXVZMnhoYzNOTWFYTjBMbU52Ym5SaGFXNXpLR056YzBOc1lYTnpLVHRjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNCb1lYTkRiR0Z6YzJWektHTnpjME5zWVhOelpYTTZJSE4wY21sdVp5azZJR0p2YjJ4bFlXNGdlMXh5WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJqYzNORGJHRnpjMlZ6TG5Od2JHbDBLQ2NnSnlsY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnTG1acGJtUW9LSGdwSUQwK0lIUm9hWE11Wld4bGJXVnVkQzVqYkdGemMweHBjM1F1WTI5dWRHRnBibk1vZUNrZ1BUMDlJR1poYkhObEtTQTlQVDBnZFc1a1pXWnBibVZrTzF4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lITmxkRlJsZUhRb2RIaDBPaUJ6ZEhKcGJtY3BJSHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbVZzWlcxbGJuUXVkR1Y0ZEVOdmJuUmxiblFnUFNCMGVIUTdYSEpjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNN1hISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdaMlYwVkdWNGRDZ3BJSHRjY2x4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWxiR1Z0Wlc1MExuUmxlSFJEYjI1MFpXNTBPMXh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUM4cUtseHlYRzRnSUNBZ0lDb2dYSEpjYmlBZ0lDQWdLaUJBY0dGeVlXMGdlMEpUUkdGMFlWUmhZbXhsUW1GelpYMGdaV3hsYlNCY2NseHVJQ0FnSUNBcUwxeHlYRzRnSUNBZ1lYQndaVzVrS0dWc1pXMDZJRUpUUkdGMFlWUmhZbXhsUW1GelpTd2djSFZ6YUZSdlEyaHBiR1J5Wlc1QmNuSmhlU0E5SUhSeWRXVXBJSHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdhV1lnS0hCMWMyaFViME5vYVd4a2NtVnVRWEp5WVhrcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVqYUdsc1pISmxiaTV3ZFhOb0tHVnNaVzBwTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTVsYkdWdFpXNTBMbUZ3Y0dWdVpFTm9hV3hrS0dWc1pXMHVaV3hsYldWdWRDazdYSEpjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNN1hISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdabTlqZFhNb0tTQjdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NWxiR1Z0Wlc1MExtWnZZM1Z6S0NrN1hISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdhWE5GYlhCMGVVOWlhaWh2WW1vcElIdGNjbHh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdUMkpxWldOMExtdGxlWE1vYjJKcUtTNXNaVzVuZEdnZ1BUMDlJREE3WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ1oyVjBJR2xrS0NrZ2UxeHlYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1kbGRGQnliM0FvSjJsa0p5azdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnYzJWMElHbGtLSFlwSUh0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG5CeWIzQW9KMmxrSnl3Z2RpazdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnWTJ4dmJtVW9LU0I3WEhKY2JpQWdJQ0FnSUNBZ0x5OWtaV0oxWjJkbGNqdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ1l5QTlJRzVsZHlCQ1UwUmhkR0ZVWVdKc1pVSmhjMlVvS1R0Y2NseHVJQ0FnSUNBZ0lDQXZMeUJqTG1Wc1pXMWxiblFnUFNCMGFHbHpMbVZzWlcxbGJuUXVZMnh2Ym1Vb0tUdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ2VDQTlJSFJvYVhNdVpXeGxiV1Z1ZEM1amJHOXVaVTV2WkdVb0tUdGNjbHh1SUNBZ0lDQWdJQ0JwWmlBb2VDQnBibk4wWVc1alpXOW1JRWhVVFV4RmJHVnRaVzUwS1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdNdVpXeGxiV1Z1ZENBOUlIZzdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNWNjbHh1WEhKY2JpQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdVkyaHBiR1J5Wlc0dWJHVnVaM1JvSUQ0Z01Da2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnYkdsemRDQTlJSFJvYVhNdVkyaHBiR1J5Wlc0dWJXRndLQ2gyS1NBOVBpQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ1kyTWdQU0IyTG1Oc2IyNWxLQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCakxtVnNaVzFsYm5RdVlYQndaVzVrS0dOakxtVnNaVzFsYm5RcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHTmpPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdZeTVqYUdsc1pISmxiaUE5SUd4cGMzUTdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdZenRjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNBdktpcGNjbHh1SUNBZ0lDQXFJR0VnYzJoaGJHeHZkeUJqYkc5dVpWeHlYRzRnSUNBZ0lDb2dRSEJoY21GdElIdHZZbXBsWTNSOUlHOWlhaUJjY2x4dUlDQWdJQ0FxSUVCeVpYUjFjbTV6SUZ4eVhHNGdJQ0FnSUNvdlhISmNiaUFnSUNCemFFTnNiMjVsS0c5aWFpa2dlMXh5WEc0Z0lDQWdJQ0FnSUdsbUlDZ2hiMkpxS1NCeVpYUjFjbTRnYjJKcU8xeHlYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQlBZbXBsWTNRdVlYTnphV2R1S0U5aWFtVmpkQzVqY21WaGRHVW9UMkpxWldOMExtZGxkRkJ5YjNSdmRIbHdaVTltS0c5aWFpa3BMQ0J2WW1vcE8xeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJR05vYVd4a2NtVnVUbTlrWlhNb0tTQjdYSEpjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVpXeGxiV1Z1ZEM1amFHbHNaSEpsYmp0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQmhjSEJsYm1SRGFHbHNaQ2h1YjJSbE9pQk9iMlJsS1NCN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1bGJHVnRaVzUwTG1Gd2NHVnVaRU5vYVd4a0tHNXZaR1VwTzF4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lIZHlZWEFvZDNKaGNIQmxjam9nUld4bGJXVnVkQ3dnYm05a1pYTTZJRWhVVFV4RGIyeHNaV04wYVc5dUlId2dSV3hsYldWdWRDa2dlMXh5WEc1Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlHTnNiMjVsSUQwZ2QzSmhjSEJsY2k1amJHOXVaVTV2WkdVb0tUdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ2FXWWdLRzV2WkdWeklHbHVjM1JoYm1ObGIyWWdSV3hsYldWdWRDa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnY0dGeVpXNTBJRDBnYm05a1pYTXVjR0Z5Wlc1MFJXeGxiV1Z1ZER0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWTJ4dmJtVXVZWEJ3Wlc1a1EyaHBiR1FvYm05a1pYTXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQndZWEpsYm5RdVlYQndaVzVrUTJocGJHUW9ZMnh2Ym1VcE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCbGJITmxJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0c1dlpHVnpMbXhsYm1kMGFDQThQU0F3S1NCeVpYUjFjbTQ3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCd1lYSmxiblFnUFNCdWIyUmxjMXN3WFM1d1lYSmxiblJGYkdWdFpXNTBPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWm05eUlDaHNaWFFnYVc1a1pYZ2dQU0F3T3lCcGJtUmxlQ0E4SUc1dlpHVnpMbXhsYm1kMGFEc2dhVzVrWlhnckt5a2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdaV3hsYldWdWRDQTlJRzV2WkdWelcybHVaR1Y0WFR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnNiMjVsTG1Gd2NHVnVaRU5vYVd4a0tHVnNaVzFsYm5RcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNibHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQndZWEpsYm5RdVlYQndaVzVrUTJocGJHUW9ZMnh2Ym1VcE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNCaFpHUkVjbUZuU0dGdVpHeGxjbk1vYm05a1pUb2dSV3hsYldWdWRDd2daSEpoWjBoaGJtUnNaWEp6T2lCN1hISmNiaUFnSUNBZ0lDQWdaSEpoWjFOMFlYSjBPaUFvWlhZNklFUnlZV2RGZG1WdWRDa2dQVDRnWVc1NU8xeHlYRzRnSUNBZ0lDQWdJR1J5WVdkTVpXRjJaVG9nS0dWMk9pQkVjbUZuUlhabGJuUXBJRDArSUdGdWVUdGNjbHh1SUNBZ0lDQWdJQ0JrY21GblJXNTBaWEk2SUNobGRqb2dSSEpoWjBWMlpXNTBLU0E5UGlCaGJuazdYSEpjYmlBZ0lDQWdJQ0FnWkhKaFowOTJaWEk2SUNobGRqb2dSSEpoWjBWMlpXNTBLU0E5UGlCaGJuazdYSEpjYmlBZ0lDQWdJQ0FnWkhKaFowVnVaRG9nS0dWMk9pQkVjbUZuUlhabGJuUXBJRDArSUdGdWVUdGNjbHh1SUNBZ0lDQWdJQ0JrY205d09pQW9aWFk2SUVSeVlXZEZkbVZ1ZENrZ1BUNGdZVzU1TzF4eVhHNWNjbHh1SUNBZ0lIMHBJSHRjY2x4dUlDQWdJQ0FnSUNCcFppQW9JV1J5WVdkSVlXNWtiR1Z5Y3lCOGZDQjBhR2x6TG1selJXMXdkSGxQWW1vb1pISmhaMGhoYm1Sc1pYSnpLU2tnY21WMGRYSnVPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQnBaaUFvWkhKaFowaGhibVJzWlhKekxtUnlZV2RUZEdGeWRDa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnViMlJsTG1Ga1pFVjJaVzUwVEdsemRHVnVaWElvSjJSeVlXZHpkR0Z5ZENjc0lHUnlZV2RJWVc1a2JHVnljeTVrY21GblUzUmhjblFwTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0FnSUNBZ2FXWWdLR1J5WVdkSVlXNWtiR1Z5Y3k1a2NtRm5UR1ZoZG1VcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2JtOWtaUzVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLQ2RrY21GbmJHVmhkbVVuTENCa2NtRm5TR0Z1Wkd4bGNuTXVaSEpoWjB4bFlYWmxLVHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNibHh5WEc0Z0lDQWdJQ0FnSUdsbUlDaGtjbUZuU0dGdVpHeGxjbk11WkhKaFowVnVkR1Z5S1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUc1dlpHVXVZV1JrUlhabGJuUk1hWE4wWlc1bGNpZ25aSEpoWjJWdWRHVnlKeXdnWkhKaFowaGhibVJzWlhKekxtUnlZV2RGYm5SbGNpazdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lDQWdJQ0JwWmlBb1pISmhaMGhoYm1Sc1pYSnpMbVJ5WVdkUGRtVnlLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJRzV2WkdVdVlXUmtSWFpsYm5STWFYTjBaVzVsY2lnblpISmhaMjkyWlhJbkxDQmtjbUZuU0dGdVpHeGxjbk11WkhKaFowOTJaWElwTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0FnSUNBZ2FXWWdLR1J5WVdkSVlXNWtiR1Z5Y3k1a2NtRm5SVzVrS1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUc1dlpHVXVZV1JrUlhabGJuUk1hWE4wWlc1bGNpZ25aSEpoWjJWdVpDY3NJR1J5WVdkSVlXNWtiR1Z5Y3k1a2NtRm5SVzVrS1R0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lHbG1JQ2hrY21GblNHRnVaR3hsY25NdVpISnZjQ2tnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J1YjJSbExtRmtaRVYyWlc1MFRHbHpkR1Z1WlhJb0oyUnliM0FuTENCa2NtRm5TR0Z1Wkd4bGNuTXVaSEp2Y0NrN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQnRZWFJqYUdWektHVnNaVzA2SUVWc1pXMWxiblFzSUdacGJIUmxjam9nYzNSeWFXNW5LU0I3WEhKY2JpQWdJQ0FnSUNBZ2FXWWdLR1ZzWlcwZ0ppWWdaV3hsYlM1dWIyUmxWSGx3WlNBOVBUMGdNU2tnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1ptbHNkR1Z5S1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1pXeGxiUzV0WVhSamFHVnpLR1pwYkhSbGNpazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSeWRXVTdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCbVlXeHpaVHRjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNCemFXSnNhVzVuY3loelpXeGxZM1J2Y2pvZ2MzUnlhVzVuS1RvZ1JXeGxiV1Z1ZEZ0ZElIdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ2JHbHpkQ0E5SUZ0ZE8xeHlYRzRnSUNBZ0lDQWdJR2xtSUNnaGRHaHBjeTVsYkdWdFpXNTBMbkJoY21WdWRFNXZaR1VwSUhKbGRIVnliaUJzYVhOME8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdVpXeGxiV1Z1ZEM1d1lYSmxiblJPYjJSbExtTm9hV3hrVG05a1pYTXVabTl5UldGamFDZ29ibVFwSUQwK0lIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRzVrSUQwOVBTQjBhR2x6TG1Wc1pXMWxiblFwSUhKbGRIVnlianRjY2x4dVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaDBhR2x6TG0xaGRHTm9aWE1vYm1RZ1lYTWdTRlJOVEVWc1pXMWxiblFzSUhObGJHVmpkRzl5S1NrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR2x6ZEM1d2RYTm9LRzVrS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lIMHBPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQnlaWFIxY200Z2JHbHpkRHRjY2x4dVhISmNiaUFnSUNCOVhISmNibHh5WEc1Y2NseHVYSEpjYm4xY2NseHVYSEpjYm1WNGNHOXlkQ0I3SUVKVFJHRjBZVlJoWW14bFFtRnpaU0I5SWl3aVhISmNiaThxS2x4eVhHNGdLaUJ6YVcxd2JHVWdkWFJwYkdsMGVTQjBieUJoWkdRdmNtVnRiM1psSUdOdmIydHBaWE1nWW1GelpXUWdiMjRnUlZNM1hISmNiaUFxSUdOeVpXUnBkRG9nYUhSMGNITTZMeTl6ZEdGamEyOTJaWEptYkc5M0xtTnZiUzloTHpRNE56QTJPRFV5WEhKY2JpQXFMMXh5WEc1amJHRnpjeUJEYjI5cmFXVWdlMXh5WEc0Z0lDQWdaMlYwS0c1aGJXVTZJSE4wY21sdVp5a2dlMXh5WEc0Z0lDQWdJQ0FnSUd4bGRDQmpJRDBnWkc5amRXMWxiblF1WTI5dmEybGxMbTFoZEdOb0tHQW9Qem9vUHpwZWZDNHFPeUFxS1NSN2JtRnRaWDBnS2owZ0tpaGJYanRkS2lrdUtpUXBmRjR1S2lSZ0tWc3hYVnh5WEc0Z0lDQWdJQ0FnSUdsbUlDaGpLU0J5WlhSMWNtNGdaR1ZqYjJSbFZWSkpRMjl0Y0c5dVpXNTBLR01wWEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ2MyVjBLRzVoYldVNklITjBjbWx1Wnl3Z2RtRnNkV1U2SUdGdWVTd2diM0IwY3pvZ1lXNTVJRDBnZTMwcElIdGNjbHh1SUNBZ0lDQWdJQ0F2S2tsbUlHOXdkR2x2Ym5NZ1kyOXVkR0ZwYm5NZ1pHRjVjeUIwYUdWdUlIZGxKM0psSUdOdmJtWnBaM1Z5YVc1bklHMWhlQzFoWjJVcUwxeHlYRzRnSUNBZ0lDQWdJR2xtSUNodmNIUnpMbVJoZVhNcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2IzQjBjMXNuYldGNExXRm5aU2RkSUQwZ2IzQjBjeTVrWVhseklDb2dOakFnS2lBMk1DQXFJREkwTzF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0x5cEVaV3hsZEdsdVp5QmtZWGx6SUdaeWIyMGdiM0IwYVc5dWN5QjBieUJ3WVhOeklISmxiV0ZwYm1sdVp5QnZjSFJ6SUhSdklHTnZiMnRwWlNCelpYUjBhVzVuY3lvdlhISmNiaUFnSUNBZ0lDQWdJQ0FnSUdSbGJHVjBaU0J2Y0hSekxtUmhlWE5jY2x4dUlDQWdJQ0FnSUNCOVhISmNibHh5WEc0Z0lDQWdJQ0FnSUM4cVEyOXVabWxuZFhKcGJtY2diM0IwYVc5dWN5QjBieUJqYjI5cmFXVWdjM1JoYm1SaGNtUWdZbmtnY21Wa2RXTnBibWNnWldGamFDQndjbTl3WlhKMGVTb3ZYSEpjYmlBZ0lDQWdJQ0FnYjNCMGN5QTlJRTlpYW1WamRDNWxiblJ5YVdWektHOXdkSE1wTG5KbFpIVmpaU2hjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdLR0ZqWTNWdGRXeGhkR1ZrVTNSeUxDQmJheXdnZGwwcElEMCtJR0FrZTJGalkzVnRkV3hoZEdWa1UzUnlmVHNnSkh0cmZUMGtlM1o5WUN3Z0p5ZGNjbHh1SUNBZ0lDQWdJQ0FwWEhKY2JseHlYRzRnSUNBZ0lDQWdJQzhxUm1sdVlXeHNlU3dnWTNKbFlYUnBibWNnZEdobElHdGxlU292WEhKY2JpQWdJQ0FnSUNBZ1pHOWpkVzFsYm5RdVkyOXZhMmxsSUQwZ2JtRnRaU0FySUNjOUp5QXJJR1Z1WTI5a1pWVlNTVU52YlhCdmJtVnVkQ2gyWVd4MVpTa2dLeUJ2Y0hSelhISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdaR1ZzWlhSbEtHNWhiV1U2SUhOMGNtbHVaeXdnYjNCMGN6ODZJR0Z1ZVNrZ2UxeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWMyVjBLRzVoYldVc0lDY25MQ0I3SUNkdFlYZ3RZV2RsSnpvZ0xURXNJQzR1TG05d2RITWdmU2xjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNBdkx5QndZWFJvSUNZZ1pHOXRZV2x1SUcxMWMzUWdiV0YwWTJnZ1kyOXZhMmxsSUdKbGFXNW5JR1JsYkdWMFpXUWdYSEpjYmlBZ0lDQm5aWFJLVTA5T0tHNWhiV1U2SUhOMGNtbHVaeWtnZTF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJ5WlhOMWJIUWdQU0IwYUdsekxtZGxkQ2h1WVcxbEtUdGNjbHh1SUNBZ0lDQWdJQ0JwWmlBb0lYSmxjM1ZzZENrZ2NtVjBkWEp1SUNjbk8xeHlYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQktVMDlPTG5CaGNuTmxLSEpsYzNWc2RDazdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnYzJWMFNsTlBUaWh1WVcxbE9pQnpkSEpwYm1jc0lIWmhiSFZsT2lCaGJua3NJRzl3ZEhNNklHRnVlU2tnZTF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11YzJWMEtHNWhiV1VzSUVwVFQwNHVjM1J5YVc1bmFXWjVLSFpoYkhWbEtTd2diM0IwY3lsY2NseHVJQ0FnSUgxY2NseHVmVnh5WEc1Y2NseHVaWGh3YjNKMElHTnZibk4wSUVOdmIydHBaVWhsYkhCbGNpQTlJRzVsZHlCRGIyOXJhV1VvS1RzaUxDSmNjbHh1THk5Y2NseHVMeThnWVdOMGFXOXVJSFI1Y0dWelhISmNiaTh2WEhKY2JtTnNZWE56SUdGd2NFRmpkR2x2Ym5NZ2UxeHlYRzRnSUNCemRHRjBhV01nY21WaFpHOXViSGtnUTA5TVgxTlBVbFJKVGtjZ1BTQW5RMDlNWDFOUFVsUkpUa2NuTzF4eVhHNGdJQ0J6ZEdGMGFXTWdjbVZoWkc5dWJIa2dRMDlNWDFKRlUwbGFSVVFnUFNBblEwOU1YMUpGVTBsYVJVUW5PMXh5WEc0Z0lDQnpkR0YwYVdNZ2NtVmhaRzl1YkhrZ1EwOU1YMU5JVDFkZlNFbEVSU0E5SUNkRFQweGZVMGhQVjE5SVNVUkZKenRjY2x4dUlDQWdjM1JoZEdsaklISmxZV1J2Ym14NUlFTlBURjlTUlU5U1JFVlNJRDBnSjBOUFRGOVNSVTlTUkVWU0oxeHlYRzU5WEhKY2JseHlYRzR2TDF4eVhHNHZMeUJsZG1WdWRDQjBlWEJsYzF4eVhHNHZMMXh5WEc1amJHRnpjeUJoY0hCRVlYUmhSWFpsYm5SeklIdGNjbHh1WEhKY2JpQWdJSE4wWVhScFl5QnlaV0ZrYjI1c2VTQkhVa2xFWDBSQlZFRWdQU0JjSWtkU1NVUmZSRUZVUVZ3aU8xeHlYRzRnSUNCemRHRjBhV01nY21WaFpHOXViSGtnVDA1ZlRrVllWRjlTUlVOUFVrUWdQU0JjSWs5T1gwNUZXRlJmVWtWRFQxSkVYQ0k3WEhKY2JpQWdJSE4wWVhScFl5QnlaV0ZrYjI1c2VTQlBUbDlRVWtWV1gxSkZRMDlTUkNBOUlGd2lUMDVmVUZKRlZsOVNSVU5QVWtSY0lqdGNjbHh1SUNBZ2MzUmhkR2xqSUhKbFlXUnZibXg1SUU5T1gxTkJWa1ZmVWtWRFQxSkVJRDBnWENKUFRsOVRRVlpGWDFKRlEwOVNSRndpTzF4eVhHNGdJQ0J6ZEdGMGFXTWdjbVZoWkc5dWJIa2dUMDVmUkVWTVJWUkZYMUpGUTA5U1JDQTlJRndpVDA1ZlJFVk1SVlJGWDFKRlEwOVNSRndpTzF4eVhHNGdJQ0J6ZEdGMGFXTWdjbVZoWkc5dWJIa2dUMDVmVEVGVFZGOVNSVU5QVWtRZ1BTQmNJazlPWDB4QlUxUmZVa1ZEVDFKRVhDSTdYSEpjYmlBZ0lITjBZWFJwWXlCeVpXRmtiMjVzZVNCUFRsOUdTVkpUVkY5U1JVTlBVa1FnUFNCY0lrOU9YMFpKVWxOVVgxSkZRMDlTUkZ3aU8xeHlYRzRnSUNCemRHRjBhV01nY21WaFpHOXViSGtnVDA1ZlFVUkVYMUpGUTA5U1JDQTlJRndpVDA1ZlFVUkVYMUpGUTA5U1JGd2lPMXh5WEc0Z0lDQnpkR0YwYVdNZ2NtVmhaRzl1YkhrZ1QwNWZSa1ZVUTBoZlVrVkRUMUpFSUQwZ1hDSlBUbDlHUlZSRFNGOVNSVU5QVWtSY0lqdGNjbHh1SUNBZ2MzUmhkR2xqSUhKbFlXUnZibXg1SUU5T1gwWkZWRU5JWDFKRlEwOVNSRjlGVWxKUFVpQTlJRndpVDA1ZlJrVlVRMGhmVWtWRFQxSkVYMFZTVWs5U1hDSTdYSEpjYmlBZ0lITjBZWFJwWXlCeVpXRmtiMjVzZVNCUFRsOUdSVlJEU0Y5SFVrbEVYMUpGUTA5U1JDQTlJRndpVDA1ZlJrVlVRMGhmUjFKSlJGOVNSVU5QVWtSY0lqdGNjbHh1SUNBZ2MzUmhkR2xqSUhKbFlXUnZibXg1SUU5T1gwWkZWRU5JWDBkU1NVUmZVa1ZEVDFKRVgwVlNVazlTSUQwZ1hDSlBUbDlHUlZSRFNGOUhVa2xFWDFKRlEwOVNSRjlGVWxKUFVsd2lPMXh5WEc0Z0lDQnpkR0YwYVdNZ2NtVmhaRzl1YkhrZ1QwNWZUa0ZXU1VkQlZFbE9SMTlTUlVOUFVrUWdQU0JjSWs5T1gwNUJWa2xIUVZSSlRrZGZVa1ZEVDFKRVhDSTdJQzh2SUhKaGFYTmxaQ0IzYUdWdUlIUm9aU0J0WVdsdUlISmxZMjl5WkNCcGN5QmhZbTkxZENCMGJ5QnVZWFpwWjJGMFpWeHlYRzRnSUNCemRHRjBhV01nY21WaFpHOXViSGtnVDA1ZlIxSkpSRjlWVUVSQlZFVkVJRDBnWENKUFRsOUhVa2xFWDFWUVJFRlVSVVJjSWp0Y2NseHVJQ0FnYzNSaGRHbGpJSEpsWVdSdmJteDVJRTlPWDFOQlZrVmZSVkpTVDFJZ1BTQmNJazlPWDFOQlZrVmZSVkpTVDFKY0lqdGNjbHh1SUNBZ2MzUmhkR2xqSUhKbFlXUnZibXg1SUU5T1gxTlBVbFJKVGtkZlVrVlJWVVZUVkVWRUlEMGdYQ0pQVGw5VFQxSlVTVTVIWDFKRlVWVkZVMVJGUkZ3aU8xeHlYRzRnSUNCemRHRjBhV01nY21WaFpHOXViSGtnVDA1ZlEwOU1VMTlTUlU5U1JFVlNSVVFnUFNCY0lrOU9YME5QVEZOZlVrVlBVa1JGVWtWRVhDSTdYSEpjYmlBZ0lITjBZWFJwWXlCeVpXRmtiMjVzZVNCUFRsOUhVa2xFWDBSQlZFRmZRazlWVGtRZ1BTQmNJazlPWDBkU1NVUmZSRUZVUVY5Q1QxVk9SRndpTzF4eVhHNGdJQ0J6ZEdGMGFXTWdjbVZoWkc5dWJIa2dUMDVmUjFKSlJGOURUMDVHU1VkZlZWQkVRVlJGUkNBOUlGd2lUMDVmUjFKSlJGOURUMDVHU1VkZlZWQkVRVlJGUkZ3aU8xeHlYRzRnSUNCemRHRjBhV01nY21WaFpHOXViSGtnVDA1ZlVFRkhSVjlTUlVGRVdTQTlJRndpVDA1ZlVFRkhSVjlTUlVGRVdWd2lPMXh5WEc0Z0lDQnpkR0YwYVdNZ2NtVmhaRzl1YkhrZ1QwNWZVazlYWDFWUVJFRlVSVVFnUFNCY0lrOU9YMUpQVjE5VlVFUkJWRVZFWENJN1hISmNiaUFnSUhOMFlYUnBZeUJ5WldGa2IyNXNlU0JQVGw5R1NVVk1SRjlWVUVSQlZFVkVJRDBnWENKUFRsOUdTVVZNUkY5VlVFUkJWRVZFWENJN1hISmNiaUFnSUhOMFlYUnBZeUJ5WldGa2IyNXNlU0JQVGw5U1QxZGZSRTlWUWt4RlgwTk1TVU5MUlVRZ1BTQmNJazlPWDFKUFYxOUVUMVZDVEVWZlEweEpRMHRGUkZ3aVhISmNibjFjY2x4dVhISmNibVY0Y0c5eWRDQjdJR0Z3Y0VGamRHbHZibk1zSUdGd2NFUmhkR0ZGZG1WdWRITWdmVnh5WEc0aUxDSmNjbHh1YVcxd2IzSjBJSHNnUWxORmRtVnVkRk4xWW5OamNtbGlaWEpOYjJSbGJDd2dRbE5YYVc1UWIzQkZkbVZ1ZEN3Z1FsTkZkbVZ1ZENCOUlHWnliMjBnWENJdUxpOWpiMjF0YjI1VWVYQmxjeTlqYjIxdGIyNHRkSGx3WlhOY0lqdGNjbHh1YVcxd2IzSjBJSHNnWVhCd1JHRjBZVVYyWlc1MGN5QjlJR1p5YjIwZ1hDSXVMMlJoZEdFdFpYWmxiblJ6WENJN1hISmNibHh5WEc1amJHRnpjeUJFWVhSaFJYWmxiblJ6VTJWeWRtbGpaU0I3WEhKY2JpQWdJQ0JqWVd4c1ltRmphM002SUVKVFJYWmxiblJUZFdKelkzSnBZbVZ5VFc5a1pXeGJYVHRjY2x4dUlDQWdJR052Ym5OMGNuVmpkRzl5S0NrZ2UxeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdVkyRnNiR0poWTJ0eklEMGdXMTA3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTV5WldkcGMzUmxjbGRwYmxCdmNGTjBZWFJsS0NrN1hISmNiaUFnSUNCOVhISmNibHh5WEc1Y2NseHVJQ0FnSUhKbFoybHpkR1Z5VjJsdVVHOXdVM1JoZEdVb0tTQjdYSEpjYmlBZ0lDQWdJQ0FnZDJsdVpHOTNMbTl1Y0c5d2MzUmhkR1VnUFNBb1pUb2dVRzl3VTNSaGRHVkZkbVZ1ZENrZ1BUNGdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvWlM1emRHRjBaU0FtSmlCbExuTjBZWFJsTG1WMlpXNTBSR0YwWVNrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNXNiMmNvWlM1emRHRjBaU2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdaWFk2SUVKVFYybHVVRzl3UlhabGJuUWdQU0I3SUVWMlpXNTBSR0YwWVRvZ1pTNXpkR0YwWlM1bGRtVnVkRVJoZEdFc0lGTnJhWEJRZFhOb09pQjBjblZsTENCRVlYUmhVMjkxY21ObFRtRnRaVG9nWENKY0lpQjlPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NUZiV2wwS0dGd2NFUmhkR0ZGZG1WdWRITXVUMDVmUmtWVVEwaGZVa1ZEVDFKRUxDQjNhVzVrYjNjc0lHVjJLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUgwN1hISmNiaUFnSUNCOU8xeHlYRzVjY2x4dUlDQWdJRVZ0YVhRb1pYWmxiblJPWVcxbE9pQnpkSEpwYm1jc0lITnZkWEpqWlRvZ1lXNTVMQ0JsZG1WdWRFRnlaM002SUVKVFJYWmxiblFwSUh0Y2NseHVJQ0FnSUNBZ0lDQnBaaUFvSVdWMlpXNTBUbUZ0WlNrZ2NtVjBkWEp1TzF4eVhHNGdJQ0FnSUNBZ0lIUnllU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQzh2SUZSUFJFODZJSFZ6WlNCbWFXNWtJR1owYmlCcGJuTjBaV0ZrSUc5bUlHWnZjbVZoWTJnaElTRmNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVqWVd4c1ltRmphM011Wm05eVJXRmphQ2dvWTJJcElEMCtJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaGpZaTVGZG1WdWRFNWhiV1VnSVQwOUlHVjJaVzUwVG1GdFpTQjhmQ0FvWTJJdVJHRjBZVk52ZFhKalpVNWhiV1VnSVQwOUlHVjJaVzUwUVhKbmN5NUVZWFJoVTI5MWNtTmxUbUZ0WlNBbUppQmpZaTVXWlhKcFpubEVZWFJoVTI5MWNtTmxUbUZ0WlNBOVBUMGdkSEoxWlNrcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBdkx5QmpiMjV6YjJ4bExteHZaeWduYzI5MWNtTmxJR052ZFd4a0lHNXZkQ0JpWlNCdFlYUmphR1ZrSnlrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kySXVRMkZzYkdKaFkyc29jMjkxY21ObExDQmxkbVZ1ZEVGeVozTXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlLVHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdmU0JqWVhSamFDQW9aWEp5YjNJcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1bGNuSnZjaWhsY25KdmNpazdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnZlR0Y2NseHVYSEpjYmlBZ0lDQlZibk4xWW5OamNtbGlaU2h0YjJSbGJEb2dRbE5GZG1WdWRGTjFZbk5qY21saVpYSk5iMlJsYkNrZ2UxeHlYRzVjY2x4dUlDQWdJQ0FnSUNCMllYSWdabWxzZEdWeVpXUWdQU0IwYUdsekxtTmhiR3hpWVdOcmMxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBdVptbHNkR1Z5S0Noallpa2dQVDRnS0dOaUxrdGxlU0E5UFQwZ2JXOWtaV3d1UzJWNVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQW1KaUJqWWk1RmRtVnVkRTVoYldVZ1BUMDlJRzF2WkdWc0xrVjJaVzUwVG1GdFpWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdKaVlnWTJJdVJHRjBZVk52ZFhKalpVNWhiV1VnUFQwOUlHMXZaR1ZzTGtSaGRHRlRiM1Z5WTJWT1lXMWxLU0E5UFQwZ1ptRnNjMlVwTzF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtTmhiR3hpWVdOcmN5QTlJR1pwYkhSbGNtVmtPMXh5WEc1Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQlRkV0p6WTNKcFltVW9iVzlrWld3NklFSlRSWFpsYm5SVGRXSnpZM0pwWW1WeVRXOWtaV3dwSUh0Y2NseHVJQ0FnSUNBZ0lDQXZMMXh5WEc0Z0lDQWdJQ0FnSUM4dklFNXZJRzVsWldRZ2RHOGdaRzhnWVNCc2IyOXJkWEFnYVdZZ2FHRnVaR3hsY2lCbGVHbHpkQ0JtY205dElHSmxabTl5WlZ4eVhHNGdJQ0FnSUNBZ0lDOHZYSEpjYmlBZ0lDQWdJQ0FnYVdZZ0tDRnRiMlJsYkM1RmRtVnVkRTVoYldVcElISmxkSFZ5Ymp0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG1OaGJHeGlZV05yY3k1d2RYTm9LRzF2WkdWc0tUdGNjbHh1SUNBZ0lIMDdYSEpjYm4xY2NseHVYSEpjYm1WNGNHOXlkQ0JqYjI1emRDQmtZWFJoUlhabGJuUnpVMlZ5ZG1salpTQTlJRzVsZHlCRVlYUmhSWFpsYm5SelUyVnlkbWxqWlNncE95SXNJbWx0Y0c5eWRDQjdJRU5oWTJobFpFbDBaVzBzSUVsVFpYTnphVzl1VTNSdmNtRm5aVk5sY25acFkyVWdmU0JtY205dElGd2lMaTR2WTI5dGJXOXVWSGx3WlhNdlkyOXRiVzl1TFhSNWNHVnpYQ0k3WEhKY2JseHlYRzVqYkdGemN5QlRaWE56YVc5dVUzUnZjbUZuWlZObGNuWnBZMlVnYVcxd2JHVnRaVzUwY3lCSlUyVnpjMmx2YmxOMGIzSmhaMlZUWlhKMmFXTmxJSHRjY2x4dUlDQWdJR052Ym5OMGNuVmpkRzl5S0NrZ2UxeHlYRzRnSUNBZ0lDQWdJQzh2SUdOdmJuTnZiR1V1Ykc5bktDZFRaWE56YVc5dUlITjBiM0poWjJVZ2FYTWdhVzVwZEdsaGJHbDZaV1FuS1R0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQmhaR1JKZEdWdEtHdGxlVG9nYzNSeWFXNW5MQ0IyWVd4MVpUb2dZVzU1TENCbGVIQnBjbms2SUVSaGRHVXBJSHRjY2x4dUlDQWdJQ0FnSUNBdkwxeHlYRzRnSUNBZ0lDQWdJQzh2SUVobGNtVWdkMlVnWVhKbElIVnphVzVuSUhObGMzTnBiMjVUZEc5eVlXZGxJR2x1YzNSbFlXUWdiMllnYkc5allXeFRkRzl5WVdkbExseHlYRzRnSUNBZ0lDQWdJQzh2SUZSb1pTQnNZWFJsY2lCcGN5QnViM1FnWTJ4bFlYSmxaQ0JsZG1WdUlHbG1JSFJvWlNCMWMyVnlJR05zYjNObGN5QjBhR1VnWW5KdmQzTmxjaUZjY2x4dUlDQWdJQ0FnSUNBdkwxeHlYRzVjY2x4dUlDQWdJQ0FnSUNCMllYSWdhWFJsYlRvZ1EyRmphR1ZrU1hSbGJTQTlJSHNnZG1Gc2RXVTZJSFpoYkhWbExDQjBlWEJsT2lBbmNISmxiU2NzSUdWNGNHbHllVG9nWlhod2FYSjVMbWRsZEZScGJXVW9LU0I5TzF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0JwWmlBb2RIbHdaVzltSUhaaGJIVmxJRDA5UFNBbmIySnFaV04wSnlBbUppQjJZV3gxWlNBaFBUMGdkVzVrWldacGJtVmtLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2wwWlcwdWRIbHdaU0E5SUNkdlltcGxZM1FuTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0FnSUNBZ2MyVnpjMmx2YmxOMGIzSmhaMlV1YzJWMFNYUmxiU2hyWlhrc0lFcFRUMDR1YzNSeWFXNW5hV1o1S0dsMFpXMHBLVHRjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNCaGNIQmxibVJKZEdWdEtHdGxlVG9nYzNSeWFXNW5MQ0JoY0hCbGJtUkdZV04wYjNKNU9pQW9kbUZzZFdVNklHRnVlU2tnUFQ0Z1lXNTVLU0I3WEhKY2JpQWdJQ0FnSUNBZ2RISjVJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUdsMFpXMGdQU0IwYUdsekxtZGxkRWwwWlcxU1lYY29hMlY1S1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHbDBaVzBwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJ1WlhkV1lXeDFaU0E5SUdGd2NHVnVaRVpoWTNSdmNua29hWFJsYlM1MllXeDFaU2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbUZrWkVsMFpXMG9hMlY1TENCdVpYZFdZV3gxWlN3Z2JtVjNJRVJoZEdVb2FYUmxiUzVsZUhCcGNua3BLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUgwZ1kyRjBZMmdnS0dWeWNtOXlLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVaWEp5YjNJb1pYSnliM0lwTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0JqY21WaGRHVkZlSEJwY25sTFpYa29hMlY1T2lCemRISnBibWNwT2lCemRISnBibWNnZTF4eVhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCclpYa2dLeUFuTFdWNGNHbHllU2M3WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ1oyVjBTWFJsYlZKaGR5aHJaWGs2SUhOMGNtbHVaeWs2SUVOaFkyaGxaRWwwWlcwZ2UxeHlYRzRnSUNBZ0lDQWdJSFpoY2lCbGJuUnllU0E5SUhObGMzTnBiMjVUZEc5eVlXZGxMbWRsZEVsMFpXMG9hMlY1S1R0Y2NseHVJQ0FnSUNBZ0lDQnBaaUFvWlc1MGNua3BJSHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUhaaGNpQnBkR1Z0T2lCRFlXTm9aV1JKZEdWdElEMGdTbE5QVGk1d1lYSnpaU2hsYm5SeWVTazdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1JHRjBaUzV1YjNjb0tTQStJR2wwWlcwdVpYaHdhWEo1S1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5KbGJXOTJaVWwwWlcwb2EyVjVLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1Ykc5bktDZGxiblJ5ZVNCbGVIQnBjbVZrTENCM2FXeHNJR0psSUhKbGJXOTJaV1FuTENCcGRHVnRLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIxYm1SbFptbHVaV1E3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJwZEdWdE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnYm5Wc2JEdGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0JuWlhSSmRHVnRLR3RsZVRvZ2MzUnlhVzVuS1RvZ1lXNTVJSHRjY2x4dUlDQWdJQ0FnSUNCMllYSWdhWFJsYlNBOUlIUm9hWE11WjJWMFNYUmxiVkpoZHloclpYa3BPMXh5WEc0Z0lDQWdJQ0FnSUdsbUlDaHBkR1Z0S1Z4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdhWFJsYlM1MllXeDFaVHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNTFiR3c3WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ2NtVnRiM1psU1hSbGJTaHJaWGs2SUhOMGNtbHVaeWtnZTF4eVhHNGdJQ0FnSUNBZ0lITmxjM05wYjI1VGRHOXlZV2RsTG5KbGJXOTJaVWwwWlcwb2EyVjVLVnh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUM4cUtseHlYRzRnSUNBZ0lDb2dVbVZ0YjNabGN5QmhiR3dnZEdobElHbDBaVzF6SUhOMFlYSjBhVzVuSUhkcGRHZ2dkR2hsSUdkcGRtVnVJSEJ5WldacGVDQm1jbTl0SUhObGMzTnBiMjRnYzNSdmNtRm5aU0JjY2x4dUlDQWdJQ0FxSUU1dmRHVWdkR2hoZENCcFppQnVieUJ3Y21WbWFYZ2dhWE1nY0hKdmRtbGtaV1FzSUdsMElIZHBiR3dnY21WdGIzWmxJR0ZzYkNCMGFHVWdhMlY1Y3k1Y2NseHVJQ0FnSUNBcUlFQndZWEpoYlNCN2MzUnlhVzVuUDMwZ2NISmxabWw0SUc5d2RHbHZibUZzWEhKY2JpQWdJQ0FnS2lCQWNtVjBkWEp1Y3lCY2NseHVJQ0FnSUNBcUwxeHlYRzRnSUNBZ2NtVnRiM1psUVd4c0tIQnlaV1pwZURvZ2MzUnlhVzVuS1NCN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUdsbUlDZ2hjSEpsWm1sNEtTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lITmxjM05wYjI1VGRHOXlZV2RsTG5KbGJXOTJaVUZzYkNncE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTQ3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzVjY2x4dVhISmNiaUFnSUNBZ0lDQWdkbUZ5SUd4bGJtZDBhQ0E5SUhObGMzTnBiMjVUZEc5eVlXZGxMbXhsYm1kMGFEdGNjbHh1SUNBZ0lDQWdJQ0JwWmlBb2JHVnVaM1JvSUR3OUlEQXBJSEpsZEhWeWJqdGNjbHh1WEhKY2JseHlYRzRnSUNBZ0lDQWdJSFpoY2lCclpYbHpPaUJ6ZEhKcGJtZGJYU0E5SUZ0ZE8xeHlYRzVjY2x4dUlDQWdJQ0FnSUNCbWIzSWdLR3hsZENCcGJtUmxlQ0E5SURBN0lHbHVaR1Y0SUR3Z2JHVnVaM1JvT3lCcGJtUmxlQ3NyS1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhaaGNpQnJaWGtnUFNCelpYTnphVzl1VTNSdmNtRm5aUzVyWlhrb2FXNWtaWGdwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb0lXdGxlUzV6ZEdGeWRITlhhWFJvS0hCeVpXWnBlQ2twSUdOdmJuUnBiblZsTzF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2EyVjVjeTV3ZFhOb0tHdGxlU2s3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJQ0FnSUNCbWIzSWdLR3hsZENCcGJtUmxlQ0E5SURBN0lHbHVaR1Y0SUR3Z2EyVjVjeTVzWlc1bmRHZzdJR2x1WkdWNEt5c3BJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUd0bGVTQTlJR3RsZVhOYmFXNWtaWGhkTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J6WlhOemFXOXVVM1J2Y21GblpTNXlaVzF2ZG1WSmRHVnRLR3RsZVNrN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdmVnh5WEc1OVhISmNibHh5WEc1bGVIQnZjblFnZXlCVFpYTnphVzl1VTNSdmNtRm5aVk5sY25acFkyVWdmU0lzSW1sdGNHOXlkQ0I3SUVKVFJHRjBZVlJoWW14bElIMGdabkp2YlNCY0lpNHVMMk52YlhCdmJtVnVkSE5jSWp0Y2NseHVYSEpjYmk4cUtseHlYRzRnS2lCVFpYSjJhV05sSUhWelpXUWdkRzhnWkdselkyOTJaWElnWkdGMFlTMTBZV0pzWlhNZ1lua2dTVVJjY2x4dUlDb2dWR2hwY3lCallXNGdZbVVnZFhObFpuVnNJSGRvWlc0Z2QyVWdhR0YyWlNCdFlXNTVJSFJoWW14bGN5QnBiaUIwYUdVZ2NHRm5aU0JoYm1RZ2NYVmxjbmtnZEdobGJTQm1iM0lnZEdobGFYSWdaR0YwWVZ4eVhHNGdLaUJtYjNJZ1pYaGhiWEJzWlRvZ2RHOGdZbVVnYzJWdWRDQmlZV05ySUhSdklITmxjblpsY2lCM2FHVnVJSFJvWlNCMWMyVnlJSEJ5WlhOelpYTWdkR2hsSUhOaGRtVXZjR1Z5YzJsemRDQmlkWFIwYjI1Y2NseHVJQ292WEhKY2JtTnNZWE56SUVKVFJHRjBZVlJoWW14bFJHbHpZMjkyWlhKNVUyVnlkbWxqWlNCN1hISmNibHh5WEc0Z0lDQWdSR0YwWVZSaFlteGxjem9nUWxORVlYUmhWR0ZpYkdWYlhTQTlJRnRkTzF4eVhHNWNjbHh1SUNBZ0lFRmtaQ2hrWVhSaGRHRmliR1U2SUVKVFJHRjBZVlJoWW14bEtTQjdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NUVZWFJoVkdGaWJHVnpMbkIxYzJnb1pHRjBZWFJoWW14bEtUdGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0JIWlhSQmJHd29LU0I3WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJSEpsYzNWc2REb2dRbE5IY21sa1JHRjBZVTF2WkdWc1cxMGdQU0JiWFR0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TGtSaGRHRlVZV0pzWlhNdVptOXlSV0ZqYUNnb1pIUXBJRDArSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHUjBMbWx6VW1WaFpFOXViSGtwSUhKbGRIVnlianRjY2x4dVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUhaaGNpQnRiMlJsYkRvZ1FsTkhjbWxrUkdGMFlVMXZaR1ZzSUQwZ2V5QkVZWFJoVTI5MWNtTmxUbUZ0WlRvZ1pIUXVaR0YwWVZOdmRYSmpaVTVoYldVc0lFUmhkR0U2SUdSMExtUnBjblI1VW1WamIzSmtjeUI5TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhOMWJIUXVjSFZ6YUNodGIyUmxiQ2s3WEhKY2JpQWdJQ0FnSUNBZ2ZTbGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhKbGMzVnNkRHRjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNBdktpcGNjbHh1SUNBZ0lDQXFJRnh5WEc0Z0lDQWdJQ29nUUhCaGNtRnRJR1J6VG1GdFpTQkVZWFJoVTI5MWNtTmxJRTVoYldWY2NseHVJQ0FnSUNBcUwxeHlYRzRnSUNBZ1IyVjBRbmxFVTA1aGJXVW9aSE5PWVcxbE9pQnpkSEpwYm1jcE9pQkNVMGR5YVdSRVlYUmhUVzlrWld3Z2UxeHlYRzRnSUNBZ0lDQWdJSFpoY2lCbWFXNWtJRDBnZEdocGN5NUVZWFJoVkdGaWJHVnpMbVpwYm1Rb0tHUjBLU0E5UGlCa2RDNWtZWFJoVTI5MWNtTmxUbUZ0WlNBOVBUMGdaSE5PWVcxbEtUdGNjbHh1SUNBZ0lDQWdJQ0JwWmlBb1ptbHVaQ2xjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIc2dSR0YwWVZOdmRYSmpaVTVoYldVNklHWnBibVF1WkdGMFlWTnZkWEpqWlU1aGJXVXNJRVJoZEdFNklHWnBibVF1WkdseWRIbFNaV052Y21SeklIMWNjbHh1WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzU5WEhKY2JseHlYRzVwYm5SbGNtWmhZMlVnUWxOSGNtbGtSR0YwWVUxdlpHVnNJSHRjY2x4dUlDQWdJRVJoZEdGVGIzVnlZMlZPWVcxbE9pQnpkSEpwYm1jN1hISmNiaUFnSUNCRVlYUmhPaUJ2WW1wbFkzUmJYVnh5WEc1OVhISmNibHh5WEc1amIyNXpkQ0JpYzBSaGRHRlVZV0pzWlVScGMyTnZkbVZ5ZVZObGNuWnBZMlVnUFNCdVpYY2dRbE5FWVhSaFZHRmliR1ZFYVhOamIzWmxjbmxUWlhKMmFXTmxLQ2s3WEhKY2JseHlYRzVsZUhCdmNuUWdleUJpYzBSaGRHRlVZV0pzWlVScGMyTnZkbVZ5ZVZObGNuWnBZMlVnZlNJc0ltbHRjRzl5ZENCN0lFSlRSR0YwWVZSaFlteGxRbUZ6WlNCOUlHWnliMjBnWENJdUwwSlRSR0YwWVZSaFlteGxRbUZ6WlZ3aU8xeHlYRzVwYlhCdmNuUWdleUJDVTBWMlpXNTBMQ0JDVTBsdWNIVjBUM0IwYVc5dWN5QjlJR1p5YjIwZ1hDSXVMaTlqYjIxdGIyNVVlWEJsY3k5amIyMXRiMjR0ZEhsd1pYTmNJanRjY2x4dWFXMXdiM0owSUhzZ1lYQndSR0YwWVVWMlpXNTBjeXdnWkdGMFlVVjJaVzUwYzFObGNuWnBZMlVnZlNCbWNtOXRJRndpTGk0dmMyVnlkbWxqWlhOY0lqdGNjbHh1WEhKY2JtTnNZWE56SUVKVFJHRjBZVlJoWW14bFNXNXdkWFFnWlhoMFpXNWtjeUJDVTBSaGRHRlVZV0pzWlVKaGMyVWdlMXh5WEc0Z0lDQWdiM0IwYVc5dWN6b2dRbE5KYm5CMWRFOXdkR2x2Ym5OY2NseHVYSEpjYmlBZ0lDQmpiMjV6ZEhKMVkzUnZjaWh2Y0hScGIyNXpPaUJDVTBsdWNIVjBUM0IwYVc5dWN5a2dlMXh5WEc0Z0lDQWdJQ0FnSUhOMWNHVnlLQ2s3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTV2Y0hScGIyNXpJRDBnYjNCMGFXOXVjenRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbVJoZEdGVGIzVnlZMlZPWVcxbElEMGdiM0IwYVc5dWN5NUVZWFJoVTI5MWNtTmxUbUZ0WlR0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQnViM1JwWm5sTWFYTjBaVzVsY25Nb1pYWmxiblJVZVhCbE9pQnpkSEpwYm1jc0lIQmhlV3h2WVdRNklFSlRSWFpsYm5RcElIdGNjbHh1SUNBZ0lDQWdJQ0JrWVhSaFJYWmxiblJ6VTJWeWRtbGpaUzVGYldsMEtHVjJaVzUwVkhsd1pTd2dkR2hwY3l3Z2NHRjViRzloWkNrN1hISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdjbVZ1WkdWeUtDa2dlMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQnBaaUFvZEdocGN5NXZjSFJwYjI1ekxrbHVjSFYwVkhsd1pTQTlQVDBnSjNObGJHVmpkQ2NwWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVpXeGxiV1Z1ZENBOUlHUnZZM1Z0Wlc1MExtTnlaV0YwWlVWc1pXMWxiblFvSjNObGJHVmpkQ2NwTzF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0JsYkhObElHbG1JQ2gwYUdsekxtOXdkR2x2Ym5NdVNXNXdkWFJVZVhCbElEMDlQU0FuWW5WMGRHOXVKeWtnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ1luUnVJRDBnWkc5amRXMWxiblF1WTNKbFlYUmxSV3hsYldWdWRDZ25ZblYwZEc5dUp5azdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHSjBiaTUwZVhCbElEMGdkR2hwY3k1dmNIUnBiMjV6TGtsdWNIVjBWSGx3WlR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWxiR1Z0Wlc1MElEMGdZblJ1TzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0JsYkhObElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJR2x1Y0hWMElEMGdaRzlqZFcxbGJuUXVZM0psWVhSbFJXeGxiV1Z1ZENnbmFXNXdkWFFuS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYVc1d2RYUXVkSGx3WlNBOUlIUm9hWE11YjNCMGFXOXVjeTVKYm5CMWRGUjVjR1U3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVpXeGxiV1Z1ZENBOUlHbHVjSFYwTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTVsYkdWdFpXNTBMbWxrSUQwZ2RHaHBjeTV2Y0hScGIyNXpMa1ZzWlcxbGJuUkpaQ0EvUHlCMGFHbHpMbTl3ZEdsdmJuTXVTVzV3ZFhSVWVYQmxJQ3NnWENKZlhDSWdLeUIwYUdsekxtOXdkR2x2Ym5NdVJHRjBZVk52ZFhKalpVNWhiV1VnS3lCY0lsOWNJaUFySUhSb2FYTXViM0IwYVc5dWN5NU5iMlJsYkU1aGJXVTdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NTBhWFJzWlNBOUlIUm9hWE11YjNCMGFXOXVjeTVVYVhSc1pTQS9QeUFuSnp0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQm5aWFFnZG1Gc0tDazZJR0p2YjJ4bFlXNGdmQ0J6ZEhKcGJtY2dmQ0J1ZFcxaVpYSWdmQ0J6ZEhKcGJtZGJYU0I3WEhKY2JseHlYRzRnSUNBZ0lDQWdJR2xtSUNnaGRHaHBjeTVsYkdWdFpXNTBLU0J5WlhSMWNtNGdkVzVrWldacGJtVmtPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQnBaaUFvZEdocGN5NWxiR1Z0Wlc1MElHbHVjM1JoYm1ObGIyWWdTRlJOVEVsdWNIVjBSV3hsYldWdWRDa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvZEdocGN5NXZjSFJwYjI1ekxrbHVjSFYwVkhsd1pTQTlQVDBnSjJOb1pXTnJZbTk0SnlsY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbVZzWlcxbGJuUXVZMmhsWTJ0bFpEdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1pXeHpaU0JwWmlBb2RHaHBjeTV2Y0hScGIyNXpMa2x1Y0hWMFZIbHdaU0E5UFQwZ0oyNTFiV0psY2ljcFhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVsYkdWdFpXNTBMblpoYkhWbFFYTk9kVzFpWlhJN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdWc2MyVWdjbVYwZFhKdUlIUm9hWE11Wld4bGJXVnVkQzUyWVd4MVpUdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1Wc1pXMWxiblJiSjNaaGJIVmxKMTA3WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ2MyVjBJSFpoYkNoMk9pQmliMjlzWldGdUlId2djM1J5YVc1bklId2diblZ0WW1WeUlId2djM1J5YVc1blcxMHBJSHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdhV1lnS0NGMGFHbHpMbVZzWlcxbGJuUXBJSEpsZEhWeWJqdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdWIzQjBhVzl1Y3k1SmJuQjFkRlI1Y0dVZ1BUMDlJQ2RqYUdWamEySnZlQ2NwWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVpXeGxiV1Z1ZEZzblkyaGxZMnRsWkNkZElEMGdkanRjY2x4dUlDQWdJQ0FnSUNCbGJITmxYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11Wld4bGJXVnVkRnNuZG1Gc2RXVW5YU0E5SUhZN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUM4dklHbHVkbTlyWlNCamFHRnVaMlVnWlhabGJuUWdhV1lnYVhSeklHRWdjMlZzWldOMElHbHVjSFYwWEhKY2JpQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdWIzQjBhVzl1Y3k1SmJuQjFkRlI1Y0dVZ1BUMDlJQ2R6Wld4bFkzUW5LU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVkyaGhibWRsS0NrN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUM4cUtseHlYRzRnSUNBZ0lDb2dWR2hwY3lCdFpYUm9iMlFnYzJodmRXeGtJR0psSUhWelpXUWdkMmwwYUNCa2NtOXdaRzkzYm5NZ2QyaGxjbVVnYW5WemRDQnpaWFIwYVc1bklIUm9aU0IyWVd3Z2IyWWdaV3hsYldWdWRDQnBjeUJ1YjNRZ1pXNXZkV2RvWEhKY2JpQWdJQ0FnS2lCMGFHbHpJRzFsZEdodlpDQmxibk4xY21VZ2RHaGhkQ0FuWTJoaGJtZGxKeUJwY3lCallXeHNaV1FnWVdaMFpYSWdKM1poYkNjZ2MyOGdkR2hoZENCMllXeDFaU0J2WmlCMGFHVWdjMlZzWldOMGIzSWdhWE1nYzJWMElIQnliM0JsY214NVhISmNiaUFnSUNBZ0tpQkFjR0Z5WVcwZ2UzTjBjbWx1WjMwZ2RpQXRJSFpoYkhWbFhISmNiaUFnSUNBZ0tpOWNjbHh1SUNBZ0lITmxkQ0IyWVd4RmVIUW9kam9nYzNSeWFXNW5JSHdnYm5WdFltVnlJSHdnYzNSeWFXNW5XMTBwSUh0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG5aaGJDQTlJSFk3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTVqYUdGdVoyVW9LVHRjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNCblpYUWdjbVZoWkc5dWJIa29LU0I3WEhKY2JpQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdVpXeGxiV1Z1ZENCcGJuTjBZVzVqWlc5bUlFaFVUVXhKYm5CMWRFVnNaVzFsYm5RcFhISmNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtVnNaVzFsYm5RdWNtVmhaRTl1YkhrN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJtWVd4elpUdGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0J6WlhRZ2NtVmhaRzl1Ykhrb2Rpa2dlMXh5WEc0Z0lDQWdJQ0FnSUdsbUlDaDBhR2x6TG1Wc1pXMWxiblFnYVc1emRHRnVZMlZ2WmlCSVZFMU1TVzV3ZFhSRmJHVnRaVzUwS1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVaV3hsYldWdWRDNXlaV0ZrVDI1c2VTQTlJSFk3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNCblpYUWdaR2x6WVdKc1pXUW9LVG9nWW05dmJHVmhiaUI3WEhKY2JpQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdVpXeGxiV1Z1ZENCcGJuTjBZVzVqWlc5bUlFaFVUVXhKYm5CMWRFVnNaVzFsYm5RZ2ZId2dkR2hwY3k1bGJHVnRaVzUwSUdsdWMzUmhibU5sYjJZZ1NGUk5URk5sYkdWamRFVnNaVzFsYm5RcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVaV3hsYldWdWRDNWthWE5oWW14bFpEdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ0lDQWdJSFpoY2lCMllXd2dQU0IwYUdsekxtZGxkRkJ5YjNBb0oyUnBjMkZpYkdWa0p5a2dQVDA5SUNkMGNuVmxKeUEvSUhSeWRXVWdPaUJtWVd4elpUdGNjbHh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdkbUZzTzF4eVhHNWNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0J6WlhRZ1pHbHpZV0pzWldRb2Rqb2dZbTl2YkdWaGJpa2dlMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQnBaaUFvZEdocGN5NWxiR1Z0Wlc1MElHbHVjM1JoYm1ObGIyWWdTRlJOVEVsdWNIVjBSV3hsYldWdWRDQjhmQ0IwYUdsekxtVnNaVzFsYm5RZ2FXNXpkR0Z1WTJWdlppQklWRTFNVTJWc1pXTjBSV3hsYldWdWRDa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1Wc1pXMWxiblF1WkdsellXSnNaV1FnUFNCMk8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTQ3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJQ0FnSUNCMllYSWdkbUZzSUQwZ2RpQTlQVDBnZEhKMVpTQS9JRndpZEhKMVpWd2lJRG9nWENKbVlXeHpaVndpTzF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11Y0hKdmNDZ25aR2x6WVdKc1pXUW5MQ0IyWVd3cE8xeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJR2RsZENCcGMwdGxlU2dwSUh0Y2NseHVJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVuWlhSUWNtOXdLQ2RrWVhSaExXdGxlV052YkhWdGJpY3BJRDA5UFNBbmRISjFaU2M3WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzVjY2x4dUlDQWdJSE5sZENCcGMwdGxlU2gyS1NCN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1d2NtOXdLQ2RrWVhSaExXdGxlV052YkhWdGJpY3NJSFlwTzF4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lHRmtaRVJ2ZFdKc1pVTnNhV05yUlhabGJuUW9LU0I3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTVsYkdWdFpXNTBMbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSW9KMlJpYkdOc2FXTnJKeXdnS0dVcElEMCtJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1dWIzUnBabmxNYVhOMFpXNWxjbk1vWVhCd1JHRjBZVVYyWlc1MGN5NVBUbDlTVDFkZlJFOVZRa3hGWDBOTVNVTkxSVVFzSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lFVjJaVzUwUkdGMFlUb2dleUJGZG1WdWREb2daU0I5TEZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1JHRjBZVk52ZFhKalpVNWhiV1U2SUhSb2FYTXViM0IwYVc5dWN5NUVZWFJoVTI5MWNtTmxUbUZ0WlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5S1R0Y2NseHVJQ0FnSUNBZ0lDQjlLVnh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUdOb1lXNW5aU2dwSUh0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG1Wc1pXMWxiblF1WkdsemNHRjBZMmhGZG1WdWRDaHVaWGNnUlhabGJuUW9KMk5vWVc1blpTY3BLVHRjY2x4dUlDQWdJSDFjY2x4dUlDQWdJRnh5WEc0Z0lDQWdZMnh2Ym1Vb0tTQjdYSEpjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJSE4xY0dWeUxtTnNiMjVsS0NrN1hISmNiaUFnSUNCOVhISmNibHh5WEc1OVhISmNibHh5WEc1bGVIQnZjblFnZXlCQ1UwUmhkR0ZVWVdKc1pVbHVjSFYwSUgwaUxDSnBiWEJ2Y25RZ2V5QkNVMFJoZEdGVVlXSnNaVWx1Y0hWMElIMGdabkp2YlNCY0lpNHZRbE5FWVhSaFZHRmliR1ZKYm5CMWRGd2lPMXh5WEc1cGJYQnZjblFnZXlCQ1UwbHVjSFYwVDNCMGFXOXVjeUI5SUdaeWIyMGdYQ0l1TGk5amIyMXRiMjVVZVhCbGN5OWpiMjF0YjI0dGRIbHdaWE5jSWp0Y2NseHVYSEpjYm1WNGNHOXlkQ0JqYkdGemN5QkNVMFJoZEdGVVlXSnNaVU5vWldOclFtOTRJR1Y0ZEdWdVpITWdRbE5FWVhSaFZHRmliR1ZKYm5CMWRDQjdYSEpjYmlBZ0lDQmpiMjV6ZEhKMVkzUnZjaWh2Y0hScGIyNXpPaUJDVTBsdWNIVjBUM0IwYVc5dWN5a2dlMXh5WEc0Z0lDQWdJQ0FnSUc5d2RHbHZibk11U1c1d2RYUlVlWEJsSUQwZ0oyTm9aV05yWW05NEoxeHlYRzRnSUNBZ0lDQWdJSE4xY0dWeUtHOXdkR2x2Ym5NcE8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWNtVnVaR1Z5S0NrN1hISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdZMnh2Ym1Vb0tTQjdYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlITmpJRDBnYzNWd1pYSXVZMnh2Ym1Vb0tUdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ1l5QTlJRzVsZHlCQ1UwUmhkR0ZVWVdKc1pVTm9aV05yUW05NEtIUm9hWE11YzJoRGJHOXVaU2gwYUdsekxtOXdkR2x2Ym5NcEtUdGNjbHh1SUNBZ0lDQWdJQ0JqTG1Wc1pXMWxiblFnUFNCell5NWxiR1Z0Wlc1ME8xeHlYRzRnSUNBZ0lDQWdJR011WTJocGJHUnlaVzRnUFNCell5NWphR2xzWkhKbGJqdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtRmtaRVJ2ZFdKc1pVTnNhV05yUlhabGJuUW9LVHRjY2x4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnWXp0Y2NseHVJQ0FnSUgxY2NseHVmVnh5WEc0aUxDSnBiWEJ2Y25RZ2V5QkNVMFJoZEdGVVlXSnNaVUpoYzJVZ2ZTQm1jbTl0SUZ3aUxpOUNVMFJoZEdGVVlXSnNaVUpoYzJWY0lqdGNjbHh1YVcxd2IzSjBJSHNnUWxORVlYUmhWR0ZpYkdWVFpXeGxZM1JNYVhOMFNYUmxiU0I5SUdaeWIyMGdYQ0l1TGk5amIyMXRiMjVVZVhCbGN5OWpiMjF0YjI0dGRIbHdaWE5jSWp0Y2NseHVYSEpjYm1WNGNHOXlkQ0JqYkdGemN5QkNVMFJoZEdGVVlXSnNaVk5sYkdWamRFOXdkR2x2YmlCbGVIUmxibVJ6SUVKVFJHRjBZVlJoWW14bFFtRnpaU0I3WEhKY2JpQWdJQ0J2Y0hScGIyNXpPaUJDVTBSaGRHRlVZV0pzWlZObGJHVmpkRXhwYzNSSmRHVnRPMXh5WEc1Y2NseHVJQ0FnSUM4cUtseHlYRzRnSUNBZ0lDcGNjbHh1SUNBZ0lDQXFJRUJ3WVhKaGJTQjdRbE5FWVhSaFZHRmliR1ZUWld4bFkzUk1hWE4wU1hSbGJYMGdiM0IwYVc5dWMxeHlYRzRnSUNBZ0lDb3ZYSEpjYmlBZ0lDQmpiMjV6ZEhKMVkzUnZjaWh2Y0hScGIyNXpPaUJDVTBSaGRHRlVZV0pzWlZObGJHVmpkRXhwYzNSSmRHVnRLU0I3WEhKY2JpQWdJQ0FnSUNBZ2MzVndaWElvS1R0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG05d2RHbHZibk1nUFNCdmNIUnBiMjV6TzF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11Y21WdVpHVnlLQ2s3WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ2NtVnVaR1Z5S0NrZ2UxeHlYRzRnSUNBZ0lDQWdJSFpoY2lCdmNIUWdQU0JrYjJOMWJXVnVkQzVqY21WaGRHVkZiR1Z0Wlc1MEtDZHZjSFJwYjI0bktUdGNjbHh1SUNBZ0lDQWdJQ0J2Y0hRdWRtRnNkV1VnUFNCMGFHbHpMbTl3ZEdsdmJuTXVkbUZzZFdVN1hISmNiaUFnSUNBZ0lDQWdiM0IwTG5SbGVIUWdQU0IwYUdsekxtOXdkR2x2Ym5NdWRHVjRkRHRjY2x4dUlDQWdJQ0FnSUNCcFppQW9kR2hwY3k1dmNIUnBiMjV6TG1selUyVnNaV04wWldRcFhISmNiaUFnSUNBZ0lDQWdJQ0FnSUc5d2RDNXpaV3hsWTNSbFpDQTlJSFJ5ZFdVN1hISmNiaUFnSUNBZ0lDQWdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NWxiR1Z0Wlc1MElEMGdiM0IwTzF4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lHTnNiMjVsS0NrZ2UxeHlYRzRnSUNBZ0lDQWdJSFpoY2lCamJHOXVaU0E5SUhOMWNHVnlMbU5zYjI1bEtDazdYSEpjYmlBZ0lDQWdJQ0FnWTJ4dmJtVXVjMlYwVkdWNGRDaDBhR2x6TG05d2RHbHZibk11ZEdWNGRDazdYSEpjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJR05zYjI1bE8xeHlYRzRnSUNBZ2ZWeHlYRzU5WEhKY2JpSXNJbWx0Y0c5eWRDQjdJRUpUUkdGMFlWUmhZbXhsU1c1d2RYUWdmU0JtY205dElGd2lMaTlDVTBSaGRHRlVZV0pzWlVsdWNIVjBYQ0k3WEhKY2JtbHRjRzl5ZENCN0lFSlRSR0YwWVZSaFlteGxVMlZzWldOMFRHbHpkRWwwWlcwc0lFSlRTVzV3ZFhSUGNIUnBiMjV6TENCQ1UxTmxiR1ZqZEU5d2RHbHZibk1nZlNCbWNtOXRJRndpTGk0dlkyOXRiVzl1Vkhsd1pYTXZZMjl0Ylc5dUxYUjVjR1Z6WENJN1hISmNibWx0Y0c5eWRDQjdJRUpUUkdGMFlWUmhZbXhsVTJWc1pXTjBUM0IwYVc5dUlIMGdabkp2YlNCY0lpNHZRbE5FWVhSaFZHRmliR1ZUWld4bFkzUlBjSFJwYjI1Y0lqdGNjbHh1WEhKY2JtVjRjRzl5ZENCamJHRnpjeUJDVTBSaGRHRlVZV0pzWlZObGJHVmpkQ0JsZUhSbGJtUnpJRUpUUkdGMFlWUmhZbXhsU1c1d2RYUWdlMXh5WEc1Y2NseHVJQ0FnSUc5d2RHbHZibk02SUVKVFUyVnNaV04wVDNCMGFXOXVjenRjY2x4dUlDQWdJR052Ym5OMGNuVmpkRzl5S0c5d2RHbHZibk02SUVKVFUyVnNaV04wVDNCMGFXOXVjeWtnZTF4eVhHNGdJQ0FnSUNBZ0lHOXdkR2x2Ym5NdVNXNXdkWFJVZVhCbElEMGdKM05sYkdWamRDYzdYSEpjYmlBZ0lDQWdJQ0FnYzNWd1pYSW9iM0IwYVc5dWN5azdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NXlaVzVrWlhJb0tUdGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0J5Wlc1a1pYSW9LVG9nZG05cFpDQjdYSEpjYmlBZ0lDQWdJQ0FnYzNWd1pYSXVjbVZ1WkdWeUtDazdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NXZjSFJwYjI1ekxsTmxiR1ZqZEU5d2RHbHZibk11Wm05eVJXRmphQ2dvYjNCMEtTQTlQaUIwYUdsekxtRndjR1Z1WkNodVpYY2dRbE5FWVhSaFZHRmliR1ZUWld4bFkzUlBjSFJwYjI0b2IzQjBLU2twTzF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11WVdSa1EyeGhjM01vSjJadmNtMHRjMlZzWldOMElHWnZjbTB0YzJWc1pXTjBMWE50SnlrN1hISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdZMnh2Ym1Vb0tTQjdYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlITmpJRDBnYzNWd1pYSXVZMnh2Ym1Vb0tUdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ1l5QTlJRzVsZHlCQ1UwUmhkR0ZVWVdKc1pWTmxiR1ZqZENoMGFHbHpMbk5vUTJ4dmJtVW9kR2hwY3k1dmNIUnBiMjV6S1NrN1hISmNiaUFnSUNBZ0lDQWdZeTVsYkdWdFpXNTBJRDBnYzJNdVpXeGxiV1Z1ZER0Y2NseHVJQ0FnSUNBZ0lDQmpMbU5vYVd4a2NtVnVJRDBnYzJNdVkyaHBiR1J5Wlc0N1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1aFpHUkViM1ZpYkdWRGJHbGphMFYyWlc1MEtDazdYSEpjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJR003WEhKY2JpQWdJQ0I5WEhKY2JuMWNjbHh1SWl3aWFXMXdiM0owSUhzZ1FsTkVZWFJoVkdGaWJHVkpibkIxZENCOUlHWnliMjBnWENJdUwwSlRSR0YwWVZSaFlteGxTVzV3ZFhSY0lqdGNjbHh1YVcxd2IzSjBJSHNnUWxOSmJuQjFkRTl3ZEdsdmJuTWdmU0JtY205dElGd2lMaTR2WTI5dGJXOXVWSGx3WlhNdlkyOXRiVzl1TFhSNWNHVnpYQ0k3WEhKY2JseHlYRzVsZUhCdmNuUWdZMnhoYzNNZ1FsTkVZWFJoVkdGaWJHVlVaWGgwU1c1d2RYUWdaWGgwWlc1a2N5QkNVMFJoZEdGVVlXSnNaVWx1Y0hWMElIdGNjbHh1SUNBZ0lHTnZibk4wY25WamRHOXlLRzl3ZEdsdmJuTTZJRUpUU1c1d2RYUlBjSFJwYjI1ektTQjdYSEpjYmlBZ0lDQWdJQ0FnYjNCMGFXOXVjeTVKYm5CMWRGUjVjR1VnUFNCdmNIUnBiMjV6TGtsdWNIVjBWSGx3WlNBL1B5QW5kR1Y0ZENjN1hISmNiaUFnSUNBZ0lDQWdjM1Z3WlhJb2IzQjBhVzl1Y3lrN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1eVpXNWtaWElvS1R0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQnlaVzVrWlhJb0tUb2dkbTlwWkNCN1hISmNiaUFnSUNBZ0lDQWdjM1Z3WlhJdWNtVnVaR1Z5S0NrN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1aFpHUkRiR0Z6Y3loMGFHbHpMbTl3ZEdsdmJuTXVRMnhoYzNObGN5QS9QeUFuWm05eWJTMWpiMjUwY205c0lHWnZjbTB0WTI5dWRISnZiQzF6YlNjcE8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWNHeGhZMlZJYjJ4a1pYSWdQU0IwYUdsekxtOXdkR2x2Ym5NdVVHeGhZMlZJYjJ4a1pYSWdQejhnZEdocGN5NXZjSFJwYjI1ekxrMXZaR1ZzVG1GdFpUdGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0J6WlhRZ2NHeGhZMlZJYjJ4a1pYSW9kbUZzT2lCemRISnBibWNwSUh0Y2NseHVJQ0FnSUNBZ0lDQnBaaUFvSVhaaGJDa2djbVYwZFhKdU8xeHlYRzRnSUNBZ0lDQWdJR2xtSUNoMGFHbHpMbVZzWlcxbGJuUWdhVzV6ZEdGdVkyVnZaaUJJVkUxTVNXNXdkWFJGYkdWdFpXNTBLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVpXeGxiV1Z1ZEM1d2JHRmpaV2h2YkdSbGNpQTlJSFpoYkR0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnWTJ4dmJtVW9LU0I3WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJSE5qSUQwZ2MzVndaWEl1WTJ4dmJtVW9LVHRjY2x4dUlDQWdJQ0FnSUNCMllYSWdZeUE5SUc1bGR5QkNVMFJoZEdGVVlXSnNaVlJsZUhSSmJuQjFkQ2gwYUdsekxuTm9RMnh2Ym1Vb2RHaHBjeTV2Y0hScGIyNXpLU2s3WEhKY2JpQWdJQ0FnSUNBZ1l5NWxiR1Z0Wlc1MElEMGdjMk11Wld4bGJXVnVkRHRjY2x4dUlDQWdJQ0FnSUNCakxtTm9hV3hrY21WdUlEMGdjMk11WTJocGJHUnlaVzQ3WEhKY2JpQWdJQ0FnSUNBZ1l5NWhaR1JFYjNWaWJHVkRiR2xqYTBWMlpXNTBLQ2s3WEhKY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdNN1hISmNiaUFnSUNCOVhISmNibjFjY2x4dUlpd2lhVzF3YjNKMElIc2dRbE5FWVhSaFZHRmliR1ZKYm5CMWRDQjlJR1p5YjIwZ1hDSXVMMEpUUkdGMFlWUmhZbXhsU1c1d2RYUmNJanRjY2x4dWFXMXdiM0owSUhzZ1FsTkNkWFIwYjI1UGNIUnBiMjV6SUgwZ1puSnZiU0JjSWk0dUwyTnZiVzF2YmxSNWNHVnpMMk52YlcxdmJpMTBlWEJsYzF3aU8xeHlYRzVjY2x4dVpYaHdiM0owSUdOc1lYTnpJRUpUUkdGMFlWUmhZbXhsUW5WMGRHOXVJR1Y0ZEdWdVpITWdRbE5FWVhSaFZHRmliR1ZKYm5CMWRDQjdYSEpjYmx4eVhHNGdJQ0FnYjNCMGFXOXVjem9nUWxOQ2RYUjBiMjVQY0hScGIyNXpPMXh5WEc1Y2NseHVJQ0FnSUdOdmJuTjBjblZqZEc5eUtHOXdkR2x2Ym5NNklFSlRRblYwZEc5dVQzQjBhVzl1Y3lrZ2UxeHlYRzRnSUNBZ0lDQWdJRzl3ZEdsdmJuTXVTVzV3ZFhSVWVYQmxJRDBnSjJKMWRIUnZiaWM3WEhKY2JpQWdJQ0FnSUNBZ2MzVndaWElvYjNCMGFXOXVjeWs3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTV2Y0hScGIyNXpJRDBnYjNCMGFXOXVjenRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbkpsYm1SbGNpZ3BPMXh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUhKbGJtUmxjaWdwSUh0Y2NseHVJQ0FnSUNBZ0lDQnpkWEJsY2k1eVpXNWtaWElvS1R0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NWhaR1JEYkdGemN5aDBhR2x6TG05d2RHbHZibk11UTJ4aGMzTmxjeUEvUHlBblluUnVJR0owYmkxdmRYUnNhVzVsTFhCeWFXMWhjbmtuS1R0Y2NseHVJQ0FnSUNBZ0lDQnBaaUFvZEdocGN5NXZjSFJwYjI1ekxrbGpiMjRwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlHbGpiMjRnUFNCa2IyTjFiV1Z1ZEM1amNtVmhkR1ZGYkdWdFpXNTBLQ2RwSnlrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsamIyNHVZMnhoYzNOTWFYTjBMbUZrWkNnbllta25MQ0JnWW1rdEpIdDBhR2x6TG05d2RHbHZibk11U1dOdmJuMWdLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1bGJHVnRaVzUwTG1Gd2NHVnVaRU5vYVd4a0tHbGpiMjRwTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdWIzQjBhVzl1Y3k1SVlXNWtiR1Z5S1Z4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtRmtaRU5zYVdOclNHRnVaR3hsY2loMGFHbHpMbTl3ZEdsdmJuTXVTR0Z1Wkd4bGNpazdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnWVdSa1EyeHBZMnRJWVc1a2JHVnlLR2hoYm1Sc1pYSTZJQ2hoY21jd09pQk5iM1Z6WlVWMlpXNTBLU0E5UGlCMmIybGtLU0I3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTVsYkdWdFpXNTBMbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSW9KMk5zYVdOckp5d2dLR1VwSUQwK0lHaGhibVJzWlhJb1pTa3BPMXh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUdOc2IyNWxLQ2tnZTF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJ6WXlBOUlITjFjR1Z5TG1Oc2IyNWxLQ2s3WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJR0owYmlBOUlHNWxkeUJDVTBSaGRHRlVZV0pzWlVKMWRIUnZiaWgwYUdsekxuTm9RMnh2Ym1Vb2RHaHBjeTV2Y0hScGIyNXpLU2s3WEhKY2JpQWdJQ0FnSUNBZ1luUnVMbU5vYVd4a2NtVnVJRDBnYzJNdVkyaHBiR1J5Wlc0N1hISmNibHh5WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJpZEc0N1hISmNiaUFnSUNCOVhISmNibjFjY2x4dUlpd2lhVzF3YjNKMElIc2dUVzlrWVd3Z2ZTQm1jbTl0SUZ3aVltOXZkSE4wY21Gd1hDSTdYSEpjYm1sdGNHOXlkQ0I3SUVKVFJHRjBZVlJoWW14bFFtRnpaU0I5SUdaeWIyMGdYQ0l1TDBKVFJHRjBZVlJoWW14bFFtRnpaVndpTzF4eVhHNXBiWEJ2Y25RZ2V5QkNVMFJoZEdGVVlXSnNaVVJoZEdGVGIzVnlZMlVzSUVKVFJHRjBZVlJoWW14bFQzQjBhVzl1Y3l3Z1FsTlRaV3hsWTNSdmNsZHBibVJ2ZDA5d2RHbHZibk1nZlNCbWNtOXRJRndpTGk0dlkyOXRiVzl1Vkhsd1pYTXZZMjl0Ylc5dUxYUjVjR1Z6WENJN1hISmNibWx0Y0c5eWRDQjdJRUpUUkdGMFlWUmhZbXhsSUgwZ1puSnZiU0JjSWk0dlFsTkVZWFJoVkdGaWJHVmNJanRjY2x4dWFXMXdiM0owSUhzZ1lYQndSR0YwWVVWMlpXNTBjeUI5SUdaeWIyMGdYQ0l1TGk5elpYSjJhV05sYzF3aU8xeHlYRzVjY2x4dVhISmNibVY0Y0c5eWRDQmpiR0Z6Y3lCQ1UwUmhkR0ZVWVdKc1pWTmxiR1ZqZEc5eVYybHVaRzkzSUdWNGRHVnVaSE1nUWxORVlYUmhWR0ZpYkdWQ1lYTmxJSHRjY2x4dVhISmNiaUFnSUNCelpXeGxZM1J2Y2sxdlpHRnNPaUJOYjJSaGJEdGNjbHh1SUNBZ0lHZHlhV1E2SUVKVFJHRjBZVlJoWW14bE8xeHlYRzRnSUNBZ2IzQjBhVzl1Y3pvZ1FsTlRaV3hsWTNSdmNsZHBibVJ2ZDA5d2RHbHZibk03WEhKY2JpQWdJQ0J3WVhKbGJuUkRiMjUwWVdsdVpYSkpaRG9nYzNSeWFXNW5PMXh5WEc0Z0lDQWdiVzlrWVd4SlpEb2djM1J5YVc1bk8xeHlYRzRnSUNBZ2JXOWtZV3hVYVhSc1pVbGtPaUJ6ZEhKcGJtYzdYSEpjYmlBZ0lDQmpiMjUwWVdsdVpYSkpaRG9nYzNSeWFXNW5PMXh5WEc0Z0lDQWdaM0pwWkVsa09pQnpkSEpwYm1jN1hISmNiaUFnSUNCdmJrbDBaVzFUWld4bFkzUmxaRG9nS0hObGJtUmxjam9nWVc1NUxDQmxPaUJoYm5rcElEMCtJSFp2YVdRN1hISmNiaUFnSUNCdmJsZHBibVJ2ZDFOb2IzZHVPaUFvYzJWdVpHVnlPaUJDVTBSaGRHRlVZV0pzWlZObGJHVmpkRzl5VjJsdVpHOTNLU0E5UGlCMmIybGtPMXh5WEc1Y2NseHVJQ0FnSUM4cUtseHlYRzRnSUNBZ0lDb2dRSEJoY21GdElIdDdJSEJ5YjNCT1lXMWxPaUJ6ZEhKcGJtYzdJR052Ym5SaGFXNWxja2xrT2lCemRISnBibWM3SUhWeWJFTmlPaUJuWlhSVmNteERZV3hzWW1GamF6c2daM0pwWkVOdmJITTZJRUpUUkdGMFlWUmhZbXhsUTI5c1JHVm1hVzVwZEdsdmJsdGRmWDBnYjNCMGFXOXVjMXh5WEc0Z0lDQWdJQ292WEhKY2JpQWdJQ0JqYjI1emRISjFZM1J2Y2lodmNIUnBiMjV6T2lCQ1UxTmxiR1ZqZEc5eVYybHVaRzkzVDNCMGFXOXVjeWtnZTF4eVhHNGdJQ0FnSUNBZ0lITjFjR1Z5S0NrN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1dmNIUnBiMjV6SUQwZ2IzQjBhVzl1Y3p0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG5CaGNtVnVkRU52Ym5SaGFXNWxja2xrSUQwZ2RHaHBjeTV2Y0hScGIyNXpMa052Ym5SaGFXNWxja2xrTzF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11Ylc5a1lXeEpaQ0E5SUdBa2UzUm9hWE11Y0dGeVpXNTBRMjl1ZEdGcGJtVnlTV1I5WDJKelh5UjdkR2hwY3k1dmNIUnBiMjV6TGsxdlpHVnNUbUZ0WlgxZ08xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWJXOWtZV3hVYVhSc1pVbGtJRDBnWUNSN2RHaHBjeTV3WVhKbGJuUkRiMjUwWVdsdVpYSkpaSDFmYkdKelh5UjdkR2hwY3k1dmNIUnBiMjV6TGsxdlpHVnNUbUZ0WlgxZ08xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdVkyOXVkR0ZwYm1WeVNXUWdQU0JnSkh0MGFHbHpMbkJoY21WdWRFTnZiblJoYVc1bGNrbGtmVjlqWW5OZkpIdDBhR2x6TG05d2RHbHZibk11VFc5a1pXeE9ZVzFsZldBN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1bmNtbGtTV1FnUFNCZ0pIdDBhR2x6TG5CaGNtVnVkRU52Ym5SaGFXNWxja2xrZlY5blh5UjdkR2hwY3k1dmNIUnBiMjV6TGsxdlpHVnNUbUZ0WlgxZ08xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWNtVnVaR1Z5S0NrN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1bmNtbGtJRDBnZEdocGN5NXlaVzVrWlhKSGNtbGtLQ2s3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTV2YmtsMFpXMVRaV3hsWTNSbFpDQTlJQ2d2S2lvZ1FIUjVjR1VnZTBKVFJHRjBZVlJoWW14bGZTQXFMeUJ6Wlc1a1pYSTZJRUpUUkdGMFlWUmhZbXhsTENBdktpb2dRSFI1Y0dVZ2UyRnVlWDBnS2k4Z1pUb2dZVzU1S1NBOVBpQjdJR052Ym5OdmJHVXViRzluS0NrN0lIMDdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNWNjbHh1SUNBZ0lISmxibVJsY2lncElIdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJRzF2WkdGc0lEMGdaRzlqZFcxbGJuUXVaMlYwUld4bGJXVnVkRUo1U1dRb2RHaHBjeTV0YjJSaGJFbGtLVHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdhV1lnS0cxdlpHRnNLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVpXeGxiV1Z1ZENBOUlHMXZaR0ZzTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuTmxiR1ZqZEc5eVRXOWtZV3dnUFNCTmIyUmhiQzVuWlhSUGNrTnlaV0YwWlVsdWMzUmhibU5sS0cxdlpHRnNLVHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdaV3h6WlNCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVaV3hsYldWdWRDQTlJR1J2WTNWdFpXNTBMbU55WldGMFpVVnNaVzFsYm5Rb0oyUnBkaWNwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtVnNaVzFsYm5RdWFXUWdQU0IwYUdsekxtMXZaR0ZzU1dRN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVaV3hsYldWdWRDNWpiR0Z6YzB4cGMzUXVZV1JrS0NkdGIyUmhiQ2NwTzF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVsYkdWdFpXNTBMbWx1Ym1WeVNGUk5UQ0E5SUdBOFpHbDJJR05zWVhOelBWd2liVzlrWVd3dFpHbGhiRzluSUcxdlpHRnNMV1JwWVd4dlp5MXpZM0p2Ykd4aFlteGxYQ0krWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEeGthWFlnWTJ4aGMzTTlYQ0p0YjJSaGJDMWpiMjUwWlc1MFhDSStYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQThaR2wySUdOc1lYTnpQVndpYlc5a1lXd3RhR1ZoWkdWeVhDSStYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUEdnMUlHTnNZWE56UFZ3aWJXOWtZV3d0ZEdsMGJHVmNJaUJwWkQxY0lpUjdkR2hwY3k1dGIyUmhiRlJwZEd4bFNXUjlYQ0krVTJWc1pXTjBJR0VnZG1Gc2RXVThMMmcxUGx4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEeGlkWFIwYjI0Z2RIbHdaVDFjSW1KMWRIUnZibHdpSUdOc1lYTnpQVndpWW5SdUxXTnNiM05sWENJZ1pHRjBZUzFpY3kxa2FYTnRhWE56UFZ3aWJXOWtZV3hjSWlCaGNtbGhMV3hoWW1Wc1BWd2lRMnh2YzJWY0lqNDhMMkoxZEhSdmJqNWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEd3ZaR2wyUGx4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUEdScGRpQmpiR0Z6Y3oxY0ltMXZaR0ZzTFdKdlpIbGNJajVjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBOFpHbDJJR2xrUFZ3aUpIdDBhR2x6TG1OdmJuUmhhVzVsY2tsa2ZWd2lQbHh5WEc1Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQThMMlJwZGo1Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUR3dlpHbDJQbHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdQR1JwZGlCamJHRnpjejFjSW0xdlpHRnNMV1p2YjNSbGNsd2lQbHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUR4aWRYUjBiMjRnZEhsd1pUMWNJbUoxZEhSdmJsd2lJR05zWVhOelBWd2lZblJ1SUdKMGJpMXdjbWx0WVhKNVhDSWdaR0YwWVMxaWN5MWthWE50YVhOelBWd2liVzlrWVd4Y0lqNVBhend2WW5WMGRHOXVQbHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdQQzlrYVhZK1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRHd2WkdsMlBseHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEd3ZaR2wyUG1BN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnY0dGeVpXNTBRMjl1ZEdGcGJtVnlJRDBnWkc5amRXMWxiblF1WjJWMFJXeGxiV1Z1ZEVKNVNXUW9kR2hwY3k1d1lYSmxiblJEYjI1MFlXbHVaWEpKWkNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHdZWEpsYm5SRGIyNTBZV2x1WlhJcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJoY21WdWRFTnZiblJoYVc1bGNpNWhjSEJsYm1SRGFHbHNaQ2gwYUdsekxtVnNaVzFsYm5RcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNibHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5ObGJHVmpkRzl5VFc5a1lXd2dQU0J1WlhjZ1RXOWtZV3dvZEdocGN5NWxiR1Z0Wlc1MEtUdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVpXeGxiV1Z1ZEM1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0NkemFHOTNiaTVpY3k1dGIyUmhiQ2NzSUNobEtTQTlQaUI3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbWR5YVdRdVkyeGxZWEpIY21sa0tDazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtZHlhV1F1YVc1bWFXNXBkR1ZUWTNKdmJHeGxjaTVqZFhKeVpXNTBVR0ZuWlNBOUlERTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtZHlhV1F1Wm1WMFkyaEhjbWxrVUdGblpTZ3hLVHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvZEdocGN5NXZibGRwYm1SdmQxTm9iM2R1S1Z4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWIyNVhhVzVrYjNkVGFHOTNiaWgwYUdsektUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTazdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lITm9iM2NvS1NCN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1elpXeGxZM1J2Y2sxdlpHRnNMbk5vYjNjb0tUdGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0J5Wlc1a1pYSkhjbWxrS0NrZ2UxeHlYRzVjY2x4dUlDQWdJQ0FnSUNBdkwxeHlYRzRnSUNBZ0lDQWdJQzh2SUdsbUlIUm9aU0JuY21sa0lHVjRhWE4wSUdaeWIyMGdZbVZtYjNKbExDQnVieUJ1WldWa0lIUnZJSEpsYm1SbGNpQmhaMkZwYmx4eVhHNGdJQ0FnSUNBZ0lDOHZYSEpjYmlBZ0lDQWdJQ0FnYVdZZ0tIUm9hWE11Wm1sdVpFSjVTV1FvZEdocGN5NW5jbWxrU1dRcEtTQnlaWFIxY200N1hISmNibHh5WEc0Z0lDQWdJQ0FnSUM4dlhISmNiaUFnSUNBZ0lDQWdMeThnWjNKcFpDQnphRzkzYmlCcGJpQjBhR1VnYzJWc1pXTjBiM0lnZDJsdVpHOTNYSEpjYmlBZ0lDQWdJQ0FnTHk5Y2NseHVJQ0FnSUNBZ0lDQjJZWElnWkdGMFlWTnZkWEpqWlRvZ1FsTkVZWFJoVkdGaWJHVkVZWFJoVTI5MWNtTmxJRDBnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9pQjBhR2x6TG05d2RHbHZibk11UkdGMFlWTnZkWEpqWlU1aGJXVWdLeUJjSWw5Y0lpQXJJSFJvYVhNdWIzQjBhVzl1Y3k1TmIyUmxiRTVoYldVc1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdselVtVnRiM1JsT2lCMGNuVmxMRnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjFjbXc2SUhSb2FYTXViM0IwYVc5dWN5NVZjbXhEWWx4eVhHNGdJQ0FnSUNBZ0lIMDdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJpY3pvZ1FsTkVZWFJoVkdGaWJHVlBjSFJwYjI1eklEMGdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQm5jbWxrU1dRNklIUm9hWE11WjNKcFpFbGtMQ0JqYjI1MFlXbHVaWEpKWkRvZ2RHaHBjeTVqYjI1MFlXbHVaWEpKWkN4Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWTI5c1JHVm1hVzVwZEdsdmJqb2dkR2hwY3k1dmNIUnBiMjV6TGtkeWFXUkRiMnh6TEZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JrWVhSaFUyOTFjbU5sT2lCa1lYUmhVMjkxY21ObExGeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCcGMxSmxZV1J2Ym14NU9pQjBjblZsTEZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JsYm1GaWJHVkpibVpwYm1sMFpWTmpjbTlzYkRvZ2RISjFaVnh5WEc0Z0lDQWdJQ0FnSUgwN1hISmNiaUFnSUNBZ0lDQWdMeThnWW5NdVpXNWhZbXhsU1c1bWFXNXBkR1ZUWTNKdmJHd2dQU0JtWVd4elpUdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ1ozSnBaQ0E5SUc1bGR5QkNVMFJoZEdGVVlXSnNaU2hpY3lrN1hISmNiaUFnSUNBZ0lDQWdaM0pwWkM1U1pXZHBjM1JsY2tOaGJHeGlZV05yY3lncE8xeHlYRzVjY2x4dUlDQWdJQ0FnSUNBdkx5Qm5jbWxrTG1Ga1pFaGhibVJzWlhJb1ozSnBaQzVoY0hCRVlYUmhSWFpsYm5SekxrOU9YMUpQVjE5RVQxVkNURVZmUTB4SlEwdEZSQ3dnZEdocGN5NXZia2wwWlcxVFpXeGxZM1JsWkNrN1hISmNiaUFnSUNBZ0lDQWdMeTljY2x4dUlDQWdJQ0FnSUNBdkx5Qm1iMnhzYjNkcGJtY2daWFpsYm5SeklHRnlaU0JzYVc1clpXUWdkRzhnY0dGeVpXNTBJQ2h3Y21sdFlYSjVJSFpwWlhjdlptOXliU2tnWVc1a0lHRnlaU0J1YjNRZ2JtVmxaR1ZrSUdadmNpQnpaV3hsWTNSdmNseHlYRzRnSUNBZ0lDQWdJQzh2WEhKY2JpQWdJQ0FnSUNBZ1ozSnBaQzV5WlcxdmRtVklZVzVrYkdWeUtHRndjRVJoZEdGRmRtVnVkSE11UjFKSlJGOUVRVlJCS1R0Y2NseHVJQ0FnSUNBZ0lDQm5jbWxrTG5KbGJXOTJaVWhoYm1Sc1pYSW9ZWEJ3UkdGMFlVVjJaVzUwY3k1UFRsOUJSRVJmVWtWRFQxSkVLVHRjY2x4dUlDQWdJQ0FnSUNCbmNtbGtMbkpsYlc5MlpVaGhibVJzWlhJb1lYQndSR0YwWVVWMlpXNTBjeTVQVGw5R1JWUkRTRjlTUlVOUFVrUXBPMXh5WEc0Z0lDQWdJQ0FnSUdkeWFXUXVjbVZ0YjNabFNHRnVaR3hsY2loaGNIQkVZWFJoUlhabGJuUnpMazlPWDFOQlZrVmZVa1ZEVDFKRUtUdGNjbHh1SUNBZ0lDQWdJQ0JuY21sa0xuSmxiVzkyWlVoaGJtUnNaWElvWVhCd1JHRjBZVVYyWlc1MGN5NVBUbDlUUVZaRlgwVlNVazlTS1R0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnWjNKcFpDNVNaVzVrWlhJb0tUdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0x5OGdhR2xrWlNCaFkzUnBiMjV6WEhKY2JpQWdJQ0FnSUNBZ1ozSnBaQzVuY21sa1FXTjBhVzl1Y3k1MmFYTnBZbXhsSUQwZ1ptRnNjMlU3WEhKY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdkeWFXUTdYSEpjYmlBZ0lDQjlYSEpjYm4xY2NseHVJaXdpYVcxd2IzSjBJSHNnUWxORVlYUmhWR0ZpYkdWSmJuQjFkQ0I5SUdaeWIyMGdYQ0l1TDBKVFJHRjBZVlJoWW14bFNXNXdkWFJjSWp0Y2NseHVhVzF3YjNKMElIc2dRbE5UWld4bFkzUnZjazl3ZEdsdmJuTWdmU0JtY205dElGd2lMaTR2WTI5dGJXOXVWSGx3WlhNdlkyOXRiVzl1TFhSNWNHVnpYQ0k3WEhKY2JtbHRjRzl5ZENCN0lFSlRSR0YwWVZSaFlteGxWR1Y0ZEVsdWNIVjBJSDBnWm5KdmJTQmNJaTR2UWxORVlYUmhWR0ZpYkdWVVpYaDBTVzV3ZFhSY0lqdGNjbHh1YVcxd2IzSjBJSHNnUWxORVlYUmhWR0ZpYkdWQ2RYUjBiMjRnZlNCbWNtOXRJRndpTGk5Q1UwUmhkR0ZVWVdKc1pVSjFkSFJ2Ymx3aU8xeHlYRzVwYlhCdmNuUWdleUJDVTBSaGRHRlVZV0pzWlZObGJHVmpkRzl5VjJsdVpHOTNJSDBnWm5KdmJTQmNJaTR2UWxORVlYUmhWR0ZpYkdWVFpXeGxZM1J2Y2xkcGJtUnZkMXdpTzF4eVhHNXBiWEJ2Y25RZ2V5QmhjSEJFWVhSaFJYWmxiblJ6SUgwZ1puSnZiU0JjSWk0dUwzTmxjblpwWTJWelhDSTdYSEpjYmx4eVhHNWxlSEJ2Y25RZ1kyeGhjM01nUWxORVlYUmhWR0ZpYkdWVFpXeGxZM1J2Y2lCbGVIUmxibVJ6SUVKVFJHRjBZVlJoWW14bFNXNXdkWFFnZTF4eVhHNWNjbHh1SUNBZ0lHOXdkR2x2Ym5NNklFSlRVMlZzWldOMGIzSlBjSFJwYjI1ek8xeHlYRzRnSUNBZ0x5b3FYSEpjYmlBZ0lDQWdLaUJBZEhsd1pTQjdRbE5FWVhSaFZHRmliR1ZDZFhSMGIyNTlYSEpjYmlBZ0lDQWdLaTljY2x4dUlDQWdJR0owYmtWc1pXMWxiblE2SUVKVFJHRjBZVlJoWW14bFFuVjBkRzl1TzF4eVhHNWNjbHh1SUNBZ0lDOHFLbHh5WEc0Z0lDQWdJQ29nUUhSNWNHVWdlMEpUUkdGMFlWUmhZbXhsVkdWNGRFbHVjSFYwZlZ4eVhHNGdJQ0FnSUNvdlhISmNiaUFnSUNCMGVIUkZiR1Z0Wlc1ME9pQkNVMFJoZEdGVVlXSnNaVlJsZUhSSmJuQjFkRHRjY2x4dVhISmNiaUFnSUNCelpXeGxZM1J2Y2xkcGJtUnZkem9nUWxORVlYUmhWR0ZpYkdWVFpXeGxZM1J2Y2xkcGJtUnZkenRjY2x4dVhISmNiaUFnSUNCamIyNXpkSEoxWTNSdmNpaHZjSFJwYjI1ek9pQkNVMU5sYkdWamRHOXlUM0IwYVc5dWN5d2djMlZzWldOMGIzSlhhVzVrYjNjL09pQkNVMFJoZEdGVVlXSnNaVk5sYkdWamRHOXlWMmx1Wkc5M0tTQjdYSEpjYmlBZ0lDQWdJQ0FnYzNWd1pYSW9iM0IwYVc5dWN5azdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NXZjSFJwYjI1eklEMGdiM0IwYVc5dWN6dGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxuTmxiR1ZqZEc5eVYybHVaRzkzSUQwZ2MyVnNaV04wYjNKWGFXNWtiM2M3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTV5Wlc1a1pYSW9LVHRjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNBdktpcGNjbHh1SUNBZ0lDQXFJRUJ3WVhKaGJTQjdRbE5FWVhSaFZHRmliR1ZUWld4bFkzUnZjbGRwYm1SdmQzMGdjMlZ1WkdWeVhISmNiaUFnSUNBZ0tpQkFjR0Z5WVcwZ2UyRnVlWDBnWlZ4eVhHNGdJQ0FnSUNvdlhISmNiaUFnSUNCdmJrbDBaVzFUWld4bFkzUmxaQ2h6Wlc1a1pYSTZJRUpUUkdGMFlWUmhZbXhsVTJWc1pXTjBiM0pYYVc1a2IzY3NJR1U2SUdGdWVTa2dlMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQXZMeUJqYjI1emIyeGxMbXh2WnlnbmNtOTNJSE5sYkdWamRHVmtKeXdnYzJWdVpHVnlMbWR5YVdRdVltOWtlUzVuWlhSVFpXeGxZM1JsWkZKdmR5Z3BLVHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdkbUZ5SUhKdmR5QTlJSE5sYm1SbGNpNW5jbWxrTG1KdlpIa3VaMlYwVTJWc1pXTjBaV1JTYjNjb0tUdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ2MyVnNaV04wWldSSmJuQjFkQ0E5SUhKdmR5NW5aWFJKYm5CMWRITW9LUzVtYVc1a0tDaHBibkIxZENrZ1BUNGdhVzV3ZFhRdWFYTkxaWGtwTzF4eVhHNGdJQ0FnSUNBZ0lHbG1JQ2h6Wld4bFkzUmxaRWx1Y0hWMEtTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDOHZJR052Ym5OdmJHVXViRzluS0NkVFpXeGxZM1JsWkNCMllXeDFaVG9nSnl3Z2MyVnNaV04wWldSSmJuQjFkQzUyWVd3cE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBdkx5QmpiMjV6YjJ4bExteHZaeWduYzJWc1pXTjBiM0k2SUNjc0lIUm9hWE11ZEhoMFJXeGxiV1Z1ZEM1MllXd3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5SNGRFVnNaVzFsYm5RdWRtRnNJRDBnYzJWc1pXTjBaV1JKYm5CMWRDNTJZV3c3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWRIaDBSV3hsYldWdWRDNWphR0Z1WjJVb0tUc2dMeThnWTJGc2JDQmphR0Z1WjJVZ2RHOGdabWx5WlNCMGFHVWdZMmhoYm1kbElHVjJaVzUwWEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJSE5sYm1SbGNpNXpaV3hsWTNSdmNrMXZaR0ZzTG1ocFpHVW9LVHRjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNCeVpXNWtaWElvS1NCN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUdsbUlDZ2hkR2hwY3k1elpXeGxZM1J2Y2xkcGJtUnZkeWtnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2MxZHBibVJ2ZHlBOUlHNWxkeUJDVTBSaGRHRlVZV0pzWlZObGJHVmpkRzl5VjJsdVpHOTNLSFJvYVhNdWIzQjBhVzl1Y3lrN0lDQWdJQ0FnSUNBZ0lDQWdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11YzJWc1pXTjBiM0pYYVc1a2IzY2dQU0J6VjJsdVpHOTNPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlHSjBia2hoYm1Sc1pYSWdQU0FvYzJWdVpHVnlPaUJDVTBSaGRHRlVZV0pzWlZObGJHVmpkRzl5TENCbEtTQTlQaUI3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQzh2WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQzh2SUhOb2IzY2dkR2hsSUhkcGJtUnZkeXdnWVc1a0lISmxMWEpsWjJsemRHVnlJR1J2ZFdKc1pTMWpiR2xqYXlCb1lXNWtiR1Z5SUZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0F2THlCemFXNWpaU0IwYUdVZ2QybHVaRzkzSUdOdmJuUnliMndnYVhNZ2MyaGhjbVZrSUdKNUlHMWhibmtnYzJWc1pXTjBiM0p6SUc5bUlITmhiV1VnYVdSY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnTHk5Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXpaV3hsWTNSdmNsZHBibVJ2ZHk1bmNtbGtMbkpsYlc5MlpVaGhibVJzWlhJb1lYQndSR0YwWVVWMlpXNTBjeTVQVGw5U1QxZGZSRTlWUWt4RlgwTk1TVU5MUlVRcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbk5sYkdWamRHOXlWMmx1Wkc5M0xtZHlhV1F1WVdSa1NHRnVaR3hsY2loaGNIQkVZWFJoUlhabGJuUnpMazlPWDFKUFYxOUVUMVZDVEVWZlEweEpRMHRGUkN3Z0tITXNJR1YyS1NBOVBpQnpaVzVrWlhJdWIyNUpkR1Z0VTJWc1pXTjBaV1FvZEdocGN5NXpaV3hsWTNSdmNsZHBibVJ2ZHl3Z1pYWXBLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1elpXeGxZM1J2Y2xkcGJtUnZkeTV6YUc5M0tDazdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxuUjRkRVZzWlcxbGJuUWdQU0J1WlhjZ1FsTkVZWFJoVkdGaWJHVlVaWGgwU1c1d2RYUW9kR2hwY3k1dmNIUnBiMjV6S1R0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG1KMGJrVnNaVzFsYm5RZ1BTQnVaWGNnUWxORVlYUmhWR0ZpYkdWQ2RYUjBiMjRvZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JFWVhSaFUyOTFjbU5sVG1GdFpUb2dkR2hwY3k1dmNIUnBiMjV6TGtSaGRHRlRiM1Z5WTJWT1lXMWxMRnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQkpZMjl1T2lBbmMyVmhjbU5vSnl4Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnU0dGdVpHeGxjam9nS0dVcElEMCtJR0owYmtoaGJtUnNaWElvZEdocGN5d2daU2xjY2x4dUlDQWdJQ0FnSUNCOUtUdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJSGR5WVhCd1pYSWdQU0JrYjJOMWJXVnVkQzVqY21WaGRHVkZiR1Z0Wlc1MEtDZGthWFluS1R0Y2NseHVJQ0FnSUNBZ0lDQjNjbUZ3Y0dWeUxtTnNZWE56VEdsemRDNWhaR1FvSjJsdWNIVjBMV2R5YjNWd0p5d2dKMmx1Y0hWMExXZHliM1Z3TFhOdEp5azdYSEpjYmlBZ0lDQWdJQ0FnZDNKaGNIQmxjaTVoY0hCbGJtUkRhR2xzWkNoMGFHbHpMblI0ZEVWc1pXMWxiblF1Wld4bGJXVnVkQ2s3WEhKY2JpQWdJQ0FnSUNBZ2QzSmhjSEJsY2k1aGNIQmxibVJEYUdsc1pDaDBhR2x6TG1KMGJrVnNaVzFsYm5RdVpXeGxiV1Z1ZENrN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVaV3hsYldWdWRDQTlJSGR5WVhCd1pYSTdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnWTJ4dmJtVW9LU0I3WEhKY2JpQWdJQ0FnSUNBZ0x5OGdaR1ZpZFdkblpYSTdYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlITmpJRDBnYzNWd1pYSXVZMnh2Ym1Vb0tUdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ2IzQjBPaUJDVTFObGJHVmpkRzl5VDNCMGFXOXVjeUE5SUhSb2FYTXVjMmhEYkc5dVpTaDBhR2x6TG05d2RHbHZibk1wTzF4eVhHNGdJQ0FnSUNBZ0lHOXdkQzVqYkc5dVpVTnZiblJsZUhRZ1BTQjBjblZsTzF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJqSUQwZ2JtVjNJRUpUUkdGMFlWUmhZbXhsVTJWc1pXTjBiM0lvYjNCMExDQjBhR2x6TG5ObGJHVmpkRzl5VjJsdVpHOTNLVHRjY2x4dUlDQWdJQ0FnSUNCakxtTm9hV3hrY21WdUlEMGdjMk11WTJocGJHUnlaVzQ3WEhKY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdNN1hISmNiaUFnSUNCOVhISmNibjFjY2x4dUlpd2lhVzF3YjNKMElIc2dRbE5FWVhSaFZHRmliR1ZEYjJ4RVpXWnBibWwwYVc5dUxDQkNVMGx1Y0hWMFQzQjBhVzl1Y3l3Z1FsTlRaV3hsWTNSUGNIUnBiMjV6TENCQ1UxTmxiR1ZqZEc5eVQzQjBhVzl1Y3lCOUlHWnliMjBnWENJdUxpOWpiMjF0YjI1VWVYQmxjeTlqYjIxdGIyNHRkSGx3WlhOY0lqdGNjbHh1YVcxd2IzSjBJSHNnUWxORVlYUmhWR0ZpYkdWQ1lYTmxJSDBnWm5KdmJTQmNJaTR2UWxORVlYUmhWR0ZpYkdWQ1lYTmxYQ0k3WEhKY2JtbHRjRzl5ZENCN0lFSlRSR0YwWVZSaFlteGxRMmhsWTJ0Q2IzZ2dmU0JtY205dElGd2lMaTlDVTBSaGRHRlVZV0pzWlVOb1pXTnJRbTk0WENJN1hISmNibWx0Y0c5eWRDQjdJRUpUUkdGMFlWUmhZbXhsU1c1d2RYUWdmU0JtY205dElGd2lMaTlDVTBSaGRHRlVZV0pzWlVsdWNIVjBYQ0k3WEhKY2JtbHRjRzl5ZENCN0lFSlRSR0YwWVZSaFlteGxVMlZzWldOMElIMGdabkp2YlNCY0lpNHZRbE5FWVhSaFZHRmliR1ZUWld4bFkzUmNJanRjY2x4dWFXMXdiM0owSUhzZ1FsTkVZWFJoVkdGaWJHVlRaV3hsWTNSdmNpQjlJR1p5YjIwZ1hDSXVMMEpUUkdGMFlWUmhZbXhsVTJWc1pXTjBiM0pjSWp0Y2NseHVhVzF3YjNKMElIc2dRbE5FWVhSaFZHRmliR1ZVWlhoMFNXNXdkWFFnZlNCbWNtOXRJRndpTGk5Q1UwUmhkR0ZVWVdKc1pWUmxlSFJKYm5CMWRGd2lPMXh5WEc1Y2NseHVaWGh3YjNKMElHTnNZWE56SUVKVFJHRjBZVlJoWW14bFEyVnNiQ0JsZUhSbGJtUnpJRUpUUkdGMFlWUmhZbXhsUW1GelpTQjdYSEpjYmx4eVhHNWNjbHh1SUNBZ0lDOHFLbHh5WEc0Z0lDQWdJQ29nUUhSNWNHVWdlMkp2YjJ4bFlXNTlYSEpjYmlBZ0lDQWdLaTljY2x4dUlDQWdJR2x6U0dWaFpHVnlPaUJpYjI5c1pXRnVPMXh5WEc0Z0lDQWdiM0IwYVc5dWN6b2dRbE5FWVhSaFZHRmliR1ZEYjJ4RVpXWnBibWwwYVc5dU8xeHlYRzRnSUNBZ0x5b3FYSEpjYmlBZ0lDQWdLaUJBY0dGeVlXMGdlMEpUUkdGMFlWUmhZbXhsUTI5c1JHVm1hVzVwZEdsdmJuMGdXMjl3ZEdsdmJuTmRYSEpjYmlBZ0lDQWdLaTljY2x4dUlDQWdJR052Ym5OMGNuVmpkRzl5S0c5d2RHbHZibk0vT2lCQ1UwUmhkR0ZVWVdKc1pVTnZiRVJsWm1sdWFYUnBiMjRzSUdselNHVmhaR1Z5SUQwZ1ptRnNjMlVwSUh0Y2NseHVJQ0FnSUNBZ0lDQnpkWEJsY2lncE8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWIzQjBhVzl1Y3lBOUlHOXdkR2x2Ym5NZ2ZId2dlMzA3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTVwYzBobFlXUmxjaUE5SUdselNHVmhaR1Z5TzF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11Y21WdVpHVnlLQ2s3WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ2NtVnVaR1Z5S0NrZ2UxeHlYRzRnSUNBZ0lDQWdJSFpoY2lCeWIzZFRjR0Z1SUQwZ2RHaHBjeTV2Y0hScGIyNXpJRDhnZEdocGN5NXZjSFJwYjI1ekxsSnZkMU53WVc0Z09pQjFibVJsWm1sdVpXUTdYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlHTnZiRk53WVc0Z1BTQjBhR2x6TG05d2RHbHZibk1nUHlCMGFHbHpMbTl3ZEdsdmJuTXVRMjlzVTNCaGJpQTZJSFZ1WkdWbWFXNWxaRHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdkR2hwY3k1bGJHVnRaVzUwSUQxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXBjMGhsWVdSbGNpQTlQVDBnZEhKMVpWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdQeUJrYjJOMWJXVnVkQzVqY21WaGRHVkZiR1Z0Wlc1MEtDZDBhQ2NwWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBNklHUnZZM1Z0Wlc1MExtTnlaV0YwWlVWc1pXMWxiblFvSjNSa0p5bGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdWFYTklaV0ZrWlhJcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVsYkdWdFpXNTBMbU5zWVhOelRHbHpkQzVoWkdRb0ozTnZjblJwYm1jbkxDQW5aSE10WTI5c0p5azdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTV2Y0hScGIyNXpMa1JwYzNCc1lYbE9ZVzFsS1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5ObGRGUmxlSFFvZEdocGN5NXZjSFJwYjI1ekxrUnBjM0JzWVhsT1lXMWxLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQWdJQ0FnYVdZZ0tISnZkMU53WVc0cFhISmNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVjSEp2Y0NnbmNtOTNVM0JoYmljc0lISnZkMU53WVc0cE8xeHlYRzVjY2x4dUlDQWdJQ0FnSUNCcFppQW9ZMjlzVTNCaGJpbGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTV3Y205d0tDZGpiMnhUY0dGdUp5d2dZMjlzVTNCaGJpazdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDOHZJR0ZrWkNCamIyNTBjbTlzSUZ4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11WVdSa1NXNXdkWFJEYjI1MGNtOXNLQ2s3WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ1lXUmtTVzV3ZFhSRGIyNTBjbTlzS0NrZ2UxeHlYRzRnSUNBZ0lDQWdJSFpoY2lCdGIyUmxiQ0E5SUhSb2FYTXViM0IwYVc5dWN6dGNjbHh1SUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTVwYzBobFlXUmxjaUI4ZkNBaGJXOWtaV3d1UkdsemNHeGhlVTVoYldVZ2ZId2dJVzF2WkdWc0xsQnliM0JPWVcxbEtTQnlaWFIxY200N1hISmNibHh5WEc0Z0lDQWdJQ0FnSUhaaGNpQmtjeUE5SUcxdlpHVnNMa1JoZEdGVGIzVnlZMlZPWVcxbE8xeHlYRzVjY2x4dUlDQWdJQ0FnSUNCMllYSWdhVzV3ZFhRZ1BTQnVkV3hzTzF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJwYm5CMWRFOXdkR2x2Ym5NNklFSlRTVzV3ZFhSUGNIUnBiMjV6SUQwZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCRVlYUmhVMjkxY21ObFRtRnRaVG9nWkhNc1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUUxdlpHVnNUbUZ0WlRvZ2JXOWtaV3d1VUhKdmNFNWhiV1VzWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJRkJzWVdObFNHOXNaR1Z5T2lCdGIyUmxiQzVFYVhOd2JHRjVUbUZ0WlN4Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnVkdsMGJHVTZJRzF2WkdWc0xrUnBjM0JzWVhsT1lXMWxMRnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQkpibkIxZEZSNWNHVTZJRzF2WkdWc0xrUmhkR0ZVZVhCbExDQWdJQ0FnSUNBZ0lDQWdJRnh5WEc0Z0lDQWdJQ0FnSUgwN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUM4dlpHVmlkV2RuWlhJN1hISmNiaUFnSUNBZ0lDQWdhV1lnS0cxdlpHVnNMa1JoZEdGVWVYQmxJRDA5UFNBbmMyVnNaV04wSnlrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMllYSWdjMlZzWldOMFQzQjBhVzl1Y3pvZ1FsTlRaV3hsWTNSUGNIUnBiMjV6SUQwZ2V5QXVMaTVwYm5CMWRFOXdkR2x2Ym5Nc0lGTmxiR1ZqZEU5d2RHbHZibk02SUcxdlpHVnNMbE5sYkdWamRFeHBjM1FnZlR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYVc1d2RYUWdQU0J1WlhjZ1FsTkVZWFJoVkdGaWJHVlRaV3hsWTNRb2MyVnNaV04wVDNCMGFXOXVjeWs3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJR1ZzYzJVZ2FXWWdLRzF2WkdWc0xrUmhkR0ZVZVhCbElEMDlQU0FuWTJobFkydGliM2duS1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsdWNIVjBJRDBnYm1WM0lFSlRSR0YwWVZSaFlteGxRMmhsWTJ0Q2IzZ29hVzV3ZFhSUGNIUnBiMjV6S1R0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnWld4elpTQnBaaUFvYlc5a1pXd3VSR0YwWVZSNWNHVWdQVDA5SUNkelpXeGxZM1J2Y2ljcElIdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCemJIUnlUM0IwYVc5dWN6b2dRbE5UWld4bFkzUnZjazl3ZEdsdmJuTWdQU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBdUxpNXBibkIxZEU5d2RHbHZibk1zWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCRGIyNTBZV2x1WlhKSlpEb2diVzlrWld3dVEyOXVkR0ZwYm1WeVNXUXNYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JWY214RFlqb2diVzlrWld3dVUyVnNaV04wYjNKRVlYUmhRMElzWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCSGNtbGtRMjlzY3pvZ2JXOWtaV3d1VTJWc1pXTjBiM0pEYjJ4elhISmNiaUFnSUNBZ0lDQWdJQ0FnSUgwN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsdWNIVjBJRDBnYm1WM0lFSlRSR0YwWVZSaFlteGxVMlZzWldOMGIzSW9jMngwY2s5d2RHbHZibk1wTzF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ1pXeHpaU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2x1Y0hWMElEMGdibVYzSUVKVFJHRjBZVlJoWW14bFZHVjRkRWx1Y0hWMEtHbHVjSFYwVDNCMGFXOXVjeWs3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJQ0FnSUNCcFppQW9iVzlrWld3dVNYTkxaWGtnUFQwOUlIUnlkV1VwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYVc1d2RYUXVjbVZoWkc5dWJIa2dQU0IwY25WbE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCcGJuQjFkQzVwYzB0bGVTQTlJSFJ5ZFdVN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUNBZ0lDQnBaaUFvYlc5a1pXd3VTWE5TWldGa1QyNXNlU0E5UFQwZ2RISjFaU2tnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwYm5CMWRDNXlaV0ZrYjI1c2VTQTlJSFJ5ZFdVN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsdWNIVjBMbk5sZEVOemN5Z25ZM1Z5YzI5eUp5d2dKM0J2YVc1MFpYSW5LVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhVzV3ZFhRdWMyVjBRM056S0NkMWMyVnlMWE5sYkdWamRDY3NJQ2R1YjI1bEp5azdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNWNjbHh1WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTVoY0hCbGJtUW9hVzV3ZFhRcE8xeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJR2RsZEVsdWNIVjBRMjl1ZEhKdmJITW9LVG9nUWxORVlYUmhWR0ZpYkdWSmJuQjFkRnRkSUh0Y2NseHVJQ0FnSUNBZ0lDQXZMMXh5WEc0Z0lDQWdJQ0FnSUM4dklHbGtaV0ZzYkhrZ2RHaGxjbVVnYzJodmRXeGtJR0psSUc5dWJIa2dhVzV3ZFhRZ1kyOXVkSEp2YkNCc2FXNXJaV1FnZEc4Z1lTQjBZV0pzWlNCalpXeHNJU0VoWEhKY2JpQWdJQ0FnSUNBZ0x5OWNjbHh1WEhKY2JpQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdWFYTklaV0ZrWlhJZ1BUMDlJSFJ5ZFdVcElISmxkSFZ5YmlCYlhUdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJR2x1Y0hWMGN6b2dRbE5FWVhSaFZHRmliR1ZKYm5CMWRGdGRJRDBnVzEwN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUhaaGNpQmphR2xzWkhKbGJpQTlJSFJvYVhNdVkyaHBiR1J5Wlc0N1hISmNiaUFnSUNBZ0lDQWdhV1lnS0dOb2FXeGtjbVZ1TG14bGJtZDBhQ0ErSURBcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1kyaHBiR1J5Wlc0dVptOXlSV0ZqYUNnb2Rpd2dhU2tnUFQ0Z2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hZZ2FXNXpkR0Z1WTJWdlppQkNVMFJoZEdGVVlXSnNaVk5sYkdWamRHOXlLVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbHVjSFYwY3k1d2RYTm9LSFl1ZEhoMFJXeGxiV1Z1ZENrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmxiSE5sSUdsbUlDaDJJR2x1YzNSaGJtTmxiMllnUWxORVlYUmhWR0ZpYkdWSmJuQjFkQ2xjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBibkIxZEhNdWNIVnphQ2gyS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlNrN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJwYm5CMWRITTdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnWjJWMFEyVnNiRlJsZUhRb0tUb2djM1J5YVc1bklId2diblZ0WW1WeUlId2dZbTl2YkdWaGJpQjhJSE4wY21sdVoxdGRJSHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdhV1lnS0hSb2FYTXVhWE5JWldGa1pYSXBJSEpsZEhWeWJpQjBhR2x6TG1kbGRGUmxlSFFvS1R0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlHTm9hV3hrSUQwZ2RHaHBjeTVqYUdsc1pISmxibHN3WFR0Y2NseHVJQ0FnSUNBZ0lDQnBaaUFvSVdOb2FXeGtLU0J5WlhSMWNtNGdYQ0pjSWp0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnYVdZZ0tHTm9hV3hrTG1Wc1pXMWxiblFnYVc1emRHRnVZMlZ2WmlCSVZFMU1TVzV3ZFhSRmJHVnRaVzUwS1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaGphR2xzWkNCcGJuTjBZVzVqWlc5bUlFSlRSR0YwWVZSaFlteGxRMmhsWTJ0Q2IzZ3BJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJqYUdsc1pDNWxiR1Z0Wlc1MExtTm9aV05yWldRZ0t5QmNJbHdpTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR1ZzYzJVZ2FXWWdLR05vYVd4a0lHbHVjM1JoYm1ObGIyWWdRbE5FWVhSaFZHRmliR1ZKYm5CMWRDa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR05vYVd4a0xuWmhiRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJR05vYVd4a0xtZGxkRlJsZUhRb0tUdGNjbHh1WEhKY2JseHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJR05zYjI1bEtDa2dlMXh5WEc0Z0lDQWdJQ0FnSUM4dklHUmxZblZuWjJWeU8xeHlYRzRnSUNBZ0lDQWdJSFpoY2lCell5QTlJSE4xY0dWeUxtTnNiMjVsS0NrN1hISmNiaUFnSUNBZ0lDQWdkbUZ5SUdNZ1BTQnVaWGNnUWxORVlYUmhWR0ZpYkdWRFpXeHNLSFJvYVhNdWMyaERiRzl1WlNoMGFHbHpMbTl3ZEdsdmJuTXBMQ0IwYUdsekxtbHpTR1ZoWkdWeUtUdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ2RIaDBJRDBnWXk1blpYUlVaWGgwS0NrN1hISmNiaUFnSUNBZ0lDQWdZeTVqYUdsc1pISmxiaUE5SUhOakxtTm9hV3hrY21WdU8xeHlYRzRnSUNBZ0lDQWdJR011Wld4bGJXVnVkQ0E5SUhOakxtVnNaVzFsYm5RN1hISmNiaUFnSUNBZ0lDQWdhV1lnS0hSb2FYTXVhWE5JWldGa1pYSXBJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdZeTV6WlhSVVpYaDBLSFI0ZENrN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJqTzF4eVhHNGdJQ0FnZlZ4eVhHNTlYSEpjYmlJc0lseHlYRzVsZUhCdmNuUWdhVzUwWlhKbVlXTmxJRUpUUlhabGJuUklZVzVrYkdWeUlIc2dLSE5sYm1SbGNqb2diMkpxWldOMExDQmxkbVZ1ZEU5aWFtVmpkRG9nUWxORmRtVnVkQ2s2SUhadmFXUWdmVnh5WEc1Y2NseHVaWGh3YjNKMElHbHVkR1Z5Wm1GalpTQkNVMFYyWlc1MElIdGNjbHh1SUNBZ0lFVjJaVzUwUkdGMFlUODZJSHNnUlhabGJuUS9PaUJoYm5rZ2ZUdGNjbHh1SUNBZ0lFUmhkR0ZUYjNWeVkyVk9ZVzFsT2lCemRISnBibWM3WEhKY2JuMWNjbHh1WEhKY2JtVjRjRzl5ZENCcGJuUmxjbVpoWTJVZ1FsTlRiM0owYVc1blVtVnhkV1Z6ZEVWMlpXNTBJR1Y0ZEdWdVpITWdRbE5GZG1WdWRDQjdYSEpjYmlBZ0lDQkZkbVZ1ZEVSaGRHRS9PaUI3WEhKY2JpQWdJQ0FnSUNBZ1JYWmxiblEvT2lCaGJua3NYSEpjYmlBZ0lDQWdJQ0FnVUhKdmNFNWhiV1UvT2lCemRISnBibWNzWEhKY2JpQWdJQ0FnSUNBZ1FYTmpQem9nWW05dmJHVmhibHh5WEc0Z0lDQWdmVnh5WEc1OVhISmNibHh5WEc1bGVIQnZjblFnYVc1MFpYSm1ZV05sSUVKVFEyOXNjMUpsYjNKa1pYSmxaRVYyWlc1MElHVjRkR1Z1WkhNZ1FsTkZkbVZ1ZENCN1hISmNiaUFnSUNCRmRtVnVkRVJoZEdFL09pQjdYSEpjYmlBZ0lDQWdJQ0FnUlhabGJuUS9PaUJoYm5rc1hISmNiaUFnSUNBZ0lDQWdRM1Z5Y21WdWRFTnZiRDg2SUc5aWFtVmpkQ3hjY2x4dUlDQWdJQ0FnSUNCQmMyTS9PaUJpYjI5c1pXRnVYSEpjYmlBZ0lDQjlYSEpjYm4xY2NseHVYSEpjYm1WNGNHOXlkQ0JwYm5SbGNtWmhZMlVnUWxORGIyNW1hV2RWY0dSaGRHVmtSWFpsYm5RZ1pYaDBaVzVrY3lCQ1UwVjJaVzUwSUh0Y2NseHVJQ0FnSUVWMlpXNTBSR0YwWVQ4NklIdGNjbHh1SUNBZ0lDQWdJQ0JGZG1WdWREODZJR0Z1ZVN4Y2NseHVJQ0FnSUNBZ0lDQkJZM1JwYjI0L09pQnpkSEpwYm1jc1hISmNiaUFnSUNBZ0lDQWdRM1Z5Y21WdWRFTnZiRDg2SUc5aWFtVmpkQ3hjY2x4dUlDQWdJQ0FnSUNCQmMyTS9PaUJpYjI5c1pXRnVYSEpjYmlBZ0lDQjlYSEpjYm4xY2NseHVYSEpjYm1WNGNHOXlkQ0JwYm5SbGNtWmhZMlVnUWxOR1pYUmphRkpsWTI5eVpFVnljbTl5UlhabGJuUWdaWGgwWlc1a2N5QkNVMFYyWlc1MElIdGNjbHh1SUNBZ0lFVjJaVzUwUkdGMFlUODZJSHRjY2x4dUlDQWdJQ0FnSUNCRmRtVnVkRDg2SUdGdWVTeGNjbHh1SUNBZ0lDQWdJQ0JTWldOdmNtUkpaRDg2SUhOMGNtbHVaMXh5WEc0Z0lDQWdmVnh5WEc1OVhISmNibHh5WEc1bGVIQnZjblFnYVc1MFpYSm1ZV05sSUVKVFJtVjBZMmhTWldOdmNtUkZkbVZ1ZENCbGVIUmxibVJ6SUVKVFJYWmxiblFnZTF4eVhHNGdJQ0FnUlhabGJuUkVZWFJoUHpvZ2UxeHlYRzRnSUNBZ0lDQWdJRVJoZEdFL09pQmhibmtzWEhKY2JpQWdJQ0FnSUNBZ1RXVjBZVVJoZEdFL09pQkNVMFJoZEdGVVlXSnNaVkJoWjJsdVowMWxkR0ZFWVhSaFhISmNiaUFnSUNBZ0lDQWdSWFpsYm5RL09pQmhibmxjY2x4dUlDQWdJSDFjY2x4dWZWeHlYRzVjY2x4dVpYaHdiM0owSUdsdWRHVnlabUZqWlNCQ1UwZHlhV1JWY0dSaGRHVmtSWFpsYm5RZ1pYaDBaVzVrY3lCQ1UwVjJaVzUwSUh0Y2NseHVJQ0FnSUVWMlpXNTBSR0YwWVQ4NklIdGNjbHh1SUNBZ0lDQWdJQ0JIY21sa1B6b2diMkpxWldOMExGeHlYRzRnSUNBZ0lDQWdJRVYyWlc1MFB6b2dZVzU1WEhKY2JpQWdJQ0I5WEhKY2JuMWNjbHh1WEhKY2JtVjRjRzl5ZENCcGJuUmxjbVpoWTJVZ1FsTlNiM2RWY0dSaGRHVmtSWFpsYm5RZ1pYaDBaVzVrY3lCQ1UwVjJaVzUwSUh0Y2NseHVJQ0FnSUVWMlpXNTBSR0YwWVQ4NklIdGNjbHh1SUNBZ0lDQWdJQ0JTYjNjL09pQmhibmtzWEhKY2JpQWdJQ0FnSUNBZ1JYWmxiblEvT2lCaGJubGNjbHh1SUNBZ0lIMWNjbHh1ZlZ4eVhHNWNjbHh1Wlhod2IzSjBJR2x1ZEdWeVptRmpaU0JDVTBacFpXeGtWWEJrWVhSbFpFVjJaVzUwSUdWNGRHVnVaSE1nUWxORmRtVnVkQ0I3WEhKY2JpQWdJQ0JGZG1WdWRFUmhkR0UvT2lCN1hISmNiaUFnSUNBZ0lDQWdVbTkzUHpvZ1lXNTVMRnh5WEc0Z0lDQWdJQ0FnSUVWMlpXNTBQem9nWVc1NUxGeHlYRzRnSUNBZ0lDQWdJRVpwWld4a1B6b2diMkpxWldOMFhISmNiaUFnSUNCOVhISmNibjFjY2x4dVhISmNibVY0Y0c5eWRDQnBiblJsY21aaFkyVWdRbE5YYVc1UWIzQkZkbVZ1ZENCbGVIUmxibVJ6SUVKVFJYWmxiblFnZTF4eVhHNGdJQ0FnVTJ0cGNGQjFjMmc2SUdKdmIyeGxZVzVjY2x4dWZWeHlYRzVsZUhCdmNuUWdhVzUwWlhKbVlXTmxJRUpUUlhabGJuUlRkV0p6WTNKcFltVnlUVzlrWld3Z2UxeHlYRzRnSUNBZ1MyVjVPaUJ6ZEhKcGJtY3NYSEpjYmlBZ0lDQkZkbVZ1ZEU1aGJXVTZJSE4wY21sdVp5eGNjbHh1SUNBZ0lFTmhiR3hpWVdOclB6b2dRbE5GZG1WdWRFaGhibVJzWlhJc1hISmNiaUFnSUNCRVlYUmhVMjkxY21ObFRtRnRaVG9nYzNSeWFXNW5MRnh5WEc0Z0lDQWdWbVZ5YVdaNVJHRjBZVk52ZFhKalpVNWhiV1UvT2lCaWIyOXNaV0Z1WEhKY2JuMWNjbHh1WEhKY2JseHlYRzR2S2lwY2NseHVJQ29nVlhKc0lFTkNJSFI1Y0dWY2NseHVJQ29nUUdOaGJHeGlZV05ySUdkbGRGVnliRU5oYkd4aVlXTnJYSEpjYmlBcUlFQndZWEpoYlNCN2JuVnRZbVZ5ZlNCd1lXZGxTVzVrWlhoY2NseHVJQ29nUUhKbGRIVnlibk1nZTNOMGNtbHVaMzBnZFhKc0lIUnZJR0ZqWTJWemN5QnVaWGgwSUhCaFoyVmNjbHh1SUNvdlhISmNibVY0Y0c5eWRDQnBiblJsY21aaFkyVWdaMlYwVlhKc1EyRnNiR0poWTJzZ2V5QW9jR0ZuWlVsdVpHVjRPaUJ1ZFcxaVpYSXBPaUJ6ZEhKcGJtY2dmVHRjY2x4dVhISmNiaTh2SUZSUFJFODZJRVpwZUNCMGFHVWdiM0IwYVc5dWN5Qm1iM0lnZEdobElHSmhjMlVnWTJ4aGMzTWdRbE5FWVhSaFZHRmliR1ZKYm5CMWRDQmhibVFnWVd4c0lHbDBjeUJqYUdsc1pITmNjbHh1WEhKY2JtVjRjRzl5ZENCcGJuUmxjbVpoWTJVZ1FsTkpibkIxZEU5d2RHbHZibk1nZTF4eVhHNGdJQ0FnUkdGMFlWTnZkWEpqWlU1aGJXVTZJSE4wY21sdVp6dGNjbHh1SUNBZ0lFbHVjSFYwVkhsd1pUODZJSE4wY21sdVp6dGNjbHh1SUNBZ0lFVnNaVzFsYm5SSlpEODZJSE4wY21sdVp6dGNjbHh1WEhKY2JpQWdJQ0F2S2lwY2NseHVJQ0FnSUNBcUlGTndZV05sSUhObGNHRnlZWFJsWkNCc2FYTjBJRzltSUdOemN5QmpiR0Z6YzJWelhISmNiaUFnSUNBZ0tpOWNjbHh1SUNBZ0lFTnNZWE56WlhNL09pQnpkSEpwYm1jN1hISmNiaUFnSUNCUWJHRmpaVWh2YkdSbGNqODZJSE4wY21sdVp6dGNjbHh1SUNBZ0lFMXZaR1ZzVG1GdFpUODZJSE4wY21sdVp6dGNjbHh1SUNBZ0lGUnBkR3hsUHpvZ2MzUnlhVzVuTzF4eVhHNWNjbHh1ZlZ4eVhHNWNjbHh1Wlhod2IzSjBJR2x1ZEdWeVptRmpaU0JDVTFObGJHVmpkRTl3ZEdsdmJuTWdaWGgwWlc1a2N5QkNVMGx1Y0hWMFQzQjBhVzl1Y3lCN1hISmNiaUFnSUNCVFpXeGxZM1JQY0hScGIyNXpPaUJDVTBSaGRHRlVZV0pzWlZObGJHVmpkRXhwYzNSSmRHVnRXMTFjY2x4dWZWeHlYRzVjY2x4dVpYaHdiM0owSUdsdWRHVnlabUZqWlNCQ1UwSjFkSFJ2Yms5d2RHbHZibk1nWlhoMFpXNWtjeUJDVTBsdWNIVjBUM0IwYVc5dWN5QjdYSEpjYmlBZ0lDQkpZMjl1UHpvZ2MzUnlhVzVuTzF4eVhHNGdJQ0FnU0dGdVpHeGxjajg2SUNoaGNtY3dPaUJOYjNWelpVVjJaVzUwS1NBOVBpQjJiMmxrTzF4eVhHNTlYSEpjYmx4eVhHNWxlSEJ2Y25RZ2FXNTBaWEptWVdObElFSlRVMlZzWldOMGIzSlBjSFJwYjI1eklHVjRkR1Z1WkhNZ1FsTlRaV3hsWTNSdmNsZHBibVJ2ZDA5d2RHbHZibk1nZTF4eVhHNGdJQ0FnWTJ4dmJtVkRiMjUwWlhoMFB6b2dZbTl2YkdWaGJqdGNjbHh1ZlZ4eVhHNWNjbHh1Wlhod2IzSjBJR2x1ZEdWeVptRmpaU0JDVTFObGJHVmpkRzl5VjJsdVpHOTNUM0IwYVc5dWN5QmxlSFJsYm1SeklFSlRTVzV3ZFhSUGNIUnBiMjV6SUh0Y2NseHVJQ0FnSUVOdmJuUmhhVzVsY2tsa09pQnpkSEpwYm1jN1hISmNiaUFnSUNCVmNteERZam9nWjJWMFZYSnNRMkZzYkdKaFkyczdYSEpjYmlBZ0lDQkhjbWxrUTI5c2N6ODZJRUpUUkdGMFlWUmhZbXhsUTI5c1JHVm1hVzVwZEdsdmJsdGRPMXh5WEc1OVhISmNibHh5WEc1bGVIQnZjblFnYVc1MFpYSm1ZV05sSUVKVFJHRjBZVlJoWW14bFUyVnNaV04wVEdsemRFbDBaVzBnZTF4eVhHNGdJQ0FnZEdWNGREb2djM1J5YVc1bk8xeHlYRzRnSUNBZ2RtRnNkV1U2SUhOMGNtbHVaenRjY2x4dUlDQWdJR2x6VTJWc1pXTjBaV1EvT2lCaWIyOXNaV0Z1TzF4eVhHNWNjbHh1ZlZ4eVhHNWNjbHh1Wlhod2IzSjBJR2x1ZEdWeVptRmpaU0JDVTBSaGRHRlVZV0pzWlVOdmJFUmxabWx1YVhScGIyNGdlMXh5WEc0Z0lDQWdMeW9xWEhKY2JpQWdJQ0FnS2lCRWFYTndiR0Y1SUc1aGJXVmNjbHh1SUNBZ0lDQXFMMXh5WEc0Z0lDQWdSR2x6Y0d4aGVVNWhiV1UvT2lCemRISnBibWM3WEhKY2JpQWdJQ0JFWVhSaFZIbHdaVDg2SUhOMGNtbHVaenRjY2x4dUlDQWdJRmRwWkhSb1B6b2djM1J5YVc1bk8xeHlYRzVjY2x4dUlDQWdJQzhxS2x4eVhHNGdJQ0FnSUNvZ2RtRnlhV0ZpYkdVZ2JtRnRaU0F0SUcxMWMzUWdibTkwSUdOdmJuUmhhVzRnYzNCaFkyVnpYSEpjYmlBZ0lDQWdLaTljY2x4dUlDQWdJRkJ5YjNCT1lXMWxQem9nYzNSeWFXNW5PMXh5WEc0Z0lDQWdTWE5MWlhrL09pQmliMjlzWldGdU8xeHlYRzRnSUNBZ0x5b3FYSEpjYmlBZ0lDQWdLaUJVYUdVZ2IzQjBhVzl1Y3lCdlppQmhJSE5sYkdWamRDQnNhWE4wTDJSeWIzQmtiM2R1WEhKY2JpQWdJQ0FnS2k5Y2NseHVJQ0FnSUZObGJHVmpkRXhwYzNRL09pQkNVMFJoZEdGVVlXSnNaVk5sYkdWamRFeHBjM1JKZEdWdFcxMDdYSEpjYmlBZ0lDQkRiMnhUY0dGdVB6b2diblZ0WW1WeU8xeHlYRzRnSUNBZ1VtOTNVM0JoYmo4NklHNTFiV0psY2p0Y2NseHVYSEpjYmlBZ0lDQXZLaXBjY2x4dUlDQWdJQ0FxSUZSb1pTQlZVa3dnZEc4Z1oyVjBJSFJvWlNCa1lYUmhJR1p2Y2lCaElITmxiR1ZqZEc5eUlGeHlYRzRnSUNBZ0lDb2dVMlZzWldOMGIzSWdaR2x6Y0d4aGVYTWdaR0YwWVNCcGJpQmhJR2R5YVdRZ2QyaGxjbVVnYm1WbFpITWdkRzhnWW1VZ1ltbHVaQ0IwYnlCemIyMWxJSFJoWW5Wc1pYSWdaR0YwWVZ4eVhHNGdJQ0FnSUNvdlhISmNiaUFnSUNCVFpXeGxZM1J2Y2tSaGRHRkRRajg2SUdkbGRGVnliRU5oYkd4aVlXTnJPMXh5WEc1Y2NseHVJQ0FnSUM4cUtseHlYRzRnSUNBZ0lDb2dWR2hsSUdOdmJIVnRiaUJzYVhOMElHOW1JSFJvWlNCbmNtbGtJR1JwYzNCc1lYbGxaQ0JwYmlCMGFHVWdjMlZzWldOMGIzSWdkMmx1Wkc5M1hISmNiaUFnSUNBZ0tpOWNjbHh1SUNBZ0lGTmxiR1ZqZEc5eVEyOXNjejg2SUVKVFJHRjBZVlJoWW14bFEyOXNSR1ZtYVc1cGRHbHZibHRkTzF4eVhHNWNjbHh1SUNBZ0lFUmhkR0ZUYjNWeVkyVk9ZVzFsUHpvZ2MzUnlhVzVuTzF4eVhHNWNjbHh1SUNBZ0lFTnZiblJoYVc1bGNrbGtQem9nYzNSeWFXNW5PMXh5WEc1Y2NseHVJQ0FnSUVselVtVmhaRTl1YkhrL09pQmliMjlzWldGdU8xeHlYRzU5WEhKY2JseHlYRzVjY2x4dUx5b3FYSEpjYmlBcUlFRWdZMkZzYkdKaFkyc2dkSGx3WlNCMGJ5Qm5aWFFnZEdobElHNWxlSFFnY0dGblpTQnBiaUIwYUdVZ2IyWm1iR2x1WlNCdGIyUmxYSEpjYmlBcUlFQmpZV3hzWW1GamF5Qm5aWFJPWlhoMFVHRm5aVTltWm14cGJtVmNjbHh1SUNvZ1FIQmhjbUZ0SUh0dWRXMWlaWEo5SUhCaFoyVkpibVJsZUZ4eVhHNGdLaUJBY0dGeVlXMGdlMkZ1ZVZ0ZGZTQmtZWFJoSUMwZ1pHRjBZWE5sZEZ4eVhHNGdLaUJBY0dGeVlXMGdlMEpUUkdGMFlWUmhZbXhsVUdGbmFXNW5UV1YwWVVSaGRHRjlJRzFsZEdGa1lYUmhJQzBnWkdGMFlYTmxkR0VnYldWMFlXUmhkR0ZjY2x4dUlDb2dRSEpsZEhWeWJuTWdlMkZ1ZVZ0ZGZTQnlaWFIxY201eklIUm9aU0JrWVhSaElHMXZaR1ZzSUdadmNpQjBhR1VnY21WeGRXVnpkQ0J3WVdkbFhISmNiaUFxTDF4eVhHNWNjbHh1Wlhod2IzSjBJR2x1ZEdWeVptRmpaU0JuWlhST1pYaDBVR0ZuWlU5bVpteHBibVVnZXlBb2NHRm5aVWx1WkdWNE9pQnVkVzFpWlhJc0lHUmhkR0U2SUdGdWVWdGRMQ0J0WlhSaFJHRjBZVG9nUWxORVlYUmhWR0ZpYkdWUVlXZHBibWROWlhSaFJHRjBZU2s2SUdGdWVWdGRJSDA3WEhKY2JseHlYRzVsZUhCdmNuUWdhVzUwWlhKbVlXTmxJRUpUU1c1cGRFUmhkR0ZOYjJSbGJDQjdYSEpjYmlBZ0lDQmtZWFJoT2lCaGJubGJYU3hjY2x4dUlDQWdJRzFsZEdGRVlYUmhPaUJDVTBSaGRHRlVZV0pzWlZCaFoybHVaMDFsZEdGRVlYUmhYSEpjYmlCOVhISmNibHh5WEc1Y2NseHVaWGh3YjNKMElHbHVkR1Z5Wm1GalpTQkNVMFJoZEdGVVlXSnNaVVJoZEdGVGIzVnlZMlVnZTF4eVhHNGdJQ0FnYm1GdFpUODZJSE4wY21sdVp6dGNjbHh1SUNBZ0lHbHpVbVZ0YjNSbFB6b2dZbTl2YkdWaGJqdGNjbHh1SUNBZ0lHUmhkR0UvT2lCN0lHbHVhWFJFWVhSaE9pQmhibmxiWFRzZ2JXVjBZVVJoZEdFNklFSlRSR0YwWVZSaFlteGxVR0ZuYVc1blRXVjBZVVJoZEdFN0lIMDdYSEpjYmlBZ0lDQjFjbXcvT2lCblpYUlZjbXhEWVd4c1ltRmphenRjY2x4dUlDQWdJR2RsZEZCaFoyVlBabVpzYVc1bFEwSS9PaUJuWlhST1pYaDBVR0ZuWlU5bVpteHBibVU3WEhKY2JuMWNjbHh1WEhKY2JtVjRjRzl5ZENCcGJuUmxjbVpoWTJVZ1FsTkVZWFJoVkdGaWJHVlBjSFJwYjI1eklIdGNjbHh1SUNBZ0lHZHlhV1JKWkQ4NklITjBjbWx1Wnp0Y2NseHVJQ0FnSUdOdmJuUmhhVzVsY2tsa1B6b2djM1J5YVc1bk8xeHlYRzRnSUNBZ1kyOXNSR1ZtYVc1cGRHbHZiajg2SUVKVFJHRjBZVlJoWW14bFEyOXNSR1ZtYVc1cGRHbHZibHRkTzF4eVhHNGdJQ0FnWkdGMFlWTnZkWEpqWlQ4NklFSlRSR0YwWVZSaFlteGxSR0YwWVZOdmRYSmpaVHRjY2x4dUlDQWdJR1Z1WVdKc1pVbHVabWx1YVhSbFUyTnliMnhzUHpvZ1ltOXZiR1ZoYmp0Y2NseHVJQ0FnSUdOaFkyaGxVbVZ6Y0c5dWMyVnpQem9nWW05dmJHVmhianRjY2x4dUlDQWdJR2x6VW1WaFpHOXViSGsvT2lCaWIyOXNaV0Z1TzF4eVhHNTlYSEpjYmx4eVhHNWxlSEJ2Y25RZ1kyeGhjM01nUWxORVlYUmhWR0ZpYkdWUVlXZHBibWROWlhSaFJHRjBZU0I3WEhKY2JpQWdJQ0J3WVdkbFNXNWtaWGc2SUc1MWJXSmxjanRjY2x4dUlDQWdJSEJoWjJWVGFYcGxPaUJ1ZFcxaVpYSTdYSEpjYmlBZ0lDQjBiM1JoYkZKbFkyOXlaSE02SUc1MWJXSmxjanRjY2x4dUlDQWdJSFJ2ZEdGc1VHRm5aWE02SUc1MWJXSmxjanRjY2x4dVhISmNiaUFnSUNCamIyNXpkSEoxWTNSdmNpaHdZV2RsU1c1a1pYZzZJRzUxYldKbGNpQTlJREVzSUhCaFoyVlRhWHBsT2lCdWRXMWlaWElnUFNBeE1Dd2dkRzkwWVd4U1pXTnZjbVJ6T2lCdWRXMWlaWElnUFNBeE1Da2dlMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVjR0ZuWlVsdVpHVjRJRDBnY0dGblpVbHVaR1Y0TzF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11Y0dGblpWTnBlbVVnUFNBaGNHRm5aVk5wZW1VZ2ZId2djR0ZuWlZOcGVtVWdQRDBnTUNBL0lERXdJRG9nY0dGblpWTnBlbVU3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTUwYjNSaGJGSmxZMjl5WkhNZ1BTQjBiM1JoYkZKbFkyOXlaSE03WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTUwYjNSaGJGQmhaMlZ6SUQwZ1RXRjBhQzVqWldsc0tIUm9hWE11ZEc5MFlXeFNaV052Y21SeklDOGdkR2hwY3k1d1lXZGxVMmw2WlNrN1hISmNiaUFnSUNCOVhISmNibjFjY2x4dVhISmNibHh5WEc1bGVIQnZjblFnYVc1MFpYSm1ZV05sSUVKVFJHRjBZVlJoWW14bFVHRm5hVzVoZEdsdmJrOXdkR2x2Ym5NZ2UxeHlYRzRnSUNBZ1pHRjBZVk52ZFhKalpVNWhiV1U2SUhOMGNtbHVaenRjY2x4dUlDQWdJRzFsZEdGRVlYUmhQem9nUWxORVlYUmhWR0ZpYkdWUVlXZHBibWROWlhSaFJHRjBZVHRjY2x4dUlDQWdJRzVsZUhSUVlXZGxRMkZzYkdKaFkyczZJQ2h3WVdkbE9pQnVkVzFpWlhJcElEMCtJSFp2YVdRN1hISmNibjFjY2x4dVhISmNibHh5WEc1bGVIQnZjblFnYVc1MFpYSm1ZV05sSUVKVFJHRjBZVlJoWW14bFNIUjBjRU5zYVdWdWRFOXdkR2x2Ym5NZ2UxeHlYRzRnSUNBZ2RYSnNPaUJ6ZEhKcGJtYzdYSEpjYmlBZ0lDQnRaWFJvYjJRL09pQnpkSEpwYm1jN1hISmNiaUFnSUNCb1pXRmtaWEp6UHpvZ1lXNTVXMTA3WEhKY2JpQWdJQ0J5WldOdmNtUkpaRDg2SUhOMGNtbHVaenRjY2x4dWZWeHlYRzVjY2x4dVhISmNiaTh2SUdWNGNHOXlkQ0JqYkdGemN5QkNVMFJoZEdGVVlXSnNaVU52YkZObGRIUnBibWR6SUh0Y2NseHVMeThnSUNBZ0lIZHBaSFJvT2lCemRISnBibWM3WEhKY2JpOHZJQ0FnSUNCMmFYTnBZbXhsT2lCaWIyOXNaV0Z1TzF4eVhHNHZMeUFnSUNBZ2MyOXlkRG9nYzNSeWFXNW5PMXh5WEc0dkx5QWdJQ0FnY0c5emFYUnBiMjQ2SUc1MWJXSmxjanRjY2x4dUx5OGdJQ0FnSUM4cUtseHlYRzR2THlBZ0lDQWdJQ29nUUhCaGNtRnRJSHR6ZEhKcGJtZDlJSGRwWkhSb1hISmNiaTh2SUNBZ0lDQWdLaUJBY0dGeVlXMGdlMkp2YjJ4bFlXNTlJSFpwYzJsaWJHVmNjbHh1THk4Z0lDQWdJQ0FxSUVCd1lYSmhiU0I3YzNSeWFXNW5mU0J6YjNKMElHRnpZM3hrWlhOalhISmNiaTh2SUNBZ0lDQWdLaUJBY0dGeVlXMGdlMjUxYldKbGNuMGdjRzl6YVhScGIyNWNjbHh1THk4Z0lDQWdJQ0FxTDF4eVhHNHZMeUFnSUNBZ1kyOXVjM1J5ZFdOMGIzSW9kMmxrZEdnNklITjBjbWx1Wnl3Z2RtbHphV0pzWlRvZ1ltOXZiR1ZoYml3Z2MyOXlkRG9nYzNSeWFXNW5MQ0J3YjNOcGRHbHZiam9nYm5WdFltVnlLU0I3WEhKY2JpOHZJQ0FnSUNBZ0lDQWdkR2hwY3k1M2FXUjBhQ0E5SUhkcFpIUm9PMXh5WEc0dkx5QWdJQ0FnSUNBZ0lIUm9hWE11ZG1semFXSnNaU0E5SUhacGMybGliR1U3WEhKY2JpOHZJQ0FnSUNBZ0lDQWdkR2hwY3k1emIzSjBJRDBnYzI5eWREdGNjbHh1THk4Z0lDQWdJQ0FnSUNCMGFHbHpMbkJ2YzJsMGFXOXVJRDBnY0c5emFYUnBiMjQ3WEhKY2JpOHZJQ0FnSUNCOVhISmNiaTh2SUgxY2NseHVYSEpjYm1WNGNHOXlkQ0JwYm5SbGNtWmhZMlVnUWxORGIyeDFiVzVUWlhSMGFXNW5jeUI3WEhKY2JpQWdJQ0JYYVdSMGFEb2djM1J5YVc1blhISmNiaUFnSUNCV2FYTnBZbXhsT2lCaWIyOXNaV0Z1WEhKY2JpQWdJQ0JCYzJObGJtUnBibWM2SUdKdmIyeGxZVzVjY2x4dUlDQWdJRkJ2YzJsMGFXOXVPaUJ1ZFcxaVpYSmNjbHh1ZlZ4eVhHNWNjbHh1Wlhod2IzSjBJR2x1ZEdWeVptRmpaU0JDVTFKdmQwOXdkR2x2Ym5NZ2UxeHlYRzRnSUNBZ1pHRjBZVk52ZFhKalpVNWhiV1U2SUhOMGNtbHVaenRjY2x4dUlDQWdJR2R5YVdSSlpEb2djM1J5YVc1bk8xeHlYRzRnSUNBZ1ozSnBaRWhsWVdSbGNqODZJR0p2YjJ4bFlXNDdYSEpjYmlBZ0lDQnBjMVJsYlhCc1lYUmxVbTkzUHpvZ1ltOXZiR1ZoYmp0Y2NseHVJQ0FnSUdOdmJuUmhhVzVsY2tsa1B6b2djM1J5YVc1bk8xeHlYRzU5WEhKY2JseHlYRzVsZUhCdmNuUWdhVzUwWlhKbVlXTmxJRWxUWlhOemFXOXVVM1J2Y21GblpWTmxjblpwWTJVZ2UxeHlYRzRnSUNBZ1lXUmtTWFJsYlNoclpYazZJSE4wY21sdVp5d2dkbUZzZFdVNklHRnVlU3dnWlhod2FYSjVPaUJFWVhSbEtUb2dkbTlwWkR0Y2NseHVJQ0FnSUdGd2NHVnVaRWwwWlcwb2EyVjVPaUJ6ZEhKcGJtY3NJR0Z3Y0dWdVpFWmhZM1J2Y25rNklDaDJZV3gxWlRvZ1lXNTVLU0E5UGlCaGJua3BPaUIyYjJsa08xeHlYRzRnSUNBZ1kzSmxZWFJsUlhod2FYSjVTMlY1S0d0bGVUb2djM1J5YVc1bktUb2djM1J5YVc1bk8xeHlYRzRnSUNBZ1oyVjBTWFJsYlZKaGR5aHJaWGs2SUhOMGNtbHVaeWs2SUVOaFkyaGxaRWwwWlcwN1hISmNiaUFnSUNCblpYUkpkR1Z0S0d0bGVUb2djM1J5YVc1bktUb2dZVzU1TzF4eVhHNGdJQ0FnY21WdGIzWmxTWFJsYlNoclpYazZJSE4wY21sdVp5azZJSFp2YVdRN1hISmNiaUFnSUNCeVpXMXZkbVZCYkd3b2NISmxabWw0T2lCemRISnBibWNwT2lCMmIybGtPMXh5WEc1Y2NseHVmVnh5WEc1Y2NseHVaWGh3YjNKMElHbHVkR1Z5Wm1GalpTQkRZV05vWldSSmRHVnRJSHRjY2x4dUlDQWdJSFpoYkhWbE9pQmhibms3WEhKY2JpQWdJQ0IwZVhCbE9pQnpkSEpwYm1jN1hISmNiaUFnSUNCbGVIQnBjbms2SUc1MWJXSmxjanRjY2x4dWZWeHlYRzVjY2x4dVpYaHdiM0owSUdsdWRHVnlabUZqWlNCSlFsTkVZWFJoVkdGaWJHVklkSFJ3UTJ4cFpXNTBJSHRjY2x4dUlDQWdJR2RsZENodmNIUnBiMjV6T2lCQ1UwUmhkR0ZVWVdKc1pVaDBkSEJEYkdsbGJuUlBjSFJwYjI1ektUb2dkbTlwWkR0Y2NseHVJQ0FnSUc1dmRHbG1lVkpsYzNCdmJuTmxLSEpsYzNCdmJuTmxPaUJoYm5rc0lHOXdkR2x2Ym5NNklFSlRSR0YwWVZSaFlteGxTSFIwY0VOc2FXVnVkRTl3ZEdsdmJuTXBPaUIyYjJsa08xeHlYRzRnSUNBZ2JtOTBhV1o1UlhKeWIzSW9aWEp5YjNJNklHRnVlU3dnYjNCMGFXOXVjem9nUWxORVlYUmhWR0ZpYkdWSWRIUndRMnhwWlc1MFQzQjBhVzl1Y3lrNklIWnZhV1E3WEhKY2JuMWNjbHh1WEhKY2JtVjRjRzl5ZENCcGJuUmxjbVpoWTJVZ1NXNW1hVzVwZEdWVFkzSnZiR3hQY0hScGIyNXpJSHRjY2x4dUlDQWdJR2R5YVdSRmJHVnRaVzUwT2lCRmJHVnRaVzUwTzF4eVhHNGdJQ0FnYUhSMGNFTnNhV1Z1ZERvZ1NVSlRSR0YwWVZSaFlteGxTSFIwY0VOc2FXVnVkRHRjY2x4dWZWeHlYRzVjY2x4dVpYaHdiM0owSUdsdWRHVnlabUZqWlNCQ1UwUmhkR0ZVWVdKc1pVaDVjR1Z5VEdsdWEwOXdkR2x2Ym5NZ2UxeHlYRzRnSUNBZ2RHVjRkRDg2SUhOMGNtbHVaenRjY2x4dUlDQWdJR2h5WldZL09pQnpkSEpwYm1jN1hISmNiaUFnSUNCamJHRnpjMlZ6UHpvZ2MzUnlhVzVuTzF4eVhHNGdJQ0FnWkdGMFlWTnZkWEpqWlU1aGJXVTZJSE4wY21sdVp6dGNjbHh1SUNBZ0lHTnNhV05yU0dGdVpHeGxjajg2SUNobE9pQk5iM1Z6WlVWMlpXNTBLU0E5UGlCMmIybGtPMXh5WEc1OVhISmNibHh5WEc1Y2NseHVJaXdpYVcxd2IzSjBJSHNnUWxORVlYUmhWR0ZpYkdWQ1lYTmxJSDBnWm5KdmJTQmNJaTR2UWxORVlYUmhWR0ZpYkdWQ1lYTmxYQ0k3WEhKY2JtbHRjRzl5ZENCN0lGTmxjM05wYjI1VGRHOXlZV2RsVTJWeWRtbGpaU3dnWVhCd1JHRjBZVVYyWlc1MGN5d2daR0YwWVVWMlpXNTBjMU5sY25acFkyVWdmU0JtY205dElGd2lMaTR2YzJWeWRtbGpaWE5jSWp0Y2NseHVhVzF3YjNKMElIc2dRbE5HWlhSamFGSmxZMjl5WkVWeWNtOXlSWFpsYm5Rc0lFSlRSR0YwWVZSaFlteGxTSFIwY0VOc2FXVnVkRTl3ZEdsdmJuTXNJRUpUUm1WMFkyaFNaV052Y21SRmRtVnVkQ3dnUWxORVlYUmhWR0ZpYkdWUVlXZHBibWROWlhSaFJHRjBZU3dnU1VKVFJHRjBZVlJoWW14bFNIUjBjRU5zYVdWdWRDd2dRbE5GZG1WdWRDQjlJR1p5YjIwZ1hDSXVMaTlqYjIxdGIyNVVlWEJsY3k5amIyMXRiMjR0ZEhsd1pYTmNJanRjY2x4dVhISmNibVY0Y0c5eWRDQmpiR0Z6Y3lCQ1UwUmhkR0ZVWVdKc1pVaDBkSEJEYkdsbGJuUWdaWGgwWlc1a2N5QkNVMFJoZEdGVVlXSnNaVUpoYzJVZ2FXMXdiR1Z0Wlc1MGN5QkpRbE5FWVhSaFZHRmliR1ZJZEhSd1EyeHBaVzUwSUh0Y2NseHVJQ0FnSUhObGMzTnBiMjVUZEc5eVlXZGxPaUJUWlhOemFXOXVVM1J2Y21GblpWTmxjblpwWTJVN1hISmNiaUFnSUNCbGJtRmliR1ZEWVdOb2FXNW5PaUJpYjI5c1pXRnVPMXh5WEc1Y2NseHVJQ0FnSUdOdmJuTjBjblZqZEc5eUtHUmhkR0ZUYjNWeVkyVk9ZVzFsT2lCemRISnBibWNzSUdWdVlXSnNaVU5oWTJocGJtYzZJR0p2YjJ4bFlXNGdQU0JtWVd4elpTa2dlMXh5WEc0Z0lDQWdJQ0FnSUhOMWNHVnlLQ2s3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTV6WlhOemFXOXVVM1J2Y21GblpTQTlJRzVsZHlCVFpYTnphVzl1VTNSdmNtRm5aVk5sY25acFkyVW9LVHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbVJoZEdGVGIzVnlZMlZPWVcxbElEMGdaR0YwWVZOdmRYSmpaVTVoYldVN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1bGJtRmliR1ZEWVdOb2FXNW5JRDBnWlc1aFlteGxRMkZqYUdsdVp6dGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0J1YjNScFpubE1hWE4wWlc1bGNuTW9aWFpsYm5SVWVYQmxPaUJ6ZEhKcGJtY3NJSEJoZVd4dllXUTZJRUpUUlhabGJuUXBJSHRjY2x4dUlDQWdJQ0FnSUNCa1lYUmhSWFpsYm5SelUyVnlkbWxqWlM1RmJXbDBLR1YyWlc1MFZIbHdaU3dnZEdocGN5d2djR0Y1Ykc5aFpDazdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnWjJWMEtHOXdkR2x2Ym5NNklFSlRSR0YwWVZSaFlteGxTSFIwY0VOc2FXVnVkRTl3ZEdsdmJuTXBJSHRjY2x4dUlDQWdJQ0FnSUNBdkx5QmtaV0oxWjJkbGNqdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ1gzUm9hWE1nUFNCMGFHbHpPMXh5WEc0Z0lDQWdJQ0FnSUhaaGNpQmpZV05vWlNBOUlGOTBhR2x6TG1WdVlXSnNaVU5oWTJocGJtYzdYSEpjYmlBZ0lDQWdJQ0FnYVdZZ0tHTmhZMmhsSUQwOVBTQjBjblZsS1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhaaGNpQnJaWGtnUFNCS1UwOU9Mbk4wY21sdVoybG1lU2h2Y0hScGIyNXpLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUhaaGJIVmxJRDBnZEdocGN5NXpaWE56YVc5dVUzUnZjbUZuWlM1blpYUkpkR1Z0S0d0bGVTazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2gyWVd4MVpTa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWDNSb2FYTXVibTkwYVdaNVVtVnpjRzl1YzJVb2RtRnNkV1VzSUc5d2RHbHZibk1wTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUZCeWIyMXBjMlV1Y21WemIyeDJaU2dwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJQ0FnSUNCMllYSWdjbVZ4ZFdWemRDQTlJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdiV1YwYUc5a09pQnZjSFJwYjI1ekxtMWxkR2h2WkNBL1B5QW5SMFZVSnl4Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYUdWaFpHVnljem9nYjNCMGFXOXVjeTVvWldGa1pYSnpJRDhnYjNCMGFXOXVjeTVvWldGa1pYSnpJRG9nZTMxY2NseHVJQ0FnSUNBZ0lDQjlPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQnlaWFIxY200Z1ptVjBZMmdvYjNCMGFXOXVjeTUxY213c0lISmxjWFZsYzNRcFhISmNiaUFnSUNBZ0lDQWdJQ0FnSUM1MGFHVnVLSEpsYzNCdmJuTmxJRDArSUhKbGMzQnZibk5sTG1wemIyNG9LU2xjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdMblJvWlc0b1pHRjBZU0E5UGlCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvWTJGamFHVWdQVDA5SUhSeWRXVXBJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmZkR2hwY3k1elpYTnphVzl1VTNSdmNtRm5aUzVoWkdSSmRHVnRLR3RsZVN3Z1pHRjBZU3dnYm1WM0lFUmhkR1VvUkdGMFpTNXViM2NvS1NBcklDZ3hNQ0FxSURZd0lDb2dNVEF3TUNrcEtUc2dMeThnWlhod2FYSmxjeUJwYmlBeE1DQnRhVzUxZEdWelhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JmZEdocGN5NXViM1JwWm5sU1pYTndiMjV6WlNoa1lYUmhMQ0J2Y0hScGIyNXpLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmU2xjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdMbU5oZEdOb0tHVnljbTl5SUQwK0lIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRjkwYUdsekxtNXZkR2xtZVVWeWNtOXlLR1Z5Y205eUxDQnZjSFJwYjI1ektUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTbGNjbHh1WEhKY2JpQWdJQ0I5TzF4eVhHNWNjbHh1SUNBZ0lHNXZkR2xtZVZKbGMzQnZibk5sS0hKbGMzQnZibk5sT2lCaGJua3NJRzl3ZEdsdmJuTTZJRUpUUkdGMFlWUmhZbXhsU0hSMGNFTnNhV1Z1ZEU5d2RHbHZibk1wSUh0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnZEhKNUlIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJR1psZEdOb1VtVmpiM0prUlhabGJuUTZJRUpUUm1WMFkyaFNaV052Y21SRmRtVnVkQ0E5SUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lFUmhkR0ZUYjNWeVkyVk9ZVzFsT2lCMGFHbHpMbVJoZEdGVGIzVnlZMlZPWVcxbExGeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdSWFpsYm5SRVlYUmhPaUI3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdSR0YwWVRvZ2NtVnpjRzl1YzJVdWFYUmxiWE1zWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdUV1YwWVVSaGRHRTZJRzVsZHlCQ1UwUmhkR0ZVWVdKc1pWQmhaMmx1WjAxbGRHRkVZWFJoS0hKbGMzQnZibk5sTG0xbGRHRkVZWFJoTG5CaFoyVkpibVJsZUN3Z2NtVnpjRzl1YzJVdWJXVjBZVVJoZEdFdWNHRm5aVk5wZW1Vc0lISmxjM0J2Ym5ObExtMWxkR0ZFWVhSaExuUnZkR0ZzVW1WamIzSmtjeWxjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlR0Y2NseHVJQ0FnSUNBZ0lDQjlJR05oZEdOb0lDaGxjbkp2Y2lrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMllYSWdjbVZoYzI5dUlEMGdKMmx1ZG1Gc2FXUWdjbVZ6Y0c5dWMyVXVJRTFoYTJVZ2MzVnlaU0J5WlhOd2IyNXpaU0JvWVhabElHWnBaV3hrY3pvZ2FYUmxiWE43WVhKeVlYbGJiMkpxWldOMFhYMHNJRzFsZEdGRVlYUmhJSHR3WVdkbFNXNWtaWGdzSUhCaFoyVlRhWHBsTENCMGIzUmhiRkpsWTI5eVpITjlKenRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdMeThnWTI5dWMyOXNaUzVzYjJjb2NtVmhjMjl1S1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXViM1JwWm5sRmNuSnZjaWh5WldGemIyNHNJRzl3ZEdsdmJuTXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200N1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG01dmRHbG1lVXhwYzNSbGJtVnljeWhoY0hCRVlYUmhSWFpsYm5SekxrOU9YMFpGVkVOSVgwZFNTVVJmVWtWRFQxSkVMQ0JtWlhSamFGSmxZMjl5WkVWMlpXNTBLVHRjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNCdWIzUnBabmxGY25KdmNpaGxjbkp2Y2pvZ1lXNTVMQ0J2Y0hScGIyNXpPaUJDVTBSaGRHRlVZV0pzWlVoMGRIQkRiR2xsYm5SUGNIUnBiMjV6S1NCN1hISmNiaUFnSUNBZ0lDQWdiR1YwSUdWeWNrVjJaVzUwT2lCQ1UwWmxkR05vVW1WamIzSmtSWEp5YjNKRmRtVnVkQ0E5SUhzZ1JHRjBZVk52ZFhKalpVNWhiV1U2SUhSb2FYTXVaR0YwWVZOdmRYSmpaVTVoYldVc0lFVjJaVzUwUkdGMFlUb2dleUJGZG1WdWREb2daWEp5YjNJc0lGSmxZMjl5WkVsa09pQnZjSFJwYjI1ekxuSmxZMjl5WkVsa0lIMGdmVHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbTV2ZEdsbWVVeHBjM1JsYm1WeWN5aGhjSEJFWVhSaFJYWmxiblJ6TGs5T1gwWkZWRU5JWDBkU1NVUmZVa1ZEVDFKRVgwVlNVazlTTENCbGNuSkZkbVZ1ZENrN1hISmNiaUFnSUNCOVhISmNibjFjY2x4dUlpd2lhVzF3YjNKMElIc2dRbE5FWVhSaFZHRmliR1ZJZVhCbGNreHBibXRQY0hScGIyNXpJSDBnWm5KdmJTQmNJaTR1TDJOdmJXMXZibFI1Y0dWekwyTnZiVzF2YmkxMGVYQmxjMXdpTzF4eVhHNXBiWEJ2Y25RZ2V5QkNVMFJoZEdGVVlXSnNaVUpoYzJVZ2ZTQm1jbTl0SUZ3aUxpOUNVMFJoZEdGVVlXSnNaVUpoYzJWY0lqdGNjbHh1WEhKY2JtVjRjRzl5ZENCamJHRnpjeUJDVTBSaGRHRlVZV0pzWlVoNWNHVnlUR2x1YXlCbGVIUmxibVJ6SUVKVFJHRjBZVlJoWW14bFFtRnpaU0I3WEhKY2JpQWdJQ0J2Y0hScGIyNXpPaUJDVTBSaGRHRlVZV0pzWlVoNWNHVnlUR2x1YTA5d2RHbHZibk03WEhKY2JpQWdJQ0JqYjI1emRISjFZM1J2Y2lodmNIUnBiMjV6T2lCQ1UwUmhkR0ZVWVdKc1pVaDVjR1Z5VEdsdWEwOXdkR2x2Ym5NcElIc2dJQ0FnSUNBZ0lGeHlYRzRnSUNBZ0lDQWdJSE4xY0dWeUtDazdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NXZjSFJwYjI1eklEMGdiM0IwYVc5dWN6dGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxuSmxibVJsY2lncE8xeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJSEpsYm1SbGNpZ3BJSHRjY2x4dUlDQWdJQ0FnSUNCMllYSWdaV3hsYlNBOUlHUnZZM1Z0Wlc1MExtTnlaV0YwWlVWc1pXMWxiblFvSjJFbktUdGNjbHh1SUNBZ0lDQWdJQ0JjY2x4dUlDQWdJQ0FnSUNCcFppQW9kR2hwY3k1dmNIUnBiMjV6TG5SbGVIUXBJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdaV3hsYlM1MFpYaDBJRDBnZEdocGN5NXZjSFJwYjI1ekxuUmxlSFE3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJQ0FnSUNCcFppQW9kR2hwY3k1dmNIUnBiMjV6TG1oeVpXWXBJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdaV3hsYlM1b2NtVm1JRDBnZEdocGN5NXZjSFJwYjI1ekxtaHlaV1k3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbVZzWlcxbGJuUWdQU0JsYkdWdE8xeHlYRzVjY2x4dUlDQWdJQ0FnSUNCcFppQW9kR2hwY3k1dmNIUnBiMjV6TG1Oc1lYTnpaWE1wWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVlXUmtRMnhoYzNNb2RHaHBjeTV2Y0hScGIyNXpMbU5zWVhOelpYTXBPMXh5WEc0Z0lDQWdJQ0FnSUZ4eVhHNGdJQ0FnSUNBZ0lHbG1JQ2gwYUdsekxtOXdkR2x2Ym5NdVkyeHBZMnRJWVc1a2JHVnlLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVpXeGxiV1Z1ZEM1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0NkamJHbGpheWNzSUhSb2FYTXViM0IwYVc5dWN5NWpiR2xqYTBoaGJtUnNaWElwTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lIMWNjbHh1ZlNJc0ltbHRjRzl5ZENCN0lFSlRSR0YwWVZSaFlteGxRbUZ6WlNCOUlHWnliMjBnWENJdUwwSlRSR0YwWVZSaFlteGxRbUZ6WlZ3aU8xeHlYRzVwYlhCdmNuUWdleUJDVTBSaGRHRlVZV0pzWlZCaFoybHVZWFJwYjI1UGNIUnBiMjV6SUgwZ1puSnZiU0JjSWk0dUwyTnZiVzF2YmxSNWNHVnpMMk52YlcxdmJpMTBlWEJsYzF3aU8xeHlYRzVwYlhCdmNuUWdleUJDVTBSaGRHRlVZV0pzWlVoNWNHVnlUR2x1YXlCOUlHWnliMjBnWENJdUwwSlRSR0YwWVZSaFlteGxTSGx3WlhKTWFXNXJYQ0k3WEhKY2JseHlYRzVsZUhCdmNuUWdZMnhoYzNNZ1FsTkVZWFJoVkdGaWJHVlFZV2RwYm1GMGFXOXVJR1Y0ZEdWdVpITWdRbE5FWVhSaFZHRmliR1ZDWVhObElIdGNjbHh1SUNBZ0lHOXdkR2x2Ym5NNklFSlRSR0YwWVZSaFlteGxVR0ZuYVc1aGRHbHZiazl3ZEdsdmJuTTdYSEpjYmlBZ0lDQnNhWE4wU1dRNklITjBjbWx1Wnp0Y2NseHVJQ0FnSUdOdmJuUmhhVzVsY2tsa09pQnpkSEpwYm1jN1hISmNiaUFnSUNCd1lXZGxUR2x1YTNNNklFSlRSR0YwWVZSaFlteGxTSGx3WlhKTWFXNXJXMTBnUFNCYlhUdGNjbHh1WEhKY2JpQWdJQ0F2S2lwY2NseHVJQ0FnSUNBcUlFQndZWEpoYlNCN1FsTkVZWFJoVkdGaWJHVlFZV2RwYm1GMGFXOXVUM0IwYVc5dWMzMGdiM0IwYVc5dWMxeHlYRzRnSUNBZ0lDb3ZYSEpjYmlBZ0lDQmpiMjV6ZEhKMVkzUnZjaWh2Y0hScGIyNXpPaUJDVTBSaGRHRlVZV0pzWlZCaFoybHVZWFJwYjI1UGNIUnBiMjV6S1NCN1hISmNiaUFnSUNBZ0lDQWdjM1Z3WlhJb0tUdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtOXdkR2x2Ym5NZ1BTQnZjSFJwYjI1ek8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWJHbHpkRWxrSUQwZ1lIQm5YMnhwYzNSZkpIdDBhR2x6TG05d2RHbHZibk11WkdGMFlWTnZkWEpqWlU1aGJXVjlZRHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbU52Ym5SaGFXNWxja2xrSUQwZ1lIQm5YMk52Ym5SaGFXNWxjbDhrZTNSb2FYTXViM0IwYVc5dWN5NWtZWFJoVTI5MWNtTmxUbUZ0WlgxZ08xeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJSEpsYm1SbGNpZ3BJSHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdkbUZ5SUdOMWNuSmxiblJRWVdkbElEMGdkR2hwY3k1dmNIUnBiMjV6TG0xbGRHRkVZWFJoTG5CaFoyVkpibVJsZUNBL1B5QXhPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQnBaaUFvZEdocGN5NWxiR1Z0Wlc1MEtWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbVZzWlcxbGJuUXVjbVZ0YjNabEtDazdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11Y0dGblpVeHBibXR6SUQwZ1cxMDdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11Wld4bGJXVnVkQ0E5SUdSdlkzVnRaVzUwTG1OeVpXRjBaVVZzWlcxbGJuUW9KMlJwZGljcE8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdVpXeGxiV1Z1ZEM1cFpDQTlJSFJvYVhNdVkyOXVkR0ZwYm1WeVNXUTdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NWhaR1JEYkdGemN5Z25Zbk10Y0dGbmFXNWhkR2x2YmljcE8xeHlYRzVjY2x4dUlDQWdJQ0FnSUNCMllYSWdjR0ZuWlhJZ1BTQmtiMk4xYldWdWRDNWpjbVZoZEdWRmJHVnRaVzUwS0NkdVlYWW5LVHRjY2x4dUlDQWdJQ0FnSUNCd1lXZGxjaTV6WlhSQmRIUnlhV0oxZEdVb0oyRnlhV0V0YkdGaVpXd25MQ0JjSWxCaFoyVWdibUYyYVdkaGRHbHZibHdpS1R0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NWxiR1Z0Wlc1MExtRndjR1Z1WkVOb2FXeGtLSEJoWjJWeUtUdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJSEJoWjJWTWFYTjBJRDBnWkc5amRXMWxiblF1WTNKbFlYUmxSV3hsYldWdWRDZ25kV3duS1R0Y2NseHVJQ0FnSUNBZ0lDQndZV2RsVEdsemRDNXBaQ0E5SUhSb2FYTXViR2x6ZEVsa08xeHlYRzRnSUNBZ0lDQWdJSEJoWjJWTWFYTjBMbU5zWVhOelRHbHpkQzVoWkdRb0ozQmhaMmx1WVhScGIyNG5MQ0FuYW5WemRHbG1lUzFqYjI1MFpXNTBMV1Z1WkNjcE8xeHlYRzVjY2x4dUlDQWdJQ0FnSUNBdkx5QlVUMFJQT2lCU1pXMXZkbVVnZEdobElHeHBiV2wwSUc5bUlEVWdhVzRnZEdobElHeHZiM0FnWW1Wc2IzY2dMVDRnYVc1a1pYZ2dQRDBnTlR0Y2NseHVJQ0FnSUNBZ0lDQm1iM0lnS0d4bGRDQnBibVJsZUNBOUlERTdJR2x1WkdWNElEdzlJSFJvYVhNdWIzQjBhVzl1Y3k1dFpYUmhSR0YwWVM1MGIzUmhiRkJoWjJWeklDWW1JR2x1WkdWNElEdzlJRFU3SUdsdVpHVjRLeXNwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlHeHBJRDBnWkc5amRXMWxiblF1WTNKbFlYUmxSV3hsYldWdWRDZ25iR2tuS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYkdrdVkyeGhjM05NYVhOMExtRmtaQ2duY0dGblpTMXBkR1Z0SnlrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaGpkWEp5Wlc1MFVHRm5aU0E5UFQwZ2FXNWtaWGdwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeHBMbU5zWVhOelRHbHpkQzVoWkdRb0oyRmpkR2wyWlNjcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNibHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnYkdsdWF5QTlJRzVsZHlCQ1UwUmhkR0ZVWVdKc1pVaDVjR1Z5VEdsdWF5aDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrWVhSaFUyOTFjbU5sVG1GdFpUb2dkR2hwY3k1dmNIUnBiMjV6TG1SaGRHRlRiM1Z5WTJWT1lXMWxMRnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJ4aGMzTmxjem9nSjNCaFoyVXRiR2x1YXljc1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm9jbVZtT2lBbkl5Y3NYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwWlhoME9pQmdKSHRwYm1SbGVIMWdMRnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJ4cFkydElZVzVrYkdWeU9pQW9aU2tnUFQ0Z2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdVdWNISmxkbVZ1ZEVSbFptRjFiSFFvS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1pTNTBZWEpuWlhRZ2FXNXpkR0Z1WTJWdlppQklWRTFNUld4bGJXVnVkQ2tnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1dmNIUnBiMjV6TG01bGVIUlFZV2RsUTJGc2JHSmhZMnNwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCcGJtUmxlQ0E5SUdVdWRHRnlaMlYwTG1kbGRFRjBkSEpwWW5WMFpTZ25aR0YwWVMxd0xXbHVaR1Y0SnlrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtOXdkR2x2Ym5NdWJtVjRkRkJoWjJWRFlXeHNZbUZqYXlod1lYSnpaVWx1ZENocGJtUmxlQ2twTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1bWIyTjFjMUJoWjJWSmJtUmxlQ2hwYm1SbGVDazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOUtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2JHbHVheTV3Y205d0tDZGtZWFJoTFhBdGFXNWtaWGduTENCZ0pIdHBibVJsZUgxZ0tUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTV3WVdkbFRHbHVhM011Y0hWemFDaHNhVzVyS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYkdrdVlYQndaVzVrUTJocGJHUW9iR2x1YXk1bGJHVnRaVzUwS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnY0dGblpVeHBjM1F1WVhCd1pXNWtRMmhwYkdRb2JHa3BPMXh5WEc0Z0lDQWdJQ0FnSUgwN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUhCaFoyVnlMbUZ3Y0dWdVpFTm9hV3hrS0hCaFoyVk1hWE4wS1R0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQm1iMk4xYzFCaFoyVkpibVJsZUNocGJtUmxlRG9nWVc1NUtTQjdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NXdZV2RsVEdsdWEzTXVabTl5UldGamFDZ29lQ2tnUFQ0Z2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMllYSWdiR2tnUFNCNExtVnNaVzFsYm5RdVkyeHZjMlZ6ZENnbkxuQmhaMlV0YVhSbGJTY3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvSVd4cEtTQnlaWFIxY200N1hISmNibHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvZUM1blpYUlFjbTl3S0Nka1lYUmhMWEF0YVc1a1pYZ25LU0E5UFQwZ2FXNWtaWGdwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hzYVM1amJHRnpjMHhwYzNRdVkyOXVkR0ZwYm5Nb0oyRmpkR2wyWlNjcElDRTlQU0IwY25WbEtWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4cExtTnNZWE56VEdsemRDNWhaR1FvSjJGamRHbDJaU2NwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR1ZzYzJVZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR2t1WTJ4aGMzTk1hWE4wTG5KbGJXOTJaU2duWVdOMGFYWmxKeWs3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCOUtUdGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0JqYkdWaGNpZ3BJSHRjY2x4dUlDQWdJQ0FnSUNCMllYSWdiR2x6ZENBOUlIUm9hWE11Wld4bGJXVnVkQzV4ZFdWeWVWTmxiR1ZqZEc5eUtDY2pKeUFySUhSb2FYTXViR2x6ZEVsa0tUdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxuQmhaMlZNYVc1cmN5QTlJRnRkTzF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0F2THlCeVpXMXZkbVVnWVd4c0lIUm9aU0JqYUdsc1pISmxiaUJ2WmlCMGFHVWdiR2x6ZEZ4eVhHNGdJQ0FnSUNBZ0lDOHZJSEpsWmpvZ2FIUjBjSE02THk5emRHRmphMjkyWlhKbWJHOTNMbU52YlM5eGRXVnpkR2x2Ym5Ndk16azFOVEl5T1M5eVpXMXZkbVV0WVd4c0xXTm9hV3hrTFdWc1pXMWxiblJ6TFc5bUxXRXRaRzl0TFc1dlpHVXRhVzR0YW1GMllYTmpjbWx3ZEZ4eVhHNGdJQ0FnSUNBZ0lHeHBjM1F1Y21Wd2JHRmpaVU5vYVd4a2NtVnVLQ2s3WEhKY2JpQWdJQ0I5WEhKY2JuMWNjbHh1SWl3aWFXMXdiM0owSUhzZ1FsTkVZWFJoVkdGaWJHVkNZWE5sSUgwZ1puSnZiU0JjSWk0dlFsTkVZWFJoVkdGaWJHVkNZWE5sWENJN1hISmNibWx0Y0c5eWRDQjdJRUpUUkdGMFlWUmhZbXhsVUdGbmFXNW5UV1YwWVVSaGRHRXNJRWxDVTBSaGRHRlVZV0pzWlVoMGRIQkRiR2xsYm5Rc0lFbHVabWx1YVhSbFUyTnliMnhzVDNCMGFXOXVjeUI5SUdaeWIyMGdYQ0l1TGk5amIyMXRiMjVVZVhCbGN5OWpiMjF0YjI0dGRIbHdaWE5jSWp0Y2NseHVYSEpjYm1WNGNHOXlkQ0JqYkdGemN5QkNVMFJoZEdGVVlXSnNaVWx1Wm1sdWFYUmxVMk55YjJ4c0lHVjRkR1Z1WkhNZ1FsTkVZWFJoVkdGaWJHVkNZWE5sSUh0Y2NseHVYSEpjYmlBZ0lDQXZLaXBjY2x4dUlDQWdJQ0FxSUVCMGVYQmxJSHRDVTBSaGRHRlVZV0pzWlZCaFoybHVaMDFsZEdGRVlYUmhmU0J0WlhSaFpHRjBZVnh5WEc0Z0lDQWdJQ292WEhKY2JpQWdJQ0JwYm1sMFRXVjBZVVJoZEdFNklFSlRSR0YwWVZSaFlteGxVR0ZuYVc1blRXVjBZVVJoZEdFN1hISmNibHh5WEc0Z0lDQWdMeW9xWEhKY2JpQWdJQ0FnS2lCQWRIbHdaU0I3Ym5WdFltVnlmVnh5WEc0Z0lDQWdJQ292WEhKY2JpQWdJQ0JqZFhKeVpXNTBVR0ZuWlRvZ2JuVnRZbVZ5TzF4eVhHNWNjbHh1SUNBZ0lHbHVhWFJFWVhSaE9pQnZZbXBsWTNSYlhUdGNjbHh1SUNBZ0lHZHlhV1JGYkdWdFpXNTBPaUJGYkdWdFpXNTBPMXh5WEc0Z0lDQWdhSFIwY0VOc2FXVnVkRG9nU1VKVFJHRjBZVlJoWW14bFNIUjBjRU5zYVdWdWREdGNjbHh1SUNBZ0lITmZZWEpsWVRvZ2MzUnlhVzVuTzF4eVhHNGdJQ0FnYjJKelpYSjJaWEk2SUVsdWRHVnljMlZqZEdsdmJrOWljMlZ5ZG1WeU8xeHlYRzRnSUNBZ2RHRnlaMlYwT2lCSVZFMU1SV3hsYldWdWREdGNjbHh1SUNBZ0lHNWxlSFJRWVdkbFEyRnNiR0poWTJzNklDaHdZV2RsT2lCdWRXMWlaWElwSUQwK0lIWnZhV1E3WEhKY2JseHlYRzRnSUNBZ1kyOXVjM1J5ZFdOMGIzSW9iM0IwYVc5dWN6b2dTVzVtYVc1cGRHVlRZM0p2Ykd4UGNIUnBiMjV6S1NCN1hISmNiaUFnSUNBZ0lDQWdjM1Z3WlhJb0tUdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtZHlhV1JGYkdWdFpXNTBJRDBnYjNCMGFXOXVjeTVuY21sa1JXeGxiV1Z1ZER0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG1oMGRIQkRiR2xsYm5RZ1BTQnZjSFJwYjI1ekxtaDBkSEJEYkdsbGJuUTdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11YzE5aGNtVmhJRDBnYm5Wc2JEdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtOWljMlZ5ZG1WeUlEMGdiblZzYkR0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG5SaGNtZGxkQ0E5SUc1MWJHdzdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDOHZJSFJvYVhNdWRHOTBZV3hRWVdkbGN5QTlJRzUxYkd3N1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1amRYSnlaVzUwVUdGblpTQTlJREU3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTVwYm1sMFJHRjBZU0E5SUc1MWJHdzdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NXBibWwwVFdWMFlVUmhkR0VnUFNCdWRXeHNPMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVibVY0ZEZCaFoyVkRZV3hzWW1GamF5QTlJRzUxYkd3N1hISmNibHh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUM4cUtseHlYRzRnSUNBZ0lDb2dRSEJoY21GdElIdEpiblJsY25ObFkzUnBiMjVQWW5ObGNuWmxja1Z1ZEhKNVcxMTlJR1Z1ZEhKcFpYTmNjbHh1SUNBZ0lDQXFJRUJ3WVhKaGJTQjdTVzUwWlhKelpXTjBhVzl1VDJKelpYSjJaWEo5SUhObGJtUmxjbHh5WEc0Z0lDQWdJQ292WEhKY2JpQWdJQ0J2WW5ObGNuWmxja05DS0dWdWRISnBaWE02SUVsdWRHVnljMlZqZEdsdmJrOWljMlZ5ZG1WeVJXNTBjbmxiWFN3Z2MyVnVaR1Z5T2lCSmJuUmxjbk5sWTNScGIyNVBZbk5sY25abGNpa2dlMXh5WEc0Z0lDQWdJQ0FnSUhaaGNpQmxiblJ5ZVNBOUlHVnVkSEpwWlhOYk1GMDdYSEpjYmlBZ0lDQWdJQ0FnTHk4Z1kyOXVjMjlzWlM1c2IyY29aVzUwY25rcE8xeHlYRzRnSUNBZ0lDQWdJR2xtSUNobGJuUnllUzVwYzBsdWRHVnljMlZqZEdsdVp5QTlQVDBnZEhKMVpTa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQXZMeUJqYjI1emIyeGxMbXh2WnlnblQySnpaWEoyWlhJZ2FYTWdhVzUyYjJ0bFpDNGdSVzUwY25rNklDY3NJR1Z1ZEhKNUtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0x5OGdZMjl1YzI5c1pTNXNiMmNvSjJsdWFYUmtZWFJoT2lBbkxDQjBhR2x6TG1sdWFYUkVZWFJoS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnTHk4Z1kyOXVjMjlzWlM1c2IyY29KMjFsZEdGa1lYUmhPaUFuTENCMGFHbHpMbWx1YVhSTlpYUmhSR0YwWVNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUM4dlhISmNiaUFnSUNBZ0lDQWdJQ0FnSUM4dklHWmxkR05vSUc1bGVIUWdjR0ZuWlNCcFppQjNaU0J6ZEdsc2JDQm9ZWFpsSUcxdmNtVWdjR0ZuWlhNZ2RHOGdjbVZoWkZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0F2TDF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTVqZFhKeVpXNTBVR0ZuWlNBOElIUm9hWE11YVc1cGRFMWxkR0ZFWVhSaExuUnZkR0ZzVUdGblpYTXBJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1Ykc5bktDZEpibVpwYm1sMFpTQnpZM0p2Ykd3NklHWmxkR05vYVc1bklHNWxlSFFnY0dGblpTTTZJQ2NzSUhSb2FYTXVZM1Z5Y21WdWRGQmhaMlVnS3lBeEtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVkzVnljbVZ1ZEZCaFoyVXJLenRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVibVY0ZEZCaFoyVkRZV3hzWW1GamF5aDBhR2x6TG1OMWNuSmxiblJRWVdkbEtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNCdlluTmxjblpsS0dWc09pQklWRTFNUld4bGJXVnVkQ2tnZTF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11ZEdGeVoyVjBJRDBnWld3N1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1dlluTmxjblpsY2k1dlluTmxjblpsS0dWc0tUdGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0IxYm05aWMyVnlkbVVvS1NCN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1dlluTmxjblpsY2k1MWJtOWljMlZ5ZG1Vb2RHaHBjeTUwWVhKblpYUXBPMXh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUdWdVlXSnNaU2dwSUh0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG5OZllYSmxZU0E5SUNkelkzSnZiR3hmWVhKbFlWOG5JQ3NnZEdocGN5NW5jbWxrUld4bGJXVnVkQzVwWkR0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlITmpjbTlzYkVGeVpXRWdQU0JrYjJOMWJXVnVkQzVqY21WaGRHVkZiR1Z0Wlc1MEtDZGthWFluS1R0Y2NseHVJQ0FnSUNBZ0lDQnpZM0p2Ykd4QmNtVmhMbWxrSUQwZ2RHaHBjeTV6WDJGeVpXRTdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lITmpjbTlzYkVGeVpXRXVZMnhoYzNOTWFYTjBMbUZrWkNnbmNtOTNKeXdnSjJKekxYTmpjbTlzYkNjcE8xeHlYRzVjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbmR5WVhBb2MyTnliMnhzUVhKbFlTd2dkR2hwY3k1bmNtbGtSV3hsYldWdWRDazdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJ5YjI5MElEMGdaRzlqZFcxbGJuUXVaMlYwUld4bGJXVnVkRUo1U1dRb2RHaHBjeTV6WDJGeVpXRXBPMXh5WEc0Z0lDQWdJQ0FnSUd4bGRDQnZjSFJwYjI1eklEMGdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnliMjkwT2lCeWIyOTBMRnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnliMjkwVFdGeVoybHVPaUFuTUhCNEp5eGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHlaWE5vYjJ4a09pQXdMak1zWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJ5WVdOclZtbHphV0pwYkdsMGVUb2dabUZzYzJWY2NseHVJQ0FnSUNBZ0lDQjlPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG05aWMyVnlkbVZ5SUQwZ2JtVjNJRWx1ZEdWeWMyVmpkR2x2Yms5aWMyVnlkbVZ5S0NobGJuUnlhV1Z6TENCelpXNWtaWElwSUQwK0lIUm9hWE11YjJKelpYSjJaWEpEUWlobGJuUnlhV1Z6TENCelpXNWtaWElwTENCdmNIUnBiMjV6S1R0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlISnZkM01nUFNCMGFHbHpMbWR5YVdSRmJHVnRaVzUwTG5GMVpYSjVVMlZzWldOMGIzSkJiR3dvSjNSeUp5azdYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlHeGhjM1JTYjNjZ1BTQnliM2R6VzNKdmQzTXViR1Z1WjNSb0lDMGdNVjA3WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJSFJoY21kbGRDQTlJR3hoYzNSU2IzYzdYSEpjYmlBZ0lDQWdJQ0FnTHk4Z1kyOXVjMjlzWlM1c2IyY29kR0Z5WjJWMExDQnliMjkwS1R0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG05aWMyVnlkbVVvZEdGeVoyVjBLVHRjY2x4dUlDQWdJSDFjY2x4dWZWeHlYRzRpTENKcGJYQnZjblFnZXlCQ1UwUmhkR0ZVWVdKc1pVSmhjMlVnZlNCbWNtOXRJRndpTGk5Q1UwUmhkR0ZVWVdKc1pVSmhjMlZjSWp0Y2NseHVYSEpjYm1WNGNHOXlkQ0JqYkdGemN5QkNVMFJoZEdGVVlXSnNaVTFoY210bGNpQmxlSFJsYm1SeklFSlRSR0YwWVZSaFlteGxRbUZ6WlNCN1hISmNiaUFnSUNCamIyNXpkSEoxWTNSdmNpZ3BJSHRjY2x4dUlDQWdJQ0FnSUNCemRYQmxjaWdwTzF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11Y21WdVpHVnlLQ2s3WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ2NtVnVaR1Z5S0NrZ2UxeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdVpXeGxiV1Z1ZENBOUlHUnZZM1Z0Wlc1MExtTnlaV0YwWlVWc1pXMWxiblFvSjJrbktUdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtVnNaVzFsYm5RdVkyeGhjM05NYVhOMExtRmtaQ2duWW1rbkxDQW5ZbWt0WTJGeVpYUXRjbWxuYUhRbkxDQW5jbTkzTFcxaGNtdGxjaWNwWEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ1kyeHZibVVvS1NCN1hISmNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlITjFjR1Z5TG1Oc2IyNWxLQ2s3WEhKY2JpQWdJQ0I5WEhKY2JuMWNjbHh1SWl3aWFXMXdiM0owSUhzZ1FsTkVZWFJoVkdGaWJHVkNZWE5sSUgwZ1puSnZiU0JjSWk0dlFsTkVZWFJoVkdGaWJHVkNZWE5sWENJN1hISmNibWx0Y0c5eWRDQjdJRUpUUkdGMFlWUmhZbXhsUW5WMGRHOXVJSDBnWm5KdmJTQmNJaTR2UWxORVlYUmhWR0ZpYkdWQ2RYUjBiMjVjSWp0Y2NseHVYSEpjYm1WNGNHOXlkQ0JqYkdGemN5QkNVMFJoZEdGVVlXSnNaVUZqZEdsdmJuTWdaWGgwWlc1a2N5QkNVMFJoZEdGVVlXSnNaVUpoYzJVZ2UxeHlYRzVjY2x4dUlDQWdJR052Ym5OMGNuVmpkRzl5S0NrZ2UxeHlYRzRnSUNBZ0lDQWdJSE4xY0dWeUtDazdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NXlaVzVrWlhJb0tUdGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0J5Wlc1a1pYSW9LU0I3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTVsYkdWdFpXNTBJRDBnWkc5amRXMWxiblF1WTNKbFlYUmxSV3hsYldWdWRDZ25aR2wySnlrN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1aFpHUkRiR0Z6Y3lnbmNtOTNJR0ZqZEdsdmJuTXRZMjl1ZEdGcGJtVnlKeWs3WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ1lXUmtRV04wYVc5dUtHbGtPaUJ6ZEhKcGJtY3NJSFI1Y0dVNklITjBjbWx1Wnl3Z2FXTnZiam9nYzNSeWFXNW5MQ0JqWVd4c1ltRmphem9nS0dVNklFMXZkWE5sUlhabGJuUXBJRDArSUdGdWVTd2dibUZ0WlRvZ2MzUnlhVzVuSUQwZ0p5Y3BJSHRjY2x4dUlDQWdJQ0FnSUNCMllYSWdZblJ1SUQwZ2RHaHBjeTVuWlhSQ2RYUjBiMjRvYVdRc0lIUjVjR1VzSUdsamIyNHNJRzVoYldVcE8xeHlYRzRnSUNBZ0lDQWdJR0owYmk1aFpHUkRiR2xqYTBoaGJtUnNaWElvWTJGc2JHSmhZMnNwTzF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11WVhCd1pXNWtLR0owYml3Z2RISjFaU2s3WEhKY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTTdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnTHlvcVhISmNiaUFnSUNBZ0tpQkFjR0Z5WVcwZ2V5aGhjbWN3T2lCdlltcGxZM1FwSUQwK0lHRnVlWDBnVzJOaGJHeGlZV05yWFZ4eVhHNGdJQ0FnSUNvdlhISmNiaUFnSUNCaFpHUkVaV3hsZEdWQlkzUnBiMjRvWTJGc2JHSmhZMnM2SUNoaGNtY3dPaUJOYjNWelpVVjJaVzUwS1NBOVBpQmhibmtwSUh0Y2NseHVJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVoWkdSQlkzUnBiMjRvSjJKMGJrUmxiR1YwWlZKdmR5Y3NJQ2RrWVc1blpYSW5MQ0FuZEhKaGMyZ25MQ0JqWVd4c1ltRmpheXdnSjBSbGJHVjBaU2NwTzF4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lDOHFLbHh5WEc0Z0lDQWdJQ29nUUhCaGNtRnRJSHNvWVhKbk1Eb2diMkpxWldOMEtTQTlQaUJoYm5sOUlGdGpZV3hzWW1GamExMWNjbHh1SUNBZ0lDQXFMMXh5WEc0Z0lDQWdZV1JrVG1WM1VtVmpiM0prUVdOMGFXOXVLR05oYkd4aVlXTnJPaUFvWVhKbk1Eb2dUVzkxYzJWRmRtVnVkQ2tnUFQ0Z1lXNTVLU0I3WEhKY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZV1JrUVdOMGFXOXVLQ2RpZEc1QlpHUlNiM2NuTENBbmNISnBiV0Z5ZVNjc0lDZHdiSFZ6TFdOcGNtTnNaU2NzSUdOaGJHeGlZV05yTENBblFXUmtKeWs3WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ1lXUmtSM0pwWkZObGRIUnBibWR6UVdOMGFXOXVLQ2tnZTF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJpZEc0Z1BTQjBhR2x6TG1kbGRFSjFkSFJ2YmlnblluUnVVMlYwZEdsdVozTW5MQ0FuY0hKcGJXRnllU2NzSUNkblpXRnlKeXdnSjFObGRIUnBibWR6SnlrN1hISmNiaUFnSUNBZ0lDQWdZblJ1TG5CeWIzQW9KMlJoZEdFdFluTXRkRzluWjJ4bEp5d2dKMjF2WkdGc0p5azdYSEpjYmlBZ0lDQWdJQ0FnWW5SdUxuQnliM0FvSjJSaGRHRXRZbk10ZEdGeVoyVjBKeXdnWUNOemRHRjBhV05DWVdOclpISnZjRjhrZTNSb2FYTXVaR0YwWVZOdmRYSmpaVTVoYldWOVlDazdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NWhjSEJsYm1Rb1luUnVMQ0IwY25WbEtUdGNjbHh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3p0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQm5aWFJDZFhSMGIyNG9hV1E2SUhOMGNtbHVaeXdnZEhsd1pUb2djM1J5YVc1bkxDQnBZMjl1T2lCemRISnBibWNzSUc1aGJXVTZJSE4wY21sdVp5a2dlMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQjJZWElnWW5SdUlEMGdibVYzSUVKVFJHRjBZVlJoWW14bFFuVjBkRzl1S0h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnUkdGMFlWTnZkWEpqWlU1aGJXVTZJSFJvYVhNdVpHRjBZVk52ZFhKalpVNWhiV1VzWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJRU5zWVhOelpYTTZJR0JpZEc0Z1luUnVMWE50SUdKMGJpMXZkWFJzYVc1bExTUjdkSGx3WlgwZ1ozSnBaQzEwYjI5c1ltRnlMV0ZqZEdsdmJtQXNYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lFVnNaVzFsYm5SSlpEb2dZQ1I3YVdSOVh5UjdkR2hwY3k1a1lYUmhVMjkxY21ObFRtRnRaWDFnTEZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JKWTI5dU9pQnBZMjl1TEZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JVYVhSc1pUb2dibUZ0WlZ4eVhHNGdJQ0FnSUNBZ0lIMHBPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQnlaWFIxY200Z1luUnVPMXh5WEc0Z0lDQWdmVnh5WEc1OVhISmNiaUlzSW1sdGNHOXlkQ0I3SUVKVFJHRjBZVlJoWW14bFFtRnpaU0I5SUdaeWIyMGdYQ0l1TDBKVFJHRjBZVlJoWW14bFFtRnpaVndpTzF4eVhHNXBiWEJ2Y25RZ2V5QkNVMFJoZEdGVVlXSnNaVWx1Y0hWMElIMGdabkp2YlNCY0lpNHZRbE5FWVhSaFZHRmliR1ZKYm5CMWRGd2lPMXh5WEc1cGJYQnZjblFnZXlCQ1UwUmhkR0ZVWVdKc1pVTmxiR3dnZlNCbWNtOXRJRndpTGk5Q1UwUmhkR0ZVWVdKc1pVTmxiR3hjSWp0Y2NseHVhVzF3YjNKMElIc2dRbE5FWVhSaFZHRmliR1ZEYjJ4RVpXWnBibWwwYVc5dUxDQkNVMUp2ZDA5d2RHbHZibk1nZlNCbWNtOXRJRndpTGk0dlkyOXRiVzl1Vkhsd1pYTXZZMjl0Ylc5dUxYUjVjR1Z6WENJN1hISmNibHh5WEc1bGVIQnZjblFnWTJ4aGMzTWdRbE5FWVhSaFZHRmliR1ZTYjNjZ1pYaDBaVzVrY3lCQ1UwUmhkR0ZVWVdKc1pVSmhjMlVnZTF4eVhHNWNjbHh1SUNBZ0lDOHFLbHh5WEc0Z0lDQWdJQ29nUUhSNWNHVWdRbE5FWVhSaFZHRmliR1ZEWld4c1cxMWNjbHh1SUNBZ0lDQXFMMXh5WEc0Z0lDQWdZMlZzYkhNNklFSlRSR0YwWVZSaFlteGxRMlZzYkZ0ZElEMGdXMTA3WEhKY2JpQWdJQ0J2Y0hScGIyNXpPaUJDVTFKdmQwOXdkR2x2Ym5NN1hISmNibHh5WEc0Z0lDQWdZMjl1YzNSeWRXTjBiM0lvYjNCMGFXOXVjem9nUWxOU2IzZFBjSFJwYjI1ektTQjdYSEpjYmlBZ0lDQWdJQ0FnYzNWd1pYSW9LVHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbTl3ZEdsdmJuTWdQU0J2Y0hScGIyNXpPMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVjbVZ1WkdWeUtDazdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnY21WdVpHVnlLQ2tnZTF4eVhHNGdJQ0FnSUNBZ0lHbG1JQ2doZEdocGN5NWxiR1Z0Wlc1MEtWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbVZzWlcxbGJuUWdQU0JrYjJOMWJXVnVkQzVqY21WaGRHVkZiR1Z0Wlc1MEtDZDBjaWNwTzF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTV2Y0hScGIyNXpMbWR5YVdSSVpXRmtaWElnUFQwOUlIUnlkV1VwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWhaR1JEYkdGemN5Z25aSEpoWjJkaFlteGxKeWxjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUM1aFpHUkRiR0Z6Y3lnblozSnBaQzFqYjJ4ekp5bGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ1pXeHpaU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVlXUmtRMnhoYzNNb0oyZHlhV1F0Y205M0p5azdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTV2Y0hScGIyNXpMbWx6VkdWdGNHeGhkR1ZTYjNjZ1BUMDlJSFJ5ZFdVcElIdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVkzTnpJRDBnZXlBblpHbHpjR3hoZVNjNklDZHViMjVsSnlCOU8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMblpwYzJsaWJHVWdQU0JtWVd4elpUdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzVjY2x4dUlDQWdJR2RsZENCeWIzZERZWFJsWjI5eWVTZ3BJSHRjY2x4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NW5aWFJRY205d0tDZGtZWFJoTFhKdmQyTmhkR1ZuYjNKNUp5azdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnYzJWMElISnZkME5oZEdWbmIzSjVLSFlwSUh0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG5CeWIzQW9KMlJoZEdFdGNtOTNZMkYwWldkdmNua25MQ0IyS1R0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQXZLaXBjY2x4dUlDQWdJQ3BjY2x4dUlDQWdJQ29nUUhCaGNtRnRJSHRDVTBSaGRHRlVZV0pzWlVObGJHeDlJR05sYkd4Y2NseHVJQ0FnSUNvdlhISmNiaUFnSUNCaFpHUkRaV3hzS0dObGJHdzZJRUpUUkdGMFlWUmhZbXhsUTJWc2JDa2dlMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVaV3hsYldWdWRDNWhjSEJsYm1Rb1kyVnNiQzVsYkdWdFpXNTBLVHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbU5sYkd4ekxuQjFjMmdvWTJWc2JDazdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnTHlvcVhISmNiaUFnSUNBZ0tpQkFjR0Z5WVcwZ2UwSlRSR0YwWVZSaFlteGxRMlZzYkZ0ZGZTQmpaV3hzYzF4eVhHNGdJQ0FnSUNvdlhISmNiaUFnSUNCaFpHUkRaV3hzY3loalpXeHNjem9nWVc1NVcxMHBJSHRjY2x4dUlDQWdJQ0FnSUNCalpXeHNjeTVtYjNKRllXTm9LQ2hqWld4c0tTQTlQaUIwYUdsekxtRmtaRU5sYkd3b1kyVnNiQ2twTzF4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lHWnZZM1Z6VW05M0tDa2dlMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVjbVZ0YjNabFEyeGhjM01vSjNSaFlteGxMV0ZqZEdsMlpTY3BYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDNWhaR1JEYkdGemN5Z25kR0ZpYkdVdFlXTjBhWFpsSnlrN1hISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdaMlYwU1c1d2RYUnpLQ2s2SUVKVFJHRjBZVlJoWW14bFNXNXdkWFJiWFNCN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUdsbUlDaDBhR2x6TG05d2RHbHZibk11WjNKcFpFaGxZV1JsY2lBOVBUMGdkSEoxWlNrZ2NtVjBkWEp1SUZ0ZE8xeHlYRzVjY2x4dUlDQWdJQ0FnSUNCMllYSWdhVzV3ZFhSek9pQkNVMFJoZEdGVVlXSnNaVWx1Y0hWMFcxMGdQU0JiWFR0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NWpaV3hzY3k1bWIzSkZZV05vS0NoalpXeHNMQ0JwWkhncElEMCtJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUdOdmJuUnliMnh6SUQwZ1kyVnNiQzVuWlhSSmJuQjFkRU52Ym5SeWIyeHpLQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2x1Y0hWMGN5QTlJR2x1Y0hWMGN5NWpiMjVqWVhRb1kyOXVkSEp2YkhNcE8xeHlYRzRnSUNBZ0lDQWdJSDBwTzF4eVhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCcGJuQjFkSE03WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ1kzSmxZWFJsU1c1d2RYUkdiM0lvYlc5a1pXdzZJRUpUUkdGMFlWUmhZbXhsUTI5c1JHVm1hVzVwZEdsdmJpd2djbVZoWkc5dWJIazZJR0p2YjJ4bFlXNHBPaUJDVTBSaGRHRlVZV0pzWlVObGJHd2dlMXh5WEc0Z0lDQWdJQ0FnSUM4dklGUlBSRTg2SUZSb1pTQmhjbWNnY21WaFpHOXViSGtnYVhNZ2JtOTBJRzVsWldSbFpDRWhJVnh5WEc0Z0lDQWdJQ0FnSUcxdlpHVnNMa1JoZEdGVGIzVnlZMlZPWVcxbElEMGdkR2hwY3k1dmNIUnBiMjV6TG1SaGRHRlRiM1Z5WTJWT1lXMWxPMXh5WEc0Z0lDQWdJQ0FnSUcxdlpHVnNMa2x6VW1WaFpFOXViSGtnUFNCeVpXRmtiMjVzZVR0Y2NseHVJQ0FnSUNBZ0lDQnRiMlJsYkM1RGIyNTBZV2x1WlhKSlpDQTlJSFJvYVhNdWIzQjBhVzl1Y3k1amIyNTBZV2x1WlhKSlpEdGNjbHh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdibVYzSUVKVFJHRjBZVlJoWW14bFEyVnNiQ2h0YjJSbGJDd2dabUZzYzJVcE8xeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJQzhxS2x4eVhHNGdJQ0FnSUNvZ1FIQmhjbUZ0SUh0Q1UwUmhkR0ZVWVdKc1pVTnZiRVJsWm1sdWFYUnBiMjU5SUcxdlpHVnNYSEpjYmlBZ0lDQWdLaTljY2x4dUlDQWdJR055WldGMFpVaGxZV1JsY2tadmNpaHRiMlJsYkRvZ1FsTkVZWFJoVkdGaWJHVkRiMnhFWldacGJtbDBhVzl1S1NCN1hISmNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUJDVTBSaGRHRlVZV0pzWlVObGJHd29iVzlrWld3c0lIUnlkV1VwTzF4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lHZGxkRlpwYzJsaWJHVkpibkIxZEhNb0tTQjdYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlHbHVjSFYwY3lBOUlIUm9hWE11WjJWMFNXNXdkWFJ6S0NrN1hISmNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlHbHVjSFYwY3k1bWFXeDBaWElvS0dsdWNIVjBLU0E5UGlCcGJuQjFkQzUyYVhOcFlteGxJRDA5UFNCMGNuVmxLVHRjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNBdktpcGNjbHh1SUNBZ0lDQXFJRlJvYVhNZ1puVnVZM1JwYjI0Z2NtVjBkWEp1Y3lCMGFHVWdjbTkzSUdOdmJuUmhhVzVwYm1jZ2RHaGxJR0ZqZEhWaGJDQnBibkIxZEhOY2NseHVJQ0FnSUNBcUlFQnlaWFIxY201eklFRWdjbTkzSUhKbFkyOXlaQ0JqYjI1MFlXbHVhVzVuSUdGamRIVmhiQ0JwYm5CMWRITmNjbHh1SUNBZ0lDQXFMMXh5WEc0Z0lDQWdaMlYwVW05M1JHRjBZVVY0ZENncE9pQmhibmtnZTF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJ5YjNkSmJuQjFkSE1nUFNCMGFHbHpMbWRsZEVsdWNIVjBjeWdwTzF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJ5WldOdmNtUWdQU0I3ZlR0Y2NseHVJQ0FnSUNBZ0lDQnliM2RKYm5CMWRITXVabTl5UldGamFDZ29jbTkzU1c1d2RYUXNJR2twSUQwK0lIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJR05sYkd4UWNtOXdUbUZ0WlNBOUlISnZkMGx1Y0hWMExtOXdkR2x2Ym5NdVRXOWtaV3hPWVcxbE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpXTnZjbVJiWTJWc2JGQnliM0JPWVcxbFhTQTlJSEp2ZDBsdWNIVjBPMXh5WEc0Z0lDQWdJQ0FnSUgwcE8xeHlYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQnlaV052Y21RN1hISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdaMlYwSUhKVWVYQmxLQ2tnZTF4eVhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbTl3ZEdsdmJuTXVaM0pwWkVobFlXUmxjaUE5UFQwZ2RISjFaU0EvSUNkb1pXRmtKeUE2SUNka1lYUmhKenRjY2x4dVhISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdaMlYwSUhKdmQwbHVaR1Y0S0NrZ2UxeHlYRzRnSUNBZ0lDQWdJSFpoY2lCeWIzZEpibVJsZUNBOUlIUm9hWE11WjJWMFVISnZjQ2gwYUdsekxuSlVlWEJsSUNzZ0p5MXliM2RwYm1SbGVDY3BPMXh5WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJ3WVhKelpVbHVkQ2h5YjNkSmJtUmxlQ2s3WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ2MyVjBJSEp2ZDBsdVpHVjRLR2x1WkdWNE9pQnVkVzFpWlhJcElIdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxuQnliM0FvZEdocGN5NXlWSGx3WlNBcklDY3RjbTkzYVc1a1pYZ25MQ0JwYm1SbGVDazdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnTHlvcVhISmNiaUFnSUNBZ0tpQlVhR2x6SUdaMWJtTjBhVzl1SUhKbGRIVnlibk1nWVc0Z2IySnFaV04wSUhkb2FXTm9JR052Ym5SaGFXNXpJSFJvWlNCMllXeDFaWE1nYjJZZ2RHaGxJR0ZzYkNCMGFHVWdhVzV3ZFhSeklHbHVJSFJvWlNCeWIzZGNjbHh1SUNBZ0lDQXFJRUJ5WlhSMWNtNXpJRkpsZEhWdWN5QmhiaUJ2WW1wbFkzUWdkMmhwWTJnZ1kyOXVkR0ZwYm5NZ2RHaGxJSFpoYkhWbGN5QnZaaUIwYUdVZ2FXNXdkWFJ6WEhKY2JpQWdJQ0FnS2k5Y2NseHVJQ0FnSUdkbGRGSnZkMFJoZEdFb0tUb2dZVzU1SUh0Y2NseHVJQ0FnSUNBZ0lDQjJZWElnY205M1NXNXdkWFJ6SUQwZ2RHaHBjeTVuWlhSSmJuQjFkSE1vS1R0Y2NseHVJQ0FnSUNBZ0lDQjJZWElnY21WamIzSmtJRDBnZTMwN1hISmNiaUFnSUNBZ0lDQWdkbUZ5SUhKdmQwTmhkQ0E5SUhSb2FYTXVjbTkzUTJGMFpXZHZjbms3WEhKY2JpQWdJQ0FnSUNBZ2NtVmpiM0prV3lkeWIzZERZWFJsWjI5eWVTZGRJRDBnY205M1EyRjBPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQnliM2RKYm5CMWRITXVabTl5UldGamFDZ29jbTkzU1c1d2RYUXNJR2twSUQwK0lIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJR05sYkd4UWNtOXdUbUZ0WlNBOUlISnZkMGx1Y0hWMExtOXdkR2x2Ym5NdVRXOWtaV3hPWVcxbE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpXTnZjbVJiWTJWc2JGQnliM0JPWVcxbFhTQTlJSEp2ZDBsdWNIVjBMblpoYkR0Y2NseHVJQ0FnSUNBZ0lDQjlLVHRjY2x4dUlDQWdJQ0FnSUNCeVpXTnZjbVJiWENKamJHbGxiblJTYjNkT2RXMWlaWEpjSWwwZ1BTQjBhR2x6TG5KdmQwbHVaR1Y0TzF4eVhHNGdJQ0FnSUNBZ0lDOHZJR052Ym5OdmJHVXViRzluS0NkSFpYUlNiM2RFWVhSaE9pQW5MQ0J5WldOdmNtUXBPMXh5WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJ5WldOdmNtUTdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnWjJWMElHbHpVbTkzUkdseWRIa29LVG9nWW05dmJHVmhiaUI3WEhKY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVaMlYwVUhKdmNDZ25aR0YwWVMxcGMyUnBjblI1SnlrZ1BUMDlJQ2QwY25WbEp6dGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0J6WlhRZ2FYTlNiM2RFYVhKMGVTaDJZV3c2SUdKdmIyeGxZVzRwSUh0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG5CeWIzQW9KMlJoZEdFdGFYTmthWEowZVNjc0lIWmhiQ0E5UFQwZ2RISjFaU0EvSUZ3aWRISjFaVndpSURvZ0oyWmhiSE5sSnlrN1hISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdMeW9xWEhKY2JpQWdJQ0FnS2x4eVhHNGdJQ0FnSUNvZ1FISmxkSFZ5Ym5NZ2UwSlRSR0YwWVZSaFlteGxVbTkzZlZ4eVhHNGdJQ0FnSUNvdlhISmNiaUFnSUNCamJHOXVaU2dwT2lCQ1UwUmhkR0ZVWVdKc1pWSnZkeUI3WEhKY2JpQWdJQ0FnSUNBZ0x5OTJZWElnWTJ4dmJtVWdQU0IwYUdsekxtVnNaVzFsYm5RdVkyeHZibVVvS1R0Y2NseHVJQ0FnSUNBZ0lDQXZMM0psZEhWeWJpQnVaWGNnUWxORVlYUmhWR0ZpYkdWU2IzY29leUJsYkdWdFpXNTBPaUJqYkc5dVpTd2daR0YwWVZOdmRYSmpaVTVoYldVNklIUm9hWE11WkdGMFlWTnZkWEpqWlU1aGJXVWdmU2s3WEhKY2JpQWdJQ0FnSUNBZ0x5OXNaWFFnWTJ4dmJtVWdQU0JQWW1wbFkzUXVZWE56YVdkdUtFOWlhbVZqZEM1amNtVmhkR1VvVDJKcVpXTjBMbWRsZEZCeWIzUnZkSGx3WlU5bUtIUm9hWE1wS1N3Z2RHaHBjeWs3WEhKY2JpQWdJQ0FnSUNBZ0x5OXlaWFIxY200Z1kyeHZibVU3WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJSEJoY21WdWRFTnNiMjVsSUQwZ2MzVndaWEl1WTJ4dmJtVW9LVHRjY2x4dUlDQWdJQ0FnSUNBdkwyUmxZblZuWjJWeU8xeHlYRzRnSUNBZ0lDQWdJR3hsZENCdmNIUkRiRzl1WlRvZ1FsTlNiM2RQY0hScGIyNXpJRDBnZEdocGN5NXphRU5zYjI1bEtIUm9hWE11YjNCMGFXOXVjeWs3WEhKY2JpQWdJQ0FnSUNBZ2IzQjBRMnh2Ym1VdWFYTlVaVzF3YkdGMFpWSnZkeUE5SUdaaGJITmxPMXh5WEc0Z0lDQWdJQ0FnSUhaaGNpQmpiRzl1WlZKdmR5QTlJRzVsZHlCQ1UwUmhkR0ZVWVdKc1pWSnZkeWh2Y0hSRGJHOXVaU2s3WEhKY2JpQWdJQ0FnSUNBZ1kyeHZibVZTYjNjdVpXeGxiV1Z1ZENBOUlIQmhjbVZ1ZEVOc2IyNWxMbVZzWlcxbGJuUTdYSEpjYmlBZ0lDQWdJQ0FnWTJ4dmJtVlNiM2N1WTJocGJHUnlaVzRnUFNCd1lYSmxiblJEYkc5dVpTNWphR2xzWkhKbGJqdGNjbHh1SUNBZ0lDQWdJQ0JqYkc5dVpWSnZkeTVqWld4c2N5QTlJSFJvYVhNdVkyVnNiSE11YldGd0tDaDJLU0E5UGlCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhaaGNpQmpiRzl1WlVObGJHd2dQU0IyTG1Oc2IyNWxLQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR05zYjI1bFVtOTNMbVZzWlcxbGJuUXVZWEJ3Wlc1a0tHTnNiMjVsUTJWc2JDNWxiR1Z0Wlc1MEtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdOc2IyNWxRMlZzYkR0Y2NseHVJQ0FnSUNBZ0lDQjlLVHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlHTnNiMjVsVW05M08xeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dVhISmNibjFjY2x4dUlpd2lhVzF3YjNKMElIc2dRbE5FWVhSaFZHRmliR1ZDWVhObElIMGdabkp2YlNCY0lpNHZRbE5FWVhSaFZHRmliR1ZDWVhObFhDSTdYSEpjYm1sdGNHOXlkQ0I3SUVKVFJHRjBZVlJoWW14bFVtOTNJSDBnWm5KdmJTQmNJaTR2UWxORVlYUmhWR0ZpYkdWU2IzZGNJanRjY2x4dVhISmNibVY0Y0c5eWRDQmpiR0Z6Y3lCQ1UwUmhkR0ZVWVdKc1pWSnZkME52Ykd4bFkzUnBiMjRnWlhoMFpXNWtjeUJDVTBSaGRHRlVZV0pzWlVKaGMyVWdlMXh5WEc0Z0lDQWdMeW9xWEhKY2JpQWdJQ0FnS2lCQWRIbHdaU0JDVTBSaGRHRlVZV0pzWlZKdmQxdGRYSEpjYmlBZ0lDQWdLaTljY2x4dUlDQWdJSEp2ZDNNNklFSlRSR0YwWVZSaFlteGxVbTkzVzEwZ1BTQmJYVHRjY2x4dVhISmNiaUFnSUNCamIyNXpkSEoxWTNSdmNpZ3BJSHRjY2x4dUlDQWdJQ0FnSUNCemRYQmxjaWdwTzF4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lDOHFLbHh5WEc0Z0lDQWdJQ3BjY2x4dUlDQWdJQ0FxSUVCd1lYSmhiU0I3UWxORVlYUmhWR0ZpYkdWU2IzZDlJSEp2ZDF4eVhHNGdJQ0FnSUNvdlhISmNiaUFnSUNCaFpHUlNiM2NvY205M09pQkNVMFJoZEdGVVlXSnNaVkp2ZHlrZ2UxeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdVlYQndaVzVrS0hKdmR5azdYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlHbHVaR1Y0SUQwZ2RHaHBjeTVuWlhST1pYaDBVbTkzU1c1a1pYZ29LVHRjY2x4dUlDQWdJQ0FnSUNCeWIzY3VjbTkzU1c1a1pYZ2dQU0JwYm1SbGVEdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJSEpVZVhCbElEMGdjbTkzTG05d2RHbHZibk11WjNKcFpFaGxZV1JsY2lBOVBUMGdkSEoxWlNBL0lDZG9aV0ZrSnlBNklDZGtZWFJoSnp0Y2NseHVJQ0FnSUNBZ0lDQnliM2N1YVdRZ1BTQmdKSHR5YjNjdWIzQjBhVzl1Y3k1bmNtbGtTV1I5WHlSN2NsUjVjR1Y5WHlSN2FXNWtaWGg5WUR0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG5KdmQzTXVjSFZ6YUNoeWIzY3BPMXh5WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsek8xeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJR2RsZEZacGMybGliR1ZTYjNkektDa2dlMXh5WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuSnZkM011Wm1sc2RHVnlLQ2h5YjNjcElEMCtJSEp2ZHk1MmFYTnBZbXhsSUQwOVBTQjBjblZsS1R0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQm5aWFJPWlhoMFVtOTNTVzVrWlhnb0tTQjdYSEpjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWNtOTNjeTVzWlc1bmRHZ2dLeUF4TzF4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lHZGxkRWR5YVdSVWFYUnNaWE5TYjNjb0tTQjdYSEpjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWNtOTNjeTVtYVc1a0tDaHliM2NwSUQwK0lISnZkeTV2Y0hScGIyNXpMbWR5YVdSSVpXRmtaWElnUFQwOUlIUnlkV1VwTzF4eVhHNGdJQ0FnZlZ4eVhHNTlYSEpjYmlJc0ltbHRjRzl5ZENCN0lFSlRSR0YwWVZSaFlteGxVbTkzUTI5c2JHVmpkR2x2YmlCOUlHWnliMjBnWENJdUwwSlRSR0YwWVZSaFlteGxVbTkzUTI5c2JHVmpkR2x2Ymx3aU8xeHlYRzVjY2x4dVpYaHdiM0owSUdOc1lYTnpJRUpUUkdGMFlWUmhZbXhsU0dWaFpHVnlJR1Y0ZEdWdVpITWdRbE5FWVhSaFZHRmliR1ZTYjNkRGIyeHNaV04wYVc5dUlIdGNjbHh1WEhKY2JseHlYRzRnSUNBZ1kyOXVjM1J5ZFdOMGIzSW9LU0I3WEhKY2JpQWdJQ0FnSUNBZ2MzVndaWElvS1R0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG5KbGJtUmxjaWdwTzF4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lISmxibVJsY2lncElIdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtVnNaVzFsYm5RZ1BTQmtiMk4xYldWdWRDNWpjbVZoZEdWRmJHVnRaVzUwS0NkMGFHVmhaQ2NwTzF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11WVdSa1EyeGhjM01vSjNSaFlteGxMV3hwWjJoMEp5bGNjbHh1SUNBZ0lIMWNjbHh1ZlZ4eVhHNGlMQ0pwYlhCdmNuUWdleUJDVTBWMlpXNTBJSDBnWm5KdmJTQmNJaTR1TDJOdmJXMXZibFI1Y0dWekwyTnZiVzF2YmkxMGVYQmxjMXdpTzF4eVhHNXBiWEJ2Y25RZ2V5QmhjSEJFWVhSaFJYWmxiblJ6TENCa1lYUmhSWFpsYm5SelUyVnlkbWxqWlNCOUlHWnliMjBnWENJdUxpOXpaWEoyYVdObGMxd2lPMXh5WEc1cGJYQnZjblFnZXlCQ1UwUmhkR0ZVWVdKc1pWSnZkeUI5SUdaeWIyMGdYQ0l1TDBKVFJHRjBZVlJoWW14bFVtOTNYQ0k3WEhKY2JtbHRjRzl5ZENCN0lFSlRSR0YwWVZSaFlteGxVbTkzUTI5c2JHVmpkR2x2YmlCOUlHWnliMjBnWENJdUwwSlRSR0YwWVZSaFlteGxVbTkzUTI5c2JHVmpkR2x2Ymx3aU8xeHlYRzVjY2x4dVpYaHdiM0owSUdOc1lYTnpJRUpUUkdGMFlWUmhZbXhsUW05a2VTQmxlSFJsYm1SeklFSlRSR0YwWVZSaFlteGxVbTkzUTI5c2JHVmpkR2x2YmlCN1hISmNibHh5WEc0Z0lDQWdZMjl1YzNSeWRXTjBiM0lvS1NCN1hISmNiaUFnSUNBZ0lDQWdjM1Z3WlhJb0tUdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxuSmxibVJsY2lncE8xeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJSEpsYm1SbGNpZ3BJSHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbVZzWlcxbGJuUWdQU0JrYjJOMWJXVnVkQzVqY21WaGRHVkZiR1Z0Wlc1MEtDZDBZbTlrZVNjcE8xeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJRzV2ZEdsbWVVeHBjM1JsYm1WeWN5aGxkbVZ1ZEZSNWNHVTZJSE4wY21sdVp5d2djR0Y1Ykc5aFpEb2dRbE5GZG1WdWRDa2dlMXh5WEc0Z0lDQWdJQ0FnSUdSaGRHRkZkbVZ1ZEhOVFpYSjJhV05sTGtWdGFYUW9aWFpsYm5SVWVYQmxMQ0IwYUdsekxDQndZWGxzYjJGa0tUdGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0F2S2lwY2NseHVJQ0FnSUNvZ1FIQmhjbUZ0SUh0Q1UwUmhkR0ZVWVdKc1pWSnZkMzBnY205M1hISmNiaUFnSUNBcUwxeHlYRzRnSUNBZ2NtOTNVMmxpYkdsdVozTW9jbTkzT2lCQ1UwUmhkR0ZVWVdKc1pWSnZkeWs2SUVKVFJHRjBZVlJoWW14bFVtOTNXMTBnZTF4eVhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbkp2ZDNNdVptbHNkR1Z5S0NoMkxDQnBLU0E5UGlCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaDJJQ0U5UFNCeWIzY3BYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkanNnTHk4Z2NtVjBkWEp1SUdGc2JDQmxlR05sY0hRZ2RHaGxJR04xY25KbGJuUWdjbTkzWEhKY2JpQWdJQ0FnSUNBZ2ZTazdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnTHlvcVhISmNiaUFnSUNBZ0tpQkFjR0Z5WVcwZ2UwSlRSR0YwWVZSaFlteGxVbTkzZlNCeWIzZGNjbHh1SUNBZ0lDQXFMMXh5WEc0Z0lDQWdabTlqZFhOU2IzY29jbTkzT2lCQ1UwUmhkR0ZVWVdKc1pWSnZkeWtnZTF4eVhHNGdJQ0FnSUNBZ0lDOHZYSEpjYmlBZ0lDQWdJQ0FnTHk4Z1ptOWpkWE1nWTNWeWNtVnVkQ0J5YjNjc0lHRnVaQ0J5WlcxdmRtVWdabTlqZFhNZ1puSnZiU0J3Y21WMmFXOTFjeUJ5YjNkY2NseHVJQ0FnSUNBZ0lDQXZMMXh5WEc0Z0lDQWdJQ0FnSUhKdmR5NW1iMk4xYzFKdmR5Z3BPMXh5WEc0Z0lDQWdJQ0FnSUhaaGNpQnphV0pzYVc1bmN5QTlJSFJvYVhNdWNtOTNVMmxpYkdsdVozTW9jbTkzS1R0Y2NseHVJQ0FnSUNBZ0lDQnphV0pzYVc1bmN5NW1iM0pGWVdOb0tDaDJMQ0JwS1NBOVBpQjJMbkpsYlc5MlpVTnNZWE56S0NkMFlXSnNaUzFoWTNScGRtVW5LU2s3WEhKY2JpQWdJQ0I5TzF4eVhHNWNjbHh1SUNBZ0lHZGxkRlJsYlhCc1lYUmxVbTkzS0NrNklFSlRSR0YwWVZSaFlteGxVbTkzSUh0Y2NseHVJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV5YjNkekxtWnBibVFvS0hZcElEMCtJSFl1YjNCMGFXOXVjeTVwYzFSbGJYQnNZWFJsVW05M0lEMDlQU0IwY25WbEtUdGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0JuWlhSRWFYSjBlVkp2ZDNNb0tUb2dRbE5FWVhSaFZHRmliR1ZTYjNkYlhTQjdYSEpjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWNtOTNjeTVtYVd4MFpYSW9LSEp2ZHlrZ1BUNGdjbTkzTG1selVtOTNSR2x5ZEhrZ1BUMDlJSFJ5ZFdVcE8xeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJR2RsZEVScGNuUjVVbVZqYjNKa2N5Z3BJSHRjY2x4dUlDQWdJQ0FnSUNCMllYSWdaR2x5ZEhsU2IzZHpJRDBnZEdocGN5NW5aWFJFYVhKMGVWSnZkM01vS1R0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnYVdZZ0tHUnBjblI1VW05M2N5NXNaVzVuZEdnZ1BUMDlJREFwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRnRkTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ2NtVmpiM0prY3lBOUlGdGRPMXh5WEc0Z0lDQWdJQ0FnSUdScGNuUjVVbTkzY3k1bWIzSkZZV05vS0NoeWIzY3NJR2twSUQwK0lIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVmpiM0prY3k1d2RYTm9LSEp2ZHk1blpYUlNiM2RFWVhSaEtDa3BPMXh5WEc0Z0lDQWdJQ0FnSUgwcE8xeHlYRzVjY2x4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnY21WamIzSmtjenRjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNCblpYUkJiR3hTWldOdmNtUnpLQ2tnZTF4eVhHNGdJQ0FnSUNBZ0lDOHZYSEpjYmlBZ0lDQWdJQ0FnTHk4Z1lXeHNJSEp2ZDNNZ1pYaGpaWEIwSUhSb1pTQjBaVzF3YkdGMFpTQnliM2RjY2x4dUlDQWdJQ0FnSUNBdkwxeHlYRzVjY2x4dUlDQWdJQ0FnSUNCMllYSWdjbTkzY3lBOUlIUm9hWE11Y205M2N5NW1hV3gwWlhJb0tISnZkeWtnUFQ0Z2NtOTNMbTl3ZEdsdmJuTXVhWE5VWlcxd2JHRjBaVkp2ZHlBaFBUMGdkSEoxWlNrN1hISmNiaUFnSUNBZ0lDQWdkbUZ5SUhKbFkyOXlaSE1nUFNCYlhUdGNjbHh1SUNBZ0lDQWdJQ0J5YjNkekxtWnZja1ZoWTJnb0tISnZkeWtnUFQ0Z2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpXTnZjbVJ6TG5CMWMyZ29jbTkzTG1kbGRGSnZkMFJoZEdFb0tTazdYSEpjYmlBZ0lDQWdJQ0FnZlNrN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJ5WldOdmNtUnpPMXh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUdkbGRGTmxiR1ZqZEdWa1VtOTNLQ2s2SUVKVFJHRjBZVlJoWW14bFVtOTNJSHRjY2x4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXliM2R6TG1acGJtUW9LSFlzSUdrcElEMCtJSFl1YUdGelEyeGhjM01vSjNSaFlteGxMV0ZqZEdsMlpTY3BJRDA5UFNCMGNuVmxLVHRjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNCdFlYSnJSR1ZzWlhSbFpDZ3BJSHRjY2x4dUlDQWdJQ0FnSUNCMllYSWdjbTkzSUQwZ2RHaHBjeTVuWlhSVFpXeGxZM1JsWkZKdmR5Z3BPMXh5WEc0Z0lDQWdJQ0FnSUdsbUlDZ2hjbTkzS1Z4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNDdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJ6YVdKc2FXNW5jeUE5SUhSb2FYTXVjbTkzVTJsaWJHbHVaM01vY205M0tUdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ2JHRnpkRk5wWW14cGJtY2dQU0J6YVdKc2FXNW5jMXR6YVdKc2FXNW5jeTVzWlc1bmRHZ2dMU0F4WFR0Y2NseHVJQ0FnSUNBZ0lDQnliM2N1Y21WdGIzWmxRMnhoYzNNb0ozUmhZbXhsTFdGamRHbDJaU2NwTzF4eVhHNGdJQ0FnSUNBZ0lISnZkeTVwYzFKdmQwUnBjblI1SUQwZ2RISjFaVHRjY2x4dUlDQWdJQ0FnSUNCeWIzY3VZM056SUQwZ2V5QW5aR2x6Y0d4aGVTYzZJQ2R1YjI1bEp5QjlPMXh5WEc0Z0lDQWdJQ0FnSUhKdmR5NTJhWE5wWW14bElEMGdabUZzYzJVN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUhaaGNpQnliM2REWVhRZ1BTQnliM2N1Y205M1EyRjBaV2R2Y25rN1hISmNiaUFnSUNBZ0lDQWdhV1lnS0hKdmQwTmhkQ0E5UFQwZ0owRkVSRVZFSnlrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCeWIzY3VjbTkzUTJGMFpXZHZjbmtnUFNBblFVUkVSVVJmUkVWTVJWUkZSQ2M3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJR1ZzYzJVZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCeWIzY3VjbTkzUTJGMFpXZHZjbmtnUFNBblJFVk1SVlJGUkNjN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG01dmRHbG1lVXhwYzNSbGJtVnljeWhoY0hCRVlYUmhSWFpsYm5SekxrOU9YMGRTU1VSZlZWQkVRVlJGUkN3Z2V5QkVZWFJoVTI5MWNtTmxUbUZ0WlRvZ2NtOTNMbTl3ZEdsdmJuTXVaR0YwWVZOdmRYSmpaVTVoYldVc0lFVjJaVzUwUkdGMFlUb2dleUJGZG1WdWREb2djbTkzSUgwZ2ZTazdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11Wm05amRYTlNiM2NvYkdGemRGTnBZbXhwYm1jcE8xeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJQzhxS2x4eVhHNGdJQ0FnSUNvZ1VtVnRiM1psY3lCMGFHVWdjbTkzSUdaeWIyMGdjbTkzY3lCamIyeHNaV04wYVc5dVhISmNiaUFnSUNBZ0tpQkFjR0Z5WVcwZ2UwSlRSR0YwWVZSaFlteGxVbTkzZlNCeWIzZGNjbHh1SUNBZ0lDQXFMMXh5WEc0Z0lDQWdjbVZ0YjNabFVtOTNLSEp2ZHpvZ1FsTkVZWFJoVkdGaWJHVlNiM2NwSUh0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnTHk4Z2RHaHBjeTVtYVc1a0tHQjBjbHRrWVhSaExYSnZkMk5oZEdWbmIzSjVQU2NrZTNKdmR5NXliM2REWVhSbFoyOXllWDBuWFdBcExuSmxiVzkyWlNncE8xeHlYRzRnSUNBZ0lDQWdJSEp2ZHk1bGJHVnRaVzUwTG5KbGJXOTJaU2dwTzF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ2FXNWtaWGdnUFNCMGFHbHpMbkp2ZDNNdWFXNWtaWGhQWmloeWIzY3BPMXh5WEc0Z0lDQWdJQ0FnSUdsbUlDaHBibVJsZUNBK0lDMHhLVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5KdmQzTXVjM0JzYVdObEtHbHVaR1Y0TENBeEtUdGNjbHh1SUNBZ0lIMWNjbHh1ZlZ4eVhHNGlMQ0pjY2x4dWFXMXdiM0owSUhzZ1ZHOXZiSFJwY0NCOUlHWnliMjBnWENKaWIyOTBjM1J5WVhCY0lseHlYRzVwYlhCdmNuUWdleUJDVTBSaGRHRlVZV0pzWlVKaGMyVWdmU0JtY205dElGd2lMaTlDVTBSaGRHRlVZV0pzWlVKaGMyVmNJanRjY2x4dWFXMXdiM0owSUNjdUxpOXpaWEoyYVdObGN5OXpkSEpwYm1jdVpYaDBaVzV6YVc5dWN5ZGNjbHh1YVcxd2IzSjBJSHRjY2x4dUlDQWdJR0p6UkdGMFlWUmhZbXhsUkdselkyOTJaWEo1VTJWeWRtbGpaU3dnUTI5dmEybGxTR1ZzY0dWeVhISmNiaUFnSUNBc0lHUmhkR0ZGZG1WdWRITlRaWEoyYVdObExDQmhjSEJFWVhSaFJYWmxiblJ6TENCaGNIQkJZM1JwYjI1elhISmNibjBnWm5KdmJTQmNJaTR1TDNObGNuWnBZMlZ6WENJN1hISmNibHh5WEc1cGJYQnZjblFnZXlCQ1UwUmhkR0ZVWVdKc1pVTmxiR3dnZlNCbWNtOXRJRndpTGk5Q1UwUmhkR0ZVWVdKc1pVTmxiR3hjSWp0Y2NseHVhVzF3YjNKMElIdGNjbHh1SUNBZ0lFSlRSR0YwWVZSaFlteGxRMjlzUkdWbWFXNXBkR2x2Yml3Z1FsTkZkbVZ1ZEVoaGJtUnNaWEpjY2x4dUlDQWdJQ3dnUWxORmRtVnVkRk4xWW5OamNtbGlaWEpOYjJSbGJDd2dRbE5UYjNKMGFXNW5VbVZ4ZFdWemRFVjJaVzUwTENCQ1UwTnZibVpwWjFWd1pHRjBaV1JGZG1WdWRGeHlYRzRnSUNBZ0xDQkNVME52YkhOU1pXOXlaR1Z5WldSRmRtVnVkRnh5WEc0Z0lDQWdMQ0JDVTBabGRHTm9VbVZqYjNKa1JYWmxiblFzSUVKVFIzSnBaRlZ3WkdGMFpXUkZkbVZ1ZEN3Z1FsTlNiM2RWY0dSaGRHVmtSWFpsYm5SY2NseHVJQ0FnSUN3Z1FsTkdhV1ZzWkZWd1pHRjBaV1JGZG1WdWRDd2dRbE5FWVhSaFZHRmliR1ZRWVdkcGJtZE5aWFJoUkdGMFlWeHlYRzRnSUNBZ0xDQkNVMFJoZEdGVVlXSnNaVTl3ZEdsdmJuTXNJRUpUUlhabGJuUXNYSEpjYmlBZ0lDQkNVMFpsZEdOb1VtVmpiM0prUlhKeWIzSkZkbVZ1ZEN3Z1FsTkRiMngxYlc1VFpYUjBhVzVuY3l3Z1NVSlRSR0YwWVZSaFlteGxTSFIwY0VOc2FXVnVkRnh5WEc1OUlHWnliMjBnWENJdUxpOWpiMjF0YjI1VWVYQmxjeTlqYjIxdGIyNHRkSGx3WlhOY0lqdGNjbHh1WEhKY2JtbHRjRzl5ZENCN0lFSlRSR0YwWVZSaFlteGxRMmhsWTJ0Q2IzZ2dmU0JtY205dElGd2lMaTlDVTBSaGRHRlVZV0pzWlVOb1pXTnJRbTk0WENJN1hISmNibWx0Y0c5eWRDQjdJRUpUUkdGMFlWUmhZbXhsU0hSMGNFTnNhV1Z1ZENCOUlHWnliMjBnWENJdUwwSlRSR0YwWVZSaFlteGxTSFIwY0VOc2FXVnVkRndpTzF4eVhHNXBiWEJ2Y25RZ2V5QkNVMFJoZEdGVVlXSnNaVkJoWjJsdVlYUnBiMjRnZlNCbWNtOXRJRndpTGk5Q1UwUmhkR0ZVWVdKc1pWQmhaMmx1WVhScGIyNWNJanRjY2x4dWFXMXdiM0owSUhzZ1FsTkVZWFJoVkdGaWJHVkpibVpwYm1sMFpWTmpjbTlzYkNCOUlHWnliMjBnWENJdUwwSlRSR0YwWVZSaFlteGxTVzVtYVc1cGRHVlRZM0p2Ykd4Y0lqdGNjbHh1YVcxd2IzSjBJSHNnUWxORVlYUmhWR0ZpYkdWTllYSnJaWElnZlNCbWNtOXRJRndpTGk5Q1UwUmhkR0ZVWVdKc1pVMWhjbXRsY2x3aU8xeHlYRzVwYlhCdmNuUWdleUJDVTBSaGRHRlVZV0pzWlVGamRHbHZibk1nZlNCbWNtOXRJRndpTGk5Q1UwUmhkR0ZVWVdKc1pVRmpkR2x2Ym5OY0lqdGNjbHh1YVcxd2IzSjBJSHNnUWxORVlYUmhWR0ZpYkdWU2IzY2dmU0JtY205dElGd2lMaTlDVTBSaGRHRlVZV0pzWlZKdmQxd2lPMXh5WEc1cGJYQnZjblFnZXlCQ1UwUmhkR0ZVWVdKc1pVaGxZV1JsY2lCOUlHWnliMjBnWENJdUwwSlRSR0YwWVZSaFlteGxTR1ZoWkdWeVhDSTdYSEpjYm1sdGNHOXlkQ0I3SUVKVFJHRjBZVlJoWW14bFFtOWtlU0I5SUdaeWIyMGdYQ0l1TDBKVFJHRjBZVlJoWW14bFFtOWtlVndpTzF4eVhHNWNjbHh1Wlhod2IzSjBJR05zWVhOeklFSlRSR0YwWVZSaFlteGxJR1Y0ZEdWdVpITWdRbE5FWVhSaFZHRmliR1ZDWVhObElIdGNjbHh1WEhKY2JpQWdJQ0J2Y0hScGIyNXpPaUJDVTBSaGRHRlVZV0pzWlU5d2RHbHZibk03WEhKY2JpQWdJQ0JvWldGa09pQkNVMFJoZEdGVVlXSnNaVWhsWVdSbGNqdGNjbHh1SUNBZ0lHSnZaSGs2SUVKVFJHRjBZVlJoWW14bFFtOWtlVHRjY2x4dUlDQWdJSEJoWjJsdVlYUnZjam9nUWxORVlYUmhWR0ZpYkdWUVlXZHBibUYwYVc5dU8xeHlYRzRnSUNBZ2FIUjBjRU5zYVdWdWREb2dTVUpUUkdGMFlWUmhZbXhsU0hSMGNFTnNhV1Z1ZER0Y2NseHVJQ0FnSUdsdVptbHVhWFJsVTJOeWIyeHNaWEk2SUVKVFJHRjBZVlJoWW14bFNXNW1hVzVwZEdWVFkzSnZiR3c3WEhKY2JpQWdJQ0JuY21sa1FXTjBhVzl1Y3pvZ1FsTkVZWFJoVkdGaWJHVkJZM1JwYjI1ek8xeHlYRzRnSUNBZ1pHbHpZMjkyWlhKaFlteGxPaUJpYjI5c1pXRnVPMXh5WEc0Z0lDQWdZMjl1ZEdGcGJtVnlSV3hsYldWdWREb2dTRlJOVEVWc1pXMWxiblE3WEhKY2JseHlYRzRnSUNBZ1kyOXVjM1J5ZFdOMGIzSW9iM0IwYVc5dWN6b2dRbE5FWVhSaFZHRmliR1ZQY0hScGIyNXpLU0I3WEhKY2JpQWdJQ0FnSUNBZ2MzVndaWElvS1R0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NXZjSFJwYjI1eklEMGdiM0IwYVc5dWN6dGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtaGxZV1FnUFNCdVpYY2dRbE5FWVhSaFZHRmliR1ZJWldGa1pYSW9LVHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbUp2WkhrZ1BTQnVaWGNnUWxORVlYUmhWR0ZpYkdWQ2IyUjVLQ2s3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTV3WVdkcGJtRjBiM0lnUFNCdVpYY2dRbE5FWVhSaFZHRmliR1ZRWVdkcGJtRjBhVzl1S0h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWkdGMFlWTnZkWEpqWlU1aGJXVTZJSFJvYVhNdWIzQjBhVzl1Y3k1a1lYUmhVMjkxY21ObExtNWhiV1VzWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJRzVsZUhSUVlXZGxRMkZzYkdKaFkyczZJQ2h3WVdkbEtTQTlQaUIwYUdsekxuQmhaMmx1WVhSdmNrTmhiR3hpWVdOcktIQmhaMlVwWEhKY2JpQWdJQ0FnSUNBZ2ZTazdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11YUhSMGNFTnNhV1Z1ZENBOUlHNWxkeUJDVTBSaGRHRlVZV0pzWlVoMGRIQkRiR2xsYm5Rb2RHaHBjeTV2Y0hScGIyNXpMbVJoZEdGVGIzVnlZMlV1Ym1GdFpTd2dkR2hwY3k1dmNIUnBiMjV6TG1OaFkyaGxVbVZ6Y0c5dWMyVnpLVHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdkR2hwY3k1cGJtWnBibWwwWlZOamNtOXNiR1Z5SUQwZ2JuVnNiRHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbWR5YVdSQlkzUnBiMjV6SUQwZ2JuVnNiRHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbVJwYzJOdmRtVnlZV0pzWlNBOUlIUnlkV1U3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTVqYjI1MFlXbHVaWEpGYkdWdFpXNTBJRDBnWkc5amRXMWxiblF1WjJWMFJXeGxiV1Z1ZEVKNVNXUW9kR2hwY3k1dmNIUnBiMjV6TG1OdmJuUmhhVzVsY2tsa0tUdGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0J6ZEdGMGFXTWdRM0psWVhSbEtHTnZibVpwWnpvZ0tHOXdkRG9nUWxORVlYUmhWR0ZpYkdWUGNIUnBiMjV6S1NBOVBpQjJiMmxrS1NCN1hISmNiaUFnSUNBZ0lDQWdMeTkyWVhJZ2IzQjBhVzl1Y3lBOUlGeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJRzV2ZEdsbWVVeHBjM1JsYm1WeWN5aGxkbVZ1ZEZSNWNHVTZJSE4wY21sdVp5d2djR0Y1Ykc5aFpEb2dRbE5GZG1WdWRDa2dlMXh5WEc0Z0lDQWdJQ0FnSUdSaGRHRkZkbVZ1ZEhOVFpYSjJhV05sTGtWdGFYUW9aWFpsYm5SVWVYQmxMQ0IwYUdsekxDQndZWGxzYjJGa0tUdGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0J6WlhSRWFYTmpiM1psY21GaWJHVW9LU0I3WEhKY2JpQWdJQ0FnSUNBZ1luTkVZWFJoVkdGaWJHVkVhWE5qYjNabGNubFRaWEoyYVdObExrRmtaQ2gwYUdsektUdGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0JuWlhRZ1pHRjBZVk52ZFhKalpVNWhiV1VvS1RvZ2MzUnlhVzVuSUh0Y2NseHVJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV2Y0hScGIyNXpMbVJoZEdGVGIzVnlZMlV1Ym1GdFpUdGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0JuWlhRZ2FYTlNaV0ZrVDI1c2VTZ3BPaUJpYjI5c1pXRnVJSHRjY2x4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXZjSFJwYjI1ekxtbHpVbVZoWkc5dWJIazdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnWjJWMElHUnBjblI1VW1WamIzSmtjeWdwT2lCaGJubGJYU0I3WEhKY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZbTlrZVM1blpYUkVhWEowZVZKbFkyOXlaSE1vS1R0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQm5aWFFnWVd4c1VtVmpiM0prY3lncE9pQmhibmxiWFNCN1hISmNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WW05a2VTNW5aWFJCYkd4U1pXTnZjbVJ6S0NrN1hISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdMeW9xWEhKY2JpQWdJQ0FnS2lCQWNHRnlZVzBnZTI1MWJXSmxjbjBnY0dGblpWeHlYRzRnSUNBZ0lDb3ZYSEpjYmlBZ0lDQndZV2RwYm1GMGIzSkRZV3hzWW1GamF5aHdZV2RsT2lCdWRXMWlaWElwSUh0Y2NseHVJQ0FnSUNBZ0lDQXZMeUJqYjI1emIyeGxMbXh2WnloZ1VHRm5aUzVPWW5JNklDUjdjR0ZuWlgwZ2FYTWdjbVZ4ZFdWemRHVmtZQ2s3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTVtWlhSamFFZHlhV1JRWVdkbEtIQmhaMlVwTzF4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lHRndjR1Z1WkVobFlXUmxjaWdwSUh0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG1Wc1pXMWxiblF1WVhCd1pXNWtLSFJvYVhNdWFHVmhaQzVsYkdWdFpXNTBLVHRjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNCaGNIQmxibVJDYjJSNUtDa2dlMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVaV3hsYldWdWRDNWhjSEJsYm1Rb2RHaHBjeTVpYjJSNUxtVnNaVzFsYm5RcE8xeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJR2RsZEVkeWFXUlRaWFIwYVc1bmN5aG5jbWxrU1dRcE9pQjdJRnQ0T2lCemRISnBibWRkT2lCQ1UwTnZiSFZ0YmxObGRIUnBibWR6T3lCOUlIdGNjbHh1SUNBZ0lDQWdJQ0IwY25rZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBdkx5QmtaV0oxWjJkbGNqdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJR2R5YVdSVFpYUjBhVzVuY3lBOUlFTnZiMnRwWlVobGJIQmxjaTVuWlhSS1UwOU9LR2R5YVdSSlpDazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDOHZZMjl1YzI5c1pTNXNiMmNvSjBkeWFXUlRaWFIwYVc1bmN5QkRiMjlyYVdVNklDY3NJR2R5YVdSVFpYUjBhVzVuY3lBL0lDZHpaWFIwYVc1bmN5Qm1iM1Z1WkNjZ09pQW5ibThnYzJWMGRHbHVaM01nWm05MWJtUWhKeWs3WEhKY2JseHlYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWjNKcFpGTmxkSFJwYm1kek8xeHlYRzVjY2x4dUlDQWdJQ0FnSUNCOUlHTmhkR05vSUNobGNuSnZjaWtnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbXh2WnlobGNuSnZjaWs3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjFibVJsWm1sdVpXUTdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnZlR0Y2NseHVYSEpjYmlBZ0lDQlNaVzVrWlhJb0tTQjdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11Wld4bGJXVnVkQ0E5SUdSdlkzVnRaVzUwTG1OeVpXRjBaVVZzWlcxbGJuUW9KM1JoWW14bEp5azdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NWxiR1Z0Wlc1MExtTnNZWE56VEdsemRDNWhaR1FvSjNSaFlteGxKeXdnSjNSaFlteGxMV0p2Y21SbGNtVmtKeXdnSjNSaFlteGxMV2h2ZG1WeUoxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBc0lDZDBZV0pzWlMxemJTY3NJQ2R5WlhOcGVtRmliR1VuTENBbmJtRjJWR0ZpYkdVbkxDQW5ibTkzY21Gd0p5d2dKMkp6TFhSaFlteGxKeWs3WEhKY2JseHlYRzVjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbWxrSUQwZ2RHaHBjeTV2Y0hScGIyNXpMbWR5YVdSSlpEdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxuQnliM0FvSjJSaGRHRXRaR0YwWVhOdmRYSmpaU2NzSUhSb2FYTXViM0IwYVc5dWN5NWtZWFJoVTI5MWNtTmxMbTVoYldVcE8xeHlYRzVjY2x4dUlDQWdJQ0FnSUNCMllYSWdjMlYwZEdsdVozTWdQU0IwYUdsekxtZGxkRWR5YVdSVFpYUjBhVzVuY3loMGFHbHpMbTl3ZEdsdmJuTXVaM0pwWkVsa0tTQjhmQ0I3ZlR0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG1OemN5QTlJSHNnSjNkcFpIUm9Kem9nSjJsdWFHVnlhWFFuSUgwN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUhaaGNpQm5jbWxrU0dWaFpHVnlVbTkzSUQwZ2JtVjNJRUpUUkdGMFlWUmhZbXhsVW05M0tIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1pHRjBZVk52ZFhKalpVNWhiV1U2SUhSb2FYTXViM0IwYVc5dWN5NWtZWFJoVTI5MWNtTmxMbTVoYldVc1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdkeWFXUkpaRG9nZEdocGN5NXZjSFJwYjI1ekxtZHlhV1JKWkN4Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWjNKcFpFaGxZV1JsY2pvZ2RISjFaVnh5WEc0Z0lDQWdJQ0FnSUgwcE8xeHlYRzVjY2x4dUlDQWdJQ0FnSUNCMllYSWdZbTlrZVZKdmR5QTlJRzVsZHlCQ1UwUmhkR0ZVWVdKc1pWSnZkeWg3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2x6VkdWdGNHeGhkR1ZTYjNjNklIUnlkV1VzWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR1JoZEdGVGIzVnlZMlZPWVcxbE9pQjBhR2x6TG05d2RHbHZibk11WkdGMFlWTnZkWEpqWlM1dVlXMWxMRnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQm5jbWxrU1dRNklIUm9hWE11YjNCMGFXOXVjeTVuY21sa1NXUXNYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnZiblJoYVc1bGNrbGtPaUIwYUdsekxtOXdkR2x2Ym5NdVkyOXVkR0ZwYm1WeVNXUmNjbHh1SUNBZ0lDQWdJQ0I5S1R0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlHZHlhV1JEYjJ4MWJXNXpJRDBnZEdocGN5NWhjSEJzZVVOdmJFOXlaR1Z5YVc1bktITmxkSFJwYm1kektUdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0x5OWNjbHh1SUNBZ0lDQWdJQ0F2THlCaFpHUWdjbTkzSUcxaGNtdGxjbk1nTFNCMGFHbHpJR2hsYkhCeklIUnZJR2x0Y0hKdmRtVWdkR2hsSUhacGMzVmhiQ0JoY0hCbFlYSmhibU5sSUc5bUlITmxiR1ZqZEdWa0lISnZkMXh5WEc0Z0lDQWdJQ0FnSUM4dlhISmNiaUFnSUNBZ0lDQWdkbUZ5SUcxb0lEMGdibVYzSUVKVFJHRjBZVlJoWW14bFEyVnNiQ2g3ZlN3Z2RISjFaU2s3WEhKY2JseHlYRzRnSUNBZ0lDQWdJSFpoY2lCdFlYSnJaWElnUFNCdVpYY2dRbE5FWVhSaFZHRmliR1ZOWVhKclpYSW9LVHRjY2x4dUlDQWdJQ0FnSUNCMllYSWdiV0lnUFNCdVpYY2dRbE5FWVhSaFZHRmliR1ZEWld4c0tDazdYSEpjYmlBZ0lDQWdJQ0FnYldJdVlYQndaVzVrS0cxaGNtdGxjaWs3WEhKY2JseHlYRzRnSUNBZ0lDQWdJR2R5YVdSSVpXRmtaWEpTYjNjdVlXUmtRMlZzYkNodGFDazdYSEpjYmlBZ0lDQWdJQ0FnWW05a2VWSnZkeTVoWkdSRFpXeHNLRzFpS1R0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnWjNKcFpFTnZiSFZ0Ym5NdVptOXlSV0ZqYUNnb1oyTXBJRDArSUh0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDOHZYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDOHZJSFJvWlNCbmNtbGtJSE4wYjNKbGN5QmhJR052YjJ0cFpTQjNhR2xqYUNCamIyNTBZV2x1Y3lCcGJtWnZJR0ZpYjNWMElIUm9aU0IyYVhOcFlteHBkSGtnWVc1a0lITnBlbVVnYjJZZ2RHaGxJR052YkhWdGJseHlYRzRnSUNBZ0lDQWdJQ0FnSUNBdkx5QjNaU0IzYVd4c0lIVnpaU0IwYUdseklHbHVabThnZEc4Z2MybDZaU0JoYm1RZ2RtbHpkV0ZzYVhwbElIUm9aU0JuY21sa0lHUmhkR0ZjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdMeTljY2x4dVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDZ2haMk11VUhKdmNFNWhiV1VwSUhKbGRIVnlianRjY2x4dVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUhaaGNpQmpiMnhUWlhSMGFXNW5jeUE5SUhObGRIUnBibWR6VzJkakxsQnliM0JPWVcxbFhUdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCMGFDQTlJR2R5YVdSSVpXRmtaWEpTYjNjdVkzSmxZWFJsU0dWaFpHVnlSbTl5S0dkaktUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJSFJrSUQwZ1ltOWtlVkp2ZHk1amNtVmhkR1ZKYm5CMWRFWnZjaWhuWXl3Z2RHaHBjeTVwYzFKbFlXUlBibXg1S1R0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDOHZYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDOHZJSE52Y25ScGJtY2diMllnZEdobElHUmhkR0VnZDJobGJpQjBhR1VnYUdWaFpHVnlJR05sYkd3Z2FYTWdZMnhwWTJ0bFpGeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBdkwxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbUZrWkZOdmNuUnBibWNvZEdncE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbUZ3Y0d4NVEyOXNVMlYwZEdsdVozTW9kR2dzSUdOdmJGTmxkSFJwYm1kektUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVoY0hCc2VVTnZiRk5sZEhScGJtZHpLSFJrTENCamIyeFRaWFIwYVc1bmN5azdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHZHlhV1JJWldGa1pYSlNiM2N1WVdSa1EyVnNiQ2gwYUNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdKdlpIbFNiM2N1WVdSa1EyVnNiQ2gwWkNrN1hISmNiaUFnSUNBZ0lDQWdmU2s3WEhKY2JseHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWFHVmhaQzVoWkdSU2IzY29aM0pwWkVobFlXUmxjbEp2ZHlrN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1aWIyUjVMbUZrWkZKdmR5aGliMlI1VW05M0tWeHlYRzVjY2x4dUlDQWdJQ0FnSUNBdkwxeHlYRzRnSUNBZ0lDQWdJQzh2SUdGa1pDQm5jbWxrSUdGamRHbHZibk1nZEc5dmJHSmhjbHh5WEc0Z0lDQWdJQ0FnSUM4dlhISmNiaUFnSUNBZ0lDQWdkR2hwY3k1aGNIQmxibVJCWTNScGIyNXpLQ2s3WEhKY2JseHlYRzRnSUNBZ0lDQWdJQzh2WEhKY2JpQWdJQ0FnSUNBZ0x5OGdZV1JrSUdobFlXUmxjaUJoYm1RZ1ltOWtlU0IwYnlCMGFHVWdaM0pwWkZ4eVhHNGdJQ0FnSUNBZ0lDOHZYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NWhjSEJsYm1SSVpXRmtaWElvS1R0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG1Gd2NHVnVaRUp2Wkhrb0tUdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0x5OWNjbHh1SUNBZ0lDQWdJQ0F2THlCaFpHUWdaM0pwWkNCMGJ5QjBhR1VnY0hKdmRtbGtaV1FnWTI5dWRHRnBibVZ5WEhKY2JpQWdJQ0FnSUNBZ0x5OWNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtTnZiblJoYVc1bGNrVnNaVzFsYm5RdVlYQndaVzVrUTJocGJHUW9kR2hwY3k1bGJHVnRaVzUwS1R0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnTHk5Y2NseHVJQ0FnSUNBZ0lDQXZMeUJsYm1GaWJHVWdhVzVtYVc1cGRHVWdjMk55YjJ4c1hISmNiaUFnSUNBZ0lDQWdMeTljY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbUZrWkVsdVptbHVhWFJsVTJOeWIyeHNLQ2s3WEhKY2JseHlYRzRnSUNBZ0lDQWdJQzh2WEhKY2JpQWdJQ0FnSUNBZ0x5OGdZV1JrSUdSaGRHRWdkRzhnZEdobElHZHlhV1JjY2x4dUlDQWdJQ0FnSUNBdkwxeHlYRzRnSUNBZ0lDQWdJR2xtSUNoMGFHbHpMbTl3ZEdsdmJuTXVaR0YwWVZOdmRYSmpaUzVrWVhSaEtTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJrWVhSaElEMGdkR2hwY3k1dmNIUnBiMjV6TG1SaGRHRlRiM1Z5WTJVdVpHRjBZUzVwYm1sMFJHRjBZVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUcxa1lYUmhJRDBnZEdocGN5NXZjSFJwYjI1ekxtUmhkR0ZUYjNWeVkyVXVaR0YwWVM1dFpYUmhSR0YwWVR0Y2NseHVYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1ptVjBZMmhFWVhSaFJYWmxiblE2SUVKVFJtVjBZMmhTWldOdmNtUkZkbVZ1ZENBOUlIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRVJoZEdGVGIzVnlZMlZPWVcxbE9pQjBhR2x6TG05d2RHbHZibk11WkdGMFlWTnZkWEpqWlM1dVlXMWxMQ0JGZG1WdWRFUmhkR0U2SUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JFWVhSaE9pQmtZWFJoTEZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRTFsZEdGRVlYUmhPaUJ0WkdGMFlWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG01dmRHbG1lVXhwYzNSbGJtVnljeWhoY0hCRVlYUmhSWFpsYm5SekxrOU9YMFpGVkVOSVgwZFNTVVJmVWtWRFQxSkVMQ0JtWlhSamFFUmhkR0ZGZG1WdWRDazdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0x5OWNjbHh1SUNBZ0lDQWdJQ0F2THlCdWIzUnBabmtnZEdoaGRDQm5jbWxrSUdseklHUmhkR0V0WW05MWJtUmNjbHh1SUNBZ0lDQWdJQ0F2TDF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11Ym05MGFXWjVUR2x6ZEdWdVpYSnpLR0Z3Y0VSaGRHRkZkbVZ1ZEhNdVQwNWZSMUpKUkY5RVFWUkJYMEpQVlU1RUxGeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQkVZWFJoVTI5MWNtTmxUbUZ0WlRvZ2RHaHBjeTV2Y0hScGIyNXpMbVJoZEdGVGIzVnlZMlV1Ym1GdFpTeGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRVYyWlc1MFJHRjBZVG9nZTMxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlNrN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUdsbUlDaDBhR2x6TG1ScGMyTnZkbVZ5WVdKc1pTQTlQVDBnZEhKMVpTa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5ObGRFUnBjMk52ZG1WeVlXSnNaU2dwTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTTdYSEpjYmlBZ0lDQjlPMXh5WEc1Y2NseHVJQ0FnSUdGa1pFbHVabWx1YVhSbFUyTnliMnhzS0NrZ2UxeHlYRzRnSUNBZ0lDQWdJR2xtSUNoMGFHbHpMbTl3ZEdsdmJuTXVaVzVoWW14bFNXNW1hVzVwZEdWVFkzSnZiR3dnUFQwOUlIUnlkV1VwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXBibVpwYm1sMFpWTmpjbTlzYkdWeUlEMGdibVYzSUVKVFJHRjBZVlJoWW14bFNXNW1hVzVwZEdWVFkzSnZiR3dvZXlCbmNtbGtSV3hsYldWdWREb2dkR2hwY3k1bGJHVnRaVzUwTENCb2RIUndRMnhwWlc1ME9pQjBhR2x6TG1oMGRIQkRiR2xsYm5RZ2ZTazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11YVc1bWFXNXBkR1ZUWTNKdmJHeGxjaTV1WlhoMFVHRm5aVU5oYkd4aVlXTnJJRDBnS0hCaFoyVXBJRDArSUhSb2FYTXVjR0ZuYVc1aGRHOXlRMkZzYkdKaFkyc29jR0ZuWlNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVhVzVtYVc1cGRHVlRZM0p2Ykd4bGNpNWxibUZpYkdVb0tUdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ1lYQndaVzVrUVdOMGFXOXVjeWdwSUh0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG1keWFXUkJZM1JwYjI1eklEMGdibVYzSUVKVFJHRjBZVlJoWW14bFFXTjBhVzl1Y3lncE8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdVozSnBaRUZqZEdsdmJuTXVaR0YwWVZOdmRYSmpaVTVoYldVZ1BTQjBhR2x6TG05d2RHbHZibk11WkdGMFlWTnZkWEpqWlM1dVlXMWxPMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVaM0pwWkVGamRHbHZibk11WVdSa1RtVjNVbVZqYjNKa1FXTjBhVzl1S0NobEtTQTlQaUIwYUdsekxtRmtaRVZ0Y0hSNVVtOTNLQ2twWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQzVoWkdSRVpXeGxkR1ZCWTNScGIyNG9LR1VwSUQwK0lIUm9hWE11WW05a2VTNXRZWEpyUkdWc1pYUmxaQ2dwS1Z4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0F1WVdSa1IzSnBaRk5sZEhScGJtZHpRV04wYVc5dUtDazdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDOHZYSEpjYmlBZ0lDQWdJQ0FnTHk4Z1lXUmtJR0ZqZEdsdmJuTWdabTl5SUhSb1pTQm5jbWxrSUhSdklIUm9aU0JqYjI1MFlXbHVaWEpjY2x4dUlDQWdJQ0FnSUNBdkwxeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdVkyOXVkR0ZwYm1WeVJXeGxiV1Z1ZEM1aGNIQmxibVJEYUdsc1pDaDBhR2x6TG1keWFXUkJZM1JwYjI1ekxtVnNaVzFsYm5RcE8xeHlYRzVjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNBdktpcGNjbHh1SUNBZ0lDQXFJRUJ3WVhKaGJTQjdRbE5FWVhSaFZHRmliR1ZEWld4c2ZTQjBhRnh5WEc0Z0lDQWdJQ292WEhKY2JpQWdJQ0JoWkdSVGIzSjBhVzVuS0hSb09pQkNVMFJoZEdGVVlXSnNaVU5sYkd3cElIdGNjbHh1SUNBZ0lDQWdJQ0F2TDF4eVhHNGdJQ0FnSUNBZ0lDOHZJSE52Y25ScGJtY2diMllnZEdobElHUmhkR0VnZDJobGJpQjBhR1VnYUdWaFpHVnlJR05sYkd3Z2FYTWdZMnhwWTJ0bFpGeHlYRzRnSUNBZ0lDQWdJQzh2WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJRjkwYUdseklEMGdkR2hwY3p0Y2NseHVJQ0FnSUNBZ0lDQjBhQzVoWkdSRmRtVnVkRWhoYm1Sc1pYSW9KMk5zYVdOckp5d2dablZ1WTNScGIyNGdLR1VwSUh0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJoYzJNZ1BTQjBjblZsTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2RHZ3VhR0Z6UTJ4aGMzTW9KM052Y25ScGJtZGZZWE5qSnlrcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvTG5KbGJXOTJaVU5zWVhOektDZHpiM0owYVc1blgyRnpZeWNwTG1Ga1pFTnNZWE56S0NkemIzSjBhVzVuWDJSbGMyTW5LVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdGell5QTlJR1poYkhObE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUdWc2MyVWdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdndWNtVnRiM1psUTJ4aGMzTW9KM052Y25ScGJtZGZaR1Z6WXljcExtRmtaRU5zWVhOektDZHpiM0owYVc1blgyRnpZeWNwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ0lDQWdJQ0FnSUNBdkwxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBdkx5QnpkWEJ3YjNKMGN5QnpiM0owYVc1bklHOXVJRzl1YkhrZ2IyNWxJR052YkhWdGJpNWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0x5OWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHZ3VjMmxpYkdsdVozTW9KM1JvSnlrdVptOXlSV0ZqYUNnb2VDa2dQVDRnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2VDNWpiR0Z6YzB4cGMzUXVjbVZ0YjNabEtDZHpiM0owYVc1blgyRnpZeWNzSUNkemIzSjBhVzVuWDJSbGMyTW5LVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmU2s3WEhKY2JseHlYRzRnSUNBZ0lDQWdJQ0FnSUNBdkwxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBdkx5QnViM1JwWm5rZ2RHaGhkQ0IzWlNCdVpXVmtJSE52Y25ScGJtY2diMllnZEdobElHTnZiSFZ0Ymx4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0F2TDF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2NISnZjQ0E5SUhSb0xtOXdkR2x2Ym5NdVVISnZjRTVoYldVN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQXZMMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQXZMeUJVVDBSUE9pQm1hWGhjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdMeTljY2x4dUlDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdWMlpXNTBPaUJDVTFOdmNuUnBibWRTWlhGMVpYTjBSWFpsYm5RZ1BTQjdJRVYyWlc1MFJHRjBZVG9nZXlCRmRtVnVkRG9nWlN3Z1VISnZjRTVoYldVNklIQnliM0FzSUVGell6b2dZWE5qSUgwc0lFUmhkR0ZUYjNWeVkyVk9ZVzFsT2lCZmRHaHBjeTV2Y0hScGIyNXpMbVJoZEdGVGIzVnlZMlV1Ym1GdFpTQjlPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWDNSb2FYTXVibTkwYVdaNVRHbHpkR1Z1WlhKektHRndjRVJoZEdGRmRtVnVkSE11VDA1ZlUwOVNWRWxPUjE5U1JWRlZSVk5VUlVRc0lHVjJaVzUwS1R0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnZlNrN1hISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdZMnhsWVhKSGNtbGtLQ2tnZTF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ2NtOTNjeUE5SUhSb2FYTXVabWx1WkVWc1pXMWxiblJ6S0NjdVozSnBaQzF5YjNjbktUdGNjbHh1SUNBZ0lDQWdJQ0J5YjNkekxtWnZja1ZoWTJnb0tISnZkeWtnUFQ0Z2RHaHBjeTV5WlcxdmRtVkZiR1Z0Wlc1MEtISnZkeWtwTzF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0F2THlCeVpXMXZkbVVnWVd4c0lHVjRZMlZ3ZENCMGFHVWdkR1Z0Y0d4aGRHVWdjbTkzWEhKY2JpQWdJQ0FnSUNBZ2RtRnlJSFJsYlhCc1lYUmxVbTkzSUQwZ2RHaHBjeTVpYjJSNUxtZGxkRlJsYlhCc1lYUmxVbTkzS0NrN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1aWIyUjVMbkp2ZDNNZ1BTQmJkR1Z0Y0d4aGRHVlNiM2RkTzF4eVhHNGdJQ0FnZlR0Y2NseHVYSEpjYmlBZ0lDQXZLaXBjY2x4dUlDQWdJQ0FxSUVGd2NHeDVJSFpwYzJsaWFXeHBkSGtnWVc1a0lITnBlbVVnYzJWMGRHbHVaM01nWm5KdmJTQnpkRzl5WlNCamIyOXJhV1V1WEhKY2JpQWdJQ0FnS2lCVWFHbHpJR2hsYkhCeklIUm9aU0IxYzJWeUlHNXZkQ0IwYnlCeVpTMWhjbkpoYm1kbElHTnZiSE1nWW1GelpXUWdiMjRnZEdobGFYSWdibVZsWkhNZ1lXeHNJSFJvWlNCMGFXMWxJSFJvWlhrZ2IzQmxiaUIwYUdVZ2MyTnlaV1Z1WEhKY2JpQWdJQ0FnS2lCQWNHRnlZVzBnZTBKVFJHRjBZVlJoWW14bFEyVnNiSDBnWTI5c1hISmNiaUFnSUNBZ0tpQkFjR0Z5WVcwZ2UyRnVlWDBnYzJWMGRHbHVaM05jY2x4dUlDQWdJQ0FxTDF4eVhHNGdJQ0FnWVhCd2JIbERiMnhUWlhSMGFXNW5jeWhqYjJ3NklFSlRSR0YwWVZSaFlteGxRMlZzYkN3Z2MyVjBkR2x1WjNNNklFSlRRMjlzZFcxdVUyVjBkR2x1WjNNcElIdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ2FXWWdLQ0Z6WlhSMGFXNW5jeUI4ZkNCMGFHbHpMbWx6Ulcxd2RIbFBZbW9vYzJWMGRHbHVaM01wS1NCeVpYUjFjbTQ3WEhKY2JseHlYRzRnSUNBZ0lDQWdJR2xtSUNoelpYUjBhVzVuY3k1V2FYTnBZbXhsSUNFOVBTQjBjblZsS1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdOdmJDNTJhWE5wWW14bElEMGdabUZzYzJVN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUNBZ0lDQnBaaUFvYzJWMGRHbHVaM011VjJsa2RHZ3BJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdZMjlzTG1OemN5QTlJSHNnSjNCdmMybDBhVzl1SnpvZ0ozSmxiR0YwYVhabEp5d2dKM2RwWkhSb0p6b2djMlYwZEdsdVozTXVWMmxrZEdnZ2ZUdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0I5TzF4eVhHNWNjbHh1SUNBZ0lDOHFLbHh5WEc0Z0lDQWdJQ29nUVhCd2JIa2dZMjlzZFcxdUlISmxMVzl5WkdWeWFXNW5JR0poYzJWa0lHOXVJSFJvWlNCemRHOXlaV1FnWTI5dmEybGxYSEpjYmlBZ0lDQWdLaUJVYUdseklHaGxiSEJ6SUhSb1pTQjFjMlZ5SUhSdklHNXZkQ0J5WlMxdmNtUmxjaUIwYUdVZ1kyOXNkVzF1Y3lCbGRtVnllWFJwYldVZ2RHaGxlU0J2Y0dWdUlIUm9aU0J6WTNKbFpXNHVYSEpjYmlBZ0lDQWdLaUJBY0dGeVlXMGdleXA5SUhObGRIUnBibWR6SUZ4eVhHNGdJQ0FnSUNvZ1FISmxkSFZ5Ym5NZ2UwSlRSR0YwWVZSaFlteGxRMjlzUkdWbWFXNXBkR2x2Ymx0ZGZWeHlYRzRnSUNBZ0lDb3ZYSEpjYmlBZ0lDQmhjSEJzZVVOdmJFOXlaR1Z5YVc1bktITmxkSFJwYm1kek9pQjdJRnQ0T2lCemRISnBibWRkT2lCQ1UwTnZiSFZ0YmxObGRIUnBibWR6T3lCOUtUb2dRbE5FWVhSaFZHRmliR1ZEYjJ4RVpXWnBibWwwYVc5dVcxMGdlMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQnBaaUFvSVhObGRIUnBibWR6SUh4OElIUm9hWE11YVhORmJYQjBlVTlpYWloelpYUjBhVzVuY3lrcElISmxkSFZ5YmlCMGFHbHpMbTl3ZEdsdmJuTXVZMjlzUkdWbWFXNXBkR2x2Ymp0Y2NseHVJQ0FnSUNBZ0lDQjJZWElnYjNKa1pYSmxaRU52YkhNZ1BTQmJYVHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdkR2hwY3k1dmNIUnBiMjV6TG1OdmJFUmxabWx1YVhScGIyNHVabTl5UldGamFDZ29ZMjlzUkdWbUxDQnBLU0E5UGlCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmpiMnhUWlhSMGFXNW5PaUJDVTBOdmJIVnRibE5sZEhScGJtZHpJRDBnYzJWMGRHbHVaM05iWTI5c1JHVm1MbEJ5YjNCT1lXMWxYVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0NGamIyeFRaWFIwYVc1bktTQnlaWFIxY200N1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUc5eVpHVnlaV1JEYjJ4elcyTnZiRk5sZEhScGJtY3VVRzl6YVhScGIyNWRJRDBnWTI5c1JHVm1PMXh5WEc0Z0lDQWdJQ0FnSUgwcE8xeHlYRzVjY2x4dUlDQWdJQ0FnSUNBdkx5QnBiaUJqWVhObElIUm9aU0JqYjJ3Z2MyVjBkR2x1WjNNZ2MzUnZjbVZrSUdsdUlHTnZiMnRwWlNCaGNtVWdibTkwSUcxaGRHTm9hVzVuTENCM1pTQnlaWFIxY200Z2RHaGxJR04xY25KbGJuUWdZMjlzSUdSbFptbHVhWFJwYjI1Y2NseHVJQ0FnSUNBZ0lDQnBaaUFvYjNKa1pYSmxaRU52YkhNdWJHVnVaM1JvSUNFOVBTQjBhR2x6TG05d2RHbHZibk11WTI5c1JHVm1hVzVwZEdsdmJpNXNaVzVuZEdncElISmxkSFZ5YmlCMGFHbHpMbTl3ZEdsdmJuTXVZMjlzUkdWbWFXNXBkR2x2Ymp0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJRzl5WkdWeVpXUkRiMnh6TzF4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lDOHFLbHh5WEc0Z0lDQWdJQ29nUUhCaGNtRnRJSHR2WW1wbFkzUmJYWDBnWkdGMFlWeHlYRzRnSUNBZ0lDb2dRSEJoY21GdElIdENVMFJoZEdGVVlXSnNaVkJoWjJsdVowMWxkR0ZFWVhSaGZTQmJiV1YwWVVSaGRHRmRYSEpjYmlBZ0lDQWdLaUJBY21WMGRYSnVjMXh5WEc0Z0lDQWdJQ292WEhKY2JpQWdJQ0JpYVc1a1JHRjBZVk52ZFhKalpTaGtZWFJoT2lCdlltcGxZM1JiWFN3Z2JXVjBZVVJoZEdFNklFSlRSR0YwWVZSaFlteGxVR0ZuYVc1blRXVjBZVVJoZEdFcElIdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0x5OGdaR1ZpZFdkblpYSTdYSEpjYmlBZ0lDQWdJQ0FnYVdZZ0tDRmtZWFJoSUh4OElHUmhkR0V1YkdWdVozUm9JRHc5SURBcElISmxkSFZ5Ymp0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlIQmhaMlZrUkdGMFlTQTlJR1JoZEdFN1hISmNiaUFnSUNBZ0lDQWdhV1lnS0hSb2FYTXViM0IwYVc5dWN5NWtZWFJoVTI5MWNtTmxMbWx6VW1WdGIzUmxJQ0U5UFNCMGNuVmxLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSEJoWjJWa1JHRjBZU0E5SUhSb2FYTXViM0IwYVc5dWN5NWtZWFJoVTI5MWNtTmxMbWRsZEZCaFoyVlBabVpzYVc1bFEwSW9iV1YwWVVSaGRHRXVjR0ZuWlVsdVpHVjRMQ0IwYUdsekxtOXdkR2x2Ym5NdVpHRjBZVk52ZFhKalpTNWtZWFJoTG1sdWFYUkVZWFJoTENCdFpYUmhSR0YwWVNrN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUNBZ0lDQXZLaXBjY2x4dUlDQWdJQ0FnSUNBZ0tpQkFkSGx3WlNCN1FsTkVZWFJoVkdGaWJHVlNiM2Q5WEhKY2JpQWdJQ0FnSUNBZ0lDb3ZYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlHeGhjM1JTYjNjNklFSlRSR0YwWVZSaFlteGxVbTkzSUQwZ2JuVnNiRHRjY2x4dUlDQWdJQ0FnSUNCd1lXZGxaRVJoZEdFdVptOXlSV0ZqYUNnb2Rpd2dhU2tnUFQ0Z2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMllYSWdjbTkzSUQwZ2RHaHBjeTVoWkdST1pYZFNiM2NvZGl3Z2RISjFaU2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSEp2ZHk1eWIzZERZWFJsWjI5eWVTQTlJQ2RRVWtWVFZFbE9SU2M3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR3hoYzNSU2IzY2dQU0J5YjNjN1hISmNiaUFnSUNBZ0lDQWdmU2s3WEhKY2JseHlYRzRnSUNBZ0lDQWdJQzh2WEhKY2JpQWdJQ0FnSUNBZ0x5OGdkWEJrWVhSbElIUm9aU0J3WVdkcGJtRjBhVzl1SUdOdmJYQnZibVZ1ZEZ4eVhHNGdJQ0FnSUNBZ0lDOHZYSEpjYmlBZ0lDQWdJQ0FnYVdZZ0tIUm9hWE11YjNCMGFXOXVjeTVsYm1GaWJHVkpibVpwYm1sMFpWTmpjbTlzYkNBaFBUMGdkSEoxWlNsY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWlhVzVrVUdGbmFXNWhkRzl5S0cxbGRHRkVZWFJoS1R0Y2NseHVJQ0FnSUNBZ0lDQmxiSE5sSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXBibVpwYm1sMFpWTmpjbTlzYkdWeUxtbHVhWFJOWlhSaFJHRjBZU0E5SUcxbGRHRkVZWFJoTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtbHVabWx1YVhSbFUyTnliMnhzWlhJdWFXNXBkRVJoZEdFZ1BTQndZV2RsWkVSaGRHRTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hzWVhOMFVtOTNLU0I3WEhKY2JseHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1cGJtWnBibWwwWlZOamNtOXNiR1Z5TG5WdWIySnpaWEoyWlNncE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1cGJtWnBibWwwWlZOamNtOXNiR1Z5TG05aWMyVnlkbVVvYkdGemRGSnZkeTVsYkdWdFpXNTBLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUgxY2NseHVYSEpjYmx4eVhHNGdJQ0FnTHlvcVhISmNiaUFnSUNBZ0tpQkFjR0Z5WVcwZ2UwSlRSR0YwWVZSaFlteGxVR0ZuYVc1blRXVjBZVVJoZEdGOUlGdHdZV2RwYm1GMGFXOXVUVzlrWld4ZFhISmNiaUFnSUNBZ0tpOWNjbHh1SUNBZ0lHSnBibVJRWVdkcGJtRjBiM0lvY0dGbmFXNWhkR2x2YmsxdlpHVnNPaUJDVTBSaGRHRlVZV0pzWlZCaFoybHVaMDFsZEdGRVlYUmhJRDBnYm1WM0lFSlRSR0YwWVZSaFlteGxVR0ZuYVc1blRXVjBZVVJoZEdFb0tTa2dlMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQnBaaUFvSVhSb2FYTXVjR0ZuYVc1aGRHOXlMbVZzWlcxbGJuUWdmSHdnS0hSb2FYTXVjR0ZuYVc1aGRHOXlMbTl3ZEdsdmJuTXViV1YwWVVSaGRHRXVkRzkwWVd4U1pXTnZjbVJ6SUNFOVBTQndZV2RwYm1GMGFXOXVUVzlrWld3dWRHOTBZV3hTWldOdmNtUnpLU2tnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuQmhaMmx1WVhSdmNpNXZjSFJwYjI1ekxtMWxkR0ZFWVhSaElEMGdjR0ZuYVc1aGRHbHZiazF2WkdWc08xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbkJoWjJsdVlYUnZjaTV5Wlc1a1pYSW9LVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1amIyNTBZV2x1WlhKRmJHVnRaVzUwTG1Gd2NHVnVaRU5vYVd4a0tIUm9hWE11Y0dGbmFXNWhkRzl5TG1Wc1pXMWxiblFwTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ0x5b3FYSEpjYmlBZ0lDQWdLaUJBY0dGeVlXMGdlMjlpYW1WamRIMGdjbTkzUkdGMFlWeHlYRzRnSUNBZ0lDb2dRSEJoY21GdElIdGliMjlzWldGdWZTQnBjMFY0YVhOMGFXNW5VbVZqYjNKa1hISmNiaUFnSUNBZ0tpOWNjbHh1SUNBZ0lHRmtaRTVsZDFKdmR5aHliM2RFWVhSaE9pQnZZbXBsWTNRc0lHbHpSWGhwYzNScGJtZFNaV052Y21RNklHSnZiMnhsWVc0cElIdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ2NtOTNUblZ0WW1WeUlEMGdkR2hwY3k1aWIyUjVMbWRsZEU1bGVIUlNiM2RKYm1SbGVDZ3BPMXh5WEc0Z0lDQWdJQ0FnSUhaaGNpQnliM2NnUFNCMGFHbHpMbUp2WkhrdVoyVjBWR1Z0Y0d4aGRHVlNiM2NvS1M1amJHOXVaU2dwTzF4eVhHNGdJQ0FnSUNBZ0lISnZkeTV2Y0hScGIyNXpMbWx6VkdWdGNHeGhkR1ZTYjNjZ1BTQm1ZV3h6WlR0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnY205M0xtTnpjeUE5SUhzZ0oyUnBjM0JzWVhrbk9pQW5kR0ZpYkdVdGNtOTNKeUI5TzF4eVhHNGdJQ0FnSUNBZ0lISnZkeTUyYVhOcFlteGxJRDBnZEhKMVpUdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJRjkwYUdseklEMGdkR2hwY3p0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlHbHVjSFYwY3lBOUlISnZkeTVuWlhSSmJuQjFkSE1vS1R0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnTHk4Z1pHVmlkV2RuWlhJN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUdsdWNIVjBjeTVtYjNKRllXTm9LR1oxYm1OMGFXOXVJQ2gyTENCcEtTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJwYm5CMWRDQTlJSFk3WEhKY2JseHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMllYSWdiMnhrU1dRZ1BTQnBibkIxZEM1cFpEdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXNXdkWFF1YVdRZ1BTQnZiR1JKWkNBcklGd2lYMXdpSUNzZ2NtOTNUblZ0WW1WeU8xeHlYRzVjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUdObGJHeFFjbTl3VG1GdFpTQTlJR2x1Y0hWMExtOXdkR2x2Ym5NdVRXOWtaV3hPWVcxbE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBdkx5QmpiMjV6YjJ4bExteHZaeWduWTJWc2JDMXdjbThuTENCalpXeHNVSEp2Y0U1aGJXVXBPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlHTmxiR3hXWVd3Z1BTQnliM2RFWVhSaFcyTmxiR3hRY205d1RtRnRaVjA3WEhKY2JseHlYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9hVzV3ZFhRdWIzQjBhVzl1Y3k1SmJuQjFkRlI1Y0dVZ1BUMDlJQ2RrWVhSbEp5QW1KaUJqWld4c1ZtRnNLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllYSWdaR0YwWlNBOUlHNWxkeUJFWVhSbEtHTmxiR3hXWVd3cE8xeHlYRzVjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsdWNIVjBMblpoYkNBOUlGOTBhR2x6TG5SdlJHRjBaVVJwYzNCc1lYbEdiM0p0WVhRb1pHRjBaU2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdaV3h6WlNCcFppQW9hVzV3ZFhRZ2FXNXpkR0Z1WTJWdlppQkNVMFJoZEdGVVlXSnNaVU5vWldOclFtOTRYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FtSmlBb1kyVnNiRlpoYkNBOVBUMGdKM1J5ZFdVbklIeDhJR05sYkd4V1lXd2dQVDA5SUNkVWNuVmxKeUI4ZkNCalpXeHNWbUZzSUQwOVBTQjBjblZsS1NrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhVzV3ZFhRdWRtRnNJRDBnZEhKMVpUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCbGJITmxJR2xtSUNoalpXeHNWbUZzSUNFOVBTQjFibVJsWm1sdVpXUXBJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsdWNIVjBMblpoYkNBOUlHTmxiR3hXWVd3N1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDOHZJR1JsWW5WbloyVnlPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQXZMeUJVVDBSUE9pQkpjeUJwZENCdVpXTmxjM05oY25rL1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHBjMFY0YVhOMGFXNW5VbVZqYjNKa0lDRTlQU0IwY25WbEtTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwYm5CMWRDNWthWE5oWW14bFpDQTlJR1poYkhObE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhVzV3ZFhRdWNtVmhaRzl1YkhrZ1BTQm1ZV3h6WlR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXNXdkWFF1Wld4bGJXVnVkQzVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLQ2RqYUdGdVoyVW5MQ0FvWlNrZ1BUNGdlMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISnZkeTVwYzFKdmQwUnBjblI1SUQwZ2RISjFaVHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZWElnY205M1EyRjBJRDBnY205M0xuSnZkME5oZEdWbmIzSjVPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tISnZkME5oZENBaFBUMGdKMEZFUkVWRUp5a2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISnZkeTV5YjNkRFlYUmxaMjl5ZVNBOUlDZFZVRVJCVkVWRUp6dGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXZMeUJ5WlcxdmRtVWdZVzU1SUhCeVpYWnBiM1Z6SUdWeWNtOXljMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVc1d2RYUXVjbVZ0YjNabFEyeGhjM01vSjJsekxXbHVkbUZzYVdRbktTNXdjbTl3S0NkMGFYUnNaU2NzSUNjbktUdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllYSWdkRzl2YkhScGNDQTlJRlJ2YjJ4MGFYQXVaMlYwU1c1emRHRnVZMlVvWlM1MFlYSm5aWFFnWVhNZ1JXeGxiV1Z1ZENrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvZEc5dmJIUnBjQ2xjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBiMjlzZEdsd0xtUnBjM0J2YzJVb0tUdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllYSWdjbTkzUkdGMFlTQTlJSEp2ZHk1blpYUlNiM2RFWVhSaFJYaDBLQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllYSWdaSE1nUFNCZmRHaHBjeTV2Y0hScGIyNXpMbVJoZEdGVGIzVnlZMlV1Ym1GdFpUdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdaM0pwWkZWd1pHRjBaVVYyWlc1ME9pQkNVMGR5YVdSVmNHUmhkR1ZrUlhabGJuUWdQU0I3SUVWMlpXNTBSR0YwWVRvZ2V5QkZkbVZ1ZERvZ1pTd2dSM0pwWkRvZ1gzUm9hWE1nZlN3Z1JHRjBZVk52ZFhKalpVNWhiV1U2SUdSeklIMDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2NtOTNWWEJrWVhSbFpFVjJaVzUwT2lCQ1UxSnZkMVZ3WkdGMFpXUkZkbVZ1ZENBOUlIc2dSWFpsYm5SRVlYUmhPaUI3SUVWMlpXNTBPaUJsTENCU2IzYzZJSEp2ZDBSaGRHRWdmU3dnUkdGMFlWTnZkWEpqWlU1aGJXVTZJR1J6SUgwN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWm1sbGJHUlZjR1JoZEdWa1JYWmxiblE2SUVKVFJtbGxiR1JWY0dSaGRHVmtSWFpsYm5RZ1BTQjdJRVYyWlc1MFJHRjBZVG9nZXlCRmRtVnVkRG9nWlN3Z1VtOTNPaUJ5YjNkRVlYUmhMQ0JHYVdWc1pEb2dhVzV3ZFhRZ2ZTd2dSR0YwWVZOdmRYSmpaVTVoYldVNklHUnpJSDA3WEhKY2JseHlYRzVjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUY5MGFHbHpMbTV2ZEdsbWVVeHBjM1JsYm1WeWN5aGhjSEJFWVhSaFJYWmxiblJ6TGs5T1gwZFNTVVJmVlZCRVFWUkZSQ3dnWjNKcFpGVndaR0YwWlVWMlpXNTBLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUY5MGFHbHpMbTV2ZEdsbWVVeHBjM1JsYm1WeWN5aGhjSEJFWVhSaFJYWmxiblJ6TGs5T1gwWkpSVXhFWDFWUVJFRlVSVVFzSUdacFpXeGtWWEJrWVhSbFpFVjJaVzUwS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGOTBhR2x6TG01dmRHbG1lVXhwYzNSbGJtVnljeWhoY0hCRVlYUmhSWFpsYm5SekxrOU9YMUpQVjE5VlVFUkJWRVZFTENCeWIzZFZjR1JoZEdWa1JYWmxiblFwTzF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTazdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwYm5CMWRDNWxiR1Z0Wlc1MExtRmtaRVYyWlc1MFRHbHpkR1Z1WlhJb0oyWnZZM1Z6Snl3Z1puVnVZM1JwYjI0Z0tHVXBJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUY5MGFHbHpMbUp2WkhrdVptOWpkWE5TYjNjb2NtOTNLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmU2s3WEhKY2JpQWdJQ0FnSUNBZ2ZTazdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lISnZkeTVsYkdWdFpXNTBMbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSW9KMk5zYVdOckp5d2dablZ1WTNScGIyNGdLR1VwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWDNSb2FYTXVZbTlrZVM1bWIyTjFjMUp2ZHloeWIzY3BPMXh5WEc0Z0lDQWdJQ0FnSUgwcE8xeHlYRzVjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbUp2WkhrdVlXUmtVbTkzS0hKdmR5azdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lIWmhjaUIyYVhOcFlteGxTVzV3ZFhSeklEMGdjbTkzTG1kbGRGWnBjMmxpYkdWSmJuQjFkSE1vS1R0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnYVdZZ0tIWnBjMmxpYkdWSmJuQjFkSE11YkdWdVozUm9JRDRnTUNrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMllYSWdiR0Z6ZEVsdWNIVjBJRDBnZG1semFXSnNaVWx1Y0hWMGMxdDJhWE5wWW14bFNXNXdkWFJ6TG14bGJtZDBhQ0F0SURGZE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCc1lYTjBTVzV3ZFhRdVpXeGxiV1Z1ZEM1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0NkclpYbGtiM2R1Snl3Z0tHVXBJRDArSUhSb2FYTXViMjVKYm5CMWRFdGxlVVJ2ZDI0cE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dVhISmNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlISnZkenRjY2x4dVhISmNiaUFnSUNCOU8xeHlYRzVjY2x4dUlDQWdJSFJ2UkdGMFpVUnBjM0JzWVhsR2IzSnRZWFFvWkdGMFpUb2dSR0YwWlNrZ2UxeHlYRzVjY2x4dUlDQWdJQ0FnSUNCMllYSWdaR0Y1SUQwZ1pHRjBaUzVuWlhSRVlYUmxLQ2tzWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJRzF2Ym5Sb0lEMGdaR0YwWlM1blpYUk5iMjUwYUNncElDc2dNU3hjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdlV1ZoY2lBOUlHUmhkR1V1WjJWMFJuVnNiRmxsWVhJb0tUdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ2JHVjBJRzF2Ym5Sb1UzUnlJRDBnS0cxdmJuUm9JRHdnTVRBZ1B5QmNJakJjSWlBNklGd2lYQ0lwSUNzZ2JXOXVkR2c3WEhKY2JpQWdJQ0FnSUNBZ2JHVjBJR1JoZVZOMGNpQTlJQ2hrWVhrZ1BDQXhNQ0EvSUZ3aU1Gd2lJRG9nWENKY0lpa2dLeUJrWVhrN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUI1WldGeUlDc2dYQ0l0WENJZ0t5QnRiMjUwYUZOMGNpQXJJRndpTFZ3aUlDc2daR0Y1VTNSeU8xeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJSFJ2VkdsdFpVUnBjM0JzWVhsR2IzSnRZWFFvWkdGMFpUb2dSR0YwWlNrZ2UxeHlYRzRnSUNBZ0lDQWdJSFpoY2lCb2IzVnlJRDBnWkdGMFpTNW5aWFJJYjNWeWN5Z3BMRnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnRhVzRnUFNCa1lYUmxMbWRsZEUxcGJuVjBaWE1vS1R0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnYkdWMElHaHZkWEpUZEhJZ1BTQW9hRzkxY2lBOElERXdJRDhnWENJd1hDSWdPaUJjSWx3aUtTQXJJR2h2ZFhJN1hISmNiaUFnSUNBZ0lDQWdiR1YwSUcxcGJsTjBjaUE5SUNodGFXNGdQQ0F4TUNBL0lGd2lNRndpSURvZ1hDSmNJaWtnS3lCdGFXNDdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCb2IzVnlVM1J5SUNzZ1hDSTZYQ0lnS3lCdGFXNVRkSEk3WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ0x5b3FYSEpjYmlBZ0lDQWdLaUJjY2x4dUlDQWdJQ0FxSUVCd1lYSmhiU0I3UWxORVlYUmhWR0ZpYkdWU2IzZDlJSEp2ZHlCY2NseHVJQ0FnSUNBcUlFQndZWEpoYlNCN0tuMGdaU0JjY2x4dUlDQWdJQ0FxSUVCeVpYUjFjbTV6SUZ4eVhHNGdJQ0FnSUNvdlhISmNiaUFnSUNCdmJrbHVjSFYwUzJWNVJHOTNiaWhsT2lCTFpYbGliMkZ5WkVWMlpXNTBLU0I3WEhKY2JseHlYRzRnSUNBZ0lDQWdJQzh2WEhKY2JpQWdJQ0FnSUNBZ0x5OGdhVzV6WlhKMElHRWdibVYzSUhKdmR5QnBaaUJwZEhNZ2RHaGxJR3hoYzNRZ2FXNXdkWFFnYVc0Z2RHaGxJSEp2ZDF4eVhHNGdJQ0FnSUNBZ0lDOHZJQ0FnWEhKY2JseHlYRzRnSUNBZ0lDQWdJR2xtSUNobExuZG9hV05vSUNFOVBTQTVJSHg4SUdVdWMyaHBablJMWlhrZ1BUMDlJSFJ5ZFdVcElISmxkSFZ5Ymp0Y2NseHVJQ0FnSUNBZ0lDQXZMeUJrWldKMVoyZGxjanRjY2x4dUlDQWdJQ0FnSUNCMllYSWdkbWx6YVdKc1pWSnZkM01nUFNCMGFHbHpMbUp2WkhrdVoyVjBWbWx6YVdKc1pWSnZkM01vS1R0Y2NseHVJQ0FnSUNBZ0lDQnBaaUFvZG1semFXSnNaVkp2ZDNNdWJHVnVaM1JvSUR3OUlEQXBJSEpsZEhWeWJqdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ2JHRnpkRkp2ZDBsdVpHVjRJRDBnZG1semFXSnNaVkp2ZDNOYmRtbHphV0pzWlZKdmQzTXViR1Z1WjNSb0lDMGdNVjB1Y205M1NXNWtaWGc3WEhKY2JseHlYRzRnSUNBZ0lDQWdJSFpoY2lCeWIzY2dQU0FvWlM1MFlYSm5aWFFnWVhNZ1JXeGxiV1Z1ZENrdVkyeHZjMlZ6ZENnbmRISW5LVHRjY2x4dUlDQWdJQ0FnSUNCcFppQW9JWEp2ZHlrZ2NtVjBkWEp1TzF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ2NHRnlaVzUwU1c1a1pYZ2dQU0J3WVhKelpVbHVkQ2h5YjNjdVoyVjBRWFIwY21saWRYUmxLQ2RrWVhSaExYSnZkMmx1WkdWNEp5a3BPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQXZMeUJqYjI1emIyeGxMbXh2WnlobmNtbGtVbTkzY3l3Z1kzVnljbVZ1ZEZKdmQwbHVaR1Y0S1R0Y2NseHVJQ0FnSUNBZ0lDQnBaaUFvYkdGemRGSnZkMGx1WkdWNElEMDlQU0J3WVhKbGJuUkpibVJsZUNrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMllYSWdaVkp2ZHlBOUlIUm9hWE11WVdSa1JXMXdkSGxTYjNjb0tUdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0I5TzF4eVhHNWNjbHh1SUNBZ0lHRmtaRVZ0Y0hSNVVtOTNLQ2tnZTF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJsYlhCMGVWSnZkeUE5SUhSb2FYTXVZV1JrVG1WM1VtOTNLSFJvYVhNdVkzSmxZWFJsUlcxd2RIbFNiM2RFWVhSaEtDa3NJR1poYkhObEtUdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJR2x1Y0hWMGN5QTlJR1Z0Y0hSNVVtOTNMbWRsZEZacGMybGliR1ZKYm5CMWRITW9LVHRjY2x4dUlDQWdJQ0FnSUNCcFppQW9hVzV3ZFhSekxteGxibWQwYUNBK0lEQXBJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhVzV3ZFhSeld6QmRMbVp2WTNWektDazdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lDQWdJQ0JsYlhCMGVWSnZkeTV5YjNkRFlYUmxaMjl5ZVNBOUlDZEJSRVJGUkNkY2NseHVJQ0FnSUNBZ0lDQmxiWEIwZVZKdmR5NXBjMUp2ZDBScGNuUjVJRDBnZEhKMVpUdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ2JHVjBJR2R5YVdSVmNHUmhkR1ZGZG1WdWREb2dRbE5IY21sa1ZYQmtZWFJsWkVWMlpXNTBJRDBnZXlCRmRtVnVkRVJoZEdFNklIc2dSM0pwWkRvZ2RHaHBjeXdnUlhabGJuUTZJR1Z0Y0hSNVVtOTNJSDBzSUVSaGRHRlRiM1Z5WTJWT1lXMWxPaUIwYUdsekxtOXdkR2x2Ym5NdVpHRjBZVk52ZFhKalpTNXVZVzFsSUgwN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1dWIzUnBabmxNYVhOMFpXNWxjbk1vWVhCd1JHRjBZVVYyWlc1MGN5NVBUbDlIVWtsRVgxVlFSRUZVUlVRc0lHZHlhV1JWY0dSaGRHVkZkbVZ1ZENrN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUdsbUlDaDBhR2x6TG05d2RHbHZibk11Wlc1aFlteGxTVzVtYVc1cGRHVlRZM0p2Ykd3Z1BUMDlJSFJ5ZFdVcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVwYm1acGJtbDBaVk5qY205c2JHVnlMblZ1YjJKelpYSjJaU2dwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtbHVabWx1YVhSbFUyTnliMnhzWlhJdWIySnpaWEoyWlNobGJYQjBlVkp2ZHk1bGJHVnRaVzUwS1R0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCbGJYQjBlVkp2ZHp0Y2NseHVJQ0FnSUgwN1hISmNibHh5WEc0Z0lDQWdZM0psWVhSbFJXMXdkSGxTYjNkRVlYUmhLQ2tnZTF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJ5WldOdmNtUWdQU0I3ZlR0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG05d2RHbHZibk11WTI5c1JHVm1hVzVwZEdsdmJpNW1iM0pGWVdOb0tDaDJMQ0JwS1NBOVBpQjdJSEpsWTI5eVpGdDJMbEJ5YjNCT1lXMWxYU0E5SUhWdVpHVm1hVzVsWkNCOUtWeHlYRzRnSUNBZ0lDQWdJQzh2WkdWaWRXZG5aWEk3WEhKY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhKbFkyOXlaRHRjY2x4dUlDQWdJSDA3WEhKY2JseHlYRzRnSUNBZ2IyNUlaV0ZrWlhKT1pYaDBLR1YyWlc1MFFYSm5jem9nUWxORmRtVnVkQ3dnWm1WMFkyaEhjbWxrT2lCaWIyOXNaV0Z1S1NCN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUdsbUlDZ2haWFpsYm5SQmNtZHpJSHg4SUNGbGRtVnVkRUZ5WjNNdVJYWmxiblJFWVhSaEtTQnlaWFIxY200N1hISmNibHh5WEc0Z0lDQWdJQ0FnSUM4dklHTnZibk52YkdVdWJHOW5LR1YyWlc1MFFYSm5jeWs3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTV5WlhObGRGTnZjblJwYm1jb0tUdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtTnNaV0Z5UjNKcFpDZ3BPMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVjR0ZuYVc1aGRHOXlMbU5zWldGeUtDazdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lHbG1JQ2htWlhSamFFZHlhV1FnSVQwOUlIUnlkV1VwSUhKbGRIVnlianRjY2x4dUlDQWdJQ0FnSUNBdkwxeHlYRzRnSUNBZ0lDQWdJQzh2SUdabGRHTm9JR2R5YVdRZ1pHRjBZVnh5WEc0Z0lDQWdJQ0FnSUM4dklDQWdJQ0FnSUNCY2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG1abGRHTm9SM0pwWkZCaFoyVW9NU2s3WEhKY2JseHlYRzRnSUNBZ0lDQWdJR2xtSUNoMGFHbHpMbTl3ZEdsdmJuTXVaVzVoWW14bFNXNW1hVzVwZEdWVFkzSnZiR3dnUFQwOUlIUnlkV1VwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXBibVpwYm1sMFpWTmpjbTlzYkdWeUxtTjFjbkpsYm5SUVlXZGxJRDBnTVR0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQjlPMXh5WEc1Y2NseHVJQ0FnSUM4cUtseHlYRzRnSUNBZ0lDb2dRSEJoY21GdElIdHVkVzFpWlhKOUlIQmhaMlZKYm1SbGVGeHlYRzRnSUNBZ0lDb3ZYSEpjYmlBZ0lDQm1aWFJqYUVkeWFXUlFZV2RsS0hCaFoyVkpibVJsZURvZ2JuVnRZbVZ5S1NCN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUdsbUlDaDBhR2x6TG05d2RHbHZibk11WkdGMFlWTnZkWEpqWlM1cGMxSmxiVzkwWlNBOVBUMGdkSEoxWlNrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMllYSWdkWEpzSUQwZ2RHaHBjeTV2Y0hScGIyNXpMbVJoZEdGVGIzVnlZMlV1ZFhKc0tIQmhaMlZKYm1SbGVDazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2doZFhKc0tTQnlaWFIxY200N1hISmNibHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1oMGRIQkRiR2xsYm5RdVoyVjBLSHNnZFhKc09pQjFjbXdnZlNrN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUdWc2MyVWdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnWkdGMFlTQTlJSFJvYVhNdWIzQjBhVzl1Y3k1a1lYUmhVMjkxY21ObExtUmhkR0V1YVc1cGRFUmhkR0U3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCdFpHRjBZU0E5SUhSb2FYTXViM0IwYVc5dWN5NWtZWFJoVTI5MWNtTmxMbVJoZEdFdWJXVjBZVVJoZEdFN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUM4dmRtRnlJR05pSUQwZ2RHaHBjeTV2Y0hScGIyNXpMbVJoZEdGVGIzVnlZMlV1WjJWMFVHRm5aVTltWm14cGJtVkRRanRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdMeTkyWVhJZ2NHRm5aVVJoZEdFZ1BTQmpZaWh3WVdkbFNXNWtaWGdzSUdSaGRHRXNJRzFrWVhSaEtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJR1psZEdOb1VtVmpiM0prUlhabGJuUTZJRUpUUm1WMFkyaFNaV052Y21SRmRtVnVkQ0E5SUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lFUmhkR0ZUYjNWeVkyVk9ZVzFsT2lCMGFHbHpMbTl3ZEdsdmJuTXVaR0YwWVZOdmRYSmpaUzV1WVcxbExGeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdSWFpsYm5SRVlYUmhPaUI3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdSR0YwWVRvZ1pHRjBZU3hjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQk5aWFJoUkdGMFlUb2dibVYzSUVKVFJHRjBZVlJoWW14bFVHRm5hVzVuVFdWMFlVUmhkR0VvY0dGblpVbHVaR1Y0TENCdFpHRjBZUzV3WVdkbFUybDZaU3dnYldSaGRHRXVkRzkwWVd4U1pXTnZjbVJ6S1Z4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOU8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbTV2ZEdsbWVVeHBjM1JsYm1WeWN5aGhjSEJFWVhSaFJYWmxiblJ6TGs5T1gwWkZWRU5JWDBkU1NVUmZVa1ZEVDFKRUxDQm1aWFJqYUZKbFkyOXlaRVYyWlc1MEtUdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNCdmJsTmhkbVZTWldOdmNtUW9aWFpsYm5SQmNtZHpPaUJDVTBWMlpXNTBLU0I3WEhKY2JseHlYRzRnSUNBZ0lDQWdJQzh2WEhKY2JpQWdJQ0FnSUNBZ0x5OGdjbVZ0YjNabElISnZkM01nWm5KdmJTQjBhR1VnWjNKcFpDQjBhR0YwSUdoaGN5QmlaV1Z1SUdSbGJHVjBaV1JjY2x4dUlDQWdJQ0FnSUNBdkwxeHlYRzVjY2x4dUlDQWdJQ0FnSUNBdkx5QjBhR2x6TG1KdlpIa3VabWx1WkNoY0luUnlXMlJoZEdFdGNtOTNZMkYwWldkdmNuazlKMFJGVEVWVVJVUW5YVndpS1M1eVpXMXZkbVVvS1R0Y2NseHVJQ0FnSUNBZ0lDQXZMeUIwYUdsekxtSnZaSGt1Wm1sdVpDaGNJblJ5VzJSaGRHRXRjbTkzWTJGMFpXZHZjbms5SjBGRVJFVkVYMFJGVEVWVVJVUW5YVndpS1M1eVpXMXZkbVVvS1R0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnTHk5Y2NseHVJQ0FnSUNBZ0lDQXZMeUJ5WlcxdmRtVWdaV3hsYldWdWRITWdabkp2YlNCMGFHVWdjbVZoYkNCaGJtUWdkbWx5ZEhWaGJDQkVUMDFjY2x4dUlDQWdJQ0FnSUNBdkwxeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdVltOWtlUzV5YjNkelhISmNiaUFnSUNBZ0lDQWdJQ0FnSUM1bWFXeDBaWElvS0hZcElEMCtJSFl1Y205M1EyRjBaV2R2Y25rZ1BUMDlJQ2RFUlV4RlZFVkVKeUI4ZkNCMkxuSnZkME5oZEdWbmIzSjVJRDA5UFNBblFVUkVSVVJmUkVWTVJWUkZSQ2NwWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQzVtYjNKRllXTm9LQ2gyS1NBOVBpQjBhR2x6TG1KdlpIa3VjbVZ0YjNabFVtOTNLSFlwS1R0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnTHk5Y2NseHVJQ0FnSUNBZ0lDQXZMeUIzYUdWdUlHMWhhVzRnY21WamIzSmtJR2x6SUhOaGRtVmtMQ0JrYVhOaFlteGxJSFJvWlNCclpYa2dZMjlzZFcxdWN5QnZaaUIwYUdVZ1ozSnBaQ3hjY2x4dUlDQWdJQ0FnSUNBdkx5QWdJQ0FnSUNBZ1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1aWIyUjVMbkp2ZDNNdVptOXlSV0ZqYUNnb2Rpa2dQVDRnZTF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0x5OGdiV0Z5YXlCaGJHd2djbTkzY3lCd2NtVnpkR2x1WlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IyTG5KdmQwTmhkR1ZuYjNKNUlEMGdKMUJTUlZOVVNVNUZKenRjY2x4dVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUM4dklHMWhhMlVnYVdRZ2FXNXdkWFJ6SUdScGMyRmliR1ZrWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFl1WjJWMFNXNXdkWFJ6S0NrdVptbHNkR1Z5S0NoNEtTQTlQaUI0TG1selMyVjVLUzVtYjNKRllXTm9LQ2gyZUNrZ1BUNGdleUIyZUM1a2FYTmhZbXhsWkNBOUlIUnlkV1U3SUgwcE8xeHlYRzRnSUNBZ0lDQWdJSDBwTzF4eVhHNGdJQ0FnZlR0Y2NseHVYSEpjYmlBZ0lDQnZibE5oZG1WRmNuSnZjaWhsZG1WdWRFRnlaM002SUVKVFJYWmxiblFwSUh0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnTHlwY2NseHVJQ0FnSUNBZ0lDQXZMeUJKZEhNZ1lYTnpkVzFsWkNCMGFHRjBJSFJvWlNBdWJtVjBJRzEyWXlCaGNHa2dkMmxzYkNCamIyNTJaWEowSUhSb1pTQnRiMlJsYkNCemRHRjBaU0JsY25KdmNuTWdhVzUwYnlCMGFHVWdabTlzYkc5M2FXNW5JR1p2Y20xaGRGeHlYRzRnSUNBZ0lDQWdJQzh2WEhKY2JpQWdJQ0FnSUNBZ0x5OGdlMXh5WEc0Z0lDQWdJQ0FnSUM4dklDQWdJQ0JjSW1Ga1pISmxjM05sY3k1Yk1GMWNJam9nVzF3aU1Wd2lYU3dnTHk4Z1kyeHBaVzUwSUhKdmR5QnBibVJsZUZ4eVhHNGdJQ0FnSUNBZ0lDOHZJQ0FnSUNCY0ltRmtaSEpsYzNObGN5NWJNVjFjSWpvZ1cxd2lNbHdpWFN4Y2NseHVJQ0FnSUNBZ0lDQXZMeUFnSUNBZ1hDSmhaR1J5WlhOelpYTXVXekpkWENJNklGdGNJak5jSWwwc1hISmNiaUFnSUNBZ0lDQWdMeThnSUNBZ0lGd2lZV1JrY21WemMyVnpXekZkTGtOcGRIbGNJam9nVzF3aVZHaGxJRU5wZEhrNklHWnBaV3hrSUdseklISmxjWFZwY21Wa0xsd2lMQ0JjSWxSb1pTQkRhWFI1T2lCdGRYTjBJR0psSUdGMElHeGxZWE4wSURNZ1lXNWtJR0YwSUcxaGVDQXhNamdnWTJoaGNtRmpkR1Z5Y3lCc2IyNW5MbHdpWFN4Y2NseHVJQ0FnSUNBZ0lDQXZMeUFnSUNBZ1hDSmhaR1J5WlhOelpYTmJNVjB1UTI5MWJuUnllVndpT2lCYlhDSlVhR1VnUTI5MWJuUnllVG9nWm1sbGJHUWdhWE1nY21WeGRXbHlaV1F1WENJc0lGd2lWR2hsSUVOdmRXNTBjbms2SUcxMWMzUWdZbVVnWVhRZ2JHVmhjM1FnTWlCaGJtUWdZWFFnYldGNElERXlPQ0JqYUdGeVlXTjBaWEp6SUd4dmJtY3VYQ0pkTEZ4eVhHNGdJQ0FnSUNBZ0lDOHZJQ0FnSUNCY0ltRmtaSEpsYzNObGMxc3hYUzVRYjNOMFlXeERiMlJsWENJNklGdGNJbFJvWlNCUWIzTjBZV3dnWTI5a1pUb2dabWxsYkdRZ2FYTWdjbVZ4ZFdseVpXUXVYQ0lzSUZ3aVZHaGxJRkJ2YzNSaGJDQmpiMlJsT2lCdGRYTjBJR0psSUdGMElHeGxZWE4wSURNZ1lXNWtJR0YwSUcxaGVDQXhNamdnWTJoaGNtRmpkR1Z5Y3lCc2IyNW5MbHdpWFN4Y2NseHVJQ0FnSUNBZ0lDQXZMeUFnSUNBZ1hDSmhaR1J5WlhOelpYTmJNVjB1VTNSeVpXVjBRV1JrY21WemMxd2lPaUJiWENKVWFHVWdVM1J5WldWMElHRmtaSEpsYzNNNklHWnBaV3hrSUdseklISmxjWFZwY21Wa0xsd2lMQ0JjSWxSb1pTQlRkSEpsWlhRZ1lXUmtjbVZ6Y3pvZ2JYVnpkQ0JpWlNCaGRDQnNaV0Z6ZENBeklHRnVaQ0JoZENCdFlYZ2dNVEk0SUdOb1lYSmhZM1JsY25NZ2JHOXVaeTVjSWwwc1hISmNiaUFnSUNBZ0lDQWdMeThnSUNBZ0lGd2lZV1JrY21WemMyVnpXekpkTGtOcGRIbGNJam9nVzF3aVZHaGxJRU5wZEhrNklHWnBaV3hrSUdseklISmxjWFZwY21Wa0xsd2lMQ0JjSWxSb1pTQkRhWFI1T2lCdGRYTjBJR0psSUdGMElHeGxZWE4wSURNZ1lXNWtJR0YwSUcxaGVDQXhNamdnWTJoaGNtRmpkR1Z5Y3lCc2IyNW5MbHdpWFN4Y2NseHVJQ0FnSUNBZ0lDQXZMeUFnSUNBZ1hDSmhaR1J5WlhOelpYTmJNbDB1UTI5MWJuUnllVndpT2lCYlhDSlVhR1VnUTI5MWJuUnllVG9nWm1sbGJHUWdhWE1nY21WeGRXbHlaV1F1WENJc0lGd2lWR2hsSUVOdmRXNTBjbms2SUcxMWMzUWdZbVVnWVhRZ2JHVmhjM1FnTWlCaGJtUWdZWFFnYldGNElERXlPQ0JqYUdGeVlXTjBaWEp6SUd4dmJtY3VYQ0pkTEZ4eVhHNGdJQ0FnSUNBZ0lDOHZJQ0FnSUNCY0ltRmtaSEpsYzNObGMxc3lYUzVRYjNOMFlXeERiMlJsWENJNklGdGNJbFJvWlNCUWIzTjBZV3dnWTI5a1pUb2dabWxsYkdRZ2FYTWdjbVZ4ZFdseVpXUXVYQ0lzSUZ3aVZHaGxJRkJ2YzNSaGJDQmpiMlJsT2lCdGRYTjBJR0psSUdGMElHeGxZWE4wSURNZ1lXNWtJR0YwSUcxaGVDQXhNamdnWTJoaGNtRmpkR1Z5Y3lCc2IyNW5MbHdpWFN4Y2NseHVJQ0FnSUNBZ0lDQXZMeUFnSUNBZ1hDSmhaR1J5WlhOelpYTmJNbDB1VTNSeVpXVjBRV1JrY21WemMxd2lPaUJiWENKVWFHVWdVM1J5WldWMElHRmtaSEpsYzNNNklHMTFjM1FnWW1VZ1lYUWdiR1ZoYzNRZ015QmhibVFnWVhRZ2JXRjRJREV5T0NCamFHRnlZV04wWlhKeklHeHZibWN1WENKZFhISmNiaUFnSUNBZ0lDQWdMeUI5WEhKY2JpQWdJQ0FnSUNBZ0tpOWNjbHh1WEhKY2JpQWdJQ0FnSUNBZ2FXWWdLQ0ZsZG1WdWRFRnlaM01nZkh3Z0lXVjJaVzUwUVhKbmN5NUZkbVZ1ZEVSaGRHRWdmSHdnSVdWMlpXNTBRWEpuY3k1RmRtVnVkRVJoZEdFdVJYWmxiblF1Y21WemNHOXVjMlZLVTA5T0tTQnlaWFIxY200N1hISmNiaUFnSUNBZ0lDQWdkbUZ5SUdWeWNtOXljeUE5SUdWMlpXNTBRWEpuY3k1RmRtVnVkRVJoZEdFdVJYWmxiblF1Y21WemNHOXVjMlZLVTA5T08xeHlYRzRnSUNBZ0lDQWdJSFpoY2lCa2MwNWhiV1VnUFNCMGFHbHpMbTl3ZEdsdmJuTXVaR0YwWVZOdmRYSmpaUzV1WVcxbE8xeHlYRzVjY2x4dUlDQWdJQ0FnSUNCMllYSWdaR2x5ZEhsU2IzZHpJRDBnZEdocGN5NWliMlI1TG1kbGRFUnBjblI1VW05M2N5Z3BPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQm1iM0lnS0d4bGRDQnBJRDBnTURzZ2FTQThJR1JwY25SNVVtOTNjeTVzWlc1bmRHZzdJR2tyS3lrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBdkwyUmxZblZuWjJWeU8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMllYSWdaWEp5YjNKUWNtOXdJRDBnWkhOT1lXMWxJQ3NnSjFzbklDc2dhU0FySUNkZEp6dGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJR2x0SUQwZ1pYSnliM0p6VzJWeWNtOXlVSEp2Y0YwN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHBiU0FtSmlCcGJTNXNaVzVuZEdnZ1BpQXdLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllYSWdZMnhwWlc1MFNXNWtaWGdnUFNCcGJWc3dYVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGNpQnpaWEoyWlhKSmJtUmxlQ0E5SUdrN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlHVnljbTl5VW05M0lEMGdkR2hwY3k1blpYUlNiM2RDZVVsdVpHVjRLSEJoY25ObFNXNTBLR05zYVdWdWRFbHVaR1Y0S1NrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvSVdWeWNtOXlVbTkzS1NCamIyNTBhVzUxWlR0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtOXdkR2x2Ym5NdVkyOXNSR1ZtYVc1cGRHbHZiaTVtYjNKRllXTm9LQ2hqYjJ3c0lHa3BJRDArSUh0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJSEJ5YjNCT1lXMWxJRDBnWTI5c0xsQnliM0JPWVcxbExuUnZVR0Z6WTJGc1EyRnpaVXB6YjI0b0tUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllYSWdhVzV3ZFhSRmNuSnZjaUE5SUdWeWNtOXljMXRrYzA1aGJXVWdLeUFuV3ljZ0t5QnpaWEoyWlhKSmJtUmxlQ0FySUNkZExpY2dLeUJ3Y205d1RtRnRaVjA3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dsdWNIVjBSWEp5YjNJZ0ppWWdhVzV3ZFhSRmNuSnZjaTVzWlc1bmRHZ2dQaUF3S1NCN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2FXNXdkWFFnUFNCbGNuSnZjbEp2ZHk1blpYUkpibkIxZEhNb0tTNW1hVzVrS0NocGJuQXBJRDArSUdsdWNDNXZjSFJwYjI1ekxrMXZaR1ZzVG1GdFpTQTlQVDBnWTI5c0xsQnliM0JPWVcxbEtUdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaHBibkIxZENrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVc1d2RYUXVZV1JrUTJ4aGMzTW9KMmx6TFdsdWRtRnNhV1FuS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQzh2WTI5dWMyOXNaUzVzYjJjb2FXNXdkWFJGY25KdmNpazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllYSWdZV3hzUlhKeWIzSnpJRDBnSnljN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JCY25KaGVTNW1jbTl0S0dsdWNIVjBSWEp5YjNJcExtWnZja1ZoWTJnb1puVnVZM1JwYjI0Z0tHVnlLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWVd4c1JYSnliM0p6SUNzOUlHVnlJQ3NnSnlBbk8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwYm5CMWRDNXdjbTl3S0NkMGFYUnNaU2NzSUdGc2JFVnljbTl5Y3lrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2RHOXZiSFJwY0NBOUlHNWxkeUJVYjI5c2RHbHdLR2x1Y0hWMFd6QmRMQ0I3SUdOMWMzUnZiVU5zWVhOek9pQW5kRzl2YkhScGNDMWxjbkp2Y2ljZ2ZTazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJR2RsZEZKdmQwSjVTVzVrWlhnb2FXNWtaWGc2SUc1MWJXSmxjaWtnZTF4eVhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbUp2WkhrdWNtOTNjeTVtYVc1a0tDaDJMQ0JwS1NBOVBpQjJMbkp2ZDBsdVpHVjRJRDA5UFNCcGJtUmxlQ2s3WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ0x5b3FYSEpjYmlBZ0lDQWdLaUJBY0dGeVlXMGdlMEpUUkdGMFlWUmhZbXhsUTJWc2JIMGdkR2hjY2x4dUlDQWdJQ0FxSUVCd1lYSmhiU0I3WW05dmJHVmhibjBnWVhOaldGeHlYRzRnSUNBZ0lDb3ZYSEpjYmlBZ0lDQnpiM0owVkdGaWJHVW9kR2c2SUVKVFJHRjBZVlJoWW14bFEyVnNiQ3dnWVhOaldEb2dZbTl2YkdWaGJpa2dlMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQXZMeUFnWTI5dWMyOXNaUzVzYjJjb0ozTnZjblJwYm1jbkxDQmhjMk5ZS1R0Y2NseHVJQ0FnSUNBZ0lDQmpiMjV6ZENCblpYUkRaV3hzVm1Gc2RXVWdQU0FvZEhJNklFSlRSR0YwWVZSaFlteGxVbTkzTENCcFpIZzZJRzUxYldKbGNpa2dQVDRnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ1kyaHBiR1FnUFNCMGNpNWpaV3hzYzF0cFpIaGRPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQXZMeUJqYjI1emIyeGxMbXh2WnlnbmFXUjRPaUFuTENCcFpIZ3NJQ0JqYUdsc1pDazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCamFHbHNaQzVuWlhSRFpXeHNWR1Y0ZENncE8xeHlYRzRnSUNBZ0lDQWdJSDA3WEhKY2JseHlYRzVjY2x4dUlDQWdJQ0FnSUNBdkx5QlNaWFIxY201eklHRWdablZ1WTNScGIyNGdjbVZ6Y0c5dWMybGliR1VnWm05eUlITnZjblJwYm1jZ1lTQnpjR1ZqYVdacFl5QmpiMngxYlc0Z2FXNWtaWGdnWEhKY2JpQWdJQ0FnSUNBZ0x5OGdLR2xrZUNBOUlHTnZiSFZ0YmtsdVpHVjRMQ0JoYzJNZ1BTQmhjMk5sYm1ScGJtY2diM0prWlhJL0tTNWNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ1kyOXRjR0Z5WlhJZ1BTQm1kVzVqZEdsdmJpQW9hV1I0T2lCdWRXMWlaWElzSUdGell6b2dZbTl2YkdWaGJpa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQXZMMk52Ym5OdmJHVXViRzluS0NkcFpIZzZJQ2NzSUdsa2VDd2dKMkZ6WXpvZ0p5d2dZWE5qS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnTHk4Z1ZHaHBjeUJwY3lCMWMyVmtJR0o1SUhSb1pTQmhjbkpoZVM1emIzSjBLQ2tnWm5WdVkzUnBiMjR1TGk1Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR1oxYm1OMGFXOXVJQ2hoT2lCQ1UwUmhkR0ZVWVdKc1pWSnZkeXdnWWpvZ1FsTkVZWFJoVkdGaWJHVlNiM2NwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDOHZZMjl1YzI5c1pTNXNiMmNvSjJFNklDY3NJR0VzSUNkaU9pQW5MQ0JpS1R0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F2THlCVWFHbHpJR2x6SUdFZ2RISmhibk5wWlc1MElHWjFibU4wYVc5dUxDQjBhR0YwSUdseklHTmhiR3hsWkNCemRISmhhV2RvZENCaGQyRjVMaUJjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUM4dklFbDBJR0ZzYkc5M2N5QndZWE56YVc1bklHbHVJR1JwWm1abGNtVnVkQ0J2Y21SbGNpQnZaaUJoY21kekxDQmlZWE5sWkNCdmJpQmNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQzh2SUhSb1pTQmhjMk5sYm1ScGJtY3ZaR1Z6WTJWdVpHbHVaeUJ2Y21SbGNpNWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQm1kVzVqZEdsdmJpQW9kakVzSUhZeUtTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0x5OGdJR052Ym5OdmJHVXViRzluS0NkMk1Ub2dKeXdnZGpFc0lDZDJNam9nSnl3Z2RqSXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDOHZJSE52Y25RZ1ltRnpaV1FnYjI0Z1lTQnVkVzFsY21saklHOXlJR3h2WTJGc1pVTnZiWEJoY21Vc0lHSmhjMlZrSUc5dUlIUjVjR1V1TGk1Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F2THlCeVpYUjFjbTRnS0hZeElDRTlQU0FuSnlBbUppQjJNaUFoUFQwZ0p5Y2dKaVlnSVdselRtRk9LSFl4S1NBbUppQWhhWE5PWVU0b2RqSXBLVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDOHZJQ0FnSUNBL0lIWXhJQzBnZGpKY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F2THlBZ0lDQWdPaUIyTVM1MGIxTjBjbWx1WnlncExteHZZMkZzWlVOdmJYQmhjbVVvZGpJcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIyTVM1MGIxTjBjbWx1WnlncExteHZZMkZzWlVOdmJYQmhjbVVvZGpJdWRHOVRkSEpwYm1jb0tTbGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBvWjJWMFEyVnNiRlpoYkhWbEtHRnpZeUEvSUdFZ09pQmlMQ0JwWkhncExDQm5aWFJEWld4c1ZtRnNkV1VvWVhOaklEOGdZaUE2SUdFc0lHbGtlQ2twTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ2ZUdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0x5OGdaRzhnZEdobElIZHZjbXN1TGk1Y2NseHVJQ0FnSUNBZ0lDQXZMeUJqYjI1emRDQjBZV0pzWlNBOUlIUm9MbU5zYjNObGMzUW9KM1JoWW14bEp5azdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDOHZaR1ZpZFdkblpYSTdYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlHUnpJRDBnZEdocGN5NXZjSFJwYjI1ekxtUmhkR0ZUYjNWeVkyVXVibUZ0WlR0Y2NseHVJQ0FnSUNBZ0lDQXZMeUJqYjI1emIyeGxMbXh2WnloeWIzZHpLVHRjY2x4dUlDQWdJQ0FnSUNCMllYSWdiR2x6ZENBOUlIUm9hWE11WW05a2VTNXliM2R6TG5OdmNuUW9ZMjl0Y0dGeVpYSW9kR2hwY3k1b1pXRmtMbWRsZEVkeWFXUlVhWFJzWlhOU2IzY29LUzVqWld4c2N5NXBibVJsZUU5bUtIUm9LU3dnWVhOaldDQTlJQ0ZoYzJOWUtTazdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lHeHBjM1F1Wm05eVJXRmphQ2gwY2lBOVBpQjBhR2x6TG1KdlpIa3VZWEJ3Wlc1a0tIUnlMQ0JtWVd4elpTa3BPMXh5WEc1Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnYkdWMElHTnZibVpGZG1WdWREb2dRbE5EYjI1bWFXZFZjR1JoZEdWa1JYWmxiblFnUFNCN0lFVjJaVzUwUkdGMFlUb2dleUJEZFhKeVpXNTBRMjlzT2lCMGFDd2dRV04wYVc5dU9pQmhjSEJCWTNScGIyNXpMa05QVEY5VFQxSlVTVTVISUgwc0lFUmhkR0ZUYjNWeVkyVk9ZVzFsT2lCa2N5QjlPMXh5WEc0Z0lDQWdJQ0FnSUd4bGRDQmpiMnhTWlc5eVpHVnlSWFpsYm5RNklFSlRRMjlzYzFKbGIzSmtaWEpsWkVWMlpXNTBJRDBnZXlCRmRtVnVkRVJoZEdFNklIc2dRM1Z5Y21WdWRFTnZiRG9nZEdnc0lFRnpZem9nWVhOaldDQjlMQ0JFWVhSaFUyOTFjbU5sVG1GdFpUb2daSE1nZlR0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG01dmRHbG1lVXhwYzNSbGJtVnljeWhoY0hCRVlYUmhSWFpsYm5SekxrOU9YME5QVEZOZlVrVlBVa1JGVWtWRUxDQmpiMnhTWlc5eVpHVnlSWFpsYm5RcE8xeHlYRzVjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbTV2ZEdsbWVVeHBjM1JsYm1WeWN5aGhjSEJFWVhSaFJYWmxiblJ6TGs5T1gwZFNTVVJmUTA5T1JrbEhYMVZRUkVGVVJVUXNJR052Ym1aRmRtVnVkQ2s3WEhKY2JseHlYRzRnSUNBZ2ZUdGNjbHh1WEhKY2JpQWdJQ0J2YmxOdmNuUnBibWRTWlhGMVpYTjBLR1YyWlc1MFFYSm5jem9nUWxOVGIzSjBhVzVuVW1WeGRXVnpkRVYyWlc1MEtTQjdYSEpjYmlBZ0lDQWdJQ0FnTHk4Z1kyOXVjMjlzWlM1c2IyY29aWFpsYm5SQmNtZHpLVHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdkbUZ5SUhSaGNtZGxkQ0E5SUdWMlpXNTBRWEpuY3k1RmRtVnVkRVJoZEdFdVJYWmxiblF1ZEdGeVoyVjBJR0Z6SUVWc1pXMWxiblE3WEhKY2JseHlYRzRnSUNBZ0lDQWdJSFpoY2lCcGMxUm9JRDBnZEdGeVoyVjBMblJoWjA1aGJXVXVkRzlNYjNkbGNrTmhjMlVvS1NBOVBUMGdKM1JvSnp0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnYVdZZ0tDRnBjMVJvS1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhaaGNpQjBhQ0E5SUhSaGNtZGxkQzVqYkc5elpYTjBLQ2QwYUNjcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9JWFJvS1NCeVpYUjFjbTQ3WEhKY2JseHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMFlYSm5aWFFnUFNCMGFEdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJSFJvZUNBOUlIUm9hWE11YUdWaFpDNW5aWFJIY21sa1ZHbDBiR1Z6VW05M0tDa3VZMlZzYkhNdVptbHVaQ2dvZGl3Z2FTa2dQVDRnZGk1bGJHVnRaVzUwSUQwOVBTQjBZWEpuWlhRcE8xeHlYRzRnSUNBZ0lDQWdJR2xtSUNnaGRHaDRLU0J5WlhSMWNtNDdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDOHZJR1JsWW5WbloyVnlPMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVjMjl5ZEZSaFlteGxLSFJvZUN3Z1pYWmxiblJCY21kekxrVjJaVzUwUkdGMFlTNUJjMk1wTzF4eVhHNGdJQ0FnZlR0Y2NseHVYSEpjYmlBZ0lDQnlaWE5sZEZOdmNuUnBibWNvS1NCN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVhR1ZoWkM1eWIzZHpMbVp2Y2tWaFkyZ29LSFlzSUdrcElEMCtJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hZdWFHRnpRMnhoYzNNb0ozTnZjblJwYm1kZlpHVnpZeWNwSUh4OElIWXVhR0Z6UTJ4aGMzTW9KM052Y25ScGJtZGZZWE5qSnlrcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFl1Y21WdGIzWmxRMnhoYzNNb0ozTnZjblJwYm1kZllYTmpKeWt1Y21WdGIzWmxRMnhoYzNNb0ozTnZjblJwYm1kZlpHVnpZeWNwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ2ZTazdYSEpjYmlBZ0lDQjlPMXh5WEc1Y2NseHVJQ0FnSUc5dVEyOXNjMUpsYjNKa1pYSmxaQ2hsZG1WdWRFRnlaM002SUVKVFEyOXNjMUpsYjNKa1pYSmxaRVYyWlc1MEtTQjdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDOHZYSEpjYmlBZ0lDQWdJQ0FnTHk4Z2JXOWthV1o1SUNkclpYbGtiM2R1SnlCbGRtVnVkSE1nYjI0Z2RHaGxJSEp2ZHlCcGJuQjFkSE5jY2x4dUlDQWdJQ0FnSUNBdkwxeHlYRzRnSUNBZ0lDQWdJSFpoY2lCbmNtbGtJRDBnZEdocGN6dGNjbHh1SUNBZ0lDQWdJQ0F2THlCamIyNXpiMnhsTG14dlp5aGxkbVZ1ZEVGeVozTXBPMXh5WEc1Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnWjNKcFpDNWliMlI1TG5KdmQzTXVabTl5UldGamFDZ29jbTkzTENCcEtTQTlQaUI3WEhKY2JseHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMllYSWdhVzV3ZFhSeklEMGdjbTkzTG1kbGRFbHVjSFYwY3lncE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCcGJuQjFkSE11Wm05eVJXRmphQ2dvYVc1d0tTQTlQaUI3SUdsdWNDNWxiR1Z0Wlc1MExuSmxiVzkyWlVWMlpXNTBUR2x6ZEdWdVpYSW9KMnRsZVdSdmQyNG5MQ0IwYUdsekxtOXVTVzV3ZFhSTFpYbEViM2R1S1NCOUtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJSFpwYzJsaWJHVkpibkIxZEhNZ1BTQnliM2N1WjJWMFZtbHphV0pzWlVsdWNIVjBjeWdwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2RtbHphV0pzWlVsdWNIVjBjeTVzWlc1bmRHZ2dQRDBnTUNrZ2NtVjBkWEp1TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2JHRnpkRWx1Y0hWMElEMGdkbWx6YVdKc1pVbHVjSFYwYzF0MmFYTnBZbXhsU1c1d2RYUnpMbXhsYm1kMGFDQXRJREZkTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JzWVhOMFNXNXdkWFF1Wld4bGJXVnVkQzVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLQ2RyWlhsa2IzZHVKeXdnZEdocGN5NXZia2x1Y0hWMFMyVjVSRzkzYmlrN1hISmNiaUFnSUNBZ0lDQWdmU2s3WEhKY2JseHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJQzhxS2x4eVhHNGdJQ0FnSUNvZ1FXUmtJR2hoYm1Sc1pYSWdkRzhnZEdobElHVjJaVzUwY3lCeVlXbHpaV1FnWW5rZ2RHaGxJR1JoZEdFZ2RHRmliR1ZjY2x4dUlDQWdJQ0FxSUVCd1lYSmhiU0JsZG1WdWRFNWhiV1VnWEhKY2JpQWdJQ0FnS2lCQWNHRnlZVzBnWTJGc2JHSmhZMnNnWEhKY2JpQWdJQ0FnS2lCQWNHRnlZVzBnZG1WeWFXWjVSRk5PWVcxbElGeHlYRzRnSUNBZ0lDb3ZYSEpjYmlBZ0lDQmhaR1JJWVc1a2JHVnlLR1YyWlc1MFRtRnRaVG9nYzNSeWFXNW5MQ0JqWVd4c1ltRmphem9nUWxORmRtVnVkRWhoYm1Sc1pYSXNJSFpsY21sbWVVUlRUbUZ0WlNBOUlHWmhiSE5sS1NCN1hISmNiaUFnSUNBZ0lDQWdiR1YwSUcxdlpHVnNPaUJDVTBWMlpXNTBVM1ZpYzJOeWFXSmxjazF2WkdWc0lEMGdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQkxaWGs2SUhSb2FYTXViM0IwYVc5dWN5NW5jbWxrU1dRc1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUVWMlpXNTBUbUZ0WlRvZ1pYWmxiblJPWVcxbExGeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCRFlXeHNZbUZqYXpvZ1kyRnNiR0poWTJzc1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUVSaGRHRlRiM1Z5WTJWT1lXMWxPaUIwYUdsekxtOXdkR2x2Ym5NdVpHRjBZVk52ZFhKalpTNXVZVzFsTEZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JXWlhKcFpubEVZWFJoVTI5MWNtTmxUbUZ0WlRvZ2RtVnlhV1o1UkZOT1lXMWxYSEpjYmlBZ0lDQWdJQ0FnZlR0Y2NseHVJQ0FnSUNBZ0lDQmtZWFJoUlhabGJuUnpVMlZ5ZG1salpTNVRkV0p6WTNKcFltVW9iVzlrWld3cE8xeHlYRzRnSUNBZ2ZUdGNjbHh1WEhKY2JpQWdJQ0J5WlcxdmRtVklZVzVrYkdWeUtHVjJaVzUwVG1GdFpUb2djM1J5YVc1bktTQjdYSEpjYmlBZ0lDQWdJQ0FnYkdWMElHMXZaR1ZzT2lCQ1UwVjJaVzUwVTNWaWMyTnlhV0psY2sxdlpHVnNJRDBnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JMWlhrNklIUm9hWE11YjNCMGFXOXVjeTVuY21sa1NXUXNYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lFVjJaVzUwVG1GdFpUb2daWFpsYm5ST1lXMWxMRnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQkVZWFJoVTI5MWNtTmxUbUZ0WlRvZ2RHaHBjeTV2Y0hScGIyNXpMbVJoZEdGVGIzVnlZMlV1Ym1GdFpTeGNjbHh1SUNBZ0lDQWdJQ0I5TzF4eVhHNGdJQ0FnSUNBZ0lHUmhkR0ZGZG1WdWRITlRaWEoyYVdObExsVnVjM1ZpYzJOeWFXSmxLRzF2WkdWc0tUdGNjbHh1SUNBZ0lIMDdYSEpjYmx4eVhHNGdJQ0FnYjI1R1pYUmphRVJoZEdFb1pYWmxiblJCY21kek9pQkNVMFpsZEdOb1VtVmpiM0prUlhabGJuUXBJSHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdMeThnWTI5dWMyOXNaUzVzYjJjb0oyOXVSbVYwWTJoRVlYUmhPaWNzSUdWMlpXNTBRWEpuY3lrN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUM4dlhISmNiaUFnSUNBZ0lDQWdMeThnY0c5d2RXeGhkR1VnZEdobElHZHlhV1FnZDJsMGFDQjBhR1VnWm1WMFkyaGxaQ0JrWVhSaFhISmNiaUFnSUNBZ0lDQWdMeTljY2x4dUlDQWdJQ0FnSUNCcFppQW9kR2hwY3k1dmNIUnBiMjV6TG1WdVlXSnNaVWx1Wm1sdWFYUmxVMk55YjJ4c0lDRTlQU0IwY25WbEtWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbU5zWldGeVIzSnBaQ2dwTzF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJ0WkNBOUlHVjJaVzUwUVhKbmN5NUZkbVZ1ZEVSaGRHRXVUV1YwWVVSaGRHRTdYSEpjYmlBZ0lDQWdJQ0FnYVdZZ0tDRnRaQ2tnY21WMGRYSnVPMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVZbWx1WkVSaGRHRlRiM1Z5WTJVb1pYWmxiblJCY21kekxrVjJaVzUwUkdGMFlTNUVZWFJoTENCdVpYY2dRbE5FWVhSaFZHRmliR1ZRWVdkcGJtZE5aWFJoUkdGMFlTaHRaQzV3WVdkbFNXNWtaWGdzSUcxa0xuQmhaMlZUYVhwbExDQnRaQzUwYjNSaGJGSmxZMjl5WkhNcEtUdGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0J2YmtabGRHTm9SR0YwWVVWeWNtOXlLR1YyWlc1MFFYSm5jem9nUWxOR1pYUmphRkpsWTI5eVpFVnljbTl5UlhabGJuUXBJSHRjY2x4dUlDQWdJQ0FnSUNBdkx5QmpiMjV6YjJ4bExtVnljbTl5S0NkdmJrWmxkR05vUkdGMFlVVnljbTl5T2lBbkxDQmxkbVZ1ZEVGeVozTXBPMXh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUZKbFoybHpkR1Z5UTJGc2JHSmhZMnR6S0habGNtbG1lVVJUVG1GdFpTQTlJSFJ5ZFdVcElIdGNjbHh1SUNBZ0lDQWdJQ0F2THlCa1pXSjFaMmRsY2p0Y2NseHVJQ0FnSUNBZ0lDQjJZWElnYVdRZ1BTQjBhR2x6TG05d2RHbHZibk11WjNKcFpFbGtPMXh5WEc0Z0lDQWdJQ0FnSUhaaGNpQmtjeUE5SUhSb2FYTXViM0IwYVc5dWN5NWtZWFJoVTI5MWNtTmxMbTVoYldVN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUM4dlhISmNiaUFnSUNBZ0lDQWdMeThnYzNWaWMyTnlhV0psSUhSdklHMWhhVzRnZG1sbGR5OW1iM0p0SUdWMlpXNTBjMXh5WEc0Z0lDQWdJQ0FnSUM4dlhISmNiaUFnSUNBZ0lDQWdkR2hwY3k1aFpHUklZVzVrYkdWeUtHRndjRVJoZEdGRmRtVnVkSE11UjFKSlJGOUVRVlJCTENBb2MyVnVaR1Z5TENCbGRpa2dQVDRnZEdocGN5NWliMlI1TG1kbGRFUnBjblI1VW1WamIzSmtjeWdwS1RzZ0x5OGdWRTlFVHpvZ2IySnpiMnhsZEdVZ0xUNGdjbVZ3YkdGalpXUWdkMmwwYUNCa2FYTmpiM1psY25rZ2MyVnlkbWxqWlZ4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11WVdSa1NHRnVaR3hsY2loaGNIQkVZWFJoUlhabGJuUnpMazlPWDBGRVJGOVNSVU5QVWtRc0lDaHpaVzVrWlhJc0lHVjJLU0E5UGlCMGFHbHpMbTl1U0dWaFpHVnlUbVY0ZENobGRpd2dabUZzYzJVcEtUdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtRmtaRWhoYm1Sc1pYSW9ZWEJ3UkdGMFlVVjJaVzUwY3k1UFRsOUdSVlJEU0Y5U1JVTlBVa1FzSUNoelpXNWtaWElzSUdWMktTQTlQaUIwYUdsekxtOXVTR1ZoWkdWeVRtVjRkQ2hsZGl3Z2RISjFaU2twTzF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11WVdSa1NHRnVaR3hsY2loaGNIQkVZWFJoUlhabGJuUnpMazlPWDFOQlZrVmZVa1ZEVDFKRUxDQW9jMlZ1WkdWeUxDQmxkaWtnUFQ0Z2RHaHBjeTV2YmxOaGRtVlNaV052Y21Rb1pYWXBLVHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbUZrWkVoaGJtUnNaWElvWVhCd1JHRjBZVVYyWlc1MGN5NVBUbDlUUVZaRlgwVlNVazlTTENBb2MyVnVaR1Z5TENCbGRpa2dQVDRnZEdocGN5NXZibE5oZG1WRmNuSnZjaWhsZGlrcE8xeHlYRzVjY2x4dUlDQWdJQ0FnSUNBdkwxeHlYRzRnSUNBZ0lDQWdJQzh2SUhOMVluTmpjbWxpWlNCMGJ5Qm5jbWxrSUdWMlpXNTBjMXh5WEc0Z0lDQWdJQ0FnSUM4dlhISmNiaUFnSUNBZ0lDQWdkR2hwY3k1aFpHUklZVzVrYkdWeUtHRndjRVJoZEdGRmRtVnVkSE11VDA1ZlUwOVNWRWxPUjE5U1JWRlZSVk5VUlVRc0lDaHpaVzVrWlhJc0lHVjJLU0E5UGlCMGFHbHpMbTl1VTI5eWRHbHVaMUpsY1hWbGMzUW9aWFlwTENCMlpYSnBabmxFVTA1aGJXVXBPMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVZV1JrU0dGdVpHeGxjaWhoY0hCRVlYUmhSWFpsYm5SekxrOU9YME5QVEZOZlVrVlBVa1JGVWtWRUxDQW9jMlZ1WkdWeUxDQmxkaWtnUFQ0Z2RHaHBjeTV2YmtOdmJITlNaVzl5WkdWeVpXUW9aWFlwTENCMlpYSnBabmxFVTA1aGJXVXBPMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVZV1JrU0dGdVpHeGxjaWhoY0hCRVlYUmhSWFpsYm5SekxrOU9YMGRTU1VSZlEwOU9Sa2xIWDFWUVJFRlVSVVFzSUNoelpXNWtaWElzSUdWMktTQTlQaUIwYUdsekxtOXVSM0pwWkVOdmJtWnBaM1Z5WVhScGIyNURhR0Z1WjJWa0tHVjJLU3dnZG1WeWFXWjVSRk5PWVcxbEtUdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtRmtaRWhoYm1Sc1pYSW9ZWEJ3UkdGMFlVVjJaVzUwY3k1UFRsOUhVa2xFWDBSQlZFRmZRazlWVGtRc0lDaHpaVzVrWlhJc0lHVjJLU0E5UGlCMGFHbHpMbTl1UjNKcFpFUmhkR0ZDYjNWdVpDaGxkaWtzSUhabGNtbG1lVVJUVG1GdFpTazdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NWhaR1JJWVc1a2JHVnlLR0Z3Y0VSaGRHRkZkbVZ1ZEhNdVQwNWZSa1ZVUTBoZlIxSkpSRjlTUlVOUFVrUXNJQ2h6Wlc1a1pYSXNJR1YyS1NBOVBpQjBhR2x6TG05dVJtVjBZMmhFWVhSaEtHVjJLU3dnZG1WeWFXWjVSRk5PWVcxbEtUdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtRmtaRWhoYm1Sc1pYSW9ZWEJ3UkdGMFlVVjJaVzUwY3k1UFRsOUdSVlJEU0Y5SFVrbEVYMUpGUTA5U1JGOUZVbEpQVWl3Z0tITmxibVJsY2l3Z1pYWXBJRDArSUhSb2FYTXViMjVHWlhSamFFUmhkR0ZGY25KdmNpaGxkaWtzSUhabGNtbG1lVVJUVG1GdFpTazdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpPMXh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUdOdmJtWnBaM1Z5WVdKc1pVZHlhV1FvS1NCN1hISmNiaUFnSUNBZ0lDQWdMeThnWTI5dWMyOXNaUzVzYjJjb0oyTnZibVpwWjNWeVlXSnNaVWR5YVdRZ2FYTWdjbVZoWTJobFpDY3NJSFJvYVhNcE8xeHlYRzRnSUNBZ0lDQWdJSFpoY2lCb1pXRmtaWEp6SUQwZ2RHaHBjeTVvWldGa0xtZGxkRWR5YVdSVWFYUnNaWE5TYjNjb0tTNWpaV3hzY3p0Y2NseHVJQ0FnSUNBZ0lDQjJZWElnWkhNZ1BTQjBhR2x6TG05d2RHbHZibk11WkdGMFlWTnZkWEpqWlM1dVlXMWxPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQXZMMXh5WEc0Z0lDQWdJQ0FnSUM4dklFRWdiVzlrWVd3Z1ptOXlJR052Ym1acFozVnlhVzVuSUdkeWFXUWdZMjlzZFcxdWN5NWNjbHh1SUNBZ0lDQWdJQ0F2THlCVWFHVWdiVzlrWVd3Z1lXaHpJR0Z1SUR4MWJENGdaV3hsYldWdWRDQjNhR2xqYUNCM2FXeHNJR0psSUhCdmNIVnNZWFJsWkNCaVpXeHZkeUIzYVhSb0lHZHlhV1FnWTI5c2RXMXVjeUJqYUdWamF5MXNhWE4wTGx4eVhHNGdJQ0FnSUNBZ0lDOHZJSFJvWlNCamFHVmphM01nWTJGdUlHSmxJSFZ6WldRZ2RHOGdjMmh2ZHk5b2FXUmxJR0VnY0dGeWRHbGpkV3hoY2lCbmNtbGtJR052YkhWdGJseHlYRzRnSUNBZ0lDQWdJQzh2WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJRzF2WkdWc1ZHVnRjR3hoZEdVZ1BWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCZ1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUR4a2FYWWdZMnhoYzNNOVhDSnRiMlJoYkNCbVlXUmxYQ0lnYVdROVhDSnpkR0YwYVdOQ1lXTnJaSEp2Y0Y4a2UyUnpmVndpSUdSaGRHRXRZbk10WW1GamEyUnliM0E5WENKemRHRjBhV05jSWlCa1lYUmhMV0p6TFd0bGVXSnZZWEprUFZ3aVptRnNjMlZjSWlCMFlXSnBibVJsZUQxY0lpMHhYQ0pjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdZWEpwWVMxc1lXSmxiR3hsWkdKNVBWd2ljM1JoZEdsalFtRmphMlJ5YjNCTVlXSmxiRndpSUdGeWFXRXRhR2xrWkdWdVBWd2lkSEoxWlZ3aVBseHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdQR1JwZGlCamJHRnpjejFjSW0xdlpHRnNMV1JwWVd4dlp5QnRiMlJoYkMxa2FXRnNiMmN0YzJOeWIyeHNZV0pzWlZ3aVBseHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUR4a2FYWWdZMnhoYzNNOVhDSnRiMlJoYkMxamIyNTBaVzUwWENJK1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEeGthWFlnWTJ4aGMzTTlYQ0p0YjJSaGJDMW9aV0ZrWlhKY0lqNWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUR4b05TQmpiR0Z6Y3oxY0ltMXZaR0ZzTFhScGRHeGxYQ0lnYVdROVhDSnpkR0YwYVdOQ1lXTnJaSEp2Y0V4aFltVnNYeVI3WkhOOVhDSStRMjl1Wm1sbmRYSmxJR052YkhWdGJuTThMMmcxUGx4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdQR0oxZEhSdmJpQjBlWEJsUFZ3aVluVjBkRzl1WENJZ1kyeGhjM005WENKaWRHNHRZMnh2YzJWY0lpQmtZWFJoTFdKekxXUnBjMjFwYzNNOVhDSnRiMlJoYkZ3aUlHRnlhV0V0YkdGaVpXdzlYQ0pEYkc5elpWd2lQand2WW5WMGRHOXVQbHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0E4TDJScGRqNWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdQR1JwZGlCamJHRnpjejFjSW0xdlpHRnNMV0p2WkhsY0lqNWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUR4MWJDQmpiR0Z6Y3oxY0lteHBjM1F0WjNKdmRYQWdaM0pwWkMxamIyNW1hV2N0WTI5c2Mxd2lQbHh5WEc1Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRHd2ZFd3K1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEd3ZaR2wyUGx4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBOFpHbDJJR05zWVhOelBWd2liVzlrWVd3dFptOXZkR1Z5WENJK1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0E4WW5WMGRHOXVJSFI1Y0dVOVhDSmlkWFIwYjI1Y0lpQmpiR0Z6Y3oxY0ltSjBiaUJpZEc0dGNISnBiV0Z5ZVZ3aUlHUmhkR0V0WW5NdFpHbHpiV2x6Y3oxY0ltMXZaR0ZzWENJK1QyczhMMkoxZEhSdmJqNWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdQQzlrYVhZK1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUEM5a2FYWStYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0E4TDJScGRqNWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1BDOWthWFkrWUR0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlHMXZaR0ZzUld4bGJTQTlJR1J2WTNWdFpXNTBMbU55WldGMFpVVnNaVzFsYm5Rb0oyUnBkaWNwTzF4eVhHNGdJQ0FnSUNBZ0lHMXZaR0ZzUld4bGJTNWpiR0Z6YzB4cGMzUXVZV1JrS0NkelpYUjBhVzVuY3kxdFpXNTFKeXdnSjJkeWFXUXRZMjl1Wm1sbkxYUmxiWEJzWVhSbEp5azdYSEpjYmlBZ0lDQWdJQ0FnYlc5a1lXeEZiR1Z0TG1sdWJtVnlTRlJOVENBOUlHMXZaR1ZzVkdWdGNHeGhkR1U3WEhKY2JseHlYRzRnSUNBZ0lDQWdJSFJvYVhNdVkyOXVkR0ZwYm1WeVJXeGxiV1Z1ZEM1aGNIQmxibVFvYlc5a1lXeEZiR1Z0S1R0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlHTnZiSE5NYVhOMElEMGdiVzlrWVd4RmJHVnRMbkYxWlhKNVUyVnNaV04wYjNJb0p5NW5jbWxrTFdOdmJtWnBaeTFqYjJ4ekp5azdYSEpjYmlBZ0lDQWdJQ0FnYUdWaFpHVnljeTVtYjNKRllXTm9LQ2hvWldGa1pYSXNJR2x1WkdWNEtTQTlQaUI3WEhKY2JseHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMllYSWdjSEp2Y0U1aGJXVWdQU0JvWldGa1pYSXViM0IwYVc5dWN5NVFjbTl3VG1GdFpUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLQ0Z3Y205d1RtRnRaU2tnY21WMGRYSnVPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlHTnZiSE5NYVhOMFNYUmxiU0E5SUdSdlkzVnRaVzUwTG1OeVpXRjBaVVZzWlcxbGJuUW9KMnhwSnlrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdOdmJITk1hWE4wU1hSbGJTNWpiR0Z6YzB4cGMzUXVZV1JrS0Nkc2FYTjBMV2R5YjNWd0xXbDBaVzBuS1R0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJqYUdzZ1BTQmtiMk4xYldWdWRDNWpjbVZoZEdWRmJHVnRaVzUwS0NkcGJuQjFkQ2NwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JqYUdzdWRIbHdaU0E5SUNkamFHVmphMkp2ZUNjN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdOb2F5NTJZV3gxWlNBOUlDY25PMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmphR3N1WTJ4aGMzTk1hWE4wTG1Ga1pDZ25abTl5YlMxamFHVmpheTFwYm5CMWRDY3NJQ2R0WlMweEp5azdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ1kyaHJTV1FnUFNBblkyOXNYMk52Ym1acFoxOWphR3RmSnlBcklIQnliM0JPWVcxbE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCamFHc3VjMlYwUVhSMGNtbGlkWFJsS0NkcFpDY3NJR05vYTBsa0tUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1kyaHJMbk5sZEVGMGRISnBZblYwWlNnblpHRjBZUzFqYjI1bWFXY3RjSEp2Y0c1aGJXVW5MQ0J3Y205d1RtRnRaU2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNob1pXRmtaWEl1ZG1semFXSnNaU0E5UFQwZ2RISjFaU2tnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyaHJMbU5vWldOclpXUWdQU0IwY25WbE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNibHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnWTJoclRHSnNJRDBnWkc5amRXMWxiblF1WTNKbFlYUmxSV3hsYldWdWRDZ25iR0ZpWld3bktUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1kyaHJUR0pzTG5ObGRFRjBkSEpwWW5WMFpTZ25abTl5Snl3Z1kyaHJTV1FwTzF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0x5OGdaR1ZpZFdkblpYSTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHTm9hMHhpYkM1MFpYaDBRMjl1ZEdWdWRDQTlJR2hsWVdSbGNpNW5aWFJVWlhoMEtDazdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JqYjJ4elRHbHpkRWwwWlcwdVlYQndaVzVrUTJocGJHUW9ZMmhyS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWTI5c2MweHBjM1JKZEdWdExtRndjR1Z1WkVOb2FXeGtLR05vYTB4aWJDazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnZiSE5NYVhOMExtRndjR1Z1WkVOb2FXeGtLR052YkhOTWFYTjBTWFJsYlNrN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmphR3N1WVdSa1JYWmxiblJNYVhOMFpXNWxjaWduWTJ4cFkyc25MQ0FvWlNrZ1BUNGdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlHTm9hMFZzWlcxbGJuUWdQU0JsTG5SaGNtZGxkQ0JoY3lCSVZFMU1TVzV3ZFhSRmJHVnRaVzUwTzF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCd2NtOXdJRDBnWTJoclJXeGxiV1Z1ZEM1blpYUkJkSFJ5YVdKMWRHVW9KMlJoZEdFdFkyOXVabWxuTFhCeWIzQnVZVzFsSnlrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvSVhCeWIzQXBJSEpsZEhWeWJqdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllYSWdhR1ZoWkdWeVVtOTNJRDBnZEdocGN5NW9aV0ZrTG1kbGRFZHlhV1JVYVhSc1pYTlNiM2NvS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJqYjJ3Z1BTQm9aV0ZrWlhKU2IzY3VZMlZzYkhNdVptbHVaQ2dvWTJWc2JDa2dQVDRnWTJWc2JDNXZjSFJwYjI1ekxsQnliM0JPWVcxbElEMDlQU0J3Y205d0tUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNnaFkyOXNLU0J5WlhSMWNtNDdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJR0p2WkhsU2IzZHpJRDBnZEdocGN5NWliMlI1TG5KdmQzTTdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJSEp2ZDNNZ1BTQmJMaTR1WW05a2VWSnZkM01zSUdobFlXUmxjbEp2ZDEwN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTHk5MllYSWdhVzVrWlhnZ1BTQkJjbkpoZVM1bWNtOXRLR052YkM1d1lYSmxiblFvSjNSeUp5a3VZMmhwYkdSeVpXNG9LU2t1YVc1a1pYaFBaaWhqYjJ4Yk1GMHBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlHbHVaR1Y0SUQwZ2FHVmhaR1Z5VW05M0xtTmxiR3h6TG1sdVpHVjRUMllvWTI5c0tUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNocGJtUmxlQ0E4SURBcElISmxkSFZ5Ymp0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5YjNkekxtWnZja1ZoWTJnb0tISnZkeWtnUFQ0Z2UxeHlYRzVjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZWElnWTJWc2JDQTlJSEp2ZHk1alpXeHNjMXRwYm1SbGVGMDdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNnaFkyVnNiQ2tnY21WMGRYSnVPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1kyaHJSV3hsYldWdWRDNWphR1ZqYTJWa0tTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQzh2SUNRb1kyVnNiQ2t1YzJodmR5Z3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWld4c0xuWnBjMmxpYkdVZ1BTQjBjblZsTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmxiSE5sSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0x5OGdKQ2hqWld4c0tTNW9hV1JsS0NrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTmxiR3d1ZG1semFXSnNaU0E5SUdaaGJITmxPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBwTzF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWJtOTBhV1o1VEdsemRHVnVaWEp6S0dGd2NFUmhkR0ZGZG1WdWRITXVUMDVmUTA5TVUxOVNSVTlTUkVWU1JVUXNJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQkVZWFJoVTI5MWNtTmxUbUZ0WlRvZ1pITXNYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1JYWmxiblJFWVhSaE9pQjdJRVYyWlc1ME9pQmxJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwcE8xeHlYRzVjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQmpiMjVtUlhabGJuUTZJRUpUUTI5dVptbG5WWEJrWVhSbFpFVjJaVzUwSUQwZ2V5QkZkbVZ1ZEVSaGRHRTZJSHNnUlhabGJuUTZJR1VzSUVGamRHbHZiam9nWVhCd1FXTjBhVzl1Y3k1RFQweGZVMGhQVjE5SVNVUkZJSDBzSUVSaGRHRlRiM1Z5WTJWT1lXMWxPaUJrY3lCOU8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1dWIzUnBabmxNYVhOMFpXNWxjbk1vWVhCd1JHRjBZVVYyWlc1MGN5NVBUbDlIVWtsRVgwTlBUa1pKUjE5VlVFUkJWRVZFTENCamIyNW1SWFpsYm5RcE8xeHlYRzVjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmU2s3WEhKY2JpQWdJQ0FnSUNBZ2ZTazdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnY21WemFYcGhZbXhsUjNKcFpDZ3BJSHRjY2x4dUlDQWdJQ0FnSUNBdkx5QmpiMjV6YjJ4bExteHZaeWduY21WemFYcGhZbXhsUjNKcFpDQnBjeUJ5WldGamFHVmtKeXdnZEdocGN5azdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJrWVhSaFUyOTFjbU5sVG1GdFpTQTlJSFJvYVhNdWIzQjBhVzl1Y3k1a1lYUmhVMjkxY21ObExtNWhiV1U3WEhKY2JpQWdJQ0FnSUNBZ0x5OGdZMjl1YzI5c1pTNXNiMmNvZEdGaWJHVXBPMXh5WEc0Z0lDQWdJQ0FnSUhaaGNpQmpiMnh6SUQwZ2RHaHBjeTVvWldGa0xtZGxkRWR5YVdSVWFYUnNaWE5TYjNjb0tTNWpaV3hzY3p0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG1OemN5QTlJSHQ5TzF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxuTmxkRU56Y3lnbmIzWmxjbVpzYjNjbkxDQW5hR2xrWkdWdUp5azdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lIWmhjaUIwWVdKc1pVaGxhV2RvZENBOUlIUm9hWE11Wld4bGJXVnVkQzV2Wm1aelpYUklaV2xuYUhRN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUdadmNpQW9kbUZ5SUdrZ1BTQXdPeUJwSUR3Z1kyOXNjeTVzWlc1bmRHZzdJR2tyS3lrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMllYSWdaR2wySUQwZ1kzSmxZWFJsUkdsMktIUmhZbXhsU0dWcFoyaDBLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdZMjlzYzF0cFhTNWxiR1Z0Wlc1MExtRndjR1Z1WkNoa2FYWXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMnh6VzJsZExuTmxkRU56Y3lnbmNHOXphWFJwYjI0bkxDQW5jbVZzWVhScGRtVW5LVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjMlYwVEdsemRHVnVaWEp6S0dScGRpd2dZMjlzYzF0cFhTd2dkR2hwY3lrN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUNBZ0lDQXZLaXBjY2x4dUlDQWdJQ0FnSUNBZ0tpQkFjR0Z5WVcwZ2UwaFVUVXhFYVhaRmJHVnRaVzUwZlNCa2FYWmNjbHh1SUNBZ0lDQWdJQ0FnS2lCQWNHRnlZVzBnZTBKVFJHRjBZVlJoWW14bFEyVnNiSDBnWTI5c0lDQWdJQ0FnSUNBZ1hISmNiaUFnSUNBZ0lDQWdJQ29nUUhCaGNtRnRJSHRDVTBSaGRHRlVZV0pzWlgwZ2RHRmliR1ZjY2x4dUlDQWdJQ0FnSUNBZ0tpOWNjbHh1SUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJ6WlhSTWFYTjBaVzVsY25Nb1pHbDJPaUJJVkUxTVJHbDJSV3hsYldWdWRDd2dZMjlzT2lCQ1UwUmhkR0ZVWVdKc1pVTmxiR3dzSUhSaFlteGxPaUJDVTBSaGRHRlVZV0pzWlNrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMllYSWdjR0ZuWlZnNklHNTFiV0psY2x4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0xDQmpkWEpEYjJ3NklFaFVUVXhVWVdKc1pVTmxiR3hGYkdWdFpXNTBYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FzSUdOMWNrTnZiRmRwWkhSb09pQnVkVzFpWlhKY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDd2dibmgwUTI5c1YybGtkR2c2SUc1MWJXSmxjbHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTENCMFlXSnNaVmRwWkhSb09pQnVkVzFpWlhJN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmthWFl1WVdSa1JYWmxiblJNYVhOMFpXNWxjaWduYlc5MWMyVmtiM2R1Snl3Z1puVnVZM1JwYjI0Z0tHVXBJSHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBZV0pzWlZkcFpIUm9JRDBnZEdGaWJHVXVaV3hsYldWdWRDNXZabVp6WlhSWGFXUjBhRHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpkWEpEYjJ3Z1BTQmpiMnd1Wld4bGJXVnVkQ0JoY3lCSVZFMU1WR0ZpYkdWRFpXeHNSV3hsYldWdWREdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJoWjJWWUlEMGdaUzV3WVdkbFdEdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllYSWdjR0ZrWkdsdVp5QTlJSEJoWkdScGJtZEVhV1ptS0dOMWNrTnZiQ2s3WEhKY2JseHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZM1Z5UTI5c1YybGtkR2dnUFNCamRYSkRiMnd1YjJabWMyVjBWMmxrZEdnZ0xTQndZV1JrYVc1bk8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOUtUdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR1JwZGk1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0NkdGIzVnpaVzkyWlhJbkxDQm1kVzVqZEdsdmJpQW9aU2tnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTV6ZEhsc1pTNWliM0prWlhKU2FXZG9kQ0E5SUNjeWNIZ2djMjlzYVdRZ0l6QXdNREJtWmljN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgwcFhISmNibHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmthWFl1WVdSa1JYWmxiblJNYVhOMFpXNWxjaWduYlc5MWMyVnZkWFFuTENCbWRXNWpkR2x2YmlBb1pTa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXpkSGxzWlM1aWIzSmtaWEpTYVdkb2RDQTlJQ2NuTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5S1Z4eVhHNWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1pHOWpkVzFsYm5RdVlXUmtSWFpsYm5STWFYTjBaVzVsY2lnbmJXOTFjMlZ0YjNabEp5d2dablZ1WTNScGIyNGdLR1VwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hqZFhKRGIyd3BJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZWElnWkdsbVpsZ2dQU0JsTG5CaFoyVllJQzBnY0dGblpWZzdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR04xY2tOdmJDNXpkSGxzWlM1M2FXUjBhQ0E5SUNoamRYSkRiMnhYYVdSMGFDQXJJR1JwWm1aWUtTQXJJQ2R3ZUNjN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdGaWJHVXVaV3hsYldWdWRDNXpkSGxzWlM1M2FXUjBhQ0E5SUhSaFlteGxWMmxrZEdnZ0t5QmthV1ptV0NBcklGd2ljSGhjSWp0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDBwTzF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1pHOWpkVzFsYm5RdVlXUmtSWFpsYm5STWFYTjBaVzVsY2lnbmJXOTFjMlYxY0Njc0lHWjFibU4wYVc5dUlDaGxLU0I3WEhKY2JseHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dOMWNrTnZiQ2tnZTF4eVhHNWNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdOdmJtWkZkbVZ1ZERvZ1FsTkRiMjVtYVdkVmNHUmhkR1ZrUlhabGJuUWdQU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUVWMlpXNTBSR0YwWVRvZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUlhabGJuUTZJR1VzSUVOMWNuSmxiblJEYjJ3NklHTjFja052YkZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdMQ0JCWTNScGIyNDZJR0Z3Y0VGamRHbHZibk11UTA5TVgxSkZVMGxhUlVSY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTd2dSR0YwWVZOdmRYSmpaVTVoYldVNklHUmhkR0ZUYjNWeVkyVk9ZVzFsWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBZV0pzWlM1dWIzUnBabmxNYVhOMFpXNWxjbk1vWVhCd1JHRjBZVVYyWlc1MGN5NVBUbDlIVWtsRVgwTlBUa1pKUjE5VlVFUkJWRVZFTENCamIyNW1SWFpsYm5RcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTjFja052YkNBOUlIVnVaR1ZtYVc1bFpEdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJoWjJWWUlEMGdkVzVrWldacGJtVmtPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYm5oMFEyOXNWMmxrZEdnZ1BTQjFibVJsWm1sdVpXUTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqZFhKRGIyeFhhV1IwYUNBOUlIVnVaR1ZtYVc1bFpGeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOUtUdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ0lDQWdJQzhxS2x4eVhHNGdJQ0FnSUNBZ0lDQXFJRUJ3WVhKaGJTQjdjM1J5YVc1bmZTQm9aV2xuYUhSY2NseHVJQ0FnSUNBZ0lDQWdLaTljY2x4dUlDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCamNtVmhkR1ZFYVhZb2FHVnBaMmgwS1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhaaGNpQmthWFlnUFNCa2IyTjFiV1Z1ZEM1amNtVmhkR1ZGYkdWdFpXNTBLQ2RrYVhZbktUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1pHbDJMbk4wZVd4bExuUnZjQ0E5SUZ3aU1Gd2lPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmthWFl1YzNSNWJHVXVjbWxuYUhRZ1BTQmNJakJjSWp0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWkdsMkxuTjBlV3hsTG5kcFpIUm9JRDBnSnpWd2VDYzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHUnBkaTV6ZEhsc1pTNXdiM05wZEdsdmJpQTlJQ2RoWW5OdmJIVjBaU2M3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR1JwZGk1emRIbHNaUzVqZFhKemIzSWdQU0FuWTI5c0xYSmxjMmw2WlNjN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdScGRpNXpkSGxzWlM1MWMyVnlVMlZzWldOMElEMGdKMjV2Ym1Vbk8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCa2FYWXVjM1I1YkdVdWFHVnBaMmgwSUQwZ2FHVnBaMmgwSUNzZ0ozQjRKenRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHUnBkanRjY2x4dUlDQWdJQ0FnSUNCOVhISmNibHh5WEc0Z0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUhCaFpHUnBibWRFYVdabUtHTnZiQ2tnZTF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR2RsZEZOMGVXeGxWbUZzS0dOdmJDd2dKMkp2ZUMxemFYcHBibWNuS1NBOVBTQW5ZbTl5WkdWeUxXSnZlQ2NwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlBd08xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNibHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnY0dGa1RHVm1kQ0E5SUdkbGRGTjBlV3hsVm1Gc0tHTnZiQ3dnSjNCaFpHUnBibWN0YkdWbWRDY3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnY0dGa1VtbG5hSFFnUFNCblpYUlRkSGxzWlZaaGJDaGpiMndzSUNkd1lXUmthVzVuTFhKcFoyaDBKeWs3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQW9jR0Z5YzJWSmJuUW9jR0ZrVEdWbWRDa2dLeUJ3WVhKelpVbHVkQ2h3WVdSU2FXZG9kQ2twTzF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ0lDQWdJR1oxYm1OMGFXOXVJR2RsZEZOMGVXeGxWbUZzS0dWc2JTd2dZM056S1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUFvZDJsdVpHOTNMbWRsZEVOdmJYQjFkR1ZrVTNSNWJHVW9aV3h0TENCdWRXeHNLUzVuWlhSUWNtOXdaWEowZVZaaGJIVmxLR056Y3lrcE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dVhISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdaVzVoWW14bFEyOXNkVzF1VW1WdmNtUmxjbWx1WnlncElIdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0x5OGdZMjl1YzI5c1pTNXNiMmNvSjJWdVlXSnNaVU52YkhWdGJsSmxiM0prWlhKcGJtY2dhWE1nY21WaFkyaGxaQ2NzSUhSb2FYTXBPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQjJZWElnWkdGMFlWTnZkWEpqWlU1aGJXVWdQU0IwYUdsekxtOXdkR2x2Ym5NdVpHRjBZVk52ZFhKalpTNXVZVzFsTzF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJmZEdocGN5QTlJSFJvYVhNN1hISmNiaUFnSUNBZ0lDQWdMeTkyWVhJZ1ozSnBaRWxrSUQwZ0pIUmhZbXhsTG1GMGRISW9KMmxrSnlrN1hISmNiaUFnSUNBZ0lDQWdMeTlqYjI1emIyeGxMbXh2WnlnblpHRjBZWE52ZFhKalpTMXVZVzFsSnl3Z1pHRjBZVk52ZFhKalpVNWhiV1VwTzF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJoWkdSWFlXbDBUV0Z5YTJWeUlEMGdablZ1WTNScGIyNGdLQ2tnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0F2THlCMllYSWdaSGNnUFNCcWNTZ25QR1JwZGo0OEwyUnBkajRuS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnTHk4Z1pIY3VZV1JrUTJ4aGMzTW9KM2RoYVhRdGNtVnZjbVJsY2ljcExtaHBaR1VvS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnTHk4Z2RtRnlJR04wSUQwZ2FuRW9KenhrYVhZZ1kyeGhjM005WENKa0xXWnNaWGdnYW5WemRHbG1lUzFqYjI1MFpXNTBMV05sYm5SbGNsd2lQand2WkdsMlBpY3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQXZMeUIyWVhJZ1pITWdQU0JxY1NnblBHUnBkajQ4TDJScGRqNG5LUzVoWkdSRGJHRnpjeWduYzNCcGJtNWxjaTFpYjNKa1pYSW5LVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdMeThnWkhNdVlYQndaVzVrS0NjOGMzQmhiaUJqYkdGemN6MWNJblpwYzNWaGJHeDVMV2hwWkdSbGJsd2lQbGRoYVhRdUxpNDhMM053WVc0K0p5azdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDOHZJR04wTG1Gd2NHVnVaQ2hrY3lrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUM4dklHUjNMbUZ3Y0dWdVpDaGpkQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQzh2SUY5MGFHbHpMbUZrWkVOc1lYTnpLQ2RqWVhCMGFXOXVMWFJ2Y0NjcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBdkx5QjJZWElnWTJGd2RHbHZiaUE5SUdweEtDYzhZMkZ3ZEdsdmJqNDhMMk5oY0hScGIyNCtKeWt1WVhCd1pXNWtLR1IzS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnTHk4Z1gzUm9hWE11Wld4bGJXVnVkQzVoY0hCbGJtUW9ZMkZ3ZEdsdmJpazdYSEpjYmlBZ0lDQWdJQ0FnZlR0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlIZHlZWEJ3WlhJZ1BTQmtiMk4xYldWdWRDNWpjbVZoZEdWRmJHVnRaVzUwS0Nka2FYWW5LVHRjY2x4dUlDQWdJQ0FnSUNCM2NtRndjR1Z5TG1SeVlXZG5ZV0pzWlNBOUlIUnlkV1U3WEhKY2JpQWdJQ0FnSUNBZ2QzSmhjSEJsY2k1amJHRnpjMHhwYzNRdVlXUmtLQ2RuY21sa0xXaGxZV1JsY2ljcE8xeHlYRzVjY2x4dUlDQWdJQ0FnSUNCMllYSWdhR1ZoWkdWeVVtOTNJRDBnWDNSb2FYTXVhR1ZoWkM1blpYUkhjbWxrVkdsMGJHVnpVbTkzS0NrN1hISmNiaUFnSUNBZ0lDQWdkbUZ5SUdObGJHeHpJRDBnYUdWaFpHVnlVbTkzTG1ObGJHeHpPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQmpaV3hzY3k1bWIzSkZZV05vS0NoalpXeHNLU0E5UGlCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhaaGNpQmphR2xzWkhNZ1BTQmpaV3hzTG1Ob2FXeGtjbVZ1VG05a1pYTW9LVHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaGphR2xzWkhNdWJHVnVaM1JvSUQwOVBTQXdLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllYSWdkSGgwSUQwZ1kyVnNiQzVuWlhSVVpYaDBLQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCalpXeHNMbk5sZEZSbGVIUW9KeWNwTzF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCbGJDQTlJR1J2WTNWdFpXNTBMbU55WldGMFpVVnNaVzFsYm5Rb0oyUnBkaWNwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pXd3VkR1Y0ZEVOdmJuUmxiblFnUFNCMGVIUTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWld4c0xtRndjR1Z1WkVOb2FXeGtLR1ZzS1R0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuZHlZWEFvZDNKaGNIQmxjaXdnWld3cE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUdWc2MyVWdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NTNjbUZ3S0hkeVlYQndaWElzSUdOb2FXeGtjeWs3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dVhISmNiaUFnSUNBZ0lDQWdmU2s3WEhKY2JseHlYRzRnSUNBZ0lDQWdJQzh2SUdGa1pGZGhhWFJOWVhKclpYSW9LVHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdkbUZ5SUhOeVkwVnNaVzFsYm5RNklFaFVUVXhGYkdWdFpXNTBPMXh5WEc1Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NW1hVzVrUld4bGJXVnVkSE1vSnk1bmNtbGtMV2hsWVdSbGNpY3BMbVp2Y2tWaFkyZ29LR1ZzS1NBOVBpQjdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0F2TDF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0F2THlCaGRIUmhZMmdnWkhKaFp5Qm9ZVzVrYkdWeWN5QjBieUIwYUdVZ1pXeGxiV1Z1ZEZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0F2TDF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtRmtaRVJ5WVdkSVlXNWtiR1Z5Y3lobGJDd2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkhKaFoxTjBZWEowT2lCbWRXNWpkR2x2YmlBb1pTa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2doZEdocGN5NWpiR0Z6YzB4cGMzUXVZMjl1ZEdGcGJuTW9KMmR5YVdRdGFHVmhaR1Z5SnlrcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjM0pqUld4bGJXVnVkQ0E5SUhWdVpHVm1hVzVsWkR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDA3WEhKY2JseHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOeVkwVnNaVzFsYm5RZ1BTQjBhR2x6TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWMzUjViR1V1YjNCaFkybDBlU0E5SUNjd0xqVW5PMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlN4Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUnlZV2RNWldGMlpUb2dablZ1WTNScGIyNGdLR1VwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsTG5CeVpYWmxiblJFWldaaGRXeDBLQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0NGemNtTkZiR1Z0Wlc1MEtTQnlaWFIxY200N1hISmNibHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2doZEdocGN5NWpiR0Z6YzB4cGMzUXVZMjl1ZEdGcGJuTW9KMmR5YVdRdGFHVmhaR1Z5SnlrcElISmxkSFZ5Ymp0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtTnNZWE56VEdsemRDNXlaVzF2ZG1Vb0oyOTJaWEluS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMHNYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrY21GblJXNTBaWEk2SUdaMWJtTjBhVzl1SUNobEtTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pTNXdjbVYyWlc1MFJHVm1ZWFZzZENncE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDZ2hjM0pqUld4bGJXVnVkQ2tnY21WMGRYSnVPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb0lYUm9hWE11WTJ4aGMzTk1hWE4wTG1OdmJuUmhhVzV6S0NkbmNtbGtMV2hsWVdSbGNpY3BLU0J5WlhSMWNtNDdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVkyeGhjM05NYVhOMExtRmtaQ2duYjNabGNpY3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDOHZJR1V1Y0hKbGRtVnVkRVJsWm1GMWJIUW9LVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwc1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmtjbUZuVDNabGNqb2dablZ1WTNScGIyNGdLR1VwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsTG5CeVpYWmxiblJFWldaaGRXeDBLQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0NGemNtTkZiR1Z0Wlc1MEtTQnlaWFIxY200N1hISmNibHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2doZEdocGN5NWpiR0Z6YzB4cGMzUXVZMjl1ZEdGcGJuTW9KMmR5YVdRdGFHVmhaR1Z5SnlrcElISmxkSFZ5Ymp0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtTnNZWE56VEdsemRDNWhaR1FvSjI5MlpYSW5LVHRjY2x4dVhISmNibHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlN4Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUnlZV2RGYm1RNklHWjFibU4wYVc5dUlDaGxLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaUzV3Y21WMlpXNTBSR1ZtWVhWc2RDZ3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2doYzNKalJXeGxiV1Z1ZENrZ2NtVjBkWEp1TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWMzUjViR1V1YjNCaFkybDBlU0E5SUNjeEp6dGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBzWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCa2NtOXdPaUJtZFc1amRHbHZiaUFvWlNrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdVdWNISmxkbVZ1ZEVSbFptRjFiSFFvS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb0lYTnlZMFZzWlcxbGJuUXBJSEpsZEhWeWJqdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBdkx5QjJZWElnSkhSb2FYTWdQU0JxY1NoMGFHbHpLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1Oc1lYTnpUR2x6ZEM1eVpXMXZkbVVvSjI5MlpYSW5LVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZWElnWkdWemRFVnNaVzFsYm5RZ1BTQjBhR2x6TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNnaGRHaHBjeTVqYkdGemMweHBjM1F1WTI5dWRHRnBibk1vSjJkeWFXUXRhR1ZoWkdWeUp5a3BJSEpsZEhWeWJqdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9jM0pqUld4bGJXVnVkQ0E5UFQwZ1pHVnpkRVZzWlcxbGJuUXBJSEpsZEhWeWJqdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdMeTkyWVhJZ1kyOXNjeUE5SUY5MGFHbHpMbWhsWVdRdWNtOTNjMXN3WFM1alpXeHNjenRjY2x4dVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTHk4Z1pHVnpkRnh5WEc1Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ1pHVnpkRkJoY21WdWRDQTlJSFJvYVhNdVkyeHZjMlZ6ZENnbmRHZ25LVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvSVdSbGMzUlFZWEpsYm5RcElISmxkSFZ5Ymp0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0x5OGdiRzl2YTNWd0lHbHVJR05sYkd4elhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlHUmxjMUJoY21WdWRFTmxiR3dnUFNCalpXeHNjeTVtYVc1a0tDaGxiQ2tnUFQ0Z1pXd3VaV3hsYldWdWRDQTlQVDBnWkdWemRGQmhjbVZ1ZENrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tDRmtaWE5RWVhKbGJuUkRaV3hzS1NCeVpYUjFjbTQ3WEhKY2JseHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGNpQjBiMGx1WkdWNElEMGdZMlZzYkhNdWFXNWtaWGhQWmloa1pYTlFZWEpsYm5SRFpXeHNLVHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTHk4Z2MzSmpYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJSE55WTFCaGNtVnVkQ0E5SUhOeVkwVnNaVzFsYm5RdVkyeHZjMlZ6ZENnbmRHZ25LVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvSVhOeVkxQmhjbVZ1ZENrZ2NtVjBkWEp1TzF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBdkx5QnNiMjlyZFhBZ2FXNGdZMlZzYkhOY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2MzSmpVR0Z5Wlc1MFEyVnNiQ0E5SUdObGJHeHpMbVpwYm1Rb0tHVnNLU0E5UGlCbGJDNWxiR1Z0Wlc1MElEMDlQU0J6Y21OUVlYSmxiblFwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNnaFpHVnpVR0Z5Wlc1MFEyVnNiQ2tnY21WMGRYSnVPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ1puSnZiVWx1WkdWNElEMGdZMlZzYkhNdWFXNWtaWGhQWmloemNtTlFZWEpsYm5SRFpXeHNLVHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTHk5amIyNXpiMnhsTG14dlp5aDBiMGx1WkdWNExDQm1jbTl0U1c1a1pYZ3BPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2RHOUpibVJsZUNBOVBTQm1jbTl0U1c1a1pYZ3BJSEpsZEhWeWJqdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdMeTljY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXZMeUJoY0hCc2VTQnVaWGNnYjNKa1pYSWdkRzhnZEdobElHaGxZV1JsY25OY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F2TDF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsVDNKa1pYSW9hR1ZoWkdWeVVtOTNMQ0JqWld4c2N5d2dabkp2YlVsdVpHVjRMQ0IwYjBsdVpHVjRLVHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlISnZkM01nUFNCZmRHaHBjeTVpYjJSNUxuSnZkM003WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdMeThnYW5Fb0p5NTNZV2wwTFhKbGIzSmtaWEluS1M1amMzTW9leUFuWTNWeWMyOXlKem9nSjNCeWIyZHlaWE56SnlCOUtTNXphRzkzS0NrN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDOHZYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0x5OGdZWEJ3YkhrZ2JtVjNJRzl5WkdWeUlIUnZJR0ZzYkNCMGFHVWdjbTkzY3lCcGJpQjBhR1VnWjNKcFpGeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUM4dlhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzJWMFZHbHRaVzkxZENnb0tTQTlQaUI3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUM4dlkyOXVjMjlzWlM1c2IyY29KMUpsYjNKa1pYSnBibWNnYzNSaGNuUmxaQ3dnSnl3Z2JtVjNJRVJoZEdVb0tTazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2lBb2JHVjBJR2x1WkdWNElEMGdNRHNnYVc1a1pYZ2dQQ0J5YjNkekxteGxibWQwYURzZ2FXNWtaWGdyS3lrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTHk4Z1pHVmlkV2RuWlhJN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2NtOTNJRDBnY205M2MxdHBibVJsZUYwN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ1kyVnNiSE1nUFNCeWIzY3VZMlZzYkhOY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoMGIwbHVaR1Y0SUQwOUlHWnliMjFKYm1SbGVDa2djbVYwZFhKdU8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WUGNtUmxjaWh5YjNjc0lHTmxiR3h6TENCbWNtOXRTVzVrWlhnc0lIUnZTVzVrWlhncE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBdkwyTnZibk52YkdVdWJHOW5LQ2RTWlc5eVpHVnlhVzVuSUdOdmJYQnNaWFJsWkN3Z0p5d2dibVYzSUVSaGRHVW9LU2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUM4dlhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDOHZJRzV2ZEdsbWVTQmhZbTkxZENCamIyeDFiVzRnY21VdGIzSmtaWEpwYm1kY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0x5OWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdYM1JvYVhNdWJtOTBhV1o1VEdsemRHVnVaWEp6S0dGd2NFUmhkR0ZGZG1WdWRITXVUMDVmUTA5TVUxOVNSVTlTUkVWU1JVUXNYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCN0lFUmhkR0ZUYjNWeVkyVk9ZVzFsT2lCa1lYUmhVMjkxY21ObFRtRnRaU3dnUlhabGJuUkVZWFJoT2lCN0lFVjJaVzUwT2lCbElIMGdmU2s3WEhKY2JseHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWTI5dVprVjJaVzUwT2lCQ1UwTnZibVpwWjFWd1pHRjBaV1JGZG1WdWRDQTlJSHNnUlhabGJuUkVZWFJoT2lCN0lFVjJaVzUwT2lCbExDQkJZM1JwYjI0NklHRndjRUZqZEdsdmJuTXVRMDlNWDFKRlQxSkVSVklnZlN3Z1JHRjBZVk52ZFhKalpVNWhiV1U2SUdSaGRHRlRiM1Z5WTJWT1lXMWxJSDA3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUY5MGFHbHpMbTV2ZEdsbWVVeHBjM1JsYm1WeWN5aGhjSEJFWVhSaFJYWmxiblJ6TGs5T1gwZFNTVVJmUTA5T1JrbEhYMVZRUkVGVVJVUXNJR052Ym1aRmRtVnVkQ2s3WEhKY2JseHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXZMeUJxY1NnbkxuZGhhWFF0Y21WdmNtUmxjaWNwTG1OemN5aDdJQ2RqZFhKemIzSW5PaUFuSnlCOUtTNW9hV1JsS0NrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlN3Z05UQXdLVHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMHBYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lIMHBPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQjJZWElnY21WUGNtUmxjaUE5SUdaMWJtTjBhVzl1SUNndktpb2dRSFI1Y0dVZ2UwSlRSR0YwWVZSaFlteGxVbTkzZlNBcUx5QnliM2M2SUVKVFJHRjBZVlJoWW14bFVtOTNYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDd2dMeW9xSUVCMGVYQmxJSHRDVTBSaGRHRlVZV0pzWlVObGJHeGJYWDBnS2k4Z1kyVnNiSE02SUVKVFJHRjBZVlJoWW14bFEyVnNiRnRkWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ3dnTHlvcUlFQjBlWEJsSUh0dWRXMWlaWEo5SUNvdklHWnliMjFKYm1SbGVEb2diblZ0WW1WeVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUN3Z0x5b3FJRUIwZVhCbElIdHVkVzFpWlhKOUlDb3ZJSFJ2U1c1a1pYZzZJRzUxYldKbGNpa2dlMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnTHk4Z1pHVmlkV2RuWlhJN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaG1jbTl0U1c1a1pYZ2dQVDBnZEc5SmJtUmxlQ2tnY21WMGRYSnVPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlHUnBjaUE5SUdScGNtVmpkR2x2Ym5NdWJIUnlPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHWnliMjFKYm1SbGVDQStJSFJ2U1c1a1pYZ3BJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdScGNpQTlJR1JwY21WamRHbHZibk11Y25Sc08xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNibHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvWkdseUlEMDlQU0JrYVhKbFkzUnBiMjV6TG5KMGJDa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzNkaGNGSjBiQ2hqWld4c2N5d2dabkp2YlVsdVpHVjRMQ0IwYjBsdVpHVjRLVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHVnNjMlVnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MzZGhjRXgwY2loalpXeHNjeXdnWm5KdmJVbHVaR1Y0TENCMGIwbHVaR1Y0S1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0x5OGdaR1ZpZFdkblpYSTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lISnZkeTVqWld4c2N5QTlJRnRkTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J5YjNjdVlXUmtRMlZzYkhNb1kyVnNiSE1wTzF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0x5OXFjU2h5YjNjcExtRndjR1Z1WkNoalpXeHNjeWs3WEhKY2JpQWdJQ0FnSUNBZ2ZUdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJSE4zWVhCU2RHd2dQU0JtZFc1amRHbHZiaUFvTHlvcUlFQjBlWEJsSUh0Q1UwUmhkR0ZVWVdKc1pVTmxiR3hiWFgwZ0tpOGdZMlZzYkhNNklFSlRSR0YwWVZSaFlteGxRMlZzYkZ0ZFhISmNiaUFnSUNBZ0lDQWdJQ0FnSUN3Z0x5b3FJRUIwZVhCbElIdHVkVzFpWlhKOUlDb3ZJR1p5YjIxSmJtUmxlRG9nYm5WdFltVnlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDd2dMeW9xSUVCMGVYQmxJSHR1ZFcxaVpYSjlJQ292SUhSdlNXNWtaWGc2SUc1MWJXSmxjaWtnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JtYjNJZ0tHeGxkQ0JwSUQwZ1puSnZiVWx1WkdWNE95QnBJRDRnZEc5SmJtUmxlRHNnYVMwdEtTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6ZDJGd0tHTmxiR3h6TENCcExDQnBJQzBnTVNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQjlPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQjJZWElnYzNkaGNFeDBjaUE5SUdaMWJtTjBhVzl1SUNndktpb2dRSFI1Y0dVZ2UwSlRSR0YwWVZSaFlteGxRMlZzYkZ0ZGZTQXFMeUJqWld4c2N6b2dRbE5FWVhSaFZHRmliR1ZEWld4c1cxMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0xDQXZLaW9nUUhSNWNHVWdlMjUxYldKbGNuMGdLaThnWm5KdmJVbHVaR1Y0T2lCdWRXMWlaWEpjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdMQ0F2S2lvZ1FIUjVjR1VnZTI1MWJXSmxjbjBnS2k4Z2RHOUpibVJsZURvZ2JuVnRZbVZ5S1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdadmNpQW9iR1YwSUdrZ1BTQm1jbTl0U1c1a1pYZzdJR2tnUENCMGIwbHVaR1Y0T3lCcEt5c3BJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOM1lYQW9ZMlZzYkhNc0lHa3NJR2tnS3lBeEtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJSDA3WEhKY2JseHlYRzRnSUNBZ0lDQWdJSFpoY2lCemQyRndJRDBnWm5WdVkzUnBiMjRnS0M4cUtpQkFkSGx3WlNCN1FsTkVZWFJoVkdGaWJHVkRaV3hzVzExOUlDb3ZJR0Z5Y2pvZ1FsTkVZWFJoVkdGaWJHVkRaV3hzVzExY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnTENBdktpb2dRSFI1Y0dVZ2UyNTFiV0psY24wZ0tpOGdhV0U2SUc1MWJXSmxjbHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQXNJQzhxS2lCQWRIbHdaU0I3Ym5WdFltVnlmU0FxTHlCcFlqb2diblZ0WW1WeUtTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUIwWlcxd0lEMGdZWEp5VzJsaFhUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1lYSnlXMmxoWFNBOUlHRnljbHRwWWwwN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdGeWNsdHBZbDBnUFNCMFpXMXdPMXh5WEc0Z0lDQWdJQ0FnSUgwN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUhaaGNpQmthWEpsWTNScGIyNXpJRDBnZXlCeWRHdzZJQ2RTU1VkSVZDMVVUeTFNUlVaVUp5d2diSFJ5T2lBblRFVkdWQzFVVHkxU1NVZElWQ2NnZlR0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQnZia2R5YVdSRGIyNW1hV2QxY21GMGFXOXVRMmhoYm1kbFpDaGxkbVZ1ZEVGeVozTTZJRUpUUTI5dVptbG5WWEJrWVhSbFpFVjJaVzUwS1NCN1hISmNiaUFnSUNBZ0lDQWdMeThnWTI5dWMyOXNaUzVzYjJjb0oyZHlhV1FnWTI5dVptbG5kWEpoZEdsdmJpQjFjR1JoZEdWa0p5d2daWFpsYm5SQmNtZHpLVHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdMeThnWkdWaWRXZG5aWEk3WEhKY2JseHlYRzRnSUNBZ0lDQWdJSFpoY2lCaFkzUnBiMjRnUFNCbGRtVnVkRUZ5WjNNdVJYWmxiblJFWVhSaExrRmpkR2x2Ymp0Y2NseHVJQ0FnSUNBZ0lDQjJZWElnWjNKcFpFbGtJRDBnZEdocGN5NXZjSFJwYjI1ekxtZHlhV1JKWkR0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlHTnZiSE1nUFNCMGFHbHpMbWhsWVdRdVoyVjBSM0pwWkZScGRHeGxjMUp2ZHlncExtTmxiR3h6TzF4eVhHNGdJQ0FnSUNBZ0lDOHZJR052Ym5OdmJHVXViRzluS0dOdmJITXBPMXh5WEc0Z0lDQWdJQ0FnSUhaaGNpQmpiMnh6VDJKcUlEMGdlMzA3WEhKY2JpQWdJQ0FnSUNBZ1kyOXNjeTVtYjNKRllXTm9LQ2hqYjJ3c0lHbHVaR1Y0S1NBOVBpQjdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2NISnZjQ0E5SUdOdmJDNXZjSFJwYjI1ekxsQnliM0JPWVcxbE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9JWEJ5YjNBcElISmxkSFZ5Ymp0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJoYzJNZ1BTQjBjblZsTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1kyOXNMbWhoYzBOc1lYTnpLQ2R6YjNKMGFXNW5YMlJsYzJNbktTbGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0Z6WXlBOUlHWmhiSE5sTzF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJR052YkVGMGRISTZJRUpUUTI5c2RXMXVVMlYwZEdsdVozTWdQU0I3SUZkcFpIUm9PaUJqYjJ3dVoyVjBRM056S0NkM2FXUjBhQ2NwTENCV2FYTnBZbXhsT2lCamIyd3VkbWx6YVdKc1pTd2dRWE5qWlc1a2FXNW5PaUJoYzJNc0lGQnZjMmwwYVc5dU9pQnBibVJsZUNCOVhISmNibHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMnh6VDJKcVczQnliM0JkSUQwZ1kyOXNRWFIwY2p0Y2NseHVJQ0FnSUNBZ0lDQjlLVHRjY2x4dVhISmNibHh5WEc1Y2NseHVJQ0FnSUNBZ0lDQkRiMjlyYVdWSVpXeHdaWEl1WkdWc1pYUmxLR2R5YVdSSlpDazdYSEpjYmlBZ0lDQWdJQ0FnYzJWMFZHbHRaVzkxZENnb0tTQTlQaUI3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQzh2SUdOdmJuTnZiR1V1Ykc5bktDZERiMnh6YjJKcVpXTjBPaUFuTENCamIyeHpUMkpxS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnUTI5dmEybGxTR1ZzY0dWeUxuTmxkRXBUVDA0b1ozSnBaRWxrTENCamIyeHpUMkpxTENCN0lHUmhlWE02SURNd0xDQnpaV04xY21VNklIUnlkV1VzSUZOaGJXVlRhWFJsT2lBbmMzUnlhV04wSnlCOUtUdGNjbHh1SUNBZ0lDQWdJQ0I5TENBMU1EQXBPMXh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUc5dVIzSnBaRVJoZEdGQ2IzVnVaQ2hsZG1WdWRFRnlaM002SUVKVFJYWmxiblFwSUh0Y2NseHVJQ0FnSUNBZ0lDQXZMeUJqYjI1emIyeGxMbXh2WnlobGRtVnVkRUZ5WjNNcE8xeHlYRzVjY2x4dUlDQWdJQ0FnSUNBdkx5QjJZWElnWjNKcFpDQTlJR1YyWlc1MFFYSm5jeTV6YjNWeVkyVTdYSEpjYmlBZ0lDQWdJQ0FnTHk5Y2NseHVJQ0FnSUNBZ0lDQXZMeUJsYm1GaWJHVnpJSFJvWlNCamIyNW1hV2QxY21GMGFXOXVJRzltSUdOdmJIVnRibk5jY2x4dUlDQWdJQ0FnSUNBdkwxeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdVkyOXVabWxuZFhKaFlteGxSM0pwWkNncE8xeHlYRzVjY2x4dUlDQWdJQ0FnSUNBdkwxeHlYRzRnSUNBZ0lDQWdJQzh2SUdWdVlXSnNaWE1nZEc4Z2NtVXRiM0prWlhJZ2RHaGxJR052YkhWdGJuTmNjbHh1SUNBZ0lDQWdJQ0F2TDF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11Wlc1aFlteGxRMjlzZFcxdVVtVnZjbVJsY21sdVp5Z3BPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQXZMMXh5WEc0Z0lDQWdJQ0FnSUM4dklHMWhhMlVnZEdobElHZHlhV1FnY21WemFYaGxZV0pzWlZ4eVhHNGdJQ0FnSUNBZ0lDOHZYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NXlaWE5wZW1GaWJHVkhjbWxrS0NrN1hISmNiaUFnSUNCOVhISmNibjFjY2x4dUlpd2lhVzF3YjNKMElIc2dRbE5FWVhSaFZHRmliR1ZDWVhObElIMGdabkp2YlNCY0lpNHZRbE5FWVhSaFZHRmliR1ZDWVhObFhDSTdYSEpjYm1sdGNHOXlkQ0I3SUVKVFJHRjBZVlJoWW14bFUyVnNaV04wYjNJZ2ZTQm1jbTl0SUZ3aUxpOUNVMFJoZEdGVVlXSnNaVk5sYkdWamRHOXlYQ0k3WEhKY2JseHlYRzVsZUhCdmNuUWdZMnhoYzNNZ1FsTkVZWFJoVkdGaWJHVlRaV3hsWTNSdmNsZHBibVJ2ZDBOdmJHeGxZM1JwYjI0Z1pYaDBaVzVrY3lCQ1UwUmhkR0ZVWVdKc1pVSmhjMlVnZTF4eVhHNWNjbHh1SUNBZ0lHbDBaVzF6T2lCQ1UwUmhkR0ZVWVdKc1pWTmxiR1ZqZEc5eVcxMDdYSEpjYmx4eVhHNGdJQ0FnWTI5dWMzUnlkV04wYjNJb0tTQjdYSEpjYmlBZ0lDQWdJQ0FnYzNWd1pYSW9LVHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbWwwWlcxeklEMGdXMTA3WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ1lXUmtLR2wwWlcwNklFSlRSR0YwWVZSaFlteGxVMlZzWldOMGIzSXBJSHRjY2x4dUlDQWdJQ0FnSUNCcFppQW9JWFJvYVhNdVptbHVaRWwwWlcwb2FYUmxiUzV2Y0hScGIyNXpMazF2WkdWc1RtRnRaU2twWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWFYUmxiWE11Y0hWemFDaHBkR1Z0S1R0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQm1hVzVrU1hSbGJTaHRiMlJsYkU1aGJXVTZJSE4wY21sdVp5azZJRUpUUkdGMFlWUmhZbXhsVTJWc1pXTjBiM0lnZTF4eVhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbWwwWlcxekxtWnBibVFvS0dsMFpXMHBJRDArSUdsMFpXMHViM0IwYVc5dWN5NU5iMlJsYkU1aGJXVWdQVDA5SUcxdlpHVnNUbUZ0WlNrN1hISmNiaUFnSUNCOVhISmNibjFjY2x4dUlpd2lhVzF3YjNKMElIc2dRbE5KYm5CMWRFOXdkR2x2Ym5NZ2ZTQm1jbTl0SUZ3aUxpNHZZMjl0Ylc5dVZIbHdaWE12WTI5dGJXOXVMWFI1Y0dWelhDSTdYSEpjYm1sdGNHOXlkQ0I3SUVKVFJHRjBZVlJoWW14bFNXNXdkWFFnZlNCbWNtOXRJRndpTGk5Q1UwUmhkR0ZVWVdKc1pVbHVjSFYwWENJN1hISmNibHh5WEc1amJHRnpjeUJDVTBSaGRHRlVZV0pzWlZSbGVIUkpibkIxZEVWNGRDQmxlSFJsYm1SeklFSlRSR0YwWVZSaFlteGxTVzV3ZFhRZ2UxeHlYRzVjY2x4dUlDQWdJR052Ym5OMGNuVmpkRzl5S0c5d2RHbHZibk02SUVKVFNXNXdkWFJQY0hScGIyNXpLU0I3WEhKY2JpQWdJQ0FnSUNBZ2MzVndaWElvYjNCMGFXOXVjeWs3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTV2Y0hScGIyNXpJRDBnYjNCMGFXOXVjenRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbkpsYm1SbGNpZ3BPMXh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUhKbGJtUmxjaWdwSUh0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG1Wc1pXMWxiblFnUFNCa2IyTjFiV1Z1ZEM1blpYUkZiR1Z0Wlc1MFFubEpaQ2gwYUdsekxtOXdkR2x2Ym5NdVJXeGxiV1Z1ZEVsa0tUdGNjbHh1SUNBZ0lIMWNjbHh1ZlZ4eVhHNWNjbHh1Wlhod2IzSjBJSHNnUWxORVlYUmhWR0ZpYkdWVVpYaDBTVzV3ZFhSRmVIUWdmVnh5WEc0aUxDSnBiWEJ2Y25RZ2V5QkNVMFJoZEdGVVlXSnNaVU52YkVSbFptbHVhWFJwYjI0c0lFSlRSR0YwWVZSaFlteGxUM0IwYVc5dWN5d2dRbE5FWVhSaFZHRmliR1ZRWVdkcGJtZE5aWFJoUkdGMFlTd2daMlYwVG1WNGRGQmhaMlZQWm1ac2FXNWxMQ0JuWlhSVmNteERZV3hzWW1GamF5QjlJR1p5YjIwZ1hDSXVMaTlqYjIxdGIyNVVlWEJsY3k5amIyMXRiMjR0ZEhsd1pYTmNJanRjY2x4dWFXMXdiM0owSUhzZ1FsTkVZWFJoVkdGaWJHVWdmU0JtY205dElGd2lMaTlDVTBSaGRHRlVZV0pzWlZ3aU8xeHlYRzVjY2x4dVhISmNibVY0Y0c5eWRDQmpiR0Z6Y3lCQ1UwWnNkV1Z1ZEVKMWFXeGtaWElnZTF4eVhHNWNjbHh1WEhKY2JpQWdJQ0J2Y0hScGIyNXpPaUJDVTBSaGRHRlVZV0pzWlU5d2RHbHZibk5jY2x4dVhISmNiaUFnSUNCamIyNXpkSEoxWTNSdmNpaHZjSFJwYjI1ek9pQkNVMFJoZEdGVVlXSnNaVTl3ZEdsdmJuTXBJSHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbTl3ZEdsdmJuTWdQU0J2Y0hScGIyNXpJRDgvSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWlc1aFlteGxTVzVtYVc1cGRHVlRZM0p2Ykd3NklIUnlkV1VzWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR05oWTJobFVtVnpjRzl1YzJWek9pQm1ZV3h6WlN4Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWjNKcFpFbGtPaUFuWW5ORVlYUmhWR0ZpYkdVbkxGeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCamIyNTBZV2x1WlhKSlpEb2dKMkp6UTI5dWRHRnBibVZ5Snl4Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYVhOU1pXRmtiMjVzZVRvZ1ptRnNjMlVzWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR052YkVSbFptbHVhWFJwYjI0NklGdGRMRnh5WEc0Z0lDQWdJQ0FnSUgwN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUdsbUlDZ2hkR2hwY3k1dmNIUnBiMjV6TG1SaGRHRlRiM1Z5WTJVcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTV2Y0hScGIyNXpMbVJoZEdGVGIzVnlZMlVnUFNCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnVZVzFsT2lBblluTkVZWFJoVTI5MWNtTmxKeXhjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdSaGRHRTZJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBibWwwUkdGMFlUb2dXMTBzWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiV1YwWVVSaGRHRTZJRzVsZHlCQ1UwUmhkR0ZVWVdKc1pWQmhaMmx1WjAxbGRHRkVZWFJoS0NsY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMHNYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwYzFKbGJXOTBaVG9nZEhKMVpTeGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2RsZEZCaFoyVlBabVpzYVc1bFEwSTZJQ2h3WVdkbExDQmtZWFJoTENCdFpHRjBZU2tnUFQ0Z2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGNpQnpkR0Z5ZENBOUlFMWhkR2d1YldGNEtEQXNJQ2h3WVdkbElDMGdNU2tnS2lCdFpHRjBZUzV3WVdkbFUybDZaU2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUdWdVpDQTlJRTFoZEdndWJXbHVLSE4wWVhKMElDc2diV1JoZEdFdWNHRm5aVk5wZW1Vc0lHUmhkR0V1YkdWdVozUm9LVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZWElnY0dGblpVUmhkR0VnUFNCYlhUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSWdLR3hsZENCcGJtUmxlQ0E5SUhOMFlYSjBPeUJwYm1SbGVDQThJR1Z1WkRzZ2FXNWtaWGdyS3lrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCa2RDQTlJR1JoZEdGYmFXNWtaWGhkTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCd1lXZGxSR0YwWVM1d2RYTm9LR1IwS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIQmhaMlZFWVhSaE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnYzNSaGRHbGpJRU55WldGMFpVSjFhV3hrWlhJb2IzQjBhVzl1Y3o4NklFSlRSR0YwWVZSaFlteGxUM0IwYVc5dWN5a2dlMXh5WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ1FsTkdiSFZsYm5SQ2RXbHNaR1Z5S0c5d2RHbHZibk1wTzF4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lFSjFhV3hrS0NrZ2UxeHlYRzRnSUNBZ0lDQWdJSFpoY2lCa1lYUmhWR0ZpYkdVZ1BTQnVaWGNnUWxORVlYUmhWR0ZpYkdVb2RHaHBjeTV2Y0hScGIyNXpLVHRjY2x4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnWkdGMFlWUmhZbXhsTzF4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lGTmxkRWxrS0hSaFlteGxTV1E2SUhOMGNtbHVaeWtnZTF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11YjNCMGFXOXVjeTVuY21sa1NXUWdQU0IwWVdKc1pVbGtPMXh5WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsek8xeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJRk5sZEVOdmJuUmhhVzVsY2tsa0tHTnZiblJoYVc1bGNrbGtPaUJ6ZEhKcGJtY3BJSHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbTl3ZEdsdmJuTXVZMjl1ZEdGcGJtVnlTV1FnUFNCamIyNTBZV2x1WlhKSlpEdGNjbHh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3p0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQlRaWFJFWVhSaFUyOTFjbU5sVG1GdFpTaGtjem9nYzNSeWFXNW5LU0I3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTV2Y0hScGIyNXpMbVJoZEdGVGIzVnlZMlV1Ym1GdFpTQTlJR1J6TzF4eVhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpPMXh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUM4cUtseHlYRzRnSUNBZ0lDb2dSR1ZtWVhWc2RDQnBjeUJ6WlhRZ2RHOGdkSEoxWlZ4eVhHNGdJQ0FnSUNvZ1FIQmhjbUZ0SUhKbGJXOTBaU0JjY2x4dUlDQWdJQ0FxSUVCeVpYUjFjbTV6SUZ4eVhHNGdJQ0FnSUNvdlhISmNiaUFnSUNCSmMxSmxiVzkwWlNoeVpXMXZkR1U2SUdKdmIyeGxZVzRnUFNCMGNuVmxLU0I3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTV2Y0hScGIyNXpMbVJoZEdGVGIzVnlZMlV1YVhOU1pXMXZkR1VnUFNCeVpXMXZkR1U3WEhKY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTTdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnTHlvcVhISmNiaUFnSUNBZ0tpQkVaV1poZFd4MElHbHpJSE5sZENCMGJ5Qm1ZV3h6WlZ4eVhHNGdJQ0FnSUNvZ1FIQmhjbUZ0SUhKbFlXUnZibXg1SUZ4eVhHNGdJQ0FnSUNvZ1FISmxkSFZ5Ym5NZ1hISmNiaUFnSUNBZ0tpOWNjbHh1SUNBZ0lFbHpVbVZoWkc5dWJIa29jbVZoWkc5dWJIazZJR0p2YjJ4bFlXNGdQU0JtWVd4elpTa2dlMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXViM0IwYVc5dWN5NXBjMUpsWVdSdmJteDVJRDBnY21WaFpHOXViSGs3WEhKY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTTdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnTHlvcVhISmNiaUFnSUNBZ0tpQkVaV1poZFd4MElHbHpJSE5sZENCMGJ5Qm1ZV3h6WlZ4eVhHNGdJQ0FnSUNvZ1FIQmhjbUZ0SUdOaFkyaGxJRnh5WEc0Z0lDQWdJQ29nUUhKbGRIVnlibk1nWEhKY2JpQWdJQ0FnS2k5Y2NseHVJQ0FnSUVOaFkyaGxVbVZ6Y0c5dWMyVnpLR05oWTJobE9pQmliMjlzWldGdUlEMGdabUZzYzJVcElIdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtOXdkR2x2Ym5NdVkyRmphR1ZTWlhOd2IyNXpaWE1nUFNCallXTm9aVHRjY2x4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN6dGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0F2S2lwY2NseHVJQ0FnSUNBcUlFUmxabUYxYkhRZ2FYTWdjMlYwSUhSdklIUnlkV1ZjY2x4dUlDQWdJQ0FxSUVCd1lYSmhiU0JsYm1GaWJHVWdYSEpjYmlBZ0lDQWdLaUJBY21WMGRYSnVjeUJjY2x4dUlDQWdJQ0FxTDF4eVhHNGdJQ0FnUlc1aFlteGxTVzVtYVc1cGRHVlRZM0p2Ykd3b1pXNWhZbXhsT2lCaWIyOXNaV0Z1SUQwZ2RISjFaU2tnZTF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11YjNCMGFXOXVjeTVsYm1GaWJHVkpibVpwYm1sMFpWTmpjbTlzYkNBOUlHVnVZV0pzWlR0Y2NseHVJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjenRjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNCT1pYaDBVR0ZuWlZWeWJFTmhiR3hpWVdOcktHTmhiR3hpWVdOck9pQm5aWFJWY214RFlXeHNZbUZqYXlrZ2UxeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWIzQjBhVzl1Y3k1a1lYUmhVMjkxY21ObExuVnliQ0E5SUdOaGJHeGlZV05yTzF4eVhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpPMXh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUVkbGRFNWxlSFJRWVdkbFQyWm1iR2x1WlVOaGJHeGlZV05yS0dOaGJHeGlZV05yT2lCblpYUk9aWGgwVUdGblpVOW1abXhwYm1VcElIdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtOXdkR2x2Ym5NdVpHRjBZVk52ZFhKalpTNW5aWFJRWVdkbFQyWm1iR2x1WlVOQ0lEMGdZMkZzYkdKaFkyczdYSEpjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNN1hISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdRV1JrUTI5c2RXMXVLR052YkVOdmJtWnBaem9nS0c5d2RHbHZibk02SUVKVFJHRjBZVlJoWW14bFEyOXNSR1ZtYVc1cGRHbHZiaWtnUFQ0Z2RtOXBaQ0I4SUVKVFJHRjBZVlJoWW14bFEyOXNSR1ZtYVc1cGRHbHZiaWtnZTF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0JwWmlBb2RIbHdaVzltSUdOdmJFTnZibVpwWnlBOVBTQmNJbVoxYm1OMGFXOXVYQ0lwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlHTnZiRG9nUWxORVlYUmhWR0ZpYkdWRGIyeEVaV1pwYm1sMGFXOXVJRDBnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1JHRjBZVk52ZFhKalpVNWhiV1U2SUhSb2FYTXViM0IwYVc5dWN5NWtZWFJoVTI5MWNtTmxMbTVoYldVc1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQlhhV1IwYURvZ1hDSTVNSEI0WENJc1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQkRiMjUwWVdsdVpYSkpaRG9nZEdocGN5NXZjSFJwYjI1ekxtTnZiblJoYVc1bGNrbGtMRnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnU1hOTFpYazZJR1poYkhObExGeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdSR0YwWVZSNWNHVTZJQ2QwWlhoMEp5eGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1kyOXNRMjl1Wm1sbktHTnZiQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWIzQjBhVzl1Y3k1amIyeEVaV1pwYm1sMGFXOXVMbkIxYzJnb1kyOXNLVHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdaV3h6WlNCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXViM0IwYVc5dWN5NWpiMnhFWldacGJtbDBhVzl1TG5CMWMyZ29ZMjlzUTI5dVptbG5LVHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE03WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ1FXUmtTVzVwZEVSaGRHRW9ZMjl1Wm1sbk9pQW9aR0YwWVRvZ2V5QnBibWwwUkdGMFlUb2dZVzU1VzEwN0lHMWxkR0ZFWVhSaE9pQkNVMFJoZEdGVVlXSnNaVkJoWjJsdVowMWxkR0ZFWVhSaElIMHBJRDArSUhadmFXUXBJSHRjY2x4dUlDQWdJQ0FnSUNCamIyNW1hV2NvZEdocGN5NXZjSFJwYjI1ekxtUmhkR0ZUYjNWeVkyVXVaR0YwWVNrN1hISmNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE03WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzU5SWwwc0ltNWhiV1Z6SWpwYkluSnZiM1FpTENKbVlXTjBiM0o1SWl3aVpYaHdiM0owY3lJc0ltMXZaSFZzWlNJc0ltUmxabWx1WlNJc0ltRnRaQ0lzSW5ObGJHWWlMQ0pUZEhKcGJtY2lMQ0p3Y205MGIzUjVjR1VpTENKMGIwTmhiV0ZzUTJGelpTSXNJblJvYVhNaUxDSnlaWEJzWVdObElpd2lkMjl5WkNJc0ltbHVaR1Y0SWl3aWRHOU1iM2RsY2tOaGMyVWlMQ0owYjFWd2NHVnlRMkZ6WlNJc0luUnZVR0Z6WTJGc1EyRnpaU0lzSW5SdlVHRnpZMkZzUTJGelpVcHpiMjRpTENKbWIzSnRZWFFpTENKaGNtZHpJaXdpWVhKbmRXMWxiblJ6SWl3aWJXRjBZMmdpTENKdWRXMWlaWElpTENKZlgzZGxZbkJoWTJ0ZmJXOWtkV3hsWDJOaFkyaGxYMThpTENKZlgzZGxZbkJoWTJ0ZmNtVnhkV2x5WlY5Zklpd2liVzlrZFd4bFNXUWlMQ0pqWVdOb1pXUk5iMlIxYkdVaUxDSjFibVJsWm1sdVpXUWlMQ0pmWDNkbFluQmhZMnRmYlc5a2RXeGxjMTlmSWl3aVpDSXNJbVJsWm1sdWFYUnBiMjRpTENKclpYa2lMQ0p2SWl3aVQySnFaV04wSWl3aVpHVm1hVzVsVUhKdmNHVnlkSGtpTENKbGJuVnRaWEpoWW14bElpd2laMlYwSWl3aWIySnFJaXdpY0hKdmNDSXNJbWhoYzA5M2JsQnliM0JsY25SNUlpd2lZMkZzYkNJc0luSWlMQ0pUZVcxaWIyd2lMQ0owYjFOMGNtbHVaMVJoWnlJc0luWmhiSFZsSWl3aVltOTBkRzl0SWl3aWNtbG5hSFFpTENKc1pXWjBJaXdpWVhWMGJ5SXNJbUpoYzJWUWJHRmpaVzFsYm5Seklpd2ljM1JoY25RaUxDSmxibVFpTENKamJHbHdjR2x1WjFCaGNtVnVkSE1pTENKMmFXVjNjRzl5ZENJc0luQnZjSEJsY2lJc0luSmxabVZ5Wlc1alpTSXNJblpoY21saGRHbHZibEJzWVdObGJXVnVkSE1pTENKeVpXUjFZMlVpTENKaFkyTWlMQ0p3YkdGalpXMWxiblFpTENKamIyNWpZWFFpTENKaVpXWnZjbVZTWldGa0lpd2ljbVZoWkNJc0ltRm1kR1Z5VW1WaFpDSXNJbUpsWm05eVpVMWhhVzRpTENKdFlXbHVJaXdpWVdaMFpYSk5ZV2x1SWl3aVltVm1iM0psVjNKcGRHVWlMQ0ozY21sMFpTSXNJbUZtZEdWeVYzSnBkR1VpTENKdGIyUnBabWxsY2xCb1lYTmxjeUlzSW1kbGRFNXZaR1ZPWVcxbElpd2laV3hsYldWdWRDSXNJbTV2WkdWT1lXMWxJaXdpWjJWMFYybHVaRzkzSWl3aWJtOWtaU0lzSW5kcGJtUnZkeUlzSW5SdlUzUnlhVzVuSWl3aWIzZHVaWEpFYjJOMWJXVnVkQ0lzSW1SbFptRjFiSFJXYVdWM0lpd2lhWE5GYkdWdFpXNTBJaXdpUld4bGJXVnVkQ0lzSW1selNGUk5URVZzWlcxbGJuUWlMQ0pJVkUxTVJXeGxiV1Z1ZENJc0ltbHpVMmhoWkc5M1VtOXZkQ0lzSWxOb1lXUnZkMUp2YjNRaUxDSnVZVzFsSWl3aVpXNWhZbXhsWkNJc0luQm9ZWE5sSWl3aVptNGlMQ0pmY21WbUlpd2ljM1JoZEdVaUxDSnJaWGx6SWl3aVpXeGxiV1Z1ZEhNaUxDSm1iM0pGWVdOb0lpd2ljM1I1YkdVaUxDSnpkSGxzWlhNaUxDSmhkSFJ5YVdKMWRHVnpJaXdpWVhOemFXZHVJaXdpY21WdGIzWmxRWFIwY21saWRYUmxJaXdpYzJWMFFYUjBjbWxpZFhSbElpd2laV1ptWldOMElpd2lYM0psWmpJaUxDSnBibWwwYVdGc1UzUjViR1Z6SWl3aWNHOXphWFJwYjI0aUxDSnZjSFJwYjI1eklpd2ljM1J5WVhSbFoza2lMQ0owYjNBaUxDSnRZWEpuYVc0aUxDSmhjbkp2ZHlJc0luQnliM0JsY25SNUlpd2lZWFIwY21saWRYUmxJaXdpY21WeGRXbHlaWE1pTENKblpYUkNZWE5sVUd4aFkyVnRaVzUwSWl3aWMzQnNhWFFpTENKTllYUm9JaXdpYldGNElpd2liV2x1SWl3aWNtOTFibVFpTENKblpYUkNiM1Z1WkdsdVowTnNhV1Z1ZEZKbFkzUWlMQ0pwYm1Oc2RXUmxVMk5oYkdVaUxDSnlaV04wSWl3aWMyTmhiR1ZZSWl3aWMyTmhiR1ZaSWl3aWIyWm1jMlYwU0dWcFoyaDBJaXdpYjJabWMyVjBWMmxrZEdnaUxDSjNhV1IwYUNJc0ltaGxhV2RvZENJc0luZ2lMQ0o1SWl3aVoyVjBUR0Y1YjNWMFVtVmpkQ0lzSW1Oc2FXVnVkRkpsWTNRaUxDSmhZbk1pTENKdlptWnpaWFJNWldaMElpd2liMlptYzJWMFZHOXdJaXdpWTI5dWRHRnBibk1pTENKd1lYSmxiblFpTENKamFHbHNaQ0lzSW5KdmIzUk9iMlJsSWl3aVoyVjBVbTl2ZEU1dlpHVWlMQ0p1WlhoMElpd2lhWE5UWVcxbFRtOWtaU0lzSW5CaGNtVnVkRTV2WkdVaUxDSm9iM04wSWl3aVoyVjBRMjl0Y0hWMFpXUlRkSGxzWlNJc0ltbHpWR0ZpYkdWRmJHVnRaVzUwSWl3aWFXNWtaWGhQWmlJc0ltZGxkRVJ2WTNWdFpXNTBSV3hsYldWdWRDSXNJbVJ2WTNWdFpXNTBJaXdpWkc5amRXMWxiblJGYkdWdFpXNTBJaXdpWjJWMFVHRnlaVzUwVG05a1pTSXNJbUZ6YzJsbmJtVmtVMnh2ZENJc0ltZGxkRlJ5ZFdWUFptWnpaWFJRWVhKbGJuUWlMQ0p2Wm1aelpYUlFZWEpsYm5RaUxDSm5aWFJQWm1aelpYUlFZWEpsYm5RaUxDSnBjMFpwY21WbWIzZ2lMQ0p1WVhacFoyRjBiM0lpTENKMWMyVnlRV2RsYm5RaUxDSmpkWEp5Wlc1MFRtOWtaU0lzSW1OemN5SXNJblJ5WVc1elptOXliU0lzSW5CbGNuTndaV04wYVhabElpd2lZMjl1ZEdGcGJpSXNJbmRwYkd4RGFHRnVaMlVpTENKbWFXeDBaWElpTENKblpYUkRiMjUwWVdsdWFXNW5RbXh2WTJzaUxDSm5aWFJOWVdsdVFYaHBjMFp5YjIxUWJHRmpaVzFsYm5RaUxDSjNhWFJvYVc0aUxDSnRaWEpuWlZCaFpHUnBibWRQWW1wbFkzUWlMQ0p3WVdSa2FXNW5UMkpxWldOMElpd2laWGh3WVc1a1ZHOUlZWE5vVFdGd0lpd2lhR0Z6YUUxaGNDSXNJbDl6ZEdGMFpTUnRiMlJwWm1sbGNuTkVZWFJoSkNJc0ltRnljbTkzUld4bGJXVnVkQ0lzSW5CdmNIQmxjazltWm5ObGRITWlMQ0p0YjJScFptbGxjbk5FWVhSaElpd2lZbUZ6WlZCc1lXTmxiV1Z1ZENJc0ltRjRhWE1pTENKc1pXNGlMQ0p3WVdSa2FXNW5JaXdpY21WamRITWlMQ0owYjFCaFpHUnBibWRQWW1wbFkzUWlMQ0poY25KdmQxSmxZM1FpTENKdGFXNVFjbTl3SWl3aWJXRjRVSEp2Y0NJc0ltVnVaRVJwWm1ZaUxDSnpkR0Z5ZEVScFptWWlMQ0poY25KdmQwOW1abk5sZEZCaGNtVnVkQ0lzSW1Oc2FXVnVkRk5wZW1VaUxDSmpiR2xsYm5SSVpXbG5hSFFpTENKamJHbGxiblJYYVdSMGFDSXNJbU5sYm5SbGNsUnZVbVZtWlhKbGJtTmxJaXdpWTJWdWRHVnlJaXdpYjJabWMyVjBJaXdpWVhocGMxQnliM0FpTENKalpXNTBaWEpQWm1aelpYUWlMQ0pmYjNCMGFXOXVjeVJsYkdWdFpXNTBJaXdpY1hWbGNubFRaV3hsWTNSdmNpSXNJbkpsY1hWcGNtVnpTV1pGZUdsemRITWlMQ0puWlhSV1lYSnBZWFJwYjI0aUxDSjFibk5sZEZOcFpHVnpJaXdpYldGd1ZHOVRkSGxzWlhNaUxDSmZUMkpxWldOMEpHRnpjMmxuYmpJaUxDSndiM0J3WlhKU1pXTjBJaXdpZG1GeWFXRjBhVzl1SWl3aWIyWm1jMlYwY3lJc0ltZHdkVUZqWTJWc1pYSmhkR2x2YmlJc0ltRmtZWEIwYVhabElpd2ljbTkxYm1SUFptWnpaWFJ6SWl3aWFYTkdhWGhsWkNJc0lsOXZabVp6WlhSekpIZ2lMQ0pmYjJabWMyVjBjeVI1SWl3aVgzSmxaak1pTENKb1lYTllJaXdpYUdGeldTSXNJbk5wWkdWWUlpd2ljMmxrWlZraUxDSjNhVzRpTENKb1pXbG5hSFJRY205d0lpd2lkMmxrZEdoUWNtOXdJaXdpZG1semRXRnNWbWxsZDNCdmNuUWlMQ0pmVDJKcVpXTjBKR0Z6YzJsbmJpSXNJbU52YlcxdmJsTjBlV3hsY3lJc0lsOXlaV1kwSWl3aVpIQnlJaXdpWkdWMmFXTmxVR2w0Wld4U1lYUnBieUlzSW5KdmRXNWtUMlptYzJWMGMwSjVSRkJTSWl3aVgzSmxaalVpTENKZmIzQjBhVzl1Y3lSbmNIVkJZMk5sYkdWeVlYUWlMQ0pmYjNCMGFXOXVjeVJoWkdGd2RHbDJaU0lzSWw5dmNIUnBiMjV6SkhKdmRXNWtUMlptYzJWMGN5SXNJbVJoZEdFaUxDSndZWE56YVhabElpd2lhVzV6ZEdGdVkyVWlMQ0pmYjNCMGFXOXVjeVJ6WTNKdmJHd2lMQ0p6WTNKdmJHd2lMQ0pmYjNCMGFXOXVjeVJ5WlhOcGVtVWlMQ0p5WlhOcGVtVWlMQ0p6WTNKdmJHeFFZWEpsYm5Seklpd2ljMk55YjJ4c1VHRnlaVzUwSWl3aVlXUmtSWFpsYm5STWFYTjBaVzVsY2lJc0luVndaR0YwWlNJc0luSmxiVzkyWlVWMlpXNTBUR2x6ZEdWdVpYSWlMQ0pvWVhOb0lpd2laMlYwVDNCd2IzTnBkR1ZRYkdGalpXMWxiblFpTENKdFlYUmphR1ZrSWl3aVoyVjBUM0J3YjNOcGRHVldZWEpwWVhScGIyNVFiR0ZqWlcxbGJuUWlMQ0puWlhSWGFXNWtiM2RUWTNKdmJHd2lMQ0p6WTNKdmJHeE1aV1owSWl3aWNHRm5aVmhQWm1aelpYUWlMQ0p6WTNKdmJHeFViM0FpTENKd1lXZGxXVTltWm5ObGRDSXNJbWRsZEZkcGJtUnZkMU5qY205c2JFSmhjbGdpTENKcGMxTmpjbTlzYkZCaGNtVnVkQ0lzSWw5blpYUkRiMjF3ZFhSbFpGTjBlV3hsSWl3aWIzWmxjbVpzYjNjaUxDSnZkbVZ5Wm14dmQxZ2lMQ0p2ZG1WeVpteHZkMWtpTENKMFpYTjBJaXdpWjJWMFUyTnliMnhzVUdGeVpXNTBJaXdpWW05a2VTSXNJbXhwYzNSVFkzSnZiR3hRWVhKbGJuUnpJaXdpYkdsemRDSXNJbDlsYkdWdFpXNTBKRzkzYm1WeVJHOWpkVzFsYmlJc0ltbHpRbTlrZVNJc0luUmhjbWRsZENJc0luVndaR0YwWldSTWFYTjBJaXdpY21WamRGUnZRMnhwWlc1MFVtVmpkQ0lzSW1kbGRFTnNhV1Z1ZEZKbFkzUkdjbTl0VFdsNFpXUlVlWEJsSWl3aVkyeHBjSEJwYm1kUVlYSmxiblFpTENKb2RHMXNJaXdpWjJWMFZtbGxkM0J2Y25SU1pXTjBJaXdpWTJ4cFpXNTBWRzl3SWl3aVkyeHBaVzUwVEdWbWRDSXNJbWRsZEVsdWJtVnlRbTkxYm1ScGJtZERiR2xsYm5SU1pXTjBJaXdpZDJsdVUyTnliMnhzSWl3aWMyTnliMnhzVjJsa2RHZ2lMQ0p6WTNKdmJHeElaV2xuYUhRaUxDSmthWEpsWTNScGIyNGlMQ0puWlhSRWIyTjFiV1Z1ZEZKbFkzUWlMQ0pqYjIxd2RYUmxUMlptYzJWMGN5SXNJbU52YlcxdmJsZ2lMQ0pqYjIxdGIyNVpJaXdpYldGcGJrRjRhWE1pTENKa1pYUmxZM1JQZG1WeVpteHZkeUlzSWw5dmNIUnBiMjV6SWl3aVgyOXdkR2x2Ym5Na2NHeGhZMlZ0Wlc1MElpd2lYMjl3ZEdsdmJuTWtZbTkxYm1SaGNua2lMQ0ppYjNWdVpHRnllU0lzSWw5dmNIUnBiMjV6SkhKdmIzUkNiM1Z1WkdGeWVTSXNJbkp2YjNSQ2IzVnVaR0Z5ZVNJc0lsOXZjSFJwYjI1ekpHVnNaVzFsYm5SRGIyNTBaU0lzSW1Wc1pXMWxiblJEYjI1MFpYaDBJaXdpWDI5d2RHbHZibk1rWVd4MFFtOTFibVJoY25raUxDSmhiSFJDYjNWdVpHRnllU0lzSWw5dmNIUnBiMjV6SkhCaFpHUnBibWNpTENKaGJIUkRiMjUwWlhoMElpd2lZMnhwY0hCcGJtZERiR2xsYm5SU1pXTjBJaXdpYldGcGJrTnNhWEJ3YVc1blVHRnlaVzUwY3lJc0ltTnNhWEJ3WlhKRmJHVnRaVzUwSWl3aVoyVjBRMnhwY0hCcGJtZFFZWEpsYm5Seklpd2labWx5YzNSRGJHbHdjR2x1WjFCaGNtVnVkQ0lzSW1Oc2FYQndhVzVuVW1WamRDSXNJbUZqWTFKbFkzUWlMQ0puWlhSRGJHbHdjR2x1WjFKbFkzUWlMQ0pqYjI1MFpYaDBSV3hsYldWdWRDSXNJbkpsWm1WeVpXNWpaVU5zYVdWdWRGSmxZM1FpTENKd2IzQndaWEpEYkdsbGJuUlNaV04wSWl3aVpXeGxiV1Z1ZEVOc2FXVnVkRkpsWTNRaUxDSnZkbVZ5Wm14dmQwOW1abk5sZEhNaUxDSnZabVp6WlhSRVlYUmhJaXdpYlhWc2RHbHdiSGtpTENKZmMydHBjQ0lzSWw5dmNIUnBiMjV6SkcxaGFXNUJlR2x6SWl3aVkyaGxZMnROWVdsdVFYaHBjeUlzSWw5dmNIUnBiMjV6SkdGc2RFRjRhWE1pTENKaGJIUkJlR2x6SWl3aVkyaGxZMnRCYkhSQmVHbHpJaXdpYzNCbFkybG1hV1ZrUm1Gc2JHSmhZMnRRYkdGalpXMWxiblJ6SWl3aVptRnNiR0poWTJ0UWJHRmpaVzFsYm5Seklpd2lYMjl3ZEdsdmJuTWtabXhwY0ZaaGNtbGhkR2x2SWl3aVpteHBjRlpoY21saGRHbHZibk1pTENKaGJHeHZkMlZrUVhWMGIxQnNZV05sYldWdWRITWlMQ0p3Y21WbVpYSnlaV1JRYkdGalpXMWxiblFpTENKdmNIQnZjMmwwWlZCc1lXTmxiV1Z1ZENJc0ltZGxkRVY0Y0dGdVpHVmtSbUZzYkdKaFkydFFiR0ZqWlcxbGJuUnpJaXdpY0d4aFkyVnRaVzUwY3lJc0lsOXZjSFJwYjI1ekpHRnNiRzkzWldSQmRYUnZVQ0lzSW1Gc2JHOTNaV1JRYkdGalpXMWxiblJ6SWl3aWJHVnVaM1JvSWl3aWIzWmxjbVpzYjNkeklpd2ljMjl5ZENJc0ltRWlMQ0ppSWl3aVkyOXRjSFYwWlVGMWRHOVFiR0ZqWlcxbGJuUWlMQ0p5WldabGNtVnVZMlZTWldOMElpd2lZMmhsWTJ0elRXRndJaXdpVFdGd0lpd2liV0ZyWlVaaGJHeGlZV05yUTJobFkydHpJaXdpWm1seWMzUkdhWFIwYVc1blVHeGhZMlZ0Wlc1MElpd2lhU0lzSWw5aVlYTmxVR3hoWTJWdFpXNTBJaXdpYVhOVGRHRnlkRlpoY21saGRHbHZiaUlzSW1selZtVnlkR2xqWVd3aUxDSnRZV2x1Vm1GeWFXRjBhVzl1VTJsa1pTSXNJbUZzZEZaaGNtbGhkR2x2YmxOcFpHVWlMQ0pqYUdWamEzTWlMQ0p3ZFhOb0lpd2laWFpsY25raUxDSmphR1ZqYXlJc0luTmxkQ0lzSWw5c2IyOXdJaXdpWDJraUxDSm1hWFIwYVc1blVHeGhZMlZ0Wlc1MElpd2labWx1WkNJc0luTnNhV05sSWl3aWNtVnpaWFFpTENKblpYUlRhV1JsVDJabWMyVjBjeUlzSW5CeVpYWmxiblJsWkU5bVpuTmxkSE1pTENKcGMwRnVlVk5wWkdWR2RXeHNlVU5zYVhCd1pXUWlMQ0p6YjIxbElpd2ljMmxrWlNJc0luQnlaWFpsYm5SUGRtVnlabXh2ZHlJc0luSmxabVZ5Wlc1alpVOTJaWEptYkc5M0lpd2ljRzl3Y0dWeVFXeDBUM1psY21ac2IzY2lMQ0p5WldabGNtVnVZMlZEYkdsd2NHbHVaMDltWm5ObGRITWlMQ0p3YjNCd1pYSkZjMk5oY0dWUFptWnpaWFJ6SWl3aWFYTlNaV1psY21WdVkyVklhV1JrWlc0aUxDSm9ZWE5RYjNCd1pYSkZjMk5oY0dWa0lpd2lYMjl3ZEdsdmJuTWtiMlptYzJWMElpd2lhVzUyWlhKMFJHbHpkR0Z1WTJVaUxDSnphMmxrWkdsdVp5SXNJbVJwYzNSaGJtTmxJaXdpWkdsemRHRnVZMlZCYm1SVGEybGtaR2x1WjFSdldGa2lMQ0pmWkdGMFlTUnpkR0YwWlNSd2JHRmpaVzFsYm5RaUxDSmZiM0IwYVc5dWN5UjBaWFJvWlhJaUxDSjBaWFJvWlhJaUxDSmZiM0IwYVc5dWN5UjBaWFJvWlhKUFptWnpaWFFpTENKMFpYUm9aWEpQWm1aelpYUWlMQ0pwYzBKaGMyVlFiR0ZqWlcxbGJuUWlMQ0owWlhSb1pYSlBabVp6WlhSV1lXeDFaU0lzSW01dmNtMWhiR2w2WldSVVpYUm9aWEpQWm1aelpYUldZV3gxWlNJc0ltOW1abk5sZEUxdlpHbG1hV1Z5VTNSaGRHVWlMQ0pmYjJabWMyVjBUVzlrYVdacFpYSlRkR0YwWlNRaUxDSnRZV2x1VTJsa1pTSXNJbUZzZEZOcFpHVWlMQ0poWkdScGRHbDJaU0lzSW0xcGJreGxiaUlzSW0xaGVFeGxiaUlzSW1GeWNtOTNVR0ZrWkdsdVowOWlhbVZqZENJc0ltRnljbTkzVUdGa1pHbHVaMDFwYmlJc0ltRnljbTkzVUdGa1pHbHVaMDFoZUNJc0ltRnljbTkzVEdWdUlpd2liV2x1VDJabWMyVjBJaXdpYldGNFQyWm1jMlYwSWl3aVkyeHBaVzUwVDJabWMyVjBJaXdpYjJabWMyVjBUVzlrYVdacFpYSldZV3gxWlNJc0luUmxkR2hsY2sxaGVDSXNJbkJ5WlhabGJuUmxaRTltWm5ObGRDSXNJbDl2Wm1aelpYUk5iMlJwWm1sbGNsTjBZWFJsSkRJaUxDSmZiV0ZwYmxOcFpHVWlMQ0pmWVd4MFUybGtaU0lzSWw5dlptWnpaWFFpTENKZmJHVnVJaXdpWDIxcGJpSXNJbDl0WVhnaUxDSnBjMDl5YVdkcGJsTnBaR1VpTENKZmIyWm1jMlYwVFc5a2FXWnBaWEpXWVd4MVpTSXNJbDkwWlhSb1pYSk5hVzRpTENKZmRHVjBhR1Z5VFdGNElpd2lYM0J5WlhabGJuUmxaRTltWm5ObGRDSXNJbllpTENKM2FYUm9hVzVOWVhoRGJHRnRjQ0lzSW1kbGRFTnZiWEJ2YzJsMFpWSmxZM1FpTENKbGJHVnRaVzUwVDNKV2FYSjBkV0ZzUld4bGJXVnVkQ0lzSW1selQyWm1jMlYwVUdGeVpXNTBRVzVGYkdWdFpXNTBJaXdpYjJabWMyVjBVR0Z5Wlc1MFNYTlRZMkZzWldRaUxDSnBjMFZzWlcxbGJuUlRZMkZzWldRaUxDSnZjbVJsY2lJc0ltMXZaR2xtYVdWeWN5SXNJbTFoY0NJc0luWnBjMmwwWldRaUxDSlRaWFFpTENKeVpYTjFiSFFpTENKdGIyUnBabWxsY2lJc0ltRmtaQ0lzSW1SbGNDSXNJbWhoY3lJc0ltUmxjRTF2WkdsbWFXVnlJaXdpUkVWR1FWVk1WRjlQVUZSSlQwNVRJaXdpWVhKbFZtRnNhV1JGYkdWdFpXNTBjeUlzSWtGeWNtRjVJaXdpWDJ0bGVTSXNJbkJ2Y0hCbGNrZGxibVZ5WVhSdmNpSXNJbWRsYm1WeVlYUnZjazl3ZEdsdmJuTWlMQ0pmWjJWdVpYSmhkRzl5VDNCMGFXOXVjeUlzSWw5blpXNWxjbUYwYjNKUGNIUnBiMjV6SkdSbFppSXNJbVJsWm1GMWJIUk5iMlJwWm1sbGNuTWlMQ0pmWjJWdVpYSmhkRzl5VDNCMGFXOXVjeVJrWldZeUlpd2laR1ZtWVhWc2RFOXdkR2x2Ym5NaUxDSndaVzVrYVc1bklpd2liM0prWlhKbFpFMXZaR2xtYVdWeWN5SXNJbVZtWm1WamRFTnNaV0Z1ZFhCR2JuTWlMQ0pwYzBSbGMzUnliM2xsWkNJc0luTmxkRTl3ZEdsdmJuTWlMQ0p6WlhSUGNIUnBiMjV6UVdOMGFXOXVJaXdpWTJ4bFlXNTFjRTF2WkdsbWFXVnlSV1ptWldOMGN5SXNJbTFsY21kbFpDSXNJbTl5WkdWeVRXOWthV1pwWlhKeklpd2lZM1Z5Y21WdWRDSXNJbVY0YVhOMGFXNW5JaXdpYlNJc0lsOXlaV1l6Skc5d2RHbHZibk1pTENKamJHVmhiblZ3Um00aUxDSm1iM0pqWlZWd1pHRjBaU0lzSWw5emRHRjBaU1JsYkdWdFpXNTBjeUlzSWw5emRHRjBaU1J2Y21SbGNtVmtUVzlrYVdacFpTSXNJbDl6ZEdGMFpTUnZjbVJsY21Wa1RXOWthV1pwWlRJaUxDSlFjbTl0YVhObElpd2ljbVZ6YjJ4MlpTSXNJblJvWlc0aUxDSmtaWE4wY205NUlpd2liMjVHYVhKemRGVndaR0YwWlNJc0ltTnlaV0YwWlZCdmNIQmxjaUlzSW1WMlpXNTBUR2x6ZEdWdVpYSnpJaXdpVkZKQlRsTkpWRWxQVGw5RlRrUWlMQ0puWlhSVFpXeGxZM1J2Y2lJc0luTmxiR1ZqZEc5eUlpd2laMlYwUVhSMGNtbGlkWFJsSWl3aWFISmxaa0YwZEhJaUxDSnBibU5zZFdSbGN5SXNJbk4wWVhKMGMxZHBkR2dpTENKMGNtbHRJaXdpWjJWMFUyVnNaV04wYjNKR2NtOXRSV3hsYldWdWRDSXNJbWRsZEVWc1pXMWxiblJHY205dFUyVnNaV04wYjNJaUxDSjBjbWxuWjJWeVZISmhibk5wZEdsdmJrVnVaQ0lzSW1ScGMzQmhkR05vUlhabGJuUWlMQ0pGZG1WdWRDSXNJbXB4ZFdWeWVTSXNJbTV2WkdWVWVYQmxJaXdpWjJWMFJXeGxiV1Z1ZENJc0luUjVjR1ZEYUdWamEwTnZibVpwWnlJc0ltTnZiWEJ2Ym1WdWRFNWhiV1VpTENKamIyNW1hV2NpTENKamIyNW1hV2RVZVhCbGN5SXNJbVY0Y0dWamRHVmtWSGx3WlhNaUxDSjJZV3gxWlZSNWNHVWlMQ0pTWldkRmVIQWlMQ0pVZVhCbFJYSnliM0lpTENKcGMxWnBjMmxpYkdVaUxDSm5aWFJEYkdsbGJuUlNaV04wY3lJc0ltZGxkRkJ5YjNCbGNuUjVWbUZzZFdVaUxDSnBjMFJwYzJGaWJHVmtJaXdpVG05a1pTSXNJa1ZNUlUxRlRsUmZUazlFUlNJc0ltTnNZWE56VEdsemRDSXNJbVJwYzJGaWJHVmtJaXdpYUdGelFYUjBjbWxpZFhSbElpd2labWx1WkZOb1lXUnZkMUp2YjNRaUxDSmhkSFJoWTJoVGFHRmtiM2NpTENKdWIyOXdJaXdpY21WbWJHOTNJaXdpWjJWMGFsRjFaWEo1SWl3aWFsRjFaWEo1SWl3aVJFOU5RMjl1ZEdWdWRFeHZZV1JsWkVOaGJHeGlZV05yY3lJc0ltbHpVbFJNSWl3aVpHbHlJaXdpWkdWbWFXNWxTbEYxWlhKNVVHeDFaMmx1SWl3aWNHeDFaMmx1SWl3aVkyRnNiR0poWTJzaUxDSWtJaXdpVGtGTlJTSXNJa3BSVlVWU1dWOU9UMTlEVDA1R1RFbERWQ0lzSW1wUmRXVnllVWx1ZEdWeVptRmpaU0lzSWtOdmJuTjBjblZqZEc5eUlpd2libTlEYjI1bWJHbGpkQ0lzSW5KbFlXUjVVM1JoZEdVaUxDSmxlR1ZqZFhSbElpd2laWGhsWTNWMFpVRm1kR1Z5VkhKaGJuTnBkR2x2YmlJc0luUnlZVzV6YVhScGIyNUZiR1Z0Wlc1MElpd2lkMkZwZEVadmNsUnlZVzV6YVhScGIyNGlMQ0psYlhWc1lYUmxaRVIxY21GMGFXOXVJaXdpZEhKaGJuTnBkR2x2YmtSMWNtRjBhVzl1SWl3aWRISmhibk5wZEdsdmJrUmxiR0Y1SWl3aVpteHZZWFJVY21GdWMybDBhVzl1UkhWeVlYUnBiMjRpTENKT2RXMWlaWElpTENKd1lYSnpaVVpzYjJGMElpd2labXh2WVhSVWNtRnVjMmwwYVc5dVJHVnNZWGtpTENKblpYUlVjbUZ1YzJsMGFXOXVSSFZ5WVhScGIyNUdjbTl0Uld4bGJXVnVkQ0lzSW1OaGJHeGxaQ0lzSW1oaGJtUnNaWElpTENKelpYUlVhVzFsYjNWMElpd2laMlYwVG1WNGRFRmpkR2wyWlVWc1pXMWxiblFpTENKaFkzUnBkbVZGYkdWdFpXNTBJaXdpYzJodmRXeGtSMlYwVG1WNGRDSXNJbWx6UTNsamJHVkJiR3h2ZDJWa0lpd2liR2x6ZEV4bGJtZDBhQ0lzSW01aGJXVnpjR0ZqWlZKbFoyVjRJaXdpYzNSeWFYQk9ZVzFsVW1WblpYZ2lMQ0p6ZEhKcGNGVnBaRkpsWjJWNElpd2laWFpsYm5SU1pXZHBjM1J5ZVNJc0luVnBaRVYyWlc1MElpd2lZM1Z6ZEc5dFJYWmxiblJ6SWl3aWJXOTFjMlZsYm5SbGNpSXNJbTF2ZFhObGJHVmhkbVVpTENKamRYTjBiMjFGZG1WdWRITlNaV2RsZUNJc0ltNWhkR2wyWlVWMlpXNTBjeUlzSW1kbGRGVnBaRVYyWlc1MElpd2lkV2xrSWl3aVoyVjBSWFpsYm5RaUxDSm1hVzVrU0dGdVpHeGxjaUlzSW1WMlpXNTBjeUlzSW1SbGJHVm5ZWFJwYjI1VFpXeGxZM1J2Y2lJc0luVnBaRVYyWlc1MFRHbHpkQ0lzSW1WMlpXNTBJaXdpYjNKcFoybHVZV3hJWVc1a2JHVnlJaXdpYm05eWJXRnNhWHBsVUdGeVlXMXpJaXdpYjNKcFoybHVZV3hVZVhCbFJYWmxiblFpTENKa1pXeGxaMkYwYVc5dVJtNGlMQ0prWld4bFoyRjBhVzl1SWl3aWRIbHdaVVYyWlc1MElpd2laMlYwVkhsd1pVVjJaVzUwSWl3aVlXUmtTR0Z1Wkd4bGNpSXNJbTl1WlU5bVppSXNJbmR5WVhCR2JpSXNJbkpsYkdGMFpXUlVZWEpuWlhRaUxDSmtaV3hsWjJGMFpWUmhjbWRsZENJc0ltaGhibVJzWlhKeklpd2ljSEpsZG1sdmRYTkdiaUlzSW1SdmJVVnNaVzFsYm5Seklpd2ljWFZsY25sVFpXeGxZM1J2Y2tGc2JDSXNJa1YyWlc1MFNHRnVaR3hsY2lJc0ltOW1aaUlzSW5SNWNHVWlMQ0poY0hCc2VTSXNJbUp2YjNSemRISmhjRVJsYkdWbllYUnBiMjVJWVc1a2JHVnlJaXdpWW05dmRITjBjbUZ3U0dGdVpHeGxjaUlzSW5KbGJXOTJaVWhoYm1Sc1pYSWlMQ0pDYjI5c1pXRnVJaXdpYjI0aUxDSnZibVVpTENKcGJrNWhiV1Z6Y0dGalpTSXNJbWx6VG1GdFpYTndZV05sSWl3aVpXeGxiV1Z1ZEVWMlpXNTBJaXdpYm1GdFpYTndZV05sSWl3aWMzUnZjbVZGYkdWdFpXNTBSWFpsYm5RaUxDSm9ZVzVrYkdWeVMyVjVJaXdpY21WdGIzWmxUbUZ0WlhOd1lXTmxaRWhoYm1Sc1pYSnpJaXdpYTJWNVNHRnVaR3hsY25NaUxDSjBjbWxuWjJWeUlpd2lhWE5PWVhScGRtVWlMQ0pxVVhWbGNubEZkbVZ1ZENJc0ltSjFZbUpzWlhNaUxDSnVZWFJwZG1WRWFYTndZWFJqYUNJc0ltUmxabUYxYkhSUWNtVjJaVzUwWldRaUxDSmxkblFpTENKcGMxQnliM0JoWjJGMGFXOXVVM1J2Y0hCbFpDSXNJbWx6U1cxdFpXUnBZWFJsVUhKdmNHRm5ZWFJwYjI1VGRHOXdjR1ZrSWl3aWFYTkVaV1poZFd4MFVISmxkbVZ1ZEdWa0lpd2lZM0psWVhSbFJYWmxiblFpTENKcGJtbDBSWFpsYm5RaUxDSkRkWE4wYjIxRmRtVnVkQ0lzSW1OaGJtTmxiR0ZpYkdVaUxDSndjbVYyWlc1MFJHVm1ZWFZzZENJc0ltVnNaVzFsYm5STllYQWlMQ0pFWVhSaElpd2lhVzV6ZEdGdVkyVk5ZWEFpTENKemFYcGxJaXdpWTI5dWMyOXNaU0lzSW1WeWNtOXlJaXdpWm5KdmJTSXNJbkpsYlc5MlpTSXNJbVJsYkdWMFpTSXNJa0poYzJWRGIyMXdiMjVsYm5RaUxDSmpiMjV6ZEhKMVkzUnZjaUlzSWw5bGJHVnRaVzUwSWl3aVJFRlVRVjlMUlZraUxDSmthWE53YjNObElpd2lSVlpGVGxSZlMwVlpJaXdpWjJWMFQzZHVVSEp2Y0dWeWRIbE9ZVzFsY3lJc0luQnliM0JsY25SNVRtRnRaU0lzSWw5eGRXVjFaVU5oYkd4aVlXTnJJaXdpYVhOQmJtbHRZWFJsWkNJc0luTjBZWFJwWXlJc0ltZGxkRWx1YzNSaGJtTmxJaXdpVmtWU1UwbFBUaUlzSWtWeWNtOXlJaXdpWlc1aFlteGxSR2x6YldsemMxUnlhV2RuWlhJaUxDSmpiMjF3YjI1bGJuUWlMQ0p0WlhSb2IyUWlMQ0pqYkdsamEwVjJaVzUwSWl3aWRHRm5UbUZ0WlNJc0ltTnNiM05sYzNRaUxDSm5aWFJQY2tOeVpXRjBaVWx1YzNSaGJtTmxJaXdpUVd4bGNuUWlMQ0pqYkc5elpTSXNJbDlrWlhOMGNtOTVSV3hsYldWdWRDSXNJbVZoWTJnaUxDSlRSVXhGUTFSUFVsOUVRVlJCWDFSUFIwZE1SU1ExSWl3aVFuVjBkRzl1SWl3aWRHOW5aMnhsSWl3aWJtOXliV0ZzYVhwbFJHRjBZU0lzSW5aaGJDSXNJbTV2Y20xaGJHbDZaVVJoZEdGTFpYa2lMQ0pqYUhJaUxDSmlkWFIwYjI0aUxDSk5ZVzVwY0hWc1lYUnZjaUlzSW5ObGRFUmhkR0ZCZEhSeWFXSjFkR1VpTENKeVpXMXZkbVZFWVhSaFFYUjBjbWxpZFhSbElpd2laMlYwUkdGMFlVRjBkSEpwWW5WMFpYTWlMQ0prWVhSaGMyVjBJaXdpY0hWeVpVdGxlU0lzSW1Ob1lYSkJkQ0lzSW1kbGRFUmhkR0ZCZEhSeWFXSjFkR1VpTENKVFpXeGxZM1J2Y2tWdVoybHVaU0lzSW1acGJtUlBibVVpTENKamFHbHNaSEpsYmlJc0ltMWhkR05vWlhNaUxDSndZWEpsYm5Seklpd2lZVzVqWlhOMGIzSWlMQ0p3Y21WMklpd2ljSEpsZG1sdmRYTWlMQ0p3Y21WMmFXOTFjMFZzWlcxbGJuUlRhV0pzYVc1bklpd2libVY0ZEVWc1pXMWxiblJUYVdKc2FXNW5JaXdpWm05amRYTmhZbXhsUTJocGJHUnlaVzRpTENKbWIyTjFjMkZpYkdWeklpd2lhbTlwYmlJc0ltVnNJaXdpVGtGTlJTUmlJaXdpUkdWbVlYVnNkQ1JoSWl3aWFXNTBaWEoyWVd3aUxDSnJaWGxpYjJGeVpDSXNJbk5zYVdSbElpd2ljR0YxYzJVaUxDSjNjbUZ3SWl3aWRHOTFZMmdpTENKRVpXWmhkV3gwVkhsd1pTUmhJaXdpVDFKRVJWSmZUa1ZZVkNJc0lrOVNSRVZTWDFCU1JWWWlMQ0pFU1ZKRlExUkpUMDVmVEVWR1ZDSXNJa1JKVWtWRFZFbFBUbDlTU1VkSVZDSXNJa3RGV1Y5VVQxOUVTVkpGUTFSSlQwNGlMQ0pGVmtWT1ZGOVRURWxFSWl3aVEweEJVMU5mVGtGTlJWOUJRMVJKVmtVa01pSXNJbE5GVEVWRFZFOVNYMEZEVkVsV1JWOUpWRVZOSWl3aVEyRnliM1Z6Wld3aUxDSnpkWEJsY2lJc0lsOXBkR1Z0Y3lJc0lsOXBiblJsY25aaGJDSXNJbDloWTNScGRtVkZiR1Z0Wlc1MElpd2lYMmx6VUdGMWMyVmtJaXdpWDJselUyeHBaR2x1WnlJc0luUnZkV05vVkdsdFpXOTFkQ0lzSW5SdmRXTm9VM1JoY25SWUlpd2lkRzkxWTJoRVpXeDBZVmdpTENKZlkyOXVabWxuSWl3aVgyZGxkRU52Ym1acFp5SXNJbDlwYm1ScFkyRjBiM0p6Uld4bGJXVnVkQ0lzSWw5MGIzVmphRk4xY0hCdmNuUmxaQ0lzSW0xaGVGUnZkV05vVUc5cGJuUnpJaXdpWDNCdmFXNTBaWEpGZG1WdWRDSXNJbEJ2YVc1MFpYSkZkbVZ1ZENJc0lsOWhaR1JGZG1WdWRFeHBjM1JsYm1WeWN5SXNJa1JsWm1GMWJIUWlMQ0pmYzJ4cFpHVWlMQ0p1WlhoMFYyaGxibFpwYzJsaWJHVWlMQ0pvYVdSa1pXNGlMQ0pqZVdOc1pTSXNJbU5zWldGeVNXNTBaWEoyWVd3aUxDSmZkWEJrWVhSbFNXNTBaWEoyWVd3aUxDSnpaWFJKYm5SbGNuWmhiQ0lzSW5acGMybGlhV3hwZEhsVGRHRjBaU0lzSW1KcGJtUWlMQ0owYnlJc0ltRmpkR2wyWlVsdVpHVjRJaXdpWDJkbGRFbDBaVzFKYm1SbGVDSXNJbDlvWVc1a2JHVlRkMmx3WlNJc0ltRmljMFJsYkhSaGVDSXNJbDlyWlhsa2IzZHVJaXdpWDJGa1pGUnZkV05vUlhabGJuUk1hWE4wWlc1bGNuTWlMQ0pvWVhOUWIybHVkR1Z5VUdWdVZHOTFZMmdpTENKd2IybHVkR1Z5Vkhsd1pTSXNJbU5zYVdWdWRGZ2lMQ0owYjNWamFHVnpJaXdpYlc5MlpTSXNJbU5zWldGeVZHbHRaVzkxZENJc0ltbDBaVzFKYldjaUxDSmZaMlYwU1hSbGJVSjVUM0prWlhJaUxDSnBjMDVsZUhRaUxDSmZkSEpwWjJkbGNsTnNhV1JsUlhabGJuUWlMQ0psZG1WdWRFUnBjbVZqZEdsdmJrNWhiV1VpTENKMFlYSm5aWFJKYm1SbGVDSXNJbVp5YjIxSmJtUmxlQ0lzSWw5elpYUkJZM1JwZG1WSmJtUnBZMkYwYjNKRmJHVnRaVzUwSWl3aVlXTjBhWFpsU1c1a2FXTmhkRzl5SWl3aWFXNWthV05oZEc5eWN5SXNJbkJoY25ObFNXNTBJaXdpWld4bGJXVnVkRWx1ZEdWeWRtRnNJaXdpWkdWbVlYVnNkRWx1ZEdWeWRtRnNJaXdpWkdseVpXTjBhVzl1VDNKUGNtUmxjaUlzSWw5a2FYSmxZM1JwYjI1VWIwOXlaR1Z5SWl3aVlXTjBhWFpsUld4bGJXVnVkRWx1WkdWNElpd2libVY0ZEVWc1pXMWxiblFpTENKdVpYaDBSV3hsYldWdWRFbHVaR1Y0SWl3aWFYTkRlV05zYVc1bklpd2laR2x5WldOMGFXOXVZV3hEYkdGemMwNWhiV1VpTENKdmNtUmxja05zWVhOelRtRnRaU0lzSWw5dmNtUmxjbFJ2UkdseVpXTjBhVzl1SWl3aWRISnBaMmRsY2xOc2FXUkZkbVZ1ZENJc0ltTnZiWEJzWlhSbFEyRnNiRUpoWTJzaUxDSmhZM1JwYjI0aUxDSnlhV1JsSWl3aVkyRnliM1Z6Wld4SmJuUmxjbVpoWTJVaUxDSnpiR2xrWlVsdVpHVjRJaXdpWkdGMFlVRndhVU5zYVdOclNHRnVaR3hsY2lJc0ltTmhjbTkxYzJWc2N5SXNJazVCVFVVa1lTSXNJa1JsWm1GMWJIUWtPU0lzSWtSbFptRjFiSFJVZVhCbEpEa2lMQ0pEVEVGVFUxOU9RVTFGWDFOSVQxY2tOeUlzSWtOTVFWTlRYMDVCVFVWZlEwOU1URUZRVTBVaUxDSkRURUZUVTE5T1FVMUZYME5QVEV4QlVGTkpUa2NpTENKRFRFRlRVMTlPUVUxRlgwTlBURXhCVUZORlJDSXNJa05NUVZOVFgwNUJUVVZmUkVWRlVFVlNYME5JU1V4RVVrVk9JaXdpVTBWTVJVTlVUMUpmUkVGVVFWOVVUMGRIVEVVa05DSXNJa052Ykd4aGNITmxJaXdpWDJselZISmhibk5wZEdsdmJtbHVaeUlzSWw5MGNtbG5aMlZ5UVhKeVlYa2lMQ0owYjJkbmJHVk1hWE4wSWl3aVpXeGxiU0lzSW1acGJIUmxja1ZzWlcxbGJuUWlMQ0ptYjNWdVpFVnNaVzBpTENKZmMyVnNaV04wYjNJaUxDSmZhVzVwZEdsaGJHbDZaVU5vYVd4a2NtVnVJaXdpWDJGa1pFRnlhV0ZCYm1SRGIyeHNZWEJ6WldSRGJHRnpjeUlzSWw5cGMxTm9iM2R1SWl3aWFHbGtaU0lzSW5Ob2IzY2lMQ0poWTNScGRtVnpSR0YwWVNJc0ltRmpkR2wyWlhNaUxDSmpiMjUwWVdsdVpYSWlMQ0owWlcxd1FXTjBhWFpsUkdGMFlTSXNJbVZzWlcxQlkzUnBkbVVpTENKa2FXMWxibk5wYjI0aUxDSmZaMlYwUkdsdFpXNXphVzl1SWl3aWMyTnliMnhzVTJsNlpTSXNJblJ5YVdkblpYSkJjbkpoZVV4bGJtZDBhQ0lzSW5ObGJHVmpkR1ZrSWl3aWRISnBaMmRsY2tGeWNtRjVJaXdpYVhOUGNHVnVJaXdpVGtGTlJTUTVJaXdpUlZORFFWQkZYMHRGV1NReUlpd2lVMUJCUTBWZlMwVlpJaXdpUVZKU1QxZGZWVkJmUzBWWklpd2lRVkpTVDFkZlJFOVhUbDlMUlZraUxDSlNSVWRGV0ZCZlMwVlpSRTlYVGlJc0lrVldSVTVVWDBOTVNVTkxYMFJCVkVGZlFWQkpKRE1pTENKRlZrVk9WRjlMUlZsRVQxZE9YMFJCVkVGZlFWQkpJaXdpUTB4QlUxTmZUa0ZOUlY5VFNFOVhKRFlpTENKVFJVeEZRMVJQVWw5RVFWUkJYMVJQUjBkTVJTUXpJaXdpVTBWTVJVTlVUMUpmVFVWT1ZTSXNJbEJNUVVORlRVVk9WRjlVVDFBaUxDSlFURUZEUlUxRlRsUmZWRTlRUlU1RUlpd2lVRXhCUTBWTlJVNVVYMEpQVkZSUFRTSXNJbEJNUVVORlRVVk9WRjlDVDFSVVQwMUZUa1FpTENKUVRFRkRSVTFGVGxSZlVrbEhTRlFpTENKUVRFRkRSVTFGVGxSZlRFVkdWQ0lzSWtSbFptRjFiSFFrT0NJc0ltUnBjM0JzWVhraUxDSndiM0J3WlhKRGIyNW1hV2NpTENKaGRYUnZRMnh2YzJVaUxDSkVaV1poZFd4MFZIbHdaU1E0SWl3aVJISnZjR1J2ZDI0aUxDSmZjRzl3Y0dWeUlpd2lYMjFsYm5VaUxDSmZaMlYwVFdWdWRVVnNaVzFsYm5RaUxDSmZhVzVPWVhaaVlYSWlMQ0pmWkdWMFpXTjBUbUYyWW1GeUlpd2lSR1ZtWVhWc2RGUjVjR1VpTENKblpYUlFZWEpsYm5SR2NtOXRSV3hsYldWdWRDSXNJbDlqY21WaGRHVlFiM0J3WlhJaUxDSm1iMk4xY3lJc0lsOWpiMjF3YkdWMFpVaHBaR1VpTENKeVpXWmxjbVZ1WTJWRmJHVnRaVzUwSWl3aVgyZGxkRkJ2Y0hCbGNrTnZibVpwWnlJc0ltbHpSR2x6Y0d4aGVWTjBZWFJwWXlJc0lsOW5aWFJRYkdGalpXMWxiblFpTENKd1lYSmxiblJFY205d1pHOTNiaUlzSW1selJXNWtJaXdpWDJkbGRFOW1abk5sZENJc0luQnZjSEJsY2tSaGRHRWlMQ0prWldaaGRXeDBRbk5RYjNCd1pYSkRiMjVtYVdjaUxDSmZjMlZzWldOMFRXVnVkVWwwWlcwaUxDSnBkR1Z0Y3lJc0luUnZaMmRzWlhNaUxDSmpiMjUwWlhoMElpd2lZMjl0Y0c5elpXUlFZWFJvSWl3aWFYTk5aVzUxVkdGeVoyVjBJaXdpYVhOQlkzUnBkbVVpTENKemRHOXdVSEp2Y0dGbllYUnBiMjRpTENKblpYUlViMmRuYkdWQ2RYUjBiMjRpTENKamJHVmhjazFsYm5Weklpd2laR0YwWVVGd2FVdGxlV1J2ZDI1SVlXNWtiR1Z5SWl3aVUwVk1SVU5VVDFKZlJrbFlSVVJmUTA5T1ZFVk9WQ0lzSWxORlRFVkRWRTlTWDFOVVNVTkxXVjlEVDA1VVJVNVVJaXdpVTJOeWIyeHNRbUZ5U0dWc2NHVnlJaXdpWjJWMFYybGtkR2dpTENKa2IyTjFiV1Z1ZEZkcFpIUm9JaXdpYVc1dVpYSlhhV1IwYUNJc0lsOWthWE5oWW14bFQzWmxja1pzYjNjaUxDSmZjMlYwUld4bGJXVnVkRUYwZEhKcFluVjBaWE1pTENKallXeGpkV3hoZEdWa1ZtRnNkV1VpTENKZmMyRjJaVWx1YVhScFlXeEJkSFJ5YVdKMWRHVWlMQ0p6ZEhsc1pWQnliM0FpTENKelkzSnZiR3hpWVhKWGFXUjBhQ0lzSWw5aGNIQnNlVTFoYm1sd2RXeGhkR2x2YmtOaGJHeGlZV05ySWl3aVgzSmxjMlYwUld4bGJXVnVkRUYwZEhKcFluVjBaWE1pTENKaFkzUjFZV3hXWVd4MVpTSXNJbkpsYlc5MlpWQnliM0JsY25SNUlpd2lZMkZzYkVKaFkyc2lMQ0pwYzA5MlpYSm1iRzkzYVc1bklpd2lSR1ZtWVhWc2RDUTNJaXdpWTJ4aGMzTk9ZVzFsSWl3aWNtOXZkRVZzWlcxbGJuUWlMQ0pqYkdsamEwTmhiR3hpWVdOcklpd2lSR1ZtWVhWc2RGUjVjR1VrTnlJc0lrTk1RVk5UWDA1QlRVVmZVMGhQVnlRMUlpd2lSVlpGVGxSZlRVOVZVMFZFVDFkT0lpd2lRbUZqYTJSeWIzQWlMQ0pmYVhOQmNIQmxibVJsWkNJc0lsOWhjSEJsYm1RaUxDSmZaMlYwUld4bGJXVnVkQ0lzSWw5bGJYVnNZWFJsUVc1cGJXRjBhVzl1SWl3aVltRmphMlJ5YjNBaUxDSmpjbVZoZEdWRmJHVnRaVzUwSWl3aVlYQndaVzVrSWl3aVJHVm1ZWFZzZENRMklpd2lkSEpoY0VWc1pXMWxiblFpTENKaGRYUnZabTlqZFhNaUxDSkVaV1poZFd4MFZIbHdaU1EySWl3aVJWWkZUbFJmUzBWWkpEY2lMQ0pVUVVKZlRrRldYMEpCUTB0WFFWSkVJaXdpUm05amRYTlVjbUZ3SWl3aVgybHpRV04wYVhabElpd2lYMnhoYzNSVVlXSk9ZWFpFYVhKbFkzUnBiMjRpTENKaFkzUnBkbUYwWlNJc0lsOW9ZVzVrYkdWR2IyTjFjMmx1SWl3aVgyaGhibVJzWlV0bGVXUnZkMjRpTENKa1pXRmpkR2wyWVhSbElpd2ljMmhwWm5STFpYa2lMQ0pPUVUxRkpEWWlMQ0pGVTBOQlVFVmZTMFZaSkRFaUxDSkVaV1poZFd4MEpEVWlMQ0pFWldaaGRXeDBWSGx3WlNRMUlpd2lSVlpGVGxSZlNFbEVSRVZPSkRNaUxDSkZWa1ZPVkY5VFNFOVhKRE1pTENKRlZrVk9WRjlTUlZOSldrVWlMQ0pGVmtWT1ZGOURURWxEUzE5RVNWTk5TVk5USWl3aVJWWkZUbFJmUzBWWlJFOVhUbDlFU1ZOTlNWTlRKREVpTENKRlZrVk9WRjlOVDFWVFJVUlBWMDVmUkVsVFRVbFRVeUlzSWtOTVFWTlRYMDVCVFVWZlQxQkZUaUlzSWtOTVFWTlRYMDVCVFVWZlUwaFBWeVEwSWl3aVEweEJVMU5mVGtGTlJWOVRWRUZVU1VNaUxDSk5iMlJoYkNJc0lsOWthV0ZzYjJjaUxDSmZZbUZqYTJSeWIzQWlMQ0pmYVc1cGRHbGhiR2w2WlVKaFkydEVjbTl3SWl3aVgyWnZZM1Z6ZEhKaGNDSXNJbDlwYm1sMGFXRnNhWHBsUm05amRYTlVjbUZ3SWl3aVgybG5ibTl5WlVKaFkydGtjbTl3UTJ4cFkyc2lMQ0pmYzJOeWIyeHNRbUZ5SWl3aVgybHpRVzVwYldGMFpXUWlMQ0pmWVdScWRYTjBSR2xoYkc5bklpd2lYM05sZEVWelkyRndaVVYyWlc1MElpd2lYM05sZEZKbGMybDZaVVYyWlc1MElpd2lYM05vYjNkQ1lXTnJaSEp2Y0NJc0lsOXphRzkzUld4bGJXVnVkQ0lzSWw5b2FXUmxUVzlrWVd3aUxDSm9kRzFzUld4bGJXVnVkQ0lzSW1oaGJtUnNaVlZ3WkdGMFpTSXNJbTF2WkdGc1FtOWtlU0lzSWw5MGNtbG5aMlZ5UW1GamEyUnliM0JVY21GdWMybDBhVzl1SWl3aVgzSmxjMlYwUVdScWRYTjBiV1Z1ZEhNaUxDSmpkWEp5Wlc1MFZHRnlaMlYwSWl3aWFYTk5iMlJoYkU5MlpYSm1iRzkzYVc1bklpd2lhWE5DYjJSNVQzWmxjbVpzYjNkcGJtY2lMQ0p3WVdSa2FXNW5UR1ZtZENJc0luQmhaR1JwYm1kU2FXZG9kQ0lzSW5Ob2IzZEZkbVZ1ZENJc0ltRnNiRkpsWVdSNVQzQmxiaUlzSWs1QlRVVWtOU0lzSWtSbFptRjFiSFFrTkNJc0lrUmxabUYxYkhSVWVYQmxKRFFpTENKRFRFRlRVMTlPUVUxRlgxTklUMWNrTXlJc0lrOVFSVTVmVTBWTVJVTlVUMUlpTENKRlZrVk9WRjlJU1VSRVJVNGtNaUlzSWs5bVptTmhiblpoY3lJc0luWnBjMmxpYVd4cGRIa2lMQ0ppYkhWeUlpd2lkWEpwUVhSMGNtbGlkWFJsY3lJc0lsTkJSa1ZmVlZKTVgxQkJWRlJGVWs0aUxDSkVRVlJCWDFWU1RGOVFRVlJVUlZKT0lpd2lZV3hzYjNkbFpFRjBkSEpwWW5WMFpTSXNJbUZzYkc5M1pXUkJkSFJ5YVdKMWRHVk1hWE4wSWl3aVlYUjBjbWxpZFhSbFRtRnRaU0lzSW01dlpHVldZV3gxWlNJc0luSmxaMFY0Y0NJc0ltRjBkSEpwWW5WMFpWSmxaMlY0SWl3aWMyRnVhWFJwZW1WSWRHMXNJaXdpZFc1ellXWmxTSFJ0YkNJc0ltRnNiRzkzVEdsemRDSXNJbk5oYm1sMGFYcGxSbTRpTENKamNtVmhkR1ZrUkc5amRXMWxiblFpTENKRVQwMVFZWEp6WlhJaUxDSndZWEp6WlVaeWIyMVRkSEpwYm1jaUxDSmxiR1Z0Wlc1MFRtRnRaU0lzSW1GMGRISnBZblYwWlV4cGMzUWlMQ0poYkd4dmQyVmtRWFIwY21saWRYUmxjeUlzSW1sdWJtVnlTRlJOVENJc0lrNUJUVVVrTkNJc0lrUkpVMEZNVEU5WFJVUmZRVlJVVWtsQ1ZWUkZVeUlzSWtSbFptRjFiSFJVZVhCbEpETWlMQ0poYm1sdFlYUnBiMjRpTENKMFpXMXdiR0YwWlNJc0luUnBkR3hsSWl3aVpHVnNZWGtpTENKamRYTjBiMjFEYkdGemN5SXNJbk5oYm1sMGFYcGxJaXdpUVhSMFlXTm9iV1Z1ZEUxaGNDSXNJa0ZWVkU4aUxDSlVUMUFpTENKU1NVZElWQ0lzSWtKUFZGUlBUU0lzSWt4RlJsUWlMQ0pFWldaaGRXeDBKRE1pTENKaGNtVmhJaXdpWW5JaUxDSmpiMndpTENKamIyUmxJaXdpWkdsMklpd2laVzBpTENKb2NpSXNJbWd4SWl3aWFESWlMQ0pvTXlJc0ltZzBJaXdpYURVaUxDSm9OaUlzSW1sdFp5SXNJbXhwSWl3aWIyd2lMQ0p3SWl3aWNISmxJaXdpY3lJc0luTnRZV3hzSWl3aWMzQmhiaUlzSW5OMVlpSXNJbk4xY0NJc0luTjBjbTl1WnlJc0luVWlMQ0oxYkNJc0lrVjJaVzUwSkRJaUxDSklTVVJGSWl3aVNFbEVSRVZPSWl3aVUwaFBWeUlzSWxOSVQxZE9JaXdpU1U1VFJWSlVSVVFpTENKRFRFbERTeUlzSWtaUFExVlRTVTRpTENKR1QwTlZVMDlWVkNJc0lrMVBWVk5GUlU1VVJWSWlMQ0pOVDFWVFJVeEZRVlpGSWl3aVEweEJVMU5mVGtGTlJWOUdRVVJGSkRJaUxDSkRURUZUVTE5T1FVMUZYMU5JVDFja01pSXNJa2hQVmtWU1gxTlVRVlJGWDFOSVQxY2lMQ0pJVDFaRlVsOVRWRUZVUlY5UFZWUWlMQ0pUUlV4RlExUlBVbDlVVDA5TVZFbFFYMGxPVGtWU0lpd2lVMFZNUlVOVVQxSmZUVTlFUVV3aUxDSkZWa1ZPVkY5TlQwUkJURjlJU1VSRklpd2lWRkpKUjBkRlVsOUlUMVpGVWlJc0lsUlNTVWRIUlZKZlJrOURWVk1pTENKVWIyOXNkR2x3SWl3aVgybHpSVzVoWW14bFpDSXNJbDkwYVcxbGIzVjBJaXdpWDJodmRtVnlVM1JoZEdVaUxDSmZZV04wYVhabFZISnBaMmRsY2lJc0luUnBjQ0lzSWw5elpYUk1hWE4wWlc1bGNuTWlMQ0psYm1GaWJHVWlMQ0prYVhOaFlteGxJaXdpZEc5bloyeGxSVzVoWW14bFpDSXNJbDlwYm1sMGFXRnNhWHBsVDI1RVpXeGxaMkYwWldSVVlYSm5aWFFpTENKamJHbGpheUlzSWw5cGMxZHBkR2hCWTNScGRtVlVjbWxuWjJWeUlpd2lYMlZ1ZEdWeUlpd2lYMnhsWVhabElpd2laMlYwVkdsd1JXeGxiV1Z1ZENJc0lsOW9hV1JsVFc5a1lXeElZVzVrYkdWeUlpd2lYMlJwYzNCdmMyVlFiM0J3WlhJaUxDSnBjMWRwZEdoRGIyNTBaVzUwSWl3aWMyaGhaRzkzVW05dmRDSXNJbWx6U1c1VWFHVkViMjBpTENKblpYUlVhWFJzWlNJc0luUnBjRWxrSWl3aWNISmxabWw0SWl3aVpteHZiM0lpTENKeVlXNWtiMjBpTENKblpYUkZiR1Z0Wlc1MFFubEpaQ0lzSW1kbGRGVkpSQ0lzSW1GMGRHRmphRzFsYm5RaUxDSmZaMlYwUVhSMFlXTm9iV1Z1ZENJc0lsOWhaR1JCZEhSaFkyaHRaVzUwUTJ4aGMzTWlMQ0pmY21WemIyeDJaVkJ2YzNOcFlteGxSblZ1WTNScGIyNGlMQ0p3Y21WMlNHOTJaWEpUZEdGMFpTSXNJbDlqYkdWaGJsUnBjRU5zWVhOeklpd2ljMlYwUTI5dWRHVnVkQ0lzSWw5ellXNXBkR2w2WlVGdVpGTmxkRU52Ym5SbGJuUWlMQ0pqYjI1MFpXNTBJaXdpZEdWdGNHeGhkR1ZGYkdWdFpXNTBJaXdpYzJWMFJXeGxiV1Z1ZEVOdmJuUmxiblFpTENKMFpYaDBRMjl1ZEdWdWRDSXNJblZ3WkdGMFpVRjBkR0ZqYUcxbGJuUWlMQ0pmWjJWMFJHVnNaV2RoZEdWRGIyNW1hV2NpTENKZmFHRnVaR3hsVUc5d2NHVnlVR3hoWTJWdFpXNTBRMmhoYm1kbElpd2lYMmRsZEVKaGMybGpRMnhoYzNOUWNtVm1hWGdpTENKbGRtVnVkRWx1SWl3aVpYWmxiblJQZFhRaUxDSmZabWw0VkdsMGJHVWlMQ0p2Y21sbmFXNWhiRlJwZEd4bFZIbHdaU0lzSW1SaGRHRkJkSFJ5YVdKMWRHVnpJaXdpWkdGMFlVRjBkSElpTENKaVlYTnBZME5zWVhOelVISmxabWw0VW1WblpYZ2lMQ0owWVdKRGJHRnpjeUlzSW5SdmEyVnVJaXdpZEVOc1lYTnpJaXdpUkdWbVlYVnNkQ1F5SWl3aVJHVm1ZWFZzZEZSNWNHVWtNaUlzSWtWMlpXNTBKREVpTENKUWIzQnZkbVZ5SWl3aVgyZGxkRU52Ym5SbGJuUWlMQ0pPUVUxRkpESWlMQ0pFWldaaGRXeDBKREVpTENKRVpXWmhkV3gwVkhsd1pTUXhJaXdpUTB4QlUxTmZUa0ZOUlY5QlExUkpWa1VrTVNJc0lsTkZURVZEVkU5U1gweEpUa3RmU1ZSRlRWTWlMQ0pOUlZSSVQwUmZVRTlUU1ZSSlQwNGlMQ0pUWTNKdmJHeFRjSGtpTENKZmMyTnliMnhzUld4bGJXVnVkQ0lzSWw5dlptWnpaWFJ6SWl3aVgzUmhjbWRsZEhNaUxDSmZZV04wYVhabFZHRnlaMlYwSWl3aVgzTmpjbTlzYkVobGFXZG9kQ0lzSWw5d2NtOWpaWE56SWl3aWNtVm1jbVZ6YUNJc0ltRjFkRzlOWlhSb2IyUWlMQ0p2Wm1aelpYUk5aWFJvYjJRaUxDSnZabVp6WlhSQ1lYTmxJaXdpWDJkbGRGTmpjbTlzYkZSdmNDSXNJbDluWlhSVFkzSnZiR3hJWldsbmFIUWlMQ0owWVhKblpYUlRaV3hsWTNSdmNpSXNJblJoY21kbGRFSkRVaUlzSW1sMFpXMGlMQ0pmWjJWMFQyWm1jMlYwU0dWcFoyaDBJaXdpYVc1dVpYSklaV2xuYUhRaUxDSnRZWGhUWTNKdmJHd2lMQ0pmWVdOMGFYWmhkR1VpTENKZlkyeGxZWElpTENKeGRXVnlhV1Z6SWl3aWJHbHVheUlzSW14cGMzUkhjbTkxY0NJc0ltNWhka2wwWlcwaUxDSnpjSGtpTENKRFRFRlRVMTlPUVUxRlgwRkRWRWxXUlNJc0lrTk1RVk5UWDA1QlRVVmZSa0ZFUlNReElpd2lRMHhCVTFOZlRrRk5SVjlUU0U5WEpERWlMQ0pUUlV4RlExUlBVbDlCUTFSSlZrVWlMQ0pUUlV4RlExUlBVbDlCUTFSSlZrVmZWVXdpTENKVVlXSWlMQ0pzYVhOMFJXeGxiV1Z1ZENJc0ltbDBaVzFUWld4bFkzUnZjaUlzSW1ocFpHVkZkbVZ1ZENJc0ltTnZiWEJzWlhSbElpd2lZV04wYVhabElpd2lhWE5VY21GdWMybDBhVzl1YVc1bklpd2lYM1J5WVc1emFYUnBiMjVEYjIxd2JHVjBaU0lzSW1SeWIzQmtiM2R1UTJocGJHUWlMQ0prY205d1pHOTNia1ZzWlcxbGJuUWlMQ0prY205d1pHOTNiaUlzSWtOTVFWTlRYMDVCVFVWZlNFbEVSU0lzSWtOTVFWTlRYMDVCVFVWZlUwaFBWeUlzSWtOTVFWTlRYMDVCVFVWZlUwaFBWMGxPUnlJc0ltRjFkRzlvYVdSbElpd2lWRzloYzNRaUxDSmZhR0Z6VFc5MWMyVkpiblJsY21GamRHbHZiaUlzSWw5b1lYTkxaWGxpYjJGeVpFbHVkR1Z5WVdOMGFXOXVJaXdpWDJOc1pXRnlWR2x0Wlc5MWRDSXNJbDl0WVhsaVpWTmphR1ZrZFd4bFNHbGtaU0lzSWw5dmJrbHVkR1Z5WVdOMGFXOXVJaXdpYVhOSmJuUmxjbUZqZEdsdVp5SXNJbUZrWkVWMlpXNTBTR0Z1Wkd4bGNpSXNJbVYyWlc1MFRtRnRaU0lzSWw5a1lYUmhVMjkxY21ObFRtRnRaU0lzSWw5cGMxSmxZV1JQYm14NUlpd2laMlYwUTNOeklpd2lkQ0lzSW5ObGRFTnpjeUlzSW1zaUxDSnBjMFZ0Y0hSNVQySnFJaXdpY0hKdmNITWlMQ0pmZEdocGN5SXNJbWRsZEZCeWIzQWlMQ0ptYVc1a1JXeGxiV1Z1ZEhNaUxDSm1hVzVrUW5sSlpDSXNJbWxrSWl3aWNtVnRiM1psUld4bGJXVnVkQ0lzSW5CaGNtVnVkRVZzWlcxbGJuUWlMQ0p5WlcxdmRtVkRhR2xzWkNJc0ltRmtaRU5zWVhOeklpd2lZM056UTJ4aGMzTWlMQ0p5WlcxdmRtVkRiR0Z6Y3lJc0ltaGhjME5zWVhOeklpd2lhR0Z6UTJ4aGMzTmxjeUlzSW1OemMwTnNZWE56WlhNaUxDSnpaWFJVWlhoMElpd2lkSGgwSWl3aVoyVjBWR1Y0ZENJc0luQjFjMmhVYjBOb2FXeGtjbVZ1UVhKeVlYa2lMQ0poY0hCbGJtUkRhR2xzWkNJc0ltTnNiMjVsSWl3aVl5SXNJa0pUUkdGMFlWUmhZbXhsUW1GelpTSXNJbU5zYjI1bFRtOWtaU0lzSW1Oaklpd2ljMmhEYkc5dVpTSXNJbU55WldGMFpTSXNJbWRsZEZCeWIzUnZkSGx3WlU5bUlpd2lZMmhwYkdSeVpXNU9iMlJsY3lJc0luZHlZWEJ3WlhJaUxDSnViMlJsY3lJc0ltRmtaRVJ5WVdkSVlXNWtiR1Z5Y3lJc0ltUnlZV2RJWVc1a2JHVnljeUlzSW1SeVlXZFRkR0Z5ZENJc0ltUnlZV2RNWldGMlpTSXNJbVJ5WVdkRmJuUmxjaUlzSW1SeVlXZFBkbVZ5SWl3aVpISmhaMFZ1WkNJc0ltUnliM0FpTENKemFXSnNhVzVuY3lJc0ltTm9hV3hrVG05a1pYTWlMQ0p1WkNJc0lrTnZiMnRwWlVobGJIQmxjaUlzSW1OdmIydHBaU0lzSW1SbFkyOWtaVlZTU1VOdmJYQnZibVZ1ZENJc0ltOXdkSE1pTENKa1lYbHpJaXdpWlc1MGNtbGxjeUlzSW1GalkzVnRkV3hoZEdWa1UzUnlJaXdpWlc1amIyUmxWVkpKUTI5dGNHOXVaVzUwSWl3aVoyVjBTbE5QVGlJc0lrcFRUMDRpTENKd1lYSnpaU0lzSW5ObGRFcFRUMDRpTENKemRISnBibWRwWm5raUxDSkRUMHhmVTA5U1ZFbE9SeUlzSWtOUFRGOVNSVk5KV2tWRUlpd2lRMDlNWDFOSVQxZGZTRWxFUlNJc0lrTlBURjlTUlU5U1JFVlNJaXdpUjFKSlJGOUVRVlJCSWl3aVQwNWZUa1ZZVkY5U1JVTlBVa1FpTENKUFRsOVFVa1ZXWDFKRlEwOVNSQ0lzSWs5T1gxTkJWa1ZmVWtWRFQxSkVJaXdpVDA1ZlJFVk1SVlJGWDFKRlEwOVNSQ0lzSWs5T1gweEJVMVJmVWtWRFQxSkVJaXdpVDA1ZlJrbFNVMVJmVWtWRFQxSkVJaXdpVDA1ZlFVUkVYMUpGUTA5U1JDSXNJazlPWDBaRlZFTklYMUpGUTA5U1JDSXNJazlPWDBaRlZFTklYMUpGUTA5U1JGOUZVbEpQVWlJc0lrOU9YMFpGVkVOSVgwZFNTVVJmVWtWRFQxSkVJaXdpVDA1ZlJrVlVRMGhmUjFKSlJGOVNSVU5QVWtSZlJWSlNUMUlpTENKUFRsOU9RVlpKUjBGVVNVNUhYMUpGUTA5U1JDSXNJazlPWDBkU1NVUmZWVkJFUVZSRlJDSXNJazlPWDFOQlZrVmZSVkpTVDFJaUxDSlBUbDlUVDFKVVNVNUhYMUpGVVZWRlUxUkZSQ0lzSWs5T1gwTlBURk5mVWtWUFVrUkZVa1ZFSWl3aVQwNWZSMUpKUkY5RVFWUkJYMEpQVlU1RUlpd2lUMDVmUjFKSlJGOURUMDVHU1VkZlZWQkVRVlJGUkNJc0lrOU9YMUJCUjBWZlVrVkJSRmtpTENKUFRsOVNUMWRmVlZCRVFWUkZSQ0lzSWs5T1gwWkpSVXhFWDFWUVJFRlVSVVFpTENKUFRsOVNUMWRmUkU5VlFreEZYME5NU1VOTFJVUWlMQ0prWVhSaFJYWmxiblJ6VTJWeWRtbGpaU0lzSW1OaGJHeGlZV05yY3lJc0luSmxaMmx6ZEdWeVYybHVVRzl3VTNSaGRHVWlMQ0p2Ym5CdmNITjBZWFJsSWl3aVpTSXNJbVYyWlc1MFJHRjBZU0lzSW14dlp5SXNJbVYySWl3aVJYWmxiblJFWVhSaElpd2lVMnRwY0ZCMWMyZ2lMQ0pFWVhSaFUyOTFjbU5sVG1GdFpTSXNJa1Z0YVhRaUxDSmhjSEJFWVhSaFJYWmxiblJ6SWl3aWMyOTFjbU5sSWl3aVpYWmxiblJCY21keklpd2lZMklpTENKRmRtVnVkRTVoYldVaUxDSldaWEpwWm5sRVlYUmhVMjkxY21ObFRtRnRaU0lzSWtOaGJHeGlZV05ySWl3aVZXNXpkV0p6WTNKcFltVWlMQ0p0YjJSbGJDSXNJbVpwYkhSbGNtVmtJaXdpUzJWNUlpd2lVM1ZpYzJOeWFXSmxJaXdpWVdSa1NYUmxiU0lzSW1WNGNHbHllU0lzSW1kbGRGUnBiV1VpTENKelpYTnphVzl1VTNSdmNtRm5aU0lzSW5ObGRFbDBaVzBpTENKaGNIQmxibVJKZEdWdElpd2lZWEJ3Wlc1a1JtRmpkRzl5ZVNJc0ltZGxkRWwwWlcxU1lYY2lMQ0p1WlhkV1lXeDFaU0lzSWtSaGRHVWlMQ0pqY21WaGRHVkZlSEJwY25sTFpYa2lMQ0psYm5SeWVTSXNJbWRsZEVsMFpXMGlMQ0p1YjNjaUxDSnlaVzF2ZG1WSmRHVnRJaXdpY21WdGIzWmxRV3hzSWl3aVluTkVZWFJoVkdGaWJHVkVhWE5qYjNabGNubFRaWEoyYVdObElpd2lSR0YwWVZSaFlteGxjeUlzSWtGa1pDSXNJbVJoZEdGMFlXSnNaU0lzSWtkbGRFRnNiQ0lzSW1SMElpd2lhWE5TWldGa1QyNXNlU0lzSW1SaGRHRlRiM1Z5WTJWT1lXMWxJaXdpWkdseWRIbFNaV052Y21Seklpd2lSMlYwUW5sRVUwNWhiV1VpTENKa2MwNWhiV1VpTENKdWIzUnBabmxNYVhOMFpXNWxjbk1pTENKbGRtVnVkRlI1Y0dVaUxDSndZWGxzYjJGa0lpd2ljbVZ1WkdWeUlpd2lTVzV3ZFhSVWVYQmxJaXdpWW5SdUlpd2lhVzV3ZFhRaUxDSkZiR1Z0Wlc1MFNXUWlMQ0pOYjJSbGJFNWhiV1VpTENKVWFYUnNaU0lzSWtoVVRVeEpibkIxZEVWc1pXMWxiblFpTENKamFHVmphMlZrSWl3aWRtRnNkV1ZCYzA1MWJXSmxjaUlzSW1Ob1lXNW5aU0lzSW5KbFlXUlBibXg1SWl3aVNGUk5URk5sYkdWamRFVnNaVzFsYm5RaUxDSmhaR1JFYjNWaWJHVkRiR2xqYTBWMlpXNTBJaXdpYzJNaUxDSkNVMFJoZEdGVVlXSnNaVU5vWldOclFtOTRJaXdpUWxORVlYUmhWR0ZpYkdWSmJuQjFkQ0lzSW05d2RDSXNJblJsZUhRaUxDSnBjMU5sYkdWamRHVmtJaXdpVTJWc1pXTjBUM0IwYVc5dWN5SXNJa0pUUkdGMFlWUmhZbXhsVTJWc1pXTjBUM0IwYVc5dUlpd2lRbE5FWVhSaFZHRmliR1ZUWld4bFkzUWlMQ0pEYkdGemMyVnpJaXdpY0d4aFkyVkliMnhrWlhJaUxDSlFiR0ZqWlVodmJHUmxjaUlzSW5Cc1lXTmxhRzlzWkdWeUlpd2lRbE5FWVhSaFZHRmliR1ZVWlhoMFNXNXdkWFFpTENKSlkyOXVJaXdpYVdOdmJpSXNJa2hoYm1Sc1pYSWlMQ0poWkdSRGJHbGphMGhoYm1Sc1pYSWlMQ0pDVTBSaGRHRlVZV0pzWlVKMWRIUnZiaUlzSW5CaGNtVnVkRU52Ym5SaGFXNWxja2xrSWl3aVEyOXVkR0ZwYm1WeVNXUWlMQ0p0YjJSaGJFbGtJaXdpYlc5a1lXeFVhWFJzWlVsa0lpd2lZMjl1ZEdGcGJtVnlTV1FpTENKbmNtbGtTV1FpTENKbmNtbGtJaXdpY21WdVpHVnlSM0pwWkNJc0ltOXVTWFJsYlZObGJHVmpkR1ZrSWl3aWMyVnVaR1Z5SWl3aWJXOWtZV3dpTENKelpXeGxZM1J2Y2sxdlpHRnNJaXdpY0dGeVpXNTBRMjl1ZEdGcGJtVnlJaXdpWTJ4bFlYSkhjbWxrSWl3aWFXNW1hVzVwZEdWVFkzSnZiR3hsY2lJc0ltTjFjbkpsYm5SUVlXZGxJaXdpWm1WMFkyaEhjbWxrVUdGblpTSXNJbTl1VjJsdVpHOTNVMmh2ZDI0aUxDSmtZWFJoVTI5MWNtTmxJaXdpYVhOU1pXMXZkR1VpTENKMWNtd2lMQ0pWY214RFlpSXNJbUp6SWl3aVkyOXNSR1ZtYVc1cGRHbHZiaUlzSWtkeWFXUkRiMnh6SWl3aWFYTlNaV0ZrYjI1c2VTSXNJbVZ1WVdKc1pVbHVabWx1YVhSbFUyTnliMnhzSWl3aVFsTkVZWFJoVkdGaWJHVWlMQ0pTWldkcGMzUmxja05oYkd4aVlXTnJjeUlzSWxKbGJtUmxjaUlzSW1keWFXUkJZM1JwYjI1eklpd2lkbWx6YVdKc1pTSXNJbk5sYkdWamRHOXlWMmx1Wkc5M0lpd2ljMlZzWldOMFpXUkpibkIxZENJc0ltZGxkRk5sYkdWamRHVmtVbTkzSWl3aVoyVjBTVzV3ZFhSeklpd2lhWE5MWlhraUxDSjBlSFJGYkdWdFpXNTBJaXdpYzFkcGJtUnZkeUlzSWtKVFJHRjBZVlJoWW14bFUyVnNaV04wYjNKWGFXNWtiM2NpTENKaWRHNUZiR1Z0Wlc1MElpd2lZMnh2Ym1WRGIyNTBaWGgwSWl3aVFsTkVZWFJoVkdGaWJHVlRaV3hsWTNSdmNpSXNJbWx6U0dWaFpHVnlJaXdpY205M1UzQmhiaUlzSWxKdmQxTndZVzRpTENKamIyeFRjR0Z1SWl3aVEyOXNVM0JoYmlJc0lrUnBjM0JzWVhsT1lXMWxJaXdpWVdSa1NXNXdkWFJEYjI1MGNtOXNJaXdpVUhKdmNFNWhiV1VpTENKcGJuQjFkRTl3ZEdsdmJuTWlMQ0pFWVhSaFZIbHdaU0lzSW5ObGJHVmpkRTl3ZEdsdmJuTWlMQ0pUWld4bFkzUk1hWE4wSWl3aWMyeDBjazl3ZEdsdmJuTWlMQ0pUWld4bFkzUnZja1JoZEdGRFFpSXNJbE5sYkdWamRHOXlRMjlzY3lJc0lrbHpTMlY1SWl3aWNtVmhaRzl1YkhraUxDSkpjMUpsWVdSUGJteDVJaXdpWjJWMFNXNXdkWFJEYjI1MGNtOXNjeUlzSW1sdWNIVjBjeUlzSW1kbGRFTmxiR3hVWlhoMElpd2lRbE5FWVhSaFZHRmliR1ZEWld4c0lpd2ljR0ZuWlVsdVpHVjRJaXdpY0dGblpWTnBlbVVpTENKMGIzUmhiRkpsWTI5eVpITWlMQ0owYjNSaGJGQmhaMlZ6SWl3aVkyVnBiQ0lzSW1WdVlXSnNaVU5oWTJocGJtY2lMQ0pUWlhOemFXOXVVM1J2Y21GblpWTmxjblpwWTJVaUxDSmpZV05vWlNJc0ltNXZkR2xtZVZKbGMzQnZibk5sSWl3aWNtVnhkV1Z6ZENJc0ltaGxZV1JsY25NaUxDSm1aWFJqYUNJc0luSmxjM0J2Ym5ObElpd2lhbk52YmlJc0ltTmhkR05vSWl3aWJtOTBhV1o1UlhKeWIzSWlMQ0ptWlhSamFGSmxZMjl5WkVWMlpXNTBJaXdpVFdWMFlVUmhkR0VpTENKQ1UwUmhkR0ZVWVdKc1pWQmhaMmx1WjAxbGRHRkVZWFJoSWl3aWJXVjBZVVJoZEdFaUxDSmxjbkpGZG1WdWRDSXNJbEpsWTI5eVpFbGtJaXdpY21WamIzSmtTV1FpTENKb2NtVm1JaXdpWTJ4aGMzTmxjeUlzSW1Oc2FXTnJTR0Z1Wkd4bGNpSXNJbkJoWjJWTWFXNXJjeUlzSW14cGMzUkpaQ0lzSW5CaFoyVnlJaXdpY0dGblpVeHBjM1FpTENKQ1UwUmhkR0ZVWVdKc1pVaDVjR1Z5VEdsdWF5SXNJbTVsZUhSUVlXZGxRMkZzYkdKaFkyc2lMQ0ptYjJOMWMxQmhaMlZKYm1SbGVDSXNJbU5zWldGeUlpd2ljbVZ3YkdGalpVTm9hV3hrY21WdUlpd2laM0pwWkVWc1pXMWxiblFpTENKb2RIUndRMnhwWlc1MElpd2ljMTloY21WaElpd2liMkp6WlhKMlpYSWlMQ0pwYm1sMFJHRjBZU0lzSW1sdWFYUk5aWFJoUkdGMFlTSXNJbTlpYzJWeWRtVnlRMElpTENKcGMwbHVkR1Z5YzJWamRHbHVaeUlzSW05aWMyVnlkbVVpTENKMWJtOWljMlZ5ZG1VaUxDSnpZM0p2Ykd4QmNtVmhJaXdpY205dmRFMWhjbWRwYmlJc0luUm9jbVZ6YUc5c1pDSXNJblJ5WVdOclZtbHphV0pwYkdsMGVTSXNJa2x1ZEdWeWMyVmpkR2x2Yms5aWMyVnlkbVZ5SWl3aWNtOTNjeUlzSW1Ga1pFRmpkR2x2YmlJc0ltZGxkRUoxZEhSdmJpSXNJbUZrWkVSbGJHVjBaVUZqZEdsdmJpSXNJbUZrWkU1bGQxSmxZMjl5WkVGamRHbHZiaUlzSW1Ga1pFZHlhV1JUWlhSMGFXNW5jMEZqZEdsdmJpSXNJbU5sYkd4eklpd2laM0pwWkVobFlXUmxjaUlzSW1selZHVnRjR3hoZEdWU2IzY2lMQ0poWkdSRFpXeHNJaXdpWTJWc2JDSXNJbUZrWkVObGJHeHpJaXdpWm05amRYTlNiM2NpTENKcFpIZ2lMQ0pqYjI1MGNtOXNjeUlzSW1OeVpXRjBaVWx1Y0hWMFJtOXlJaXdpWTNKbFlYUmxTR1ZoWkdWeVJtOXlJaXdpWjJWMFZtbHphV0pzWlVsdWNIVjBjeUlzSW1kbGRGSnZkMFJoZEdGRmVIUWlMQ0p5YjNkSmJuQjFkSE1pTENKeVpXTnZjbVFpTENKeWIzZEpibkIxZENJc0ltTmxiR3hRY205d1RtRnRaU0lzSW5KdmQwbHVaR1Y0SWl3aWNsUjVjR1VpTENKblpYUlNiM2RFWVhSaElpd2ljbTkzUTJGMElpd2ljbTkzUTJGMFpXZHZjbmtpTENKd1lYSmxiblJEYkc5dVpTSXNJbTl3ZEVOc2IyNWxJaXdpWTJ4dmJtVlNiM2NpTENKQ1UwUmhkR0ZVWVdKc1pWSnZkeUlzSW1Oc2IyNWxRMlZzYkNJc0ltRmtaRkp2ZHlJc0luSnZkeUlzSW1kbGRFNWxlSFJTYjNkSmJtUmxlQ0lzSW1kbGRGWnBjMmxpYkdWU2IzZHpJaXdpWjJWMFIzSnBaRlJwZEd4bGMxSnZkeUlzSWtKVFJHRjBZVlJoWW14bFVtOTNRMjlzYkdWamRHbHZiaUlzSW5KdmQxTnBZbXhwYm1keklpd2laMlYwVkdWdGNHeGhkR1ZTYjNjaUxDSm5aWFJFYVhKMGVWSnZkM01pTENKcGMxSnZkMFJwY25SNUlpd2laMlYwUkdseWRIbFNaV052Y21Seklpd2laR2x5ZEhsU2IzZHpJaXdpY21WamIzSmtjeUlzSW1kbGRFRnNiRkpsWTI5eVpITWlMQ0p0WVhKclJHVnNaWFJsWkNJc0lteGhjM1JUYVdKc2FXNW5JaXdpY21WdGIzWmxVbTkzSWl3aWMzQnNhV05sSWl3aWFHVmhaQ0lzSWtKVFJHRjBZVlJoWW14bFNHVmhaR1Z5SWl3aVFsTkVZWFJoVkdGaWJHVkNiMlI1SWl3aWNHRm5hVzVoZEc5eUlpd2lRbE5FWVhSaFZHRmliR1ZRWVdkcGJtRjBhVzl1SWl3aWNHRm5aU0lzSW5CaFoybHVZWFJ2Y2tOaGJHeGlZV05ySWl3aVFsTkVZWFJoVkdGaWJHVklkSFJ3UTJ4cFpXNTBJaXdpWTJGamFHVlNaWE53YjI1elpYTWlMQ0prYVhOamIzWmxjbUZpYkdVaUxDSmpiMjUwWVdsdVpYSkZiR1Z0Wlc1MElpd2lRM0psWVhSbElpd2ljMlYwUkdselkyOTJaWEpoWW14bElpd2lZWEJ3Wlc1a1NHVmhaR1Z5SWl3aVlYQndaVzVrUW05a2VTSXNJbWRsZEVkeWFXUlRaWFIwYVc1bmN5SXNJbk5sZEhScGJtZHpJaXdpWjNKcFpFaGxZV1JsY2xKdmR5SXNJbUp2WkhsU2IzY2lMQ0puY21sa1EyOXNkVzF1Y3lJc0ltRndjR3g1UTI5c1QzSmtaWEpwYm1jaUxDSnRhQ0lzSW0xaGNtdGxjaUlzSWtKVFJHRjBZVlJoWW14bFRXRnlhMlZ5SWl3aWJXSWlMQ0puWXlJc0ltTnZiRk5sZEhScGJtZHpJaXdpZEdnaUxDSjBaQ0lzSW1Ga1pGTnZjblJwYm1jaUxDSmhjSEJzZVVOdmJGTmxkSFJwYm1keklpd2lZWEJ3Wlc1a1FXTjBhVzl1Y3lJc0ltRmtaRWx1Wm1sdWFYUmxVMk55YjJ4c0lpd2liV1JoZEdFaUxDSm1aWFJqYUVSaGRHRkZkbVZ1ZENJc0lrSlRSR0YwWVZSaFlteGxTVzVtYVc1cGRHVlRZM0p2Ykd3aUxDSkNVMFJoZEdGVVlXSnNaVUZqZEdsdmJuTWlMQ0poWkdSRmJYQjBlVkp2ZHlJc0ltRnpZeUlzSWtGell5SXNJblJsYlhCc1lYUmxVbTkzSWl3aVZtbHphV0pzWlNJc0lsZHBaSFJvSWl3aWIzSmtaWEpsWkVOdmJITWlMQ0pqYjJ4RVpXWWlMQ0pqYjJ4VFpYUjBhVzVuSWl3aVVHOXphWFJwYjI0aUxDSmlhVzVrUkdGMFlWTnZkWEpqWlNJc0luQmhaMlZrUkdGMFlTSXNJbWRsZEZCaFoyVlBabVpzYVc1bFEwSWlMQ0pzWVhOMFVtOTNJaXdpWVdSa1RtVjNVbTkzSWl3aVltbHVaRkJoWjJsdVlYUnZjaUlzSW5CaFoybHVZWFJwYjI1TmIyUmxiQ0lzSW5KdmQwUmhkR0VpTENKcGMwVjRhWE4wYVc1blVtVmpiM0prSWl3aWNtOTNUblZ0WW1WeUlpd2liMnhrU1dRaUxDSmpaV3hzVm1Gc0lpd2laR0YwWlNJc0luUnZSR0YwWlVScGMzQnNZWGxHYjNKdFlYUWlMQ0owYjI5c2RHbHdJaXdpWkhNaUxDSm5jbWxrVlhCa1lYUmxSWFpsYm5RaUxDSkhjbWxrSWl3aWNtOTNWWEJrWVhSbFpFVjJaVzUwSWl3aVVtOTNJaXdpWm1sbGJHUlZjR1JoZEdWa1JYWmxiblFpTENKR2FXVnNaQ0lzSW5acGMybGliR1ZKYm5CMWRITWlMQ0p2YmtsdWNIVjBTMlY1Ukc5M2JpSXNJbVJoZVNJc0ltZGxkRVJoZEdVaUxDSnRiMjUwYUNJc0ltZGxkRTF2Ym5Sb0lpd2laMlYwUm5Wc2JGbGxZWElpTENKMGIxUnBiV1ZFYVhOd2JHRjVSbTl5YldGMElpd2lhRzkxY2lJc0ltZGxkRWh2ZFhKeklpd2laMlYwVFdsdWRYUmxjeUlzSW5kb2FXTm9JaXdpZG1semFXSnNaVkp2ZDNNaUxDSnNZWE4wVW05M1NXNWtaWGdpTENKbGJYQjBlVkp2ZHlJc0ltTnlaV0YwWlVWdGNIUjVVbTkzUkdGMFlTSXNJbTl1U0dWaFpHVnlUbVY0ZENJc0ltWmxkR05vUjNKcFpDSXNJbkpsYzJWMFUyOXlkR2x1WnlJc0ltOXVVMkYyWlZKbFkyOXlaQ0lzSW5aNElpd2liMjVUWVhabFJYSnliM0lpTENKeVpYTndiMjV6WlVwVFQwNGlMQ0psY25KdmNuTWlMQ0pwYlNJc0ltTnNhV1Z1ZEVsdVpHVjRJaXdpYzJWeWRtVnlTVzVrWlhnaUxDSmxjbkp2Y2xKdmR5SXNJbWRsZEZKdmQwSjVTVzVrWlhnaUxDSndjbTl3VG1GdFpTSXNJbWx1Y0hWMFJYSnliM0lpTENKcGJuQWlMQ0poYkd4RmNuSnZjbk1pTENKbGNpSXNJbk52Y25SVVlXSnNaU0lzSW1GelkxZ2lMQ0puWlhSRFpXeHNWbUZzZFdVaUxDSjBjaUlzSW5ZeElpd2lkaklpTENKc2IyTmhiR1ZEYjIxd1lYSmxJaXdpWTI5dVprVjJaVzUwSWl3aVEzVnljbVZ1ZEVOdmJDSXNJa0ZqZEdsdmJpSXNJbUZ3Y0VGamRHbHZibk1pTENKamIyeFNaVzl5WkdWeVJYWmxiblFpTENKdmJsTnZjblJwYm1kU1pYRjFaWE4wSWl3aWRHaDRJaXdpYjI1RGIyeHpVbVZ2Y21SbGNtVmtJaXdpZG1WeWFXWjVSRk5PWVcxbElpd2liMjVHWlhSamFFUmhkR0VpTENKdFpDSXNJbTl1Um1WMFkyaEVZWFJoUlhKeWIzSWlMQ0p2YmtkeWFXUkRiMjVtYVdkMWNtRjBhVzl1UTJoaGJtZGxaQ0lzSW05dVIzSnBaRVJoZEdGQ2IzVnVaQ0lzSW1OdmJtWnBaM1Z5WVdKc1pVZHlhV1FpTENKdGIyUmxiRlJsYlhCc1lYUmxJaXdpYlc5a1lXeEZiR1Z0SWl3aVkyOXNjMHhwYzNRaUxDSm9aV0ZrWlhJaUxDSmpiMnh6VEdsemRFbDBaVzBpTENKamFHc2lMQ0pqYUd0SlpDSXNJbU5vYTB4aWJDSXNJbU5vYTBWc1pXMWxiblFpTENKb1pXRmtaWEpTYjNjaUxDSmliMlI1VW05M2N5SXNJbkpsYzJsNllXSnNaVWR5YVdRaUxDSmpiMnh6SWl3aWRHRmliR1ZJWldsbmFIUWlMQ0pqY21WaGRHVkVhWFlpTENKelpYUk1hWE4wWlc1bGNuTWlMQ0owWVdKc1pTSXNJbkJoWjJWWUlpd2lZM1Z5UTI5c0lpd2lZM1Z5UTI5c1YybGtkR2dpTENKMFlXSnNaVmRwWkhSb0lpd2laMlYwVTNSNWJHVldZV3dpTENKd1lXUk1aV1owSWl3aWNHRmtVbWxuYUhRaUxDSndZV1JrYVc1blJHbG1aaUlzSW1KdmNtUmxjbEpwWjJoMElpd2laR2xtWmxnaUxDSmpkWEp6YjNJaUxDSjFjMlZ5VTJWc1pXTjBJaXdpWld4dElpd2laVzVoWW14bFEyOXNkVzF1VW1WdmNtUmxjbWx1WnlJc0ltUnlZV2RuWVdKc1pTSXNJbk55WTBWc1pXMWxiblFpTENKamFHbHNaSE1pTENKdmNHRmphWFI1SWl3aVpHVnpkRkJoY21WdWRDSXNJbVJsYzFCaGNtVnVkRU5sYkd3aUxDSjBiMGx1WkdWNElpd2ljM0pqVUdGeVpXNTBJaXdpYzNKalVHRnlaVzUwUTJWc2JDSXNJbkpsVDNKa1pYSWlMQ0prYVhKbFkzUnBiMjV6SWl3aWJIUnlJaXdpY25Sc0lpd2ljM2RoY0ZKMGJDSXNJbk4zWVhCTWRISWlMQ0p6ZDJGd0lpd2lZWEp5SWl3aWFXRWlMQ0pwWWlJc0luUmxiWEFpTENKamIyeHpUMkpxSWl3aVkyOXNRWFIwY2lJc0lrRnpZMlZ1WkdsdVp5SXNJbk5sWTNWeVpTSXNJbE5oYldWVGFYUmxJaXdpWm1sdVpFbDBaVzBpTENKdGIyUmxiRTVoYldVaUxDSndZV2RsUkdGMFlTSXNJa055WldGMFpVSjFhV3hrWlhJaUxDSkNVMFpzZFdWdWRFSjFhV3hrWlhJaUxDSkNkV2xzWkNJc0lsTmxkRWxrSWl3aWRHRmliR1ZKWkNJc0lsTmxkRU52Ym5SaGFXNWxja2xrSWl3aVUyVjBSR0YwWVZOdmRYSmpaVTVoYldVaUxDSkpjMUpsYlc5MFpTSXNJbkpsYlc5MFpTSXNJa2x6VW1WaFpHOXViSGtpTENKRFlXTm9aVkpsYzNCdmJuTmxjeUlzSWtWdVlXSnNaVWx1Wm1sdWFYUmxVMk55YjJ4c0lpd2lUbVY0ZEZCaFoyVlZjbXhEWVd4c1ltRmpheUlzSWtkbGRFNWxlSFJRWVdkbFQyWm1iR2x1WlVOaGJHeGlZV05ySWl3aVFXUmtRMjlzZFcxdUlpd2lZMjlzUTI5dVptbG5JaXdpUVdSa1NXNXBkRVJoZEdFaVhTd2ljMjkxY21ObFVtOXZkQ0k2SWlKOSIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9nZXRVcmwuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyA9IG5ldyBVUkwoXCIuLi9pbWFnZXMvc29ydF9kZXNjLnBuZ1wiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xX19fID0gbmV3IFVSTChcIi4uL2ltYWdlcy9zb3J0X2FzYy5wbmdcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMl9fXyA9IG5ldyBVUkwoXCIuLi9pbWFnZXMvc29ydF9ib3RoLnBuZ1wiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzBfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMV9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMl9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzJfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiaHRtbCB7XFxyXFxuICBmb250LXNpemU6IDE0cHg7XFxyXFxufVxcclxcblxcclxcbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xcclxcbiAgaHRtbCB7XFxyXFxuICAgIGZvbnQtc2l6ZTogMTZweDtcXHJcXG4gIH1cXHJcXG59XFxyXFxuXFxyXFxuaHRtbCB7XFxyXFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxyXFxuICBtaW4taGVpZ2h0OiAxMDAlO1xcclxcbn1cXHJcXG5cXHJcXG5ib2R5IHtcXHJcXG4gIG1hcmdpbi1ib3R0b206IDYwcHg7XFxyXFxufVxcclxcblxcclxcblxcclxcbi50b29sdGlwLWVycm9yIC50b29sdGlwLWlubmVyIHtcXHJcXG4gIG1heC13aWR0aDogMjAwcHg7XFxyXFxuICBwYWRkaW5nOiAuMjVyZW0gLjVyZW07XFxyXFxuICBjb2xvcjogcmVkO1xcclxcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcclxcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XFxyXFxuICBib3JkZXItcmFkaXVzOiAuMjVyZW07XFxyXFxuICBib3JkZXI6IDFweCBzb2xpZCByZWQ7XFxyXFxufVxcclxcblxcclxcbi50b29sdGlwLWVycm9yIC50b29sdGlwLWFycm93OjpiZWZvcmUge1xcclxcbiAgYm9yZGVyLXRvcC1jb2xvcjogcmVkO1xcclxcbn1cXHJcXG5cXHJcXG50YWJsZS5uYXZUYWJsZS5ub3dyYXAgdGgsIHRhYmxlLm5hdlRhYmxlLm5vd3JhcCB0ZCB7XFxyXFxuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xcclxcbn1cXHJcXG5cXHJcXG50YWJsZS5uYXZUYWJsZSB0aGVhZCAuc29ydGluZ19kZXNjIHtcXHJcXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzBfX18gKyBcIikgIWltcG9ydGFudDtcXHJcXG59XFxyXFxuXFxyXFxudGFibGUubmF2VGFibGUgdGhlYWQgLnNvcnRpbmdfYXNjIHtcXHJcXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzFfX18gKyBcIikgIWltcG9ydGFudDtcXHJcXG59XFxyXFxuXFxyXFxudGFibGUubmF2VGFibGUgdGhlYWQgLnNvcnRpbmcge1xcclxcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMl9fXyArIFwiKTtcXHJcXG59XFxyXFxuXFxyXFxudGFibGUubmF2VGFibGUgdGhlYWQgLnNvcnRpbmcsIHRhYmxlLm5hdlRhYmxlIHRoZWFkIC5zb3J0aW5nX2FzYywgdGFibGUubmF2VGFibGUgdGhlYWQgLnNvcnRpbmdfZGVzYywgdGFibGUubmF2VGFibGUgdGhlYWQgLnNvcnRpbmdfYXNjX2Rpc2FibGVkLCB0YWJsZS5uYXZUYWJsZSB0aGVhZCAuc29ydGluZ19kZXNjX2Rpc2FibGVkIHtcXHJcXG4gIGN1cnNvcjogcG9pbnRlcjtcXHJcXG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XFxyXFxuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgcmlnaHQ7XFxyXFxufVxcclxcblxcclxcbnRhYmxlLm5hdlRhYmxlIHRoZWFkIHRoLCB0YWJsZS5uYXZUYWJsZSB0aGVhZCB0ZCB7XFxyXFxuICBwYWRkaW5nOiAxMHB4IDE4cHg7XFxyXFxuICAvKiBib3JkZXItYm90dG9tOiAxcHggc29saWQgIzExMTsgKi9cXHJcXG59XFxyXFxuXFxyXFxudGFibGUubmF2VGFibGUgdGhlYWQgdGgsIHRhYmxlLm5hdlRhYmxlIHRmb290IHRoIHtcXHJcXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xcclxcbn1cXHJcXG5cXHJcXG50YWJsZS5uYXZUYWJsZSB0aCwgdGFibGUubmF2VGFibGUgdGQge1xcclxcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XFxyXFxufVxcclxcblxcclxcbmNhcHRpb24sIHRoIHtcXHJcXG4gIHRleHQtYWxpZ246IGxlZnQ7XFxyXFxufVxcclxcblxcclxcbnRhYmxlLm5hdlRhYmxlIC5mb3JtLWNvbnRyb2wge1xcclxcbiAgYm9yZGVyOiAwcHg7XFxyXFxufVxcclxcblxcclxcbi5vdmVyIHtcXHJcXG4gIGJvcmRlcjogMnB4IGRhc2hlZCAjMDAwO1xcclxcbn1cXHJcXG5cXHJcXG4uZ3JpZC1oZWFkZXIge1xcclxcbiAgLyogcGFkZGluZzogNXB4O1xcclxcbiAgICBkaXNwbGF5OiBibG9jaztcXHJcXG4gICAgYm9yZGVyOiAzcHggc29saWQgcmVkO1xcclxcbiAgICBoZWlnaHQ6IDIwcHg7XFxyXFxuICAgIHdpZHRoOiAxMjBweDsgKi9cXHJcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXHJcXG4gIGN1cnNvcjogcG9pbnRlcjtcXHJcXG4gIHVzZXItc2VsZWN0OiBub25lO1xcclxcbn1cXHJcXG5cXHJcXG4jZHVtbXktZGF0YS1jb250YWluZXIge1xcclxcbiAgbWF4LWhlaWdodDogNzAlO1xcclxcbiAgd2lkdGg6IDY1JTtcXHJcXG4gIG1hcmdpbjphdXRvO1xcclxcbn1cXHJcXG5cXHJcXG4uZ3JpZC10b29sYmFyLWFjdGlvbiB7XFxyXFxuICBtYXJnaW46IDJweDtcXHJcXG4gIGxpbmUtaGVpZ2h0OiAyMHB4O1xcclxcbiAgd2lkdGg6IDMwcHg7XFxyXFxufVxcclxcblxcclxcbi5ncmlkLXRvb2xiYXIge1xcclxcbiAgcGFkZGluZzogMnB4ICFpbXBvcnRhbnQ7XFxyXFxufVxcclxcblxcclxcbi5ib29raW5nLXN1bW1hcnkgbGkge1xcclxcbiAgcGFkZGluZzogMDtcXHJcXG59XFxyXFxuXFxyXFxuLmJvb2tpbmctc3VtbWFyeSAuY2FyZC1mb290ZXIge1xcclxcbiAgcGFkZGluZy10b3A6IDA7XFxyXFxufVxcclxcblxcclxcbmlucHV0OmhvdmVyLCBzZWxlY3Q6aG92ZXIge1xcclxcbiAgLyogYmFja2dyb3VuZDogcmdiYSgxMjEsIDE2OSwgMjQxLCAwLjUzNCk7XFxyXFxuICAgIGNvbG9yOiB3aGl0ZXNtb2tlOyAqL1xcclxcblxcclxcbiAgY29sb3I6ICMwZDZlZmQ7XFxyXFxuICBib3JkZXItY29sb3I6ICMwZDZlZmQ7XFxyXFxuICBib3JkZXI6IDFweCBzb2xpZCAjMGQ2ZWZkICFpbXBvcnRhbnQ7XFxyXFxufVxcclxcblxcclxcbi5zdW0tdmFsdWUge1xcclxcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XFxyXFxufVxcclxcblxcclxcbi5hY3Rpb25zLWNvbnRhaW5lciB7XFxyXFxuICBtYXJnaW46IDVweCAwcHg7XFxyXFxufVxcclxcblxcclxcbi50YWJsZS1ob3Zlcj50Ym9keT50cjpob3ZlciB7XFxyXFxuICAtLWJzLXRhYmxlLWFjY2VudC1iZzogcmdiKDEzIDExMCAyNTMgLyA3JSk7XFxyXFxuICBjb2xvcjogI2MxZDdlYztcXHJcXG59XFxyXFxuXFxyXFxuLnRhYmxlLWFjdGl2ZSB7XFxyXFxuICAtLWJzLXRhYmxlLWFjY2VudC1iZzogcmdiKDEzIDExMCAyNTMgLyAxNyUpO1xcclxcbiAgY29sb3I6ICNjMWQ3ZWM7XFxyXFxufVxcclxcblxcclxcbi50YWJsZS1hY3RpdmU6aG92ZXIge1xcclxcbiAgLS1icy10YWJsZS1hY2NlbnQtYmc6IHJnYigxMyAxMTAgMjUzIC8gMjclKSAhaW1wb3J0YW50O1xcclxcbiAgY29sb3I6ICNjMWQ3ZWMgIWltcG9ydGFudDtcXHJcXG59XFxyXFxuXFxyXFxuLnRhYmxlLWFjdGl2ZSAucm93LW1hcmtlciB7XFxyXFxuICBtYXJnaW46IDVweCAwcHg7XFxyXFxuICBjb2xvcjogYmx1ZTtcXHJcXG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XFxyXFxuICBmbG9hdDogcmlnaHQ7XFxyXFxuICBkaXNwbGF5OiBpbml0aWFsO1xcclxcbn1cXHJcXG5cXHJcXG4ucm93LW1hcmtlciB7XFxyXFxuICBkaXNwbGF5OiBub25lO1xcclxcbn1cXHJcXG5cXHJcXG4udGFibGUgdGQge1xcclxcbiAgcGFkZGluZzogMnB4IDBweDtcXHJcXG59XFxyXFxuXFxyXFxuXFxyXFxuLmJzLXNjcm9sbCB7XFxyXFxuICBtYXgtaGVpZ2h0OiAzNTBweCAhaW1wb3J0YW50O1xcclxcbiAgLyogbWF4LWhlaWdodDogMjAwcHg7ICAqL1xcclxcbiAgb3ZlcmZsb3cteTogYXV0b1xcclxcblxcclxcbn1cXHJcXG5cXHJcXG4uYnMtdGFibGV7XFxyXFxuXFxyXFxufVxcclxcblxcclxcbi5icy1wYWdpbmF0aW9ue1xcclxcblxcclxcbn1cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9hcHAtY2xpZW50L2Nzcy9zaXRlLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLGVBQWU7QUFDakI7O0FBRUE7RUFDRTtJQUNFLGVBQWU7RUFDakI7QUFDRjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7OztBQUdBO0VBQ0UsZ0JBQWdCO0VBQ2hCLHFCQUFxQjtFQUNyQixVQUFVO0VBQ1Ysa0JBQWtCO0VBQ2xCLHVCQUF1QjtFQUN2QixxQkFBcUI7RUFDckIscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0Usb0VBQXlEO0FBQzNEOztBQUVBO0VBQ0Usb0VBQXdEO0FBQzFEOztBQUVBO0VBQ0UseURBQThDO0FBQ2hEOztBQUVBO0VBQ0UsZUFBZTtFQUNmLDRCQUE0QjtFQUM1QixpQ0FBaUM7QUFDbkM7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsbUNBQW1DO0FBQ3JDOztBQUVBO0VBQ0UsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsdUJBQXVCO0FBQ3pCOztBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsdUJBQXVCO0FBQ3pCOztBQUVBO0VBQ0U7Ozs7bUJBSWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixlQUFlO0VBQ2YsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsZUFBZTtFQUNmLFVBQVU7RUFDVixXQUFXO0FBQ2I7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsaUJBQWlCO0VBQ2pCLFdBQVc7QUFDYjs7QUFFQTtFQUNFLHVCQUF1QjtBQUN6Qjs7QUFFQTtFQUNFLFVBQVU7QUFDWjs7QUFFQTtFQUNFLGNBQWM7QUFDaEI7O0FBRUE7RUFDRTt3QkFDc0I7O0VBRXRCLGNBQWM7RUFDZCxxQkFBcUI7RUFDckIsb0NBQW9DO0FBQ3RDOztBQUVBO0VBQ0UsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLDBDQUEwQztFQUMxQyxjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsMkNBQTJDO0VBQzNDLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxzREFBc0Q7RUFDdEQseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UsZUFBZTtFQUNmLFdBQVc7RUFDWCxzQkFBc0I7RUFDdEIsWUFBWTtFQUNaLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGFBQWE7QUFDZjs7QUFFQTtFQUNFLGdCQUFnQjtBQUNsQjs7O0FBR0E7RUFDRSw0QkFBNEI7RUFDNUIsd0JBQXdCO0VBQ3hCOztBQUVGOztBQUVBOztBQUVBOztBQUVBOztBQUVBXCIsXCJzb3VyY2VzQ29udGVudFwiOltcImh0bWwge1xcclxcbiAgZm9udC1zaXplOiAxNHB4O1xcclxcbn1cXHJcXG5cXHJcXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcXHJcXG4gIGh0bWwge1xcclxcbiAgICBmb250LXNpemU6IDE2cHg7XFxyXFxuICB9XFxyXFxufVxcclxcblxcclxcbmh0bWwge1xcclxcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcclxcbiAgbWluLWhlaWdodDogMTAwJTtcXHJcXG59XFxyXFxuXFxyXFxuYm9keSB7XFxyXFxuICBtYXJnaW4tYm90dG9tOiA2MHB4O1xcclxcbn1cXHJcXG5cXHJcXG5cXHJcXG4udG9vbHRpcC1lcnJvciAudG9vbHRpcC1pbm5lciB7XFxyXFxuICBtYXgtd2lkdGg6IDIwMHB4O1xcclxcbiAgcGFkZGluZzogLjI1cmVtIC41cmVtO1xcclxcbiAgY29sb3I6IHJlZDtcXHJcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXHJcXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xcclxcbiAgYm9yZGVyLXJhZGl1czogLjI1cmVtO1xcclxcbiAgYm9yZGVyOiAxcHggc29saWQgcmVkO1xcclxcbn1cXHJcXG5cXHJcXG4udG9vbHRpcC1lcnJvciAudG9vbHRpcC1hcnJvdzo6YmVmb3JlIHtcXHJcXG4gIGJvcmRlci10b3AtY29sb3I6IHJlZDtcXHJcXG59XFxyXFxuXFxyXFxudGFibGUubmF2VGFibGUubm93cmFwIHRoLCB0YWJsZS5uYXZUYWJsZS5ub3dyYXAgdGQge1xcclxcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcXHJcXG59XFxyXFxuXFxyXFxudGFibGUubmF2VGFibGUgdGhlYWQgLnNvcnRpbmdfZGVzYyB7XFxyXFxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1hZ2VzL3NvcnRfZGVzYy5wbmcpICFpbXBvcnRhbnQ7XFxyXFxufVxcclxcblxcclxcbnRhYmxlLm5hdlRhYmxlIHRoZWFkIC5zb3J0aW5nX2FzYyB7XFxyXFxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1hZ2VzL3NvcnRfYXNjLnBuZykgIWltcG9ydGFudDtcXHJcXG59XFxyXFxuXFxyXFxudGFibGUubmF2VGFibGUgdGhlYWQgLnNvcnRpbmcge1xcclxcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltYWdlcy9zb3J0X2JvdGgucG5nKTtcXHJcXG59XFxyXFxuXFxyXFxudGFibGUubmF2VGFibGUgdGhlYWQgLnNvcnRpbmcsIHRhYmxlLm5hdlRhYmxlIHRoZWFkIC5zb3J0aW5nX2FzYywgdGFibGUubmF2VGFibGUgdGhlYWQgLnNvcnRpbmdfZGVzYywgdGFibGUubmF2VGFibGUgdGhlYWQgLnNvcnRpbmdfYXNjX2Rpc2FibGVkLCB0YWJsZS5uYXZUYWJsZSB0aGVhZCAuc29ydGluZ19kZXNjX2Rpc2FibGVkIHtcXHJcXG4gIGN1cnNvcjogcG9pbnRlcjtcXHJcXG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XFxyXFxuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgcmlnaHQ7XFxyXFxufVxcclxcblxcclxcbnRhYmxlLm5hdlRhYmxlIHRoZWFkIHRoLCB0YWJsZS5uYXZUYWJsZSB0aGVhZCB0ZCB7XFxyXFxuICBwYWRkaW5nOiAxMHB4IDE4cHg7XFxyXFxuICAvKiBib3JkZXItYm90dG9tOiAxcHggc29saWQgIzExMTsgKi9cXHJcXG59XFxyXFxuXFxyXFxudGFibGUubmF2VGFibGUgdGhlYWQgdGgsIHRhYmxlLm5hdlRhYmxlIHRmb290IHRoIHtcXHJcXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xcclxcbn1cXHJcXG5cXHJcXG50YWJsZS5uYXZUYWJsZSB0aCwgdGFibGUubmF2VGFibGUgdGQge1xcclxcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XFxyXFxufVxcclxcblxcclxcbmNhcHRpb24sIHRoIHtcXHJcXG4gIHRleHQtYWxpZ246IGxlZnQ7XFxyXFxufVxcclxcblxcclxcbnRhYmxlLm5hdlRhYmxlIC5mb3JtLWNvbnRyb2wge1xcclxcbiAgYm9yZGVyOiAwcHg7XFxyXFxufVxcclxcblxcclxcbi5vdmVyIHtcXHJcXG4gIGJvcmRlcjogMnB4IGRhc2hlZCAjMDAwO1xcclxcbn1cXHJcXG5cXHJcXG4uZ3JpZC1oZWFkZXIge1xcclxcbiAgLyogcGFkZGluZzogNXB4O1xcclxcbiAgICBkaXNwbGF5OiBibG9jaztcXHJcXG4gICAgYm9yZGVyOiAzcHggc29saWQgcmVkO1xcclxcbiAgICBoZWlnaHQ6IDIwcHg7XFxyXFxuICAgIHdpZHRoOiAxMjBweDsgKi9cXHJcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXHJcXG4gIGN1cnNvcjogcG9pbnRlcjtcXHJcXG4gIHVzZXItc2VsZWN0OiBub25lO1xcclxcbn1cXHJcXG5cXHJcXG4jZHVtbXktZGF0YS1jb250YWluZXIge1xcclxcbiAgbWF4LWhlaWdodDogNzAlO1xcclxcbiAgd2lkdGg6IDY1JTtcXHJcXG4gIG1hcmdpbjphdXRvO1xcclxcbn1cXHJcXG5cXHJcXG4uZ3JpZC10b29sYmFyLWFjdGlvbiB7XFxyXFxuICBtYXJnaW46IDJweDtcXHJcXG4gIGxpbmUtaGVpZ2h0OiAyMHB4O1xcclxcbiAgd2lkdGg6IDMwcHg7XFxyXFxufVxcclxcblxcclxcbi5ncmlkLXRvb2xiYXIge1xcclxcbiAgcGFkZGluZzogMnB4ICFpbXBvcnRhbnQ7XFxyXFxufVxcclxcblxcclxcbi5ib29raW5nLXN1bW1hcnkgbGkge1xcclxcbiAgcGFkZGluZzogMDtcXHJcXG59XFxyXFxuXFxyXFxuLmJvb2tpbmctc3VtbWFyeSAuY2FyZC1mb290ZXIge1xcclxcbiAgcGFkZGluZy10b3A6IDA7XFxyXFxufVxcclxcblxcclxcbmlucHV0OmhvdmVyLCBzZWxlY3Q6aG92ZXIge1xcclxcbiAgLyogYmFja2dyb3VuZDogcmdiYSgxMjEsIDE2OSwgMjQxLCAwLjUzNCk7XFxyXFxuICAgIGNvbG9yOiB3aGl0ZXNtb2tlOyAqL1xcclxcblxcclxcbiAgY29sb3I6ICMwZDZlZmQ7XFxyXFxuICBib3JkZXItY29sb3I6ICMwZDZlZmQ7XFxyXFxuICBib3JkZXI6IDFweCBzb2xpZCAjMGQ2ZWZkICFpbXBvcnRhbnQ7XFxyXFxufVxcclxcblxcclxcbi5zdW0tdmFsdWUge1xcclxcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XFxyXFxufVxcclxcblxcclxcbi5hY3Rpb25zLWNvbnRhaW5lciB7XFxyXFxuICBtYXJnaW46IDVweCAwcHg7XFxyXFxufVxcclxcblxcclxcbi50YWJsZS1ob3Zlcj50Ym9keT50cjpob3ZlciB7XFxyXFxuICAtLWJzLXRhYmxlLWFjY2VudC1iZzogcmdiKDEzIDExMCAyNTMgLyA3JSk7XFxyXFxuICBjb2xvcjogI2MxZDdlYztcXHJcXG59XFxyXFxuXFxyXFxuLnRhYmxlLWFjdGl2ZSB7XFxyXFxuICAtLWJzLXRhYmxlLWFjY2VudC1iZzogcmdiKDEzIDExMCAyNTMgLyAxNyUpO1xcclxcbiAgY29sb3I6ICNjMWQ3ZWM7XFxyXFxufVxcclxcblxcclxcbi50YWJsZS1hY3RpdmU6aG92ZXIge1xcclxcbiAgLS1icy10YWJsZS1hY2NlbnQtYmc6IHJnYigxMyAxMTAgMjUzIC8gMjclKSAhaW1wb3J0YW50O1xcclxcbiAgY29sb3I6ICNjMWQ3ZWMgIWltcG9ydGFudDtcXHJcXG59XFxyXFxuXFxyXFxuLnRhYmxlLWFjdGl2ZSAucm93LW1hcmtlciB7XFxyXFxuICBtYXJnaW46IDVweCAwcHg7XFxyXFxuICBjb2xvcjogYmx1ZTtcXHJcXG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XFxyXFxuICBmbG9hdDogcmlnaHQ7XFxyXFxuICBkaXNwbGF5OiBpbml0aWFsO1xcclxcbn1cXHJcXG5cXHJcXG4ucm93LW1hcmtlciB7XFxyXFxuICBkaXNwbGF5OiBub25lO1xcclxcbn1cXHJcXG5cXHJcXG4udGFibGUgdGQge1xcclxcbiAgcGFkZGluZzogMnB4IDBweDtcXHJcXG59XFxyXFxuXFxyXFxuXFxyXFxuLmJzLXNjcm9sbCB7XFxyXFxuICBtYXgtaGVpZ2h0OiAzNTBweCAhaW1wb3J0YW50O1xcclxcbiAgLyogbWF4LWhlaWdodDogMjAwcHg7ICAqL1xcclxcbiAgb3ZlcmZsb3cteTogYXV0b1xcclxcblxcclxcbn1cXHJcXG5cXHJcXG4uYnMtdGFibGV7XFxyXFxuXFxyXFxufVxcclxcblxcclxcbi5icy1wYWdpbmF0aW9ue1xcclxcblxcclxcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107IC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblxuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cblxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcblxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9OyAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuXG5cbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cblxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG5cbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcblxuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuXG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh1cmwsIG9wdGlvbnMpIHtcbiAgaWYgKCFvcHRpb25zKSB7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG5cbiAgaWYgKCF1cmwpIHtcbiAgICByZXR1cm4gdXJsO1xuICB9XG5cbiAgdXJsID0gU3RyaW5nKHVybC5fX2VzTW9kdWxlID8gdXJsLmRlZmF1bHQgOiB1cmwpOyAvLyBJZiB1cmwgaXMgYWxyZWFkeSB3cmFwcGVkIGluIHF1b3RlcywgcmVtb3ZlIHRoZW1cblxuICBpZiAoL15bJ1wiXS4qWydcIl0kLy50ZXN0KHVybCkpIHtcbiAgICB1cmwgPSB1cmwuc2xpY2UoMSwgLTEpO1xuICB9XG5cbiAgaWYgKG9wdGlvbnMuaGFzaCkge1xuICAgIHVybCArPSBvcHRpb25zLmhhc2g7XG4gIH0gLy8gU2hvdWxkIHVybCBiZSB3cmFwcGVkP1xuICAvLyBTZWUgaHR0cHM6Ly9kcmFmdHMuY3Nzd2cub3JnL2Nzcy12YWx1ZXMtMy8jdXJsc1xuXG5cbiAgaWYgKC9bXCInKCkgXFx0XFxuXXwoJTIwKS8udGVzdCh1cmwpIHx8IG9wdGlvbnMubmVlZFF1b3Rlcykge1xuICAgIHJldHVybiBcIlxcXCJcIi5jb25jYXQodXJsLnJlcGxhY2UoL1wiL2csICdcXFxcXCInKS5yZXBsYWNlKC9cXG4vZywgXCJcXFxcblwiKSwgXCJcXFwiXCIpO1xuICB9XG5cbiAgcmV0dXJuIHVybDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG5cbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cblxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgdmFyIHNvdXJjZVVSTHMgPSBjc3NNYXBwaW5nLnNvdXJjZXMubWFwKGZ1bmN0aW9uIChzb3VyY2UpIHtcbiAgICAgIHJldHVybiBcIi8qIyBzb3VyY2VVUkw9XCIuY29uY2F0KGNzc01hcHBpbmcuc291cmNlUm9vdCB8fCBcIlwiKS5jb25jYXQoc291cmNlLCBcIiAqL1wiKTtcbiAgICB9KTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG5cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5cbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5ET00ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5ET01baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXSxcbiAgICAgIHN1cHBvcnRzOiBpdGVtWzRdLFxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cbiAgICB9O1xuXG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuXG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cblxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcblxuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gdXBkYXRlcjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cblxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcblxuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcblxuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcblxuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7IC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cblxuICByZXR1cm4gbWVtb1t0YXJnZXRdO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcblxuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cblxuICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG5cbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcblxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuXG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuXG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cblxuICBjc3MgKz0gb2JqLmNzcztcblxuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcblxuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH0gLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuXG4gICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbi8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBfX3dlYnBhY2tfbW9kdWxlc19fO1xuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCIvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSAoZXhwb3J0cykgPT4ge1xuXHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcblx0fVxuXHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIi9cIjsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmIgPSBkb2N1bWVudC5iYXNlVVJJIHx8IHNlbGYubG9jYXRpb24uaHJlZjtcblxuLy8gb2JqZWN0IHRvIHN0b3JlIGxvYWRlZCBhbmQgbG9hZGluZyBjaHVua3Ncbi8vIHVuZGVmaW5lZCA9IGNodW5rIG5vdCBsb2FkZWQsIG51bGwgPSBjaHVuayBwcmVsb2FkZWQvcHJlZmV0Y2hlZFxuLy8gW3Jlc29sdmUsIHJlamVjdCwgUHJvbWlzZV0gPSBjaHVuayBsb2FkaW5nLCAwID0gY2h1bmsgbG9hZGVkXG52YXIgaW5zdGFsbGVkQ2h1bmtzID0ge1xuXHQxNzk6IDBcbn07XG5cbi8vIG5vIGNodW5rIG9uIGRlbWFuZCBsb2FkaW5nXG5cbi8vIG5vIHByZWZldGNoaW5nXG5cbi8vIG5vIHByZWxvYWRlZFxuXG4vLyBubyBITVJcblxuLy8gbm8gSE1SIG1hbmlmZXN0XG5cbi8vIG5vIG9uIGNodW5rcyBsb2FkZWRcblxuLy8gbm8ganNvbnAgZnVuY3Rpb24iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc2l0ZS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3NpdGUuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0IHsgYXBwRGF0YUV2ZW50cywgQlNEYXRhVGFibGUsIEJTRGF0YVRhYmxlQ29sRGVmaW5pdGlvbiwgQlNEYXRhVGFibGVEYXRhU291cmNlLCBCU0RhdGFUYWJsZUlucHV0LCBCU0RhdGFUYWJsZU9wdGlvbnMsIEJTRGF0YVRhYmxlU2VsZWN0TGlzdEl0ZW0sIEJTRmllbGRVcGRhdGVkRXZlbnQsIEJTRmx1ZW50QnVpbGRlciB9IGZyb20gXCJicy1kYXRhdGFibGVcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBEeW5hbWljRGVtbyB7XHJcbiAgICBzdGF0aWMgcnVuKGNvbnRhaW5lcklkOiBzdHJpbmcsIGluaXREYXRhKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ3J1bm5pbmcgZHluYW1pYyBkZW1vJyk7XHJcblxyXG4gICAgICAgIHZhciBidWlsZGVyID0gQlNGbHVlbnRCdWlsZGVyXHJcbiAgICAgICAgICAgIC5DcmVhdGVCdWlsZGVyKClcclxuICAgICAgICAgICAgLlNldERhdGFTb3VyY2VOYW1lKCdib29raW5nX2xpbmVzJylcclxuICAgICAgICAgICAgLlNldElkKCdib29raW5nX2xpbmVzJylcclxuICAgICAgICAgICAgLlNldENvbnRhaW5lcklkKGNvbnRhaW5lcklkKVxyXG4gICAgICAgICAgICAuSXNSZW1vdGUodHJ1ZSlcclxuICAgICAgICAgICAgLk5leHRQYWdlVXJsQ2FsbGJhY2socGFnZSA9PiAnaHR0cDovL2xvY2FsaG9zdDozMDAwL2FwaS9ib29raW5nbGluZXM/cGFnZT0nICsgcGFnZSlcclxuICAgICAgICAgICAgLkVuYWJsZUluZmluaXRlU2Nyb2xsKHRydWUpXHJcbiAgICAgICAgICAgIC5Jc1JlYWRvbmx5KGZhbHNlKVxyXG4gICAgICAgICAgICAuQ2FjaGVSZXNwb25zZXMoZmFsc2UpXHJcbiAgICAgICAgICAgIC5BZGRJbml0RGF0YShjb25maWcgPT4ge1xyXG4gICAgICAgICAgICAgICAgY29uZmlnLmluaXREYXRhID0gaW5pdERhdGEuZGF0YTtcclxuICAgICAgICAgICAgICAgIGNvbmZpZy5tZXRhRGF0YSA9IGluaXREYXRhLm1ldGFEYXRhO1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAuQWRkQ29sdW1uKGNvbCA9PiB7XHJcbiAgICAgICAgICAgICAgICBjb2wuRGlzcGxheU5hbWUgPSBcIkxpbmUgbmJyXCI7XHJcbiAgICAgICAgICAgICAgICBjb2wuUHJvcE5hbWUgPSAnbGluZU5icidcclxuICAgICAgICAgICAgICAgIGNvbC5XaWR0aCA9ICc4MHB4J1xyXG4gICAgICAgICAgICAgICAgY29sLkRhdGFUeXBlID0gJ251bWJlcidcclxuICAgICAgICAgICAgICAgIGNvbC5Jc0tleSA9IHRydWU7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIC5BZGRDb2x1bW4oY29sID0+IHtcclxuICAgICAgICAgICAgICAgIC8vXHJcbiAgICAgICAgICAgICAgICAvLyBhIGNvbHVtbiB3aXRoIHNlbGVjdG9yIHdpbmRvd1xyXG4gICAgICAgICAgICAgICAgLy9cclxuICAgICAgICAgICAgICAgIGNvbC5EaXNwbGF5TmFtZSA9IFwiU3RvY2sgaXRlbVwiO1xyXG4gICAgICAgICAgICAgICAgY29sLlByb3BOYW1lID0gJ2ludmVudG9yeUlkJ1xyXG4gICAgICAgICAgICAgICAgY29sLldpZHRoID0gJzYwcHgnXHJcbiAgICAgICAgICAgICAgICBjb2wuRGF0YVR5cGUgPSAnc2VsZWN0b3InXHJcbiAgICAgICAgICAgICAgICBjb2wuU2VsZWN0b3JEYXRhQ0IgPSAocGFnZSkgPT4geyByZXR1cm4gYGh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9hcGkvc3RvY2tpdGVtcz9wYWdlPSR7cGFnZX1gIH07XHJcbiAgICAgICAgICAgICAgICBjb2wuU2VsZWN0b3JDb2xzID0gW1xyXG4gICAgICAgICAgICAgICAgICAgIHsgRGlzcGxheU5hbWU6IFwiU3RvY2sgaXRlbVwiLCBEYXRhVHlwZTogXCJ0ZXh0XCIsIFdpZHRoOiBcIjYwcHhcIiwgUHJvcE5hbWU6IFwiaWRcIiwgSXNLZXk6IHRydWUgfSxcclxuICAgICAgICAgICAgICAgICAgICB7IERpc3BsYXlOYW1lOiBcIkRlc2NyaXB0aW9uXCIsIERhdGFUeXBlOiBcInRleHRcIiwgV2lkdGg6IFwiMjIwcHhcIiwgUHJvcE5hbWU6IFwibmFtZVwiIH1cclxuICAgICAgICAgICAgICAgIF07XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIC5BZGRDb2x1bW4oY29sID0+IHtcclxuICAgICAgICAgICAgICAgIGNvbC5EaXNwbGF5TmFtZSA9IFwiRGVzY3JpcHRpb25cIjtcclxuICAgICAgICAgICAgICAgIGNvbC5Qcm9wTmFtZSA9ICdkZXNjJ1xyXG4gICAgICAgICAgICAgICAgY29sLldpZHRoID0gJzIyMHB4J1xyXG4gICAgICAgICAgICAgICAgY29sLkRhdGFUeXBlID0gJ3RleHQnXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIC5BZGRDb2x1bW4oY29sID0+IHtcclxuICAgICAgICAgICAgICAgIC8vXHJcbiAgICAgICAgICAgICAgICAvLyBzZWxlY3QgZHJvcGRvd25cclxuICAgICAgICAgICAgICAgIC8vXHJcbiAgICAgICAgICAgICAgICBjb2wuRGlzcGxheU5hbWUgPSBcIlVuaXQgb2YgbWVhc3VyZVwiO1xyXG4gICAgICAgICAgICAgICAgY29sLlByb3BOYW1lID0gJ3VvbSc7XHJcbiAgICAgICAgICAgICAgICBjb2wuV2lkdGggPSAnMTIwcHgnO1xyXG4gICAgICAgICAgICAgICAgY29sLkRhdGFUeXBlID0gJ3NlbGVjdCc7XHJcbiAgICAgICAgICAgICAgICBjb2wuU2VsZWN0TGlzdCA9IFtcclxuICAgICAgICAgICAgICAgICAgICB7IHRleHQ6ICdLaWxvJywgdmFsdWU6ICdLRycgfSxcclxuICAgICAgICAgICAgICAgICAgICB7IHRleHQ6ICdMaXRyZScsIHZhbHVlOiAnTEknIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgeyB0ZXh0OiAnUGllY2UnLCB2YWx1ZTogJ1BDUycgfVxyXG4gICAgICAgICAgICAgICAgXVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAuQWRkQ29sdW1uKGNvbCA9PiB7XHJcbiAgICAgICAgICAgICAgICBjb2wuRGlzcGxheU5hbWUgPSBcIlF1YW50aXR5XCI7XHJcbiAgICAgICAgICAgICAgICBjb2wuUHJvcE5hbWUgPSAncXR5J1xyXG4gICAgICAgICAgICAgICAgY29sLldpZHRoID0gJzgwcHgnXHJcbiAgICAgICAgICAgICAgICBjb2wuRGF0YVR5cGUgPSAnbnVtYmVyJ1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAuQWRkQ29sdW1uKGNvbCA9PiB7XHJcbiAgICAgICAgICAgICAgICBjb2wuRGlzcGxheU5hbWUgPSBcIlVuaXQgY29zdFwiO1xyXG4gICAgICAgICAgICAgICAgY29sLlByb3BOYW1lID0gJ2Nvc3QnXHJcbiAgICAgICAgICAgICAgICBjb2wuV2lkdGggPSAnMTIwcHgnXHJcbiAgICAgICAgICAgICAgICBjb2wuRGF0YVR5cGUgPSAnbnVtYmVyJ1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAuQWRkQ29sdW1uKGNvbCA9PiB7XHJcbiAgICAgICAgICAgICAgICBjb2wuRGlzcGxheU5hbWUgPSBcIkNvc3RcIjtcclxuICAgICAgICAgICAgICAgIGNvbC5Qcm9wTmFtZSA9ICdleHRDb3N0J1xyXG4gICAgICAgICAgICAgICAgY29sLldpZHRoID0gJzEyMHB4J1xyXG4gICAgICAgICAgICAgICAgY29sLkRhdGFUeXBlID0gJ251bWJlcidcclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHZhciBkYXRhVGFibGUgPSBidWlsZGVyLkJ1aWxkKCk7XHJcbiAgICAgICAgZGF0YVRhYmxlLlJlZ2lzdGVyQ2FsbGJhY2tzKCk7XHJcblxyXG4gICAgICAgIC8vXHJcbiAgICAgICAgLy8gbGV0cyBzYXkgd2UgaGF2ZSB0byBjYWxjdWxhdGUgZXh0IGNvc3QgdXNpbmcgdGhlIHVuaXQgY29zdCBhbmQgcXVhbnRpdHlcclxuICAgICAgICAvLyB3ZSBjYW4gZG8gdGhpcyBieSByZWdpc3RlcmluZyBhIGNoYW5nZSBldmVudFxyXG4gICAgICAgIC8vXHJcblxyXG4gICAgICAgIGRhdGFUYWJsZS5hZGRIYW5kbGVyKGFwcERhdGFFdmVudHMuT05fRklFTERfVVBEQVRFRCwgKHNlbmRlciwgZSkgPT4ge1xyXG4gICAgICAgICAgICAvLyBkZWJ1Z2dlcjtcclxuICAgICAgICAgICAgbGV0IGV2ID0gZSBhcyBCU0ZpZWxkVXBkYXRlZEV2ZW50O1xyXG4gICAgICAgICAgICBpZiAoIWV2KSByZXR1cm47XHJcbiAgICAgICAgICAgIHZhciBmaWVsZCA9IGV2LkV2ZW50RGF0YS5GaWVsZCBhcyBCU0RhdGFUYWJsZUlucHV0O1xyXG4gICAgICAgICAgICBpZiAoIWZpZWxkKSByZXR1cm47XHJcblxyXG4gICAgICAgICAgICB2YXIgZmllbGROYW1lID0gZmllbGQub3B0aW9ucy5Nb2RlbE5hbWU7XHJcbiAgICAgICAgICAgIHZhciByb3cgPSBldi5FdmVudERhdGEuUm93O1xyXG5cclxuICAgICAgICAgICAgaWYgKGZpZWxkTmFtZSA9PT0gJ3F0eScgfHwgZmllbGROYW1lID09PSAnY29zdCcpIHtcclxuICAgICAgICAgICAgICAgIHJvdy5leHRDb3N0LnZhbCA9IHJvdy5xdHkudmFsICogcm93LmNvc3QudmFsO1xyXG5cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICBkYXRhVGFibGUuUmVuZGVyKCk7XHJcblxyXG4gICAgICAgIC8vXHJcbiAgICAgICAgLy8gY3VzdG9taXplIHRoZSBncmlkXHJcbiAgICAgICAgLy9cclxuICAgICAgICBkYXRhVGFibGUuZ3JpZEFjdGlvbnMuYWRkQWN0aW9uKCdidG5TYXZlJywgJ3ByaW1hcnknLCAnc2F2ZScsIChlKSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdzYXZlIGJ1dHRvbiBpcyBjYWxsZWQnKTtcclxuICAgICAgICAgICAgdmFyIHJlY29yZHMgPSBkYXRhVGFibGUuYWxsUmVjb3JkcztcclxuICAgICAgICAgICAgY29uc29sZS5sb2coJ0FsbCByZWNvcmRzOicpXHJcbiAgICAgICAgICAgIGNvbnNvbGUudGFibGUocmVjb3Jkcyk7XHJcblxyXG4gICAgICAgICAgICBjb25zb2xlLmxvZygnRGlydHkgcm93czonKTtcclxuICAgICAgICAgICAgY29uc29sZS50YWJsZShkYXRhVGFibGUuZGlydHlSZWNvcmRzKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgeyBCU0ZsdWVudEJ1aWxkZXIsIEJTRGF0YVRhYmxlUGFnaW5nTWV0YURhdGEgfSBmcm9tIFwiYnMtZGF0YXRhYmxlXCJcclxuXHJcbmV4cG9ydCBjbGFzcyBTdGF0aWNEZW1vIHtcclxuXHJcbiAgICBzdGF0aWMgcnVuKCkge1xyXG4gICAgICAgIC8vXHJcbiAgICAgICAgLy8gc2FtcGxlIHVzaW5nIGJvb3RzdHJhcCBkYXRhIGdyaWQgXHJcbiAgICAgICAgLy9cclxuXHJcbiAgICAgICAgdmFyIHRhYmxlQnVpbGRlciA9IEJTRmx1ZW50QnVpbGRlci5DcmVhdGVCdWlsZGVyKClcclxuICAgICAgICAgICAgLlNldERhdGFTb3VyY2VOYW1lKCdDdXN0b21lcnMnKVxyXG4gICAgICAgICAgICAuU2V0SWQoJ2dyaWQnKVxyXG4gICAgICAgICAgICAuU2V0Q29udGFpbmVySWQoJ2N1c3RvbWVyc19jb250YWluZXInKVxyXG4gICAgICAgICAgICAuSXNSZWFkb25seShmYWxzZSlcclxuICAgICAgICAgICAgLklzUmVtb3RlKGZhbHNlKVxyXG4gICAgICAgICAgICAuRW5hYmxlSW5maW5pdGVTY3JvbGwodHJ1ZSlcclxuICAgICAgICAgICAgLkNhY2hlUmVzcG9uc2VzKGZhbHNlKTtcclxuXHJcbiAgICAgICAgLy8gQWRkIGNvbHVtbnNcclxuICAgICAgICB2YXIgdG90Q29scyA9IDUsIHRvdFJvd3MgPSA2MDtcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRvdENvbHM7IGkrKykge1xyXG4gICAgICAgICAgICB0YWJsZUJ1aWxkZXIuQWRkQ29sdW1uKGNvbCA9PiB7XHJcbiAgICAgICAgICAgICAgICBjb2wuRGlzcGxheU5hbWUgPSBcIkNPTC1cIiArIGk7XHJcbiAgICAgICAgICAgICAgICBjb2wuUHJvcE5hbWUgPSBcImNvbC1cIiArIGk7XHJcbiAgICAgICAgICAgICAgICBjb2wuV2lkdGggPSBcIjE4MHB4XCI7XHJcbiAgICAgICAgICAgICAgICBjb2wuRGF0YVR5cGUgPSBcInRleHRcIjtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyBBZGQgc29tZSBpbml0aWFsIGRhdGFcclxuICAgICAgICB0YWJsZUJ1aWxkZXIuQWRkSW5pdERhdGEoY29uZmlnID0+IHtcclxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0b3RSb3dzOyBpKyspIHtcclxuXHJcbiAgICAgICAgICAgICAgICB2YXIgcmVjb3JkID0ge307XHJcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8IHRvdENvbHM7IGorKykge1xyXG4gICAgICAgICAgICAgICAgICAgIHJlY29yZFsnY29sLScgKyBqXSA9ICdEQVRBLScgKyBpICsgJy0nICsgajtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGNvbmZpZy5pbml0RGF0YS5wdXNoKHJlY29yZCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY29uZmlnLm1ldGFEYXRhID0gbmV3IEJTRGF0YVRhYmxlUGFnaW5nTWV0YURhdGEoMSwgMTAsIHRvdFJvd3MpO1xyXG4gICAgICAgIH0pXHJcblxyXG4gICAgICAgIC8vIHJlbmRlciBkYXRhIHRhYmxlXHJcbiAgICAgICAgdmFyIHRhYmxlID0gdGFibGVCdWlsZGVyXHJcbiAgICAgICAgICAgIC5CdWlsZCgpXHJcbiAgICAgICAgICAgIC5SZWdpc3RlckNhbGxiYWNrcygpXHJcbiAgICAgICAgICAgIC5SZW5kZXIoKTtcclxuXHJcbiAgICAgICAgLy8gY3VzdG9taXplIGdyaWQgYWN0aW9uc1xyXG4gICAgICAgIHRhYmxlLmdyaWRBY3Rpb25zLmFkZEFjdGlvbignYnRuU2F2ZScsICdwcmltYXJ5JywgJ3NhdmUnLCAoZSkgPT4ge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZygnc2F2ZSBidXR0b24gaXMgY2FsbGVkJyk7XHJcbiAgICAgICAgICAgIHZhciByZWNvcmRzID0gdGFibGUuYWxsUmVjb3JkcztcclxuICAgICAgICAgICAgY29uc29sZS5sb2coJ0FsbCByZWNvcmRzOicpXHJcbiAgICAgICAgICAgIGNvbnNvbGUudGFibGUocmVjb3Jkcyk7XHJcblxyXG4gICAgICAgICAgICBjb25zb2xlLmxvZygnRGlydHkgcm93czonKTtcclxuICAgICAgICAgICAgY29uc29sZS50YWJsZSh0YWJsZS5kaXJ0eVJlY29yZHMpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgIH1cclxufSIsIlxyXG5pbXBvcnQgXCIuL2Nzcy9zaXRlLmNzc1wiXHJcbmltcG9ydCB7IER5bmFtaWNEZW1vIH0gZnJvbSBcIi4vZHluYW1pYy1kZW1vXCI7XHJcbmltcG9ydCB7IFN0YXRpY0RlbW8gfSBmcm9tIFwiLi9zdGF0aWMtZGVtb1wiXHJcblxyXG5leHBvcnQgY2xhc3MgQlNEYXRhVGFibGVEZW1vcyB7XHJcblxyXG4gICAgc3RhdGljIHJ1blN0YXRpY0RlbW8oKSB7XHJcbiAgICAgICAgU3RhdGljRGVtby5ydW4oKTtcclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgcnVuRHluYW1pY0RlbW8oY29udGFpbmVySWQ6IHN0cmluZywgaW5pdERhdGEpIHtcclxuICAgICAgICBEeW5hbWljRGVtby5ydW4oY29udGFpbmVySWQsIGluaXREYXRhKTtcclxuICAgIH1cclxufVxyXG5cclxuXHJcbiJdLCJuYW1lcyI6WyJyb290IiwiZmFjdG9yeSIsImV4cG9ydHMiLCJtb2R1bGUiLCJkZWZpbmUiLCJhbWQiLCJzZWxmIiwidCIsIlN0cmluZyIsInByb3RvdHlwZSIsInRvQ2FtYWxDYXNlIiwidGhpcyIsInJlcGxhY2UiLCJlIiwidG9Mb3dlckNhc2UiLCJ0b1VwcGVyQ2FzZSIsInRvUGFzY2FsQ2FzZSIsInRvUGFzY2FsQ2FzZUpzb24iLCJmb3JtYXQiLCJhcmd1bWVudHMiLCJuIiwibyIsImkiLCJyIiwiZCIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwidmFsdWUiLCJCU0RhdGFUYWJsZSIsImppIiwiQlNEYXRhVGFibGVBY3Rpb25zIiwiQ2kiLCJCU0RhdGFUYWJsZUJhc2UiLCJHbyIsIkJTRGF0YVRhYmxlQm9keSIsIkxpIiwiQlNEYXRhVGFibGVCdXR0b24iLCJyaSIsIkJTRGF0YVRhYmxlQ2VsbCIsInBpIiwiQlNEYXRhVGFibGVDaGVja0JveCIsIlFvIiwiQlNEYXRhVGFibGVIZWFkZXIiLCJBaSIsIkJTRGF0YVRhYmxlSHR0cENsaWVudCIsIm1pIiwiQlNEYXRhVGFibGVJbmZpbml0ZVNjcm9sbCIsIkVpIiwiQlNEYXRhVGFibGVJbnB1dCIsIlhvIiwiQlNEYXRhVGFibGVNYXJrZXIiLCJPaSIsIkJTRGF0YVRhYmxlUGFnaW5hdGlvbiIsInlpIiwiQlNEYXRhVGFibGVQYWdpbmdNZXRhRGF0YSIsImhpIiwiQlNEYXRhVGFibGVSb3ciLCJUaSIsIkJTRGF0YVRhYmxlUm93Q29sbGVjdGlvbiIsIk5pIiwiQlNEYXRhVGFibGVTZWxlY3QiLCJlaSIsIkJTRGF0YVRhYmxlU2VsZWN0T3B0aW9uIiwiWm8iLCJCU0RhdGFUYWJsZVNlbGVjdG9yIiwibGkiLCJCU0RhdGFUYWJsZVNlbGVjdG9yV2luZG93IiwiYWkiLCJCU0RhdGFUYWJsZVNlbGVjdG9yV2luZG93Q29sbGVjdGlvbiIsIk1pIiwiQlNEYXRhVGFibGVUZXh0SW5wdXQiLCJvaSIsIkJTRGF0YVRhYmxlVGV4dElucHV0RXh0IiwiR2kiLCJCU0ZsdWVudEJ1aWxkZXIiLCJXaSIsIkNvb2tpZUhlbHBlciIsIkZvIiwiU2Vzc2lvblN0b3JhZ2VTZXJ2aWNlIiwiJG8iLCJhcHBBY3Rpb25zIiwiVW8iLCJhcHBEYXRhRXZlbnRzIiwiem8iLCJic0RhdGFUYWJsZURpc2NvdmVyeVNlcnZpY2UiLCJxbyIsImRhdGFFdmVudHNTZXJ2aWNlIiwiVm8iLCJhZnRlck1haW4iLCJ3IiwiYWZ0ZXJSZWFkIiwieSIsImFmdGVyV3JpdGUiLCJDIiwiYXBwbHlTdHlsZXMiLCJ4IiwiYXJyb3ciLCJZIiwiYXV0byIsImEiLCJiYXNlUGxhY2VtZW50cyIsImMiLCJiZWZvcmVNYWluIiwiYiIsImJlZm9yZVJlYWQiLCJfIiwiYmVmb3JlV3JpdGUiLCJPIiwiYm90dG9tIiwiY2xpcHBpbmdQYXJlbnRzIiwiY29tcHV0ZVN0eWxlcyIsInR0IiwiY3JlYXRlUG9wcGVyIiwiTnQiLCJjcmVhdGVQb3BwZXJCYXNlIiwiUnQiLCJjcmVhdGVQb3BwZXJMaXRlIiwiSXQiLCJkZXRlY3RPdmVyZmxvdyIsIm10IiwiZW5kIiwidSIsImV2ZW50TGlzdGVuZXJzIiwibnQiLCJmbGlwIiwiZ3QiLCJoaWRlIiwieXQiLCJsZWZ0IiwicyIsIm1haW4iLCJFIiwibW9kaWZpZXJQaGFzZXMiLCJTIiwib2Zmc2V0IiwiYnQiLCJwbGFjZW1lbnRzIiwiZyIsInBvcHBlciIsImgiLCJwb3BwZXJHZW5lcmF0b3IiLCJUdCIsInBvcHBlck9mZnNldHMiLCJFdCIsInByZXZlbnRPdmVyZmxvdyIsInd0IiwicmVhZCIsInYiLCJyZWZlcmVuY2UiLCJmIiwicmlnaHQiLCJzdGFydCIsImwiLCJ0b3AiLCJ2YXJpYXRpb25QbGFjZW1lbnRzIiwibSIsInZpZXdwb3J0IiwicCIsIndyaXRlIiwiRCIsInJlZHVjZSIsImNvbmNhdCIsIlQiLCJub2RlTmFtZSIsIlIiLCJ3aW5kb3ciLCJ0b1N0cmluZyIsIm93bmVyRG9jdW1lbnQiLCJkZWZhdWx0VmlldyIsIk4iLCJFbGVtZW50IiwiSSIsIkhUTUxFbGVtZW50IiwiQSIsIlNoYWRvd1Jvb3QiLCJuYW1lIiwiZW5hYmxlZCIsInBoYXNlIiwiZm4iLCJzdGF0ZSIsImtleXMiLCJlbGVtZW50cyIsImZvckVhY2giLCJzdHlsZXMiLCJhdHRyaWJ1dGVzIiwiYXNzaWduIiwic3R5bGUiLCJyZW1vdmVBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGUiLCJlZmZlY3QiLCJwb3NpdGlvbiIsIm9wdGlvbnMiLCJzdHJhdGVneSIsIm1hcmdpbiIsInJlcXVpcmVzIiwiTCIsInNwbGl0IiwiUCIsIk1hdGgiLCJtYXgiLCJrIiwibWluIiwiaiIsInJvdW5kIiwiSCIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsIm9mZnNldEhlaWdodCIsIm9mZnNldFdpZHRoIiwid2lkdGgiLCJoZWlnaHQiLCJNIiwiYWJzIiwib2Zmc2V0TGVmdCIsIm9mZnNldFRvcCIsIkIiLCJnZXRSb290Tm9kZSIsImNvbnRhaW5zIiwiaXNTYW1lTm9kZSIsInBhcmVudE5vZGUiLCJob3N0IiwiRyIsImdldENvbXB1dGVkU3R5bGUiLCJXIiwiaW5kZXhPZiIsIkYiLCJkb2N1bWVudCIsImRvY3VtZW50RWxlbWVudCIsIlUiLCJhc3NpZ25lZFNsb3QiLCJ6Iiwib2Zmc2V0UGFyZW50IiwiViIsIm5hdmlnYXRvciIsInVzZXJBZ2VudCIsInRyYW5zZm9ybSIsInBlcnNwZWN0aXZlIiwiY29udGFpbiIsIndpbGxDaGFuZ2UiLCJmaWx0ZXIiLCIkIiwicSIsIksiLCJYIiwibW9kaWZpZXJzRGF0YSIsInBsYWNlbWVudCIsInJlY3RzIiwicGFkZGluZyIsImNsaWVudEhlaWdodCIsImNsaWVudFdpZHRoIiwiY2VudGVyT2Zmc2V0IiwiZWxlbWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJyZXF1aXJlc0lmRXhpc3RzIiwiUSIsIkoiLCJaIiwicG9wcGVyUmVjdCIsInZhcmlhdGlvbiIsIm9mZnNldHMiLCJncHVBY2NlbGVyYXRpb24iLCJhZGFwdGl2ZSIsInJvdW5kT2Zmc2V0cyIsImlzRml4ZWQiLCJ2aXN1YWxWaWV3cG9ydCIsImRldmljZVBpeGVsUmF0aW8iLCJkYXRhIiwiZXQiLCJwYXNzaXZlIiwiaW5zdGFuY2UiLCJzY3JvbGwiLCJyZXNpemUiLCJzY3JvbGxQYXJlbnRzIiwiYWRkRXZlbnRMaXN0ZW5lciIsInVwZGF0ZSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJvdCIsIml0IiwicnQiLCJzdCIsImF0Iiwic2Nyb2xsTGVmdCIsInBhZ2VYT2Zmc2V0Iiwic2Nyb2xsVG9wIiwicGFnZVlPZmZzZXQiLCJjdCIsImx0Iiwib3ZlcmZsb3ciLCJvdmVyZmxvd1giLCJvdmVyZmxvd1kiLCJ0ZXN0IiwidXQiLCJib2R5IiwiZHQiLCJwdCIsImh0IiwiY2xpZW50VG9wIiwiY2xpZW50TGVmdCIsInNjcm9sbFdpZHRoIiwic2Nyb2xsSGVpZ2h0IiwiZGlyZWN0aW9uIiwiZnQiLCJib3VuZGFyeSIsInJvb3RCb3VuZGFyeSIsImVsZW1lbnRDb250ZXh0IiwiYWx0Qm91bmRhcnkiLCJjb250ZXh0RWxlbWVudCIsIl9za2lwIiwibWFpbkF4aXMiLCJhbHRBeGlzIiwiZmFsbGJhY2tQbGFjZW1lbnRzIiwiZmxpcFZhcmlhdGlvbnMiLCJhbGxvd2VkQXV0b1BsYWNlbWVudHMiLCJsZW5ndGgiLCJzb3J0IiwiTWFwIiwicHVzaCIsImV2ZXJ5Iiwic2V0IiwiZmluZCIsInNsaWNlIiwicmVzZXQiLCJfdCIsInZ0Iiwic29tZSIsInJlZmVyZW5jZUNsaXBwaW5nT2Zmc2V0cyIsInBvcHBlckVzY2FwZU9mZnNldHMiLCJpc1JlZmVyZW5jZUhpZGRlbiIsImhhc1BvcHBlckVzY2FwZWQiLCJ0ZXRoZXIiLCJ0ZXRoZXJPZmZzZXQiLCJPdCIsIkR0IiwiU2V0IiwiYWRkIiwiaGFzIiwiQ3QiLCJtb2RpZmllcnMiLCJTdCIsIkFycmF5IiwiZGVmYXVsdE1vZGlmaWVycyIsImRlZmF1bHRPcHRpb25zIiwib3JkZXJlZE1vZGlmaWVycyIsInNldE9wdGlvbnMiLCJtYXAiLCJmb3JjZVVwZGF0ZSIsIlByb21pc2UiLCJyZXNvbHZlIiwidGhlbiIsImRlc3Ryb3kiLCJvbkZpcnN0VXBkYXRlIiwiQXQiLCJ4dCIsImdldEF0dHJpYnV0ZSIsImluY2x1ZGVzIiwic3RhcnRzV2l0aCIsInRyaW0iLCJMdCIsIlB0Iiwia3QiLCJkaXNwYXRjaEV2ZW50IiwiRXZlbnQiLCJqdCIsImpxdWVyeSIsIm5vZGVUeXBlIiwiSHQiLCJNdCIsIm1hdGNoIiwiUmVnRXhwIiwiVHlwZUVycm9yIiwiQnQiLCJnZXRDbGllbnRSZWN0cyIsImdldFByb3BlcnR5VmFsdWUiLCJHdCIsIk5vZGUiLCJFTEVNRU5UX05PREUiLCJjbGFzc0xpc3QiLCJkaXNhYmxlZCIsImhhc0F0dHJpYnV0ZSIsIld0IiwiYXR0YWNoU2hhZG93IiwiRnQiLCJVdCIsInp0IiwialF1ZXJ5IiwiVnQiLCIkdCIsImRpciIsInF0IiwiTkFNRSIsImpRdWVyeUludGVyZmFjZSIsIkNvbnN0cnVjdG9yIiwibm9Db25mbGljdCIsInJlYWR5U3RhdGUiLCJLdCIsIlh0IiwidHJhbnNpdGlvbkR1cmF0aW9uIiwidHJhbnNpdGlvbkRlbGF5IiwiTnVtYmVyIiwicGFyc2VGbG9hdCIsInRhcmdldCIsInNldFRpbWVvdXQiLCJZdCIsIlF0IiwiSnQiLCJadCIsInRlIiwiZWUiLCJuZSIsIm1vdXNlZW50ZXIiLCJtb3VzZWxlYXZlIiwib2UiLCJpZSIsInJlIiwidWlkRXZlbnQiLCJzZSIsImFlIiwib3JpZ2luYWxIYW5kbGVyIiwiZGVsZWdhdGlvblNlbGVjdG9yIiwiY2UiLCJkZSIsImxlIiwicmVsYXRlZFRhcmdldCIsImRlbGVnYXRlVGFyZ2V0Iiwib25lT2ZmIiwicXVlcnlTZWxlY3RvckFsbCIsInBlIiwib2ZmIiwidHlwZSIsImFwcGx5IiwidWUiLCJCb29sZWFuIiwib24iLCJvbmUiLCJ0cmlnZ2VyIiwiaXNQcm9wYWdhdGlvblN0b3BwZWQiLCJpc0ltbWVkaWF0ZVByb3BhZ2F0aW9uU3RvcHBlZCIsImlzRGVmYXVsdFByZXZlbnRlZCIsImNyZWF0ZUV2ZW50IiwiaW5pdEV2ZW50IiwiQ3VzdG9tRXZlbnQiLCJidWJibGVzIiwiY2FuY2VsYWJsZSIsInByZXZlbnREZWZhdWx0IiwiZGVmYXVsdFByZXZlbnRlZCIsImhlIiwiZmUiLCJzaXplIiwiY29uc29sZSIsImVycm9yIiwiZnJvbSIsInJlbW92ZSIsImRlbGV0ZSIsIm1lIiwiY29uc3RydWN0b3IiLCJfZWxlbWVudCIsIkRBVEFfS0VZIiwiZGlzcG9zZSIsIkVWRU5UX0tFWSIsImdldE93blByb3BlcnR5TmFtZXMiLCJfcXVldWVDYWxsYmFjayIsInN0YXRpYyIsImdldEluc3RhbmNlIiwiVkVSU0lPTiIsIkVycm9yIiwiZ2UiLCJ0YWdOYW1lIiwiY2xvc2VzdCIsImdldE9yQ3JlYXRlSW5zdGFuY2UiLCJfZSIsImNsb3NlIiwiX2Rlc3Ryb3lFbGVtZW50IiwiZWFjaCIsInZlIiwieWUiLCJ0b2dnbGUiLCJiZSIsIkVlIiwid2UiLCJzZXREYXRhQXR0cmlidXRlIiwicmVtb3ZlRGF0YUF0dHJpYnV0ZSIsImdldERhdGFBdHRyaWJ1dGVzIiwiZGF0YXNldCIsImNoYXJBdCIsImdldERhdGFBdHRyaWJ1dGUiLCJPZSIsImZpbmRPbmUiLCJjaGlsZHJlbiIsIm1hdGNoZXMiLCJwYXJlbnRzIiwicHJldiIsInByZXZpb3VzRWxlbWVudFNpYmxpbmciLCJuZXh0IiwibmV4dEVsZW1lbnRTaWJsaW5nIiwiZm9jdXNhYmxlQ2hpbGRyZW4iLCJqb2luIiwiRGUiLCJDZSIsImludGVydmFsIiwia2V5Ym9hcmQiLCJzbGlkZSIsInBhdXNlIiwid3JhcCIsInRvdWNoIiwiU2UiLCJUZSIsIlJlIiwiTmUiLCJJZSIsIkFlIiwiQXJyb3dMZWZ0IiwiQXJyb3dSaWdodCIsInhlIiwiTGUiLCJQZSIsImtlIiwic3VwZXIiLCJfaXRlbXMiLCJfaW50ZXJ2YWwiLCJfYWN0aXZlRWxlbWVudCIsIl9pc1BhdXNlZCIsIl9pc1NsaWRpbmciLCJ0b3VjaFRpbWVvdXQiLCJ0b3VjaFN0YXJ0WCIsInRvdWNoRGVsdGFYIiwiX2NvbmZpZyIsIl9nZXRDb25maWciLCJfaW5kaWNhdG9yc0VsZW1lbnQiLCJfdG91Y2hTdXBwb3J0ZWQiLCJtYXhUb3VjaFBvaW50cyIsIl9wb2ludGVyRXZlbnQiLCJQb2ludGVyRXZlbnQiLCJfYWRkRXZlbnRMaXN0ZW5lcnMiLCJEZWZhdWx0IiwiX3NsaWRlIiwibmV4dFdoZW5WaXNpYmxlIiwiaGlkZGVuIiwiY3ljbGUiLCJjbGVhckludGVydmFsIiwiX3VwZGF0ZUludGVydmFsIiwic2V0SW50ZXJ2YWwiLCJ2aXNpYmlsaXR5U3RhdGUiLCJiaW5kIiwidG8iLCJfZ2V0SXRlbUluZGV4IiwiX2hhbmRsZVN3aXBlIiwiX2tleWRvd24iLCJfYWRkVG91Y2hFdmVudExpc3RlbmVycyIsInBvaW50ZXJUeXBlIiwiY2xpZW50WCIsInRvdWNoZXMiLCJjbGVhclRpbWVvdXQiLCJrZXkiLCJfZ2V0SXRlbUJ5T3JkZXIiLCJfdHJpZ2dlclNsaWRlRXZlbnQiLCJfc2V0QWN0aXZlSW5kaWNhdG9yRWxlbWVudCIsInBhcnNlSW50IiwiZGVmYXVsdEludGVydmFsIiwiX2RpcmVjdGlvblRvT3JkZXIiLCJfb3JkZXJUb0RpcmVjdGlvbiIsInJpZGUiLCJjYXJvdXNlbEludGVyZmFjZSIsImRhdGFBcGlDbGlja0hhbmRsZXIiLCJqZSIsIkhlIiwicGFyZW50IiwiTWUiLCJCZSIsIkdlIiwiV2UiLCJGZSIsIlVlIiwiemUiLCJWZSIsIl9pc1RyYW5zaXRpb25pbmciLCJfdHJpZ2dlckFycmF5IiwiX3NlbGVjdG9yIiwiX2luaXRpYWxpemVDaGlsZHJlbiIsIl9hZGRBcmlhQW5kQ29sbGFwc2VkQ2xhc3MiLCJfaXNTaG93biIsInNob3ciLCJfZ2V0RGltZW5zaW9uIiwiJGUiLCJxZSIsIktlIiwiWGUiLCJZZSIsIlFlIiwiSmUiLCJaZSIsInRuIiwiZW4iLCJubiIsInJuIiwic24iLCJhbiIsImNuIiwibG4iLCJ1biIsImRpc3BsYXkiLCJwb3BwZXJDb25maWciLCJhdXRvQ2xvc2UiLCJkbiIsInBuIiwiX3BvcHBlciIsIl9tZW51IiwiX2dldE1lbnVFbGVtZW50IiwiX2luTmF2YmFyIiwiX2RldGVjdE5hdmJhciIsIkRlZmF1bHRUeXBlIiwiZ2V0UGFyZW50RnJvbUVsZW1lbnQiLCJfY3JlYXRlUG9wcGVyIiwiZm9jdXMiLCJfY29tcGxldGVIaWRlIiwiX2dldFBvcHBlckNvbmZpZyIsIl9nZXRQbGFjZW1lbnQiLCJfZ2V0T2Zmc2V0IiwiX3NlbGVjdE1lbnVJdGVtIiwiYnV0dG9uIiwiY29tcG9zZWRQYXRoIiwiY2xpY2tFdmVudCIsInN0b3BQcm9wYWdhdGlvbiIsImNsZWFyTWVudXMiLCJkYXRhQXBpS2V5ZG93bkhhbmRsZXIiLCJobiIsIm1uIiwiZ2V0V2lkdGgiLCJpbm5lcldpZHRoIiwiX2Rpc2FibGVPdmVyRmxvdyIsIl9zZXRFbGVtZW50QXR0cmlidXRlcyIsIl9zYXZlSW5pdGlhbEF0dHJpYnV0ZSIsIl9hcHBseU1hbmlwdWxhdGlvbkNhbGxiYWNrIiwiX3Jlc2V0RWxlbWVudEF0dHJpYnV0ZXMiLCJyZW1vdmVQcm9wZXJ0eSIsImlzT3ZlcmZsb3dpbmciLCJnbiIsImNsYXNzTmFtZSIsImlzVmlzaWJsZSIsImlzQW5pbWF0ZWQiLCJyb290RWxlbWVudCIsImNsaWNrQ2FsbGJhY2siLCJfbiIsInZuIiwieW4iLCJibiIsIl9pc0FwcGVuZGVkIiwiX2FwcGVuZCIsIl9nZXRFbGVtZW50IiwiX2VtdWxhdGVBbmltYXRpb24iLCJjcmVhdGVFbGVtZW50IiwiYXBwZW5kIiwiRW4iLCJ0cmFwRWxlbWVudCIsImF1dG9mb2N1cyIsInduIiwiT24iLCJEbiIsIkNuIiwiX2lzQWN0aXZlIiwiX2xhc3RUYWJOYXZEaXJlY3Rpb24iLCJhY3RpdmF0ZSIsIl9oYW5kbGVGb2N1c2luIiwiX2hhbmRsZUtleWRvd24iLCJkZWFjdGl2YXRlIiwic2hpZnRLZXkiLCJTbiIsIlRuIiwiUm4iLCJiYWNrZHJvcCIsIk5uIiwiSW4iLCJBbiIsInhuIiwiTG4iLCJQbiIsImtuIiwiam4iLCJIbiIsIk1uIiwiQm4iLCJfZGlhbG9nIiwiX2JhY2tkcm9wIiwiX2luaXRpYWxpemVCYWNrRHJvcCIsIl9mb2N1c3RyYXAiLCJfaW5pdGlhbGl6ZUZvY3VzVHJhcCIsIl9pZ25vcmVCYWNrZHJvcENsaWNrIiwiX3Njcm9sbEJhciIsIl9pc0FuaW1hdGVkIiwiX2FkanVzdERpYWxvZyIsIl9zZXRFc2NhcGVFdmVudCIsIl9zZXRSZXNpemVFdmVudCIsIl9zaG93QmFja2Ryb3AiLCJfc2hvd0VsZW1lbnQiLCJfaGlkZU1vZGFsIiwiaGFuZGxlVXBkYXRlIiwiX3RyaWdnZXJCYWNrZHJvcFRyYW5zaXRpb24iLCJfcmVzZXRBZGp1c3RtZW50cyIsImN1cnJlbnRUYXJnZXQiLCJwYWRkaW5nTGVmdCIsInBhZGRpbmdSaWdodCIsIkduIiwiV24iLCJGbiIsIlVuIiwiem4iLCJWbiIsIiRuIiwidmlzaWJpbGl0eSIsImJsdXIiLCJxbiIsIktuIiwiWG4iLCJZbiIsIm5vZGVWYWx1ZSIsIlFuIiwiRE9NUGFyc2VyIiwicGFyc2VGcm9tU3RyaW5nIiwiaW5uZXJIVE1MIiwiSm4iLCJabiIsImFuaW1hdGlvbiIsInRlbXBsYXRlIiwidGl0bGUiLCJkZWxheSIsImh0bWwiLCJzZWxlY3RvciIsImNvbnRhaW5lciIsImN1c3RvbUNsYXNzIiwic2FuaXRpemUiLCJzYW5pdGl6ZUZuIiwiYWxsb3dMaXN0IiwiZW8iLCJBVVRPIiwiVE9QIiwiUklHSFQiLCJCT1RUT00iLCJMRUZUIiwibm8iLCJhcmVhIiwiYnIiLCJjb2wiLCJjb2RlIiwiZGl2IiwiZW0iLCJociIsImgxIiwiaDIiLCJoMyIsImg0IiwiaDUiLCJoNiIsImltZyIsIm9sIiwicHJlIiwic21hbGwiLCJzcGFuIiwic3ViIiwic3VwIiwic3Ryb25nIiwidWwiLCJvbyIsIkhJREUiLCJISURERU4iLCJTSE9XIiwiU0hPV04iLCJJTlNFUlRFRCIsIkNMSUNLIiwiRk9DVVNJTiIsIkZPQ1VTT1VUIiwiTU9VU0VFTlRFUiIsIk1PVVNFTEVBVkUiLCJpbyIsInJvIiwic28iLCJhbyIsImNvIiwibG8iLCJ1byIsInBvIiwiaG8iLCJmbyIsIl9pc0VuYWJsZWQiLCJfdGltZW91dCIsIl9ob3ZlclN0YXRlIiwiX2FjdGl2ZVRyaWdnZXIiLCJ0aXAiLCJfc2V0TGlzdGVuZXJzIiwiZW5hYmxlIiwiZGlzYWJsZSIsInRvZ2dsZUVuYWJsZWQiLCJfaW5pdGlhbGl6ZU9uRGVsZWdhdGVkVGFyZ2V0IiwiY2xpY2siLCJfaXNXaXRoQWN0aXZlVHJpZ2dlciIsIl9lbnRlciIsIl9sZWF2ZSIsImdldFRpcEVsZW1lbnQiLCJfaGlkZU1vZGFsSGFuZGxlciIsIl9kaXNwb3NlUG9wcGVyIiwiaXNXaXRoQ29udGVudCIsImdldFRpdGxlIiwiZmxvb3IiLCJyYW5kb20iLCJnZXRFbGVtZW50QnlJZCIsIl9nZXRBdHRhY2htZW50IiwiX2FkZEF0dGFjaG1lbnRDbGFzcyIsIl9yZXNvbHZlUG9zc2libGVGdW5jdGlvbiIsImhvdmVyIiwiX2NsZWFuVGlwQ2xhc3MiLCJzZXRDb250ZW50IiwiX3Nhbml0aXplQW5kU2V0Q29udGVudCIsInNldEVsZW1lbnRDb250ZW50IiwidGV4dENvbnRlbnQiLCJ1cGRhdGVBdHRhY2htZW50IiwiX2dldERlbGVnYXRlQ29uZmlnIiwiX2hhbmRsZVBvcHBlclBsYWNlbWVudENoYW5nZSIsIl9nZXRCYXNpY0NsYXNzUHJlZml4IiwiX2ZpeFRpdGxlIiwiY29udGVudCIsIm1vIiwiZ28iLCJfbyIsInZvIiwiX2dldENvbnRlbnQiLCJ5byIsImJvIiwibWV0aG9kIiwiRW8iLCJ3byIsIk9vIiwiRG8iLCJDbyIsIl9zY3JvbGxFbGVtZW50IiwiX29mZnNldHMiLCJfdGFyZ2V0cyIsIl9hY3RpdmVUYXJnZXQiLCJfc2Nyb2xsSGVpZ2h0IiwiX3Byb2Nlc3MiLCJyZWZyZXNoIiwiX2dldFNjcm9sbFRvcCIsIl9nZXRTY3JvbGxIZWlnaHQiLCJfZ2V0T2Zmc2V0SGVpZ2h0IiwiaW5uZXJIZWlnaHQiLCJfYWN0aXZhdGUiLCJfY2xlYXIiLCJTbyIsIlRvIiwiUm8iLCJObyIsIklvIiwiQW8iLCJfdHJhbnNpdGlvbkNvbXBsZXRlIiwieG8iLCJMbyIsIlBvIiwia28iLCJqbyIsImF1dG9oaWRlIiwiSG8iLCJNbyIsIl9oYXNNb3VzZUludGVyYWN0aW9uIiwiX2hhc0tleWJvYXJkSW50ZXJhY3Rpb24iLCJfY2xlYXJUaW1lb3V0IiwiX21heWJlU2NoZWR1bGVIaWRlIiwiX29uSW50ZXJhY3Rpb24iLCJCbyIsImFkZEV2ZW50SGFuZGxlciIsImNvbmZpZ3VyYWJsZSIsIl9kYXRhU291cmNlTmFtZSIsIl9pc1JlYWRPbmx5IiwiZ2V0Q3NzIiwic2V0Q3NzIiwiaXNFbXB0eU9iaiIsInByb3BzIiwicHJvcCIsImdldFByb3AiLCJmaW5kRWxlbWVudHMiLCJmaW5kQnlJZCIsInJlbW92ZUVsZW1lbnQiLCJwYXJlbnRFbGVtZW50IiwicmVtb3ZlQ2hpbGQiLCJhZGRDbGFzcyIsInJlbW92ZUNsYXNzIiwiaGFzQ2xhc3MiLCJoYXNDbGFzc2VzIiwic2V0VGV4dCIsImdldFRleHQiLCJhcHBlbmRDaGlsZCIsImNsb25lIiwiY2xvbmVOb2RlIiwic2hDbG9uZSIsImNyZWF0ZSIsImdldFByb3RvdHlwZU9mIiwiY2hpbGRyZW5Ob2RlcyIsImFkZERyYWdIYW5kbGVycyIsImRyYWdTdGFydCIsImRyYWdMZWF2ZSIsImRyYWdFbnRlciIsImRyYWdPdmVyIiwiZHJhZ0VuZCIsImRyb3AiLCJzaWJsaW5ncyIsImNoaWxkTm9kZXMiLCJXbyIsImNvb2tpZSIsImRlY29kZVVSSUNvbXBvbmVudCIsImRheXMiLCJlbnRyaWVzIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiZ2V0SlNPTiIsIkpTT04iLCJwYXJzZSIsInNldEpTT04iLCJzdHJpbmdpZnkiLCJDT0xfU09SVElORyIsIkNPTF9SRVNJWkVEIiwiQ09MX1NIT1dfSElERSIsIkNPTF9SRU9SREVSIiwiR1JJRF9EQVRBIiwiT05fTkVYVF9SRUNPUkQiLCJPTl9QUkVWX1JFQ09SRCIsIk9OX1NBVkVfUkVDT1JEIiwiT05fREVMRVRFX1JFQ09SRCIsIk9OX0xBU1RfUkVDT1JEIiwiT05fRklSU1RfUkVDT1JEIiwiT05fQUREX1JFQ09SRCIsIk9OX0ZFVENIX1JFQ09SRCIsIk9OX0ZFVENIX1JFQ09SRF9FUlJPUiIsIk9OX0ZFVENIX0dSSURfUkVDT1JEIiwiT05fRkVUQ0hfR1JJRF9SRUNPUkRfRVJST1IiLCJPTl9OQVZJR0FUSU5HX1JFQ09SRCIsIk9OX0dSSURfVVBEQVRFRCIsIk9OX1NBVkVfRVJST1IiLCJPTl9TT1JUSU5HX1JFUVVFU1RFRCIsIk9OX0NPTFNfUkVPUkRFUkVEIiwiT05fR1JJRF9EQVRBX0JPVU5EIiwiT05fR1JJRF9DT05GSUdfVVBEQVRFRCIsIk9OX1BBR0VfUkVBRFkiLCJPTl9ST1dfVVBEQVRFRCIsIk9OX0ZJRUxEX1VQREFURUQiLCJPTl9ST1dfRE9VQkxFX0NMSUNLRUQiLCJjYWxsYmFja3MiLCJyZWdpc3RlcldpblBvcFN0YXRlIiwib25wb3BzdGF0ZSIsImV2ZW50RGF0YSIsImxvZyIsIkV2ZW50RGF0YSIsIlNraXBQdXNoIiwiRGF0YVNvdXJjZU5hbWUiLCJFbWl0IiwiRXZlbnROYW1lIiwiVmVyaWZ5RGF0YVNvdXJjZU5hbWUiLCJDYWxsYmFjayIsIlVuc3Vic2NyaWJlIiwiS2V5IiwiU3Vic2NyaWJlIiwiYWRkSXRlbSIsImV4cGlyeSIsImdldFRpbWUiLCJzZXNzaW9uU3RvcmFnZSIsInNldEl0ZW0iLCJhcHBlbmRJdGVtIiwiZ2V0SXRlbVJhdyIsIkRhdGUiLCJjcmVhdGVFeHBpcnlLZXkiLCJnZXRJdGVtIiwibm93IiwicmVtb3ZlSXRlbSIsInJlbW92ZUFsbCIsIkRhdGFUYWJsZXMiLCJBZGQiLCJHZXRBbGwiLCJpc1JlYWRPbmx5IiwiZGF0YVNvdXJjZU5hbWUiLCJEYXRhIiwiZGlydHlSZWNvcmRzIiwiR2V0QnlEU05hbWUiLCJLbyIsInNldFByb3RvdHlwZU9mIiwiX19wcm90b19fIiwibm90aWZ5TGlzdGVuZXJzIiwicmVuZGVyIiwiSW5wdXRUeXBlIiwiaWQiLCJFbGVtZW50SWQiLCJNb2RlbE5hbWUiLCJUaXRsZSIsIkhUTUxJbnB1dEVsZW1lbnQiLCJjaGVja2VkIiwidmFsdWVBc051bWJlciIsImNoYW5nZSIsInZhbCIsInJlYWRPbmx5IiwiSFRNTFNlbGVjdEVsZW1lbnQiLCJhZGREb3VibGVDbGlja0V2ZW50IiwiWW8iLCJKbyIsInRleHQiLCJpc1NlbGVjdGVkIiwic2VsZWN0ZWQiLCJ0aSIsIlNlbGVjdE9wdGlvbnMiLCJuaSIsIkNsYXNzZXMiLCJwbGFjZUhvbGRlciIsIlBsYWNlSG9sZGVyIiwicGxhY2Vob2xkZXIiLCJpaSIsIkljb24iLCJIYW5kbGVyIiwiYWRkQ2xpY2tIYW5kbGVyIiwic2kiLCJwYXJlbnRDb250YWluZXJJZCIsIkNvbnRhaW5lcklkIiwibW9kYWxJZCIsIm1vZGFsVGl0bGVJZCIsImNvbnRhaW5lcklkIiwiZ3JpZElkIiwiZ3JpZCIsInJlbmRlckdyaWQiLCJvbkl0ZW1TZWxlY3RlZCIsInNlbGVjdG9yTW9kYWwiLCJjbGVhckdyaWQiLCJpbmZpbml0ZVNjcm9sbGVyIiwiY3VycmVudFBhZ2UiLCJmZXRjaEdyaWRQYWdlIiwib25XaW5kb3dTaG93biIsImlzUmVtb3RlIiwidXJsIiwiVXJsQ2IiLCJjb2xEZWZpbml0aW9uIiwiR3JpZENvbHMiLCJkYXRhU291cmNlIiwiaXNSZWFkb25seSIsImVuYWJsZUluZmluaXRlU2Nyb2xsIiwiUmVnaXN0ZXJDYWxsYmFja3MiLCJyZW1vdmVIYW5kbGVyIiwiUmVuZGVyIiwiZ3JpZEFjdGlvbnMiLCJ2aXNpYmxlIiwiY2kiLCJzZWxlY3RvcldpbmRvdyIsImdldFNlbGVjdGVkUm93IiwiZ2V0SW5wdXRzIiwiaXNLZXkiLCJ0eHRFbGVtZW50IiwiYnRuRWxlbWVudCIsImFkZEhhbmRsZXIiLCJjbG9uZUNvbnRleHQiLCJ1aSIsImRpIiwiaXNIZWFkZXIiLCJSb3dTcGFuIiwiQ29sU3BhbiIsIkRpc3BsYXlOYW1lIiwiYWRkSW5wdXRDb250cm9sIiwiUHJvcE5hbWUiLCJEYXRhVHlwZSIsIlNlbGVjdExpc3QiLCJTZWxlY3RvckRhdGFDQiIsIlNlbGVjdG9yQ29scyIsIklzS2V5IiwicmVhZG9ubHkiLCJJc1JlYWRPbmx5IiwiZ2V0SW5wdXRDb250cm9scyIsImdldENlbGxUZXh0IiwicGFnZUluZGV4IiwicGFnZVNpemUiLCJ0b3RhbFJlY29yZHMiLCJ0b3RhbFBhZ2VzIiwiY2VpbCIsImZpIiwiZW5hYmxlQ2FjaGluZyIsIm5vdGlmeVJlc3BvbnNlIiwiaGVhZGVycyIsImZldGNoIiwianNvbiIsImNhdGNoIiwibm90aWZ5RXJyb3IiLCJpdGVtcyIsIk1ldGFEYXRhIiwibWV0YURhdGEiLCJSZWNvcmRJZCIsInJlY29yZElkIiwiZ2kiLCJfaSIsImhyZWYiLCJjbGFzc2VzIiwiY2xpY2tIYW5kbGVyIiwidmkiLCJwYWdlTGlua3MiLCJsaXN0SWQiLCJuZXh0UGFnZUNhbGxiYWNrIiwiZm9jdXNQYWdlSW5kZXgiLCJjbGVhciIsInJlcGxhY2VDaGlsZHJlbiIsImJpIiwiZ3JpZEVsZW1lbnQiLCJodHRwQ2xpZW50Iiwic19hcmVhIiwib2JzZXJ2ZXIiLCJpbml0RGF0YSIsImluaXRNZXRhRGF0YSIsIm9ic2VydmVyQ0IiLCJpc0ludGVyc2VjdGluZyIsIm9ic2VydmUiLCJ1bm9ic2VydmUiLCJyb290TWFyZ2luIiwidGhyZXNob2xkIiwidHJhY2tWaXNpYmlsaXR5IiwiSW50ZXJzZWN0aW9uT2JzZXJ2ZXIiLCJ3aSIsIkRpIiwiYWRkQWN0aW9uIiwiZ2V0QnV0dG9uIiwiYWRkRGVsZXRlQWN0aW9uIiwiYWRkTmV3UmVjb3JkQWN0aW9uIiwiYWRkR3JpZFNldHRpbmdzQWN0aW9uIiwiU2kiLCJjZWxscyIsImdyaWRIZWFkZXIiLCJpc1RlbXBsYXRlUm93IiwiY3NzIiwiYWRkQ2VsbCIsImFkZENlbGxzIiwiZm9jdXNSb3ciLCJjcmVhdGVJbnB1dEZvciIsImNyZWF0ZUhlYWRlckZvciIsImdldFZpc2libGVJbnB1dHMiLCJnZXRSb3dEYXRhRXh0IiwiclR5cGUiLCJnZXRSb3dEYXRhIiwicm93Q2F0ZWdvcnkiLCJjbGllbnRSb3dOdW1iZXIiLCJyb3dJbmRleCIsIlJpIiwicm93cyIsImFkZFJvdyIsImdldE5leHRSb3dJbmRleCIsImdldFZpc2libGVSb3dzIiwiZ2V0R3JpZFRpdGxlc1JvdyIsIklpIiwieGkiLCJyb3dTaWJsaW5ncyIsImdldFRlbXBsYXRlUm93IiwiZ2V0RGlydHlSb3dzIiwiaXNSb3dEaXJ0eSIsImdldERpcnR5UmVjb3JkcyIsImdldEFsbFJlY29yZHMiLCJtYXJrRGVsZXRlZCIsInJlbW92ZVJvdyIsInNwbGljZSIsIlBpIiwia2kiLCJoZWFkIiwicGFnaW5hdG9yIiwicGFnaW5hdG9yQ2FsbGJhY2siLCJjYWNoZVJlc3BvbnNlcyIsImRpc2NvdmVyYWJsZSIsImNvbnRhaW5lckVsZW1lbnQiLCJDcmVhdGUiLCJzZXREaXNjb3ZlcmFibGUiLCJhcHBlbmRIZWFkZXIiLCJhcHBlbmRCb2R5IiwiZ2V0R3JpZFNldHRpbmdzIiwiYXBwbHlDb2xPcmRlcmluZyIsImFkZFNvcnRpbmciLCJhcHBseUNvbFNldHRpbmdzIiwiYXBwZW5kQWN0aW9ucyIsImFkZEluZmluaXRlU2Nyb2xsIiwiYWRkRW1wdHlSb3ciLCJBc2MiLCJWaXNpYmxlIiwiV2lkdGgiLCJQb3NpdGlvbiIsImJpbmREYXRhU291cmNlIiwiZ2V0UGFnZU9mZmxpbmVDQiIsImFkZE5ld1JvdyIsImJpbmRQYWdpbmF0b3IiLCJ0b0RhdGVEaXNwbGF5Rm9ybWF0IiwiR3JpZCIsIlJvdyIsIkZpZWxkIiwib25JbnB1dEtleURvd24iLCJnZXREYXRlIiwiZ2V0TW9udGgiLCJnZXRGdWxsWWVhciIsInRvVGltZURpc3BsYXlGb3JtYXQiLCJnZXRIb3VycyIsImdldE1pbnV0ZXMiLCJ3aGljaCIsImNyZWF0ZUVtcHR5Um93RGF0YSIsIm9uSGVhZGVyTmV4dCIsInJlc2V0U29ydGluZyIsIm9uU2F2ZVJlY29yZCIsIm9uU2F2ZUVycm9yIiwicmVzcG9uc2VKU09OIiwiZ2V0Um93QnlJbmRleCIsInNvcnRUYWJsZSIsImxvY2FsZUNvbXBhcmUiLCJDdXJyZW50Q29sIiwiQWN0aW9uIiwib25Tb3J0aW5nUmVxdWVzdCIsIm9uQ29sc1Jlb3JkZXJlZCIsIm9uRmV0Y2hEYXRhIiwib25GZXRjaERhdGFFcnJvciIsIm9uR3JpZENvbmZpZ3VyYXRpb25DaGFuZ2VkIiwib25HcmlkRGF0YUJvdW5kIiwiY29uZmlndXJhYmxlR3JpZCIsInJlc2l6YWJsZUdyaWQiLCJwYWdlWCIsImJvcmRlclJpZ2h0IiwiY3Vyc29yIiwidXNlclNlbGVjdCIsImVuYWJsZUNvbHVtblJlb3JkZXJpbmciLCJkcmFnZ2FibGUiLCJvcGFjaXR5IiwibHRyIiwicnRsIiwiQXNjZW5kaW5nIiwic2VjdXJlIiwiU2FtZVNpdGUiLCJIaSIsImZpbmRJdGVtIiwiQmkiLCJDcmVhdGVCdWlsZGVyIiwiQnVpbGQiLCJTZXRJZCIsIlNldENvbnRhaW5lcklkIiwiU2V0RGF0YVNvdXJjZU5hbWUiLCJJc1JlbW90ZSIsIklzUmVhZG9ubHkiLCJDYWNoZVJlc3BvbnNlcyIsIkVuYWJsZUluZmluaXRlU2Nyb2xsIiwiTmV4dFBhZ2VVcmxDYWxsYmFjayIsIkdldE5leHRQYWdlT2ZmbGluZUNhbGxiYWNrIiwiQWRkQ29sdW1uIiwiQWRkSW5pdERhdGEiLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyIsIlVSTCIsIl9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzJfX18iLCJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzBfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMl9fXyIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJsaXN0IiwiaXRlbSIsIm5lZWRMYXllciIsIm1vZHVsZXMiLCJtZWRpYSIsImRlZHVwZSIsInN1cHBvcnRzIiwibGF5ZXIiLCJ1bmRlZmluZWQiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiX2siLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsImhhc2giLCJuZWVkUXVvdGVzIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsInNvdXJjZU1hcHBpbmciLCJzb3VyY2VVUkxzIiwic291cmNlcyIsInNvdXJjZSIsInNvdXJjZVJvb3QiLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImJhc2UiLCJjb3VudCIsImluZGV4QnlJZGVudGlmaWVyIiwib2JqIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4IiwiYXBpIiwiZG9tQVBJIiwibmV3T2JqIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsImluZGV4IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2luZGV4IiwibWVtbyIsImluc2VydCIsInN0eWxlVGFyZ2V0IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJnZXRUYXJnZXQiLCJzZXRBdHRyaWJ1dGVzIiwic3R5bGVFbGVtZW50Iiwibm9uY2UiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZVRhZ1RyYW5zZm9ybSIsInJlbW92ZVN0eWxlRWxlbWVudCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiZmlyc3RDaGlsZCIsImNyZWF0ZVRleHROb2RlIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsImdldHRlciIsImRlZmluaXRpb24iLCJiYXNlVVJJIiwibG9jYXRpb24iLCJydW4iLCJkYXRhVGFibGUiLCJwYWdlIiwiY29uZmlnIiwic2VuZGVyIiwiZXYiLCJmaWVsZCIsImZpZWxkTmFtZSIsInJvdyIsImV4dENvc3QiLCJxdHkiLCJjb3N0IiwicmVjb3JkcyIsImFsbFJlY29yZHMiLCJ0YWJsZSIsInRhYmxlQnVpbGRlciIsInJlY29yZCIsInJ1blN0YXRpY0RlbW8iLCJTdGF0aWNEZW1vIiwicnVuRHluYW1pY0RlbW8iLCJEeW5hbWljRGVtbyJdLCJzb3VyY2VSb290IjoiIn0=